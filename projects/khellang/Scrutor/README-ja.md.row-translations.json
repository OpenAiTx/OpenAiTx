[
  {
    "row": 1,
    "rowsha": "prXYJgj5MZJdNSKrsn7fp+CuyF11CvWynZnOUoA72wc=",
    "originContent": "# Scrutor [![Build status](https://ci.appveyor.com/api/projects/status/j00uyvqnm54rdlkb?svg=true)](https://ci.appveyor.com/project/khellang/scrutor) [![NuGet Package](https://img.shields.io/nuget/v/Scrutor.svg)](https://www.nuget.org/packages/Scrutor)",
    "translatedContent": "<translate-content># Scrutor [![Build status](https://ci.appveyor.com/api/projects/status/j00uyvqnm54rdlkb?svg=true)](https://ci.appveyor.com/project/khellang/scrutor) [![NuGet Package](https://img.shields.io/nuget/v/Scrutor.svg)](https://www.nuget.org/packages/Scrutor)"
  },
  {
    "row": 2,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 3,
    "rowsha": "s5dZA/Rp4vP6UjlWSd3vDjW1LbnF8yrhLIeGkzqM/l8=",
    "originContent": "> Scrutor - I search or examine thoroughly; I probe, investigate or scrutinize  ",
    "translatedContent": "> Scrutor - 徹底的に探すまたは調査すること；探り、調査、または精査すること  "
  },
  {
    "row": 4,
    "rowsha": "xgy8nYnyBH9zLgbbGG1m2CQoxCQkTr75RhL9p5mdqxc=",
    "originContent": "> From scrūta, as the original sense of the verb was to search through trash. - https://en.wiktionary.org/wiki/scrutor",
    "translatedContent": "> 動詞の元の意味であるゴミを探ることから。 - https://en.wiktionary.org/wiki/scrutor"
  },
  {
    "row": 5,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 6,
    "rowsha": "ggQBbAGeRa6iJgKSB0F/kDYHT32sjkvV4Gwxr4KFVmg=",
    "originContent": "Assembly scanning and decoration extensions for Microsoft.Extensions.DependencyInjection",
    "translatedContent": "Microsoft.Extensions.DependencyInjection 用のアセンブリスキャンおよび装飾拡張"
  },
  {
    "row": 7,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 8,
    "rowsha": "oV0SUDvwD2VN8Gi9nlr2JZ2xcDrASmE2W5kc5SVX5eo=",
    "originContent": "## Installation",
    "translatedContent": "## インストール"
  },
  {
    "row": 9,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 10,
    "rowsha": "VLKJEm3EOENfT6BLeNYJuv662X//7hZU6fZvO4LbZqo=",
    "originContent": "Install the [Scrutor NuGet Package](https://www.nuget.org/packages/Scrutor).",
    "translatedContent": "[Scrutor NuGet パッケージ](https://www.nuget.org/packages/Scrutor) をインストールしてください。"
  },
  {
    "row": 11,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 12,
    "rowsha": "Y6YUXbmWFpDy2xZ5t6/VpvAq0xrRhzigWrkpXcihScA=",
    "originContent": "### Package Manager Console",
    "translatedContent": "### パッケージマネージャーコンソール"
  },
  {
    "row": 13,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 14,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 15,
    "rowsha": "5/F/hnKaFYV2OXCZxQ2aUJlImVpboC8jroIpJPc1fY0=",
    "originContent": "Install-Package Scrutor",
    "translatedContent": "Install-Package Scrutor"
  },
  {
    "row": 16,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 17,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### .NET Core CLI"
  },
  {
    "row": 18,
    "rowsha": "PYYUaVIWO1gif/PDGLHK99IpfZz3BJWPGV/MNOnuYBo=",
    "originContent": "### .NET Core CLI",
    "translatedContent": ""
  },
  {
    "row": 19,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 20,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 21,
    "rowsha": "ui20VilzFGXOMPgf8+8gdcZ7SD3dewXoMZNUz0MnfkQ=",
    "originContent": "dotnet add package Scrutor",
    "translatedContent": "dotnet add package Scrutor"
  },
  {
    "row": 22,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 23,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "<translate-content>"
  },
  {
    "row": 24,
    "rowsha": "Y7/WGgVhslWiyqCi463Qkcp+Mn8voGpAfLsv80G4WNg=",
    "originContent": "## Usage",
    "translatedContent": "## 使用法"
  },
  {
    "row": 25,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 26,
    "rowsha": "yir6I5XXrYLPrmHzGshIZSmu7amMDWJF7RahwwundOc=",
    "originContent": "The library adds two extension methods to `IServiceCollection`:",
    "translatedContent": "このライブラリは `IServiceCollection` に2つの拡張メソッドを追加します:"
  },
  {
    "row": 27,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 28,
    "rowsha": "NsHz3UsdBJ7fUgcbCcorSsfMHaLzocJjwyqEELw2WS0=",
    "originContent": "* `Scan` - This is the entry point to set up your assembly scanning.",
    "translatedContent": "* `Scan` - アセンブリスキャンの設定を開始するためのエントリーポイントです。"
  },
  {
    "row": 29,
    "rowsha": "FisRc6lhmnV3j4KWJYe9vi1SyTDuCDahI70dRLfBHPA=",
    "originContent": "* `Decorate` - This method is used to decorate already registered services.",
    "translatedContent": "* `Decorate` - 既に登録されたサービスを装飾するために使用されるメソッドです。"
  },
  {
    "row": 30,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 31,
    "rowsha": "pB8JKwMYH0xq9dGJrcg6NlP6haSoMuac3VgN5BI8Y9U=",
    "originContent": "See **Examples** below for usage examples.",
    "translatedContent": "使用例については、以下の**Examples**を参照してください。"
  },
  {
    "row": 32,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 33,
    "rowsha": "DRmrRjGXhXaABVNjE/Ar07m3eartgu6sW/en95atPvE=",
    "originContent": "## Examples",
    "translatedContent": "## Examples"
  },
  {
    "row": 34,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 35,
    "rowsha": "lqWbSHw7Eb6493O6vG1OPJO687qgP7Zp3vWisVA/64g=",
    "originContent": "### Scanning",
    "translatedContent": "### スキャン"
  },
  {
    "row": 36,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "</translate-content>"
  },
  {
    "row": 37,
    "rowsha": "DTYjJUoTRRqUO0UnUYV/AGNkCT3MDXXS9Vynilr5bGs=",
    "originContent": "```csharp",
    "translatedContent": "```csharp"
  },
  {
    "row": 38,
    "rowsha": "m7pMdPmyV/au6B9mvjGYw9NLT5ztZxtYTfGiO8rC6WY=",
    "originContent": "var collection = new ServiceCollection();",
    "translatedContent": "var collection = new ServiceCollection();"
  },
  {
    "row": 39,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 40,
    "rowsha": "TJPgCDMxAa5R8UU2cC83bTVdz86VWEcDpmEhtlQKo9M=",
    "originContent": "collection.Scan(scan => scan",
    "translatedContent": "collection.Scan(scan => scan"
  },
  {
    "row": 41,
    "rowsha": "lc0HrLpKEKwa1VfuPLbei2+ei45OTXmMKG1lIXX0WRw=",
    "originContent": "     // We start out with all types in the assembly of ITransientService",
    "translatedContent": "     // We start out with all types in the assembly of ITransientService"
  },
  {
    "row": 42,
    "rowsha": "rNMlVhzEzEzcEujKRlRr+lTUWcGnly6DTeGLg2V9RyY=",
    "originContent": "    .FromAssemblyOf<ITransientService>()",
    "translatedContent": "    .FromAssemblyOf<ITransientService>()"
  },
  {
    "row": 43,
    "rowsha": "6ezzMhvDx1LiPnKqKljgWxI6ZslVDlDuQov3vS42vPs=",
    "originContent": "        // AddClasses starts out with all public, non-abstract types in this assembly.",
    "translatedContent": "        // AddClasses starts out with all public, non-abstract types in this assembly."
  },
  {
    "row": 44,
    "rowsha": "aKWkol/EQdCWeCCU6g+OtRSuVNENPW0oOILVONU+0zE=",
    "originContent": "        // These types are then filtered by the delegate passed to the method.",
    "translatedContent": "        // These types are then filtered by the delegate passed to the method."
  },
  {
    "row": 45,
    "rowsha": "OwUlD1+/dQ+AIFdijDuLQykiFifSqYo3KUQOIJZ/xds=",
    "originContent": "        // In this case, we filter out only the classes that are assignable to ITransientService.",
    "translatedContent": "        // In this case, we filter out only the classes that are assignable to ITransientService."
  },
  {
    "row": 46,
    "rowsha": "drtdcm3oScT34MQNJuAG3odlHfHJwtN2Jt9wvEbvHR8=",
    "originContent": "        .AddClasses(classes => classes.AssignableTo<ITransientService>())",
    "translatedContent": "        .AddClasses(classes => classes.AssignableTo<ITransientService>())"
  },
  {
    "row": 47,
    "rowsha": "ugR1iZ2M3rRtQpP2qjMRooDPz9SpA9HOFigVsEsFkuE=",
    "originContent": "            // We then specify what type we want to register these classes as.",
    "translatedContent": "            // We then specify what type we want to register these classes as."
  },
  {
    "row": 48,
    "rowsha": "6q/BWKrMezN5FG1SmnlliEERGoLrQhNsIlhBB5oMaPU=",
    "originContent": "            // In this case, we want to register the types as all of its implemented interfaces.",
    "translatedContent": "            // In this case, we want to register the types as all of its implemented interfaces."
  },
  {
    "row": 49,
    "rowsha": "SqTtGc+vNAzAa2y+JUtxq3wDP6Hqdvn6EdFsdsvyTqs=",
    "originContent": "            // So if a type implements 3 interfaces; A, B, C, we'd end up with three separate registrations.",
    "translatedContent": "            // So if a type implements 3 interfaces; A, B, C, we'd end up with three separate registrations."
  },
  {
    "row": 50,
    "rowsha": "NVk7KlKmzzvp1qdtpCOdLw6T1bunAMuCMNqFIHdz8cA=",
    "originContent": "            .AsImplementedInterfaces()",
    "translatedContent": "            .AsImplementedInterfaces()"
  },
  {
    "row": 51,
    "rowsha": "v4VNSsAvKQ0BTO2wbNgEO1mVfSSOyaza60xXA6DchO0=",
    "originContent": "            // And lastly, we specify the lifetime of these registrations.",
    "translatedContent": "            // And lastly, we specify the lifetime of these registrations."
  },
  {
    "row": 52,
    "rowsha": "TkViPcUOhKOYphzZkDzO7n5EFJkHeZWGJ/lpg5aAqo8=",
    "originContent": "            .WithTransientLifetime()",
    "translatedContent": "            .WithTransientLifetime()"
  },
  {
    "row": 53,
    "rowsha": "ruU0VYR+BsC6QnRw5Tma1tNtIZiwFbpu+koPb5ZntWA=",
    "originContent": "        // Here we start again, with a new full set of classes from the assembly above.",
    "translatedContent": "        // Here we start again, with a new full set of classes from the assembly above."
  },
  {
    "row": 54,
    "rowsha": "r/fPZE8xht83a/LDPNdIBZlYY6Ge4/vDd2z+2a2hIiQ=",
    "originContent": "        // This time, filtering out only the classes assignable to IScopedService.",
    "translatedContent": "        // This time, filtering out only the classes assignable to IScopedService."
  },
  {
    "row": 55,
    "rowsha": "IbtKhRRuWoP/c6hXwK7IS0IZtgjMPrwD4KtzcHkOC4Q=",
    "originContent": "        .AddClasses(classes => classes.AssignableTo<IScopedService>())",
    "translatedContent": "        .AddClasses(classes => classes.AssignableTo<IScopedService>())"
  },
  {
    "row": 56,
    "rowsha": "xAzIamawQRn3G/L3AVMsESqiWXHQwD8HsvLxyoK9wvY=",
    "originContent": "            // Now, we just want to register these types as a single interface, IScopedService.",
    "translatedContent": "            // Now, we just want to register these types as a single interface, IScopedService."
  },
  {
    "row": 57,
    "rowsha": "jSW4vbLGNyjQCpeUI4zpAzwoK4P7mj9LCRFsA/R1bIs=",
    "originContent": "            .As<IScopedService>()",
    "translatedContent": "            .As<IScopedService>()"
  },
  {
    "row": 58,
    "rowsha": "y9z/HA9hgTSqa2rDdJzUAVNatRTot0Ia88VwEWUMpzk=",
    "originContent": "            // And again, just specify the lifetime.",
    "translatedContent": "            // And again, just specify the lifetime."
  },
  {
    "row": 59,
    "rowsha": "LA5ezz+Ov43ND0qGPcxjev5NR0XUM8RuBwKTZQC8bFA=",
    "originContent": "            .WithScopedLifetime()",
    "translatedContent": "            .WithScopedLifetime()"
  },
  {
    "row": 60,
    "rowsha": "hLppSU7JHzqtvGxngPyhLHSbwZNp6qAtH8S9UeN+WA8=",
    "originContent": "        // Generic interfaces are also supported too, e.g. public interface IOpenGeneric<T> ",
    "translatedContent": "        // Generic interfaces are also supported too, e.g. public interface IOpenGeneric<T> "
  },
  {
    "row": 61,
    "rowsha": "pS7iU6lUqjfyJyaA5bBMOs3Q+DmBynUcW7wPsvzt9vA=",
    "originContent": "        .AddClasses(classes => classes.AssignableTo(typeof(IOpenGeneric<>)))",
    "translatedContent": "        .AddClasses(classes => classes.AssignableTo(typeof(IOpenGeneric<>)))"
  },
  {
    "row": 62,
    "rowsha": "NVk7KlKmzzvp1qdtpCOdLw6T1bunAMuCMNqFIHdz8cA=",
    "originContent": "            .AsImplementedInterfaces()",
    "translatedContent": "            .AsImplementedInterfaces()"
  },
  {
    "row": 63,
    "rowsha": "t914oSbEigbTsNbfk4z8RQINnzPUK276g201Nj2HscY=",
    "originContent": "        // And you scan generics with multiple type parameters too",
    "translatedContent": "        // And you scan generics with multiple type parameters too"
  },
  {
    "row": 64,
    "rowsha": "eOYIiJamA/Po7w9eRb3gPT+lALwolaVGDQdLtXyvj4Q=",
    "originContent": "        // e.g. public interface IQueryHandler<TQuery, TResult>",
    "translatedContent": "        // e.g. public interface IQueryHandler<TQuery, TResult>"
  },
  {
    "row": 65,
    "rowsha": "rjV+1LQYj41JyiUp0UBCU0kSB9XlNhRGt+nw+letHMs=",
    "originContent": "        .AddClasses(classes => classes.AssignableTo(typeof(IQueryHandler<,>)))",
    "translatedContent": "        .AddClasses(classes => classes.AssignableTo(typeof(IQueryHandler<,>)))"
  },
  {
    "row": 66,
    "rowsha": "DWgVopNqsyZ9TZenRvqwi56hHlL2IsPYLMqBCDHCyYs=",
    "originContent": "            .AsImplementedInterfaces());",
    "translatedContent": "            .AsImplementedInterfaces());"
  },
  {
    "row": 67,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 68,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### コンパイル済みビュー（UI）タイプのスキャン"
  },
  {
    "row": 69,
    "rowsha": "W+yrLbn4kIwCgDiivBmXymSKxqGAAg2S9RArKH65dQM=",
    "originContent": "#### Scanning compiled view (UI) types",
    "translatedContent": "デフォルトでは、Scrutor は `.AddClasses()` タイプフィルターからコンパイラー生成のタイプを除外します。  "
  },
  {
    "row": 70,
    "rowsha": "oSkqZswMgwko3sYB8JmLNLMWvO5KWfdiQ4xVZLPFhg8=",
    "originContent": "By default, Scrutor excludes compiler-generated types from the `.AddClasses()` type filters. When loading views from a framework such as [Avalonia UI](https://avaloniaui.net/), we need to opt in to compiler-generated types, like this:",
    "translatedContent": "[Avalonia UI](https://avaloniaui.net/) のようなフレームワークからビューを読み込む際には、以下のようにコンパイラー生成のタイプを明示的に含める必要があります。"
  },
  {
    "row": 71,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 72,
    "rowsha": "DTYjJUoTRRqUO0UnUYV/AGNkCT3MDXXS9Vynilr5bGs=",
    "originContent": "```csharp",
    "translatedContent": "```csharp"
  },
  {
    "row": 73,
    "rowsha": "zTJkyoq7k4rrzD/01stCxCBek12Goib+sWIrC2PztHk=",
    "originContent": ".AddClasses(classes => classes",
    "translatedContent": ".AddClasses(classes => classes"
  },
  {
    "row": 74,
    "rowsha": "vK1Eydj37309/zJuU7vd7wt3BM2rpEc+CJLl1sRYT3I=",
    "originContent": "    // Opt-in to compiler-generated types",
    "translatedContent": "    // Opt-in to compiler-generated types"
  },
  {
    "row": 75,
    "rowsha": "Eyp/PMYQDhG96+Rt7D8FekLVdd2AnYCltiWrfPoyBP8=",
    "originContent": "    .WithAttribute<CompilerGeneratedAttribute>()",
    "translatedContent": "    .WithAttribute<CompilerGeneratedAttribute>()"
  },
  {
    "row": 76,
    "rowsha": "plEiiQVpZLOneeusbXuEzN6ZDzWvlXUqMhKhT3TMpUc=",
    "originContent": "    // Optionally filter types to reduce number of service registrations.",
    "translatedContent": "    // Optionally filter types to reduce number of service registrations."
  },
  {
    "row": 77,
    "rowsha": "ak37+dHSCyIxqvXozLtlFzijO47zM36uZjCbRJxrXZI=",
    "originContent": "    .InNamespaces(\"MyApp.Desktop.Views\")",
    "translatedContent": "    .InNamespaces(\"MyApp.Desktop.Views\")"
  },
  {
    "row": 78,
    "rowsha": "q79NisJF8jBMZUdvx/80+1p57aK4eMKORPWumTiNvIo=",
    "originContent": "    .AssignableToAny(",
    "translatedContent": "    .AssignableToAny("
  },
  {
    "row": 79,
    "rowsha": "KZtI08WNdNZqx/Gz/YTXjGGorMXB2NDGRPQ+dB47yHI=",
    "originContent": "        typeof(Window),",
    "translatedContent": "        typeof(Window),"
  },
  {
    "row": 80,
    "rowsha": "s6YOyvPq8k2wHuDp6BIBVtgpcTa9GIx2um/o17CA7tw=",
    "originContent": "        typeof(UserControl)",
    "translatedContent": "        typeof(UserControl)"
  },
  {
    "row": 81,
    "rowsha": "/xlEZ1LDPBgeqSMqeVvv8VvD/u3SpYCHs/XDPuti6ZI=",
    "originContent": "    )",
    "translatedContent": "    )"
  },
  {
    "row": 82,
    "rowsha": "0tzSPsmsEaWIpKrvJOyQXe/oMneK5HGc4E8YLT2UNu8=",
    "originContent": "    .AsSelf()",
    "translatedContent": "    .AsSelf()"
  },
  {
    "row": 83,
    "rowsha": "f6wvYJLkyCUGl6Lc1T4wAIIwuavodrUx9eW1mjWrQlg=",
    "originContent": "    .WithSingletonLifetime()",
    "translatedContent": "    .WithSingletonLifetime()"
  },
  {
    "row": 84,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 85,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "<translate-content>"
  },
  {
    "row": 86,
    "rowsha": "vBAccbf1L2N88x9Do9PxVv8z6Bq6NugIJQA+6/hLSfc=",
    "originContent": "With some UI frameworks, these compiler-generated views implement quite a few interfaces, so unless you need them, it's probably best to register these classes `.AsSelf()`; in other words, be very precise with your filters that accept compiler generated types.",
    "translatedContent": "一部のUIフレームワークでは、これらのコンパイラ生成ビューはかなり多くのインターフェースを実装しているため、必要がない限り、これらのクラスは `.AsSelf()` として登録するのが最善です。つまり、コンパイラ生成型を受け入れるフィルターは非常に正確に指定してください。"
  },
  {
    "row": 87,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 88,
    "rowsha": "0NoA0/GbWhFpXFyWSXqiIZaHcahpjyw32uZCf9SphvQ=",
    "originContent": "### Decoration",
    "translatedContent": "### Decoration"
  },
  {
    "row": 89,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "</translate-content>"
  },
  {
    "row": 90,
    "rowsha": "DTYjJUoTRRqUO0UnUYV/AGNkCT3MDXXS9Vynilr5bGs=",
    "originContent": "```csharp",
    "translatedContent": "```csharp"
  },
  {
    "row": 91,
    "rowsha": "m7pMdPmyV/au6B9mvjGYw9NLT5ztZxtYTfGiO8rC6WY=",
    "originContent": "var collection = new ServiceCollection();",
    "translatedContent": "var collection = new ServiceCollection();"
  },
  {
    "row": 92,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 93,
    "rowsha": "Wvi25/gwLxvVKRm9hFsDvUhbq6bw7LO9oP0NLoyy7QA=",
    "originContent": "// First, add our service to the collection.",
    "translatedContent": "// First, add our service to the collection."
  },
  {
    "row": 94,
    "rowsha": "HPgQBCdVHL/4FkCOujPsd/8OZkl1pBvzRZc7ECrS+Zg=",
    "originContent": "collection.AddSingleton<IDecoratedService, Decorated>();",
    "translatedContent": "collection.AddSingleton<IDecoratedService, Decorated>();"
  },
  {
    "row": 95,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 96,
    "rowsha": "iVsZB3ZL+ae7lGImwvW/enQD45K9HDHH7fr6De0Jx/g=",
    "originContent": "// Then, decorate Decorated with the Decorator type.",
    "translatedContent": "// Then, decorate Decorated with the Decorator type."
  },
  {
    "row": 97,
    "rowsha": "UNuamBFZ8hD1FPdJFe4NB1HVQk/VVyzjxE9BGtv4BVI=",
    "originContent": "collection.Decorate<IDecoratedService, Decorator>();",
    "translatedContent": "collection.Decorate<IDecoratedService, Decorator>();"
  },
  {
    "row": 98,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 99,
    "rowsha": "X25vvH4I2AhFZVPUrL3m/H1daiH0V/PT8YqgNUbdx20=",
    "originContent": "// Finally, decorate Decorator with the OtherDecorator type.",
    "translatedContent": "// Finally, decorate Decorator with the OtherDecorator type."
  },
  {
    "row": 100,
    "rowsha": "fdRtePnAvgtw1pJzWKMIwyDz/tN9RNXi98JwFNwqM+U=",
    "originContent": "// As you can see, OtherDecorator requires a separate service, IService. We can get that from the provider argument.",
    "translatedContent": "// As you can see, OtherDecorator requires a separate service, IService. We can get that from the provider argument."
  },
  {
    "row": 101,
    "rowsha": "jCdxGQbjkkaTFEWhoESzBqfZ0oodQnU9Bml2sQWNzs0=",
    "originContent": "collection.Decorate<IDecoratedService>((inner, provider) => new OtherDecorator(inner, provider.GetRequiredService<IService>()));",
    "translatedContent": "collection.Decorate<IDecoratedService>((inner, provider) => new OtherDecorator(inner, provider.GetRequiredService<IService>()));"
  },
  {
    "row": 102,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 103,
    "rowsha": "flnZpc4aTAECfAZSdHxJEARea8X8+WyK8AkuZ1CeAHk=",
    "originContent": "var serviceProvider = collection.BuildServiceProvider();",
    "translatedContent": "var serviceProvider = collection.BuildServiceProvider();"
  },
  {
    "row": 104,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 105,
    "rowsha": "Qo2h0Kw5m2Z9Yc+pNhgKSCSPQdWYq9iI6hHAag9Xq98=",
    "originContent": "// When we resolve the IDecoratedService service, we'll get the following structure:",
    "translatedContent": "// When we resolve the IDecoratedService service, we'll get the following structure:"
  },
  {
    "row": 106,
    "rowsha": "M4DMbfoWMea7GNtJoaEi4OjooFPQT0XQvbBnbW6E65E=",
    "originContent": "// OtherDecorator -> Decorator -> Decorated",
    "translatedContent": "// OtherDecorator -> Decorator -> Decorated"
  },
  {
    "row": 107,
    "rowsha": "cFb0O14YPdfqRQMVC+YqTuyGcZzmCfnA0dtLR0sb7NI=",
    "originContent": "var instance = serviceProvider.GetRequiredService<IDecoratedService>();",
    "translatedContent": "var instance = serviceProvider.GetRequiredService<IDecoratedService>();"
  },
  {
    "row": 108,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 109,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 110,
    "rowsha": "bbxamqCRr2Gnwz/Ik2k3WbSF+jc4YntpaZKLSrEXOWQ=",
    "originContent": "## Sponsors",
    "translatedContent": "## Sponsors"
  },
  {
    "row": 111,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 112,
    "rowsha": "DlodV/ajfLB0oMM+0QbpaAESTX3T4fvalmCDpiAKaXI=",
    "originContent": "[Entity Framework Extensions](https://entityframework-extensions.net/?utm_source=khellang&utm_medium=Scrutor) and [Dapper Plus](https://dapper-plus.net/?utm_source=khellang&utm_medium=Scrutor) are major sponsors and proud to contribute to the development of Scrutor.",
    "translatedContent": "[Entity Framework Extensions](https://entityframework-extensions.net/?utm_source=khellang&utm_medium=Scrutor) and [Dapper Plus](https://dapper-plus.net/?utm_source=khellang&utm_medium=Scrutor) are major sponsors and proud to contribute to the development of Scrutor."
  },
  {
    "row": 113,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 114,
    "rowsha": "U7wcnpaIHXE6as4qRdi4w/cjhjdEdRPrm+Iqo3u8w2I=",
    "originContent": "[![Entity Framework Extensions](https://raw.githubusercontent.com/khellang/khellang/refs/heads/master/.github/entity-framework-extensions-sponsor.png)](https://entityframework-extensions.net/bulk-insert?utm_source=khellang&utm_medium=Scrutor)",
    "translatedContent": "[![Entity Framework Extensions](https://raw.githubusercontent.com/khellang/khellang/refs/heads/master/.github/entity-framework-extensions-sponsor.png)](https://entityframework-extensions.net/bulk-insert?utm_source=khellang&utm_medium=Scrutor)"
  },
  {
    "row": 115,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 116,
    "rowsha": "6u46dUBG9btyiKqztDvTe5rsFXoLOyXjWdGw+lmxbOc=",
    "originContent": "[![Dapper Plus](https://raw.githubusercontent.com/khellang/khellang/refs/heads/master/.github/dapper-plus-sponsor.png)](https://dapper-plus.net/bulk-insert?utm_source=khellang&utm_medium=Scrutor)",
    "translatedContent": "[![Dapper Plus](https://raw.githubusercontent.com/khellang/khellang/refs/heads/master/.github/dapper-plus-sponsor.png)](https://dapper-plus.net/bulk-insert?utm_source=khellang&utm_medium=Scrutor)"
  },
  {
    "row": 117,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  }
]