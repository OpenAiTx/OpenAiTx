[
  {
    "Id": 1,
    "Content": "# 🇮🇩 SQLite Wilayah Indonesia\n\nDatabase SQLite berisi **data wilayah administratif Indonesia** berdasarkan BPS (Badan Pusat Statistik) yang lengkap:\n\n✅ Provinsi  \n✅ Kabupaten/Kota  \n✅ Kecamatan  \n✅ Desa/Kelurahan <br>\n✅ Kode Pos\n\nData ini berguna untuk aplikasi web, mobile, dan API yang membutuhkan referensi wilayah Indonesia secara hierarki.\n\n---\n\n## 🎯 Fitur\n\n- Data resmi dan lengkap wilayah Indonesia\n- Format SQLite yang ringan, cepat, dan portable\n- **Open source**, bebas digunakan untuk keperluan komersial & non-komersial\n- Mudah diintegrasikan dengan Laravel, CodeIgniter, Node.js, atau framework lain\n- Relasi antar tabel memudahkan query data secara bertingkat\n\n---\n",
    "ContentSha": "VKLdpW/ibWz03hikS/AlD+YW+Hs/pbOWNEb+rw93gQo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# 🇮🇩 SQLite Régions d’Indonésie\n\nBase de données SQLite contenant les **données des divisions administratives de l’Indonésie** selon la BPS (Badan Pusat Statistik), complètes :\n\n✅ Province  \n✅ Kabupaten/Kota (Département/Ville)  \n✅ Kecamatan (Arrondissement)  \n✅ Desa/Kelurahan (Village/Quartier) <br>\n✅ Code postal\n\nCes données sont utiles pour les applications web, mobiles et les API nécessitant une référence hiérarchique des régions d’Indonésie.\n\n---\n\n## 🎯 Fonctionnalités\n\n- Données officielles et complètes des régions d’Indonésie\n- Format SQLite léger, rapide et portable\n- **Open source**, utilisation libre à des fins commerciales & non commerciales\n- Facile à intégrer avec Laravel, CodeIgniter, Node.js ou d’autres frameworks\n- Relations entre les tables facilitant les requêtes de données hiérarchisées\n\n---",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "## 📂 Struktur Database\n\nDatabase `records.sqlite` berisi tabel:\n\n- `provinces`\n- `regencies`\n- `districts`\n- `villages`\n\n**Relasi antar tabel:**\n\n- `regencies.province_id` → `provinces.id`\n- `districts.regency_id` → `regencies.id`\n- `villages.district_id` → `districts.id`\n\n---\n\n## Composer\n\n📦 Instalasi via Composer\n\nPaket ini tersedia di Packagist:\n\n🔗 Packagist - maftuhichsan/sqlite-wilayah-indonesia\n\nCara Install\n\nJalankan perintah Composer:\n\ncomposer require maftuhichsan/sqlite-wilayah-indonesia\n\nSetelah itu, Anda bisa menggunakan file database yang ada di dalam vendor path:\n\nvendor/maftuhichsan/sqlite-wilayah-indonesia/database/records.sqlite\n\n\n⸻\n\n✨ Contoh Penggunaan di PHP (PDO)\n\n```php\n\n$db = new PDO(__DIR__.'/vendor/maftuhichsan/sqlite-wilayah-indonesia/database/records.sqlite');\n\n// Ambil semua provinsi\n$stmt = $db->query(\"SELECT * FROM provinces\");\n$provinces = $stmt->fetchAll(PDO::FETCH_ASSOC);\n\nprint_r($provinces);\n\n```",
    "ContentSha": "OVW/xbwr4WMhZOunPaebEkmwBgoMVZjuGkuQnqOMdRA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## 📂 Structure de la base de données\n\nLa base de données `records.sqlite` contient les tables :\n\n- `provinces`\n- `regencies`\n- `districts`\n- `villages`\n\n**Relations entre les tables :**\n\n- `regencies.province_id` → `provinces.id`\n- `districts.regency_id` → `regencies.id`\n- `villages.district_id` → `districts.id`\n\n---\n\n## Composer\n\n📦 Installation via Composer\n\nCe paquet est disponible sur Packagist :\n\n🔗 Packagist - maftuhichsan/sqlite-wilayah-indonesia\n\nMéthode d'installation\n\nExécutez la commande Composer :\n\ncomposer require maftuhichsan/sqlite-wilayah-indonesia\n\nAprès cela, vous pouvez utiliser le fichier de base de données situé dans le chemin vendor :\n\nvendor/maftuhichsan/sqlite-wilayah-indonesia/database/records.sqlite\n\n\n⸻\n\n✨ Exemple d’utilisation en PHP (PDO)\n\n```php\n\n$db = new PDO(__DIR__.'/vendor/maftuhichsan/sqlite-wilayah-indonesia/database/records.sqlite');\n\n// Récupérer toutes les provinces\n$stmt = $db->query(\"SELECT * FROM provinces\");\n$provinces = $stmt->fetchAll(PDO::FETCH_ASSOC);\n\nprint_r($provinces);\n\n```",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "\n⸻\n\n## NPM\n\n📦 Instalasi via NPM\n\nPaket ini tersedia di NPM:\n\n🔗 NPM - sqlite-wilayah-indonesia\n\nCara Install\n\nJalankan perintah package manager NPM:\n\nnpm install sqlite-wilayah-indonesia\n\n⸻\n\n✨ Contoh Penggunaan di Node.js\n\n```javascript\n// Contoh menggunakan sqlite3\nconst sqlite3 = require('sqlite3').verbose();\nconst path = require('path');\n\n// Arahkan ke file SQLite di node_modules\nconst dbPath = path.join(\n  __dirname,\n  'node_modules',\n  'sqlite-wilayah-indonesia',\n  'database',\n  'records.sqlite'\n);\n\nconst db = new sqlite3.Database(dbPath);\n\n// Ambil semua provinsi\ndb.all(\"SELECT * FROM provinces\", [], (err, rows) => {\n  if (err) {\n    throw err;\n  }\n  console.log(rows);\n});\n\ndb.close();\n```",
    "ContentSha": "5dgm9YppocOXc9lnOX1vtTiGlQa8fWpalLGHgGXOFrs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "⸻\n\n## NPM\n\n📦 Installation via NPM\n\nCe paquet est disponible sur NPM :\n\n🔗 NPM - sqlite-wilayah-indonesia\n\nMéthode d'installation\n\nExécutez la commande du gestionnaire de paquets NPM :\n\nnpm install sqlite-wilayah-indonesia\n\n⸻\n\n✨ Exemple d’utilisation avec Node.js\n\n```javascript\n// Exemple d'utilisation de sqlite3\nconst sqlite3 = require('sqlite3').verbose();\nconst path = require('path');\n\n// Pointez vers le fichier SQLite dans node_modules\nconst dbPath = path.join(\n  __dirname,\n  'node_modules',\n  'sqlite-wilayah-indonesia',\n  'database',\n  'records.sqlite'\n);\n\nconst db = new sqlite3.Database(dbPath);\n\n// Récupérer toutes les provinces\ndb.all(\"SELECT * FROM provinces\", [], (err, rows) => {\n  if (err) {\n    throw err;\n  }\n  console.log(rows);\n});\n\ndb.close();\n```",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "⸻\n\n## 🚀 Cara Pakai\n\n### 1️⃣ Unduh Database\n\nDownload file `records.sqlite` dari repository ini, lalu simpan di project Anda.\n\n### 2️⃣ Query SQL Langsung\n\nContoh query SQL dasar:\n\n```sql\n-- Ambil semua provinsi\nSELECT * FROM provinces;\n\n-- Ambil kabupaten/kota berdasarkan ID provinsi\nSELECT * FROM cities WHERE city_province_code = '31';\n\n-- Ambil kecamatan berdasarkan ID kabupaten/kota\nSELECT * FROM sub_districts WHERE sub_district_city_code = '3171';\n\n-- Ambil desa/kelurahan berdasarkan ID kecamatan\nSELECT * FROM villages WHERE village_sub_district_code = '3171020';\n\n```",
    "ContentSha": "LFZkZskbOpJiIgKXrgrZ2YmyKdDh4GIoM9FWJmwZDT4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## 🚀 Mode d'emploi\n\n### 1️⃣ Télécharger la base de données\n\nTéléchargez le fichier `records.sqlite` depuis ce dépôt, puis enregistrez-le dans votre projet.\n\n### 2️⃣ Requête SQL directe\n\nExemple de requêtes SQL basiques :\n\n```sql\n-- Récupérer toutes les provinces\nSELECT * FROM provinces;\n\n-- Récupérer les départements/villes selon l'ID de la province\nSELECT * FROM cities WHERE city_province_code = '31';\n\n-- Récupérer les districts selon l'ID du département/ville\nSELECT * FROM sub_districts WHERE sub_district_city_code = '3171';\n\n-- Récupérer les villages/quartiers selon l'ID du district\nSELECT * FROM villages WHERE village_sub_district_code = '3171020';\n\n```",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "## 🌐 Endpoint API (Coming Soon): \n\nStatus API: Sedang dalam pengembangan.\n",
    "ContentSha": "gxgOznuhue3cY9PzbXVuJ6+gtqa0Je2J16Vq/ST7Fu0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## 🌐 Endpoint API (Bientôt disponible) : \n\nAPI de statut : En cours de développement.",
    "Status": "ok"
  }
]