{
  "id": 4,
  "origin": "- [PostCSS](https://github.com/jdrgomes/awesome-postcss#readme) - CSS tool.\n- [Draft.js](https://github.com/nikgraf/awesome-draft-js#readme) - Rich text editor framework for React.\n- [Service Workers](https://github.com/TalAter/awesome-service-workers#readme)\n- [Progressive Web Apps](https://github.com/TalAter/awesome-progressive-web-apps#readme)\n- [choo](https://github.com/choojs/awesome-choo#readme) - App framework.\n- [Redux](https://github.com/brillout/awesome-redux#readme) - State container for JavaScript apps.\n- [Browserify](https://github.com/browserify/awesome-browserify#readme) - Module bundler.\n- [Sass](https://github.com/Famolus/awesome-sass#readme) - CSS preprocessor.\n- [Ant Design](https://github.com/websemantics/awesome-ant-design#readme) - Enterprise-class UI design language.\n- [Less](https://github.com/LucasBassetti/awesome-less#readme) - CSS preprocessor.\n- [WebGL](https://github.com/sjfricke/awesome-webgl#readme) - JavaScript API for rendering 3D graphics.\n- [Preact](https://github.com/preactjs/awesome-preact#readme) - App framework.\n- [Progressive Enhancement](https://github.com/jbmoelker/progressive-enhancement-resources#readme)\n- [Next.js](https://github.com/unicodeveloper/awesome-nextjs#readme) - Framework for server-rendered React apps.\n- [lit](https://github.com/web-padawan/awesome-lit#readme) - Library for building web components with a declarative template system.\n- [JAMstack](https://github.com/automata/awesome-jamstack#readme) - Modern web development architecture based on client-side JavaScript, reusable APIs, and prebuilt markup.\n- [WordPress-Gatsby](https://github.com/henrikwirth/awesome-wordpress-gatsby#readme) - Web development technology stack with WordPress as a back end and Gatsby as a front end.\n- [Mobile Web Development](https://github.com/myshov/awesome-mobile-web-development#readme) - Creating a great mobile web experience.\n- [Storybook](https://github.com/lauthieb/awesome-storybook#readme) - Development environment for UI components.\n- [Blazor](https://github.com/AdrienTorris/awesome-blazor#readme) - .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly.\n- [PageSpeed Metrics](https://github.com/csabapalfi/awesome-pagespeed-metrics#readme) - Metrics to help understand page speed and user experience.\n- [Tailwind CSS](https://github.com/aniftyco/awesome-tailwindcss#readme) - Utility-first CSS framework for rapid UI development.\n- [Seed](https://github.com/seed-rs/awesome-seed-rs#readme) - Rust framework for creating web apps running in WebAssembly.\n- [Web Performance Budget](https://github.com/pajaydev/awesome-web-performance-budget#readme) - Techniques to ensure certain performance metrics for a website.\n- [Web Animation](https://github.com/sergey-pimenov/awesome-web-animation#readme) - Animations in the browser with JavaScript, CSS, SVG, etc.\n- [Yew](https://github.com/jetli/awesome-yew#readme) - Rust framework inspired by Elm and React for creating multi-threaded frontend web apps with WebAssembly.\n- [Material-UI](https://github.com/nadunindunil/awesome-material-ui#readme) - Material Design React components for faster and easier web development.\n- [Building Blocks for Web Apps](https://github.com/componently-com/awesome-building-blocks-for-web-apps#readme) - Standalone features to be integrated into web apps.\n- [Svelte](https://github.com/TheComputerM/awesome-svelte#readme) - App framework.\n- [Design systems](https://github.com/klaufel/awesome-design-systems#readme) - Collection of reusable components, guided by rules that ensure consistency and speed.\n- [Inertia.js](https://github.com/innocenzi/awesome-inertiajs#readme) - Make single-page apps without building an API.\n- [MDBootstrap](https://github.com/mdbootstrap/awesome-mdbootstrap#readme) - Templates, layouts, components, and widgets to rapidly build websites.\n- [Master CSS](https://github.com/master-co/awesome-master-css#readme) - A virtual CSS language with enhanced syntax.\n- [Hydrogen](https://github.com/shopify/awesome-hydrogen#readme) - Edge-first framework for building Shopify storefronts with React.\n- [Tiny JS](https://github.com/thoughtspile/awesome-tiny-js#readme) - Frontend libraries that fit into 2 kB with dependencies.\n- [Frontend GIS](https://github.com/joewdavies/awesome-frontend-gis#readme) - Geographic Information Systems (GIS) for web browsers.\n- [WebGPU](https://github.com/mikbry/awesome-webgpu#readme) - JavaScript API for rendering and compute on GPUs.\n\n## Back-End Development\n\n- [Flask](https://github.com/mjhea0/awesome-flask#readme) - Python framework.\n- [Docker](https://github.com/veggiemonk/awesome-docker#readme)\n- [Vagrant](https://github.com/iJackUA/awesome-vagrant#readme) - Automation virtual machine environment.\n- [Pyramid](https://github.com/uralbash/awesome-pyramid#readme) - Python framework.\n- [Play1 Framework](https://github.com/PerfectCarl/awesome-play1#readme)\n- [CakePHP](https://github.com/friendsofcake/awesome-cakephp#readme) - PHP framework.\n- [Symfony](https://github.com/sitepoint-editors/awesome-symfony#readme) - PHP framework.\n\t- [Education](https://github.com/pehapkari/awesome-symfony-education#readme)\n- [Laravel](https://github.com/chiraggude/awesome-laravel#readme) - PHP framework.\n\t- [Education](https://github.com/fukuball/Awesome-Laravel-Education#readme)\n\t- [TALL Stack](https://github.com/livewire/awesome-tall-stack#readme) - Full-stack development solution featuring libraries built by the Laravel community.\n- [Rails](https://github.com/gramantin/awesome-rails#readme) - Web app framework for Ruby.\n\t- [Gems](https://github.com/hothero/awesome-rails-gem#readme) - Packages.\n- [Phalcon](https://github.com/phalcon/awesome-phalcon#readme) - PHP framework.\n- [Useful `.htaccess` Snippets](https://github.com/phanan/htaccess#readme)\n- [nginx](https://github.com/fcambus/nginx-resources#readme) - Web server.\n- [Dropwizard](https://github.com/stve/awesome-dropwizard#readme) - Java framework.\n- [Kubernetes](https://github.com/ramitsurana/awesome-kubernetes#readme) - Open-source platform that automates Linux container operations.\n- [Lumen](https://github.com/unicodeveloper/awesome-lumen#readme) - PHP micro-framework.\n- [Serverless Framework](https://github.com/pmuens/awesome-serverless#readme) - Serverless computing and serverless architectures.\n- [Apache Wicket](https://github.com/PhantomYdn/awesome-wicket#readme) - Java web app framework.\n- [Vert.x](https://github.com/vert-x3/vertx-awesome#readme) - Toolkit for building reactive apps on the JVM.\n- [Terraform](https://github.com/shuaibiyy/awesome-terraform#readme) - Tool for building, changing, and versioning infrastructure.\n- [Vapor](https://github.com/vapor-community/awesome-vapor#readme) - Server-side development in Swift.\n- [Dash](https://github.com/ucg8j/awesome-dash#readme) - Python web app framework.\n- [FastAPI](https://github.com/mjhea0/awesome-fastapi#readme) - Python web app framework.\n- [CDK](https://github.com/kolomied/awesome-cdk#readme) - Open-source software development framework for defining cloud infrastructure in code.\n- [IAM](https://github.com/kdeldycke/awesome-iam#readme) - User accounts, authentication and authorization.\n- [Slim](https://github.com/nekofar/awesome-slim#readme) - PHP framework.\n- [Fiber](https://github.com/gofiber/awesome-fiber#readme) - Web framework built on top of Fasthttp, the fastest HTTP engine for Go.\n- [Kustomize](https://github.com/DevOpsHiveHQ/awesome-kustomize#readme) - Kubernetes native declarative configuration management tool.\n- [OpenTofu](https://github.com/virtualroot/awesome-opentofu#readme) - Open-source infrastructure as code tool.\n- [Reflex](https://github.com/reflex-dev/awesome-reflex#readme) - Python web framework for building both your frontend and backend with no JavaScript.\n\n## Computer Science\n\n- [University Courses](https://github.com/prakhar1989/awesome-courses#readme)\n- [Data Science](https://github.com/academic/awesome-datascience#readme)\n\t- [Tutorials](https://github.com/siboehm/awesome-learn-datascience#readme)\n- [Machine Learning](https://github.com/josephmisiti/awesome-machine-learning#readme)\n\t- [Tutorials](https://github.com/ujjwalkarn/Machine-Learning-Tutorials#readme)\n\t- [ML with Ruby](https://github.com/arbox/machine-learning-with-ruby#readme) - Learning, implementing, and applying Machine Learning using Ruby.\n\t- [Core ML Models](https://github.com/likedan/Awesome-CoreML-Models#readme) - Models for Apple's machine learning framework.\n\t- [H2O](https://github.com/h2oai/awesome-h2o#readme) - Open source distributed machine learning platform written in Java with APIs in R, Python, and Scala.\n\t- [Software Engineering for Machine Learning](https://github.com/SE-ML/awesome-seml#readme) - From experiment to production-level machine learning.\n\t- [AI in Finance](https://github.com/georgezouq/awesome-ai-in-finance#readme) - Solving problems in finance with machine learning.\n\t- [JAX](https://github.com/n2cholas/awesome-jax#readme) - Automatic differentiation and XLA compilation brought together for high-performance machine learning research.\n\t- [XAI](https://github.com/altamiracorp/awesome-xai#readme) - Providing insight, explanations, and interpretability to machine learning methods.\n- [Speech and Natural Language Processing](https://github.com/edobashira/speech-language-processing#readme)\n\t- [Spanish](https://github.com/dav009/awesome-spanish-nlp#readme)\n\t- [NLP with Ruby](https://github.com/arbox/nlp-with-ruby#readme)\n\t- [Question Answering](https://github.com/seriousran/awesome-qa#readme) - The science of asking and answering in natural language with a machine.\n\t- [Natural Language Generation](https://github.com/accelerated-text/awesome-nlg#readme) - Generation of text used in data-to-text, conversational agents, and narrative generation applications.\n- [Linguistics](https://github.com/theimpossibleastronaut/awesome-linguistics#readme)\n- [Cryptography](https://github.com/sobolevn/awesome-cryptography#readme)\n\t- [Papers](https://github.com/pFarb/awesome-crypto-papers#readme) - Theory basics for using cryptography by non-cryptographers.\n- [Computer Vision](https://github.com/jbhuang0604/awesome-computer-vision#readme)\n- [Deep Learning](https://github.com/ChristosChristofidis/awesome-deep-learning#readme) - Neural networks.\n\t- [TensorFlow](https://github.com/jtoy/awesome-tensorflow#readme) - Library for machine intelligence.\n\t- [TensorFlow.js](https://github.com/aaronhma/awesome-tensorflow-js#readme) - WebGL-accelerated machine learning JavaScript library for training and deploying models.",
  "translate": "- [PostCSS](https://github.com/jdrgomes/awesome-postcss#readme) - CSS 工具。\n- [Draft.js](https://github.com/nikgraf/awesome-draft-js#readme) - React 富文本编辑器框架。\n- [Service Workers](https://github.com/TalAter/awesome-service-workers#readme)\n- [Progressive Web Apps](https://github.com/TalAter/awesome-progressive-web-apps#readme)\n- [choo](https://github.com/choojs/awesome-choo#readme) - 应用框架。\n- [Redux](https://github.com/brillout/awesome-redux#readme) - JavaScript 应用的状态容器。\n- [Browserify](https://github.com/browserify/awesome-browserify#readme) - 模块打包工具。\n- [Sass](https://github.com/Famolus/awesome-sass#readme) - CSS 预处理器。\n- [Ant Design](https://github.com/websemantics/awesome-ant-design#readme) - 企业级 UI 设计语言。\n- [Less](https://github.com/LucasBassetti/awesome-less#readme) - CSS 预处理器。\n- [WebGL](https://github.com/sjfricke/awesome-webgl#readme) - 用于渲染 3D 图形的 JavaScript API。\n- [Preact](https://github.com/preactjs/awesome-preact#readme) - 应用框架。\n- [Progressive Enhancement](https://github.com/jbmoelker/progressive-enhancement-resources#readme)\n- [Next.js](https://github.com/unicodeveloper/awesome-nextjs#readme) - 用于服务端渲染 React 应用的框架。\n- [lit](https://github.com/web-padawan/awesome-lit#readme) - 使用声明式模板系统构建 Web 组件的库。\n- [JAMstack](https://github.com/automata/awesome-jamstack#readme) - 基于客户端 JavaScript、可重用 API 和预构建标记的现代 Web 开发架构。\n- [WordPress-Gatsby](https://github.com/henrikwirth/awesome-wordpress-gatsby#readme) - 以 WordPress 为后端、Gatsby 为前端的网站开发技术栈。\n- [移动 Web 开发](https://github.com/myshov/awesome-mobile-web-development#readme) - 打造优秀的移动 Web 体验。\n- [Storybook](https://github.com/lauthieb/awesome-storybook#readme) - UI 组件开发环境。\n- [Blazor](https://github.com/AdrienTorris/awesome-blazor#readme) - 在浏览器中运行的 .NET Web 框架，使用 C#/Razor 和 HTML，通过 WebAssembly 实现。\n- [PageSpeed Metrics](https://github.com/csabapalfi/awesome-pagespeed-metrics#readme) - 用于帮助理解页面速度和用户体验的指标。\n- [Tailwind CSS](https://github.com/aniftyco/awesome-tailwindcss#readme) - 用于快速 UI 开发的实用优先 CSS 框架。\n- [Seed](https://github.com/seed-rs/awesome-seed-rs#readme) - 用于在 WebAssembly 中运行的 Rust Web 应用框架。\n- [Web 性能预算](https://github.com/pajaydev/awesome-web-performance-budget#readme) - 用于确保网站达到特定性能指标的技术。\n- [Web Animation](https://github.com/sergey-pimenov/awesome-web-animation#readme) - 在浏览器中用 JavaScript、CSS、SVG 等实现动画。\n- [Yew](https://github.com/jetli/awesome-yew#readme) - 受 Elm 和 React 启发的 Rust 框架，用于通过 WebAssembly 创建多线程前端 Web 应用。\n- [Material-UI](https://github.com/nadunindunil/awesome-material-ui#readme) - 更快速、更轻松 Web 开发的 Material Design React 组件。\n- [Web 应用构建块](https://github.com/componently-com/awesome-building-blocks-for-web-apps#readme) - 可集成到 Web 应用中的独立功能。\n- [Svelte](https://github.com/TheComputerM/awesome-svelte#readme) - 应用框架。\n- [设计系统](https://github.com/klaufel/awesome-design-systems#readme) - 由规则指导，保证一致性和速度的可复用组件集合。\n- [Inertia.js](https://github.com/innocenzi/awesome-inertiajs#readme) - 无需构建 API 即可创建单页应用。\n- [MDBootstrap](https://github.com/mdbootstrap/awesome-mdbootstrap#readme) - 用于快速构建网站的模板、布局、组件和小部件。\n- [Master CSS](https://github.com/master-co/awesome-master-css#readme) - 一种拥有增强语法的虚拟 CSS 语言。\n- [Hydrogen](https://github.com/shopify/awesome-hydrogen#readme) - 基于边缘优先的框架，用 React 构建 Shopify 店面。\n- [Tiny JS](https://github.com/thoughtspile/awesome-tiny-js#readme) - 依赖项加起来不超过 2 kB 的前端库。\n- [前端 GIS](https://github.com/joewdavies/awesome-frontend-gis#readme) - 用于 Web 浏览器的地理信息系统 (GIS)。\n- [WebGPU](https://github.com/mikbry/awesome-webgpu#readme) - 用于在 GPU 上渲染与计算的 JavaScript API。\n\n## 后端开发\n\n- [Flask](https://github.com/mjhea0/awesome-flask#readme) - Python 框架。\n- [Docker](https://github.com/veggiemonk/awesome-docker#readme)\n- [Vagrant](https://github.com/iJackUA/awesome-vagrant#readme) - 自动化虚拟机环境。\n- [Pyramid](https://github.com/uralbash/awesome-pyramid#readme) - Python 框架。\n- [Play1 Framework](https://github.com/PerfectCarl/awesome-play1#readme)\n- [CakePHP](https://github.com/friendsofcake/awesome-cakephp#readme) - PHP 框架。\n- [Symfony](https://github.com/sitepoint-editors/awesome-symfony#readme) - PHP 框架。\n\t- [Education](https://github.com/pehapkari/awesome-symfony-education#readme)\n- [Laravel](https://github.com/chiraggude/awesome-laravel#readme) - PHP 框架。\n\t- [Education](https://github.com/fukuball/Awesome-Laravel-Education#readme)\n\t- [TALL Stack](https://github.com/livewire/awesome-tall-stack#readme) - 由 Laravel 社区构建库组成的全栈开发解决方案。\n- [Rails](https://github.com/gramantin/awesome-rails#readme) - Ruby 的 Web 应用框架。\n\t- [Gems](https://github.com/hothero/awesome-rails-gem#readme) - 包。\n- [Phalcon](https://github.com/phalcon/awesome-phalcon#readme) - PHP 框架。\n- [有用的 `.htaccess` 片段](https://github.com/phanan/htaccess#readme)\n- [nginx](https://github.com/fcambus/nginx-resources#readme) - Web 服务器。\n- [Dropwizard](https://github.com/stve/awesome-dropwizard#readme) - Java 框架。\n- [Kubernetes](https://github.com/ramitsurana/awesome-kubernetes#readme) - 自动化 Linux 容器操作的开源平台。\n- [Lumen](https://github.com/unicodeveloper/awesome-lumen#readme) - PHP 微框架。\n- [Serverless Framework](https://github.com/pmuens/awesome-serverless#readme) - 无服务器计算和无服务器架构。\n- [Apache Wicket](https://github.com/PhantomYdn/awesome-wicket#readme) - Java Web 应用框架。\n- [Vert.x](https://github.com/vert-x3/vertx-awesome#readme) - 构建 JVM 上响应式应用的工具包。\n- [Terraform](https://github.com/shuaibiyy/awesome-terraform#readme) - 基础设施构建、变更和版本管理工具。\n- [Vapor](https://github.com/vapor-community/awesome-vapor#readme) - Swift 的服务端开发。\n- [Dash](https://github.com/ucg8j/awesome-dash#readme) - Python Web 应用框架。\n- [FastAPI](https://github.com/mjhea0/awesome-fastapi#readme) - Python Web 应用框架。\n- [CDK](https://github.com/kolomied/awesome-cdk#readme) - 用于以代码方式定义云基础设施的开源软件开发框架。\n- [IAM](https://github.com/kdeldycke/awesome-iam#readme) - 用户账户、认证和授权。\n- [Slim](https://github.com/nekofar/awesome-slim#readme) - PHP 框架。\n- [Fiber](https://github.com/gofiber/awesome-fiber#readme) - 基于 Go 语言中最快的 HTTP 引擎 Fasthttp 构建的 Web 框架。\n- [Kustomize](https://github.com/DevOpsHiveHQ/awesome-kustomize#readme) - Kubernetes 原生声明式配置管理工具。\n- [OpenTofu](https://github.com/virtualroot/awesome-opentofu#readme) - 开源的基础设施即代码工具。\n- [Reflex](https://github.com/reflex-dev/awesome-reflex#readme) - 无需 JavaScript 即可同时构建前后端的 Python Web 框架。\n\n## 计算机科学\n\n- [大学课程](https://github.com/prakhar1989/awesome-courses#readme)\n- [数据科学](https://github.com/academic/awesome-datascience#readme)\n\t- [教程](https://github.com/siboehm/awesome-learn-datascience#readme)\n- [机器学习](https://github.com/josephmisiti/awesome-machine-learning#readme)\n\t- [教程](https://github.com/ujjwalkarn/Machine-Learning-Tutorials#readme)\n\t- [Ruby 机器学习](https://github.com/arbox/machine-learning-with-ruby#readme) - 使用 Ruby 学习、实现和应用机器学习。\n\t- [Core ML 模型](https://github.com/likedan/Awesome-CoreML-Models#readme) - 适用于苹果机器学习框架的模型。\n\t- [H2O](https://github.com/h2oai/awesome-h2o#readme) - 用 Java 编写、支持 R、Python 和 Scala API 的开源分布式机器学习平台。\n\t- [面向机器学习的软件工程](https://github.com/SE-ML/awesome-seml#readme) - 从实验到生产级机器学习。\n\t- [金融中的 AI](https://github.com/georgezouq/awesome-ai-in-finance#readme) - 用机器学习解决金融领域问题。\n\t- [JAX](https://github.com/n2cholas/awesome-jax#readme) - 自动微分和 XLA 编译相结合，用于高性能机器学习研究。\n\t- [XAI](https://github.com/altamiracorp/awesome-xai#readme) - 为机器学习方法提供洞察、解释和可解释性。\n- [语音与自然语言处理](https://github.com/edobashira/speech-language-processing#readme)\n\t- [西班牙语](https://github.com/dav009/awesome-spanish-nlp#readme)\n\t- [Ruby 自然语言处理](https://github.com/arbox/nlp-with-ruby#readme)\n\t- [问答系统](https://github.com/seriousran/awesome-qa#readme) - 用机器实现自然语言提问与回答的科学。\n\t- [自然语言生成](https://github.com/accelerated-text/awesome-nlg#readme) - 用于数据到文本、对话代理和叙事生成应用的文本生成。\n- [语言学](https://github.com/theimpossibleastronaut/awesome-linguistics#readme)\n- [密码学](https://github.com/sobolevn/awesome-cryptography#readme)\n\t- [论文](https://github.com/pFarb/awesome-crypto-papers#readme) - 非密码学专业人员使用密码学的理论基础。\n- [计算机视觉](https://github.com/jbhuang0604/awesome-computer-vision#readme)\n- [深度学习](https://github.com/ChristosChristofidis/awesome-deep-learning#readme) - 神经网络。\n\t- [TensorFlow](https://github.com/jtoy/awesome-tensorflow#readme) - 机器智能库。\n\t- [TensorFlow.js](https://github.com/aaronhma/awesome-tensorflow-js#readme) - 用于训练和部署模型的 WebGL 加速机器学习 JavaScript 库。",
  "status": "ok"
}