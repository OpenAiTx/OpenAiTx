{
  "id": 4,
  "origin": "- [PostCSS](https://github.com/jdrgomes/awesome-postcss#readme) - CSS tool.\n- [Draft.js](https://github.com/nikgraf/awesome-draft-js#readme) - Rich text editor framework for React.\n- [Service Workers](https://github.com/TalAter/awesome-service-workers#readme)\n- [Progressive Web Apps](https://github.com/TalAter/awesome-progressive-web-apps#readme)\n- [choo](https://github.com/choojs/awesome-choo#readme) - App framework.\n- [Redux](https://github.com/brillout/awesome-redux#readme) - State container for JavaScript apps.\n- [Browserify](https://github.com/browserify/awesome-browserify#readme) - Module bundler.\n- [Sass](https://github.com/Famolus/awesome-sass#readme) - CSS preprocessor.\n- [Ant Design](https://github.com/websemantics/awesome-ant-design#readme) - Enterprise-class UI design language.\n- [Less](https://github.com/LucasBassetti/awesome-less#readme) - CSS preprocessor.\n- [WebGL](https://github.com/sjfricke/awesome-webgl#readme) - JavaScript API for rendering 3D graphics.\n- [Preact](https://github.com/preactjs/awesome-preact#readme) - App framework.\n- [Progressive Enhancement](https://github.com/jbmoelker/progressive-enhancement-resources#readme)\n- [Next.js](https://github.com/unicodeveloper/awesome-nextjs#readme) - Framework for server-rendered React apps.\n- [lit](https://github.com/web-padawan/awesome-lit#readme) - Library for building web components with a declarative template system.\n- [JAMstack](https://github.com/automata/awesome-jamstack#readme) - Modern web development architecture based on client-side JavaScript, reusable APIs, and prebuilt markup.\n- [WordPress-Gatsby](https://github.com/henrikwirth/awesome-wordpress-gatsby#readme) - Web development technology stack with WordPress as a back end and Gatsby as a front end.\n- [Mobile Web Development](https://github.com/myshov/awesome-mobile-web-development#readme) - Creating a great mobile web experience.\n- [Storybook](https://github.com/lauthieb/awesome-storybook#readme) - Development environment for UI components.\n- [Blazor](https://github.com/AdrienTorris/awesome-blazor#readme) - .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly.\n- [PageSpeed Metrics](https://github.com/csabapalfi/awesome-pagespeed-metrics#readme) - Metrics to help understand page speed and user experience.\n- [Tailwind CSS](https://github.com/aniftyco/awesome-tailwindcss#readme) - Utility-first CSS framework for rapid UI development.\n- [Seed](https://github.com/seed-rs/awesome-seed-rs#readme) - Rust framework for creating web apps running in WebAssembly.\n- [Web Performance Budget](https://github.com/pajaydev/awesome-web-performance-budget#readme) - Techniques to ensure certain performance metrics for a website.\n- [Web Animation](https://github.com/sergey-pimenov/awesome-web-animation#readme) - Animations in the browser with JavaScript, CSS, SVG, etc.\n- [Yew](https://github.com/jetli/awesome-yew#readme) - Rust framework inspired by Elm and React for creating multi-threaded frontend web apps with WebAssembly.\n- [Material-UI](https://github.com/nadunindunil/awesome-material-ui#readme) - Material Design React components for faster and easier web development.\n- [Building Blocks for Web Apps](https://github.com/componently-com/awesome-building-blocks-for-web-apps#readme) - Standalone features to be integrated into web apps.\n- [Svelte](https://github.com/TheComputerM/awesome-svelte#readme) - App framework.\n- [Design systems](https://github.com/klaufel/awesome-design-systems#readme) - Collection of reusable components, guided by rules that ensure consistency and speed.\n- [Inertia.js](https://github.com/innocenzi/awesome-inertiajs#readme) - Make single-page apps without building an API.\n- [MDBootstrap](https://github.com/mdbootstrap/awesome-mdbootstrap#readme) - Templates, layouts, components, and widgets to rapidly build websites.\n- [Master CSS](https://github.com/master-co/awesome-master-css#readme) - A virtual CSS language with enhanced syntax.\n- [Hydrogen](https://github.com/shopify/awesome-hydrogen#readme) - Edge-first framework for building Shopify storefronts with React.\n- [Tiny JS](https://github.com/thoughtspile/awesome-tiny-js#readme) - Frontend libraries that fit into 2 kB with dependencies.\n- [Frontend GIS](https://github.com/joewdavies/awesome-frontend-gis#readme) - Geographic Information Systems (GIS) for web browsers.\n- [WebGPU](https://github.com/mikbry/awesome-webgpu#readme) - JavaScript API for rendering and compute on GPUs.\n\n## Back-End Development\n\n- [Flask](https://github.com/mjhea0/awesome-flask#readme) - Python framework.\n- [Docker](https://github.com/veggiemonk/awesome-docker#readme)\n- [Vagrant](https://github.com/iJackUA/awesome-vagrant#readme) - Automation virtual machine environment.\n- [Pyramid](https://github.com/uralbash/awesome-pyramid#readme) - Python framework.\n- [Play1 Framework](https://github.com/PerfectCarl/awesome-play1#readme)\n- [CakePHP](https://github.com/friendsofcake/awesome-cakephp#readme) - PHP framework.\n- [Symfony](https://github.com/sitepoint-editors/awesome-symfony#readme) - PHP framework.\n\t- [Education](https://github.com/pehapkari/awesome-symfony-education#readme)\n- [Laravel](https://github.com/chiraggude/awesome-laravel#readme) - PHP framework.\n\t- [Education](https://github.com/fukuball/Awesome-Laravel-Education#readme)\n\t- [TALL Stack](https://github.com/livewire/awesome-tall-stack#readme) - Full-stack development solution featuring libraries built by the Laravel community.\n- [Rails](https://github.com/gramantin/awesome-rails#readme) - Web app framework for Ruby.\n\t- [Gems](https://github.com/hothero/awesome-rails-gem#readme) - Packages.\n- [Phalcon](https://github.com/phalcon/awesome-phalcon#readme) - PHP framework.\n- [Useful `.htaccess` Snippets](https://github.com/phanan/htaccess#readme)\n- [nginx](https://github.com/fcambus/nginx-resources#readme) - Web server.\n- [Dropwizard](https://github.com/stve/awesome-dropwizard#readme) - Java framework.\n- [Kubernetes](https://github.com/ramitsurana/awesome-kubernetes#readme) - Open-source platform that automates Linux container operations.\n- [Lumen](https://github.com/unicodeveloper/awesome-lumen#readme) - PHP micro-framework.\n- [Serverless Framework](https://github.com/pmuens/awesome-serverless#readme) - Serverless computing and serverless architectures.\n- [Apache Wicket](https://github.com/PhantomYdn/awesome-wicket#readme) - Java web app framework.\n- [Vert.x](https://github.com/vert-x3/vertx-awesome#readme) - Toolkit for building reactive apps on the JVM.\n- [Terraform](https://github.com/shuaibiyy/awesome-terraform#readme) - Tool for building, changing, and versioning infrastructure.\n- [Vapor](https://github.com/vapor-community/awesome-vapor#readme) - Server-side development in Swift.\n- [Dash](https://github.com/ucg8j/awesome-dash#readme) - Python web app framework.\n- [FastAPI](https://github.com/mjhea0/awesome-fastapi#readme) - Python web app framework.\n- [CDK](https://github.com/kolomied/awesome-cdk#readme) - Open-source software development framework for defining cloud infrastructure in code.\n- [IAM](https://github.com/kdeldycke/awesome-iam#readme) - User accounts, authentication and authorization.\n- [Slim](https://github.com/nekofar/awesome-slim#readme) - PHP framework.\n- [Fiber](https://github.com/gofiber/awesome-fiber#readme) - Web framework built on top of Fasthttp, the fastest HTTP engine for Go.\n- [Kustomize](https://github.com/DevOpsHiveHQ/awesome-kustomize#readme) - Kubernetes native declarative configuration management tool.\n- [OpenTofu](https://github.com/virtualroot/awesome-opentofu#readme) - Open-source infrastructure as code tool.\n- [Reflex](https://github.com/reflex-dev/awesome-reflex#readme) - Python web framework for building both your frontend and backend with no JavaScript.\n\n## Computer Science\n\n- [University Courses](https://github.com/prakhar1989/awesome-courses#readme)\n- [Data Science](https://github.com/academic/awesome-datascience#readme)\n\t- [Tutorials](https://github.com/siboehm/awesome-learn-datascience#readme)\n- [Machine Learning](https://github.com/josephmisiti/awesome-machine-learning#readme)\n\t- [Tutorials](https://github.com/ujjwalkarn/Machine-Learning-Tutorials#readme)\n\t- [ML with Ruby](https://github.com/arbox/machine-learning-with-ruby#readme) - Learning, implementing, and applying Machine Learning using Ruby.\n\t- [Core ML Models](https://github.com/likedan/Awesome-CoreML-Models#readme) - Models for Apple's machine learning framework.\n\t- [H2O](https://github.com/h2oai/awesome-h2o#readme) - Open source distributed machine learning platform written in Java with APIs in R, Python, and Scala.\n\t- [Software Engineering for Machine Learning](https://github.com/SE-ML/awesome-seml#readme) - From experiment to production-level machine learning.\n\t- [AI in Finance](https://github.com/georgezouq/awesome-ai-in-finance#readme) - Solving problems in finance with machine learning.\n\t- [JAX](https://github.com/n2cholas/awesome-jax#readme) - Automatic differentiation and XLA compilation brought together for high-performance machine learning research.\n\t- [XAI](https://github.com/altamiracorp/awesome-xai#readme) - Providing insight, explanations, and interpretability to machine learning methods.\n- [Speech and Natural Language Processing](https://github.com/edobashira/speech-language-processing#readme)\n\t- [Spanish](https://github.com/dav009/awesome-spanish-nlp#readme)\n\t- [NLP with Ruby](https://github.com/arbox/nlp-with-ruby#readme)\n\t- [Question Answering](https://github.com/seriousran/awesome-qa#readme) - The science of asking and answering in natural language with a machine.\n\t- [Natural Language Generation](https://github.com/accelerated-text/awesome-nlg#readme) - Generation of text used in data-to-text, conversational agents, and narrative generation applications.\n- [Linguistics](https://github.com/theimpossibleastronaut/awesome-linguistics#readme)\n- [Cryptography](https://github.com/sobolevn/awesome-cryptography#readme)\n\t- [Papers](https://github.com/pFarb/awesome-crypto-papers#readme) - Theory basics for using cryptography by non-cryptographers.\n- [Computer Vision](https://github.com/jbhuang0604/awesome-computer-vision#readme)\n- [Deep Learning](https://github.com/ChristosChristofidis/awesome-deep-learning#readme) - Neural networks.\n\t- [TensorFlow](https://github.com/jtoy/awesome-tensorflow#readme) - Library for machine intelligence.\n\t- [TensorFlow.js](https://github.com/aaronhma/awesome-tensorflow-js#readme) - WebGL-accelerated machine learning JavaScript library for training and deploying models.",
  "translate": "- [PostCSS](https://github.com/jdrgomes/awesome-postcss#readme) - CSS 도구.\n- [Draft.js](https://github.com/nikgraf/awesome-draft-js#readme) - React용 리치 텍스트 에디터 프레임워크.\n- [Service Workers](https://github.com/TalAter/awesome-service-workers#readme)\n- [Progressive Web Apps](https://github.com/TalAter/awesome-progressive-web-apps#readme)\n- [choo](https://github.com/choojs/awesome-choo#readme) - 앱 프레임워크.\n- [Redux](https://github.com/brillout/awesome-redux#readme) - 자바스크립트 앱을 위한 상태 컨테이너.\n- [Browserify](https://github.com/browserify/awesome-browserify#readme) - 모듈 번들러.\n- [Sass](https://github.com/Famolus/awesome-sass#readme) - CSS 전처리기.\n- [Ant Design](https://github.com/websemantics/awesome-ant-design#readme) - 엔터프라이즈급 UI 디자인 언어.\n- [Less](https://github.com/LucasBassetti/awesome-less#readme) - CSS 전처리기.\n- [WebGL](https://github.com/sjfricke/awesome-webgl#readme) - 3D 그래픽 렌더링을 위한 자바스크립트 API.\n- [Preact](https://github.com/preactjs/awesome-preact#readme) - 앱 프레임워크.\n- [Progressive Enhancement](https://github.com/jbmoelker/progressive-enhancement-resources#readme)\n- [Next.js](https://github.com/unicodeveloper/awesome-nextjs#readme) - 서버 렌더링 React 앱을 위한 프레임워크.\n- [lit](https://github.com/web-padawan/awesome-lit#readme) - 선언적 템플릿 시스템으로 웹 컴포넌트를 만드는 라이브러리.\n- [JAMstack](https://github.com/automata/awesome-jamstack#readme) - 클라이언트 사이드 자바스크립트, 재사용 가능한 API, 사전 빌드된 마크업 기반의 최신 웹 개발 아키텍처.\n- [WordPress-Gatsby](https://github.com/henrikwirth/awesome-wordpress-gatsby#readme) - 워드프레스를 백엔드로, Gatsby를 프론트엔드로 사용하는 웹 개발 기술 스택.\n- [Mobile Web Development](https://github.com/myshov/awesome-mobile-web-development#readme) - 훌륭한 모바일 웹 경험을 만드는 방법.\n- [Storybook](https://github.com/lauthieb/awesome-storybook#readme) - UI 컴포넌트 개발 환경.\n- [Blazor](https://github.com/AdrienTorris/awesome-blazor#readme) - C#/Razor와 HTML을 사용하여 브라우저에서 WebAssembly로 실행되는 .NET 웹 프레임워크.\n- [PageSpeed Metrics](https://github.com/csabapalfi/awesome-pagespeed-metrics#readme) - 페이지 속도와 사용자 경험을 이해하는 데 도움이 되는 지표들.\n- [Tailwind CSS](https://github.com/aniftyco/awesome-tailwindcss#readme) - 빠른 UI 개발을 위한 유틸리티 우선 CSS 프레임워크.\n- [Seed](https://github.com/seed-rs/awesome-seed-rs#readme) - WebAssembly에서 실행되는 웹 앱을 만들기 위한 Rust 프레임워크.\n- [Web Performance Budget](https://github.com/pajaydev/awesome-web-performance-budget#readme) - 웹사이트의 특정 성능 지표를 보장하는 기법.\n- [Web Animation](https://github.com/sergey-pimenov/awesome-web-animation#readme) - 자바스크립트, CSS, SVG 등으로 브라우저에서 애니메이션 구현.\n- [Yew](https://github.com/jetli/awesome-yew#readme) - Elm과 React에서 영감을 받은 Rust 프레임워크로, WebAssembly를 활용한 멀티스레드 프론트엔드 웹 앱 개발.\n- [Material-UI](https://github.com/nadunindunil/awesome-material-ui#readme) - 더 빠르고 쉬운 웹 개발을 위한 머티리얼 디자인 React 컴포넌트.\n- [Building Blocks for Web Apps](https://github.com/componently-com/awesome-building-blocks-for-web-apps#readme) - 웹 앱에 통합할 수 있는 독립형 기능들.\n- [Svelte](https://github.com/TheComputerM/awesome-svelte#readme) - 앱 프레임워크.\n- [Design systems](https://github.com/klaufel/awesome-design-systems#readme) - 일관성과 속도를 보장하는 규칙에 따라 안내되는 재사용 가능한 컴포넌트 모음.\n- [Inertia.js](https://github.com/innocenzi/awesome-inertiajs#readme) - API를 따로 구축하지 않고 싱글 페이지 앱 만들기.\n- [MDBootstrap](https://github.com/mdbootstrap/awesome-mdbootstrap#readme) - 빠른 웹사이트 제작을 위한 템플릿, 레이아웃, 컴포넌트, 위젯.\n- [Master CSS](https://github.com/master-co/awesome-master-css#readme) - 향상된 문법을 가진 가상 CSS 언어.\n- [Hydrogen](https://github.com/shopify/awesome-hydrogen#readme) - React로 Shopify 스토어프론트를 구축하는 Edge-first 프레임워크.\n- [Tiny JS](https://github.com/thoughtspile/awesome-tiny-js#readme) - 의존성을 포함해 2kB 이하의 프론트엔드 라이브러리.\n- [Frontend GIS](https://github.com/joewdavies/awesome-frontend-gis#readme) - 웹 브라우저를 위한 지리 정보 시스템(GIS).\n- [WebGPU](https://github.com/mikbry/awesome-webgpu#readme) - GPU에서 렌더링 및 연산을 수행하는 자바스크립트 API.\n\n## Back-End Development\n\n- [Flask](https://github.com/mjhea0/awesome-flask#readme) - Python 프레임워크.\n- [Docker](https://github.com/veggiemonk/awesome-docker#readme)\n- [Vagrant](https://github.com/iJackUA/awesome-vagrant#readme) - 자동화된 가상 머신 환경.\n- [Pyramid](https://github.com/uralbash/awesome-pyramid#readme) - Python 프레임워크.\n- [Play1 Framework](https://github.com/PerfectCarl/awesome-play1#readme)\n- [CakePHP](https://github.com/friendsofcake/awesome-cakephp#readme) - PHP 프레임워크.\n- [Symfony](https://github.com/sitepoint-editors/awesome-symfony#readme) - PHP 프레임워크.\n\t- [Education](https://github.com/pehapkari/awesome-symfony-education#readme)\n- [Laravel](https://github.com/chiraggude/awesome-laravel#readme) - PHP 프레임워크.\n\t- [Education](https://github.com/fukuball/Awesome-Laravel-Education#readme)\n\t- [TALL Stack](https://github.com/livewire/awesome-tall-stack#readme) - Laravel 커뮤니티에서 만든 라이브러리로 구성된 풀스택 개발 솔루션.\n- [Rails](https://github.com/gramantin/awesome-rails#readme) - Ruby용 웹 앱 프레임워크.\n\t- [Gems](https://github.com/hothero/awesome-rails-gem#readme) - 패키지.\n- [Phalcon](https://github.com/phalcon/awesome-phalcon#readme) - PHP 프레임워크.\n- [유용한 `.htaccess` 스니펫](https://github.com/phanan/htaccess#readme)\n- [nginx](https://github.com/fcambus/nginx-resources#readme) - 웹 서버.\n- [Dropwizard](https://github.com/stve/awesome-dropwizard#readme) - Java 프레임워크.\n- [Kubernetes](https://github.com/ramitsurana/awesome-kubernetes#readme) - 리눅스 컨테이너 운영 자동화를 위한 오픈소스 플랫폼.\n- [Lumen](https://github.com/unicodeveloper/awesome-lumen#readme) - PHP 마이크로 프레임워크.\n- [Serverless Framework](https://github.com/pmuens/awesome-serverless#readme) - 서버리스 컴퓨팅 및 서버리스 아키텍처.\n- [Apache Wicket](https://github.com/PhantomYdn/awesome-wicket#readme) - Java 웹 앱 프레임워크.\n- [Vert.x](https://github.com/vert-x3/vertx-awesome#readme) - JVM에서 리액티브 앱을 구축하기 위한 툴킷.\n- [Terraform](https://github.com/shuaibiyy/awesome-terraform#readme) - 인프라의 구축, 변경, 버전 관리를 위한 도구.\n- [Vapor](https://github.com/vapor-community/awesome-vapor#readme) - Swift 기반 서버사이드 개발.\n- [Dash](https://github.com/ucg8j/awesome-dash#readme) - Python 웹 앱 프레임워크.\n- [FastAPI](https://github.com/mjhea0/awesome-fastapi#readme) - Python 웹 앱 프레임워크.\n- [CDK](https://github.com/kolomied/awesome-cdk#readme) - 코드를 이용한 클라우드 인프라 정의를 위한 오픈소스 소프트웨어 개발 프레임워크.\n- [IAM](https://github.com/kdeldycke/awesome-iam#readme) - 사용자 계정, 인증 및 권한 관리.\n- [Slim](https://github.com/nekofar/awesome-slim#readme) - PHP 프레임워크.\n- [Fiber](https://github.com/gofiber/awesome-fiber#readme) - Go의 가장 빠른 HTTP 엔진인 Fasthttp 위에 구축된 웹 프레임워크.\n- [Kustomize](https://github.com/DevOpsHiveHQ/awesome-kustomize#readme) - 쿠버네이티브 선언적 구성 관리 도구.\n- [OpenTofu](https://github.com/virtualroot/awesome-opentofu#readme) - 오픈소스 인프라 코드 도구.\n- [Reflex](https://github.com/reflex-dev/awesome-reflex#readme) - 자바스크립트 없이 프론트엔드와 백엔드 모두를 구축할 수 있는 Python 웹 프레임워크.\n\n## Computer Science\n\n- [University Courses](https://github.com/prakhar1989/awesome-courses#readme)\n- [Data Science](https://github.com/academic/awesome-datascience#readme)\n\t- [Tutorials](https://github.com/siboehm/awesome-learn-datascience#readme)\n- [Machine Learning](https://github.com/josephmisiti/awesome-machine-learning#readme)\n\t- [Tutorials](https://github.com/ujjwalkarn/Machine-Learning-Tutorials#readme)\n\t- [ML with Ruby](https://github.com/arbox/machine-learning-with-ruby#readme) - Ruby를 이용한 머신러닝 학습, 구현 및 적용.\n\t- [Core ML Models](https://github.com/likedan/Awesome-CoreML-Models#readme) - 애플의 머신러닝 프레임워크용 모델.\n\t- [H2O](https://github.com/h2oai/awesome-h2o#readme) - R, Python, Scala용 API를 제공하는 Java 기반 오픈소스 분산 머신러닝 플랫폼.\n\t- [Software Engineering for Machine Learning](https://github.com/SE-ML/awesome-seml#readme) - 실험부터 프로덕션 레벨의 머신러닝까지.\n\t- [AI in Finance](https://github.com/georgezouq/awesome-ai-in-finance#readme) - 금융 분야 문제를 머신러닝으로 해결.\n\t- [JAX](https://github.com/n2cholas/awesome-jax#readme) - 고성능 머신러닝 연구를 위한 자동 미분 및 XLA 컴파일러 통합.\n\t- [XAI](https://github.com/altamiracorp/awesome-xai#readme) - 머신러닝 방법에 대한 인사이트, 설명, 해석 가능성 제공.\n- [Speech and Natural Language Processing](https://github.com/edobashira/speech-language-processing#readme)\n\t- [Spanish](https://github.com/dav009/awesome-spanish-nlp#readme)\n\t- [NLP with Ruby](https://github.com/arbox/nlp-with-ruby#readme)\n\t- [Question Answering](https://github.com/seriousran/awesome-qa#readme) - 자연어로 질문하고 답하는 과학.\n\t- [Natural Language Generation](https://github.com/accelerated-text/awesome-nlg#readme) - 데이터-텍스트, 대화형 에이전트, 내러티브 생성 등에 사용되는 텍스트 생성.\n- [Linguistics](https://github.com/theimpossibleastronaut/awesome-linguistics#readme)\n- [Cryptography](https://github.com/sobolevn/awesome-cryptography#readme)\n\t- [Papers](https://github.com/pFarb/awesome-crypto-papers#readme) - 비암호전문가를 위한 암호학 이론 기본 논문.\n- [Computer Vision](https://github.com/jbhuang0604/awesome-computer-vision#readme)\n- [Deep Learning](https://github.com/ChristosChristofidis/awesome-deep-learning#readme) - 신경망.\n\t- [TensorFlow](https://github.com/jtoy/awesome-tensorflow#readme) - 머신 인텔리전스를 위한 라이브러리.\n\t- [TensorFlow.js](https://github.com/aaronhma/awesome-tensorflow-js#readme) - 모델 학습 및 배포를 위한 WebGL 가속 자바스크립트 머신러닝 라이브러리.",
  "status": "ok"
}