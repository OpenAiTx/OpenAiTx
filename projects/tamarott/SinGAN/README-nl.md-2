{
  "id": 2,
  "origin": "\n```\nboth the masked and unmasked output will be saved.\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\n###  Paint to Image\n\nTo transfer a paint into a realistic image (See example in Fig. 11 in [our paper](https://arxiv.org/pdf/1905.01164.pdf)), please first train SinGAN model on the desired image (as described above), then save your paint under \"Input/Paint\", and run the command\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n\n```\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\nAdvanced option: Specify quantization_flag to be True, to re-train *only* the injection level of the model, to get a on a color-quantized version of upsampled generated images from the previous scale. For some images, this might lead to more realistic results.\n\n### Super Resolution\nTo super resolve an image, please run:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nThis will automatically train a SinGAN model correspond to 4x upsampling factor (if not exist already).\nFor different SR factors, please specify it using the parameter `--sr_factor` when calling the function.\nSinGAN's results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n## Additional Data and Functions\n\n### Single Image Fréchet Inception Distance (SIFID score)\nTo calculate the SIFID between real images and their corresponding fake samples, please run:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nMake sure that each of the fake images file name is identical to its corresponding real image file name. Images should be saved in `.jpg` format.\n\n### Super Resolution Results\nSinGAN's SR results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n### User Study\nThe data used for the user study can be found in the Downloads folder. \n\nreal folder: 50 real images, randomly picked from the [places database](http://places.csail.mit.edu/)\n\nfake_high_variance folder: random samples starting from n=N for each of the real images \n\nfake_mid_variance folder: random samples starting from n=N-1 for each of the real images \n\nFor additional details please see section 3.1 in our [paper](https://arxiv.org/pdf/1905.01164.pdf)\n",
  "origin_sha": "v2Hr70I0nZ4UNa7ZnNNQt5KYkmsFYj4x/0oM9zwQ87g=",
  "translate": "```\nzowel de gemaskeerde als ongemaskeerde output zullen worden opgeslagen.\nOok hier zal een andere injectieschaal verschillende bewerkingseffecten opleveren. De grofste injectieschaal is gelijk aan 1.\n\n###  Paint to Image\n\nOm een schilderij om te zetten in een realistisch beeld (zie voorbeeld in Fig. 11 in [onze paper](https://arxiv.org/pdf/1905.01164.pdf)), train eerst het SinGAN-model op het gewenste beeld (zoals hierboven beschreven), sla vervolgens je schilderij op onder \"Input/Paint\", en voer het volgende commando uit\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n\n```\nOok hier zal een andere injectieschaal verschillende bewerkingseffecten opleveren. De grofste injectieschaal is gelijk aan 1.\n\nGeavanceerde optie: Specificeer quantization_flag als True, om *alleen* het injectieniveau van het model opnieuw te trainen, om een kleur-gekwantiseerde versie te krijgen van de opgeëxtrapoleerde gegenereerde beelden van de vorige schaal. Voor sommige beelden kan dit tot realistischere resultaten leiden.\n\n### Superresolutie\nOm een beeld te vergroten (superresolutie), voer het volgende uit:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nDit traint automatisch een SinGAN-model dat overeenkomt met een 4x upsampling factor (indien nog niet aanwezig).\nVoor andere SR-factoren kun je deze specificeren met de parameter `--sr_factor` bij het aanroepen van de functie.\nSinGAN's resultaten op de BSD100 dataset kunnen worden gedownload uit de map 'Downloads'.\n\n## Extra Data en Functies\n\n### Single Image Fréchet Inception Distance (SIFID-score)\nOm de SIFID tussen echte beelden en hun corresponderende nep-samples te berekenen, voer:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nZorg ervoor dat elk nepbeeld exact dezelfde bestandsnaam heeft als het corresponderende echte beeld. Afbeeldingen moeten worden opgeslagen in `.jpg`-formaat.\n\n### Superresolutie Resultaten\nSinGAN's SR-resultaten op de BSD100 dataset kunnen worden gedownload uit de map 'Downloads'.\n\n### Gebruikersstudie\nDe data die is gebruikt voor de gebruikersstudie is te vinden in de map Downloads.\n\nreal folder: 50 echte afbeeldingen, willekeurig geselecteerd uit de [places database](http://places.csail.mit.edu/)\n\nfake_high_variance folder: willekeurige samples startend vanaf n=N voor elk van de echte beelden\n\nfake_mid_variance folder: willekeurige samples startend vanaf n=N-1 voor elk van de echte beelden\n\nVoor meer details, zie sectie 3.1 in onze [paper](https://arxiv.org/pdf/1905.01164.pdf)\n```",
  "status": "ok"
}