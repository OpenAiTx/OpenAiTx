{
  "id": 2,
  "origin": "\n```\nboth the masked and unmasked output will be saved.\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\n###  Paint to Image\n\nTo transfer a paint into a realistic image (See example in Fig. 11 in [our paper](https://arxiv.org/pdf/1905.01164.pdf)), please first train SinGAN model on the desired image (as described above), then save your paint under \"Input/Paint\", and run the command\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n\n```\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\nAdvanced option: Specify quantization_flag to be True, to re-train *only* the injection level of the model, to get a on a color-quantized version of upsampled generated images from the previous scale. For some images, this might lead to more realistic results.\n\n### Super Resolution\nTo super resolve an image, please run:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nThis will automatically train a SinGAN model correspond to 4x upsampling factor (if not exist already).\nFor different SR factors, please specify it using the parameter `--sr_factor` when calling the function.\nSinGAN's results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n## Additional Data and Functions\n\n### Single Image Fréchet Inception Distance (SIFID score)\nTo calculate the SIFID between real images and their corresponding fake samples, please run:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nMake sure that each of the fake images file name is identical to its corresponding real image file name. Images should be saved in `.jpg` format.\n\n### Super Resolution Results\nSinGAN's SR results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n### User Study\nThe data used for the user study can be found in the Downloads folder. \n\nreal folder: 50 real images, randomly picked from the [places database](http://places.csail.mit.edu/)\n\nfake_high_variance folder: random samples starting from n=N for each of the real images \n\nfake_mid_variance folder: random samples starting from n=N-1 for each of the real images \n\nFor additional details please see section 3.1 in our [paper](https://arxiv.org/pdf/1905.01164.pdf)\n",
  "origin_sha": "v2Hr70I0nZ4UNa7ZnNNQt5KYkmsFYj4x/0oM9zwQ87g=",
  "translate": "```\ntanto a saída mascarada quanto a não mascarada serão salvas.\nAqui também, diferentes escalas de injeção produzirão diferentes efeitos de edição. A escala de injeção mais grosseira é igual a 1.\n\n###  Pintar para Imagem\n\nPara transferir uma pintura para uma imagem realista (veja o exemplo na Fig. 11 em [nosso artigo](https://arxiv.org/pdf/1905.01164.pdf)), por favor, primeiro treine o modelo SinGAN na imagem desejada (conforme descrito acima), depois salve sua pintura em \"Input/Paint\", e execute o comando\n\n```\npython paint2image.py --input_name <nome_do_arquivo_de_imagem_de_treinamento> --ref_name <nome_do_arquivo_da_pintura> --paint_start_scale <escala_para_injetar>\n```\nAqui também, diferentes escalas de injeção produzirão diferentes efeitos de edição. A escala de injeção mais grosseira é igual a 1.\n\nOpção avançada: Especifique quantization_flag como True, para re-treinar *apenas* o nível de injeção do modelo, para obter uma versão quantizada em cores das imagens geradas aumentadas da escala anterior. Para algumas imagens, isso pode levar a resultados mais realistas.\n\n### Super Resolução\nPara super-resolver uma imagem, por favor, execute:\n```\npython SR.py --input_name <nome_do_arquivo_de_imagem_LR>\n```\nIsso irá automaticamente treinar um modelo SinGAN correspondente ao fator de upsampling 4x (se ainda não existir).\nPara diferentes fatores de SR, por favor, especifique usando o parâmetro `--sr_factor` ao chamar a função.\nOs resultados do SinGAN no conjunto de dados BSD100 podem ser baixados na pasta 'Downloads'.\n\n## Dados e Funções Adicionais\n\n### Single Image Fréchet Inception Distance (SIFID score)\nPara calcular o SIFID entre imagens reais e suas respectivas amostras falsas, por favor, execute:\n```\npython SIFID/sifid_score.py --path2real <caminho_para_imagens_reais> --path2fake <caminho_para_imagens_falsas> \n```\nCertifique-se de que o nome do arquivo de cada imagem falsa seja idêntico ao nome do arquivo da sua respectiva imagem real. As imagens devem ser salvas no formato `.jpg`.\n\n### Resultados de Super Resolução\nOs resultados de SR do SinGAN no conjunto de dados BSD100 podem ser baixados na pasta 'Downloads'.\n\n### Estudo de Usuário\nOs dados usados para o estudo de usuário podem ser encontrados na pasta Downloads.\n\npasta real: 50 imagens reais, escolhidas aleatoriamente do [banco de dados places](http://places.csail.mit.edu/)\n\npasta fake_high_variance: amostras aleatórias começando de n=N para cada uma das imagens reais\n\npasta fake_mid_variance: amostras aleatórias começando de n=N-1 para cada uma das imagens reais\n\nPara mais detalhes, veja a seção 3.1 em nosso [artigo](https://arxiv.org/pdf/1905.01164.pdf)\n```",
  "status": "ok"
}