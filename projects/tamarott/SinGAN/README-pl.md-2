{
  "id": 2,
  "origin": "\n```\nboth the masked and unmasked output will be saved.\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\n###  Paint to Image\n\nTo transfer a paint into a realistic image (See example in Fig. 11 in [our paper](https://arxiv.org/pdf/1905.01164.pdf)), please first train SinGAN model on the desired image (as described above), then save your paint under \"Input/Paint\", and run the command\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n\n```\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\nAdvanced option: Specify quantization_flag to be True, to re-train *only* the injection level of the model, to get a on a color-quantized version of upsampled generated images from the previous scale. For some images, this might lead to more realistic results.\n\n### Super Resolution\nTo super resolve an image, please run:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nThis will automatically train a SinGAN model correspond to 4x upsampling factor (if not exist already).\nFor different SR factors, please specify it using the parameter `--sr_factor` when calling the function.\nSinGAN's results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n## Additional Data and Functions\n\n### Single Image Fréchet Inception Distance (SIFID score)\nTo calculate the SIFID between real images and their corresponding fake samples, please run:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nMake sure that each of the fake images file name is identical to its corresponding real image file name. Images should be saved in `.jpg` format.\n\n### Super Resolution Results\nSinGAN's SR results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n### User Study\nThe data used for the user study can be found in the Downloads folder. \n\nreal folder: 50 real images, randomly picked from the [places database](http://places.csail.mit.edu/)\n\nfake_high_variance folder: random samples starting from n=N for each of the real images \n\nfake_mid_variance folder: random samples starting from n=N-1 for each of the real images \n\nFor additional details please see section 3.1 in our [paper](https://arxiv.org/pdf/1905.01164.pdf)\n",
  "origin_sha": "v2Hr70I0nZ4UNa7ZnNNQt5KYkmsFYj4x/0oM9zwQ87g=",
  "translate": "```\nzarówno zamaskowane, jak i niezamaskowane wyjście zostanie zapisane.\nRównież tutaj różna skala wstrzyknięcia wywoła różne efekty edycyjne. Najgrubsza skala wstrzyknięcia to 1.\n\n###  Paint to Image\n\nAby przekształcić malunek w realistyczny obraz (patrz przykład na Rys. 11 w [naszej pracy](https://arxiv.org/pdf/1905.01164.pdf)), najpierw wytrenuj model SinGAN na wybranym obrazie (jak opisano powyżej), następnie zapisz swój malunek w \"Input/Paint\" i uruchom polecenie\n\n```\npython paint2image.py --input_name <nazwa_pliku_obrazu_treningowego> --ref_name <nazwa_pliku_obrazu_malunku> --paint_start_scale <skala wstrzyknięcia>\n```\nRównież tutaj różna skala wstrzyknięcia wywoła różne efekty edycyjne. Najgrubsza skala wstrzyknięcia to 1.\n\nOpcja zaawansowana: Ustaw quantization_flag na True, aby przeuczyć *tylko* poziom wstrzyknięcia modelu, uzyskując wersję wygenerowanych obrazów z poprzedniej skali po kwantyzacji kolorów. Dla niektórych obrazów może to dać bardziej realistyczne rezultaty.\n\n### Super Resolution\nAby uzyskać super rozdzielczość obrazu, uruchom:\n```\npython SR.py --input_name <nazwa_pliku_LR_obrazu>\n```\nSpowoduje to automatyczne wytrenowanie modelu SinGAN odpowiadającego powiększeniu 4x (jeśli jeszcze nie istnieje).\nDla innych współczynników SR określ je za pomocą parametru `--sr_factor` przy wywołaniu funkcji.\nWyniki SinGAN dla zbioru danych BSD100 można pobrać z folderu 'Downloads'.\n\n## Dodatkowe Dane i Funkcje\n\n### Single Image Fréchet Inception Distance (SIFID score)\nAby obliczyć SIFID pomiędzy rzeczywistymi obrazami a odpowiadającymi im próbkami generowanymi, uruchom:\n```\npython SIFID/sifid_score.py --path2real <ścieżka_do_obrazów_rzeczywistych> --path2fake <ścieżka_do_obrazów_syntetycznych> \n```\nUpewnij się, że każda z nazw plików obrazów syntetycznych jest identyczna jak odpowiadających im obrazów rzeczywistych. Obrazy powinny być zapisane w formacie `.jpg`.\n\n### Wyniki Super Resolution\nWyniki SR SinGAN dla zbioru danych BSD100 można pobrać z folderu 'Downloads'.\n\n### Badanie Użytkowników\nDane użyte w badaniu użytkowników można znaleźć w folderze Downloads.\n\nfolder real: 50 prawdziwych obrazów, losowo wybranych z [bazy places](http://places.csail.mit.edu/)\n\nfolder fake_high_variance: losowe próbki rozpoczynające się od n=N dla każdego z rzeczywistych obrazów\n\nfolder fake_mid_variance: losowe próbki rozpoczynające się od n=N-1 dla każdego z rzeczywistych obrazów\n\nPo więcej informacji patrz sekcja 3.1 w naszej [pracy](https://arxiv.org/pdf/1905.01164.pdf)\n```",
  "status": "ok"
}