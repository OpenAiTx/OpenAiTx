{
  "id": 2,
  "origin": "\n```\nboth the masked and unmasked output will be saved.\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\n###  Paint to Image\n\nTo transfer a paint into a realistic image (See example in Fig. 11 in [our paper](https://arxiv.org/pdf/1905.01164.pdf)), please first train SinGAN model on the desired image (as described above), then save your paint under \"Input/Paint\", and run the command\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n\n```\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\nAdvanced option: Specify quantization_flag to be True, to re-train *only* the injection level of the model, to get a on a color-quantized version of upsampled generated images from the previous scale. For some images, this might lead to more realistic results.\n\n### Super Resolution\nTo super resolve an image, please run:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nThis will automatically train a SinGAN model correspond to 4x upsampling factor (if not exist already).\nFor different SR factors, please specify it using the parameter `--sr_factor` when calling the function.\nSinGAN's results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n## Additional Data and Functions\n\n### Single Image Fréchet Inception Distance (SIFID score)\nTo calculate the SIFID between real images and their corresponding fake samples, please run:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nMake sure that each of the fake images file name is identical to its corresponding real image file name. Images should be saved in `.jpg` format.\n\n### Super Resolution Results\nSinGAN's SR results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n### User Study\nThe data used for the user study can be found in the Downloads folder. \n\nreal folder: 50 real images, randomly picked from the [places database](http://places.csail.mit.edu/)\n\nfake_high_variance folder: random samples starting from n=N for each of the real images \n\nfake_mid_variance folder: random samples starting from n=N-1 for each of the real images \n\nFor additional details please see section 3.1 in our [paper](https://arxiv.org/pdf/1905.01164.pdf)\n",
  "origin_sha": "v2Hr70I0nZ4UNa7ZnNNQt5KYkmsFYj4x/0oM9zwQ87g=",
  "translate": "```\nкак замаскированный, так и незамаскированный вывод будут сохранены.\nЗдесь также различный масштаб внедрения приведет к различным эффектам редактирования. Самый грубый масштаб внедрения равен 1.\n\n###  Перевод рисунка в изображение\n\nЧтобы преобразовать рисунок в реалистичное изображение (см. пример на рис. 11 в [нашей статье](https://arxiv.org/pdf/1905.01164.pdf)), сначала обучите модель SinGAN на нужном изображении (как описано выше), затем сохраните ваш рисунок в папку \"Input/Paint\" и выполните команду\n\n```\npython paint2image.py --input_name <имя_файла_обучающего_изображения> --ref_name <имя_файла_рисунка> --paint_start_scale <масштаб_внедрения>\n```\n\nЗдесь также различный масштаб внедрения приведет к различным эффектам редактирования. Самый грубый масштаб внедрения равен 1.\n\nРасширенная опция: укажите quantization_flag как True, чтобы переобучить *только* уровень внедрения модели, получая версию с квантованием цветов для увеличенных сгенерированных изображений с предыдущего масштаба. Для некоторых изображений это может привести к более реалистичным результатам.\n\n### Суперразрешение\nДля увеличения разрешения изображения выполните:\n```\npython SR.py --input_name <имя_файла_низкоразрешенного_изображения>\n```\nЭто автоматически обучит модель SinGAN, соответствующую 4-кратному фактору увеличения (если таковой еще не существует).\nДля других коэффициентов увеличения укажите их с помощью параметра `--sr_factor` при вызове функции.\nРезультаты SinGAN на наборе данных BSD100 можно скачать из папки 'Downloads'.\n\n## Дополнительные данные и функции\n\n### Фреше-Инцепшн расстояние для одного изображения (SIFID score)\nЧтобы вычислить SIFID между реальными изображениями и соответствующими им поддельными образцами, выполните:\n```\npython SIFID/sifid_score.py --path2real <путь_к_реальным_изображениям> --path2fake <путь_к_поддельным_изображениям> \n```  \nУбедитесь, что имя каждого файла с поддельным изображением совпадает с именем соответствующего реального изображения. Изображения должны быть сохранены в формате `.jpg`.\n\n### Результаты суперразрешения\nРезультаты SR SinGAN на наборе данных BSD100 можно скачать из папки 'Downloads'.\n\n### Пользовательское исследование\nДанные, использованные для пользовательского исследования, можно найти в папке Downloads.\n\nпапка real: 50 реальных изображений, случайным образом выбранных из [базы данных places](http://places.csail.mit.edu/)\n\nпапка fake_high_variance: случайные образцы, начиная с n=N для каждого реального изображения \n\nпапка fake_mid_variance: случайные образцы, начиная с n=N-1 для каждого реального изображения \n\nДля получения дополнительных сведений см. раздел 3.1 в нашей [статье](https://arxiv.org/pdf/1905.01164.pdf)\n```",
  "status": "ok"
}