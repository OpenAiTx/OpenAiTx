{
  "id": 2,
  "origin": "\n```\nboth the masked and unmasked output will be saved.\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\n###  Paint to Image\n\nTo transfer a paint into a realistic image (See example in Fig. 11 in [our paper](https://arxiv.org/pdf/1905.01164.pdf)), please first train SinGAN model on the desired image (as described above), then save your paint under \"Input/Paint\", and run the command\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n\n```\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\nAdvanced option: Specify quantization_flag to be True, to re-train *only* the injection level of the model, to get a on a color-quantized version of upsampled generated images from the previous scale. For some images, this might lead to more realistic results.\n\n### Super Resolution\nTo super resolve an image, please run:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nThis will automatically train a SinGAN model correspond to 4x upsampling factor (if not exist already).\nFor different SR factors, please specify it using the parameter `--sr_factor` when calling the function.\nSinGAN's results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n## Additional Data and Functions\n\n### Single Image Fréchet Inception Distance (SIFID score)\nTo calculate the SIFID between real images and their corresponding fake samples, please run:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nMake sure that each of the fake images file name is identical to its corresponding real image file name. Images should be saved in `.jpg` format.\n\n### Super Resolution Results\nSinGAN's SR results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n### User Study\nThe data used for the user study can be found in the Downloads folder. \n\nreal folder: 50 real images, randomly picked from the [places database](http://places.csail.mit.edu/)\n\nfake_high_variance folder: random samples starting from n=N for each of the real images \n\nfake_mid_variance folder: random samples starting from n=N-1 for each of the real images \n\nFor additional details please see section 3.1 in our [paper](https://arxiv.org/pdf/1905.01164.pdf)\n",
  "origin_sha": "v2Hr70I0nZ4UNa7ZnNNQt5KYkmsFYj4x/0oM9zwQ87g=",
  "translate": "```\nhem maskelenmiş hem de maskelenmemiş çıktı kaydedilecektir.\nBurada da, farklı enjeksiyon ölçekleri farklı düzenleme efektleri üretecektir. En kaba enjeksiyon ölçeği 1'e eşittir.\n\n###  Resme Boyama\n\nBir boyamayı gerçekçi bir görüntüye aktarmak için (Bkz. Şekil 11, [makalemizde](https://arxiv.org/pdf/1905.01164.pdf)), lütfen önce istenen görüntü üzerinde SinGAN modelini eğitin (yukarıda açıklandığı gibi), ardından boyamanızı \"Input/Paint\" altında kaydedin ve şu komutu çalıştırın:\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n```\nBurada da, farklı enjeksiyon ölçekleri farklı düzenleme efektleri üretecektir. En kaba enjeksiyon ölçeği 1'e eşittir.\n\nGelişmiş seçenek: quantization_flag parametresini True olarak belirtin, böylece modelin *yalnızca* enjeksiyon seviyesini, bir önceki ölçekten yukarı örneklenen oluşturulmuş görüntülerin renk-kuantalize edilmiş bir versiyonu üzerinde yeniden eğitebilirsiniz. Bazı görüntüler için, bu daha gerçekçi sonuçlara yol açabilir.\n\n### Süper Çözünürlük\nBir görüntüyü süper çözünürlüklü yapmak için, lütfen şu komutu çalıştırın:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nBu, otomatik olarak 4x yükseltme faktörüne karşılık gelen bir SinGAN modeli eğitecektir (eğer zaten mevcut değilse).\nFarklı SR faktörleri için, fonksiyonu çağırırken `--sr_factor` parametresini kullanarak belirtebilirsiniz.\nSinGAN'ın BSD100 veri seti üzerindeki sonuçları 'Downloads' klasöründen indirilebilir.\n\n## Ek Veri ve Fonksiyonlar\n\n### Tek Görüntü Fréchet Inception Distance (SIFID skoru)\nGerçek görüntüler ile karşılık gelen sahte örnekleri arasındaki SIFID'i hesaplamak için, lütfen şu komutu çalıştırın:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nHer sahte görüntü dosya adının, karşılık gelen gerçek görüntü dosya adı ile aynı olduğundan emin olun. Görüntüler `.jpg` formatında kaydedilmelidir.\n\n### Süper Çözünürlük Sonuçları\nSinGAN'ın BSD100 veri seti üzerindeki SR sonuçları 'Downloads' klasöründen indirilebilir.\n\n### Kullanıcı Çalışması\nKullanıcı çalışması için kullanılan veriler Downloads klasöründe bulunabilir.\n\nreal klasörü: [places veritabanından](http://places.csail.mit.edu/) rastgele seçilmiş 50 gerçek görüntü\n\nfake_high_variance klasörü: her gerçek görüntü için n=N'den başlayarak üretilmiş rastgele örnekler\n\nfake_mid_variance klasörü: her gerçek görüntü için n=N-1'den başlayarak üretilmiş rastgele örnekler\n\nEk ayrıntılar için lütfen [makalemizin](https://arxiv.org/pdf/1905.01164.pdf) 3.1 bölümüne bakınız.\n```",
  "status": "ok"
}