{
  "id": 2,
  "origin": "\n```\nboth the masked and unmasked output will be saved.\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\n###  Paint to Image\n\nTo transfer a paint into a realistic image (See example in Fig. 11 in [our paper](https://arxiv.org/pdf/1905.01164.pdf)), please first train SinGAN model on the desired image (as described above), then save your paint under \"Input/Paint\", and run the command\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n\n```\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\nAdvanced option: Specify quantization_flag to be True, to re-train *only* the injection level of the model, to get a on a color-quantized version of upsampled generated images from the previous scale. For some images, this might lead to more realistic results.\n\n### Super Resolution\nTo super resolve an image, please run:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nThis will automatically train a SinGAN model correspond to 4x upsampling factor (if not exist already).\nFor different SR factors, please specify it using the parameter `--sr_factor` when calling the function.\nSinGAN's results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n## Additional Data and Functions\n\n### Single Image Fréchet Inception Distance (SIFID score)\nTo calculate the SIFID between real images and their corresponding fake samples, please run:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nMake sure that each of the fake images file name is identical to its corresponding real image file name. Images should be saved in `.jpg` format.\n\n### Super Resolution Results\nSinGAN's SR results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n### User Study\nThe data used for the user study can be found in the Downloads folder. \n\nreal folder: 50 real images, randomly picked from the [places database](http://places.csail.mit.edu/)\n\nfake_high_variance folder: random samples starting from n=N for each of the real images \n\nfake_mid_variance folder: random samples starting from n=N-1 for each of the real images \n\nFor additional details please see section 3.1 in our [paper](https://arxiv.org/pdf/1905.01164.pdf)\n",
  "origin_sha": "v2Hr70I0nZ4UNa7ZnNNQt5KYkmsFYj4x/0oM9zwQ87g=",
  "translate": "```\ntanto la salida enmascarada como la no enmascarada serán guardadas.\nAquí también, diferentes escalas de inyección producirán diferentes efectos de edición. La escala de inyección más gruesa es igual a 1.\n\n###  Pintar a Imagen\n\nPara transferir una pintura a una imagen realista (ver ejemplo en la Fig. 11 de [nuestro artículo](https://arxiv.org/pdf/1905.01164.pdf)), primero entrene el modelo SinGAN en la imagen deseada (como se describe arriba), luego guarde su pintura en \"Input/Paint\" y ejecute el comando\n\n```\npython paint2image.py --input_name <nombre_archivo_imagen_entrenamiento> --ref_name <nombre_archivo_imagen_pintura> --paint_start_scale <escala para inyectar>\n```\nAquí también, diferentes escalas de inyección producirán diferentes efectos de edición. La escala de inyección más gruesa es igual a 1.\n\nOpción avanzada: Especifique quantization_flag como True, para reentrenar *solo* el nivel de inyección del modelo, para obtener una versión cuantizada por color de las imágenes generadas reescaladas de la escala anterior. Para algunas imágenes, esto puede llevar a resultados más realistas.\n\n### Super Resolución\nPara superresolver una imagen, ejecute:\n```\npython SR.py --input_name <nombre_archivo_imagen_baja_resolucion>\n```\nEsto entrenará automáticamente un modelo SinGAN correspondiente a un factor de aumento de 4x (si no existe ya).\nPara diferentes factores de SR, especifíquelo utilizando el parámetro `--sr_factor` al llamar a la función.\nLos resultados de SinGAN en el conjunto de datos BSD100 pueden descargarse desde la carpeta 'Downloads'.\n\n## Datos y Funciones Adicionales\n\n### Single Image Fréchet Inception Distance (Puntaje SIFID)\nPara calcular el SIFID entre imágenes reales y sus muestras falsas correspondientes, ejecute:\n```\npython SIFID/sifid_score.py --path2real <ruta_imagenes_reales> --path2fake <ruta_imagenes_falsas> \n```  \nAsegúrese de que cada nombre de archivo de imagen falsa sea idéntico al nombre de archivo de la imagen real correspondiente. Las imágenes deben guardarse en formato `.jpg`.\n\n### Resultados de Super Resolución\nLos resultados de SR de SinGAN en el conjunto de datos BSD100 pueden descargarse desde la carpeta 'Downloads'.\n\n### Estudio de Usuario\nLos datos utilizados para el estudio de usuario se encuentran en la carpeta Downloads.\n\ncarpeta real: 50 imágenes reales, seleccionadas aleatoriamente de la [base de datos places](http://places.csail.mit.edu/)\n\ncarpeta fake_high_variance: muestras aleatorias comenzando desde n=N para cada una de las imágenes reales\n\ncarpeta fake_mid_variance: muestras aleatorias comenzando desde n=N-1 para cada una de las imágenes reales\n\nPara más detalles, por favor vea la sección 3.1 de nuestro [artículo](https://arxiv.org/pdf/1905.01164.pdf)\n```",
  "status": "ok"
}