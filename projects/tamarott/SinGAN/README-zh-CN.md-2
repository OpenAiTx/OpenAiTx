{
  "id": 2,
  "origin": "\n```\nboth the masked and unmasked output will be saved.\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\n###  Paint to Image\n\nTo transfer a paint into a realistic image (See example in Fig. 11 in [our paper](https://arxiv.org/pdf/1905.01164.pdf)), please first train SinGAN model on the desired image (as described above), then save your paint under \"Input/Paint\", and run the command\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n\n```\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\nAdvanced option: Specify quantization_flag to be True, to re-train *only* the injection level of the model, to get a on a color-quantized version of upsampled generated images from the previous scale. For some images, this might lead to more realistic results.\n\n### Super Resolution\nTo super resolve an image, please run:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nThis will automatically train a SinGAN model correspond to 4x upsampling factor (if not exist already).\nFor different SR factors, please specify it using the parameter `--sr_factor` when calling the function.\nSinGAN's results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n## Additional Data and Functions\n\n### Single Image Fréchet Inception Distance (SIFID score)\nTo calculate the SIFID between real images and their corresponding fake samples, please run:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nMake sure that each of the fake images file name is identical to its corresponding real image file name. Images should be saved in `.jpg` format.\n\n### Super Resolution Results\nSinGAN's SR results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n### User Study\nThe data used for the user study can be found in the Downloads folder. \n\nreal folder: 50 real images, randomly picked from the [places database](http://places.csail.mit.edu/)\n\nfake_high_variance folder: random samples starting from n=N for each of the real images \n\nfake_mid_variance folder: random samples starting from n=N-1 for each of the real images \n\nFor additional details please see section 3.1 in our [paper](https://arxiv.org/pdf/1905.01164.pdf)\n",
  "origin_sha": "v2Hr70I0nZ4UNa7ZnNNQt5KYkmsFYj4x/0oM9zwQ87g=",
  "translate": "```\n掩码和非掩码的输出都会被保存。\n同样，不同的注入尺度会产生不同的编辑效果。最粗的注入尺度为1。\n\n### 画作转图像\n\n要将一幅画作转换为逼真的图像（参见[我们的论文](https://arxiv.org/pdf/1905.01164.pdf)中的图11示例），请首先在目标图像上训练SinGAN模型（如上所述），然后将你的画作保存在 \"Input/Paint\" 文件夹下，并运行以下命令：\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n```\n同样，不同的注入尺度会产生不同的编辑效果。最粗的注入尺度为1。\n\n高级选项：将 quantization_flag 指定为 True，仅对模型的注入层进行重新训练，以便对上一尺度上采样生成图像的颜色进行量化。对于某些图像，这可能会带来更真实的结果。\n\n### 超分辨率\n要对图像进行超分辨率处理，请运行：\n```\npython SR.py --input_name <LR_image_file_name>\n```\n这将自动训练一个与4倍上采样因子对应的SinGAN模型（如果尚未存在）。\n如需不同的超分辨率因子，请在调用函数时通过参数 `--sr_factor` 指定。\nSinGAN在BSD100数据集上的结果可在 'Downloads' 文件夹中下载。\n\n## 附加数据和功能\n\n### 单图像Fréchet Inception距离（SIFID分数）\n要计算真实图像与其对应的生成样本之间的SIFID分数，请运行：\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \n请确保每个生成图像的文件名与其对应的真实图像文件名完全相同。图像应以 `.jpg` 格式保存。\n\n### 超分辨率结果\nSinGAN在BSD100数据集上的超分辨率结果可在 'Downloads' 文件夹中下载。\n\n### 用户研究\n用于用户研究的数据可在 Downloads 文件夹中找到。\n\nreal 文件夹：50张真实图像，随机选自 [places database](http://places.csail.mit.edu/)\n\nfake_high_variance 文件夹：对每张真实图像从 n=N 开始的随机样本\n\nfake_mid_variance 文件夹：对每张真实图像从 n=N-1 开始的随机样本\n\n更多细节请参见我们[论文](https://arxiv.org/pdf/1905.01164.pdf)的第3.1节。\n```",
  "status": "ok"
}