{
  "id": 2,
  "origin": "\n```\nboth the masked and unmasked output will be saved.\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\n###  Paint to Image\n\nTo transfer a paint into a realistic image (See example in Fig. 11 in [our paper](https://arxiv.org/pdf/1905.01164.pdf)), please first train SinGAN model on the desired image (as described above), then save your paint under \"Input/Paint\", and run the command\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n\n```\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\nAdvanced option: Specify quantization_flag to be True, to re-train *only* the injection level of the model, to get a on a color-quantized version of upsampled generated images from the previous scale. For some images, this might lead to more realistic results.\n\n### Super Resolution\nTo super resolve an image, please run:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nThis will automatically train a SinGAN model correspond to 4x upsampling factor (if not exist already).\nFor different SR factors, please specify it using the parameter `--sr_factor` when calling the function.\nSinGAN's results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n## Additional Data and Functions\n\n### Single Image Fréchet Inception Distance (SIFID score)\nTo calculate the SIFID between real images and their corresponding fake samples, please run:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nMake sure that each of the fake images file name is identical to its corresponding real image file name. Images should be saved in `.jpg` format.\n\n### Super Resolution Results\nSinGAN's SR results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n### User Study\nThe data used for the user study can be found in the Downloads folder. \n\nreal folder: 50 real images, randomly picked from the [places database](http://places.csail.mit.edu/)\n\nfake_high_variance folder: random samples starting from n=N for each of the real images \n\nfake_mid_variance folder: random samples starting from n=N-1 for each of the real images \n\nFor additional details please see section 3.1 in our [paper](https://arxiv.org/pdf/1905.01164.pdf)\n",
  "origin_sha": "v2Hr70I0nZ4UNa7ZnNNQt5KYkmsFYj4x/0oM9zwQ87g=",
  "translate": "```\nsowohl die maskierten als auch die unmaskierten Ausgaben werden gespeichert.\nAuch hier führt ein unterschiedlicher Injection-Scale zu verschiedenen Editiereffekten. Der gröbste Injection-Scale entspricht 1.\n\n###  Paint to Image\n\nUm eine Zeichnung in ein realistisches Bild zu übertragen (siehe Beispiel in Abb. 11 in [unserem Paper](https://arxiv.org/pdf/1905.01164.pdf)), trainieren Sie bitte zunächst das SinGAN-Modell auf dem gewünschten Bild (wie oben beschrieben), speichern Sie dann Ihre Zeichnung unter \"Input/Paint\" und führen Sie den folgenden Befehl aus:\n\n```\npython paint2image.py --input_name <Training_Bild_Dateiname> --ref_name <Zeichnungs_Bild_Dateiname> --paint_start_scale <Skala zum Injizieren>\n```\nAuch hier führt ein unterschiedlicher Injection-Scale zu verschiedenen Editiereffekten. Der gröbste Injection-Scale entspricht 1.\n\nErweiterte Option: Geben Sie quantization_flag auf True an, um *nur* die Injektionsebene des Modells erneut zu trainieren, um eine farbquantisierte Version der vom vorherigen Maßstab hochskalierten generierten Bilder zu erhalten. Für einige Bilder kann dies zu realistischeren Ergebnissen führen.\n\n### Super Resolution\nUm ein Bild superaufzulösen, führen Sie bitte aus:\n```\npython SR.py --input_name <LR_Bild_Dateiname>\n```\nDadurch wird automatisch ein SinGAN-Modell mit entsprechendem 4x Upsampling-Faktor trainiert (falls noch nicht vorhanden).\nFür andere SR-Faktoren geben Sie diesen bitte mit dem Parameter `--sr_factor` beim Aufruf der Funktion an.\nSinGAN-Ergebnisse auf dem BSD100-Datensatz können im Ordner 'Downloads' heruntergeladen werden.\n\n## Zusätzliche Daten und Funktionen\n\n### Single Image Fréchet Inception Distance (SIFID score)\nUm die SIFID zwischen echten Bildern und ihren entsprechenden Fake-Samples zu berechnen, führen Sie bitte aus:\n```\npython SIFID/sifid_score.py --path2real <Pfad zu echten Bildern> --path2fake <Pfad zu Fake-Bildern>\n```  \nStellen Sie sicher, dass jeder Fake-Bild-Dateiname mit dem entsprechenden echten Bild-Dateinamen identisch ist. Bilder sollten im `.jpg`-Format gespeichert werden.\n\n### Super Resolution Ergebnisse\nSinGANs SR-Ergebnisse auf dem BSD100-Datensatz können aus dem Ordner 'Downloads' heruntergeladen werden.\n\n### Benutzerstudie\nDie für die Benutzerstudie verwendeten Daten finden Sie im Ordner Downloads.\n\nreal-Ordner: 50 echte Bilder, zufällig aus der [Places-Datenbank](http://places.csail.mit.edu/) ausgewählt\n\nfake_high_variance-Ordner: Zufallsbeispiele beginnend ab n=N für jedes der echten Bilder\n\nfake_mid_variance-Ordner: Zufallsbeispiele beginnend ab n=N-1 für jedes der echten Bilder\n\nFür weitere Details siehe Abschnitt 3.1 in unserem [Paper](https://arxiv.org/pdf/1905.01164.pdf)\n```",
  "status": "ok"
}