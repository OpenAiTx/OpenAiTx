{
  "id": 2,
  "origin": "\n```\nboth the masked and unmasked output will be saved.\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\n###  Paint to Image\n\nTo transfer a paint into a realistic image (See example in Fig. 11 in [our paper](https://arxiv.org/pdf/1905.01164.pdf)), please first train SinGAN model on the desired image (as described above), then save your paint under \"Input/Paint\", and run the command\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n\n```\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\nAdvanced option: Specify quantization_flag to be True, to re-train *only* the injection level of the model, to get a on a color-quantized version of upsampled generated images from the previous scale. For some images, this might lead to more realistic results.\n\n### Super Resolution\nTo super resolve an image, please run:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nThis will automatically train a SinGAN model correspond to 4x upsampling factor (if not exist already).\nFor different SR factors, please specify it using the parameter `--sr_factor` when calling the function.\nSinGAN's results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n## Additional Data and Functions\n\n### Single Image Fréchet Inception Distance (SIFID score)\nTo calculate the SIFID between real images and their corresponding fake samples, please run:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nMake sure that each of the fake images file name is identical to its corresponding real image file name. Images should be saved in `.jpg` format.\n\n### Super Resolution Results\nSinGAN's SR results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n### User Study\nThe data used for the user study can be found in the Downloads folder. \n\nreal folder: 50 real images, randomly picked from the [places database](http://places.csail.mit.edu/)\n\nfake_high_variance folder: random samples starting from n=N for each of the real images \n\nfake_mid_variance folder: random samples starting from n=N-1 for each of the real images \n\nFor additional details please see section 3.1 in our [paper](https://arxiv.org/pdf/1905.01164.pdf)\n",
  "origin_sha": "v2Hr70I0nZ4UNa7ZnNNQt5KYkmsFYj4x/0oM9zwQ87g=",
  "translate": "```\nles sorties masquées et non masquées seront enregistrées.\nIci aussi, différentes échelles d'injection produiront des effets d’édition différents. L’échelle d’injection la plus grossière est égale à 1.\n\n###  Paint to Image\n\nPour transférer une peinture en une image réaliste (voir exemple dans la Fig. 11 de [notre article](https://arxiv.org/pdf/1905.01164.pdf)), veuillez d’abord entraîner le modèle SinGAN sur l’image souhaitée (comme décrit ci-dessus), puis sauvegardez votre peinture dans \"Input/Paint\", et exécutez la commande suivante\n\n```\npython paint2image.py --input_name <nom_fichier_image_entraînement> --ref_name <nom_fichier_image_peinture> --paint_start_scale <échelle d’injection>\n```\nIci aussi, différentes échelles d'injection produiront des effets d’édition différents. L’échelle d’injection la plus grossière est égale à 1.\n\nOption avancée : Spécifiez quantization_flag à True, pour réentraîner *uniquement* le niveau d’injection du modèle, afin d’obtenir une version à couleurs quantifiées des images générées suréchantillonnées à partir de l’échelle précédente. Pour certaines images, cela peut conduire à des résultats plus réalistes.\n\n### Super Résolution\nPour super-résoudre une image, exécutez :\n```\npython SR.py --input_name <nom_fichier_image_BF>\n```\nCela entraînera automatiquement un modèle SinGAN correspondant à un facteur de suréchantillonnage 4x (si non déjà existant).\nPour différents facteurs de SR, veuillez le spécifier à l'aide du paramètre `--sr_factor` lors de l’appel de la fonction.\nLes résultats de SinGAN sur le jeu de données BSD100 peuvent être téléchargés depuis le dossier 'Downloads'.\n\n## Données et fonctions supplémentaires\n\n### Single Image Fréchet Inception Distance (score SIFID)\nPour calculer le SIFID entre des images réelles et leurs échantillons générés correspondants, exécutez :\n```\npython SIFID/sifid_score.py --path2real <chemin_images_réelles> --path2fake <chemin_images_fausses> \n```  \nAssurez-vous que le nom de fichier de chaque image générée soit identique à celui de son image réelle correspondante. Les images doivent être enregistrées au format `.jpg`.\n\n### Résultats de Super Résolution\nLes résultats de SR de SinGAN sur le jeu de données BSD100 peuvent être téléchargés depuis le dossier 'Downloads'.\n\n### Étude Utilisateur\nLes données utilisées pour l’étude utilisateur se trouvent dans le dossier Downloads.\n\ndossier real : 50 images réelles, sélectionnées au hasard depuis la [base de données places](http://places.csail.mit.edu/)\n\ndossier fake_high_variance : échantillons aléatoires à partir de n=N pour chacune des images réelles\n\ndossier fake_mid_variance : échantillons aléatoires à partir de n=N-1 pour chacune des images réelles\n\nPour plus de détails, veuillez consulter la section 3.1 de notre [article](https://arxiv.org/pdf/1905.01164.pdf)\n```",
  "status": "ok"
}