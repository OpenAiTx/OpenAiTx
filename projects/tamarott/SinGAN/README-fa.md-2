{
  "id": 2,
  "origin": "\n```\nboth the masked and unmasked output will be saved.\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\n###  Paint to Image\n\nTo transfer a paint into a realistic image (See example in Fig. 11 in [our paper](https://arxiv.org/pdf/1905.01164.pdf)), please first train SinGAN model on the desired image (as described above), then save your paint under \"Input/Paint\", and run the command\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n\n```\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\nAdvanced option: Specify quantization_flag to be True, to re-train *only* the injection level of the model, to get a on a color-quantized version of upsampled generated images from the previous scale. For some images, this might lead to more realistic results.\n\n### Super Resolution\nTo super resolve an image, please run:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nThis will automatically train a SinGAN model correspond to 4x upsampling factor (if not exist already).\nFor different SR factors, please specify it using the parameter `--sr_factor` when calling the function.\nSinGAN's results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n## Additional Data and Functions\n\n### Single Image Fréchet Inception Distance (SIFID score)\nTo calculate the SIFID between real images and their corresponding fake samples, please run:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nMake sure that each of the fake images file name is identical to its corresponding real image file name. Images should be saved in `.jpg` format.\n\n### Super Resolution Results\nSinGAN's SR results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n### User Study\nThe data used for the user study can be found in the Downloads folder. \n\nreal folder: 50 real images, randomly picked from the [places database](http://places.csail.mit.edu/)\n\nfake_high_variance folder: random samples starting from n=N for each of the real images \n\nfake_mid_variance folder: random samples starting from n=N-1 for each of the real images \n\nFor additional details please see section 3.1 in our [paper](https://arxiv.org/pdf/1905.01164.pdf)\n",
  "origin_sha": "v2Hr70I0nZ4UNa7ZnNNQt5KYkmsFYj4x/0oM9zwQ87g=",
  "translate": "```\nهم خروجی ماسک‌شده و هم خروجی بدون ماسک ذخیره خواهند شد.\nدر اینجا نیز، مقیاس‌های تزریق مختلف، افکت‌های ویرایشی متفاوتی تولید خواهند کرد. درشت‌ترین مقیاس تزریق برابر با 1 است.\n\n### تبدیل نقاشی به تصویر\n\nبرای تبدیل یک نقاشی به یک تصویر واقعی (به مثال در شکل 11 در [مقاله ما](https://arxiv.org/pdf/1905.01164.pdf) مراجعه کنید)، ابتدا باید مدل SinGAN را روی تصویر دلخواه آموزش دهید (همانطور که در بالا توضیح داده شد)، سپس نقاشی خود را در مسیر \"Input/Paint\" ذخیره کنید و دستور زیر را اجرا نمایید:\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n```\nدر اینجا نیز، مقیاس‌های تزریق مختلف، افکت‌های ویرایشی متفاوتی تولید خواهند کرد. درشت‌ترین مقیاس تزریق برابر با 1 است.\n\nگزینه پیشرفته: مقدار quantization_flag را True قرار دهید تا *فقط* سطح تزریق مدل مجدداً آموزش داده شود و نسخه کوانتایز رنگی از تصاویر تولیدی بزرگ‌نمایی‌شده از مقیاس قبلی به دست آید. برای برخی تصاویر، این کار ممکن است به نتایج واقعی‌تری منجر شود.\n\n### ابر وضوح (Super Resolution)\nبرای افزایش وضوح تصویر، دستور زیر را اجرا کنید:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nاین دستور به طور خودکار مدل SinGAN را برای ضریب بزرگ‌نمایی 4 برابر آموزش می‌دهد (در صورت عدم وجود قبلی).\nبرای ضریب‌های بزرگ‌نمایی مختلف، می‌توانید پارامتر `--sr_factor` را هنگام فراخوانی تابع مشخص کنید.\nنتایج SinGAN روی دیتاست BSD100 را می‌توانید از پوشه 'Downloads' دانلود کنید.\n\n## داده‌ها و توابع اضافی\n\n### فاصله فرچت اینسپشن تک‌تصویری (SIFID score)\nبرای محاسبه SIFID بین تصاویر واقعی و نمونه‌های جعلی متناظر آن‌ها، دستور زیر را اجرا کنید:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nاطمینان حاصل کنید که نام فایل هر تصویر جعلی دقیقاً با نام فایل تصویر واقعی متناظر آن یکسان باشد. تصاویر باید با فرمت `.jpg` ذخیره شوند.\n\n### نتایج ابر وضوح\nنتایج SR مدل SinGAN بر روی دیتاست BSD100 را می‌توانید از پوشه 'Downloads' دانلود کنید.\n\n### مطالعه کاربری\nداده‌های استفاده‌شده برای مطالعه کاربری را می‌توانید در پوشه Downloads پیدا کنید.\n\nپوشه real: ۵۰ تصویر واقعی که به صورت تصادفی از [پایگاه داده places](http://places.csail.mit.edu/) انتخاب شده‌اند.\n\nپوشه fake_high_variance: نمونه‌های تصادفی که برای هر تصویر واقعی از n=N شروع شده‌اند.\n\nپوشه fake_mid_variance: نمونه‌های تصادفی که برای هر تصویر واقعی از n=N-1 شروع شده‌اند.\n\nبرای جزئیات بیشتر لطفاً به بخش 3.1 در [مقاله ما](https://arxiv.org/pdf/1905.01164.pdf) مراجعه کنید.\n```",
  "status": "ok"
}