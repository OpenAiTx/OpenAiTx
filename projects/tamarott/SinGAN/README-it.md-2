{
  "id": 2,
  "origin": "\n```\nboth the masked and unmasked output will be saved.\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\n###  Paint to Image\n\nTo transfer a paint into a realistic image (See example in Fig. 11 in [our paper](https://arxiv.org/pdf/1905.01164.pdf)), please first train SinGAN model on the desired image (as described above), then save your paint under \"Input/Paint\", and run the command\n\n```\npython paint2image.py --input_name <training_image_file_name> --ref_name <paint_image_file_name> --paint_start_scale <scale to inject>\n\n```\nHere as well, different injection scale will produce different editing effects. The coarsest injection scale equals 1. \n\nAdvanced option: Specify quantization_flag to be True, to re-train *only* the injection level of the model, to get a on a color-quantized version of upsampled generated images from the previous scale. For some images, this might lead to more realistic results.\n\n### Super Resolution\nTo super resolve an image, please run:\n```\npython SR.py --input_name <LR_image_file_name>\n```\nThis will automatically train a SinGAN model correspond to 4x upsampling factor (if not exist already).\nFor different SR factors, please specify it using the parameter `--sr_factor` when calling the function.\nSinGAN's results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n## Additional Data and Functions\n\n### Single Image Fréchet Inception Distance (SIFID score)\nTo calculate the SIFID between real images and their corresponding fake samples, please run:\n```\npython SIFID/sifid_score.py --path2real <real images path> --path2fake <fake images path> \n```  \nMake sure that each of the fake images file name is identical to its corresponding real image file name. Images should be saved in `.jpg` format.\n\n### Super Resolution Results\nSinGAN's SR results on the BSD100 dataset can be download from the 'Downloads' folder.\n\n### User Study\nThe data used for the user study can be found in the Downloads folder. \n\nreal folder: 50 real images, randomly picked from the [places database](http://places.csail.mit.edu/)\n\nfake_high_variance folder: random samples starting from n=N for each of the real images \n\nfake_mid_variance folder: random samples starting from n=N-1 for each of the real images \n\nFor additional details please see section 3.1 in our [paper](https://arxiv.org/pdf/1905.01164.pdf)\n",
  "origin_sha": "v2Hr70I0nZ4UNa7ZnNNQt5KYkmsFYj4x/0oM9zwQ87g=",
  "translate": "```\nsia l’output mascherato che quello non mascherato verranno salvati.\nAnche qui, scale di iniezione differenti produrranno effetti di editing differenti. La scala di iniezione più grossolana è pari a 1.\n\n###  Paint to Image\n\nPer trasferire un dipinto in un’immagine realistica (vedi esempio in Fig. 11 nel [nostro articolo](https://arxiv.org/pdf/1905.01164.pdf)), si prega prima di addestrare il modello SinGAN sull’immagine desiderata (come descritto sopra), poi salvare il dipinto sotto \"Input/Paint\" ed eseguire il comando\n\n```\npython paint2image.py --input_name <nome_file_immagine_training> --ref_name <nome_file_immagine_paint> --paint_start_scale <scala di iniezione>\n```\nAnche qui, scale di iniezione differenti produrranno effetti di editing differenti. La scala di iniezione più grossolana è pari a 1.\n\nOpzione avanzata: Specificare quantization_flag come True, per ri-addestrare *solo* il livello di iniezione del modello, per ottenere una versione color-quantized delle immagini generate upscalate dal livello precedente. Per alcune immagini, questo può portare a risultati più realistici.\n\n### Super Resolution\nPer super-risoluzione di un’immagine, eseguire:\n```\npython SR.py --input_name <nome_file_immagine_LR>\n```\nQuesto addestrerà automaticamente un modello SinGAN corrispondente a un fattore di upsampling 4x (se non esiste già).\nPer diversi fattori di super-risoluzione, specificarli tramite il parametro `--sr_factor` durante la chiamata della funzione.\nI risultati di SinGAN sul dataset BSD100 possono essere scaricati dalla cartella 'Downloads'.\n\n## Dati e Funzioni Addizionali\n\n### Single Image Fréchet Inception Distance (SIFID score)\nPer calcolare il SIFID tra immagini reali e i loro campioni fake corrispondenti, eseguire:\n```\npython SIFID/sifid_score.py --path2real <percorso immagini reali> --path2fake <percorso immagini fake>\n```  \nAssicurarsi che ciascun nome file delle immagini fake sia identico a quello dell’immagine reale corrispondente. Le immagini devono essere salvate in formato `.jpg`.\n\n### Risultati di Super Resolution\nI risultati di SR di SinGAN sul dataset BSD100 possono essere scaricati dalla cartella 'Downloads'.\n\n### Studio Utenti\nI dati utilizzati per lo studio utenti sono disponibili nella cartella Downloads.\n\ncartella real: 50 immagini reali, selezionate casualmente dal [places database](http://places.csail.mit.edu/)\n\ncartella fake_high_variance: campioni casuali a partire da n=N per ciascuna delle immagini reali\n\ncartella fake_mid_variance: campioni casuali a partire da n=N-1 per ciascuna delle immagini reali\n\nPer ulteriori dettagli vedere la sezione 3.1 del nostro [articolo](https://arxiv.org/pdf/1905.01164.pdf)\n```",
  "status": "ok"
}