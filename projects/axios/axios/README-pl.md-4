{
  "id": 4,
  "origin": "```js\n// GET request for remote image in node.js\naxios({\n  method: 'get',\n  url: 'https://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\n```\n\n##### axios(url[, config])\n\n```js\n// Send a GET request (default method)\naxios('/user/12345');\n```\n\n### Request method aliases\n\nFor convenience, aliases have been provided for all common request methods.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### NOTE\nWhen using the alias methods `url`, `method`, and `data` properties don't need to be specified in config.\n\n### Concurrency (Deprecated)\nPlease use `Promise.all` to replace the below functions.\n\nHelper functions for dealing with concurrent requests.\n\naxios.all(iterable)\naxios.spread(callback)\n\n### Creating an instance\n\nYou can create a new instance of axios with a custom config.\n\n##### axios.create([config])\n\n```js\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Instance methods\n\nThe available instance methods are listed below. The specified config will be merged with the instance config.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n##### axios#getUri([config])\n\n## Request Config\n\nThese are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified.\n\n```js\n{\n  // `url` is the server URL that will be used for the request\n  url: '/user',\n\n  // `method` is the request method to be used when making the request\n  method: 'get', // default\n\n  // `baseURL` will be prepended to `url` unless `url` is absolute and option `allowAbsoluteUrls` is set to true.\n  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  // to methods of that instance.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `allowAbsoluteUrls` determines whether or not absolute URLs will override a configured `baseUrl`.\n  // When set to true (default), absolute values for `url` will override `baseUrl`.\n  // When set to false, absolute values for `url` will always be prepended by `baseUrl`.\n  allowAbsoluteUrls: true,\n\n  // `transformRequest` allows changes to the request data before it is sent to the server\n  // This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'\n  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  // FormData or Stream\n  // You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    // Do whatever you want to transform the data",
  "origin_sha": "co1Hn4ZRh5nPxLnUTP5ObxsaoNqkZVrBAqvn+/2Td4Y=",
  "translate": "```js\n// Żądanie GET dla zdalnego obrazu w node.js\naxios({\n  method: 'get',\n  url: 'https://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\n```\n\n##### axios(url[, config])\n\n```js\n// Wyślij żądanie GET (domyślna metoda)\naxios('/user/12345');\n```\n\n### Aliasów metod żądania\n\nDla wygody, zostały dostarczone aliasy dla wszystkich popularnych metod żądania.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### UWAGA\nPodczas korzystania z metod aliasów właściwości `url`, `method` i `data` nie muszą być określone w config.\n\n### Współbieżność (Przestarzałe)\nProszę używać `Promise.all` zamiast poniższych funkcji.\n\nFunkcje pomocnicze do obsługi współbieżnych żądań.\n\naxios.all(iterable)\naxios.spread(callback)\n\n### Tworzenie instancji\n\nMożesz utworzyć nową instancję axios z własną konfiguracją.\n\n##### axios.create([config])\n\n```js\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Metody instancji\n\nDostępne metody instancji są wymienione poniżej. Określona konfiguracja zostanie połączona z konfiguracją instancji.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n##### axios#getUri([config])\n\n## Konfiguracja żądania\n\nOto dostępne opcje konfiguracji przy wysyłaniu żądań. Wymagany jest tylko `url`. Domyślnie żądania będą miały metodę `GET`, jeśli `method` nie zostanie określona.\n\n```js\n{\n  // `url` to adres URL serwera, który zostanie użyty do żądania\n  url: '/user',\n\n  // `method` to metoda żądania, która zostanie użyta podczas wysyłania żądania\n  method: 'get', // domyślnie\n\n  // `baseURL` zostanie dodany na początku do `url`, chyba że `url` jest absolutny i opcja `allowAbsoluteUrls` jest ustawiona na true.\n  // Ustawienie `baseURL` dla instancji axios może być wygodne do przekazywania względnych adresów URL\n  // do metod tej instancji.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `allowAbsoluteUrls` określa, czy absolutne adresy URL nadpiszą skonfigurowany `baseUrl`.\n  // Gdy ustawione na true (domyślnie), wartości absolutne dla `url` nadpiszą `baseUrl`.\n  // Gdy ustawione na false, wartości absolutne dla `url` zawsze będą poprzedzone przez `baseUrl`.\n  allowAbsoluteUrls: true,\n\n  // `transformRequest` umożliwia modyfikację danych żądania przed wysłaniem ich do serwera\n  // Ma to zastosowanie tylko dla metod 'PUT', 'POST', 'PATCH' i 'DELETE'\n  // Ostatnia funkcja w tablicy musi zwracać string lub instancję Buffer, ArrayBuffer,\n  // FormData lub Stream\n  // Możesz modyfikować obiekt headers.\n  transformRequest: [function (data, headers) {\n    // Zrób cokolwiek, aby przekształcić dane\n```",
  "status": "ok"
}