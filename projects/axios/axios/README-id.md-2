{
  "id": 2,
  "origin": "- Automatic transforms for [JSON](https://www.json.org/json-en.html) data\n- ðŸ†• Automatic data object serialization to `multipart/form-data` and `x-www-form-urlencoded` body encodings\n- Client side support for protecting against [XSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Browser Support\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\nLatest âœ” | Latest âœ” | Latest âœ” | Latest âœ” | Latest âœ” | 11 âœ” |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installing\n\n### Package manager\n\nUsing npm:\n\n```bash\n$ npm install axios\n```\n\nUsing bower:\n\n```bash\n$ bower install axios\n```\n\nUsing yarn:\n\n```bash\n$ yarn add axios\n```\n\nUsing pnpm:\n\n```bash\n$ pnpm add axios\n```\n\nUsing bun:\n\n```bash\n$ bun add axios\n```\n\nOnce the package is installed, you can import the library using `import` or `require` approach:\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\nYou can also use the default export, since the named export is just a re-export from the Axios factory:\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n````\n\nIf you use `require` for importing, **only default export is available**:\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\nFor some bundlers and some ES6 linters you may need to do the following:\n\n```js\nimport { default as axios } from 'axios';\n```\n\nFor cases where something went wrong when trying to import a module into a custom or legacy environment,\nyou can try importing the module package directly:\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // browser commonJS bundle (ES2017)\n// const axios = require('axios/dist/node/axios.cjs'); // node commonJS bundle (ES2017)\n```\n\n### CDN\n\nUsing jsDelivr CDN (ES5 UMD browser module):\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\nUsing unpkg CDN:\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## Example\n\n> **Note**: CommonJS usage  \n> In order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()`, use the following approach:",
  "origin_sha": "v1NJQMAwr48ek+yIJ/5xAG3QAPGdQRiixkZMiBnSypE=",
  "translate": "- Transformasi otomatis untuk data [JSON](https://www.json.org/json-en.html)\n- ðŸ†• Serialisasi objek data secara otomatis ke encoding body `multipart/form-data` dan `x-www-form-urlencoded`\n- Dukungan sisi klien untuk perlindungan terhadap [XSRF](https://id.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Dukungan Browser\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\nTerbaru âœ” | Terbaru âœ” | Terbaru âœ” | Terbaru âœ” | Terbaru âœ” | 11 âœ” |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Instalasi\n\n### Package manager\n\nMenggunakan npm:\n\n```bash\n$ npm install axios\n```\n\nMenggunakan bower:\n\n```bash\n$ bower install axios\n```\n\nMenggunakan yarn:\n\n```bash\n$ yarn add axios\n```\n\nMenggunakan pnpm:\n\n```bash\n$ pnpm add axios\n```\n\nMenggunakan bun:\n\n```bash\n$ bun add axios\n```\n\nSetelah paket terpasang, Anda dapat mengimpor library menggunakan pendekatan `import` atau `require`:\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\nAnda juga dapat menggunakan ekspor default, karena ekspor bernama hanyalah re-ekspor dari pabrik Axios:\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n```\n\nJika Anda menggunakan `require` untuk mengimpor, **hanya ekspor default yang tersedia**:\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\nUntuk beberapa bundler dan beberapa linter ES6 Anda mungkin perlu melakukan hal berikut:\n\n```js\nimport { default as axios } from 'axios';\n```\n\nUntuk kasus di mana terjadi kesalahan saat mencoba mengimpor modul ke lingkungan kustom atau lama,\nAnda dapat mencoba mengimpor paket modul secara langsung:\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // bundle commonJS browser (ES2017)\n// const axios = require('axios/dist/node/axios.cjs'); // bundle commonJS node (ES2017)\n```\n\n### CDN\n\nMenggunakan jsDelivr CDN (modul browser ES5 UMD):\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\nMenggunakan unpkg CDN:\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## Contoh\n\n> **Catatan**: Penggunaan CommonJS  \n> Untuk mendapatkan tipe TypeScript (untuk intellisense / autocomplete) saat menggunakan impor CommonJS dengan `require()`, gunakan pendekatan berikut:",
  "status": "ok"
}