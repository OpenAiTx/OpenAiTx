{
  "id": 2,
  "origin": "- Automatic transforms for [JSON](https://www.json.org/json-en.html) data\n- ğŸ†• Automatic data object serialization to `multipart/form-data` and `x-www-form-urlencoded` body encodings\n- Client side support for protecting against [XSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Browser Support\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\nLatest âœ” | Latest âœ” | Latest âœ” | Latest âœ” | Latest âœ” | 11 âœ” |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installing\n\n### Package manager\n\nUsing npm:\n\n```bash\n$ npm install axios\n```\n\nUsing bower:\n\n```bash\n$ bower install axios\n```\n\nUsing yarn:\n\n```bash\n$ yarn add axios\n```\n\nUsing pnpm:\n\n```bash\n$ pnpm add axios\n```\n\nUsing bun:\n\n```bash\n$ bun add axios\n```\n\nOnce the package is installed, you can import the library using `import` or `require` approach:\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\nYou can also use the default export, since the named export is just a re-export from the Axios factory:\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n````\n\nIf you use `require` for importing, **only default export is available**:\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\nFor some bundlers and some ES6 linters you may need to do the following:\n\n```js\nimport { default as axios } from 'axios';\n```\n\nFor cases where something went wrong when trying to import a module into a custom or legacy environment,\nyou can try importing the module package directly:\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // browser commonJS bundle (ES2017)\n// const axios = require('axios/dist/node/axios.cjs'); // node commonJS bundle (ES2017)\n```\n\n### CDN\n\nUsing jsDelivr CDN (ES5 UMD browser module):\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\nUsing unpkg CDN:\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## Example\n\n> **Note**: CommonJS usage  \n> In order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()`, use the following approach:",
  "origin_sha": "v1NJQMAwr48ek+yIJ/5xAG3QAPGdQRiixkZMiBnSypE=",
  "translate": "- [JSON](https://www.json.org/json-en.html) verileri iÃ§in otomatik dÃ¶nÃ¼ÅŸÃ¼mler\n- ğŸ†• `multipart/form-data` ve `x-www-form-urlencoded` gÃ¶vde kodlamalarÄ±na otomatik veri nesnesi serileÅŸtirme\n- [XSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery) saldÄ±rÄ±larÄ±na karÅŸÄ± koruma iÃ§in istemci tarafÄ± desteÄŸi\n\n## TarayÄ±cÄ± DesteÄŸi\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\nSon SÃ¼rÃ¼m âœ” | Son SÃ¼rÃ¼m âœ” | Son SÃ¼rÃ¼m âœ” | Son SÃ¼rÃ¼m âœ” | Son SÃ¼rÃ¼m âœ” | 11 âœ” |\n\n[![TarayÄ±cÄ± Matrisi](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Kurulum\n\n### Paket yÃ¶neticisi\n\nnpm kullanarak:\n\n```bash\n$ npm install axios\n```\n\nbower kullanarak:\n\n```bash\n$ bower install axios\n```\n\nyarn kullanarak:\n\n```bash\n$ yarn add axios\n```\n\npnpm kullanarak:\n\n```bash\n$ pnpm add axios\n```\n\nbun kullanarak:\n\n```bash\n$ bun add axios\n```\n\nPaket yÃ¼klendikten sonra, kÃ¼tÃ¼phaneyi `import` veya `require` yaklaÅŸÄ±mÄ±yla iÃ§e aktarabilirsiniz:\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\nAyrÄ±ca varsayÄ±lan dÄ±ÅŸa aktarmayÄ± da kullanabilirsiniz, Ã§Ã¼nkÃ¼ isimli dÄ±ÅŸa aktarma sadece Axios fabrikasÄ±ndan tekrar dÄ±ÅŸa aktarÄ±lÄ±r:\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n```\n\nEÄŸer iÃ§e aktarmak iÃ§in `require` kullanÄ±rsanÄ±z, **yalnÄ±zca varsayÄ±lan dÄ±ÅŸa aktarma kullanÄ±labilir**:\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\nBazÄ± paketleyiciler ve bazÄ± ES6 lint araÃ§larÄ± iÃ§in aÅŸaÄŸÄ±dakini yapmanÄ±z gerekebilir:\n\n```js\nimport { default as axios } from 'axios';\n```\n\nBir modÃ¼lÃ¼ Ã¶zel veya eski bir ortama iÃ§e aktarmaya Ã§alÄ±ÅŸÄ±rken bir ÅŸeyler ters giderse,\nmodÃ¼l paketini doÄŸrudan iÃ§e aktarmayÄ± deneyebilirsiniz:\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // tarayÄ±cÄ± commonJS paketi (ES2017)\n// const axios = require('axios/dist/node/axios.cjs'); // node commonJS paketi (ES2017)\n```\n\n### CDN\n\njsDelivr CDN kullanarak (ES5 UMD tarayÄ±cÄ± modÃ¼lÃ¼):\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\nunpkg CDN kullanarak:\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## Ã–rnek\n\n> **Not**: CommonJS kullanÄ±mÄ±  \n> TypeScript tÃ¼rlerini (intellisense / otomatik tamamlama iÃ§in) CommonJS iÃ§e aktarma ile `require()` kullanÄ±rken elde etmek iÃ§in aÅŸaÄŸÄ±daki yaklaÅŸÄ±mÄ± kullanÄ±n:",
  "status": "ok"
}