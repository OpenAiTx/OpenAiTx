{
  "id": 10,
  "origin": "  });\n```\n\n## Cancellation\n\n### AbortController\n\nStarting from `v0.22.0` Axios supports AbortController to cancel requests in fetch API way:\n\n```js\nconst controller = new AbortController();\n\naxios.get('/foo/bar', {\n   signal: controller.signal\n}).then(function(response) {\n   //...\n});\n// cancel the request\ncontroller.abort()\n```\n\n### CancelToken `๐deprecated`\n\nYou can also cancel a request using a *CancelToken*.\n\n> The axios cancel token API is based on the withdrawn [cancellable promises proposal](https://github.com/tc39/proposal-cancelable-promises).\n\n> This API is deprecated since v0.22.0 and shouldn't be used in new projects\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\naxios.get('/user/12345', {\n  cancelToken: source.token\n}).catch(function (thrown) {\n  if (axios.isCancel(thrown)) {\n    console.log('Request canceled', thrown.message);\n  } else {\n    // handle error\n  }\n});\n\naxios.post('/user/12345', {\n  name: 'new name'\n}, {\n  cancelToken: source.token\n})\n\n// cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user.');\n```\n\nYou can also create a cancel token by passing an executor function to the `CancelToken` constructor:\n\n```js\nconst CancelToken = axios.CancelToken;\nlet cancel;\n\naxios.get('/user/12345', {\n  cancelToken: new CancelToken(function executor(c) {\n    // An executor function receives a cancel function as a parameter\n    cancel = c;\n  })\n});\n\n// cancel the request\ncancel();\n```\n\n> **Note:** you can cancel several requests with the same cancel token/abort controller.\n> If a cancellation token is already cancelled at the moment of starting an Axios request, then the request is cancelled immediately, without any attempts to make a real request.\n\n> During the transition period, you can use both cancellation APIs, even for the same request:\n\n## Using `application/x-www-form-urlencoded` format\n\n### URLSearchParams\n\nBy default, axios serializes JavaScript objects to `JSON`. To send data in the [`application/x-www-form-urlencoded` format](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) instead, you can use the [`URLSearchParams`](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams) API, which is [supported](http://www.caniuse.com/#feat=urlsearchparams) in the vast majority of browsers,and [ Node](https://nodejs.org/api/url.html#url_class_urlsearchparams) starting with v10 (released in 2018).\n\n```js\nconst params = new URLSearchParams({ foo: 'bar' });\nparams.append('extraparam', 'value');\naxios.post('/foo', params);\n```\n\n### Query string (Older browsers)\n\nFor compatibility with very old browsers, there is a [polyfill](https://github.com/WebReflection/url-search-params) available (make sure to polyfill the global environment).\n\nAlternatively, you can encode data using the [`qs`](https://github.com/ljharb/qs) library:\n\n```js\nconst qs = require('qs');\naxios.post('/foo', qs.stringify({ 'bar': 123 }));\n```\n",
  "origin_sha": "VxjhD9ljiSwD1HApECbz1lsvUZyJrgZ3cDJoBGagQ8E=",
  "translate": "```markdown\n  });\n```\n\n## ุงูุฅูุบุงุก\n\n### AbortController\n\nุจุฏุกูุง ูู ุงูุฅุตุฏุงุฑ `v0.22.0` ูุฏุนู Axios ุงุณุชุฎุฏุงู AbortController ูุฅูุบุงุก ุงูุทูุจุงุช ุจุทุฑููุฉ fetch API:\n\n```js\nconst controller = new AbortController();\n\naxios.get('/foo/bar', {\n   signal: controller.signal\n}).then(function(response) {\n   //...\n});\n// ุฅูุบุงุก ุงูุทูุจ\ncontroller.abort()\n```\n\n### CancelToken `๐ูููู`\n\nููููู ุฃูุถูุง ุฅูุบุงุก ุงูุทูุจ ุจุงุณุชุฎุฏุงู *CancelToken*.\n\n> ุชุนุชูุฏ ูุงุฌูุฉ CancelToken ูู axios ุนูู [ุงูุชุฑุงุญ ุงููุนูุฏ ุงููุงุจูุฉ ููุฅูุบุงุก](https://github.com/tc39/proposal-cancelable-promises) ุงูุฐู ุชู ุณุญุจู.\n\n> ูุฐู ุงููุงุฌูุฉ ููููุฉ ููุฐ ุงูุฅุตุฏุงุฑ v0.22.0 ููุง ูุฌุจ ุงุณุชุฎุฏุงููุง ูู ุงููุดุงุฑูุน ุงูุฌุฏูุฏุฉ\n\nููููู ุฅูุดุงุก ุฑูุฒ ุฅูุบุงุก ุจุงุณุชุฎุฏุงู ุฏุงูุฉ ุงููุตูุน `CancelToken.source` ููุง ูู ููุถุญ ุฃุฏูุงู:\n\n```js\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\naxios.get('/user/12345', {\n  cancelToken: source.token\n}).catch(function (thrown) {\n  if (axios.isCancel(thrown)) {\n    console.log('ุชู ุฅูุบุงุก ุงูุทูุจ', thrown.message);\n  } else {\n    // ูุนุงูุฌุฉ ุงูุฎุทุฃ\n  }\n});\n\naxios.post('/user/12345', {\n  name: 'new name'\n}, {\n  cancelToken: source.token\n})\n\n// ุฅูุบุงุก ุงูุทูุจ (ูุนููุฉ ุงูุฑุณุงูุฉ ุงุฎุชูุงุฑูุฉ)\nsource.cancel('ุชู ุฅูุบุงุก ุงูุนูููุฉ ูู ูุจู ุงููุณุชุฎุฏู.');\n```\n\nููููู ุฃูุถูุง ุฅูุดุงุก ุฑูุฒ ุฅูุบุงุก ุนู ุทุฑูู ุชูุฑูุฑ ุฏุงูุฉ ูููุฐ (executor) ุฅูู ููุดุฆ `CancelToken`:\n\n```js\nconst CancelToken = axios.CancelToken;\nlet cancel;\n\naxios.get('/user/12345', {\n  cancelToken: new CancelToken(function executor(c) {\n    // ุฏุงูุฉ ุงููููุฐ ุชุณุชูุจู ุฏุงูุฉ ุงูุฅูุบุงุก ููุนุงูู\n    cancel = c;\n  })\n});\n\n// ุฅูุบุงุก ุงูุทูุจ\ncancel();\n```\n\n> **ููุงุญุธุฉ:** ููููู ุฅูุบุงุก ุนุฏุฉ ุทูุจุงุช ุจุงุณุชุฎุฏุงู ููุณ ุฑูุฒ ุงูุฅูุบุงุก ุฃู ูุญุฏุฉ ุชุญูู ุงูุฅููุงู (abort controller).\n> ุฅุฐุง ูุงู ุฑูุฒ ุงูุฅูุบุงุก ููุบู ุจุงููุนู ูู ูุญุธุฉ ุจุฏุก ุทูุจ Axiosุ ูุณูุชู ุฅูุบุงุก ุงูุทูุจ ููุฑูุง ุจุฏูู ูุญุงููุฉ ุฅุฌุฑุงุก ุทูุจ ูุนูู.\n\n> ุฎูุงู ูุชุฑุฉ ุงูุงูุชูุงูุ ููููู ุงุณุชุฎุฏุงู ูุงุฌูุชู ุงูุฅูุบุงุก ูุนูุงุ ุญุชู ูููุณ ุงูุทูุจ:\n\n## ุงุณุชุฎุฏุงู ุชูุณูู `application/x-www-form-urlencoded`\n\n### URLSearchParams\n\nุงูุชุฑุงุถููุงุ ูููู axios ุจุชุณูุณู ูุงุฆูุงุช JavaScript ุฅูู ุตูุบุฉ `JSON`. ูุฅุฑุณุงู ุงูุจูุงูุงุช ุจุตูุบุฉ [`application/x-www-form-urlencoded`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) ุจุฏูุงู ูู ุฐููุ ููููู ุงุณุชุฎุฏุงู ูุงุฌูุฉ [`URLSearchParams`](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams)ุ ููู [ูุฏุนููุฉ](http://www.caniuse.com/#feat=urlsearchparams) ูู ุงูุบุงูุจูุฉ ุงูุนุธูู ูู ุงููุชุตูุญุงุชุ ู[Node](https://nodejs.org/api/url.html#url_class_urlsearchparams) ุจุฏุกูุง ูู ุงูุฅุตุฏุงุฑ 10 (ุตุฏุฑ ุนุงู 2018).\n\n```js\nconst params = new URLSearchParams({ foo: 'bar' });\nparams.append('extraparam', 'value');\naxios.post('/foo', params);\n```\n\n### ุณูุณูุฉ ุงูุงุณุชุนูุงู (ุงููุชุตูุญุงุช ุงููุฏููุฉ)\n\nูุถูุงู ุงูุชูุงูู ูุน ุงููุชุตูุญุงุช ุงููุฏููุฉ ุฌุฏูุงุ ููุฌุฏ [polyfill](https://github.com/WebReflection/url-search-params) ูุชููุฑ (ุชุฃูุฏ ูู ุชุฒููุฏ ุงูุจูุฆุฉ ุงูุนุงูุฉ ุจุงูู polyfill).\n\nุจุฏูุงู ูู ุฐููุ ููููู ุชุฑููุฒ ุงูุจูุงูุงุช ุจุงุณุชุฎุฏุงู ููุชุจุฉ [`qs`](https://github.com/ljharb/qs):\n\n```js\nconst qs = require('qs');\naxios.post('/foo', qs.stringify({ 'bar': 123 }));\n```\n```",
  "status": "ok"
}