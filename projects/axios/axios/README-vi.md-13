{
  "id": 13,
  "origin": "});\n```\n\nor multiple files as `multipart/form-data`:\n\n```js\nawait axios.postForm('https://httpbin.org/post', {\n  'files[]': document.querySelector('#fileInput').files\n});\n```\n\n`FileList` object can be passed directly:\n\n```js\nawait axios.postForm('https://httpbin.org/post', document.querySelector('#fileInput').files)\n```\n\nAll files will be sent with the same field names: `files[]`.\n\n## üÜï HTML Form Posting (browser)\n\nPass HTML Form element as a payload to submit it as `multipart/form-data` content.\n\n```js\nawait axios.postForm('https://httpbin.org/post', document.querySelector('#htmlForm'));\n```\n\n`FormData` and `HTMLForm` objects can also be posted as `JSON` by explicitly setting the `Content-Type` header to `application/json`:\n\n```js\nawait axios.post('https://httpbin.org/post', document.querySelector('#htmlForm'), {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n```\n\nFor example, the Form\n\n```html\n<form id=\"form\">\n  <input type=\"text\" name=\"foo\" value=\"1\">\n  <input type=\"text\" name=\"deep.prop\" value=\"2\">\n  <input type=\"text\" name=\"deep prop spaced\" value=\"3\">\n  <input type=\"text\" name=\"baz\" value=\"4\">\n  <input type=\"text\" name=\"baz\" value=\"5\">\n\n  <select name=\"user.age\">\n    <option value=\"value1\">Value 1</option>\n    <option value=\"value2\" selected>Value 2</option>\n    <option value=\"value3\">Value 3</option>\n  </select>\n\n  <input type=\"submit\" value=\"Save\">\n</form>\n```\n\nwill be submitted as the following JSON object:\n\n```js\n{\n  \"foo\": \"1\",\n  \"deep\": {\n    \"prop\": {\n      \"spaced\": \"3\"\n    }\n  },\n  \"baz\": [\n    \"4\",\n    \"5\"\n  ],\n  \"user\": {\n    \"age\": \"value2\"\n  }\n}\n````\n\nSending `Blobs`/`Files` as JSON (`base64`) is not currently supported.\n\n## üÜï Progress capturing\n\nAxios supports both browser and node environments to capture request upload/download progress.\nThe frequency of progress events is forced to be limited to `3` times per second.\n\n```js    \nawait axios.post(url, data, {\n  onUploadProgress: function (axiosProgressEvent) {\n    /*{\n      loaded: number;\n      total?: number;\n      progress?: number; // in range [0..1]\n      bytes: number; // how many bytes have been transferred since the last trigger (delta)\n      estimated?: number; // estimated time in seconds\n      rate?: number; // upload speed in bytes\n      upload: true; // upload sign\n    }*/\n  },\n\n  onDownloadProgress: function (axiosProgressEvent) {\n    /*{",
  "origin_sha": "pHLZ21gy3hXhOAeOHsMkCCM4OH1wGWHASYhQzNgbqb4=",
  "translate": "});\n```\n\nho·∫∑c nhi·ªÅu t·ªáp d∆∞·ªõi d·∫°ng `multipart/form-data`:\n\n```js\nawait axios.postForm('https://httpbin.org/post', {\n  'files[]': document.querySelector('#fileInput').files\n});\n```\n\nƒê·ªëi t∆∞·ª£ng `FileList` c√≥ th·ªÉ ƒë∆∞·ª£c truy·ªÅn tr·ª±c ti·∫øp:\n\n```js\nawait axios.postForm('https://httpbin.org/post', document.querySelector('#fileInput').files)\n```\n\nT·∫•t c·∫£ c√°c t·ªáp s·∫Ω ƒë∆∞·ª£c g·ª≠i v·ªõi c√πng t√™n tr∆∞·ªùng: `files[]`.\n\n## üÜï G·ª≠i Form HTML (tr√¨nh duy·ªát)\n\nTruy·ªÅn ph·∫ßn t·ª≠ Form HTML l√†m payload ƒë·ªÉ g·ª≠i n√≥ d∆∞·ªõi d·∫°ng n·ªôi dung `multipart/form-data`.\n\n```js\nawait axios.postForm('https://httpbin.org/post', document.querySelector('#htmlForm'));\n```\n\nC√°c ƒë·ªëi t∆∞·ª£ng `FormData` v√† `HTMLForm` c≈©ng c√≥ th·ªÉ ƒë∆∞·ª£c g·ª≠i d∆∞·ªõi d·∫°ng `JSON` b·∫±ng c√°ch thi·∫øt l·∫≠p r√µ r√†ng header `Content-Type` l√† `application/json`:\n\n```js\nawait axios.post('https://httpbin.org/post', document.querySelector('#htmlForm'), {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n```\n\nV√≠ d·ª•, Form sau\n\n```html\n<form id=\"form\">\n  <input type=\"text\" name=\"foo\" value=\"1\">\n  <input type=\"text\" name=\"deep.prop\" value=\"2\">\n  <input type=\"text\" name=\"deep prop spaced\" value=\"3\">\n  <input type=\"text\" name=\"baz\" value=\"4\">\n  <input type=\"text\" name=\"baz\" value=\"5\">\n\n  <select name=\"user.age\">\n    <option value=\"value1\">Value 1</option>\n    <option value=\"value2\" selected>Value 2</option>\n    <option value=\"value3\">Value 3</option>\n  </select>\n\n  <input type=\"submit\" value=\"Save\">\n</form>\n```\n\ns·∫Ω ƒë∆∞·ª£c g·ª≠i d∆∞·ªõi d·∫°ng ƒë·ªëi t∆∞·ª£ng JSON sau:\n\n```js\n{\n  \"foo\": \"1\",\n  \"deep\": {\n    \"prop\": {\n      \"spaced\": \"3\"\n    }\n  },\n  \"baz\": [\n    \"4\",\n    \"5\"\n  ],\n  \"user\": {\n    \"age\": \"value2\"\n  }\n}\n````\n\nHi·ªán t·∫°i ch∆∞a h·ªó tr·ª£ g·ª≠i `Blobs`/`Files` d∆∞·ªõi d·∫°ng JSON (`base64`).\n\n## üÜï Ghi nh·∫≠n ti·∫øn tr√¨nh\n\nAxios h·ªó tr·ª£ c·∫£ m√¥i tr∆∞·ªùng tr√¨nh duy·ªát v√† node ƒë·ªÉ ghi nh·∫≠n ti·∫øn tr√¨nh t·∫£i l√™n/t·∫£i xu·ªëng c·ªßa y√™u c·∫ßu.\nT·∫ßn su·∫•t s·ª± ki·ªán ti·∫øn tr√¨nh b·ªã gi·ªõi h·∫°n ·ªü m·ª©c t·ªëi ƒëa `3` l·∫ßn m·ªói gi√¢y.\n\n```js    \nawait axios.post(url, data, {\n  onUploadProgress: function (axiosProgressEvent) {\n    /*{\n      loaded: number;\n      total?: number;\n      progress?: number; // trong kho·∫£ng [0..1]\n      bytes: number; // s·ªë byte ƒë√£ ƒë∆∞·ª£c truy·ªÅn k·ªÉ t·ª´ l·∫ßn k√≠ch ho·∫°t tr∆∞·ªõc (delta)\n      estimated?: number; // th·ªùi gian ∆∞·ªõc t√≠nh (gi√¢y)\n      rate?: number; // t·ªëc ƒë·ªô t·∫£i l√™n (byte)\n      upload: true; // d·∫•u hi·ªáu upload\n    }*/\n  },\n\n  onDownloadProgress: function (axiosProgressEvent) {\n    /*{",
  "status": "ok"
}