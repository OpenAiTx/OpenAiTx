{
  "id": 4,
  "origin": "```js\n// GET request for remote image in node.js\naxios({\n  method: 'get',\n  url: 'https://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\n```\n\n##### axios(url[, config])\n\n```js\n// Send a GET request (default method)\naxios('/user/12345');\n```\n\n### Request method aliases\n\nFor convenience, aliases have been provided for all common request methods.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### NOTE\nWhen using the alias methods `url`, `method`, and `data` properties don't need to be specified in config.\n\n### Concurrency (Deprecated)\nPlease use `Promise.all` to replace the below functions.\n\nHelper functions for dealing with concurrent requests.\n\naxios.all(iterable)\naxios.spread(callback)\n\n### Creating an instance\n\nYou can create a new instance of axios with a custom config.\n\n##### axios.create([config])\n\n```js\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Instance methods\n\nThe available instance methods are listed below. The specified config will be merged with the instance config.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n##### axios#getUri([config])\n\n## Request Config\n\nThese are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified.\n\n```js\n{\n  // `url` is the server URL that will be used for the request\n  url: '/user',\n\n  // `method` is the request method to be used when making the request\n  method: 'get', // default\n\n  // `baseURL` will be prepended to `url` unless `url` is absolute and option `allowAbsoluteUrls` is set to true.\n  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  // to methods of that instance.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `allowAbsoluteUrls` determines whether or not absolute URLs will override a configured `baseUrl`.\n  // When set to true (default), absolute values for `url` will override `baseUrl`.\n  // When set to false, absolute values for `url` will always be prepended by `baseUrl`.\n  allowAbsoluteUrls: true,\n\n  // `transformRequest` allows changes to the request data before it is sent to the server\n  // This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'\n  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  // FormData or Stream\n  // You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    // Do whatever you want to transform the data",
  "origin_sha": "co1Hn4ZRh5nPxLnUTP5ObxsaoNqkZVrBAqvn+/2Td4Y=",
  "translate": "```js\n// Yêu cầu GET cho ảnh từ xa trong node.js\naxios({\n  method: 'get',\n  url: 'https://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\n```\n\n##### axios(url[, config])\n\n```js\n// Gửi một yêu cầu GET (phương thức mặc định)\naxios('/user/12345');\n```\n\n### Các bí danh phương thức yêu cầu\n\nĐể thuận tiện, các bí danh đã được cung cấp cho tất cả các phương thức yêu cầu phổ biến.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### LƯU Ý\nKhi sử dụng các phương thức bí danh, các thuộc tính `url`, `method`, và `data` không cần phải chỉ định trong config.\n\n### Xử lý đồng thời (Đã ngừng hỗ trợ)\nVui lòng sử dụng `Promise.all` để thay thế các hàm bên dưới.\n\nCác hàm trợ giúp để xử lý các yêu cầu đồng thời.\n\naxios.all(iterable)\naxios.spread(callback)\n\n### Tạo một instance\n\nBạn có thể tạo một instance mới của axios với cấu hình tùy chỉnh.\n\n##### axios.create([config])\n\n```js\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Các phương thức của instance\n\nCác phương thức instance hiện có được liệt kê bên dưới. Cấu hình chỉ định sẽ được hợp nhất với cấu hình của instance.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n##### axios#getUri([config])\n\n## Cấu hình yêu cầu\n\nĐây là các tùy chọn cấu hình có sẵn để thực hiện các yêu cầu. Chỉ `url` là bắt buộc. Nếu không chỉ định `method`, yêu cầu sẽ mặc định là `GET`.\n\n```js\n{\n  // `url` là địa chỉ URL máy chủ sẽ được sử dụng cho yêu cầu\n  url: '/user',\n\n  // `method` là phương thức yêu cầu sẽ được sử dụng khi thực hiện yêu cầu\n  method: 'get', // mặc định\n\n  // `baseURL` sẽ được thêm vào trước `url` trừ khi `url` là tuyệt đối và tùy chọn `allowAbsoluteUrls` được đặt thành true.\n  // Có thể thuận tiện khi đặt `baseURL` cho một instance của axios để truyền các URL tương đối\n  // tới các phương thức của instance đó.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `allowAbsoluteUrls` xác định liệu các URL tuyệt đối có ghi đè lên `baseUrl` đã cấu hình hay không.\n  // Khi đặt là true (mặc định), các giá trị tuyệt đối cho `url` sẽ ghi đè lên `baseUrl`.\n  // Khi đặt là false, các giá trị tuyệt đối cho `url` sẽ luôn được thêm vào trước bởi `baseUrl`.\n  allowAbsoluteUrls: true,\n\n  // `transformRequest` cho phép thay đổi dữ liệu yêu cầu trước khi gửi lên máy chủ\n  // Chỉ áp dụng cho các phương thức yêu cầu 'PUT', 'POST', 'PATCH' và 'DELETE'\n  // Hàm cuối cùng trong mảng phải trả về một chuỗi hoặc một instance của Buffer, ArrayBuffer,\n  // FormData hoặc Stream\n  // Bạn có thể sửa đổi đối tượng headers.\n  transformRequest: [function (data, headers) {\n    // Làm bất cứ điều gì bạn muốn để chuyển đổi dữ liệu\n```",
  "status": "ok"
}