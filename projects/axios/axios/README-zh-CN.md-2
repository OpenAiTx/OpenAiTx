{
  "id": 2,
  "origin": "- Automatic transforms for [JSON](https://www.json.org/json-en.html) data\n- 🆕 Automatic data object serialization to `multipart/form-data` and `x-www-form-urlencoded` body encodings\n- Client side support for protecting against [XSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Browser Support\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\nLatest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | 11 ✔ |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installing\n\n### Package manager\n\nUsing npm:\n\n```bash\n$ npm install axios\n```\n\nUsing bower:\n\n```bash\n$ bower install axios\n```\n\nUsing yarn:\n\n```bash\n$ yarn add axios\n```\n\nUsing pnpm:\n\n```bash\n$ pnpm add axios\n```\n\nUsing bun:\n\n```bash\n$ bun add axios\n```\n\nOnce the package is installed, you can import the library using `import` or `require` approach:\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\nYou can also use the default export, since the named export is just a re-export from the Axios factory:\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n````\n\nIf you use `require` for importing, **only default export is available**:\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\nFor some bundlers and some ES6 linters you may need to do the following:\n\n```js\nimport { default as axios } from 'axios';\n```\n\nFor cases where something went wrong when trying to import a module into a custom or legacy environment,\nyou can try importing the module package directly:\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // browser commonJS bundle (ES2017)\n// const axios = require('axios/dist/node/axios.cjs'); // node commonJS bundle (ES2017)\n```\n\n### CDN\n\nUsing jsDelivr CDN (ES5 UMD browser module):\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\nUsing unpkg CDN:\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## Example\n\n> **Note**: CommonJS usage  \n> In order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()`, use the following approach:",
  "origin_sha": "v1NJQMAwr48ek+yIJ/5xAG3QAPGdQRiixkZMiBnSypE=",
  "translate": "- [JSON](https://www.json.org/json-en.html) 数据的自动转换\n- 🆕 数据对象自动序列化为 `multipart/form-data` 和 `x-www-form-urlencoded` 请求体编码\n- 客户端支持防护 [XSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery) 攻击\n\n## 浏览器支持\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\n最新 ✔ | 最新 ✔ | 最新 ✔ | 最新 ✔ | 最新 ✔ | 11 ✔ |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## 安装\n\n### 包管理器\n\n使用 npm:\n\n```bash\n$ npm install axios\n```\n\n使用 bower:\n\n```bash\n$ bower install axios\n```\n\n使用 yarn:\n\n```bash\n$ yarn add axios\n```\n\n使用 pnpm:\n\n```bash\n$ pnpm add axios\n```\n\n使用 bun:\n\n```bash\n$ bun add axios\n```\n\n安装包后，你可以使用 `import` 或 `require` 的方式导入该库：\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\n你也可以使用默认导出，因为具名导出只是 Axios 工厂的再导出：\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n```\n\n如果你使用 `require` 进行导入，**仅支持默认导出**：\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\n对于某些打包工具和某些 ES6 语法检查器，你可能需要如下方式：\n\n```js\nimport { default as axios } from 'axios';\n```\n\n如果在自定义或遗留环境中导入模块时遇到问题，\n你可以尝试直接导入模块包：\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // 浏览器 commonJS 包（ES2017）\n// const axios = require('axios/dist/node/axios.cjs'); // node commonJS 包（ES2017）\n```\n\n### CDN\n\n使用 jsDelivr CDN（ES5 UMD 浏览器模块）:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n使用 unpkg CDN:\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## 示例\n\n> **注意**: CommonJS 用法  \n> 为了在使用 CommonJS 的 `require()` 导入方式时获得 TypeScript 类型（用于智能提示/自动补全），请使用以下方式：",
  "status": "ok"
}