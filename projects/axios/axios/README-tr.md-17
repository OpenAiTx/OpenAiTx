{
  "id": 17,
  "origin": "\n- `setContentEncoding`, `getContentEncoding`, `hasContentEncoding`\n\n## ğŸ”¥ Fetch adapter\n\nFetch adapter was introduced in `v1.7.0`. By default, it will be used if `xhr` and `http` adapters are not available in the build,\nor not supported by the environment.\nTo use it by default, it must be selected explicitly:\n\n```js\nconst {data} = axios.get(url, {\n  adapter: 'fetch' // by default ['xhr', 'http', 'fetch']\n})\n```\n\nYou can create a separate instance for this:\n\n```js\nconst fetchAxios = axios.create({\n  adapter: 'fetch'\n});\n\nconst {data} = fetchAxios.get(url);\n```\n\nThe adapter supports the same functionality as `xhr` adapter, **including upload and download progress capturing**. \nAlso, it supports additional response types such as `stream` and `formdata` (if supported by the environment).\n\n## Semver\n\nUntil axios reaches a `1.0` release, breaking changes will be released with a new minor version. For example `0.5.1`, and `0.5.4` will have the same API, but `0.6.0` will have breaking changes.\n\n## Promises\n\naxios depends on a native ES6 Promise implementation to be [supported](https://caniuse.com/promises).\nIf your environment doesn't support ES6 Promises, you can [polyfill](https://github.com/jakearchibald/es6-promise).\n\n## TypeScript\n\naxios includes [TypeScript](https://typescriptlang.org) definitions and a type guard for axios errors.\n\n```typescript\nlet user: User = null;\ntry {\n  const { data } = await axios.get('/user?ID=12345');\n  user = data.userDetails;\n} catch (error) {\n  if (axios.isAxiosError(error)) {\n    handleAxiosError(error);\n  } else {\n    handleUnexpectedError(error);\n  }\n}\n```\n\nBecause axios dual publishes with an ESM default export and a CJS `module.exports`, there are some caveats.\nThe recommended setting is to use `\"moduleResolution\": \"node16\"` (this is implied by `\"module\": \"node16\"`). Note that this requires TypeScript 4.7 or greater.\nIf use ESM, your settings should be fine.\nIf you compile TypeScript to CJS and you canâ€™t use `\"moduleResolution\": \"node 16\"`, you have to enable `esModuleInterop`.\nIf you use TypeScript to type check CJS JavaScript code, your only option is to use `\"moduleResolution\": \"node16\"`.\n\n## Online one-click setup\n\nYou can use Gitpod, an online IDE(which is free for Open Source) for contributing or running the examples online.\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/axios/axios/blob/main/examples/server.js)\n\n\n## Resources\n\n* [Changelog](https://github.com/axios/axios/blob/v1.x/CHANGELOG.md)\n* [Ecosystem](https://github.com/axios/axios/blob/v1.x/ECOSYSTEM.md)\n* [Contributing Guide](https://github.com/axios/axios/blob/v1.x/CONTRIBUTING.md)\n* [Code of Conduct](https://github.com/axios/axios/blob/v1.x/CODE_OF_CONDUCT.md)\n\n## Credits\n\naxios is heavily inspired by the [$http service](https://docs.angularjs.org/api/ng/service/$http) provided in [AngularJS](https://angularjs.org/). Ultimately axios is an effort to provide a standalone `$http`-like service for use outside of AngularJS.\n\n## License\n\n[MIT](LICENSE)\n",
  "origin_sha": "8FbNY1vCeM4hh6k64ciq5CmkW/Tv4xbnq5/eUDawacA=",
  "translate": "- `setContentEncoding`, `getContentEncoding`, `hasContentEncoding`\n\n## ğŸ”¥ Fetch adaptÃ¶rÃ¼\n\nFetch adaptÃ¶rÃ¼ `v1.7.0` sÃ¼rÃ¼mÃ¼nde tanÄ±tÄ±ldÄ±. VarsayÄ±lan olarak, derlemede `xhr` ve `http` adaptÃ¶rleri mevcut deÄŸilse veya ortam tarafÄ±ndan desteklenmiyorsa kullanÄ±lacaktÄ±r.\nVarsayÄ±lan olarak kullanmak iÃ§in aÃ§Ä±kÃ§a seÃ§ilmelidir:\n\n```js\nconst {data} = axios.get(url, {\n  adapter: 'fetch' // varsayÄ±lan olarak ['xhr', 'http', 'fetch']\n})\n```\n\nBunun iÃ§in ayrÄ± bir Ã¶rnek oluÅŸturabilirsiniz:\n\n```js\nconst fetchAxios = axios.create({\n  adapter: 'fetch'\n});\n\nconst {data} = fetchAxios.get(url);\n```\n\nAdaptÃ¶r, `xhr` adaptÃ¶rÃ¼ ile aynÄ± iÅŸlevselliÄŸi destekler, **yÃ¼kleme ve indirme ilerlemesinin izlenmesi dahil**.\nAyrÄ±ca, ortam destekliyorsa, `stream` ve `formdata` gibi ek yanÄ±t tÃ¼rlerini de destekler.\n\n## Semver\n\naxios `1.0` sÃ¼rÃ¼mÃ¼ne ulaÅŸana kadar, geriye dÃ¶nÃ¼k uyumsuz deÄŸiÅŸiklikler yeni bir minÃ¶r sÃ¼rÃ¼mle yayÄ±nlanacaktÄ±r. Ã–rneÄŸin, `0.5.1` ve `0.5.4` aynÄ± API'ye sahip olacaktÄ±r, ancak `0.6.0` geriye dÃ¶nÃ¼k uyumsuz deÄŸiÅŸiklikler iÃ§erecektir.\n\n## Promises\n\naxios, [desteklenmesi](https://caniuse.com/promises) iÃ§in yerel bir ES6 Promise uygulamasÄ±na baÄŸlÄ±dÄ±r.\nOrtamÄ±nÄ±z ES6 Promises desteklemiyorsa, [polyfill](https://github.com/jakearchibald/es6-promise) kullanabilirsiniz.\n\n## TypeScript\n\naxios, [TypeScript](https://typescriptlang.org) tanÄ±mlarÄ± ve axios hatalarÄ± iÃ§in bir tip koruyucu iÃ§erir.\n\n```typescript\nlet user: User = null;\ntry {\n  const { data } = await axios.get('/user?ID=12345');\n  user = data.userDetails;\n} catch (error) {\n  if (axios.isAxiosError(error)) {\n    handleAxiosError(error);\n  } else {\n    handleUnexpectedError(error);\n  }\n}\n```\n\naxios, ESM varsayÄ±lan dÄ±ÅŸa aktarma ve CJS `module.exports` ile Ã§ift olarak yayÄ±mlandÄ±ÄŸÄ±ndan bazÄ± dikkat edilmesi gereken noktalar vardÄ±r.\nÃ–nerilen ayar `\"moduleResolution\": \"node16\"` kullanmaktÄ±r (bu, `\"module\": \"node16\"` ile zaten ima edilir). Bunun iÃ§in TypeScript 4.7 veya Ã¼stÃ¼ gereklidir.\nEÄŸer ESM kullanÄ±yorsanÄ±z, ayarlarÄ±nÄ±z uygun olacaktÄ±r.\nTypeScript'i CJS'ye derliyorsanÄ±z ve `\"moduleResolution\": \"node16\"` kullanamÄ±yorsanÄ±z, `esModuleInterop`'u etkinleÅŸtirmeniz gerekir.\nTypeScript'i CJS JavaScript kodunu tip kontrolÃ¼ iÃ§in kullanÄ±yorsanÄ±z, tek seÃ§eneÄŸiniz `\"moduleResolution\": \"node16\"` kullanmaktÄ±r.\n\n## Ã‡evrimiÃ§i tek tÄ±kla kurulum\n\nKatkÄ±da bulunmak veya Ã¶rnekleri Ã§evrimiÃ§i Ã§alÄ±ÅŸtÄ±rmak iÃ§in Gitpod'u, Ã§evrimiÃ§i bir IDE'yi (AÃ§Ä±k Kaynak iÃ§in Ã¼cretsizdir) kullanabilirsiniz.\n\n[![Gitpod'da AÃ§](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/axios/axios/blob/main/examples/server.js)\n\n\n## Kaynaklar\n\n* [DeÄŸiÅŸiklik GÃ¼nlÃ¼ÄŸÃ¼](https://github.com/axios/axios/blob/v1.x/CHANGELOG.md)\n* [Ekosistem](https://github.com/axios/axios/blob/v1.x/ECOSYSTEM.md)\n* [KatkÄ± Rehberi](https://github.com/axios/axios/blob/v1.x/CONTRIBUTING.md)\n* [DavranÄ±ÅŸ KurallarÄ±](https://github.com/axios/axios/blob/v1.x/CODE_OF_CONDUCT.md)\n\n## KatkÄ±da Bulunanlar\n\naxios, bÃ¼yÃ¼k Ã¶lÃ§Ã¼de [AngularJS](https://angularjs.org/) tarafÄ±ndan saÄŸlanan [$http servisi](https://docs.angularjs.org/api/ng/service/$http)'nden ilham almÄ±ÅŸtÄ±r. SonuÃ§ta axios, AngularJS dÄ±ÅŸÄ±nda kullanÄ±lmak Ã¼zere baÄŸÄ±msÄ±z bir `$http` benzeri servis saÄŸlamaya yÃ¶nelik bir Ã§abadÄ±r.\n\n## Lisans\n\n[MIT](LICENSE)",
  "status": "ok"
}