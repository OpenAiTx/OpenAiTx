{
  "id": 4,
  "origin": "```js\n// GET request for remote image in node.js\naxios({\n  method: 'get',\n  url: 'https://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\n```\n\n##### axios(url[, config])\n\n```js\n// Send a GET request (default method)\naxios('/user/12345');\n```\n\n### Request method aliases\n\nFor convenience, aliases have been provided for all common request methods.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### NOTE\nWhen using the alias methods `url`, `method`, and `data` properties don't need to be specified in config.\n\n### Concurrency (Deprecated)\nPlease use `Promise.all` to replace the below functions.\n\nHelper functions for dealing with concurrent requests.\n\naxios.all(iterable)\naxios.spread(callback)\n\n### Creating an instance\n\nYou can create a new instance of axios with a custom config.\n\n##### axios.create([config])\n\n```js\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Instance methods\n\nThe available instance methods are listed below. The specified config will be merged with the instance config.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n##### axios#getUri([config])\n\n## Request Config\n\nThese are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified.\n\n```js\n{\n  // `url` is the server URL that will be used for the request\n  url: '/user',\n\n  // `method` is the request method to be used when making the request\n  method: 'get', // default\n\n  // `baseURL` will be prepended to `url` unless `url` is absolute and option `allowAbsoluteUrls` is set to true.\n  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  // to methods of that instance.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `allowAbsoluteUrls` determines whether or not absolute URLs will override a configured `baseUrl`.\n  // When set to true (default), absolute values for `url` will override `baseUrl`.\n  // When set to false, absolute values for `url` will always be prepended by `baseUrl`.\n  allowAbsoluteUrls: true,\n\n  // `transformRequest` allows changes to the request data before it is sent to the server\n  // This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'\n  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  // FormData or Stream\n  // You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    // Do whatever you want to transform the data",
  "origin_sha": "co1Hn4ZRh5nPxLnUTP5ObxsaoNqkZVrBAqvn+/2Td4Y=",
  "translate": "```js\n// GET-verzoek voor externe afbeelding in node.js\naxios({\n  method: 'get',\n  url: 'https://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\n```\n\n##### axios(url[, config])\n\n```js\n// Verstuur een GET-verzoek (standaardmethode)\naxios('/user/12345');\n```\n\n### Aliassen voor request-methoden\n\nVoor het gemak zijn er aliassen voorzien voor alle gangbare request-methoden.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### OPMERKING\nWanneer je de alias-methoden gebruikt, hoeven de eigenschappen `url`, `method` en `data` niet in de config te worden opgegeven.\n\n### Concurrency (Verouderd)\nGebruik alsjeblieft `Promise.all` om onderstaande functies te vervangen.\n\nHulpfuncties voor het omgaan met gelijktijdige verzoeken.\n\naxios.all(iterable)\naxios.spread(callback)\n\n### Een instantie aanmaken\n\nJe kunt een nieuwe instantie van axios aanmaken met een aangepaste config.\n\n##### axios.create([config])\n\n```js\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Instantiefuncties\n\nDe beschikbare instantiefuncties staan hieronder vermeld. De opgegeven config wordt samengevoegd met de instantieconfiguratie.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n##### axios#getUri([config])\n\n## Request Config\n\nDit zijn de beschikbare configuratieopties voor het uitvoeren van verzoeken. Alleen de `url` is verplicht. Verzoeken gebruiken standaard `GET` als `method` niet wordt opgegeven.\n\n```js\n{\n  // `url` is de server-URL die voor het verzoek gebruikt zal worden\n  url: '/user',\n\n  // `method` is de request-methode die gebruikt wordt voor het uitvoeren van het verzoek\n  method: 'get', // standaard\n\n  // `baseURL` zal vooraan aan `url` worden toegevoegd, tenzij `url` absoluut is en de optie `allowAbsoluteUrls` op true staat.\n  // Het kan handig zijn om `baseURL` in te stellen voor een instantie van axios om relatieve URL's\n  // door te geven aan methoden van die instantie.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `allowAbsoluteUrls` bepaalt of absolute URL's een geconfigureerde `baseUrl` zullen overschrijven.\n  // Indien op true gezet (standaard), zullen absolute waarden voor `url` `baseUrl` overschrijven.\n  // Indien op false gezet, zullen absolute waarden voor `url` altijd voorafgegaan worden door `baseUrl`.\n  allowAbsoluteUrls: true,\n\n  // `transformRequest` maakt het mogelijk om de request-data te wijzigen voordat deze naar de server wordt verzonden\n  // Dit is alleen van toepassing op de request-methoden 'PUT', 'POST', 'PATCH' en 'DELETE'\n  // De laatste functie in de array moet een string of een instantie van Buffer, ArrayBuffer,\n  // FormData of Stream retourneren\n  // Je mag het headers-object aanpassen.\n  transformRequest: [function (data, headers) {\n    // Doe wat je wilt om de data te transformeren\n```",
  "status": "ok"
}