{
  "id": 2,
  "origin": "- Automatic transforms for [JSON](https://www.json.org/json-en.html) data\n- üÜï Automatic data object serialization to `multipart/form-data` and `x-www-form-urlencoded` body encodings\n- Client side support for protecting against [XSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Browser Support\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\nLatest ‚úî | Latest ‚úî | Latest ‚úî | Latest ‚úî | Latest ‚úî | 11 ‚úî |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installing\n\n### Package manager\n\nUsing npm:\n\n```bash\n$ npm install axios\n```\n\nUsing bower:\n\n```bash\n$ bower install axios\n```\n\nUsing yarn:\n\n```bash\n$ yarn add axios\n```\n\nUsing pnpm:\n\n```bash\n$ pnpm add axios\n```\n\nUsing bun:\n\n```bash\n$ bun add axios\n```\n\nOnce the package is installed, you can import the library using `import` or `require` approach:\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\nYou can also use the default export, since the named export is just a re-export from the Axios factory:\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n````\n\nIf you use `require` for importing, **only default export is available**:\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\nFor some bundlers and some ES6 linters you may need to do the following:\n\n```js\nimport { default as axios } from 'axios';\n```\n\nFor cases where something went wrong when trying to import a module into a custom or legacy environment,\nyou can try importing the module package directly:\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // browser commonJS bundle (ES2017)\n// const axios = require('axios/dist/node/axios.cjs'); // node commonJS bundle (ES2017)\n```\n\n### CDN\n\nUsing jsDelivr CDN (ES5 UMD browser module):\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\nUsing unpkg CDN:\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## Example\n\n> **Note**: CommonJS usage  \n> In order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()`, use the following approach:",
  "origin_sha": "v1NJQMAwr48ek+yIJ/5xAG3QAPGdQRiixkZMiBnSypE=",
  "translate": "- T·ª± ƒë·ªông chuy·ªÉn ƒë·ªïi cho d·ªØ li·ªáu [JSON](https://www.json.org/json-en.html)\n- üÜï T·ª± ƒë·ªông tu·∫ßn t·ª± h√≥a ƒë·ªëi t∆∞·ª£ng d·ªØ li·ªáu th√†nh c√°c ƒë·ªãnh d·∫°ng m√£ h√≥a body `multipart/form-data` v√† `x-www-form-urlencoded`\n- H·ªó tr·ª£ ph√≠a client ƒë·ªÉ b·∫£o v·ªá ch·ªëng l·∫°i [XSRF](https://vi.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## H·ªó tr·ª£ tr√¨nh duy·ªát\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\nM·ªõi nh·∫•t ‚úî | M·ªõi nh·∫•t ‚úî | M·ªõi nh·∫•t ‚úî | M·ªõi nh·∫•t ‚úî | M·ªõi nh·∫•t ‚úî | 11 ‚úî |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## C√†i ƒë·∫∑t\n\n### Tr√¨nh qu·∫£n l√Ω g√≥i\n\nS·ª≠ d·ª•ng npm:\n\n```bash\n$ npm install axios\n```\n\nS·ª≠ d·ª•ng bower:\n\n```bash\n$ bower install axios\n```\n\nS·ª≠ d·ª•ng yarn:\n\n```bash\n$ yarn add axios\n```\n\nS·ª≠ d·ª•ng pnpm:\n\n```bash\n$ pnpm add axios\n```\n\nS·ª≠ d·ª•ng bun:\n\n```bash\n$ bun add axios\n```\n\nSau khi c√†i ƒë·∫∑t g√≥i, b·∫°n c√≥ th·ªÉ import th∆∞ vi·ªán b·∫±ng c√°ch s·ª≠ d·ª•ng c√∫ ph√°p `import` ho·∫∑c `require`:\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\nB·∫°n c≈©ng c√≥ th·ªÉ s·ª≠ d·ª•ng export m·∫∑c ƒë·ªãnh, v√¨ export c√≥ t√™n ch·ªâ l√† m·ªôt re-export t·ª´ factory c·ªßa Axios:\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n```\n\nN·∫øu b·∫°n s·ª≠ d·ª•ng `require` ƒë·ªÉ import, **ch·ªâ export m·∫∑c ƒë·ªãnh l√† kh·∫£ d·ª•ng**:\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\nƒê·ªëi v·ªõi m·ªôt s·ªë bundler v√† m·ªôt s·ªë linter ES6, b·∫°n c√≥ th·ªÉ c·∫ßn th·ª±c hi·ªán nh∆∞ sau:\n\n```js\nimport { default as axios } from 'axios';\n```\n\nTrong tr∆∞·ªùng h·ª£p g·∫∑p s·ª± c·ªë khi c·ªë g·∫Øng import m·ªôt module v√†o m√¥i tr∆∞·ªùng t√πy ch·ªânh ho·∫∑c c≈©,\nb·∫°n c√≥ th·ªÉ th·ª≠ import tr·ª±c ti·∫øp g√≥i module:\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // bundle commonJS cho tr√¨nh duy·ªát (ES2017)\n// const axios = require('axios/dist/node/axios.cjs'); // bundle commonJS cho node (ES2017)\n```\n\n### CDN\n\nS·ª≠ d·ª•ng jsDelivr CDN (module tr√¨nh duy·ªát ES5 UMD):\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\nS·ª≠ d·ª•ng unpkg CDN:\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## V√≠ d·ª•\n\n> **L∆∞u √Ω**: S·ª≠ d·ª•ng CommonJS  \n> ƒê·ªÉ t·∫≠n d·ª•ng c√°c ki·ªÉu TypeScript (cho intellisense / t·ª± ƒë·ªông ho√†n th√†nh) khi s·ª≠ d·ª•ng import CommonJS v·ªõi `require()`, h√£y d√πng c√°ch sau:",
  "status": "ok"
}