{
  "id": 2,
  "origin": "- Automatic transforms for [JSON](https://www.json.org/json-en.html) data\n- 🆕 Automatic data object serialization to `multipart/form-data` and `x-www-form-urlencoded` body encodings\n- Client side support for protecting against [XSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Browser Support\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\nLatest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | 11 ✔ |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installing\n\n### Package manager\n\nUsing npm:\n\n```bash\n$ npm install axios\n```\n\nUsing bower:\n\n```bash\n$ bower install axios\n```\n\nUsing yarn:\n\n```bash\n$ yarn add axios\n```\n\nUsing pnpm:\n\n```bash\n$ pnpm add axios\n```\n\nUsing bun:\n\n```bash\n$ bun add axios\n```\n\nOnce the package is installed, you can import the library using `import` or `require` approach:\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\nYou can also use the default export, since the named export is just a re-export from the Axios factory:\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n````\n\nIf you use `require` for importing, **only default export is available**:\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\nFor some bundlers and some ES6 linters you may need to do the following:\n\n```js\nimport { default as axios } from 'axios';\n```\n\nFor cases where something went wrong when trying to import a module into a custom or legacy environment,\nyou can try importing the module package directly:\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // browser commonJS bundle (ES2017)\n// const axios = require('axios/dist/node/axios.cjs'); // node commonJS bundle (ES2017)\n```\n\n### CDN\n\nUsing jsDelivr CDN (ES5 UMD browser module):\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\nUsing unpkg CDN:\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## Example\n\n> **Note**: CommonJS usage  \n> In order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()`, use the following approach:",
  "origin_sha": "v1NJQMAwr48ek+yIJ/5xAG3QAPGdQRiixkZMiBnSypE=",
  "translate": "- [JSON](https://www.json.org/json-en.html) 데이터에 대한 자동 변환\n- 🆕 데이터 객체를 `multipart/form-data` 및 `x-www-form-urlencoded` 바디 인코딩으로 자동 직렬화\n- [XSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery) 공격으로부터 보호하기 위한 클라이언트 측 지원\n\n## 브라우저 지원\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\n최신 ✔ | 최신 ✔ | 최신 ✔ | 최신 ✔ | 최신 ✔ | 11 ✔ |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## 설치 방법\n\n### 패키지 매니저\n\nnpm 사용 시:\n\n```bash\n$ npm install axios\n```\n\nbower 사용 시:\n\n```bash\n$ bower install axios\n```\n\nyarn 사용 시:\n\n```bash\n$ yarn add axios\n```\n\npnpm 사용 시:\n\n```bash\n$ pnpm add axios\n```\n\nbun 사용 시:\n\n```bash\n$ bun add axios\n```\n\n패키지가 설치되면, `import` 또는 `require` 방식을 이용해 라이브러리를 가져올 수 있습니다:\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\n명명된 내보내기는 Axios 팩토리에서 재내보내기된 것이므로, 기본 내보내기를 사용할 수도 있습니다:\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n```\n\n`require`로 불러오는 경우, **기본 내보내기만 사용할 수 있습니다**:\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\n일부 번들러 및 ES6 린터에서는 다음과 같이 작성해야 할 수도 있습니다:\n\n```js\nimport { default as axios } from 'axios';\n```\n\n커스텀 또는 레거시 환경에서 모듈을 가져올 때 문제가 발생한 경우,\n모듈 패키지를 직접 임포트하는 방법을 시도할 수 있습니다:\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // 브라우저 commonJS 번들 (ES2017)\n// const axios = require('axios/dist/node/axios.cjs'); // 노드 commonJS 번들 (ES2017)\n```\n\n### CDN\n\njsDelivr CDN 사용 (ES5 UMD 브라우저 모듈):\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\nunpkg CDN 사용:\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## 예시\n\n> **참고**: CommonJS 사용  \n> CommonJS의 `require()`로 import할 때 TypeScript 타입(인텔리센스/자동완성)을 얻으려면 다음 방법을 사용하세요:",
  "status": "ok"
}