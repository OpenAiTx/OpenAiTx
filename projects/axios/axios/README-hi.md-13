{
  "id": 13,
  "origin": "});\n```\n\nor multiple files as `multipart/form-data`:\n\n```js\nawait axios.postForm('https://httpbin.org/post', {\n  'files[]': document.querySelector('#fileInput').files\n});\n```\n\n`FileList` object can be passed directly:\n\n```js\nawait axios.postForm('https://httpbin.org/post', document.querySelector('#fileInput').files)\n```\n\nAll files will be sent with the same field names: `files[]`.\n\n## ЁЯЖХ HTML Form Posting (browser)\n\nPass HTML Form element as a payload to submit it as `multipart/form-data` content.\n\n```js\nawait axios.postForm('https://httpbin.org/post', document.querySelector('#htmlForm'));\n```\n\n`FormData` and `HTMLForm` objects can also be posted as `JSON` by explicitly setting the `Content-Type` header to `application/json`:\n\n```js\nawait axios.post('https://httpbin.org/post', document.querySelector('#htmlForm'), {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n```\n\nFor example, the Form\n\n```html\n<form id=\"form\">\n  <input type=\"text\" name=\"foo\" value=\"1\">\n  <input type=\"text\" name=\"deep.prop\" value=\"2\">\n  <input type=\"text\" name=\"deep prop spaced\" value=\"3\">\n  <input type=\"text\" name=\"baz\" value=\"4\">\n  <input type=\"text\" name=\"baz\" value=\"5\">\n\n  <select name=\"user.age\">\n    <option value=\"value1\">Value 1</option>\n    <option value=\"value2\" selected>Value 2</option>\n    <option value=\"value3\">Value 3</option>\n  </select>\n\n  <input type=\"submit\" value=\"Save\">\n</form>\n```\n\nwill be submitted as the following JSON object:\n\n```js\n{\n  \"foo\": \"1\",\n  \"deep\": {\n    \"prop\": {\n      \"spaced\": \"3\"\n    }\n  },\n  \"baz\": [\n    \"4\",\n    \"5\"\n  ],\n  \"user\": {\n    \"age\": \"value2\"\n  }\n}\n````\n\nSending `Blobs`/`Files` as JSON (`base64`) is not currently supported.\n\n## ЁЯЖХ Progress capturing\n\nAxios supports both browser and node environments to capture request upload/download progress.\nThe frequency of progress events is forced to be limited to `3` times per second.\n\n```js    \nawait axios.post(url, data, {\n  onUploadProgress: function (axiosProgressEvent) {\n    /*{\n      loaded: number;\n      total?: number;\n      progress?: number; // in range [0..1]\n      bytes: number; // how many bytes have been transferred since the last trigger (delta)\n      estimated?: number; // estimated time in seconds\n      rate?: number; // upload speed in bytes\n      upload: true; // upload sign\n    }*/\n  },\n\n  onDownloadProgress: function (axiosProgressEvent) {\n    /*{",
  "origin_sha": "pHLZ21gy3hXhOAeOHsMkCCM4OH1wGWHASYhQzNgbqb4=",
  "translate": "});\n```\n\nрдпрд╛ рдПрдХрд╛рдзрд┐рдХ рдлрд╛рдЗрд▓реЛрдВ рдХреЛ `multipart/form-data` рдХреЗ рд░реВрдк рдореЗрдВ:\n\n```js\nawait axios.postForm('https://httpbin.org/post', {\n  'files[]': document.querySelector('#fileInput').files\n});\n```\n\n`FileList` рдСрдмреНрдЬреЗрдХреНрдЯ рдХреЛ рд╕реАрдзреЗ рдкрд╛рд╕ рдХрд┐рдпрд╛ рдЬрд╛ рд╕рдХрддрд╛ рд╣реИ:\n\n```js\nawait axios.postForm('https://httpbin.org/post', document.querySelector('#fileInput').files)\n```\n\nрд╕рднреА рдлрд╛рдЗрд▓реЗрдВ рдПрдХ рд╣реА рдлреАрд▓реНрдб рдирд╛рдо рдХреЗ рд╕рд╛рде рднреЗрдЬреА рдЬрд╛рдПрдВрдЧреА: `files[]`.\n\n## ЁЯЖХ HTML рдлрд╝реЙрд░реНрдо рдкреЛрд╕реНрдЯрд┐рдВрдЧ (рдмреНрд░рд╛рдЙрдЬрд╝рд░)\n\n`multipart/form-data` рдХрдВрдЯреЗрдВрдЯ рдХреЗ рд░реВрдк рдореЗрдВ рд╕рдмрдорд┐рдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП HTML рдлрд╝реЙрд░реНрдо рдПрд▓рд┐рдореЗрдВрдЯ рдХреЛ рдкреЗрд▓реЛрдб рдХреЗ рд░реВрдк рдореЗрдВ рдкрд╛рд╕ рдХрд░реЗрдВред\n\n```js\nawait axios.postForm('https://httpbin.org/post', document.querySelector('#htmlForm'));\n```\n\n`FormData` рдФрд░ `HTMLForm` рдСрдмреНрдЬреЗрдХреНрдЯреНрд╕ рдХреЛ `Content-Type` рд╣реЗрдбрд░ рдХреЛ `application/json` рдкрд░ рд╕реНрдкрд╖реНрдЯ рд░реВрдк рд╕реЗ рд╕реЗрдЯ рдХрд░рдХреЗ `JSON` рдХреЗ рд░реВрдк рдореЗрдВ рднреА рдкреЛрд╕реНрдЯ рдХрд┐рдпрд╛ рдЬрд╛ рд╕рдХрддрд╛ рд╣реИ:\n\n```js\nawait axios.post('https://httpbin.org/post', document.querySelector('#htmlForm'), {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n```\n\nрдЙрджрд╛рд╣рд░рдг рдХреЗ рд▓рд┐рдП, рдпрд╣ рдлрд╝реЙрд░реНрдо\n\n```html\n<form id=\"form\">\n  <input type=\"text\" name=\"foo\" value=\"1\">\n  <input type=\"text\" name=\"deep.prop\" value=\"2\">\n  <input type=\"text\" name=\"deep prop spaced\" value=\"3\">\n  <input type=\"text\" name=\"baz\" value=\"4\">\n  <input type=\"text\" name=\"baz\" value=\"5\">\n\n  <select name=\"user.age\">\n    <option value=\"value1\">Value 1</option>\n    <option value=\"value2\" selected>Value 2</option>\n    <option value=\"value3\">Value 3</option>\n  </select>\n\n  <input type=\"submit\" value=\"Save\">\n</form>\n```\n\nрдирд┐рдореНрдирд▓рд┐рдЦрд┐рдд JSON рдСрдмреНрдЬреЗрдХреНрдЯ рдХреЗ рд░реВрдк рдореЗрдВ рд╕рдмрдорд┐рдЯ рдХрд┐рдпрд╛ рдЬрд╛рдПрдЧрд╛:\n\n```js\n{\n  \"foo\": \"1\",\n  \"deep\": {\n    \"prop\": {\n      \"spaced\": \"3\"\n    }\n  },\n  \"baz\": [\n    \"4\",\n    \"5\"\n  ],\n  \"user\": {\n    \"age\": \"value2\"\n  }\n}\n````\n\n`Blobs`/`Files` рдХреЛ JSON (`base64`) рдХреЗ рд░реВрдк рдореЗрдВ рднреЗрдЬрдирд╛ рд╡рд░реНрддрдорд╛рди рдореЗрдВ рд╕рдорд░реНрдерд┐рдд рдирд╣реАрдВ рд╣реИред\n\n## ЁЯЖХ рдкреНрд░рдЧрддрд┐ рдХреИрдкреНрдЪрд░ рдХрд░рдирд╛\n\nAxios рдЕрдиреБрд░реЛрдз рдЕрдкрд▓реЛрдб/рдбрд╛рдЙрдирд▓реЛрдб рдкреНрд░рдЧрддрд┐ рдХреЛ рдХреИрдкреНрдЪрд░ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдмреНрд░рд╛рдЙрдЬрд╝рд░ рдФрд░ рдиреЛрдб рджреЛрдиреЛрдВ рдПрдирд╡рд╛рдпрд░рдирдореЗрдВрдЯ рдХреЛ рд╕рдкреЛрд░реНрдЯ рдХрд░рддрд╛ рд╣реИред\nрдкреНрд░рдЧрддрд┐ рдИрд╡реЗрдВрдЯреНрд╕ рдХреА рдЖрд╡реГрддреНрддрд┐ рдХреЛ `3` рдмрд╛рд░ рдкреНрд░рддрд┐ рд╕реЗрдХрдВрдб рддрдХ рд╕реАрдорд┐рдд рдХрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред\n\n```js    \nawait axios.post(url, data, {\n  onUploadProgress: function (axiosProgressEvent) {\n    /*{\n      loaded: number;\n      total?: number;\n      progress?: number; // рд╕реАрдорд╛ [0..1] рдореЗрдВ\n      bytes: number; // рдкрд┐рдЫрд▓реЗ рдЯреНрд░рд┐рдЧрд░ рдХреЗ рдмрд╛рдж рдХрд┐рддрдиреЗ рдмрд╛рдЗрдЯреНрд╕ рдЯреНрд░рд╛рдВрд╕рдлрд░ рд╣реБрдП (рдбреЗрд▓реНрдЯрд╛)\n      estimated?: number; // рдЕрдиреБрдорд╛рдирд┐рдд рд╕рдордп рд╕реЗрдХрдВрдб рдореЗрдВ\n      rate?: number; // рдмрд╛рдЗрдЯреНрд╕ рдореЗрдВ рдЕрдкрд▓реЛрдб рд╕реНрдкреАрдб\n      upload: true; // рдЕрдкрд▓реЛрдб рд╕рдВрдХреЗрдд\n    }*/\n  },\n\n  onDownloadProgress: function (axiosProgressEvent) {\n    /*{",
  "status": "ok"
}