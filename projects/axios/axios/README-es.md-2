{
  "id": 2,
  "origin": "- Automatic transforms for [JSON](https://www.json.org/json-en.html) data\n- ðŸ†• Automatic data object serialization to `multipart/form-data` and `x-www-form-urlencoded` body encodings\n- Client side support for protecting against [XSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Browser Support\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\nLatest âœ” | Latest âœ” | Latest âœ” | Latest âœ” | Latest âœ” | 11 âœ” |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installing\n\n### Package manager\n\nUsing npm:\n\n```bash\n$ npm install axios\n```\n\nUsing bower:\n\n```bash\n$ bower install axios\n```\n\nUsing yarn:\n\n```bash\n$ yarn add axios\n```\n\nUsing pnpm:\n\n```bash\n$ pnpm add axios\n```\n\nUsing bun:\n\n```bash\n$ bun add axios\n```\n\nOnce the package is installed, you can import the library using `import` or `require` approach:\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\nYou can also use the default export, since the named export is just a re-export from the Axios factory:\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n````\n\nIf you use `require` for importing, **only default export is available**:\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\nFor some bundlers and some ES6 linters you may need to do the following:\n\n```js\nimport { default as axios } from 'axios';\n```\n\nFor cases where something went wrong when trying to import a module into a custom or legacy environment,\nyou can try importing the module package directly:\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // browser commonJS bundle (ES2017)\n// const axios = require('axios/dist/node/axios.cjs'); // node commonJS bundle (ES2017)\n```\n\n### CDN\n\nUsing jsDelivr CDN (ES5 UMD browser module):\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\nUsing unpkg CDN:\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## Example\n\n> **Note**: CommonJS usage  \n> In order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()`, use the following approach:",
  "origin_sha": "v1NJQMAwr48ek+yIJ/5xAG3QAPGdQRiixkZMiBnSypE=",
  "translate": "- Transformaciones automÃ¡ticas para datos [JSON](https://www.json.org/json-en.html)\n- ðŸ†• SerializaciÃ³n automÃ¡tica de objetos de datos a las codificaciones de cuerpo `multipart/form-data` y `x-www-form-urlencoded`\n- Soporte del lado del cliente para proteger contra [XSRF](https://es.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Compatibilidad con navegadores\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\nÃšltima âœ” | Ãšltima âœ” | Ãšltima âœ” | Ãšltima âœ” | Ãšltima âœ” | 11 âœ” |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## InstalaciÃ³n\n\n### Gestor de paquetes\n\nUsando npm:\n\n```bash\n$ npm install axios\n```\n\nUsando bower:\n\n```bash\n$ bower install axios\n```\n\nUsando yarn:\n\n```bash\n$ yarn add axios\n```\n\nUsando pnpm:\n\n```bash\n$ pnpm add axios\n```\n\nUsando bun:\n\n```bash\n$ bun add axios\n```\n\nUna vez instalado el paquete, puedes importar la librerÃ­a usando el enfoque `import` o `require`:\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\nTambiÃ©n puedes usar la exportaciÃ³n por defecto, ya que la exportaciÃ³n nombrada es solo una re-exportaciÃ³n desde la fÃ¡brica de Axios:\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n```\n\nSi usas `require` para importar, **solo estÃ¡ disponible la exportaciÃ³n por defecto**:\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\nPara algunos empaquetadores y algunos linters ES6 puede que necesites hacer lo siguiente:\n\n```js\nimport { default as axios } from 'axios';\n```\n\nPara los casos en los que algo saliÃ³ mal al intentar importar un mÃ³dulo en un entorno personalizado o heredado,\npuedes intentar importar el paquete del mÃ³dulo directamente:\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // bundle commonJS para navegador (ES2017)\n// const axios = require('axios/dist/node/axios.cjs'); // bundle commonJS para node (ES2017)\n```\n\n### CDN\n\nUsando jsDelivr CDN (mÃ³dulo UMD ES5 para navegador):\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\nUsando unpkg CDN:\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## Ejemplo\n\n> **Nota**: Uso de CommonJS  \n> Para obtener las tipificaciones de TypeScript (para intellisense / autocompletado) mientras usas importaciones CommonJS con `require()`, usa el siguiente enfoque:",
  "status": "ok"
}