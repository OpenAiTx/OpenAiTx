{
  "id": 4,
  "origin": "```js\n// GET request for remote image in node.js\naxios({\n  method: 'get',\n  url: 'https://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\n```\n\n##### axios(url[, config])\n\n```js\n// Send a GET request (default method)\naxios('/user/12345');\n```\n\n### Request method aliases\n\nFor convenience, aliases have been provided for all common request methods.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### NOTE\nWhen using the alias methods `url`, `method`, and `data` properties don't need to be specified in config.\n\n### Concurrency (Deprecated)\nPlease use `Promise.all` to replace the below functions.\n\nHelper functions for dealing with concurrent requests.\n\naxios.all(iterable)\naxios.spread(callback)\n\n### Creating an instance\n\nYou can create a new instance of axios with a custom config.\n\n##### axios.create([config])\n\n```js\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Instance methods\n\nThe available instance methods are listed below. The specified config will be merged with the instance config.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n##### axios#getUri([config])\n\n## Request Config\n\nThese are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified.\n\n```js\n{\n  // `url` is the server URL that will be used for the request\n  url: '/user',\n\n  // `method` is the request method to be used when making the request\n  method: 'get', // default\n\n  // `baseURL` will be prepended to `url` unless `url` is absolute and option `allowAbsoluteUrls` is set to true.\n  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  // to methods of that instance.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `allowAbsoluteUrls` determines whether or not absolute URLs will override a configured `baseUrl`.\n  // When set to true (default), absolute values for `url` will override `baseUrl`.\n  // When set to false, absolute values for `url` will always be prepended by `baseUrl`.\n  allowAbsoluteUrls: true,\n\n  // `transformRequest` allows changes to the request data before it is sent to the server\n  // This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'\n  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  // FormData or Stream\n  // You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    // Do whatever you want to transform the data",
  "origin_sha": "co1Hn4ZRh5nPxLnUTP5ObxsaoNqkZVrBAqvn+/2Td4Y=",
  "translate": "```js\n// Permintaan GET untuk gambar jarak jauh di node.js\naxios({\n  method: 'get',\n  url: 'https://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\n```\n\n##### axios(url[, config])\n\n```js\n// Mengirim permintaan GET (metode default)\naxios('/user/12345');\n```\n\n### Alias metode permintaan\n\nUntuk kenyamanan, alias telah disediakan untuk semua metode permintaan umum.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### CATATAN\nSaat menggunakan metode alias, properti `url`, `method`, dan `data` tidak perlu ditentukan dalam config.\n\n### Konkruensi (Tidak Digunakan Lagi)\nSilakan gunakan `Promise.all` untuk menggantikan fungsi di bawah ini.\n\nFungsi pembantu untuk menangani permintaan konkuren.\n\naxios.all(iterable)\naxios.spread(callback)\n\n### Membuat instance\n\nAnda dapat membuat instance baru dari axios dengan konfigurasi khusus.\n\n##### axios.create([config])\n\n```js\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Metode instance\n\nMetode instance yang tersedia terdaftar di bawah ini. Konfigurasi yang ditentukan akan digabungkan dengan konfigurasi instance.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n##### axios#getUri([config])\n\n## Konfigurasi Permintaan\n\nIni adalah opsi konfigurasi yang tersedia untuk melakukan permintaan. Hanya `url` yang wajib diisi. Permintaan akan menggunakan `GET` secara default jika `method` tidak ditentukan.\n\n```js\n{\n  // `url` adalah URL server yang akan digunakan untuk permintaan\n  url: '/user',\n\n  // `method` adalah metode permintaan yang akan digunakan saat melakukan permintaan\n  method: 'get', // default\n\n  // `baseURL` akan ditambahkan di depan `url` kecuali `url` adalah absolut dan opsi `allowAbsoluteUrls` diatur ke true.\n  // Akan lebih mudah jika mengatur `baseURL` untuk instance axios agar bisa melewatkan URL relatif\n  // ke metode dari instance tersebut.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `allowAbsoluteUrls` menentukan apakah URL absolut akan menimpa `baseUrl` yang sudah dikonfigurasi.\n  // Jika diatur ke true (default), nilai absolut untuk `url` akan menimpa `baseUrl`.\n  // Jika diatur ke false, nilai absolut untuk `url` akan selalu didahului oleh `baseUrl`.\n  allowAbsoluteUrls: true,\n\n  // `transformRequest` memungkinkan perubahan pada data permintaan sebelum dikirim ke server\n  // Ini hanya berlaku untuk metode permintaan 'PUT', 'POST', 'PATCH', dan 'DELETE'\n  // Fungsi terakhir dalam array harus mengembalikan string atau instance dari Buffer, ArrayBuffer,\n  // FormData atau Stream\n  // Anda dapat memodifikasi objek headers.\n  transformRequest: [function (data, headers) {\n    // Lakukan apa pun yang Anda inginkan untuk mengubah data\n```",
  "status": "ok"
}