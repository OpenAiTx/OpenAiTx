{
  "id": 13,
  "origin": "});\n```\n\nor multiple files as `multipart/form-data`:\n\n```js\nawait axios.postForm('https://httpbin.org/post', {\n  'files[]': document.querySelector('#fileInput').files\n});\n```\n\n`FileList` object can be passed directly:\n\n```js\nawait axios.postForm('https://httpbin.org/post', document.querySelector('#fileInput').files)\n```\n\nAll files will be sent with the same field names: `files[]`.\n\n## üÜï HTML Form Posting (browser)\n\nPass HTML Form element as a payload to submit it as `multipart/form-data` content.\n\n```js\nawait axios.postForm('https://httpbin.org/post', document.querySelector('#htmlForm'));\n```\n\n`FormData` and `HTMLForm` objects can also be posted as `JSON` by explicitly setting the `Content-Type` header to `application/json`:\n\n```js\nawait axios.post('https://httpbin.org/post', document.querySelector('#htmlForm'), {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n```\n\nFor example, the Form\n\n```html\n<form id=\"form\">\n  <input type=\"text\" name=\"foo\" value=\"1\">\n  <input type=\"text\" name=\"deep.prop\" value=\"2\">\n  <input type=\"text\" name=\"deep prop spaced\" value=\"3\">\n  <input type=\"text\" name=\"baz\" value=\"4\">\n  <input type=\"text\" name=\"baz\" value=\"5\">\n\n  <select name=\"user.age\">\n    <option value=\"value1\">Value 1</option>\n    <option value=\"value2\" selected>Value 2</option>\n    <option value=\"value3\">Value 3</option>\n  </select>\n\n  <input type=\"submit\" value=\"Save\">\n</form>\n```\n\nwill be submitted as the following JSON object:\n\n```js\n{\n  \"foo\": \"1\",\n  \"deep\": {\n    \"prop\": {\n      \"spaced\": \"3\"\n    }\n  },\n  \"baz\": [\n    \"4\",\n    \"5\"\n  ],\n  \"user\": {\n    \"age\": \"value2\"\n  }\n}\n````\n\nSending `Blobs`/`Files` as JSON (`base64`) is not currently supported.\n\n## üÜï Progress capturing\n\nAxios supports both browser and node environments to capture request upload/download progress.\nThe frequency of progress events is forced to be limited to `3` times per second.\n\n```js    \nawait axios.post(url, data, {\n  onUploadProgress: function (axiosProgressEvent) {\n    /*{\n      loaded: number;\n      total?: number;\n      progress?: number; // in range [0..1]\n      bytes: number; // how many bytes have been transferred since the last trigger (delta)\n      estimated?: number; // estimated time in seconds\n      rate?: number; // upload speed in bytes\n      upload: true; // upload sign\n    }*/\n  },\n\n  onDownloadProgress: function (axiosProgressEvent) {\n    /*{",
  "origin_sha": "pHLZ21gy3hXhOAeOHsMkCCM4OH1wGWHASYhQzNgbqb4=",
  "translate": "});\n```\n\n–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ –∫–∞–∫ `multipart/form-data`:\n\n```js\nawait axios.postForm('https://httpbin.org/post', {\n  'files[]': document.querySelector('#fileInput').files\n});\n```\n\n–û–±—ä–µ–∫—Ç `FileList` –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é:\n\n```js\nawait axios.postForm('https://httpbin.org/post', document.querySelector('#fileInput').files)\n```\n\n–í—Å–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ –ø–æ–ª–µ–π: `files[]`.\n\n## üÜï –û—Ç–ø—Ä–∞–≤–∫–∞ HTML-—Ñ–æ—Ä–º—ã (–≤ –±—Ä–∞—É–∑–µ—Ä–µ)\n\n–ü–µ—Ä–µ–¥–∞–π—Ç–µ —ç–ª–µ–º–µ–Ω—Ç HTML-—Ñ–æ—Ä–º—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–æ–ª–µ–∑–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –∫–∞–∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ `multipart/form-data`.\n\n```js\nawait axios.postForm('https://httpbin.org/post', document.querySelector('#htmlForm'));\n```\n\n–û–±—ä–µ–∫—Ç—ã `FormData` –∏ `HTMLForm` —Ç–∞–∫–∂–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–∞–∫ `JSON`, –µ—Å–ª–∏ —è–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ `Content-Type` —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º `application/json`:\n\n```js\nawait axios.post('https://httpbin.org/post', document.querySelector('#htmlForm'), {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n```\n\n–ù–∞–ø—Ä–∏–º–µ—Ä, —Ñ–æ—Ä–º–∞\n\n```html\n<form id=\"form\">\n  <input type=\"text\" name=\"foo\" value=\"1\">\n  <input type=\"text\" name=\"deep.prop\" value=\"2\">\n  <input type=\"text\" name=\"deep prop spaced\" value=\"3\">\n  <input type=\"text\" name=\"baz\" value=\"4\">\n  <input type=\"text\" name=\"baz\" value=\"5\">\n\n  <select name=\"user.age\">\n    <option value=\"value1\">Value 1</option>\n    <option value=\"value2\" selected>Value 2</option>\n    <option value=\"value3\">Value 3</option>\n  </select>\n\n  <input type=\"submit\" value=\"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å\">\n</form>\n```\n\n–±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–∞–∫ —Å–ª–µ–¥—É—é—â–∏–π JSON-–æ–±—ä–µ–∫—Ç:\n\n```js\n{\n  \"foo\": \"1\",\n  \"deep\": {\n    \"prop\": {\n      \"spaced\": \"3\"\n    }\n  },\n  \"baz\": [\n    \"4\",\n    \"5\"\n  ],\n  \"user\": {\n    \"age\": \"value2\"\n  }\n}\n````\n\n–û—Ç–ø—Ä–∞–≤–∫–∞ `Blobs`/`Files` –∫–∞–∫ JSON (`base64`) –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.\n\n## üÜï –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞\n\nAxios –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–∞–∫ –±—Ä–∞—É–∑–µ—Ä–Ω—É—é, —Ç–∞–∫ –∏ node-—Å—Ä–µ–¥—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏/–≤—ã–≥—Ä—É–∑–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤.\n–ß–∞—Å—Ç–æ—Ç–∞ —Å–æ–±—ã—Ç–∏–π –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ –¥–æ `3` —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É.\n\n```js    \nawait axios.post(url, data, {\n  onUploadProgress: function (axiosProgressEvent) {\n    /*{\n      loaded: number;\n      total?: number;\n      progress?: number; // –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [0..1]\n      bytes: number; // —Å–∫–æ–ª—å–∫–æ –±–∞–π—Ç –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–∑–æ–≤–∞ (–¥–µ–ª—å—Ç–∞)\n      estimated?: number; // –æ—Ü–µ–Ω–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö\n      rate?: number; // —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –±–∞–π—Ç–∞—Ö\n      upload: true; // –ø—Ä–∏–∑–Ω–∞–∫ –∑–∞–≥—Ä—É–∑–∫–∏\n    }*/\n  },\n\n  onDownloadProgress: function (axiosProgressEvent) {\n    /*{",
  "status": "ok"
}