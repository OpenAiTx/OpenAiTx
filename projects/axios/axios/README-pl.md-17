{
  "id": 17,
  "origin": "\n- `setContentEncoding`, `getContentEncoding`, `hasContentEncoding`\n\n## üî• Fetch adapter\n\nFetch adapter was introduced in `v1.7.0`. By default, it will be used if `xhr` and `http` adapters are not available in the build,\nor not supported by the environment.\nTo use it by default, it must be selected explicitly:\n\n```js\nconst {data} = axios.get(url, {\n  adapter: 'fetch' // by default ['xhr', 'http', 'fetch']\n})\n```\n\nYou can create a separate instance for this:\n\n```js\nconst fetchAxios = axios.create({\n  adapter: 'fetch'\n});\n\nconst {data} = fetchAxios.get(url);\n```\n\nThe adapter supports the same functionality as `xhr` adapter, **including upload and download progress capturing**. \nAlso, it supports additional response types such as `stream` and `formdata` (if supported by the environment).\n\n## Semver\n\nUntil axios reaches a `1.0` release, breaking changes will be released with a new minor version. For example `0.5.1`, and `0.5.4` will have the same API, but `0.6.0` will have breaking changes.\n\n## Promises\n\naxios depends on a native ES6 Promise implementation to be [supported](https://caniuse.com/promises).\nIf your environment doesn't support ES6 Promises, you can [polyfill](https://github.com/jakearchibald/es6-promise).\n\n## TypeScript\n\naxios includes [TypeScript](https://typescriptlang.org) definitions and a type guard for axios errors.\n\n```typescript\nlet user: User = null;\ntry {\n  const { data } = await axios.get('/user?ID=12345');\n  user = data.userDetails;\n} catch (error) {\n  if (axios.isAxiosError(error)) {\n    handleAxiosError(error);\n  } else {\n    handleUnexpectedError(error);\n  }\n}\n```\n\nBecause axios dual publishes with an ESM default export and a CJS `module.exports`, there are some caveats.\nThe recommended setting is to use `\"moduleResolution\": \"node16\"` (this is implied by `\"module\": \"node16\"`). Note that this requires TypeScript 4.7 or greater.\nIf use ESM, your settings should be fine.\nIf you compile TypeScript to CJS and you can‚Äôt use `\"moduleResolution\": \"node 16\"`, you have to enable `esModuleInterop`.\nIf you use TypeScript to type check CJS JavaScript code, your only option is to use `\"moduleResolution\": \"node16\"`.\n\n## Online one-click setup\n\nYou can use Gitpod, an online IDE(which is free for Open Source) for contributing or running the examples online.\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/axios/axios/blob/main/examples/server.js)\n\n\n## Resources\n\n* [Changelog](https://github.com/axios/axios/blob/v1.x/CHANGELOG.md)\n* [Ecosystem](https://github.com/axios/axios/blob/v1.x/ECOSYSTEM.md)\n* [Contributing Guide](https://github.com/axios/axios/blob/v1.x/CONTRIBUTING.md)\n* [Code of Conduct](https://github.com/axios/axios/blob/v1.x/CODE_OF_CONDUCT.md)\n\n## Credits\n\naxios is heavily inspired by the [$http service](https://docs.angularjs.org/api/ng/service/$http) provided in [AngularJS](https://angularjs.org/). Ultimately axios is an effort to provide a standalone `$http`-like service for use outside of AngularJS.\n\n## License\n\n[MIT](LICENSE)\n",
  "origin_sha": "8FbNY1vCeM4hh6k64ciq5CmkW/Tv4xbnq5/eUDawacA=",
  "translate": "- `setContentEncoding`, `getContentEncoding`, `hasContentEncoding`\n\n## üî• Adapter Fetch\n\nAdapter Fetch zosta≈Ç wprowadzony w wersji `v1.7.0`. Domy≈õlnie bƒôdzie u≈ºywany, je≈õli adaptery `xhr` i `http` nie sƒÖ dostƒôpne w kompilacji lub nie sƒÖ obs≈Çugiwane przez ≈õrodowisko.\nAby u≈ºywaƒá go domy≈õlnie, nale≈ºy wybraƒá go jawnie:\n\n```js\nconst {data} = axios.get(url, {\n  adapter: 'fetch' // domy≈õlnie ['xhr', 'http', 'fetch']\n})\n```\n\nMo≈ºesz utworzyƒá osobnƒÖ instancjƒô dla tego adaptera:\n\n```js\nconst fetchAxios = axios.create({\n  adapter: 'fetch'\n});\n\nconst {data} = fetchAxios.get(url);\n```\n\nAdapter obs≈Çuguje tƒô samƒÖ funkcjonalno≈õƒá co adapter `xhr`, **w tym przechwytywanie postƒôpu przesy≈Çania i pobierania**.\nDodatkowo obs≈Çuguje dodatkowe typy odpowiedzi, takie jak `stream` i `formdata` (je≈õli sƒÖ obs≈Çugiwane przez ≈õrodowisko).\n\n## Semver\n\nDo czasu wydania axios w wersji `1.0`, zmiany niezgodne wstecz bƒôdƒÖ wydawane z nowƒÖ wersjƒÖ minor. Na przyk≈Çad `0.5.1` i `0.5.4` bƒôdƒÖ mia≈Çy to samo API, ale `0.6.0` bƒôdzie zawieraƒá zmiany niezgodne wstecz.\n\n## Promisy\n\naxios zale≈ºy od natywnej implementacji ES6 Promise, aby by≈Ça [obs≈Çugiwana](https://caniuse.com/promises).\nJe≈õli Twoje ≈õrodowisko nie obs≈Çuguje ES6 Promises, mo≈ºesz u≈ºyƒá [polyfill](https://github.com/jakearchibald/es6-promise).\n\n## TypeScript\n\naxios zawiera definicje [TypeScript](https://typescriptlang.org) oraz stra≈ºnika typ√≥w dla b≈Çƒôd√≥w axios.\n\n```typescript\nlet user: User = null;\ntry {\n  const { data } = await axios.get('/user?ID=12345');\n  user = data.userDetails;\n} catch (error) {\n  if (axios.isAxiosError(error)) {\n    handleAxiosError(error);\n  } else {\n    handleUnexpectedError(error);\n  }\n}\n```\n\nPoniewa≈º axios publikuje r√≥wnocze≈õnie z domy≈õlnym eksportem ESM oraz `module.exports` dla CJS, istniejƒÖ pewne zastrze≈ºenia.\nZalecane ustawienie to `\"moduleResolution\": \"node16\"` (jest to implikowane przez `\"module\": \"node16\"`). Nale≈ºy pamiƒôtaƒá, ≈ºe wymaga to TypeScript w wersji 4.7 lub wy≈ºszej.\nJe≈õli u≈ºywasz ESM, Twoje ustawienia powinny byƒá odpowiednie.\nJe≈õli kompilujesz TypeScript do CJS i nie mo≈ºesz u≈ºyƒá `\"moduleResolution\": \"node16\"`, musisz w≈ÇƒÖczyƒá `esModuleInterop`.\nJe≈õli u≈ºywasz TypeScript do sprawdzania typ√≥w kodu JavaScript CJS, jedynƒÖ opcjƒÖ jest u≈ºycie `\"moduleResolution\": \"node16\"`.\n\n## Konfiguracja online jednym klikniƒôciem\n\nMo≈ºesz u≈ºyƒá Gitpod, internetowego IDE (darmowego dla Open Source), aby wsp√≥≈Çtworzyƒá lub uruchamiaƒá przyk≈Çady online.\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/axios/axios/blob/main/examples/server.js)\n\n\n## Zasoby\n\n* [Changelog](https://github.com/axios/axios/blob/v1.x/CHANGELOG.md)\n* [Ekosystem](https://github.com/axios/axios/blob/v1.x/ECOSYSTEM.md)\n* [Przewodnik dla wsp√≥≈Çtw√≥rc√≥w](https://github.com/axios/axios/blob/v1.x/CONTRIBUTING.md)\n* [Kodeks postƒôpowania](https://github.com/axios/axios/blob/v1.x/CODE_OF_CONDUCT.md)\n\n## Podziƒôkowania\n\naxios jest silnie inspirowany [$http service](https://docs.angularjs.org/api/ng/service/$http) dostƒôpnym w [AngularJS](https://angularjs.org/). Ostatecznie axios to pr√≥ba zapewnienia samodzielnej us≈Çugi podobnej do `$http` do u≈ºytku poza AngularJS.\n\n## Licencja\n\n[MIT](LICENSE)\n",
  "status": "ok"
}