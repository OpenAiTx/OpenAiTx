{
  "id": 17,
  "origin": "\n- `setContentEncoding`, `getContentEncoding`, `hasContentEncoding`\n\n## üî• Fetch adapter\n\nFetch adapter was introduced in `v1.7.0`. By default, it will be used if `xhr` and `http` adapters are not available in the build,\nor not supported by the environment.\nTo use it by default, it must be selected explicitly:\n\n```js\nconst {data} = axios.get(url, {\n  adapter: 'fetch' // by default ['xhr', 'http', 'fetch']\n})\n```\n\nYou can create a separate instance for this:\n\n```js\nconst fetchAxios = axios.create({\n  adapter: 'fetch'\n});\n\nconst {data} = fetchAxios.get(url);\n```\n\nThe adapter supports the same functionality as `xhr` adapter, **including upload and download progress capturing**. \nAlso, it supports additional response types such as `stream` and `formdata` (if supported by the environment).\n\n## Semver\n\nUntil axios reaches a `1.0` release, breaking changes will be released with a new minor version. For example `0.5.1`, and `0.5.4` will have the same API, but `0.6.0` will have breaking changes.\n\n## Promises\n\naxios depends on a native ES6 Promise implementation to be [supported](https://caniuse.com/promises).\nIf your environment doesn't support ES6 Promises, you can [polyfill](https://github.com/jakearchibald/es6-promise).\n\n## TypeScript\n\naxios includes [TypeScript](https://typescriptlang.org) definitions and a type guard for axios errors.\n\n```typescript\nlet user: User = null;\ntry {\n  const { data } = await axios.get('/user?ID=12345');\n  user = data.userDetails;\n} catch (error) {\n  if (axios.isAxiosError(error)) {\n    handleAxiosError(error);\n  } else {\n    handleUnexpectedError(error);\n  }\n}\n```\n\nBecause axios dual publishes with an ESM default export and a CJS `module.exports`, there are some caveats.\nThe recommended setting is to use `\"moduleResolution\": \"node16\"` (this is implied by `\"module\": \"node16\"`). Note that this requires TypeScript 4.7 or greater.\nIf use ESM, your settings should be fine.\nIf you compile TypeScript to CJS and you can‚Äôt use `\"moduleResolution\": \"node 16\"`, you have to enable `esModuleInterop`.\nIf you use TypeScript to type check CJS JavaScript code, your only option is to use `\"moduleResolution\": \"node16\"`.\n\n## Online one-click setup\n\nYou can use Gitpod, an online IDE(which is free for Open Source) for contributing or running the examples online.\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/axios/axios/blob/main/examples/server.js)\n\n\n## Resources\n\n* [Changelog](https://github.com/axios/axios/blob/v1.x/CHANGELOG.md)\n* [Ecosystem](https://github.com/axios/axios/blob/v1.x/ECOSYSTEM.md)\n* [Contributing Guide](https://github.com/axios/axios/blob/v1.x/CONTRIBUTING.md)\n* [Code of Conduct](https://github.com/axios/axios/blob/v1.x/CODE_OF_CONDUCT.md)\n\n## Credits\n\naxios is heavily inspired by the [$http service](https://docs.angularjs.org/api/ng/service/$http) provided in [AngularJS](https://angularjs.org/). Ultimately axios is an effort to provide a standalone `$http`-like service for use outside of AngularJS.\n\n## License\n\n[MIT](LICENSE)\n",
  "origin_sha": "8FbNY1vCeM4hh6k64ciq5CmkW/Tv4xbnq5/eUDawacA=",
  "translate": "- `setContentEncoding`, `getContentEncoding`, `hasContentEncoding`\n\n## üî• Adaptador Fetch\n\nO adaptador Fetch foi introduzido na vers√£o `v1.7.0`. Por padr√£o, ele ser√° utilizado se os adaptadores `xhr` e `http` n√£o estiverem dispon√≠veis na build,\nou n√£o forem suportados pelo ambiente.\nPara utiliz√°-lo por padr√£o, ele deve ser selecionado explicitamente:\n\n```js\nconst {data} = axios.get(url, {\n  adapter: 'fetch' // por padr√£o ['xhr', 'http', 'fetch']\n})\n```\n\nVoc√™ pode criar uma inst√¢ncia separada para isso:\n\n```js\nconst fetchAxios = axios.create({\n  adapter: 'fetch'\n});\n\nconst {data} = fetchAxios.get(url);\n```\n\nO adaptador oferece o mesmo conjunto de funcionalidades do adaptador `xhr`, **incluindo captura de progresso de upload e download**.\nAl√©m disso, suporta tipos de resposta adicionais, como `stream` e `formdata` (se suportado pelo ambiente).\n\n## Semver\n\nAt√© que o axios atinja a vers√£o `1.0`, mudan√ßas incompat√≠veis ser√£o lan√ßadas com uma nova vers√£o menor. Por exemplo, `0.5.1` e `0.5.4` ter√£o a mesma API, mas `0.6.0` ter√° mudan√ßas incompat√≠veis.\n\n## Promises\n\nO axios depende de uma implementa√ß√£o nativa de Promise do ES6 para ser [suportado](https://caniuse.com/promises).\nSe o seu ambiente n√£o suporta Promises do ES6, voc√™ pode [utilizar um polyfill](https://github.com/jakearchibald/es6-promise).\n\n## TypeScript\n\nO axios inclui defini√ß√µes [TypeScript](https://typescriptlang.org) e um type guard para erros do axios.\n\n```typescript\nlet user: User = null;\ntry {\n  const { data } = await axios.get('/user?ID=12345');\n  user = data.userDetails;\n} catch (error) {\n  if (axios.isAxiosError(error)) {\n    handleAxiosError(error);\n  } else {\n    handleUnexpectedError(error);\n  }\n}\n```\n\nComo o axios publica duplamente com uma exporta√ß√£o padr√£o ESM e um `module.exports` CJS, existem algumas ressalvas.\nA configura√ß√£o recomendada √© usar `\"moduleResolution\": \"node16\"` (isso √© impl√≠cito por `\"module\": \"node16\"`). Observe que isso requer TypeScript 4.7 ou superior.\nSe utilizar ESM, suas configura√ß√µes j√° estar√£o corretas.\nSe voc√™ compilar TypeScript para CJS e n√£o puder usar `\"moduleResolution\": \"node16\"`, ser√° necess√°rio habilitar `esModuleInterop`.\nSe voc√™ usa TypeScript apenas para checagem de tipos em c√≥digo JavaScript CJS, a √∫nica op√ß√£o √© utilizar `\"moduleResolution\": \"node16\"`.\n\n## Configura√ß√£o online em um clique\n\nVoc√™ pode utilizar o Gitpod, um IDE online (gratuito para projetos Open Source) para contribuir ou rodar exemplos online.\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/axios/axios/blob/main/examples/server.js)\n\n\n## Recursos\n\n* [Changelog](https://github.com/axios/axios/blob/v1.x/CHANGELOG.md)\n* [Ecossistema](https://github.com/axios/axios/blob/v1.x/ECOSYSTEM.md)\n* [Guia de Contribui√ß√£o](https://github.com/axios/axios/blob/v1.x/CONTRIBUTING.md)\n* [C√≥digo de Conduta](https://github.com/axios/axios/blob/v1.x/CODE_OF_CONDUCT.md)\n\n## Cr√©ditos\n\nO axios √© fortemente inspirado pelo [$http service](https://docs.angularjs.org/api/ng/service/$http) fornecido no [AngularJS](https://angularjs.org/). No final das contas, o axios √© um esfor√ßo para fornecer um servi√ßo independente semelhante ao `$http` para uso fora do AngularJS.\n\n## Licen√ßa\n\n[MIT](LICENSE)\n",
  "status": "ok"
}