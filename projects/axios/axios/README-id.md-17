{
  "id": 17,
  "origin": "\n- `setContentEncoding`, `getContentEncoding`, `hasContentEncoding`\n\n## ðŸ”¥ Fetch adapter\n\nFetch adapter was introduced in `v1.7.0`. By default, it will be used if `xhr` and `http` adapters are not available in the build,\nor not supported by the environment.\nTo use it by default, it must be selected explicitly:\n\n```js\nconst {data} = axios.get(url, {\n  adapter: 'fetch' // by default ['xhr', 'http', 'fetch']\n})\n```\n\nYou can create a separate instance for this:\n\n```js\nconst fetchAxios = axios.create({\n  adapter: 'fetch'\n});\n\nconst {data} = fetchAxios.get(url);\n```\n\nThe adapter supports the same functionality as `xhr` adapter, **including upload and download progress capturing**. \nAlso, it supports additional response types such as `stream` and `formdata` (if supported by the environment).\n\n## Semver\n\nUntil axios reaches a `1.0` release, breaking changes will be released with a new minor version. For example `0.5.1`, and `0.5.4` will have the same API, but `0.6.0` will have breaking changes.\n\n## Promises\n\naxios depends on a native ES6 Promise implementation to be [supported](https://caniuse.com/promises).\nIf your environment doesn't support ES6 Promises, you can [polyfill](https://github.com/jakearchibald/es6-promise).\n\n## TypeScript\n\naxios includes [TypeScript](https://typescriptlang.org) definitions and a type guard for axios errors.\n\n```typescript\nlet user: User = null;\ntry {\n  const { data } = await axios.get('/user?ID=12345');\n  user = data.userDetails;\n} catch (error) {\n  if (axios.isAxiosError(error)) {\n    handleAxiosError(error);\n  } else {\n    handleUnexpectedError(error);\n  }\n}\n```\n\nBecause axios dual publishes with an ESM default export and a CJS `module.exports`, there are some caveats.\nThe recommended setting is to use `\"moduleResolution\": \"node16\"` (this is implied by `\"module\": \"node16\"`). Note that this requires TypeScript 4.7 or greater.\nIf use ESM, your settings should be fine.\nIf you compile TypeScript to CJS and you canâ€™t use `\"moduleResolution\": \"node 16\"`, you have to enable `esModuleInterop`.\nIf you use TypeScript to type check CJS JavaScript code, your only option is to use `\"moduleResolution\": \"node16\"`.\n\n## Online one-click setup\n\nYou can use Gitpod, an online IDE(which is free for Open Source) for contributing or running the examples online.\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/axios/axios/blob/main/examples/server.js)\n\n\n## Resources\n\n* [Changelog](https://github.com/axios/axios/blob/v1.x/CHANGELOG.md)\n* [Ecosystem](https://github.com/axios/axios/blob/v1.x/ECOSYSTEM.md)\n* [Contributing Guide](https://github.com/axios/axios/blob/v1.x/CONTRIBUTING.md)\n* [Code of Conduct](https://github.com/axios/axios/blob/v1.x/CODE_OF_CONDUCT.md)\n\n## Credits\n\naxios is heavily inspired by the [$http service](https://docs.angularjs.org/api/ng/service/$http) provided in [AngularJS](https://angularjs.org/). Ultimately axios is an effort to provide a standalone `$http`-like service for use outside of AngularJS.\n\n## License\n\n[MIT](LICENSE)\n",
  "origin_sha": "8FbNY1vCeM4hh6k64ciq5CmkW/Tv4xbnq5/eUDawacA=",
  "translate": "- `setContentEncoding`, `getContentEncoding`, `hasContentEncoding`\n\n## ðŸ”¥ Adapter Fetch\n\nAdapter fetch diperkenalkan pada `v1.7.0`. Secara default, ini akan digunakan jika adapter `xhr` dan `http` tidak tersedia dalam build,\natau tidak didukung oleh lingkungan.\nUntuk menggunakannya secara default, adapter ini harus dipilih secara eksplisit:\n\n```js\nconst {data} = axios.get(url, {\n  adapter: 'fetch' // defaultnya ['xhr', 'http', 'fetch']\n})\n```\n\nAnda dapat membuat instance terpisah untuk ini:\n\n```js\nconst fetchAxios = axios.create({\n  adapter: 'fetch'\n});\n\nconst {data} = fetchAxios.get(url);\n```\n\nAdapter ini mendukung fungsionalitas yang sama dengan adapter `xhr`, **termasuk penangkapan progres unggahan dan unduhan**.\nSelain itu, adapter ini juga mendukung tipe respons tambahan seperti `stream` dan `formdata` (jika didukung oleh lingkungan).\n\n## Semver\n\nSampai axios mencapai rilis `1.0`, perubahan yang merusak akan dirilis dengan versi minor baru. Misalnya `0.5.1`, dan `0.5.4` akan memiliki API yang sama, tetapi `0.6.0` akan memiliki perubahan yang merusak.\n\n## Promises\n\naxios bergantung pada implementasi native ES6 Promise agar dapat [didukung](https://caniuse.com/promises).\nJika lingkungan Anda tidak mendukung ES6 Promises, Anda dapat [menggunakan polyfill](https://github.com/jakearchibald/es6-promise).\n\n## TypeScript\n\naxios menyertakan definisi [TypeScript](https://typescriptlang.org) dan type guard untuk error axios.\n\n```typescript\nlet user: User = null;\ntry {\n  const { data } = await axios.get('/user?ID=12345');\n  user = data.userDetails;\n} catch (error) {\n  if (axios.isAxiosError(error)) {\n    handleAxiosError(error);\n  } else {\n    handleUnexpectedError(error);\n  }\n}\n```\n\nKarena axios melakukan publikasi ganda dengan ekspor default ESM dan CJS `module.exports`, ada beberapa hal yang perlu diperhatikan.\nPengaturan yang direkomendasikan adalah menggunakan `\"moduleResolution\": \"node16\"` (ini sudah termasuk di `\"module\": \"node16\"`). Perlu dicatat bahwa ini memerlukan TypeScript 4.7 atau lebih baru.\nJika menggunakan ESM, pengaturan Anda sudah sesuai.\nJika Anda mengompilasi TypeScript ke CJS dan tidak dapat menggunakan `\"moduleResolution\": \"node16\"`, Anda harus mengaktifkan `esModuleInterop`.\nJika Anda menggunakan TypeScript untuk pengecekan tipe kode JavaScript CJS, satu-satunya pilihan Anda adalah menggunakan `\"moduleResolution\": \"node16\"`.\n\n## Pengaturan satu klik online\n\nAnda dapat menggunakan Gitpod, IDE online (yang gratis untuk Open Source) untuk berkontribusi atau menjalankan contoh secara online.\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/axios/axios/blob/main/examples/server.js)\n\n\n## Sumber Daya\n\n* [Changelog](https://github.com/axios/axios/blob/v1.x/CHANGELOG.md)\n* [Ecosystem](https://github.com/axios/axios/blob/v1.x/ECOSYSTEM.md)\n* [Panduan Kontribusi](https://github.com/axios/axios/blob/v1.x/CONTRIBUTING.md)\n* [Kode Etik](https://github.com/axios/axios/blob/v1.x/CODE_OF_CONDUCT.md)\n\n## Kredit\n\naxios sangat terinspirasi oleh [$http service](https://docs.angularjs.org/api/ng/service/$http) yang disediakan di [AngularJS](https://angularjs.org/). Pada akhirnya, axios adalah upaya untuk menyediakan layanan mandiri mirip `$http` untuk digunakan di luar AngularJS.\n\n## Lisensi\n\n[MIT](LICENSE)",
  "status": "ok"
}