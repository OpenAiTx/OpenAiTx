{
  "id": 2,
  "origin": "- Automatic transforms for [JSON](https://www.json.org/json-en.html) data\n- ðŸ†• Automatic data object serialization to `multipart/form-data` and `x-www-form-urlencoded` body encodings\n- Client side support for protecting against [XSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Browser Support\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\nLatest âœ” | Latest âœ” | Latest âœ” | Latest âœ” | Latest âœ” | 11 âœ” |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installing\n\n### Package manager\n\nUsing npm:\n\n```bash\n$ npm install axios\n```\n\nUsing bower:\n\n```bash\n$ bower install axios\n```\n\nUsing yarn:\n\n```bash\n$ yarn add axios\n```\n\nUsing pnpm:\n\n```bash\n$ pnpm add axios\n```\n\nUsing bun:\n\n```bash\n$ bun add axios\n```\n\nOnce the package is installed, you can import the library using `import` or `require` approach:\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\nYou can also use the default export, since the named export is just a re-export from the Axios factory:\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n````\n\nIf you use `require` for importing, **only default export is available**:\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\nFor some bundlers and some ES6 linters you may need to do the following:\n\n```js\nimport { default as axios } from 'axios';\n```\n\nFor cases where something went wrong when trying to import a module into a custom or legacy environment,\nyou can try importing the module package directly:\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // browser commonJS bundle (ES2017)\n// const axios = require('axios/dist/node/axios.cjs'); // node commonJS bundle (ES2017)\n```\n\n### CDN\n\nUsing jsDelivr CDN (ES5 UMD browser module):\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\nUsing unpkg CDN:\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## Example\n\n> **Note**: CommonJS usage  \n> In order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()`, use the following approach:",
  "origin_sha": "v1NJQMAwr48ek+yIJ/5xAG3QAPGdQRiixkZMiBnSypE=",
  "translate": "- Transformations automatiques pour les donnÃ©es [JSON](https://www.json.org/json-en.html)\n- ðŸ†• SÃ©rialisation automatique des objets de donnÃ©es en encodages de corps `multipart/form-data` et `x-www-form-urlencoded`\n- Prise en charge cÃ´tÃ© client pour la protection contre la [XSRF](https://fr.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Prise en charge des navigateurs\n\n![Chrome](https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png) | ![Safari](https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png) | ![Opera](https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png) | ![Edge](https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png) |\n--- | --- | --- | --- | --- |\nDerniÃ¨re âœ” | DerniÃ¨re âœ” | DerniÃ¨re âœ” | DerniÃ¨re âœ” | DerniÃ¨re âœ” | 11 âœ” |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installation\n\n### Gestionnaire de paquets\n\nAvec npm :\n\n```bash\n$ npm install axios\n```\n\nAvec bower :\n\n```bash\n$ bower install axios\n```\n\nAvec yarn :\n\n```bash\n$ yarn add axios\n```\n\nAvec pnpm :\n\n```bash\n$ pnpm add axios\n```\n\nAvec bun :\n\n```bash\n$ bun add axios\n```\n\nUne fois le paquet installÃ©, vous pouvez importer la bibliothÃ¨que en utilisant l'approche `import` ou `require` :\n\n```js\nimport axios, {isCancel, AxiosError} from 'axios';\n```\n\nVous pouvez Ã©galement utiliser lâ€™exportation par dÃ©faut, puisque lâ€™exportation nommÃ©e nâ€™est quâ€™une rÃ©exportation de la fabrique Axios :\n\n```js\nimport axios from 'axios';\n\nconsole.log(axios.isCancel('something'));\n````\n\nSi vous utilisez `require` pour l'importation, **seule lâ€™exportation par dÃ©faut est disponible** :\n\n```js\nconst axios = require('axios');\n\nconsole.log(axios.isCancel('something'));\n```\n\nPour certains bundlers et certains linters ES6, il peut Ãªtre nÃ©cessaire de faire ce qui suit :\n\n```js\nimport { default as axios } from 'axios';\n```\n\nDans les cas oÃ¹ une erreur se produit lors de lâ€™import dâ€™un module dans un environnement personnalisÃ© ou hÃ©ritÃ©,\nvous pouvez essayer dâ€™importer directement le paquet du module :\n\n```js\nconst axios = require('axios/dist/browser/axios.cjs'); // bundle commonJS pour navigateur (ES2017)\n// const axios = require('axios/dist/node/axios.cjs'); // bundle commonJS pour node (ES2017)\n```\n\n### CDN\n\nAvec le CDN jsDelivr (module navigateur UMD ES5) :\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\nAvec le CDN unpkg :\n\n```html\n<script src=\"https://unpkg.com/axios@1.6.7/dist/axios.min.js\"></script>\n```\n\n## Exemple\n\n> **Remarque** : Utilisation de CommonJS  \n> Afin de bÃ©nÃ©ficier des typings TypeScript (pour lâ€™intellisense / lâ€™autocomplÃ©tion) tout en utilisant des imports CommonJS avec `require()`, utilisez lâ€™approche suivante :",
  "status": "ok"
}