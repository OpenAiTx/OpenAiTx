[
  {
    "Id": 1,
    "Content": "# Git Smart Squash\n\nStop wasting time manually reorganizing commits. Let AI do it for you.\n\n## The Problem\n\nYou've been there: 15 commits for a feature, half of them are \"fix\", \"typo\", or \"WIP\". Now you need to clean it up for PR review. Manually squashing and rewriting is tedious.\n\n## The Solution\n\nGit Smart Squash analyzes your changes and reorganizes them into logical commits with proper messages:\n\n```bash\n# Before: your messy branch\n* fix tests\n* typo  \n* more auth changes\n* WIP: working on auth\n* update tests\n* initial auth implementation\n",
    "ContentSha": "YH9fY4xY/lXi3x+BR8NmyNqmDID4lmWiXBc3LGsn598=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Git Smart Squash\n\nDeja de perder tiempo reorganizando commits manualmente. Deja que la IA lo haga por ti.\n\n## El Problema\n\nYa has estado ahí: 15 commits para una función, la mitad son \"fix\", \"typo\" o \"WIP\". Ahora necesitas limpiarlos para la revisión del PR. Hacer squash y reescribir manualmente es tedioso.\n\n## La Solución\n\nGit Smart Squash analiza tus cambios y los reorganiza en commits lógicos con mensajes adecuados:\n\n```bash\n# Antes: tu rama desordenada\n* fix tests\n* typo  \n* more auth changes\n* WIP: working on auth\n* update tests\n* initial auth implementation\n",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "# After: clean, logical commits\n* feat: implement JWT authentication system\n* test: add auth endpoint coverage\n```\n\n## Quick Start\n\n### 1. Install\n\n```bash\n# Using pip\npip install git-smart-squash\n\n# Using pipx (recommended for isolated install)\npipx install git-smart-squash\n\n# Using uv (fast Python package manager)\nuv tool install git-smart-squash\n```\n",
    "ContentSha": "pCxRMKQBu7AVNIWAqJtAKbTpwM6cJjK4yafCwq44TOU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Después: commits limpios y lógicos\n* feat: implementar sistema de autenticación JWT\n* test: agregar cobertura al endpoint de autenticación\n```\n\n## Inicio Rápido\n\n### 1. Instalar\n\n```bash\n# Usando pip\npip install git-smart-squash\n\n# Usando pipx (recomendado para instalación aislada)\npipx install git-smart-squash\n\n# Usando uv (gestor de paquetes de Python rápido)\nuv tool install git-smart-squash\n```",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "### 2. Set up AI\n\n**Option A: Local (Free, Private)**\n```bash\n# Install Ollama from https://ollama.com\nollama pull devstral  # Default model\n```\n\n**Option B: Cloud (Better results)**\n```bash\nexport OPENAI_API_KEY=\"your-key\"\nexport ANTHROPIC_API_KEY=\"your-key\"\nexport GEMINI_API_KEY=\"your-key\"\n```\n\n### 3. Run\n\n```bash\ncd your-repo\ngit-smart-squash\n```",
    "ContentSha": "E2AGy4/eSi9FJ42apR9qXMYSpkkZrzqrl3Mn22oJODw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 2. Configurar IA\n\n**Opción A: Local (Gratis, Privado)**\n```bash\n# Instalar Ollama desde https://ollama.com\nollama pull devstral  # Modelo por defecto\n```\n\n**Opción B: Nube (Mejores resultados)**\n```bash\nexport OPENAI_API_KEY=\"tu-clave\"\nexport ANTHROPIC_API_KEY=\"tu-clave\"\nexport GEMINI_API_KEY=\"tu-clave\"\n```\n\n### 3. Ejecutar\n\n```bash\ncd tu-repo\ngit-smart-squash\n```",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "\nThat's it. Review the plan and approve.\n\n## Command Line Parameters\n\n| Parameter | Description | Default |\n|-----------|-------------|---------|\n| `--base` | Base branch to compare against | Config file or `main` |\n| `--ai-provider` | AI provider to use (openai, anthropic, local, gemini) | Configured in settings |\n| `--model` | Specific AI model to use (see recommended models below) | Provider default |\n| `--config` | Path to custom configuration file | `.git-smart-squash.yml` or `~/.git-smart-squash.yml` |\n| `--auto-apply` | Apply commit plan without confirmation prompt | `false` |\n| `--instructions`, `-i` | Custom instructions for AI (e.g., \"Group by feature area\") | None |\n| `--no-attribution` | Disable attribution message in commits | `false` |\n| `--debug` | Enable debug logging for detailed information | `false` |\n\n## Recommended Models\n\n### Default Models\n- **OpenAI**: `gpt-4.1` (default)\n- **Anthropic**: `claude-sonnet-4-20250514` (default)\n- **Gemini**: `gemini-2.5-pro` (default)\n- **Local/Ollama**: `devstral` (default)\n",
    "ContentSha": "FHYkiFSoZVlQv4AVehbXxD+gtFweeUnhmkjMtC2rCb4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Eso es todo. Revisa el plan y apruébalo.\n\n## Parámetros de Línea de Comandos\n\n| Parámetro | Descripción | Predeterminado |\n|-----------|-------------|---------------|\n| `--base` | Rama base para comparar | Archivo de configuración o `main` |\n| `--ai-provider` | Proveedor de IA a utilizar (openai, anthropic, local, gemini) | Configurado en ajustes |\n| `--model` | Modelo de IA específico a utilizar (ver modelos recomendados abajo) | Predeterminado del proveedor |\n| `--config` | Ruta al archivo de configuración personalizado | `.git-smart-squash.yml` o `~/.git-smart-squash.yml` |\n| `--auto-apply` | Aplicar el plan de commits sin mensaje de confirmación | `false` |\n| `--instructions`, `-i` | Instrucciones personalizadas para la IA (ej., \"Agrupar por área de funcionalidad\") | Ninguna |\n| `--no-attribution` | Desactivar mensaje de atribución en los commits | `false` |\n| `--debug` | Activar registros de depuración para información detallada | `false` |\n\n## Modelos Recomendados\n\n### Modelos Predeterminados\n- **OpenAI**: `gpt-4.1` (predeterminado)\n- **Anthropic**: `claude-sonnet-4-20250514` (predeterminado)\n- **Gemini**: `gemini-2.5-pro` (predeterminado)\n- **Local/Ollama**: `devstral` (predeterminado)\n",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "### Model Selection\n```bash\n# Specify a different model\ngit-smart-squash --ai-provider openai --model gpt-4.1-mini\n\n# For local Ollama\ngit-smart-squash --ai-provider local --model llama-3.1\n```\n\n## Custom Instructions\n\nThe `--instructions` parameter lets you control how commits are organized:\n\n### Examples\n```bash\n# Add ticket prefixes\ngit-smart-squash -i \"Prefix all commits with [ABC-1234]\"\n\n# Separate by type\ngit-smart-squash -i \"Keep backend and frontend changes in separate commits\"\n",
    "ContentSha": "59gf0Ud/6VrjgyVEVt6QJCKgcdF63NaibO10tb7S2Gg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Selección de Modelo\n```bash\n# Especificar un modelo diferente\ngit-smart-squash --ai-provider openai --model gpt-4.1-mini\n\n# Para Ollama local\ngit-smart-squash --ai-provider local --model llama-3.1\n```\n\n## Instrucciones Personalizadas\n\nEl parámetro `--instructions` te permite controlar cómo se organizan los commits:\n\n### Ejemplos\n```bash\n# Agregar prefijos de ticket\ngit-smart-squash -i \"Prefija todos los commits con [ABC-1234]\"\n\n# Separar por tipo\ngit-smart-squash -i \"Mantén los cambios de backend y frontend en commits separados\"\n```",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "# Limit commit count\ngit-smart-squash -i \"Create at most 3 commits total\"\n```\n\n### Tips for Better Results\n- **Be specific**: \"Group database migrations separately\" works better than \"organize nicely\"\n- **One instruction at a time**: Complex multi-part instructions may be partially ignored\n- **Use better models**: Larger models follow instructions more reliably than smaller models\n\n## Common Use Cases\n\n### \"I need to clean up before PR review\"\n```bash\ngit-smart-squash              # Shows plan and prompts for confirmation\ngit-smart-squash --auto-apply # Auto-applies without prompting\n```\n\n### \"I work with a different main branch\"\n```bash\ngit-smart-squash --base develop\n```",
    "ContentSha": "7nTUyDnFpIUxSGbqAObHJzIk8bye8cMxqP2qS/Y3PbA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Limitar el número de commits\ngit-smart-squash -i \"Crear como máximo 3 commits en total\"\n```\n\n### Consejos para obtener mejores resultados\n- **Sé específico**: \"Agrupa las migraciones de base de datos por separado\" funciona mejor que \"organiza bien\"\n- **Una instrucción a la vez**: Las instrucciones complejas con varias partes pueden ser ignoradas parcialmente\n- **Usa mejores modelos**: Los modelos más grandes siguen las instrucciones de manera más confiable que los modelos más pequeños\n\n## Casos de uso comunes\n\n### \"Necesito limpiar antes de la revisión de PR\"\n```bash\ngit-smart-squash              # Muestra el plan y solicita confirmación\ngit-smart-squash --auto-apply # Aplica automáticamente sin solicitar confirmación\n```\n\n### \"Trabajo con una rama principal diferente\"\n```bash\ngit-smart-squash --base develop\n```",
    "Status": "ok"
  },
  {
    "Id": 7,
    "Content": "\n### \"I want to use a specific AI provider\"\n```bash\ngit-smart-squash --ai-provider openai\n```\n\n## Safety\n\n**Your code is safe:**\n- Shows plan before making changes\n- Creates automatic backup branch\n- Requires clean working directory\n- Never pushes without your command\n\n**If something goes wrong:**\n```bash\n# Find backup\ngit branch | grep backup\n\n# Restore",
    "ContentSha": "jqyM7EpZCqjhGFDKwBL5vcbG/ueNzkXRL+XYCfGmMWk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### \"Quiero usar un proveedor de IA específico\"\n```bash\ngit-smart-squash --ai-provider openai\n```\n\n## Seguridad\n\n**Tu código está seguro:**\n- Muestra el plan antes de hacer cambios\n- Crea una rama de respaldo automática\n- Requiere un directorio de trabajo limpio\n- Nunca hace push sin tu orden\n\n**Si algo sale mal:**\n```bash\n# Encontrar respaldo\ngit branch | grep backup\n\n# Restaurar",
    "Status": "ok"
  },
  {
    "Id": 8,
    "Content": "git reset --hard your-branch-backup-[timestamp]\n```\n\n## AI Providers\n\n| Provider | Cost | Privacy |\n|----------|------|---------|\n| **Ollama** | Free | Local |\n| **OpenAI** | ~$0.01 | Cloud |\n| **Anthropic** | ~$0.01 | Cloud |\n| **Gemini** | ~$0.01 | Cloud |\n\n## Advanced Configuration (Optional)\n\nWant to customize? Create a config file:\n\n**Project-specific** (`.git-smart-squash.yml` in your repo):\n```yaml\nai:\n  provider: openai  # Use OpenAI for this project\nbase: develop       # Use develop as the base branch for this project\n```",
    "ContentSha": "cbvq8zqp7rEHJXGfenotUkrPuefqa6+NRO/YEUMQDwg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "git reset --hard your-branch-backup-[timestamp]\n```\n\n## Proveedores de IA\n\n| Proveedor   | Costo   | Privacidad |\n|-------------|---------|------------|\n| **Ollama**  | Gratis  | Local      |\n| **OpenAI**  | ~$0.01  | Nube       |\n| **Anthropic** | ~$0.01 | Nube      |\n| **Gemini**  | ~$0.01  | Nube       |\n\n## Configuración Avanzada (Opcional)\n\n¿Quieres personalizar? Crea un archivo de configuración:\n\n**Específico del proyecto** (`.git-smart-squash.yml` en tu repositorio):\n```yaml\nai:\n  provider: openai  # Usar OpenAI para este proyecto\nbase: develop       # Usar develop como rama base para este proyecto\n```",
    "Status": "ok"
  },
  {
    "Id": 9,
    "Content": "\n**Global default** (`~/.git-smart-squash.yml`):\n```yaml\nai:\n  provider: local   # Always use local AI by default\nbase: main          # Default base branch for all projects\n```\n\n## Troubleshooting\n\n### \"Invalid JSON\" Error\nThis usually means the AI model couldn't format the response properly:\n- **With Ollama**: Switch from `llama2` to `mistral` or `mixtral`\n- **Solution**: `ollama pull mistral` then retry\n- **Alternative**: Use a cloud provider with `--ai-provider openai`\n\n### Model Not Following Instructions\nSome models struggle with complex instructions:\n- **Use better models**: `--model gpt-4-turbo` or `--model claude-3-opus`\n- **Simplify instructions**: One clear directive works better than multiple\n- **Be explicit**: \"Prefix with [ABC-123]\" not \"add ticket number\"\n",
    "ContentSha": "ruyVxIfT4WTr9bP+5oPa/qMG4IErv3+CDdE6eUC1i40=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "**Global default** (`~/.git-smart-squash.yml`):\n```yaml\nai:\n  provider: local   # Siempre usar IA local por defecto\nbase: main          # Rama base predeterminada para todos los proyectos\n```\n\n## Solución de problemas\n\n### Error de \"JSON inválido\"\nEsto usualmente significa que el modelo de IA no pudo formatear la respuesta correctamente:\n- **Con Ollama**: Cambia de `llama2` a `mistral` o `mixtral`\n- **Solución**: `ollama pull mistral` y luego vuelve a intentar\n- **Alternativa**: Usa un proveedor en la nube con `--ai-provider openai`\n\n### El modelo no sigue las instrucciones\nAlgunos modelos tienen dificultades con instrucciones complejas:\n- **Usa mejores modelos**: `--model gpt-4-turbo` o `--model claude-3-opus`\n- **Simplifica las instrucciones**: Una directiva clara funciona mejor que varias\n- **Sé explícito**: \"Prefija con [ABC-123]\" y no \"agrega el número de ticket\"\n",
    "Status": "ok"
  },
  {
    "Id": 10,
    "Content": "### \"Ollama not found\" \n```bash\n# Install from https://ollama.com\nollama serve\nollama pull devstral  # Default model\n```\n\n### Poor Commit Grouping\nIf the AI creates too many commits or doesn't group well:\n- **Insufficient model**: Use a larger model\n- **Add instructions**: `-i \"Group related changes, max 3 commits\"`\n- **Provide Feedback**: Create an issue on GitHub and let us know what happened\n\n### Installation Issues (Mac)\nIf you don't have pip or prefer isolated installs:\n```bash\n# Using pipx (recommended)\nbrew install pipx\npipx install git-smart-squash\n```",
    "ContentSha": "hQidcRHXIHVp8HWTIk4gtBeFiqIMKxkhn/WP2kGe4O8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### \"Ollama no encontrado\"\n```bash\n# Instalar desde https://ollama.com\nollama serve\nollama pull devstral  # Modelo predeterminado\n```\n\n### Agrupación deficiente de commits\nSi la IA crea demasiados commits o no los agrupa bien:\n- **Modelo insuficiente**: Utiliza un modelo más grande\n- **Agregar instrucciones**: `-i \"Agrupa los cambios relacionados, máximo 3 commits\"`\n- **Proporciona comentarios**: Crea un issue en GitHub y cuéntanos lo que sucedió\n\n### Problemas de instalación (Mac)\nSi no tienes pip o prefieres instalaciones aisladas:\n```bash\n# Usando pipx (recomendado)\nbrew install pipx\npipx install git-smart-squash\n```",
    "Status": "ok"
  },
  {
    "Id": 11,
    "Content": "\n### \"No changes to reorganize\"\n```bash\ngit log --oneline main..HEAD  # Check you have commits\ngit diff main                 # Check you have changes\n```\n\n### Large Diffs / Token Limits\nLocal models have a ~32k token limit. For large changes:\n- Use `--base` with a more recent commit\n- Switch to cloud: `--ai-provider openai`\n- Split into smaller PRs\n\n### Need More Help?\n\nCheck out our [detailed documentation](https://raw.githubusercontent.com/edverma/git-smart-squash/main/DOCUMENTATION.md) or open an issue!\n\n## License\n\nMIT License - see [LICENSE](LICENSE) file for details.\n\n",
    "ContentSha": "k1D47P387wrc5Isgrv1an4BozuTmAFJ//QE6JVvzSQM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### \"Sin cambios para reorganizar\"\n```bash\ngit log --oneline main..HEAD  # Verifica que tienes commits\ngit diff main                 # Verifica que tienes cambios\n```\n\n### Diffs grandes / Límites de tokens\nLos modelos locales tienen un límite de ~32k tokens. Para cambios grandes:\n- Usa `--base` con un commit más reciente\n- Cambia a la nube: `--ai-provider openai`\n- Divide en PRs más pequeños\n\n### ¿Necesitas más ayuda?\n\nConsulta nuestra [documentación detallada](https://raw.githubusercontent.com/edverma/git-smart-squash/main/DOCUMENTATION.md) o abre un issue.\n\n## Licencia\n\nLicencia MIT - consulta el archivo [LICENSE](LICENSE) para más detalles.\n",
    "Status": "ok"
  }
]