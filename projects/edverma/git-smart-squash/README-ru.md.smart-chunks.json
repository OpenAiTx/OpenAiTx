[
  {
    "Id": 1,
    "Content": "# Git Smart Squash\n\nStop wasting time manually reorganizing commits. Let AI do it for you.\n\n## The Problem\n\nYou've been there: 15 commits for a feature, half of them are \"fix\", \"typo\", or \"WIP\". Now you need to clean it up for PR review. Manually squashing and rewriting is tedious.\n\n## The Solution\n\nGit Smart Squash analyzes your changes and reorganizes them into logical commits with proper messages:\n\n```bash\n# Before: your messy branch\n* fix tests\n* typo  \n* more auth changes\n* WIP: working on auth\n* update tests\n* initial auth implementation\n",
    "ContentSha": "YH9fY4xY/lXi3x+BR8NmyNqmDID4lmWiXBc3LGsn598=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Git Smart Squash\n\nПерестаньте тратить время на ручную реорганизацию коммитов. Доверьте это ИИ.\n\n## Проблема\n\nВам это знакомо: 15 коммитов для одной фичи, половина из них — это \"fix\", \"typo\" или \"WIP\". Теперь нужно всё привести в порядок для ревью PR. Ручное объединение и переписывание — утомительно.\n\n## Решение\n\nGit Smart Squash анализирует ваши изменения и реорганизует их в логические коммиты с корректными сообщениями:\n\n```bash\n# До: ваш неаккуратный бранч\n* fix tests\n* typo  \n* more auth changes\n* WIP: working on auth\n* update tests\n* initial auth implementation\n```",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "# After: clean, logical commits\n* feat: implement JWT authentication system\n* test: add auth endpoint coverage\n```\n\n## Quick Start\n\n### 1. Install\n\n```bash\n# Using pip\npip install git-smart-squash\n\n# Using pipx (recommended for isolated install)\npipx install git-smart-squash\n\n# Using uv (fast Python package manager)\nuv tool install git-smart-squash\n```\n",
    "ContentSha": "pCxRMKQBu7AVNIWAqJtAKbTpwM6cJjK4yafCwq44TOU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# После: чистые, логичные коммиты\n* feat: реализована система аутентификации JWT\n* test: добавлено покрытие для auth endpoint\n```\n\n## Быстрый старт\n\n### 1. Установка\n\n```bash\n# С помощью pip\npip install git-smart-squash\n\n# С помощью pipx (рекомендуется для изолированной установки)\npipx install git-smart-squash\n\n# С помощью uv (быстрый менеджер пакетов Python)\nuv tool install git-smart-squash\n```\n",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "### 2. Set up AI\n\n**Option A: Local (Free, Private)**\n```bash\n# Install Ollama from https://ollama.com\nollama pull devstral  # Default model\n```\n\n**Option B: Cloud (Better results)**\n```bash\nexport OPENAI_API_KEY=\"your-key\"\nexport ANTHROPIC_API_KEY=\"your-key\"\nexport GEMINI_API_KEY=\"your-key\"\n```\n\n### 3. Run\n\n```bash\ncd your-repo\ngit-smart-squash\n```",
    "ContentSha": "E2AGy4/eSi9FJ42apR9qXMYSpkkZrzqrl3Mn22oJODw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 2. Настройка ИИ\n\n**Вариант A: Локально (Бесплатно, Приватно)**\n```bash\n# Установите Ollama с https://ollama.com\nollama pull devstral  # Модель по умолчанию\n```\n\n**Вариант B: Облако (Лучшие результаты)**\n```bash\nexport OPENAI_API_KEY=\"ваш-ключ\"\nexport ANTHROPIC_API_KEY=\"ваш-ключ\"\nexport GEMINI_API_KEY=\"ваш-ключ\"\n```\n\n### 3. Запуск\n\n```bash\ncd ваш-репозиторий\ngit-smart-squash\n```",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "\nThat's it. Review the plan and approve.\n\n## Command Line Parameters\n\n| Parameter | Description | Default |\n|-----------|-------------|---------|\n| `--base` | Base branch to compare against | Config file or `main` |\n| `--ai-provider` | AI provider to use (openai, anthropic, local, gemini) | Configured in settings |\n| `--model` | Specific AI model to use (see recommended models below) | Provider default |\n| `--config` | Path to custom configuration file | `.git-smart-squash.yml` or `~/.git-smart-squash.yml` |\n| `--auto-apply` | Apply commit plan without confirmation prompt | `false` |\n| `--instructions`, `-i` | Custom instructions for AI (e.g., \"Group by feature area\") | None |\n| `--no-attribution` | Disable attribution message in commits | `false` |\n| `--debug` | Enable debug logging for detailed information | `false` |\n\n## Recommended Models\n\n### Default Models\n- **OpenAI**: `gpt-4.1` (default)\n- **Anthropic**: `claude-sonnet-4-20250514` (default)\n- **Gemini**: `gemini-2.5-pro` (default)\n- **Local/Ollama**: `devstral` (default)\n",
    "ContentSha": "FHYkiFSoZVlQv4AVehbXxD+gtFweeUnhmkjMtC2rCb4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Вот и всё. Просмотрите план и утвердите его.\n\n## Параметры командной строки\n\n| Параметр | Описание | Значение по умолчанию |\n|-----------|-------------|---------|\n| `--base` | Базовая ветка для сравнения | Файл конфигурации или `main` |\n| `--ai-provider` | Используемый AI-провайдер (openai, anthropic, local, gemini) | Настроен в конфигурации |\n| `--model` | Конкретная AI-модель для использования (см. рекомендуемые модели ниже) | Модель по умолчанию у провайдера |\n| `--config` | Путь к пользовательскому файлу конфигурации | `.git-smart-squash.yml` или `~/.git-smart-squash.yml` |\n| `--auto-apply` | Применить план коммитов без запроса подтверждения | `false` |\n| `--instructions`, `-i` | Пользовательские инструкции для AI (например, \"Группировать по области функционала\") | Нет |\n| `--no-attribution` | Отключить сообщение об авторстве в коммитах | `false` |\n| `--debug` | Включить подробное логирование для детальной информации | `false` |\n\n## Рекомендуемые модели\n\n### Модели по умолчанию\n- **OpenAI**: `gpt-4.1` (по умолчанию)\n- **Anthropic**: `claude-sonnet-4-20250514` (по умолчанию)\n- **Gemini**: `gemini-2.5-pro` (по умолчанию)\n- **Local/Ollama**: `devstral` (по умолчанию)\n",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "### Model Selection\n```bash\n# Specify a different model\ngit-smart-squash --ai-provider openai --model gpt-4.1-mini\n\n# For local Ollama\ngit-smart-squash --ai-provider local --model llama-3.1\n```\n\n## Custom Instructions\n\nThe `--instructions` parameter lets you control how commits are organized:\n\n### Examples\n```bash\n# Add ticket prefixes\ngit-smart-squash -i \"Prefix all commits with [ABC-1234]\"\n\n# Separate by type\ngit-smart-squash -i \"Keep backend and frontend changes in separate commits\"\n",
    "ContentSha": "59gf0Ud/6VrjgyVEVt6QJCKgcdF63NaibO10tb7S2Gg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Выбор модели\n```bash\n# Указать другую модель\ngit-smart-squash --ai-provider openai --model gpt-4.1-mini\n\n# Для локального Ollama\ngit-smart-squash --ai-provider local --model llama-3.1\n```\n\n## Пользовательские инструкции\n\nПараметр `--instructions` позволяет контролировать, как организуются коммиты:\n\n### Примеры\n```bash\n# Добавить префиксы тикетов\ngit-smart-squash -i \"Добавить ко всем коммитам префикс [ABC-1234]\"\n\n# Разделить по типу\ngit-smart-squash -i \"Оставить изменения backend и frontend в отдельных коммитах\"\n```",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "# Limit commit count\ngit-smart-squash -i \"Create at most 3 commits total\"\n```\n\n### Tips for Better Results\n- **Be specific**: \"Group database migrations separately\" works better than \"organize nicely\"\n- **One instruction at a time**: Complex multi-part instructions may be partially ignored\n- **Use better models**: Larger models follow instructions more reliably than smaller models\n\n## Common Use Cases\n\n### \"I need to clean up before PR review\"\n```bash\ngit-smart-squash              # Shows plan and prompts for confirmation\ngit-smart-squash --auto-apply # Auto-applies without prompting\n```\n\n### \"I work with a different main branch\"\n```bash\ngit-smart-squash --base develop\n```",
    "ContentSha": "7nTUyDnFpIUxSGbqAObHJzIk8bye8cMxqP2qS/Y3PbA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Ограничить количество коммитов\ngit-smart-squash -i \"Создать не более 3 коммитов всего\"\n```\n\n### Советы для получения лучших результатов\n- **Будьте конкретны**: \"Сгруппировать миграции базы данных отдельно\" работает лучше, чем \"организовать красиво\"\n- **Одна инструкция за раз**: Сложные многоступенчатые инструкции могут быть частично проигнорированы\n- **Используйте лучшие модели**: Крупные модели лучше следуют инструкциям, чем небольшие\n\n## Распространённые сценарии использования\n\n### \"Мне нужно навести порядок перед ревью PR\"\n```bash\ngit-smart-squash              # Показывает план и запрашивает подтверждение\ngit-smart-squash --auto-apply # Применяет автоматически без запроса\n```\n\n### \"Я работаю с другой основной веткой\"\n```bash\ngit-smart-squash --base develop\n```",
    "Status": "ok"
  },
  {
    "Id": 7,
    "Content": "\n### \"I want to use a specific AI provider\"\n```bash\ngit-smart-squash --ai-provider openai\n```\n\n## Safety\n\n**Your code is safe:**\n- Shows plan before making changes\n- Creates automatic backup branch\n- Requires clean working directory\n- Never pushes without your command\n\n**If something goes wrong:**\n```bash\n# Find backup\ngit branch | grep backup\n\n# Restore",
    "ContentSha": "jqyM7EpZCqjhGFDKwBL5vcbG/ueNzkXRL+XYCfGmMWk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### \"Я хочу использовать конкретного AI-провайдера\"\n```bash\ngit-smart-squash --ai-provider openai\n```\n\n## Безопасность\n\n**Ваш код в безопасности:**\n- Показывает план перед внесением изменений\n- Создаёт автоматическую резервную ветку\n- Требует чистого рабочего каталога\n- Никогда не выполняет push без вашей команды\n\n**Если что-то пошло не так:**\n```bash\n# Найти резервную копию\ngit branch | grep backup\n\n# Восстановить",
    "Status": "ok"
  },
  {
    "Id": 8,
    "Content": "git reset --hard your-branch-backup-[timestamp]\n```\n\n## AI Providers\n\n| Provider | Cost | Privacy |\n|----------|------|---------|\n| **Ollama** | Free | Local |\n| **OpenAI** | ~$0.01 | Cloud |\n| **Anthropic** | ~$0.01 | Cloud |\n| **Gemini** | ~$0.01 | Cloud |\n\n## Advanced Configuration (Optional)\n\nWant to customize? Create a config file:\n\n**Project-specific** (`.git-smart-squash.yml` in your repo):\n```yaml\nai:\n  provider: openai  # Use OpenAI for this project\nbase: develop       # Use develop as the base branch for this project\n```",
    "ContentSha": "cbvq8zqp7rEHJXGfenotUkrPuefqa6+NRO/YEUMQDwg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "git reset --hard your-branch-backup-[timestamp]\n```\n\n## Провайдеры ИИ\n\n| Провайдер | Стоимость | Конфиденциальность |\n|-----------|-----------|--------------------|\n| **Ollama** | Бесплатно | Локально |\n| **OpenAI** | ~0,01 $ | Облако |\n| **Anthropic** | ~0,01 $ | Облако |\n| **Gemini** | ~0,01 $ | Облако |\n\n## Расширенная настройка (опционально)\n\nХотите настроить под себя? Создайте файл конфигурации:\n\n**Для конкретного проекта** (`.git-smart-squash.yml` в вашем репозитории):\n```yaml\nai:\n  provider: openai  # Использовать OpenAI для этого проекта\nbase: develop       # Использовать develop как базовую ветку для этого проекта\n```",
    "Status": "ok"
  },
  {
    "Id": 9,
    "Content": "\n**Global default** (`~/.git-smart-squash.yml`):\n```yaml\nai:\n  provider: local   # Always use local AI by default\nbase: main          # Default base branch for all projects\n```\n\n## Troubleshooting\n\n### \"Invalid JSON\" Error\nThis usually means the AI model couldn't format the response properly:\n- **With Ollama**: Switch from `llama2` to `mistral` or `mixtral`\n- **Solution**: `ollama pull mistral` then retry\n- **Alternative**: Use a cloud provider with `--ai-provider openai`\n\n### Model Not Following Instructions\nSome models struggle with complex instructions:\n- **Use better models**: `--model gpt-4-turbo` or `--model claude-3-opus`\n- **Simplify instructions**: One clear directive works better than multiple\n- **Be explicit**: \"Prefix with [ABC-123]\" not \"add ticket number\"\n",
    "ContentSha": "ruyVxIfT4WTr9bP+5oPa/qMG4IErv3+CDdE6eUC1i40=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "**Глобальные настройки по умолчанию** (`~/.git-smart-squash.yml`):\n```yaml\nai:\n  provider: local   # Всегда использовать локальный ИИ по умолчанию\nbase: main          # Основная ветка по умолчанию для всех проектов\n```\n\n## Устранение неполадок\n\n### Ошибка \"Invalid JSON\"\nОбычно это означает, что модель ИИ не смогла правильно отформатировать ответ:\n- **С Ollama**: Переключитесь с `llama2` на `mistral` или `mixtral`\n- **Решение**: выполните `ollama pull mistral`, затем попробуйте снова\n- **Альтернатива**: используйте облачного провайдера с `--ai-provider openai`\n\n### Модель не соблюдает инструкции\nНекоторым моделям сложно справляться со сложными инструкциями:\n- **Используйте лучшие модели**: `--model gpt-4-turbo` или `--model claude-3-opus`\n- **Упрощайте инструкции**: Одна четкая директива работает лучше, чем несколько\n- **Будьте конкретны**: \"Добавьте префикс [ABC-123]\", а не \"добавьте номер тикета\"\n",
    "Status": "ok"
  },
  {
    "Id": 10,
    "Content": "### \"Ollama not found\" \n```bash\n# Install from https://ollama.com\nollama serve\nollama pull devstral  # Default model\n```\n\n### Poor Commit Grouping\nIf the AI creates too many commits or doesn't group well:\n- **Insufficient model**: Use a larger model\n- **Add instructions**: `-i \"Group related changes, max 3 commits\"`\n- **Provide Feedback**: Create an issue on GitHub and let us know what happened\n\n### Installation Issues (Mac)\nIf you don't have pip or prefer isolated installs:\n```bash\n# Using pipx (recommended)\nbrew install pipx\npipx install git-smart-squash\n```",
    "ContentSha": "hQidcRHXIHVp8HWTIk4gtBeFiqIMKxkhn/WP2kGe4O8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### \"Ollama не найден\"\n```bash\n# Установите с https://ollama.com\nollama serve\nollama pull devstral  # Модель по умолчанию\n```\n\n### Плохая группировка коммитов\nЕсли ИИ создает слишком много коммитов или плохо их группирует:\n- **Недостаточная модель**: Используйте более крупную модель\n- **Добавьте инструкции**: `-i \"Группировать связанные изменения, максимум 3 коммита\"`\n- **Оставьте отзыв**: Создайте issue на GitHub и сообщите нам, что произошло\n\n### Проблемы с установкой (Mac)\nЕсли у вас нет pip или вы предпочитаете изолированные установки:\n```bash\n# Использование pipx (рекомендуется)\nbrew install pipx\npipx install git-smart-squash\n```",
    "Status": "ok"
  },
  {
    "Id": 11,
    "Content": "\n### \"No changes to reorganize\"\n```bash\ngit log --oneline main..HEAD  # Check you have commits\ngit diff main                 # Check you have changes\n```\n\n### Large Diffs / Token Limits\nLocal models have a ~32k token limit. For large changes:\n- Use `--base` with a more recent commit\n- Switch to cloud: `--ai-provider openai`\n- Split into smaller PRs\n\n### Need More Help?\n\nCheck out our [detailed documentation](https://raw.githubusercontent.com/edverma/git-smart-squash/main/DOCUMENTATION.md) or open an issue!\n\n## License\n\nMIT License - see [LICENSE](LICENSE) file for details.\n\n",
    "ContentSha": "k1D47P387wrc5Isgrv1an4BozuTmAFJ//QE6JVvzSQM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### \"Нет изменений для реорганизации\"\n```bash\ngit log --oneline main..HEAD  # Проверьте, что у вас есть коммиты\ngit diff main                 # Проверьте, что у вас есть изменения\n```\n\n### Большие диффы / Ограничения токенов\nЛокальные модели имеют ограничение ~32k токенов. Для больших изменений:\n- Используйте `--base` с более свежим коммитом\n- Переключитесь на облако: `--ai-provider openai`\n- Разделите на меньшие PR\n\n### Нужна дополнительная помощь?\n\nОзнакомьтесь с нашей [подробной документацией](https://raw.githubusercontent.com/edverma/git-smart-squash/main/DOCUMENTATION.md) или откройте issue!\n\n## Лицензия\n\nMIT License — смотрите файл [LICENSE](LICENSE) для подробностей.\n",
    "Status": "ok"
  }
]