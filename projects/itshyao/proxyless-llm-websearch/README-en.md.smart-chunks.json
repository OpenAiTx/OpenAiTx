[
  {
    "Id": 1,
    "Content": "# 🧠 无需代理的LLM网络搜索引擎\n\n一个无需代理的多搜索引擎 LLM 网络检索工具，支持 URL 内容解析和网页爬取，结合 LangGraph 实现模块化智能体链路。专为大语言模型的外部知识调用场景而设计，支持 **Playwright + Crawl4AI** 网页获取与解析，支持异步并发、内容切片与重排过滤。\n\n## ✨ 特性一览\n\n- 🌐 **无需代理**：通过 Playwright 配置国内浏览器支持，无需代理也能进行网络搜索。\n- 🔍 **多搜索引擎支持**：支持 Bing、夸克、百度、搜狗 等主流搜索引擎，增强信息来源多样性。\n- 🤖 **意图识别**：系统能够根据用户的输入内容，自动判断是进行网络搜索还是解析 URL。\n- 🔄 **查询分解**：根据用户的搜索意图，自动将查询分解为多个子任务，并依次执行，从而提升搜索的相关性与效率。\n- ⚙️ **智能体架构**：基于 **LangGraph** 封装的**「web_search」**与**「link_parser」**。\n- 🏃‍♂️ **异步并发任务处理**：支持异步并发任务处理，可高效处理多个搜索任务。\n- 📝 **内容处理优化**：\n\n  - ✂️ **内容切片**：将网页长内容按段切分。\n\n  - 🔄 **内容重排**：智能重排序，提高信息相关性。\n\n  - 🚫 **内容过滤**：自动剔除无关或重复内容。\n- 🌐 **多端支持**：\n\n  - 🖥️ 提供 FastAPI 后端接口，可集成到任意系统中。\n\n  - 🌍 提供 Gradio Web UI，可快速部署成可视化应用。\n  \n  - 🧩[ **浏览器插件支持**](https://github.com/itshyao/proxyless-llm-websearch/tree/main/extension)：支持 Edge ，提供智能 URL 解析插件，直接在浏览器中发起网页解析与内容提取请求。\n  \n\n![workflow](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/workflow.png)\n\n![framework](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/framework.png)\n\n## ⚡ 快速开始\n\n### 1. 克隆仓库\n",
    "ContentSha": "85LgXtMWMq4BB+m0PvWjT9Rp87/E/6Nr5sQTeg4PFq0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<translate-content># 🧠 Proxy-Free LLM Web Search Engine\n\nA proxy-free multi-search engine LLM web retrieval tool that supports URL content parsing and web crawling, combined with LangGraph to implement modular intelligent agent workflows. Designed specifically for external knowledge invocation scenarios of large language models, supporting **Playwright + Crawl4AI** for web fetching and parsing, with asynchronous concurrency, content slicing, and reordering filtering.\n\n## ✨ Features Overview\n\n- 🌐 **Proxy-Free**: Configures domestic browsers via Playwright, enabling web search without proxy.\n- 🔍 **Multi-Search Engine Support**: Supports major search engines like Bing, Quark, Baidu, Sogou, enhancing information source diversity.\n- 🤖 **Intent Recognition**: The system automatically determines whether to perform a web search or parse a URL based on user input.\n- 🔄 **Query Decomposition**: Automatically breaks down queries into multiple subtasks based on search intent and executes them sequentially, improving search relevance and efficiency.\n- ⚙️ **Agent Architecture**: Based on **LangGraph** encapsulated **“web_search”** and **“link_parser”** modules.\n- 🏃‍♂️ **Asynchronous Concurrent Task Handling**: Supports asynchronous concurrent task processing for efficient handling of multiple search tasks.\n- 📝 **Content Processing Optimization**:\n\n  - ✂️ **Content Slicing**: Splits long web content into segments.\n\n  - 🔄 **Content Reordering**: Intelligently reorders content to enhance information relevance.\n\n  - 🚫 **Content Filtering**: Automatically removes irrelevant or duplicate content.\n- 🌐 **Multi-Platform Support**:\n\n  - 🖥️ Provides FastAPI backend interfaces, integrable into any system.\n\n  - 🌍 Provides Gradio Web UI for quick deployment as a visual application.\n  \n  - 🧩[ **Browser Extension Support**](https://github.com/itshyao/proxyless-llm-websearch/tree/main/extension): Supports Edge, offering an intelligent URL parsing extension to initiate web parsing and content extraction requests directly in the browser.\n  \n\n![workflow](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/workflow.png)\n\n![framework](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/framework.png)\n\n## ⚡ Quick Start\n\n### 1. Clone the Repository\n</translate-content>",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "YV5iEvrANhUjXrwz4dioP5xXt0a5NOqVReUBsA3WiX0=",
        "originContent": "# 🧠 无需代理的LLM网络搜索引擎",
        "translatedContent": "<translate-content># 🧠 Proxy-Free LLM Web Search Engine"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "yXVnp74Bruk9eDQiV2FEpF/gNOvRgiBFDaZaWF7g8K0=",
        "originContent": "一个无需代理的多搜索引擎 LLM 网络检索工具，支持 URL 内容解析和网页爬取，结合 LangGraph 实现模块化智能体链路。专为大语言模型的外部知识调用场景而设计，支持 **Playwright + Crawl4AI** 网页获取与解析，支持异步并发、内容切片与重排过滤。",
        "translatedContent": "A proxy-free multi-search engine LLM web retrieval tool that supports URL content parsing and web crawling, combined with LangGraph to implement modular intelligent agent workflows. Designed specifically for external knowledge invocation scenarios of large language models, supporting **Playwright + Crawl4AI** for web fetching and parsing, with asynchronous concurrency, content slicing, and reordering filtering."
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "OHOfHXJRFh2PoudkJeg0THLyIYrALV4+MKfulO3uCf4=",
        "originContent": "## ✨ 特性一览",
        "translatedContent": "## ✨ Features Overview"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "JRqSQausicO9VxKarBmKcO5DLMOHM71OusYSHCo7iZ4=",
        "originContent": "- 🌐 **无需代理**：通过 Playwright 配置国内浏览器支持，无需代理也能进行网络搜索。",
        "translatedContent": "- 🌐 **Proxy-Free**: Configures domestic browsers via Playwright, enabling web search without proxy."
      },
      {
        "row": 8,
        "rowsha": "pDr6ZI9v0kUPJFMKgDoo3H+S2xWwwTrM8EgZ5n6tCkA=",
        "originContent": "- 🔍 **多搜索引擎支持**：支持 Bing、夸克、百度、搜狗 等主流搜索引擎，增强信息来源多样性。",
        "translatedContent": "- 🔍 **Multi-Search Engine Support**: Supports major search engines like Bing, Quark, Baidu, Sogou, enhancing information source diversity."
      },
      {
        "row": 9,
        "rowsha": "17z19rboeryAAHhx8fj4K/WdlK4eQqPqsTGh3yyeao0=",
        "originContent": "- 🤖 **意图识别**：系统能够根据用户的输入内容，自动判断是进行网络搜索还是解析 URL。",
        "translatedContent": "- 🤖 **Intent Recognition**: The system automatically determines whether to perform a web search or parse a URL based on user input."
      },
      {
        "row": 10,
        "rowsha": "+Q8UTd+wlcyle/tjXkFsGQQRCEcP75yf3IiFYBsRAKk=",
        "originContent": "- 🔄 **查询分解**：根据用户的搜索意图，自动将查询分解为多个子任务，并依次执行，从而提升搜索的相关性与效率。",
        "translatedContent": "- 🔄 **Query Decomposition**: Automatically breaks down queries into multiple subtasks based on search intent and executes them sequentially, improving search relevance and efficiency."
      },
      {
        "row": 11,
        "rowsha": "LhhgusQ7+8lpojHor/4WkRKoUGHzXqyn0nUP0u6aCXA=",
        "originContent": "- ⚙️ **智能体架构**：基于 **LangGraph** 封装的**「web_search」**与**「link_parser」**。",
        "translatedContent": "- ⚙️ **Agent Architecture**: Based on **LangGraph** encapsulated **“web_search”** and **“link_parser”** modules."
      },
      {
        "row": 12,
        "rowsha": "dGgBRBc3kSuFy37fWJVlTlhN5Rp8wn+42vKTtjlLXvU=",
        "originContent": "- 🏃‍♂️ **异步并发任务处理**：支持异步并发任务处理，可高效处理多个搜索任务。",
        "translatedContent": "- 🏃‍♂️ **Asynchronous Concurrent Task Handling**: Supports asynchronous concurrent task processing for efficient handling of multiple search tasks."
      },
      {
        "row": 13,
        "rowsha": "nZlbyWvHTdoqh6v/IOBK6+9cWRvtM/+lea5cLnDyZ24=",
        "originContent": "- 📝 **内容处理优化**：",
        "translatedContent": "- 📝 **Content Processing Optimization**:"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "QiDXvCVj/UzMOkR1kDmmvnJe5ocWVPgHR06hzNmTopU=",
        "originContent": "  - ✂️ **内容切片**：将网页长内容按段切分。",
        "translatedContent": "  - ✂️ **Content Slicing**: Splits long web content into segments."
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "vzicO8Au7UQIqH/UFVnAS5aX8ZhneLkg8R4EG3W0zhA=",
        "originContent": "  - 🔄 **内容重排**：智能重排序，提高信息相关性。",
        "translatedContent": "  - 🔄 **Content Reordering**: Intelligently reorders content to enhance information relevance."
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "u6htTCchHJpbXugttgp73i1Sb9YtAYOFnJJCgnw1D1o=",
        "originContent": "  - 🚫 **内容过滤**：自动剔除无关或重复内容。",
        "translatedContent": "  - 🚫 **Content Filtering**: Automatically removes irrelevant or duplicate content."
      },
      {
        "row": 20,
        "rowsha": "7/apS9Aycjw4hjBz/zBJLLDUBlb8z5Q2oaaBq8c4Fbk=",
        "originContent": "- 🌐 **多端支持**：",
        "translatedContent": "- 🌐 **Multi-Platform Support**:"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "+LTwIwfC4vZXxcIldRSItnGPo6xVtur15uVUEBivRFc=",
        "originContent": "  - 🖥️ 提供 FastAPI 后端接口，可集成到任意系统中。",
        "translatedContent": "  - 🖥️ Provides FastAPI backend interfaces, integrable into any system."
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "KD2bJsacvDzGlamiXXMNXOKAnmI5D2dDrCiPfnWLRJY=",
        "originContent": "  - 🌍 提供 Gradio Web UI，可快速部署成可视化应用。",
        "translatedContent": "  - 🌍 Provides Gradio Web UI for quick deployment as a visual application."
      },
      {
        "row": 25,
        "rowsha": "bBefIeb2K2KQVdirQPRU7QLki2hWORNHO4V9NjjiOyg=",
        "originContent": "  ",
        "translatedContent": "  "
      },
      {
        "row": 26,
        "rowsha": "pa3m06ISfV5HpRdaFplsNj3ja+vqUYZrC32dN7BJtlc=",
        "originContent": "  - 🧩[ **浏览器插件支持**](https://github.com/itshyao/proxyless-llm-websearch/tree/main/extension)：支持 Edge ，提供智能 URL 解析插件，直接在浏览器中发起网页解析与内容提取请求。",
        "translatedContent": "  - 🧩[ **Browser Extension Support**](https://github.com/itshyao/proxyless-llm-websearch/tree/main/extension): Supports Edge, offering an intelligent URL parsing extension to initiate web parsing and content extraction requests directly in the browser."
      },
      {
        "row": 27,
        "rowsha": "bBefIeb2K2KQVdirQPRU7QLki2hWORNHO4V9NjjiOyg=",
        "originContent": "  ",
        "translatedContent": "  "
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "ix1dsOCLA8WId9HGenbMnUtHpO+jRtOEEE/cMekynzA=",
        "originContent": "![workflow](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/workflow.png)",
        "translatedContent": "![workflow](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/workflow.png)"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "iuZpcjonuFKQ+vx4iBVRILLmT5QuWr9rjJe/83Wqp7Y=",
        "originContent": "![framework](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/framework.png)",
        "translatedContent": "![framework](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/framework.png)"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "7GJrwgUzo53/hSpoM8nG5hTF4hrsyiPjjJzQDHHHnU4=",
        "originContent": "## ⚡ 快速开始",
        "translatedContent": "## ⚡ Quick Start"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "Yqd/SWVaiTCdVIxMGScoFmt9G44B+u7UKGfJPW3MCyw=",
        "originContent": "### 1. 克隆仓库",
        "translatedContent": "### 1. Clone the Repository"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "</translate-content>"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "```bash\ngit clone https://github.com/itshyao/proxyless-llm-websearch.git\ncd proxyless-llm-websearch\n```",
    "ContentSha": "Y2VhBtAp1BSMbzebwF6wDJOOdHn9JuBMJTfohg6Oxs8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ngit clone https://github.com/itshyao/proxyless-llm-websearch.git\ncd proxyless-llm-websearch\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "FWVBaUnOllijWdrSO0zaM178IxYeshlzdX9Gzpp76+k=",
        "originContent": "git clone https://github.com/itshyao/proxyless-llm-websearch.git",
        "translatedContent": "git clone https://github.com/itshyao/proxyless-llm-websearch.git"
      },
      {
        "row": 3,
        "rowsha": "lo5Ce9OkK/Hw9rscLe388S8aKZFfVWXsbYn5DeNbl7c=",
        "originContent": "cd proxyless-llm-websearch",
        "translatedContent": "cd proxyless-llm-websearch"
      },
      {
        "row": 4,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 3,
    "Content": "\n### 2. 安装依赖\n",
    "ContentSha": "YT0/yOH7fKiemJX7EKd5HsSzxLrNUsf1jG0lV8+iMhs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 2. Install Dependencies\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 2. Install Dependencies"
      },
      {
        "row": 2,
        "rowsha": "fVY/v51wLXrE9d4Gpd6ehmiH6WWRmeTg7Jcnpo+252k=",
        "originContent": "### 2. 安装依赖",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "```\npip install -r requirements.txt\npython -m playwright install\n```",
    "ContentSha": "q86fYYfePgS4SjDcy+Zrk/GS/fy5E9YE0rBUpm+auEQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\npip install -r requirements.txt\npython -m playwright install\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "9jQ5Tmvmy0Rca8gZGuieLw3iHyIU3Ba5zS4ICtZgsdw=",
        "originContent": "pip install -r requirements.txt",
        "translatedContent": "pip install -r requirements.txt"
      },
      {
        "row": 3,
        "rowsha": "UvX0K8rAc28+43sUAP5zG+fL+f62RIpkRzMVa/VDMWQ=",
        "originContent": "python -m playwright install",
        "translatedContent": "python -m playwright install"
      },
      {
        "row": 4,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 5,
    "Content": "\n### 3. 快速开始\n\n#### 环境变量配置\n",
    "ContentSha": "N3lZkFWVmNeVWlkK0EFfrH7Cuwr1M/9ZCXAKCiO/KVw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 3. Quick Start\n\n#### Environment Variable Configuration\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 3. Quick Start"
      },
      {
        "row": 2,
        "rowsha": "g6yuonKdkMEyVvq1A7wZUC/ojfCeD+BrJBfqjlH8CMI=",
        "originContent": "### 3. 快速开始",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Environment Variable Configuration"
      },
      {
        "row": 4,
        "rowsha": "bA9iu05pBPaXW6oRYrTwmj7+QA5Rei4l0/rDJuA58hc=",
        "originContent": "#### 环境变量配置",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 6,
    "Content": "```\nOPENAI_API_KEY=xxx\nOPENAI_BASE_URL=https://ark.cn-beijing.volces.com/api/v3\nMODEL_NAME=deepseek-v3-250324\n\nEMBEDDING_MODEL_NAME=doubao-embedding-large-text-240915\nEMBEDDING_API_KEY=xxx\nEMBEDDING_BASE_URL=https://ark.cn-beijing.volces.com/api/v3\n```",
    "ContentSha": "0lDFxvSYLnGgA52wVMyLrKiOPTrNEwoAUoOMMse13NU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nOPENAI_API_KEY=xxx\nOPENAI_BASE_URL=https://ark.cn-beijing.volces.com/api/v3\nMODEL_NAME=deepseek-v3-250324\n\nEMBEDDING_MODEL_NAME=doubao-embedding-large-text-240915\nEMBEDDING_API_KEY=xxx\nEMBEDDING_BASE_URL=https://ark.cn-beijing.volces.com/api/v3\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "ix3B2PWpT8YkFle8qFdOHU/e0sFPe4AuqykL5OHdVAI=",
        "originContent": "OPENAI_API_KEY=xxx",
        "translatedContent": "OPENAI_API_KEY=xxx"
      },
      {
        "row": 3,
        "rowsha": "VuLBtBaF/Bn0+IO+z14wnKmBjFo1dykAwDdRfu4mnGM=",
        "originContent": "OPENAI_BASE_URL=https://ark.cn-beijing.volces.com/api/v3",
        "translatedContent": "OPENAI_BASE_URL=https://ark.cn-beijing.volces.com/api/v3"
      },
      {
        "row": 4,
        "rowsha": "0iF1tDOIx2tkMWkHmHMYXbaRDsfFOhOuom98oUSPijw=",
        "originContent": "MODEL_NAME=deepseek-v3-250324",
        "translatedContent": "MODEL_NAME=deepseek-v3-250324"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "CW7xAKhYfyuB9N+MBJws3PePUfFy/8jTp6to2OkEoE8=",
        "originContent": "EMBEDDING_MODEL_NAME=doubao-embedding-large-text-240915",
        "translatedContent": "EMBEDDING_MODEL_NAME=doubao-embedding-large-text-240915"
      },
      {
        "row": 7,
        "rowsha": "0+852JdFfr/RCTB3bTkj1bW+XYjYSPxNsANPefHwnn0=",
        "originContent": "EMBEDDING_API_KEY=xxx",
        "translatedContent": "EMBEDDING_API_KEY=xxx"
      },
      {
        "row": 8,
        "rowsha": "rWflpxik81vvkDyKzhaV1Z+NVL4uP0jpIk6ctiYnx2w=",
        "originContent": "EMBEDDING_BASE_URL=https://ark.cn-beijing.volces.com/api/v3",
        "translatedContent": "EMBEDDING_BASE_URL=https://ark.cn-beijing.volces.com/api/v3"
      },
      {
        "row": 9,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 7,
    "Content": "\n#### demo\n",
    "ContentSha": "IBxjQ8BbFvEWHZGh12ppQY5rNI+EA63WTmhawhmzQKc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "#### demo\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### demo"
      },
      {
        "row": 2,
        "rowsha": "UphnodcXMXQFL6YoXYMhGcMnhwHL3kCnhVbv2cm2nNA=",
        "originContent": "#### demo",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 8,
    "Content": "```python\n'''\npython demo.py\n'''\n\nfrom pools import BrowserPool, CrawlerPool\nfrom agent import ToolsGraph\nimport asyncio\n\nasync def main():\n    browser_pool = BrowserPool(pool_size=1)\n    crawler_pool = CrawlerPool(pool_size=1)\n    \n    graph = ToolsGraph(browser_pool, crawler_pool, engine=\"bing\")\n\n    await browser_pool._create_browser_instance(headless=True)\n    await crawler_pool._get_instance()\n\n    result = await graph.run(\"广州今日天气\")\n\n    await browser_pool.cleanup()\n    await crawler_pool.cleanup()\n\n    print(result)\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```",
    "ContentSha": "L9z2keyTv+rQnv1vEn4zz5s6sVWedFCUOPAefItD7iw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```python\n'''\npython demo.py\n'''\n\nfrom pools import BrowserPool, CrawlerPool\nfrom agent import ToolsGraph\nimport asyncio\n\nasync def main():\n    browser_pool = BrowserPool(pool_size=1)\n    crawler_pool = CrawlerPool(pool_size=1)\n    \n    graph = ToolsGraph(browser_pool, crawler_pool, engine=\"bing\")\n\n    await browser_pool._create_browser_instance(headless=True)\n    await crawler_pool._get_instance()\n\n    result = await graph.run(\"广州今日天气\")\n\n    await browser_pool.cleanup()\n    await crawler_pool.cleanup()\n\n    print(result)\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
        "originContent": "```python",
        "translatedContent": "```python"
      },
      {
        "row": 2,
        "rowsha": "viT17m8zp6u2Lk+5vcJ3zthestRDhCPHQBiZ7nhsd3M=",
        "originContent": "'''",
        "translatedContent": "'''"
      },
      {
        "row": 3,
        "rowsha": "2l0zzT3qnehiZuHua+PDe+9tX3GqObVY2n4VxVEmfQA=",
        "originContent": "python demo.py",
        "translatedContent": "python demo.py"
      },
      {
        "row": 4,
        "rowsha": "viT17m8zp6u2Lk+5vcJ3zthestRDhCPHQBiZ7nhsd3M=",
        "originContent": "'''",
        "translatedContent": "'''"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "CVkySZDytz4TMkwJOwW2t3CZIMAyGszQYQngV374JMc=",
        "originContent": "from pools import BrowserPool, CrawlerPool",
        "translatedContent": "from pools import BrowserPool, CrawlerPool"
      },
      {
        "row": 7,
        "rowsha": "/bpmVmklUbDU1GO7fpqT3Q90rS8w56j1z0IjdC5fL5U=",
        "originContent": "from agent import ToolsGraph",
        "translatedContent": "from agent import ToolsGraph"
      },
      {
        "row": 8,
        "rowsha": "mpinXQzkiRl0CPjbIVb8l8a3+sdg0IMkfxJ6acaMQXI=",
        "originContent": "import asyncio",
        "translatedContent": "import asyncio"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "nrHT+CVqLOBAOS5prLC4WHgcXaZPIPykp2rG5tE8Wik=",
        "originContent": "async def main():",
        "translatedContent": "async def main():"
      },
      {
        "row": 11,
        "rowsha": "3rtW05wHG+Jf2QgfynQiEoBqVmCRybctWtJfdQZg594=",
        "originContent": "    browser_pool = BrowserPool(pool_size=1)",
        "translatedContent": "    browser_pool = BrowserPool(pool_size=1)"
      },
      {
        "row": 12,
        "rowsha": "CFMNuOKGR3tOfJRavXkM5URj5VbgP06seTxfBs5UCyc=",
        "originContent": "    crawler_pool = CrawlerPool(pool_size=1)",
        "translatedContent": "    crawler_pool = CrawlerPool(pool_size=1)"
      },
      {
        "row": 13,
        "rowsha": "Gg9WTdxgOUV7L7JrPWoxbBXrogqIZEmEfDIQw1ghppM=",
        "originContent": "    ",
        "translatedContent": "    "
      },
      {
        "row": 14,
        "rowsha": "KVT+Vmxa1fSXOumLkJi72ATptf9EmHDI2nyJi1kz0Eg=",
        "originContent": "    graph = ToolsGraph(browser_pool, crawler_pool, engine=\"bing\")",
        "translatedContent": "    graph = ToolsGraph(browser_pool, crawler_pool, engine=\"bing\")"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "KCGFOescDvtSk4JunvpqJn9ConJkkzPBb5v7EEYsOp8=",
        "originContent": "    await browser_pool._create_browser_instance(headless=True)",
        "translatedContent": "    await browser_pool._create_browser_instance(headless=True)"
      },
      {
        "row": 17,
        "rowsha": "lsE5CmohFhFZF/zhFm+m1YP5sFv6JpDmqepmp139QrY=",
        "originContent": "    await crawler_pool._get_instance()",
        "translatedContent": "    await crawler_pool._get_instance()"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "wNdobC29g40AtPdV2hEftNXq4V9/QwrM2w9xnUwiOJY=",
        "originContent": "    result = await graph.run(\"广州今日天气\")",
        "translatedContent": "    result = await graph.run(\"广州今日天气\")"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "KALAfM71hU/32G3E1XQn+PSgeohScRZLhaRJGSL7so0=",
        "originContent": "    await browser_pool.cleanup()",
        "translatedContent": "    await browser_pool.cleanup()"
      },
      {
        "row": 22,
        "rowsha": "45MV/jtyrkItXk/B7OByaF8fMkc3KfsT6FOseTuuDFE=",
        "originContent": "    await crawler_pool.cleanup()",
        "translatedContent": "    await crawler_pool.cleanup()"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "CA5b6Q2uLOs7isr6I/62MqZfuaHVuMW2qbW7oEeRXbk=",
        "originContent": "    print(result)",
        "translatedContent": "    print(result)"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "NBKAnBz0LXNDBHy6akl1hPpsRoc34u8/xEPhEhFEfqU=",
        "originContent": "if __name__ == \"__main__\":",
        "translatedContent": "if __name__ == \"__main__\":"
      },
      {
        "row": 27,
        "rowsha": "QOISXIGyo9fwBewWM2jRN39IJTkDzpi89LFBzznxS2k=",
        "originContent": "    asyncio.run(main())",
        "translatedContent": "    asyncio.run(main())"
      },
      {
        "row": 28,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 9,
    "Content": "\n#### 后端api\n",
    "ContentSha": "dJXOsSfNXMju9Z4DTPUUKn/zjFVbYy4Wclkd56OPrY0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "#### Backend API\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Backend API"
      },
      {
        "row": 2,
        "rowsha": "ToIP6OwnpEze9hf0zBjGJ5hA58wJrnJYVc9Pv/nqEQI=",
        "originContent": "#### 后端api",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 10,
    "Content": "```python\n'''\npython api_serve.py\n'''\nimport requests\n\nurl = \"http://localhost:8000/search\"\n\ndata = {\n    \"question\": \"广州今日天气\"\n}\n\ntry:\n    response = requests.post(\n        url,\n        json=data\n    )\n\n    if response.status_code == 200:\n        print(\"✅ 请求成功！\")\n        print(\"响应内容：\", response.json())\n    else:\n        print(f\"❌ 请求失败，状态码：{response.status_code}\")\n        print(\"错误信息：\", response.text)\n\nexcept requests.exceptions.RequestException as e:\n    print(f\"⚠️ 请求异常：{str(e)}\")\n```",
    "ContentSha": "chgtg97cF1DAxXq6qlNGUGBLTNe2B4xvrKahLyHSMFE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```python\n'''\npython api_serve.py\n'''\nimport requests\n\nurl = \"http://localhost:8000/search\"\n\ndata = {\n    \"question\": \"广州今日天气\"\n}\n\ntry:\n    response = requests.post(\n        url,\n        json=data\n    )\n\n    if response.status_code == 200:\n        print(\"✅ 请求成功！\")\n        print(\"响应内容：\", response.json())\n    else:\n        print(f\"❌ 请求失败，状态码：{response.status_code}\")\n        print(\"错误信息：\", response.text)\n\nexcept requests.exceptions.RequestException as e:\n    print(f\"⚠️ 请求异常：{str(e)}\")\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
        "originContent": "```python",
        "translatedContent": "```python"
      },
      {
        "row": 2,
        "rowsha": "viT17m8zp6u2Lk+5vcJ3zthestRDhCPHQBiZ7nhsd3M=",
        "originContent": "'''",
        "translatedContent": "'''"
      },
      {
        "row": 3,
        "rowsha": "DAOc4RkV8VzZOoPBj3HUAuIxtGyPC/DxXiubqts5eQc=",
        "originContent": "python api_serve.py",
        "translatedContent": "python api_serve.py"
      },
      {
        "row": 4,
        "rowsha": "viT17m8zp6u2Lk+5vcJ3zthestRDhCPHQBiZ7nhsd3M=",
        "originContent": "'''",
        "translatedContent": "'''"
      },
      {
        "row": 5,
        "rowsha": "BhhVIuQIVGDbX5c9aYfyxfQlGfzNVoNuXl7ZhCli3o0=",
        "originContent": "import requests",
        "translatedContent": "import requests"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "YD/KvhidzyDP06dhhjerTIncPrYfF+gRYSWiIAPmGvQ=",
        "originContent": "url = \"http://localhost:8000/search\"",
        "translatedContent": "url = \"http://localhost:8000/search\""
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "RR2uzqyF0pr796xTpWOw4gUdbzDNKliZadkTwoFAYJw=",
        "originContent": "data = {",
        "translatedContent": "data = {"
      },
      {
        "row": 10,
        "rowsha": "ZHrfw/Op9VTA3g1myFeiK8fUIAkmiJ805pAmXQJvlhQ=",
        "originContent": "    \"question\": \"广州今日天气\"",
        "translatedContent": "    \"question\": \"广州今日天气\""
      },
      {
        "row": 11,
        "rowsha": "0Qs2qnSlm89KiBhYN/ZYr682Ru/yuxbDko0OkzXpRdI=",
        "originContent": "}",
        "translatedContent": "}"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "h2HC9QoFVVqfodSTBbkrg8LgzoqxS6Y8SR66jQ9S+2A=",
        "originContent": "try:",
        "translatedContent": "try:"
      },
      {
        "row": 14,
        "rowsha": "ywOtb1IyhM/nUmuewswz8P0ENiyF6gRDT1bBBk86mJM=",
        "originContent": "    response = requests.post(",
        "translatedContent": "    response = requests.post("
      },
      {
        "row": 15,
        "rowsha": "Y1t/nyW3i/qkmXt5GwIACmTvudlLEPPxxI5ZvxqImSU=",
        "originContent": "        url,",
        "translatedContent": "        url,"
      },
      {
        "row": 16,
        "rowsha": "w+zzegQxCCfFOemfjOSKMflJMxKtwOv32xIeIpdMvFc=",
        "originContent": "        json=data",
        "translatedContent": "        json=data"
      },
      {
        "row": 17,
        "rowsha": "/xlEZ1LDPBgeqSMqeVvv8VvD/u3SpYCHs/XDPuti6ZI=",
        "originContent": "    )",
        "translatedContent": "    )"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "PRlUB36jRZ5DymViRMGZsuJtbMzVTDizCuiqTyCKte8=",
        "originContent": "    if response.status_code == 200:",
        "translatedContent": "    if response.status_code == 200:"
      },
      {
        "row": 20,
        "rowsha": "C91Sj9jZND71Au5sTp/wbzdKmfF/O0R55n1OTJQ6FzE=",
        "originContent": "        print(\"✅ 请求成功！\")",
        "translatedContent": "        print(\"✅ 请求成功！\")"
      },
      {
        "row": 21,
        "rowsha": "SoJPulPqtTslMlqsuR9KTVSKmYJQR0rD8aWvciOLOTY=",
        "originContent": "        print(\"响应内容：\", response.json())",
        "translatedContent": "        print(\"响应内容：\", response.json())"
      },
      {
        "row": 22,
        "rowsha": "7bsUkmJZQf/o5kPC1Eo5nFRkXxwmG7WTqtdCDBUAdb0=",
        "originContent": "    else:",
        "translatedContent": "    else:"
      },
      {
        "row": 23,
        "rowsha": "ngwugsC+LkI6J7Z6qnTeLZnBVV0ODM7US2/IAO4XUwU=",
        "originContent": "        print(f\"❌ 请求失败，状态码：{response.status_code}\")",
        "translatedContent": "        print(f\"❌ 请求失败，状态码：{response.status_code}\")"
      },
      {
        "row": 24,
        "rowsha": "lLjwPbfkGGEgUY7M7pHuJbE4ZcSoaCWF3nsiiRR4zG8=",
        "originContent": "        print(\"错误信息：\", response.text)",
        "translatedContent": "        print(\"错误信息：\", response.text)"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "hsOllUA3jty61uw/HjSYVde++9NC3B8EHzVDznYvH3o=",
        "originContent": "except requests.exceptions.RequestException as e:",
        "translatedContent": "except requests.exceptions.RequestException as e:"
      },
      {
        "row": 27,
        "rowsha": "AqFDh/RXwWcEg/S6T3/KXCqP8nMnVlWqQ37/xt6Ycgk=",
        "originContent": "    print(f\"⚠️ 请求异常：{str(e)}\")",
        "translatedContent": "    print(f\"⚠️ 请求异常：{str(e)}\")"
      },
      {
        "row": 28,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 11,
    "Content": "\n#### gradio_demo\n",
    "ContentSha": "WwM1MDjiMDy7uQXxP+JuI5+w5umjU+WMmgmsPszY8rQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "#### gradio_demo\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### gradio_demo"
      },
      {
        "row": 2,
        "rowsha": "H2Rvuz0AskCiXhatoCz4AwvwqBc6BpYb7Nmhp14pkPE=",
        "originContent": "#### gradio_demo",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 12,
    "Content": "```\npython gradio_demo.py\n```",
    "ContentSha": "elWXq255WcxgwWZy+Hk7+uyr/0pOAhkDHlYLUdDo0do=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\npython gradio_demo.py\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "vf9yTFAkdW68Z15+/h0pJ1PJenYaiBd8hScEJxztSMs=",
        "originContent": "python gradio_demo.py",
        "translatedContent": "python gradio_demo.py"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 13,
    "Content": "\n![gradio](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/gradio1.png)\n\n![gradio](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/gradio2.png)\n\n## 🔍 与线上网络检索测试对比\n\n我们将项目与一些主流的在线 API 进行对比，评估了其在复杂问题下的表现。\n\n### 🔥 数据集\n\n- 数据集来自阿里发布的 [WebWalkerQA](https://huggingface.co/datasets/callanwu/WebWalkerQA)，包含了 680 个高难度问题，覆盖教育、学术会议、游戏等多个领域。\n- 数据集包括中英文问题。\n\n### 🧑‍🏫 对比结果\n\n| 搜索引擎/系统  | ✅ Correct | ❌ Incorrect | ⚠️ Partially Correct |\n| -------------- | --------- | ----------- | ------------------- |\n| **火山方舟**   | 5.00%     | 72.21%      | 22.79%              |\n| **百炼**       | 9.85%     | 62.79%      | 27.35%              |\n| **Our** | 19.85%    | 47.94%      | 32.06%              |\n\n## 🙏 致谢\n\n本项目部分功能得益于以下开源项目的支持与启发，特此致谢：\n\n- 🧠 [LangGraph](https://github.com/langchain-ai/langgraph)：用于构建模块化智能体链路框架。\n- 🕷 [Crawl4AI](https://github.com/unclecode/crawl4ai)：强大的网页内容解析工具。",
    "ContentSha": "pFRIFgJN5DR3LmJX0LTB8j/L3OdqzLDT8k+fluhn81g=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "![gradio](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/gradio1.png)\n\n![gradio](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/gradio2.png)\n\n## 🔍 Comparison with Online Web Search Tests\n\nWe compared the project with some mainstream online APIs to evaluate its performance on complex questions.\n\n### 🔥 Dataset\n\n- The dataset comes from Alibaba's released [WebWalkerQA](https://huggingface.co/datasets/callanwu/WebWalkerQA), containing 680 challenging questions covering multiple fields such as education, academic conferences, and gaming.\n- The dataset includes questions in both Chinese and English.\n\n### 🧑‍🏫 Comparison Results\n\n| Search Engine/System | ✅ Correct | ❌ Incorrect | ⚠️ Partially Correct |\n| -------------------- | ---------- | ------------ | -------------------- |\n| **Volcano Ark**      | 5.00%      | 72.21%       | 22.79%               |\n| **Bailian**          | 9.85%      | 62.79%       | 27.35%               |\n| **Our**              | 19.85%     | 47.94%       | 32.06%               |\n\n## 🙏 Acknowledgments\n\nSome features of this project benefited from the support and inspiration of the following open-source projects, hereby acknowledged:\n\n- 🧠 [LangGraph](https://github.com/langchain-ai/langgraph): Used for building modular intelligent agent chain frameworks.\n- 🕷 [Crawl4AI](https://github.com/unclecode/crawl4ai): A powerful web content parsing tool.\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "![gradio](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/gradio1.png)"
      },
      {
        "row": 2,
        "rowsha": "ZZe/J0AzqZ5Wjfbca9Ln1GieL9ClvosUOI8Xhf2Bpvk=",
        "originContent": "![gradio](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/gradio1.png)",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "![gradio](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/gradio2.png)"
      },
      {
        "row": 4,
        "rowsha": "klq5VtXccKVq7ysObxFoiXFTzcG+SBMa4s+wFVf6Ja8=",
        "originContent": "![gradio](https://raw.githubusercontent.com/itshyao/proxyless-llm-websearch/main/img/gradio2.png)",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## 🔍 Comparison with Online Web Search Tests"
      },
      {
        "row": 6,
        "rowsha": "Hsj2FkmflsX0QZRbTMYLxFwo4kdQKL3iRhX6Un/og1Q=",
        "originContent": "## 🔍 与线上网络检索测试对比",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "We compared the project with some mainstream online APIs to evaluate its performance on complex questions."
      },
      {
        "row": 8,
        "rowsha": "Zy4xCh7BPzWKbz+26jPj9fIQIUPKStXtfnC4112wrnE=",
        "originContent": "我们将项目与一些主流的在线 API 进行对比，评估了其在复杂问题下的表现。",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 🔥 Dataset"
      },
      {
        "row": 10,
        "rowsha": "yRVHAlFVVb4dODbX6iI94TdJ8zFEIo/kEgxgeXaJnqI=",
        "originContent": "### 🔥 数据集",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "- The dataset comes from Alibaba's released [WebWalkerQA](https://huggingface.co/datasets/callanwu/WebWalkerQA), containing 680 challenging questions covering multiple fields such as education, academic conferences, and gaming."
      },
      {
        "row": 12,
        "rowsha": "yNLYqPwV3K/cpavFxCQ+qZ/LqtDG5HO4Cu+wr4lM/j4=",
        "originContent": "- 数据集来自阿里发布的 [WebWalkerQA](https://huggingface.co/datasets/callanwu/WebWalkerQA)，包含了 680 个高难度问题，覆盖教育、学术会议、游戏等多个领域。",
        "translatedContent": "- The dataset includes questions in both Chinese and English."
      },
      {
        "row": 13,
        "rowsha": "co2yZsS3w3lOp/gqaf4LY95h96jaQlTsMH1r8Q1v0dI=",
        "originContent": "- 数据集包括中英文问题。",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 🧑‍🏫 Comparison Results"
      },
      {
        "row": 15,
        "rowsha": "GPvuJRBsHemCx4Uz4xbwqZKq5Zz7Bj73Jq+QjG6TKqw=",
        "originContent": "### 🧑‍🏫 对比结果",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "| Search Engine/System | ✅ Correct | ❌ Incorrect | ⚠️ Partially Correct |"
      },
      {
        "row": 17,
        "rowsha": "tLRY3LbqFckAneX+jw5Q0d+FMUtpCgPk2KjgR2X5L7c=",
        "originContent": "| 搜索引擎/系统  | ✅ Correct | ❌ Incorrect | ⚠️ Partially Correct |",
        "translatedContent": "| -------------------- | ---------- | ------------ | -------------------- |"
      },
      {
        "row": 18,
        "rowsha": "cS1KsnEGBcDwRQzDtLUYO+BWrmS4Zzq1oaGtUT7LQVs=",
        "originContent": "| -------------- | --------- | ----------- | ------------------- |",
        "translatedContent": "| **Volcano Ark**      | 5.00%      | 72.21%       | 22.79%               |"
      },
      {
        "row": 19,
        "rowsha": "uKH7B9SShRJwmqMwm6sT4Ii19HFyWtIBlaHkqL1IxhM=",
        "originContent": "| **火山方舟**   | 5.00%     | 72.21%      | 22.79%              |",
        "translatedContent": "| **Bailian**          | 9.85%      | 62.79%       | 27.35%               |"
      },
      {
        "row": 20,
        "rowsha": "W+iUioAj07hfeXZUjWSutrBuR7JF4V5bVJTzHItij9Y=",
        "originContent": "| **百炼**       | 9.85%     | 62.79%      | 27.35%              |",
        "translatedContent": "| **Our**              | 19.85%     | 47.94%       | 32.06%               |"
      },
      {
        "row": 21,
        "rowsha": "x8k8tCwSemFUzbJwJLL/cj9BnuSvs2QatDSRQsiwj6w=",
        "originContent": "| **Our** | 19.85%    | 47.94%      | 32.06%              |",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## 🙏 Acknowledgments"
      },
      {
        "row": 23,
        "rowsha": "FRgwYUOPMWdMP9fBhM7O3re1VhWzQwK3drS31vxveX0=",
        "originContent": "## 🙏 致谢",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Some features of this project benefited from the support and inspiration of the following open-source projects, hereby acknowledged:"
      },
      {
        "row": 25,
        "rowsha": "6rrkDqe69wE3eaAkhhTlb+2miSKuEsH8IvEkLvdswk0=",
        "originContent": "本项目部分功能得益于以下开源项目的支持与启发，特此致谢：",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "- 🧠 [LangGraph](https://github.com/langchain-ai/langgraph): Used for building modular intelligent agent chain frameworks."
      },
      {
        "row": 27,
        "rowsha": "M8n4qPL1CR7SOq0pRHNG5Yq1T2GBMqm/3qpNHsRFOL4=",
        "originContent": "- 🧠 [LangGraph](https://github.com/langchain-ai/langgraph)：用于构建模块化智能体链路框架。",
        "translatedContent": "- 🕷 [Crawl4AI](https://github.com/unclecode/crawl4ai): A powerful web content parsing tool."
      },
      {
        "row": 28,
        "rowsha": "kKTu4NEOrsC91bajOQ6Q3ESTvctMbEJyTYzxIf4Rl8M=",
        "originContent": "- 🕷 [Crawl4AI](https://github.com/unclecode/crawl4ai)：强大的网页内容解析工具。",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]