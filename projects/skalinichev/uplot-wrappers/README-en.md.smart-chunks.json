[
  {
    "Id": 1,
    "Content": "\n<div align=\"right\">\n  <details>\n    <summary >üåê Language</summary>\n    <div>\n      <div align=\"center\">\n        <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=en\">English</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ja\">Êó•Êú¨Ë™û</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ko\">ÌïúÍµ≠Ïñ¥</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=th\">‡πÑ‡∏ó‡∏¢</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=fr\">Fran√ßais</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=de\">Deutsch</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=es\">Espa√±ol</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=it\">Italiano</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ru\">–†—É—Å—Å–∫–∏–π</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=pt\">Portugu√™s</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=nl\">Nederlands</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=pl\">Polski</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=tr\">T√ºrk√ße</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=vi\">Ti·∫øng Vi·ªát</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=id\">Bahasa Indonesia</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=as\">‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ</\n      </div>\n    </div>\n  </details>\n</div>\n\n# uPlot wrappers\n\nA collection of [uPlot](https://github.com/leeoniya/uPlot 'uPlot') wrappers that allow you to work with charts declaratively inside your favorite framework.\n\n**Table of Contents**\n\n-   [Motivation](#motivation)\n-   [Getting started](#getting-started)",
    "ContentSha": "ZBPbKNggEQ3kMAa/1AA/i4Xh6QT5HhYDqHPLuI5hF9M=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n<div align=\"right\">\n  <details>\n    <summary >üåê Language</summary>\n    <div>\n      <div align=\"center\">\n        <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=en\">English</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=zh-CN\">Simplified Chinese</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=zh-TW\">Traditional Chinese</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ja\">Japanese</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ko\">Korean</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=hi\">Hindi</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=th\">Thai</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=fr\">French</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=de\">German</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=es\">Spanish</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=it\">Italian</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ru\">Russian</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=pt\">Portuguese</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=nl\">Dutch</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=pl\">Polish</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ar\">Arabic</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=fa\">Persian</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=tr\">Turkish</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=vi\">Vietnamese</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=id\">Indonesian</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=as\">Assamese</\n      </div>\n    </div>\n  </details>\n</div>\n\n# uPlot wrappers\n\nA collection of [uPlot](https://github.com/leeoniya/uPlot 'uPlot') wrappers that enable you to work with charts declaratively within your favorite framework.\n\n**Table of Contents**\n\n-   [Motivation](#motivation)\n-   [Getting started](#getting-started)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "cWgam+tnnXudu7i74+ahMEGk/A9dQS+EwWLAIfi3dHk=",
        "originContent": "<div align=\"right\">",
        "translatedContent": "<div align=\"right\">"
      },
      {
        "row": 3,
        "rowsha": "orOcu5ARna/hb3RUkj6dBI8pHTM3WHeTvby17l5E0h0=",
        "originContent": "  <details>",
        "translatedContent": "  <details>"
      },
      {
        "row": 4,
        "rowsha": "TtgkLzblnvP0q9aAIVXt6s2LczXjy5k+QvHKcU0/5Ms=",
        "originContent": "    <summary >üåê Language</summary>",
        "translatedContent": "    <summary >üåê Language</summary>"
      },
      {
        "row": 5,
        "rowsha": "fZtk4rPTAJEEslnbhSVkHEcPlsctYSzAV7CDPL3rJmA=",
        "originContent": "    <div>",
        "translatedContent": "    <div>"
      },
      {
        "row": 6,
        "rowsha": "9KQxOeJSigvTmGWO+mtnl8kZY9zQfueoy8sk4lYm09Q=",
        "originContent": "      <div align=\"center\">",
        "translatedContent": "      <div align=\"center\">"
      },
      {
        "row": 7,
        "rowsha": "eyakkhAkGxiXBjhvW40R3uQ1y6q5hgKikdQQG9x6axM=",
        "originContent": "        <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=en\">English</a>",
        "translatedContent": "        <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=en\">English</a>"
      },
      {
        "row": 8,
        "rowsha": "Lh6tUEu7oNI8w6INGGKJl/fvAV+BkSksoUV3y4XdE3g=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=zh-CN\">Simplified Chinese</a>"
      },
      {
        "row": 9,
        "rowsha": "GzIrx19NN99KdZCBd/jTtTxu/cp3m46HANw/rCT8TiY=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=zh-TW\">Traditional Chinese</a>"
      },
      {
        "row": 10,
        "rowsha": "rDUJvEAwTTZf/uLMs642lKwTOgzsL0qSTQtpokSvzYc=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ja\">Êó•Êú¨Ë™û</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ja\">Japanese</a>"
      },
      {
        "row": 11,
        "rowsha": "BTnJ7hjVFAxwbGIJ5eIO1dt4FYNvWdstEThlJOrAcD0=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ko\">ÌïúÍµ≠Ïñ¥</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ko\">Korean</a>"
      },
      {
        "row": 12,
        "rowsha": "Q0ywSZGYN9theWrHfugrPt6IzFGfXfs//4z1e7ecBVQ=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=hi\">Hindi</a>"
      },
      {
        "row": 13,
        "rowsha": "UdAAm46yC3jK5vHjcbTq3ofBpjkaVj43h7RBXXlns6U=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=th\">‡πÑ‡∏ó‡∏¢</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=th\">Thai</a>"
      },
      {
        "row": 14,
        "rowsha": "7MuOzkYs+2Yi8Z+7rAzEFTRh3fQ42AnUFharE50pBHw=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=fr\">Fran√ßais</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=fr\">French</a>"
      },
      {
        "row": 15,
        "rowsha": "7hr8EDrUdxlg/o9QolOtd9Dtx5asjEHj975fQCO8RsQ=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=de\">Deutsch</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=de\">German</a>"
      },
      {
        "row": 16,
        "rowsha": "c3gz0JLeFusdlc1gpzkGxziwo910qnRL/E4VtBBoMFY=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=es\">Espa√±ol</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=es\">Spanish</a>"
      },
      {
        "row": 17,
        "rowsha": "HBtpWCwZ9NfM3SfScVXySltStspTvOZEGALxCdiECRU=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=it\">Italiano</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=it\">Italian</a>"
      },
      {
        "row": 18,
        "rowsha": "iN+vKVss5uya2SVVLSwajKLkZj6erI8r3ioJQikhnRs=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ru\">–†—É—Å—Å–∫–∏–π</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ru\">Russian</a>"
      },
      {
        "row": 19,
        "rowsha": "blhyd4XXoUCvqjwMihrNZj6mzAQWJrQ79eSKw4MfVAA=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=pt\">Portugu√™s</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=pt\">Portuguese</a>"
      },
      {
        "row": 20,
        "rowsha": "ky0A6bq+Pc97KNHGOrkg0zhk8xzp2Gw7hwwaa7aiqzs=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=nl\">Nederlands</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=nl\">Dutch</a>"
      },
      {
        "row": 21,
        "rowsha": "l0Y7Vl4KskN+dDuPwwa+wsWxNE2wkxms01ymhN5ZiGE=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=pl\">Polski</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=pl\">Polish</a>"
      },
      {
        "row": 22,
        "rowsha": "oLzfOHIogVCMy+gnODlqGJKRsI2QxhXXNC+0uzve1qI=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=ar\">Arabic</a>"
      },
      {
        "row": 23,
        "rowsha": "aKYIy20MoLqRP9TeG4T3l/kfCmt41ycR1YqMBmsdYx0=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=fa\">Persian</a>"
      },
      {
        "row": 24,
        "rowsha": "6i+SGjI+BkWSvP+ZI5LBga6y1Dwziz8o1mwoXRDzECk=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=tr\">T√ºrk√ße</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=tr\">Turkish</a>"
      },
      {
        "row": 25,
        "rowsha": "tlMnhHW5/l9VuXmRRDO1qkYNDQ6sAy6/gFHJjz1S45E=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=vi\">Ti·∫øng Vi·ªát</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=vi\">Vietnamese</a>"
      },
      {
        "row": 26,
        "rowsha": "Xj7Qyi6LLFR2y8IstAgQ++0ohcIp/PKkkMMYsX8G0T8=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=id\">Bahasa Indonesia</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=id\">Indonesian</a>"
      },
      {
        "row": 27,
        "rowsha": "IrEbJOIzVISWoQ8WCsYXIoaR2SvQHst50+hn4Nlxa24=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=as\">‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ</",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=skalinichev&project=uplot-wrappers&lang=as\">Assamese</"
      },
      {
        "row": 28,
        "rowsha": "0OM5wNEm0TO56MEBvQzL7AUZM7/3OpgIeqRf2zFre3Q=",
        "originContent": "      </div>",
        "translatedContent": "      </div>"
      },
      {
        "row": 29,
        "rowsha": "fcjTfY+fs8YnY5slBs1sZvWPAqEQR7tzaBDO54skkGQ=",
        "originContent": "    </div>",
        "translatedContent": "    </div>"
      },
      {
        "row": 30,
        "rowsha": "+fQNH2ldI7UM/rqRscP3hUSWAmw1HvQ2wEKDN8JagT0=",
        "originContent": "  </details>",
        "translatedContent": "  </details>"
      },
      {
        "row": 31,
        "rowsha": "qsMmUbEPVnxGG5tPJV1vsfpoWbU2jYvZpRr5IKshzyM=",
        "originContent": "</div>",
        "translatedContent": "</div>"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "BaRGk5zH/BDFsxo2l7gUThNdPJ5eWrkCQL0YAN4/v+Q=",
        "originContent": "# uPlot wrappers",
        "translatedContent": "# uPlot wrappers"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "k5fwKdmteMwgQgYiJCTkveu9N77MC3KdefCE7YVit7A=",
        "originContent": "A collection of [uPlot](https://github.com/leeoniya/uPlot 'uPlot') wrappers that allow you to work with charts declaratively inside your favorite framework.",
        "translatedContent": "A collection of [uPlot](https://github.com/leeoniya/uPlot 'uPlot') wrappers that enable you to work with charts declaratively within your favorite framework."
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "TBct99L7BPuuHDxIwv3pSyyJl2Rwy39D62yjXBP92oU=",
        "originContent": "**Table of Contents**",
        "translatedContent": "**Table of Contents**"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "NKY289msngV/w175hGqK1ZfNi8m0c6MlSRcdPUnAPrc=",
        "originContent": "-   [Motivation](#motivation)",
        "translatedContent": "-   [Motivation](#motivation)"
      },
      {
        "row": 40,
        "rowsha": "A4OWpBovV/5NyHejaqBlRtWe7fG8qQa5gNHY+VVjz3s=",
        "originContent": "-   [Getting started](#getting-started)",
        "translatedContent": "-   [Getting started](#getting-started)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "-   [React](#react)\n    -   [Installation](#installation)\n    -   [How to use](#how-to-use)\n    -   [Demo](#demo)\n-   [Vue.js](#vuejs)\n    -   [Installation](#installation-1)\n    -   [How to use](#how-to-use-1)\n    -   [Demo](#demo-1)\n-   [Svelte](#svelte)\n    -   [Installation](#installation-2)\n    -   [How to use](#how-to-use-2)\n    -   [Demo](#demo-2)\n-   [Documentation](#documentation)\n\n# Motivation\n\nWhile several other uPlot wrappers already exist, all of them have one of the following limitations:\n\n1. They create uPlot instance once, during component mount phase, and expect you to handle all the update logic yourself.\n2. They recreate uPlot instance anew whenever the props change, even if the instance can be updated to reflect the changes.\n\nIn comparison this library tries it's best not to recreate the uPlot instance once the props change. Instead of recreation it tries to use uPlot public API to keep it up to date with the props.\n\n# Getting started\n\nSee [React](#react), [Vue.js](#vuejs) or [Svelte](#svelte) sections below depending on what framework you're using.\nAlso see API [documentation](#documentation) common to all frameworks.\n\n# React\n\n## Installation\n\nInstall uplot-react package with uplot dependency:\n\n-   Using npm: `$ npm install uplot-react uplot`\n-   Using yarn: `$ yarn add uplot-react uplot`\n\nYou also need React 16.8 or above to be installed inside your project tree.\n\n## How to use",
    "ContentSha": "VQqL+S2/DGAbdNGvLNuT16/UuNde2lbnNCzHj5JsT4Y=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "-   [React](#react)\n    -   [Installation](#installation)\n    -   [How to use](#how-to-use)\n    -   [Demo](#demo)\n-   [Vue.js](#vuejs)\n    -   [Installation](#installation-1)\n    -   [How to use](#how-to-use-1)\n    -   [Demo](#demo-1)\n-   [Svelte](#svelte)\n    -   [Installation](#installation-2)\n    -   [How to use](#how-to-use-2)\n    -   [Demo](#demo-2)\n-   [Documentation](#documentation)\n\n# Motivation\n\nAlthough several other uPlot wrappers already exist, all of them have one of the following limitations:\n\n1. They create a uPlot instance once during the component mount phase and expect you to handle all the update logic yourself.\n2. They recreate the uPlot instance entirely whenever the props change, even if the instance could simply be updated to reflect the changes.\n\nIn contrast, this library does its best not to recreate the uPlot instance when the props change. Instead of recreating, it attempts to use the uPlot public API to keep it updated with the props.\n\n# Getting started\n\nRefer to the [React](#react), [Vue.js](#vuejs) or [Svelte](#svelte) sections below, depending on the framework you're using.\nAlso see the API [documentation](#documentation) that is common to all frameworks.\n\n# React\n\n## Installation\n\nInstall the uplot-react package along with the uplot dependency:\n\n-   Using npm: `$ npm install uplot-react uplot`\n-   Using yarn: `$ yarn add uplot-react uplot`\n\nYou also need to have React 16.8 or above installed within your project tree.\n\n## How to use",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "vXMiKLwV2Gx26FuOljbuRDQLk66lzetO9HlcHvGVGTc=",
        "originContent": "-   [React](#react)",
        "translatedContent": "-   [React](#react)"
      },
      {
        "row": 2,
        "rowsha": "gRKIAqrb3u8y6Cf8uE9E9v17Neme/Lr+XVn8kBALMTU=",
        "originContent": "    -   [Installation](#installation)",
        "translatedContent": "    -   [Installation](#installation)"
      },
      {
        "row": 3,
        "rowsha": "2hPD+h6wY8BXGUnFK6v7COV7ERY37fYZAIwiZUGIC74=",
        "originContent": "    -   [How to use](#how-to-use)",
        "translatedContent": "    -   [How to use](#how-to-use)"
      },
      {
        "row": 4,
        "rowsha": "IYzCzge+QZlSI5AfifNoG8vaf8qMBsPqs0XQdQ9YGH0=",
        "originContent": "    -   [Demo](#demo)",
        "translatedContent": "    -   [Demo](#demo)"
      },
      {
        "row": 5,
        "rowsha": "jd4+gKTZ0Vmcyj1m5IE/3zDNTKHpaZpwoNabv8r5THw=",
        "originContent": "-   [Vue.js](#vuejs)",
        "translatedContent": "-   [Vue.js](#vuejs)"
      },
      {
        "row": 6,
        "rowsha": "hB8ca3BNd8ej2hJ5gFnjunT+Bmc2OO1nRaeOJIx1LQI=",
        "originContent": "    -   [Installation](#installation-1)",
        "translatedContent": "    -   [Installation](#installation-1)"
      },
      {
        "row": 7,
        "rowsha": "x2XingDPin4m7wrw3AdOQrOnhLPWxfwOKlNc4P0NcgA=",
        "originContent": "    -   [How to use](#how-to-use-1)",
        "translatedContent": "    -   [How to use](#how-to-use-1)"
      },
      {
        "row": 8,
        "rowsha": "plZSdBnHdN0IgWLTonFYNtLMGUEleAV3xe+/Cpqv6nc=",
        "originContent": "    -   [Demo](#demo-1)",
        "translatedContent": "    -   [Demo](#demo-1)"
      },
      {
        "row": 9,
        "rowsha": "WuxNgsEND7erv5m4uRLfAsQyy92TYceJWOOevwAc2S4=",
        "originContent": "-   [Svelte](#svelte)",
        "translatedContent": "-   [Svelte](#svelte)"
      },
      {
        "row": 10,
        "rowsha": "f7cUrqPWV0A5DALXMbEO032/UPp6Pa59U7PBCtzqHc0=",
        "originContent": "    -   [Installation](#installation-2)",
        "translatedContent": "    -   [Installation](#installation-2)"
      },
      {
        "row": 11,
        "rowsha": "gBicL+rZTFLL1xnLsmkYv6B7L95NqdCoc47tz6Gv0U8=",
        "originContent": "    -   [How to use](#how-to-use-2)",
        "translatedContent": "    -   [How to use](#how-to-use-2)"
      },
      {
        "row": 12,
        "rowsha": "q57gzTv7RBzP0SKZHHCJXSavCyh+tLepzGJggJtUNE4=",
        "originContent": "    -   [Demo](#demo-2)",
        "translatedContent": "    -   [Demo](#demo-2)"
      },
      {
        "row": 13,
        "rowsha": "WOGGMksxi/NDjUd8YYp2+5GGdYjCS8wHWgwW5w7C5uE=",
        "originContent": "-   [Documentation](#documentation)",
        "translatedContent": "-   [Documentation](#documentation)"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "lpzjncFavt2VNIjJjV0DeYa0DbsvW3NZ4Qcm2gjxki4=",
        "originContent": "# Motivation",
        "translatedContent": "# Motivation"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "iwOfhuToXnUK5sYqabgTibP1RragCDROp3/33h5OrY4=",
        "originContent": "While several other uPlot wrappers already exist, all of them have one of the following limitations:",
        "translatedContent": "Although several other uPlot wrappers already exist, all of them have one of the following limitations:"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "XICPXLouIDW5THr5ZqYRyFNYCEFQYTq2CtKNct1fXyk=",
        "originContent": "1. They create uPlot instance once, during component mount phase, and expect you to handle all the update logic yourself.",
        "translatedContent": "1. They create a uPlot instance once during the component mount phase and expect you to handle all the update logic yourself."
      },
      {
        "row": 20,
        "rowsha": "QoXDVS9LY/84BIKDc7hif3wZU2OAZoK9NiOzRFZaaKI=",
        "originContent": "2. They recreate uPlot instance anew whenever the props change, even if the instance can be updated to reflect the changes.",
        "translatedContent": "2. They recreate the uPlot instance entirely whenever the props change, even if the instance could simply be updated to reflect the changes."
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "slHwTgx1NK8ELItsdS9Y1YA9ihE7stIx2N25oJLnp78=",
        "originContent": "In comparison this library tries it's best not to recreate the uPlot instance once the props change. Instead of recreation it tries to use uPlot public API to keep it up to date with the props.",
        "translatedContent": "In contrast, this library does its best not to recreate the uPlot instance when the props change. Instead of recreating, it attempts to use the uPlot public API to keep it updated with the props."
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "e4LTO7quMIBXOuT+2oRe6yKs+221yRN2DDarYfY0Xbc=",
        "originContent": "# Getting started",
        "translatedContent": "# Getting started"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "Lzukf/PDAKv+PJ9fI8NMl/7hW8rnRKDbqcObiJM8N2Q=",
        "originContent": "See [React](#react), [Vue.js](#vuejs) or [Svelte](#svelte) sections below depending on what framework you're using.",
        "translatedContent": "Refer to the [React](#react), [Vue.js](#vuejs) or [Svelte](#svelte) sections below, depending on the framework you're using."
      },
      {
        "row": 27,
        "rowsha": "Ao73xJYrLDDFxDDIKApesbgShR+K+BJzzSBDzJ+y29w=",
        "originContent": "Also see API [documentation](#documentation) common to all frameworks.",
        "translatedContent": "Also see the API [documentation](#documentation) that is common to all frameworks."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "JUgPiPp9MmW9/nmQg4RQvUV1aGbLGF6BgZtkz3MFFx0=",
        "originContent": "# React",
        "translatedContent": "# React"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "oV0SUDvwD2VN8Gi9nlr2JZ2xcDrASmE2W5kc5SVX5eo=",
        "originContent": "## Installation",
        "translatedContent": "## Installation"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "hLHXL5O/xFOrXEtBY2KDocA1k2WRG6CGjFkDYZp6bjo=",
        "originContent": "Install uplot-react package with uplot dependency:",
        "translatedContent": "Install the uplot-react package along with the uplot dependency:"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "k5m2HtLrkRv8s0mUzKav2luOJRFhoxftRYNP4NvWNmM=",
        "originContent": "-   Using npm: `$ npm install uplot-react uplot`",
        "translatedContent": "-   Using npm: `$ npm install uplot-react uplot`"
      },
      {
        "row": 36,
        "rowsha": "aUzeCRk3nVpsZiMmb2Hna4ETvRBDsG3OFdS1Q3sQFgo=",
        "originContent": "-   Using yarn: `$ yarn add uplot-react uplot`",
        "translatedContent": "-   Using yarn: `$ yarn add uplot-react uplot`"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "hJTDZYvf4cwMflrM+XAVQ6eTelo0jV4i82sSaQ0oj8U=",
        "originContent": "You also need React 16.8 or above to be installed inside your project tree.",
        "translatedContent": "You also need to have React 16.8 or above installed within your project tree."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "B0rZUVAuvA0woeHASaoNWRIBbA+LJfRLl9zTeDoLks0=",
        "originContent": "## How to use",
        "translatedContent": "## How to use"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 3,
    "Content": "",
    "ContentSha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "```javascript\nimport React from 'react';\nimport uPlot from 'uplot';\nimport UplotReact from 'uplot-react';\nimport 'uplot/dist/uPlot.min.css';\n\nconst Chart = () => (\n    <UplotReact options={options} data={data} target={target} onCreate={(chart) => {}} onDelete={(chart) => {}} />\n);\n```",
    "ContentSha": "R013hWs7/ZUp+/Fl3Qc3wKFDQ5T4o66tWFCTMSnnTQ4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```javascript\nimport React from 'react';\nimport uPlot from 'uplot';\nimport UplotReact from 'uplot-react';\nimport 'uplot/dist/uPlot.min.css';\n\nconst Chart = () => (\n    <UplotReact options={options} data={data} target={target} onCreate={(chart) => {}} onDelete={(chart) => {}} />\n);\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 5,
    "Content": "\n## Demo\n\nSee the [live demo](https://codesandbox.io/s/uplot-react-6ykeb?file=/react/uplot-react-example.tsx 'live demo')\n\nYou can also run the demo app locally:\n\n`$ git clone https://github.com/skalinichev/uplot-wrappers.git`\n\n`$ cd uplot-wrappers && yarn install && yarn run serveReact`\n\n### ReactJS Demo\n\nsimple example for getting started quickly.\n[ReactJS Demo](https://github.com/skalinichev/uplot-wrappers/blob/master/react/uplot-react-simple.js 'ReactJS Demo')\n\n![image](https://user-images.githubusercontent.com/62290677/233559830-5dea130c-11a3-434e-9cce-d4f00dc9bea8.png)\n\n# Vue.js\n\n## Installation\n\nInstall uplot-vue package with uplot dependency:\n\n-   Using npm: `$ npm install uplot-vue uplot`\n-   Using yarn: `$ yarn add uplot-vue uplot`\n\nYou also need Vue.js to be installed inside your project tree (both 2.6 and 3.x versions are supported).\n\n## How to use\n\nUsing template\n",
    "ContentSha": "i7b2wv2rD5zjRtjGqFKfR+VmwsO98rZj+GwZ95zHvd0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## Demo\n\nSee the [live demo](https://codesandbox.io/s/uplot-react-6ykeb?file=/react/uplot-react-example.tsx 'live demo')\n\nYou can also run the demo app locally:\n\n`$ git clone https://github.com/skalinichev/uplot-wrappers.git`\n\n`$ cd uplot-wrappers && yarn install && yarn run serveReact`\n\n### ReactJS Demo\n\nsimple example for getting started quickly.\n[ReactJS Demo](https://github.com/skalinichev/uplot-wrappers/blob/master/react/uplot-react-simple.js 'ReactJS Demo')\n\n![image](https://user-images.githubusercontent.com/62290677/233559830-5dea130c-11a3-434e-9cce-d4f00dc9bea8.png)\n\n# Vue.js\n\n## Installation\n\nInstall uplot-vue package with uplot dependency:\n\n-   Using npm: `$ npm install uplot-vue uplot`\n-   Using yarn: `$ yarn add uplot-vue uplot`\n\nYou also need Vue.js to be installed inside your project tree (both 2.6 and 3.x versions are supported).\n\n## How to use\n\nUsing template\n\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 6,
    "Content": "```html\n<template>\n    <UplotVue :data=\"data\" :options=\"options\" :target=\"target\" @create=\"onCreate\" @delete=\"onDelete\" />\n</template>\n<script>\n    // Vue.js 2\n    import Vue from 'vue';\n    // Vue.js 3\n    import { createApp } from 'vue';\n    import uPlot from 'uplot';\n    import UplotVue from 'uplot-vue';\n    import 'uplot/dist/uPlot.min.css';\n\n    // Vue.js 2\n    const Chart = Vue.extend({ components: { uplotvue: UplotVue } });\n    // Vue.js 3\n    const Chart = createApp({ components: { uplotvue: UplotVue } });\n</script>\n```",
    "ContentSha": "KcjVlnkobx2QdQ7iPDlx7CYtfSWwsLozBWpCkGysV3I=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```html\n<template>\n    <UplotVue :data=\"data\" :options=\"options\" :target=\"target\" @create=\"onCreate\" @delete=\"onDelete\" />\n</template>\n<script>\n    // Vue.js 2\n    import Vue from 'vue';\n    // Vue.js 3\n    import { createApp } from 'vue';\n    import uPlot from 'uplot';\n    import UplotVue from 'uplot-vue';\n    import 'uplot/dist/uPlot.min.css';\n\n    // Vue.js 2\n    const Chart = Vue.extend({ components: { uplotvue: UplotVue } });\n    // Vue.js 3\n    const Chart = createApp({ components: { uplotvue: UplotVue } });\n</script>\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 7,
    "Content": "\nUsing JSX\n",
    "ContentSha": "LyRFa2EoWKyFXmXvE40Tedd0y8QZAM2uQtT8g2JpKJo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nUsing JSX\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 8,
    "Content": "```javascript\n// Vue.js 2\nimport Vue from 'vue';\n// Vue.js 3\nimport { createApp } from 'vue';\nimport uPlot from 'uplot';\nimport UplotVue from 'uplot-vue';\nimport 'uplot/dist/uPlot.min.css';\n\n{\n    ...,\n    render() {\n        return (\n            <UplotVue\n                options={options}\n                data={data}\n                target={target}\n                onDelete={(chart) => {}}\n                onCreate={(chart) => {}}\n            />\n        );\n    }\n}\n```",
    "ContentSha": "y6aMiNo131OlPuTeicgVhZo/7mXKdq0PihXLfiEgxVc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```javascript\n// Vue.js 2\nimport Vue from 'vue';\n// Vue.js 3\nimport { createApp } from 'vue';\nimport uPlot from 'uplot';\nimport UplotVue from 'uplot-vue';\nimport 'uplot/dist/uPlot.min.css';\n\n{\n    ...,\n    render() {\n        return (\n            <UplotVue\n                options={options}\n                data={data}\n                target={target}\n                onDelete={(chart) => {}}\n                onCreate={(chart) => {}}\n            />\n        );\n    }\n}\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 9,
    "Content": "\n> Note: Property changes by mutation are not supported due to [Vue limitation](https://github.com/vuejs/vue/issues/2164) You have to create a copy of the property, i.e. replace it instead, see an [example](https://github.com/skalinichev/uplot-wrappers/blob/master/vue/uplot-vue-example.tsx#L52) for the general idea.\n\n## Demo\n\nSee the [Vue.js 2 live demo](https://codesandbox.io/s/uplot-vue-khi4m?file=/vue/uplot-vue-example.tsx 'Vue.js 2 live demo')\n\nYou can also run the demo app locally:\n\n`$ git clone https://github.com/skalinichev/uplot-wrappers.git`\n\n`$ cd uplot-wrappers && yarn install`\n\nVue.js 2:\n\n`$ yarn run serveVue`\n\nVue.js 3:\n\n`$ yarn run serveVue3`\n\n# Svelte\n\n## Installation\n\nInstall uplot-svelte package with uplot dependency:\n\n-   Using npm: `$ npm install uplot-svelte uplot`\n-   Using yarn: `$ yarn add uplot-svelte uplot`\n\nYou also need Svelte to be installed inside your project tree. UplotSvelte component is compatible with Svelte and SvelteKit projects.\n\n## How to use\n",
    "ContentSha": "synq+9ud+1XgCHuO0LD9yaj9jp9XuHTy64IYs81oYYc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n> Note: Property changes by mutation are not supported due to [Vue limitation](https://github.com/vuejs/vue/issues/2164) You have to create a copy of the property, i.e. replace it instead, see an [example](https://github.com/skalinichev/uplot-wrappers/blob/master/vue/uplot-vue-example.tsx#L52) for the general idea.\n\n## Demo\n\nSee the [Vue.js 2 live demo](https://codesandbox.io/s/uplot-vue-khi4m?file=/vue/uplot-vue-example.tsx 'Vue.js 2 live demo')\n\nYou can also run the demo app locally:\n\n`$ git clone https://github.com/skalinichev/uplot-wrappers.git`\n\n`$ cd uplot-wrappers && yarn install`\n\nVue.js 2:\n\n`$ yarn run serveVue`\n\nVue.js 3:\n\n`$ yarn run serveVue3`\n\n# Svelte\n\n## Installation\n\nInstall uplot-svelte package with uplot dependency:\n\n-   Using npm: `$ npm install uplot-svelte uplot`\n-   Using yarn: `$ yarn add uplot-svelte uplot`\n\nYou also need Svelte to be installed inside your project tree. UplotSvelte component is compatible with Svelte and SvelteKit projects.\n\n## How to use\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 10,
    "Content": "```sveltehtml\n<script lang=\"ts\">\n    import UplotSvelte from 'uplot-svelte';\n    import uPlot from 'uplot';\n    import 'uplot/dist/uPlot.min.css';\n\n    ...\n</script>\n\n<UplotSvelte {options} {data} onCreate={onCreate} onDelete={onDelete} />\n```",
    "ContentSha": "Tz8noToSLr6X3YFwMcE1Mxwn0o5vp+afUG1IdySyHUc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```sveltehtml\n<script lang=\"ts\">\n    import UplotSvelte from 'uplot-svelte';\n    import uPlot from 'uplot';\n    import 'uplot/dist/uPlot.min.css';\n\n    ...\n</script>\n\n<UplotSvelte {options} {data} onCreate={onCreate} onDelete={onDelete} />\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 11,
    "Content": "\n## Demo\n\nSee the example [Svelte example](https://github.com/skalinichev/uplot-wrappers/blob/master/svelte/svelte-example.svelte 'Svelte example')\n\nYou can also run the demo app locally:\n\n`$ git clone https://github.com/skalinichev/uplot-wrappers.git`\n\n`$ cd uplot-wrappers && yarn install && yarn run serveSvelte`\n\n# Documentation\n\n|    Parameter    | Requirement | Description                                                                                                                                                                                                |\n| :-------------: | :---------: | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n|     options     |  required   | Options for uPlot. Passed as the first argument to uPlot constructor: `new uPlot(options)`                                                                                                                 |\n|      data       |  required   | Data for uPlot. Passed as the second argument to uPlot constructor: `new uPlot(options, data)`                                                                                                             |\n|     target      |  optional   | Target html element for uPlot. Passed as the third argument to uPlot constructor: `new uPlot(options, data, target)` A new div target element will be created automatically if none is passed in the props |\n|    onCreate     |  optional   | Callback function, invoked upon uPlot instance creation or recreation                                                                                                                                      |\n|    onDelete     |  optional   | Callback function, invoked before uPlot instance gets destroyed, either because the props has changed so much it's impossible to update the chart or because the component is about to be unmounted        |\n| className/class |  optional   | A class name passed over to the automatically created target div element. Class name is ignored when the 'target' prop is used.                                                                            |\n|   resetScales   |  optional   | Flag controlling whether to reset the scales on data change. Defaults to true.                                                                                                                             |\n",
    "ContentSha": "wDUYpfAOcqwA56Ff+dv7uLfVI5IxFWEyPjj4QqGfAEk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n## Demo\n\nSee the example [Svelte example](https://github.com/skalinichev/uplot-wrappers/blob/master/svelte/svelte-example.svelte 'Svelte example')\n\nYou can also run the demo app locally:\n\n`$ git clone https://github.com/skalinichev/uplot-wrappers.git`\n\n`$ cd uplot-wrappers && yarn install && yarn run serveSvelte`\n\n# Documentation\n\n|    Parameter    | Requirement | Description                                                                                                                                                                                                |\n| :-------------: | :---------: | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n|     options     |  required   | Options for uPlot. Passed as the first argument to uPlot constructor: `new uPlot(options)`                                                                                                                 |\n|      data       |  required   | Data for uPlot. Passed as the second argument to uPlot constructor: `new uPlot(options, data)`                                                                                                             |\n|     target      |  optional   | Target html element for uPlot. Passed as the third argument to uPlot constructor: `new uPlot(options, data, target)` A new div target element will be created automatically if none is passed in the props |\n|    onCreate     |  optional   | Callback function, invoked upon uPlot instance creation or recreation                                                                                                                                      |\n|    onDelete     |  optional   | Callback function, invoked before uPlot instance gets destroyed, either because the props has changed so much it's impossible to update the chart or because the component is about to be unmounted        |\n| className/class |  optional   | A class name passed over to the automatically created target div element. Class name is ignored when the 'target' prop is used.                                                                            |\n|   resetScales   |  optional   | Flag controlling whether to reset the scales on data change. Defaults to true.                                                                                                                             |\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  }
]