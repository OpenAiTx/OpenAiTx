[
  {
    "Id": 1,
    "Content": "<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/basketoengine/Basketo/main/readmeimgs/logo.png\" alt=\"Basketo Game Engine Logo\" width=\"200\"/>\n</p>\n\n<h2 align=\"center\">Create, Play, Inspire. Games Brought to Life. ✨</h2>\n\n<h1 align=\"center\">Basketo Game Engine</h1>\n\n<div align=\"center\">\n\n[![Discord](https://img.shields.io/discord/1373185493742911609?logo=discord&label=Discord&color=5B5BD6&logoColor=white)](https://discord.gg/F3DswRMW) <!-- Replace your_discord_server_id with your actual server ID -->\n[![GitHub stars](https://img.shields.io/github/stars/basketoengine/Basketo?style=social)](https://github.com/basketoengine/Basketo)\n[![X (formerly Twitter)](https://img.shields.io/twitter/follow/BaslaelWorkneh?style=social&logo=x)](https://x.com/BaslaelWorkneh)\n\n</div>\n\n<p align=\"center\">\nWelcome to the Basketo Engine - a passion project where we are putting our best effort into creating an awesome and performant engine, with the exciting plan of making it an AI-Native game engine. Featuring Unity-like editor interface, Gemini AI integration, advanced multi-sound effects system, and powerful ECS architecture. Whether you’re here to contribute, suggest ideas, or just watch it grow, you’re part of the journey! 🚀\n</p>\n",
    "ContentSha": "wLaX0TnybrZZ1B0zJaiH7GJznp4xZT31vohzrITntGE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/basketoengine/Basketo/main/readmeimgs/logo.png\" alt=\"Logo du moteur de jeu Basketo\" width=\"200\"/>\n</p>\n\n<h2 align=\"center\">Créez, Jouez, Inspirez. Les jeux prennent vie. ✨</h2>\n\n<h1 align=\"center\">Moteur de jeu Basketo</h1>\n\n<div align=\"center\">\n\n[![Discord](https://img.shields.io/discord/1373185493742911609?logo=discord&label=Discord&color=5B5BD6&logoColor=white)](https://discord.gg/F3DswRMW) <!-- Remplacez your_discord_server_id par l'ID réel de votre serveur -->\n[![GitHub stars](https://img.shields.io/github/stars/basketoengine/Basketo?style=social)](https://github.com/basketoengine/Basketo)\n[![X (anciennement Twitter)](https://img.shields.io/twitter/follow/BaslaelWorkneh?style=social&logo=x)](https://x.com/BaslaelWorkneh)\n\n</div>\n\n<p align=\"center\">\nBienvenue dans le moteur Basketo - un projet passion où nous mettons tout en œuvre pour créer un moteur performant et exceptionnel, avec le projet ambitieux d’en faire un moteur de jeu natif IA. Doté d’une interface éditeur similaire à Unity, d’une intégration Gemini AI, d’un système avancé d’effets sonores multiples et d’une puissante architecture ECS. Que vous soyez ici pour contribuer, proposer des idées ou simplement observer son évolution, vous faites partie du voyage ! 🚀\n</p>",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "## 🚀 Current State of the Engine\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/basketoengine/Basketo/main/readmeimgs/image3.png\" alt=\"Current State of Basketo Engine\" width=\"700\"/>\n</p>\n\n<p align=\"center\">\n  <em>Check out the latest developments and features in action!</em> 🎮\n</p>\n\n## ✨ Key Features\n\n### 🎮 **Unity-like Editor Interface**\n- **Dual-window setup**: Scene editor and game view side by side\n- **Live editing**: Modify scenes while game is running\n- **Inspector panel**: Visual component editing with drag-and-drop\n- **Hierarchy view**: Organize and manage entities\n- **Asset browser**: Easy texture and audio management\n\n### 🤖 **AI-Native Development**\n- **Gemini AI Integration**: Natural language commands for game development\n- **Smart script generation**: AI-powered Lua script creation\n- **Entity modification**: Describe changes in plain English\n- **Easy API setup**: Built-in Gemini API key configuration\n",
    "ContentSha": "v3QJpOplnEa2abXM7XHbgKA8VyE68ft8EOEjgaixmNs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## 🚀 État actuel du moteur\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/basketoengine/Basketo/main/readmeimgs/image3.png\" alt=\"État actuel du moteur Basketo\" width=\"700\"/>\n</p>\n\n<p align=\"center\">\n  <em>Découvrez les derniers développements et fonctionnalités en action !</em> 🎮\n</p>\n\n## ✨ Fonctionnalités clés\n\n### 🎮 **Interface d’éditeur similaire à Unity**\n- **Configuration à double fenêtre** : éditeur de scène et vue du jeu côte à côte\n- **Édition en direct** : modifiez les scènes pendant l’exécution du jeu\n- **Panneau d’inspection** : édition visuelle des composants par glisser-déposer\n- **Vue hiérarchique** : organisez et gérez les entités\n- **Navigateur d’actifs** : gestion facile des textures et de l’audio\n\n### 🤖 **Développement natif IA**\n- **Intégration Gemini AI** : commandes en langage naturel pour le développement de jeux\n- **Génération intelligente de scripts** : création de scripts Lua assistée par IA\n- **Modification d’entités** : décrivez les changements en anglais courant\n- **Configuration facile de l’API** : configuration intégrée de la clé API Gemini",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "### 🔊 **Advanced Audio System**\n- **Multi-sound effects**: Multiple named sounds per entity (walk, jump, attack, etc.)\n- **Traditional audio**: Background music and ambient sounds\n- **Lua integration**: Trigger sounds from scripts with `PlaySound(entity, \"action\")`\n- **Visual editor**: Manage sound effects through the inspector\n\n### 🎯 **Entity-Component-System (ECS)**\n- **High performance**: Optimized for large numbers of entities\n- **Modular design**: Mix and match components as needed\n- **Script integration**: Lua scripting with full ECS access\n- **Real-time updates**: Live component editing\n\n### 🎨 **Graphics & Animation**\n- **Sprite rendering**: Efficient 2D graphics pipeline\n- **Animation system**: Frame-based animations with looping\n- **Transform system**: Position, rotation, and scaling\n- **Camera system**: Multiple camera support\n\n### ⚡ **Physics & Collision**\n- **Collision detection**: AABB collision with spatial optimization\n- **Rigidbody physics**: Gravity, velocity, and forces\n- **Collision callbacks**: Script-accessible collision events\n- **Spatial partitioning**: Quadtree optimization for performance\n",
    "ContentSha": "ccmU/3nES6zMgxs2jhg8TP2rwVP05NB77XTwVhwxK3U=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 🔊 **Système Audio Avancé**\n- **Effets sonores multiples** : Plusieurs sons nommés par entité (marche, saut, attaque, etc.)\n- **Audio traditionnel** : Musique de fond et sons d'ambiance\n- **Intégration Lua** : Déclenchez des sons depuis les scripts avec `PlaySound(entity, \"action\")`\n- **Éditeur visuel** : Gérez les effets sonores via l'inspecteur\n\n### 🎯 **Entity-Component-System (ECS)**\n- **Haute performance** : Optimisé pour un grand nombre d'entités\n- **Conception modulaire** : Combinez les composants selon les besoins\n- **Intégration de scripts** : Script Lua avec accès complet à l'ECS\n- **Mises à jour en temps réel** : Modification des composants en direct\n\n### 🎨 **Graphismes & Animation**\n- **Rendu de sprites** : Pipeline graphique 2D efficace\n- **Système d'animation** : Animations image par image avec boucle\n- **Système de transformation** : Position, rotation et mise à l'échelle\n- **Système de caméra** : Prise en charge de plusieurs caméras\n\n### ⚡ **Physique & Collision**\n- **Détection de collision** : Collision AABB avec optimisation spatiale\n- **Physique des corps rigides** : Gravité, vélocité et forces\n- **Rappels de collision** : Événements de collision accessibles par script\n- **Partitionnement spatial** : Optimisation par quadtree pour la performance",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "## 🎬 Click the image below to see a video demonstration:\n<p align=\"center\">\n  <a href=\"https://x.com/BaslaelWorkneh/status/1922713614697288096\">\n    <img src=\"https://raw.githubusercontent.com/basketoengine/Basketo/main/readmeimgs/image2.png\" alt=\"Basketo Engine Demo\" width=\"500\"/>\n  </a>\n</p>\n\n## � Quick Start Guide\n\n### 1. **Get Your Gemini API Key** (Optional but Recommended)\n- Visit [Google AI Studio](https://aistudio.google.com/app/apikey)\n- Sign in and create a free API key\n- This enables AI-powered features like natural language commands\n\n### 2. **Build and Run**\n```bash\ngit clone --recurse-submodules git@github.com:basketoengine/Basketo.git\ncd Basketo && mkdir build && cd build\ncmake .. && make -j$(nproc)\n./BasketoGameEngine\n```",
    "ContentSha": "vrkwp1h1jPuFomJAgN24sSpWF11/R+bZmeBhJ8FdHVw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## 🎬 Cliquez sur l'image ci-dessous pour voir une démonstration vidéo :\n<p align=\"center\">\n  <a href=\"https://x.com/BaslaelWorkneh/status/1922713614697288096\">\n    <img src=\"https://raw.githubusercontent.com/basketoengine/Basketo/main/readmeimgs/image2.png\" alt=\"Démonstration du moteur Basketo\" width=\"500\"/>\n  </a>\n</p>\n\n## � Guide de démarrage rapide\n\n### 1. **Obtenez votre clé API Gemini** (Optionnel mais recommandé)\n- Rendez-vous sur [Google AI Studio](https://aistudio.google.com/app/apikey)\n- Connectez-vous et créez une clé API gratuite\n- Cela active des fonctionnalités alimentées par l'IA comme les commandes en langage naturel\n\n### 2. **Construisez et exécutez**\n```bash\ngit clone --recurse-submodules git@github.com:basketoengine/Basketo.git\ncd Basketo && mkdir build && cd build\ncmake .. && make -j$(nproc)\n./BasketoGameEngine\n```",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "\n### 3. **Configure AI Features**\n- In the engine, go to the AI Prompt panel (bottom)\n- Look for \"🤖 Gemini AI Configuration\"\n- Enter your API key and click \"Save\"\n\n### 4. **Start Creating**\n- Try AI commands: `\"create a player at 100 200\"`\n- Add sound effects to entities in the inspector\n- Write Lua scripts or let AI generate them\n- Use the dual-window editor for live development\n\n## �🛠️ Building the Engine (Linux) 🐧\n\n### Prerequisites\n- CMake 3.26.0 or higher is required.\n- SDL2, SDL2_image, SDL2_ttf, SDL2_mixer\n- Lua 5.4\n- g++ (C++17)\n- libcurl (for AI features)\n- nlohmann/json (included as submodule)\n- ImGui (included as submodule)\n",
    "ContentSha": "MF0RXkcsg2isZnwAzCPjwkiu4plDtBiUSCQC9KWIl/o=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 3. **Configurer les fonctionnalités IA**\n- Dans le moteur, allez dans le panneau de commandes IA (en bas)\n- Cherchez \"🤖 Configuration Gemini IA\"\n- Entrez votre clé API et cliquez sur \"Enregistrer\"\n\n### 4. **Commencez à créer**\n- Essayez les commandes IA : `\"create a player at 100 200\"`\n- Ajoutez des effets sonores aux entités dans l’inspecteur\n- Écrivez des scripts Lua ou laissez l’IA les générer\n- Utilisez l’éditeur à double fenêtre pour le développement en direct\n\n## �🛠️ Compilation du moteur (Linux) 🐧\n\n### Prérequis\n- CMake 3.26.0 ou version supérieure requis.\n- SDL2, SDL2_image, SDL2_ttf, SDL2_mixer\n- Lua 5.4\n- g++ (C++17)\n- libcurl (pour les fonctionnalités IA)\n- nlohmann/json (inclus en tant que sous-module)\n- ImGui (inclus en tant que sous-module)\n",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "### Build Steps\n```bash\n# Clone the repository\ngit clone --recurse-submodules git@github.com:basketoengine/Basketo.git\n\ncd Basketo\n\nmkdir build && cd build\n\ncmake ..\n\nmake -j$(nproc)\n\n```\n\n### Running\n```bash\n./BasketoGameEngine\n\n```",
    "ContentSha": "vgtzkRz1p8Br337gzYVShQ2+MEYQJJRMIXasqs7p/lo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Étapes de compilation\n```bash\n# Cloner le dépôt\ngit clone --recurse-submodules git@github.com:basketoengine/Basketo.git\n\ncd Basketo\n\nmkdir build && cd build\n\ncmake ..\n\nmake -j$(nproc)\n\n```\n\n### Exécution\n```bash\n./BasketoGameEngine\n\n```",
    "Status": "ok"
  },
  {
    "Id": 7,
    "Content": "\nIf you want to run the physics test:\n```bash\n./PhysicsTest\n\n```\n\n## 🛠️ Building the Engine (Windows) 💻\n\n### Prerequisites\n\n1. **Visual Studio 2022 (Community Edition or higher)**  \n   Install with the following workloads:\n   - Desktop development with C++\n   - C++ CMake tools for Windows\n   - Windows 10 or 11 SDK\n\n2. **CMake** (included with Visual Studio or download from https://cmake.org/download/)\n\n3. **vcpkg** (used to install dependencies)\n\n\n---\n",
    "ContentSha": "3M/dEDD/cI2mK3eccsWj+yDAftm1LJ6wbzddaYwNrwo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Si vous souhaitez exécuter le test de physique :\n```bash\n./PhysicsTest\n\n```\n\n## 🛠️ Compilation du moteur (Windows) 💻\n\n### Prérequis\n\n1. **Visual Studio 2022 (Édition Communautaire ou supérieure)**  \n   Installez avec les charges de travail suivantes :\n   - Développement de bureau avec C++\n   - Outils CMake pour C++ sous Windows\n   - SDK Windows 10 ou 11\n\n2. **CMake** (inclus avec Visual Studio ou à télécharger depuis https://cmake.org/download/)\n\n3. **vcpkg** (utilisé pour installer les dépendances)\n\n\n---",
    "Status": "ok"
  },
  {
    "Id": 8,
    "Content": "### Install Dependencies\n\n```bash\n# Open a Developer Command Prompt for VS 2022 or PowerShell\n\n# Clone vcpkg\n\ngit clone https://github.com/microsoft/vcpkg.git\ncd vcpkg\n\n.\\bootstrap-vcpkg.bat\n\n# Install required libraries\n.\\vcpkg install sdl2 sdl2-image sdl2-ttf sdl2-mixer lua curl\n\n```\n\n---\n\n### Build Steps",
    "ContentSha": "aeENILxdrTS/r6RDwnCEeF6E1AvScceVt2+Mc2L7suE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Installer les dépendances\n\n```bash\n# Ouvrez une invite de commande développeur pour VS 2022 ou PowerShell\n\n# Clonez vcpkg\n\ngit clone https://github.com/microsoft/vcpkg.git\ncd vcpkg\n\n.\\bootstrap-vcpkg.bat\n\n# Installez les bibliothèques requises\n.\\vcpkg install sdl2 sdl2-image sdl2-ttf sdl2-mixer lua curl\n\n```\n\n---\n\n### Étapes de compilation",
    "Status": "ok"
  },
  {
    "Id": 9,
    "Content": "\n```bash\n# Clone the Basketo repository\ngit clone --recurse-submodules git@github.com:basketoengine/Basketo.git\ncd Basketo\nmkdir build && cd build\n\n# Configure with CMake\ncmake .. -DCMAKE_TOOLCHAIN_FILE=C:/path/to/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Release\n\n# Replace \"C:/path/to/vcpkg\" with the full path to your vcpkg directory\n\n# Build the engine\ncmake --build . --config Release\n```\n\n---\n\n### Running\n\n```bash\n# From the build/Release directory",
    "ContentSha": "3tVsLdEvQIrzT+zNXfGsaczgl2X9sjDTnLYyq0T82ds=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "",
    "Status": "error"
  },
  {
    "Id": 10,
    "Content": "./BasketoGameEngine.exe\n\n# To run the physics test\n./PhysicsTest.exe\n```\n\n## 📚 Documentation\n\n### Core Features\n- **[Sound Effects System](https://raw.githubusercontent.com/basketoengine/Basketo/main/docs/SoundEffectsSystem.md)**: Complete guide to multi-sound effects\n- **[Gemini API Setup](https://raw.githubusercontent.com/basketoengine/Basketo/main/docs/GeminiAPIKeySetup.md)**: Step-by-step AI configuration\n- **[Lua Scripting](assets/Scripts/)**: Example scripts and API reference\n\n### Example Usage\n\n#### AI-Powered Development\n```bash\n# Natural language commands\n\"create a player character at position 100 200\"\n\"add jumping behavior to the player\"\n\"make the enemy move faster\"\n",
    "ContentSha": "Dgbhg7zaEvDc9QqcjImdHmnxAA8aLSzKwq+tnnWuLVc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "./BasketoGameEngine.exe\n\n# Pour exécuter le test de physique\n./PhysicsTest.exe\n```\n\n## 📚 Documentation\n\n### Fonctionnalités principales\n- **[Système d'effets sonores](https://raw.githubusercontent.com/basketoengine/Basketo/main/docs/SoundEffectsSystem.md)** : Guide complet sur les effets sonores multiples\n- **[Configuration de l'API Gemini](https://raw.githubusercontent.com/basketoengine/Basketo/main/docs/GeminiAPIKeySetup.md)** : Configuration étape par étape de l'IA\n- **[Scripts Lua](assets/Scripts/)** : Exemples de scripts et référence API\n\n### Exemple d'utilisation\n\n#### Développement assisté par IA\n```bash\n# Commandes en langage naturel\n\"créer un personnage joueur à la position 100 200\"\n\"ajouter un comportement de saut au joueur\"\n\"rendre l'ennemi plus rapide\"\n",
    "Status": "ok"
  },
  {
    "Id": 11,
    "Content": "# Script generation\ngemini_script create a platformer controller with double jump\n```\n\n#### Multi-Sound Effects\n```lua\n-- In your Lua scripts\nPlaySound(entity, \"jump\")    -- Play jump sound\nPlaySound(entity, \"walk\")    -- Play walking sound\nPlaySound(entity, \"attack\")  -- Play attack sound\n\n-- Check if sound exists\nif HasSoundEffect(entity, \"jump\") then\n    PlaySound(entity, \"jump\")\nend\n```\n\n#### Component System\n- **Transform**: Position, rotation, scale\n- **Sprite**: Texture rendering\n- **Animation**: Frame-based animations\n- **Script**: Lua behavior scripts\n- **Collider**: Physics collision\n- **Rigidbody**: Physics simulation\n- **Audio**: Background music\n- **SoundEffects**: Multiple named sounds\n- **Camera**: View management\n",
    "ContentSha": "Ej1tkbHsnMKkkDfnwDI4DsrlZqENkMi26DvlCGCLHZg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Génération de script\ngemini_script créer un contrôleur de plateforme avec double saut\n```\n\n#### Effets sonores multiples\n```lua\n-- Dans vos scripts Lua\nPlaySound(entity, \"jump\")    -- Jouer le son de saut\nPlaySound(entity, \"walk\")    -- Jouer le son de marche\nPlaySound(entity, \"attack\")  -- Jouer le son d'attaque\n\n-- Vérifier si le son existe\nif HasSoundEffect(entity, \"jump\") then\n    PlaySound(entity, \"jump\")\nend\n```\n\n#### Système de composants\n- **Transform** : Position, rotation, échelle\n- **Sprite** : Rendu de textures\n- **Animation** : Animations basées sur les images\n- **Script** : Scripts de comportement Lua\n- **Collider** : Collision physique\n- **Rigidbody** : Simulation physique\n- **Audio** : Musique de fond\n- **SoundEffects** : Plusieurs sons nommés\n- **Camera** : Gestion de la vue\n",
    "Status": "ok"
  },
  {
    "Id": 12,
    "Content": "## 🤝 Get Involved\n\nWe love contributions from our community ❤️. For details on contributing or running the project for development, check out our [Contribution Guidelines](https://raw.githubusercontent.com/basketoengine/Basketo/main/ContributionGuidline.md). <!-- Assuming you have this file -->\n\n- 🐛 Found a bug? Open an issue!\n- ✨ Have a cool feature idea? Let’s hear it!\n- 💻 Want to contribute? Fork, code, and create a pull request!\n\nLet’s build this engine together and make game dev fun and easy for everyone. 🌍\n\n## 👥 Community\nWelcome with a huge hug 🤗. We are super excited for community contributions of all kinds - whether it's code improvements 📝, documentation updates 📚, issue reports 🐞, feature requests 💡, and discussions in our Discord 🗣️.\n\nJoin our community here:\n\n- 👋 [Join our Discord community](https://discord.gg/F3DswRMW)\n- ⭐ [Star us on GitHub](https://github.com/basketoengine/Basketo)\n\n## 🙏 Support us:\nWe are constantly improving, and more features and examples are coming soon 🌟. If you love this project, please drop us a star ⭐ at GitHub repo [![GitHub](https://img.shields.io/github/stars/basketoengine/Basketo?color=5B5BD6)](https://github.com/basketoengine/Basketo) to stay tuned and help us grow. 🌱\n\n---\n\nHappy coding and game making! 🎉🎮\n\n\n",
    "ContentSha": "QiYv7whQL2fwpXz6tOJxMmaTTGGKQsxoZYbhUIxfEss=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## 🤝 Participez\n\nNous adorons les contributions de notre communauté ❤️. Pour plus de détails sur la contribution ou pour exécuter le projet en mode développement, consultez notre [Guide de Contribution](https://raw.githubusercontent.com/basketoengine/Basketo/main/ContributionGuidline.md). <!-- En supposant que vous disposez de ce fichier -->\n\n- 🐛 Vous avez trouvé un bug ? Ouvrez une issue !\n- ✨ Vous avez une idée de fonctionnalité géniale ? Partagez-la avec nous !\n- 💻 Vous voulez contribuer ? Forkez, codez, et créez une pull request !\n\nConstruisons ce moteur ensemble et rendons le développement de jeux amusant et facile pour tous. 🌍\n\n## 👥 Communauté\nBienvenue avec une énorme accolade 🤗. Nous sommes super enthousiastes à propos des contributions de la communauté, quelle qu’en soit la nature - que ce soit des améliorations du code 📝, des mises à jour de la documentation 📚, des rapports de bugs 🐞, des demandes de fonctionnalités 💡, ou des discussions sur notre Discord 🗣️.\n\nRejoignez notre communauté ici :\n\n- 👋 [Rejoignez notre communauté Discord](https://discord.gg/F3DswRMW)\n- ⭐ [Ajoutez-nous en favori sur GitHub](https://github.com/basketoengine/Basketo)\n\n## 🙏 Soutenez-nous :\nNous nous améliorons constamment, et de nouvelles fonctionnalités ainsi que des exemples arriveront bientôt 🌟. Si vous aimez ce projet, laissez-nous une étoile ⭐ sur le dépôt GitHub [![GitHub](https://img.shields.io/github/stars/basketoengine/Basketo?color=5B5BD6)](https://github.com/basketoengine/Basketo) pour rester informé et nous aider à grandir. 🌱\n\n---\n\nBon codage et bon développement de jeux ! 🎉🎮",
    "Status": "ok"
  }
]