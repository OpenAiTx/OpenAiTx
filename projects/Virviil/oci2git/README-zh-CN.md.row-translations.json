[
  {
    "row": 1,
    "rowsha": "RXxvvTH61GaA2lPt/wrkEM3eHNkXuPqsF5MwHHiRXP0=",
    "originContent": "# OCI2Git",
    "translatedContent": "# OCI2Git"
  },
  {
    "row": 2,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 3,
    "rowsha": "Yt7buMMjActSOqvfCV85v0Rh1Tf/2dXj+DaIGZwA9RA=",
    "originContent": "A Rust application that converts container images (Docker, etc.) to Git repositories. Each container layer is represented as a Git commit, preserving the history and structure of the original image.",
    "translatedContent": "一个用 Rust 编写的应用程序，将容器镜像（Docker 等）转换为 Git 仓库。每个容器层都表示为一个 Git 提交，保留了原始镜像的历史和结构。"
  },
  {
    "row": 4,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 5,
    "rowsha": "//FYkPzWahj3gIMXsIh1taqlY2/2UrYXdlAZmRJvT+U=",
    "originContent": "![Demo of OCI2Git converting the nginx image](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/nginx.gif)",
    "translatedContent": "![OCI2Git 转换 nginx 镜像的演示](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/nginx.gif)"
  },
  {
    "row": 6,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 7,
    "rowsha": "nrVeE3oDH0tNFm9CX5stkYPKAaCrnePTkJZtrLHmoDg=",
    "originContent": "## Features",
    "translatedContent": "## 功能"
  },
  {
    "row": 8,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 9,
    "rowsha": "fi1muZ1SfkNwRATe0FyTwPtiBpXzDttmmQkrpmT5c14=",
    "originContent": "- Analyze Docker images and extract layer information",
    "translatedContent": "- 分析 Docker 镜像并提取层信息"
  },
  {
    "row": 10,
    "rowsha": "TxXPmzDPxz/0RRZZZGt/NJCbHCtSGYEBc8ztOOE4rSI=",
    "originContent": "- Create a Git repository where each image layer is represented as a commit",
    "translatedContent": "- 创建一个 Git 仓库，每个镜像层表示为一个提交"
  },
  {
    "row": 11,
    "rowsha": "dqDneuJMUNFjBUZjZ5o0yVWsx1+CA1cQkulQ4mWkh7U=",
    "originContent": "- Support for empty layers (ENV, WORKDIR, etc.) as empty commits",
    "translatedContent": "- 支持空层（ENV、WORKDIR 等）作为空提交"
  },
  {
    "row": 12,
    "rowsha": "JbJcIVQyhw9GQGyK3J8ORqxjXbhGYb27Zt6bioFGlxY=",
    "originContent": "- Complete metadata extraction to Markdown format",
    "translatedContent": "- 完整的元数据提取为 Markdown 格式"
  },
  {
    "row": 13,
    "rowsha": "WM41v1kLx5sRbXDs3mG8K5UtB9rj6VGAWT1oaxlLWh4=",
    "originContent": "- Extensible architecture for supporting different container engines",
    "translatedContent": "- 可扩展架构以支持不同的容器引擎"
  },
  {
    "row": 14,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 15,
    "rowsha": "4vWujHs5Ye7w1xO1jq955leyFikp9SiNLFJmgYQgCYI=",
    "originContent": "## Use Cases",
    "translatedContent": "## 使用场景"
  },
  {
    "row": 16,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 17,
    "rowsha": "E2n7dPydQYzOmSYdIJYX2UpgFCHpPJ++RZpX+UyckS8=",
    "originContent": "### Layer Diffing",
    "translatedContent": "### 层差异比较"
  },
  {
    "row": 18,
    "rowsha": "zWiOMkvkQsg7Ro/wIs9arXxy5pz3SvWMD4RVFmqGY2Q=",
    "originContent": "When troubleshooting container issues, you can use Git's powerful diffing capabilities to identify exactly what changed between any two layers. By running `git diff` between commits, engineers can see precisely which files were added, modified, or deleted, making it much easier to understand the impact of each Dockerfile instruction and locate problematic changes.",
    "translatedContent": "在排查容器问题时，可以利用 Git 强大的差异比较功能，准确识别任意两层之间的变化。通过在提交之间运行 `git diff`，工程师可以精准看到哪些文件被添加、修改或删除，更容易理解每条 Dockerfile 指令的影响并定位问题变更。"
  },
  {
    "row": 19,
    "rowsha": "CasDr/NfxbBl9ND+Q9c/7Qle4eGEAJW/lMJqrYGVKtY=",
    "originContent": "![Example for layer diff](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/layer-diff.png)",
    "translatedContent": "![层差异比较示例](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/layer-diff.png)"
  },
  {
    "row": 20,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 21,
    "rowsha": "E/blJ113pQ9M93xEk5CafWzLs7QhCQbHp1pPdtKgLpw=",
    "originContent": "### Origin Tracking",
    "translatedContent": "### 来源追踪"
  },
  {
    "row": 22,
    "rowsha": "6BJyqkc8ucX6zX6CQ5KR2G4e+XqwZeBjzU6vd8G128Y=",
    "originContent": "Using `git blame`, developers can quickly determine which layer introduced a specific file or line of code. This is particularly valuable when diagnosing issues with configuration files or dependencies. Instead of manually inspecting each layer, you can immediately trace the origin of any file back to its source layer and corresponding Dockerfile instruction.",
    "translatedContent": "通过使用 `git blame`，开发者可以快速确定具体文件或代码行是由哪个层引入的。这在诊断配置文件或依赖问题时尤其有价值。无需手动检查每层，即可立即追溯任意文件的来源层及对应的 Dockerfile 指令。"
  },
  {
    "row": 23,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 24,
    "rowsha": "tjbbryF+A9tu7pgePp78TjDMWcBFPeqdNCHhWbK20/I=",
    "originContent": "### File Lifecycle Tracking",
    "translatedContent": "### 文件生命周期跟踪"
  },
  {
    "row": 25,
    "rowsha": "X7Ul9KO1ZSdjb3AA/dyMaOUGjVoEq/TVN3ic4n8hwVU=",
    "originContent": "OCI2Git enables you to follow a specific file's journey throughout the container image's history. You can observe when a file was initially created, how it was modified across layers, and if/when it was eventually removed. This comprehensive view helps understand file evolution without having to manually track changes across potentially dozens of layers.",
    "translatedContent": "OCI2Git 使您能够跟踪特定文件在容器镜像历史中的演变。您可以观察文件最初何时创建，如何跨层被修改，以及是否/何时被最终删除。该全面视图有助于理解文件的演变过程，而无需手动追踪可能多达数十层的更改。"
  },
  {
    "row": 26,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 27,
    "rowsha": "CFZY3Krc9gFeR7X13SIQ0WBlPsXpXqk4COWVuQ+negw=",
    "originContent": "To track the history of a file in your container image — including when it first appeared, was changed, or deleted — you can use these Git commands after conversion:",
    "translatedContent": "要跟踪容器镜像中某个文件的历史——包括首次出现、修改或删除时间——转换后可以使用以下 Git 命令："
  },
  {
    "row": 28,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 29,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 30,
    "rowsha": "HQJG+JPZtIzO2/N+XpAayqc5/W+JpoWndXPo/mwDtHM=",
    "originContent": "# Full history of a file (including renames)",
    "translatedContent": "# Full history of a file (including renames)"
  },
  {
    "row": 31,
    "rowsha": "CtkVUkixJrEqQQNw1x4/A/UjF662xT/SmaoxIeKgzx0=",
    "originContent": "git log --follow -- /rootfs/my/file/path",
    "translatedContent": "git log --follow -- /rootfs/my/file/path"
  },
  {
    "row": 32,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 33,
    "rowsha": "+5HFk91zfi3xUwcySpt5aBg198utCjaXx/t+jNbycWo=",
    "originContent": "# First appearance (i.e. creation) - see which layer introduced the file",
    "translatedContent": "# First appearance (i.e. creation) - see which layer introduced the file"
  },
  {
    "row": 34,
    "rowsha": "6HnF5QDnEyn95lL3ni48aa1k4ax4Sgq1tqQG+ceSVok=",
    "originContent": "git log --diff-filter=A -- /rootfs/my/file/path",
    "translatedContent": "git log --diff-filter=A -- /rootfs/my/file/path"
  },
  {
    "row": 35,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 36,
    "rowsha": "q74lJSPNP3o12/pIhSV3SEgSVBRUDrN9T0nftZbEVtg=",
    "originContent": "# All changes made to the file (with diffs)",
    "translatedContent": "# All changes made to the file (with diffs)"
  },
  {
    "row": 37,
    "rowsha": "F27msy3tqZ5fh10nzSsSmSCibSe6mETnpu45xI/tqAE=",
    "originContent": "git log -p --follow -- /rootfs/my/file/path",
    "translatedContent": "git log -p --follow -- /rootfs/my/file/path"
  },
  {
    "row": 38,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 39,
    "rowsha": "JXRDWMdVwBL1G4D3+i84Mt7CPGlDY0O4R+NFb8iedTs=",
    "originContent": "# When the file was deleted",
    "translatedContent": "# When the file was deleted"
  },
  {
    "row": 40,
    "rowsha": "lIJRO1z/Aqo4htQWZpbuPDbQn08JFxCniaJULrKdzHs=",
    "originContent": "git log --diff-filter=D -- /rootfs/my/file/path",
    "translatedContent": "git log --diff-filter=D -- /rootfs/my/file/path"
  },
  {
    "row": 41,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 42,
    "rowsha": "gNOmeCWHta34jtrsOJ02Ji8DzKxjJEawkLau93d6SCI=",
    "originContent": "# Show short commit info (concise layer history)",
    "translatedContent": "# Show short commit info (concise layer history)"
  },
  {
    "row": 43,
    "rowsha": "iHuliTkKrH25h4zoknCHu2b83dvDxW9TyjgbgxLzW24=",
    "originContent": "git log --follow --oneline -- /rootfs/my/file/path",
    "translatedContent": "git log --follow --oneline -- /rootfs/my/file/path"
  },
  {
    "row": 44,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 45,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "这些命令使得追踪任意文件在容器层之间的完整历史变得简单，无需手动提取和比较层的 tar 包的复杂操作。"
  },
  {
    "row": 46,
    "rowsha": "9fN+GKu+hL+eGAsr4x5QSBdDuJ7YVua7P6+/wylnPgI=",
    "originContent": "These commands make it simple to trace any file's complete history across container layers without the complexity of manually extracting and comparing layer tarballs.",
    "translatedContent": ""
  },
  {
    "row": 47,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### 多层分析"
  },
  {
    "row": 48,
    "rowsha": "LiMzICDoPJ5+qOaHfyJO4djRWTELaIJ08XP2NcOBIks=",
    "originContent": "### Multi-Layer Analysis",
    "translatedContent": "有时，最有洞察力的比较来自于检查多个非连续层之间的变化。使用 OCI2Git，您可以利用 Git 的比较工具分析组件在多个构建阶段的演变，识别仅通过观察相邻层无法发现的模式。"
  },
  {
    "row": 49,
    "rowsha": "X9UHirDpVMu7uLvtmuYYeFbwupkrPEHBYYpKRa2jlNw=",
    "originContent": "Sometimes the most insightful comparisons come from examining changes across multiple non-consecutive layers. With OCI2Git, you can use Git's comparison tools to analyze how components evolved over multiple build stages, identifying patterns that might be invisible when looking only at adjacent layers.",
    "translatedContent": ""
  },
  {
    "row": 50,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### 层探索"
  },
  {
    "row": 51,
    "rowsha": "j+ffQV2C7DT7/GxNYpAmcSdsWzgEelcoJTbROPm3EiQ=",
    "originContent": "### Layer Exploration",
    "translatedContent": "通过使用 `git checkout` 切换到任意特定提交，您可以检查容器文件系统在该层的确切状态。这样开发者就能在镜像创建过程中的任意时点检查文件和目录的精确状态，在调试或分析容器行为时提供宝贵的上下文。"
  },
  {
    "row": 52,
    "rowsha": "FBo5CohOy9c+YZaTko1cbJ/2fAb7iKQ2oozCb8Z6rBw=",
    "originContent": "By using `git checkout` to move to any specific commit, you can examine the container filesystem exactly as it existed at that layer. This allows developers to inspect the precise state of files and directories at any point in the image's creation process, providing invaluable context when debugging or examining container behavior.",
    "translatedContent": "![切换到先前提交](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/checkout.png)"
  },
  {
    "row": 53,
    "rowsha": "0PCWuFzpLEM5zEVE4k2FHFyIXyf1wGVJHJha31NNUGc=",
    "originContent": "![Checkout to previous commit](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/checkout.png)",
    "translatedContent": ""
  },
  {
    "row": 54,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### 多镜像分析"
  },
  {
    "row": 55,
    "rowsha": "IIpbeFQmbsUcYSI0Md1+mK0az/WdLCjeULLOY/COazw=",
    "originContent": "### Multi-Image Analysis",
    "translatedContent": ""
  },
  {
    "row": 56,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "在处理具有共同祖先的多个容器镜像时，OCI2Git 仅在镜像实际分叉时智能创建分支。这样，您可以在单一仓库中分析多个相关镜像，同时保留它们的共同历史。"
  },
  {
    "row": 57,
    "rowsha": "2uKOHRns0K5f4MhOE5ob7KEkTc0/cWfmmZPJcNf1so8=",
    "originContent": "When working with multiple container images that share common ancestry, OCI2Git intelligently creates branches only when the images actually diverge. This allows you to analyze multiple related images in a single repository while preserving their common history.",
    "translatedContent": ""
  },
  {
    "row": 58,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 59,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 60,
    "rowsha": "gJ3lk3zI05bODtNOn1/mcREN4YUrNNxLpmj4aTdGpc8=",
    "originContent": "# Convert first image to create the base repository",
    "translatedContent": "# Convert first image to create the base repository"
  },
  {
    "row": 61,
    "rowsha": "iURAR2kaX3xVJcVIoVo/i0UC3owmVxtlS/OlOpOH9R0=",
    "originContent": "oci2git postgres:16.9-alpine3.21 -o alp",
    "translatedContent": "oci2git postgres:16.9-alpine3.21 -o alp"
  },
  {
    "row": 62,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 63,
    "rowsha": "CY0ID/KyFEol9kOocxnfF0BBHgc4aG/8X59RHCpb03A=",
    "originContent": "# Convert second image to the same output folder",
    "translatedContent": "# Convert second image to the same output folder"
  },
  {
    "row": 64,
    "rowsha": "9wfMofG913V7Y1BzIhftfQ8WIRTn2GAAQrHcqSTSkwE=",
    "originContent": "oci2git nginx:1.28.0-alpine-slim -o alp",
    "translatedContent": "oci2git nginx:1.28.0-alpine-slim -o alp"
  },
  {
    "row": 65,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 66,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "OCI2Git 会自动检测镜像之间共享的层，并创建一个反映它们共同基础的分支结构。Git 历史将显示："
  },
  {
    "row": 67,
    "rowsha": "6LTUD8+pcJMZgBPG/5v5lVPVQ9Hxe2XEKoMOmBTTGLI=",
    "originContent": "OCI2Git automatically detects shared layers between images and creates a branching structure that reflects their common base. The Git history will show:",
    "translatedContent": "- 包含所有共享层的公共主干"
  },
  {
    "row": 68,
    "rowsha": "uIJA8N3Yn8nJIShppfbe5/VqQwvEjS/vdXZMLV74Dqw=",
    "originContent": "- A common trunk containing all shared layers",
    "translatedContent": "- 仅在镜像实际不同的时候分叉的独立分支"
  },
  {
    "row": 69,
    "rowsha": "IB8n3F4BtXDld8GlF6SeKKkZ+a+kXrWm27CNe0cgv1c=",
    "originContent": "- Separate branches that diverge only when the images actually differ",
    "translatedContent": "- 清晰地展示镜像共享共同祖先的位置以及何处变得独特"
  },
  {
    "row": 70,
    "rowsha": "UBel4LiGyWz4YAk730NGfcSjHY1kk3xu3gBC3H2hfxk=",
    "originContent": "- Clear visualization of where images share common ancestry vs. where they become unique",
    "translatedContent": "- 智能重复处理：如果完全相同的镜像被处理两次，算法会在最终元数据提交之前检测到这一点并跳过创建重复分支"
  },
  {
    "row": 71,
    "rowsha": "Yq5IgSM+QgVoSd6smqIoif4IAvi+RdxFI+4nvv5uH28=",
    "originContent": "- Smart duplicate handling: if the exact same image is processed twice, the algorithm detects this before the final metadata commit and skips creating a duplicate branch",
    "translatedContent": ""
  },
  {
    "row": 72,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "这种方法尤其适用于："
  },
  {
    "row": 73,
    "rowsha": "PakMj8z4HRkjhYpL7PjDSNw57Y3OGyZeSLa/Z16wQf4=",
    "originContent": "This approach is particularly valuable for:",
    "translatedContent": "- **镜像家族分析**：理解不同变体镜像（不同版本、架构或配置）之间的关系"
  },
  {
    "row": 74,
    "rowsha": "uSDvHuhYhLUIzktSDixyAwvQpUrpMzLQRnssT0JsguQ=",
    "originContent": "- **Image Family Analysis**: Understanding how different variants of an image (different versions, architectures, or configurations) relate to each other",
    "translatedContent": "- **基础镜像影响**：准确查看基础镜像的更改如何影响多个派生镜像"
  },
  {
    "row": 75,
    "rowsha": "Yo0kOfD+YrkFq8V58X2u2Cb7DBS35yn5ifLYnG6+XB0=",
    "originContent": "- **Base Image Impact**: Seeing exactly how changes to a base image affect multiple derived images",
    "translatedContent": "- **优化机会**：识别可以在镜像变体之间更好利用的共享组件"
  },
  {
    "row": 76,
    "rowsha": "ki3fH0UPzJ7A7KweKewJ0qO2e8h0iAP1uwwL64nh5VI=",
    "originContent": "- **Optimization Opportunities**: Identifying shared components that could be better leveraged across image variants",
    "translatedContent": ""
  },
  {
    "row": 77,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "![多镜像仓库结构，显示共享基础和分叉分支](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/multiimage.png)"
  },
  {
    "row": 78,
    "rowsha": "BbN5OLYB4s+kmmpRubPeS7o9xcI4EIqsB8NFc29QUQI=",
    "originContent": "![Multi-image repository structure showing shared base and diverging branches](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/multiimage.png)",
    "translatedContent": ""
  },
  {
    "row": 79,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### 其他使用场景"
  },
  {
    "row": 80,
    "rowsha": "D4/0KP+uRgYhIhVFEBoyiqt95uyOgb7+oYn24/0QCdY=",
    "originContent": "### Additional Use Cases",
    "translatedContent": ""
  },
  {
    "row": 81,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "- **安全审计**：准确识别易受攻击的软件包或配置何时引入，并追溯到具体的构建指令。"
  },
  {
    "row": 82,
    "rowsha": "XpiOHvscMgQVCt9dw8vIqza+SY8H4+PornFuTrVyvvg=",
    "originContent": "- **Security Auditing**: Identify exactly when vulnerable packages or configurations were introduced and trace them back to specific build instructions.",
    "translatedContent": "- **镜像优化**：分析层结构，发现冗余操作或可合并的大文件，帮助减小镜像体积。"
  },
  {
    "row": 83,
    "rowsha": "ht04W08EP7CJDOoh0DwD/Dozp/1fC8UYEIX5+R6ICwk=",
    "originContent": "- **Image Optimization**: Analyze layer structures to find redundant operations or large files that could be consolidated, helping to reduce image size.",
    "translatedContent": "- **依赖管理**：监控依赖何时被添加、升级或移除，贯穿整个镜像历史。"
  },
  {
    "row": 84,
    "rowsha": "U4Wj74BqfCGU6N6MlI+ZwqdXxuJ9sFOjYpdn5xAp8Uw=",
    "originContent": "- **Dependency Management**: Monitor when dependencies were added, upgraded, or removed across the image history.",
    "translatedContent": "- **构建过程改进**：检查层组成，优化 Dockerfile 指令以实现更好的缓存和更小的镜像大小。"
  },
  {
    "row": 85,
    "rowsha": "N42jLPvwR5fiEcM4X17ISprr2UjtkFiYkMmB4n8GuP4=",
    "originContent": "- **Build Process Improvement**: Examine layer composition to optimize Dockerfile instructions for better caching and smaller image size.",
    "translatedContent": "- **跨镜像对比**：将多个相关镜像转换为 Git 仓库，利用 Git 的对比工具分析它们的差异和共性。"
  },
  {
    "row": 86,
    "rowsha": "qLA3g0haMoRlswu5jqH5D9IkPYPNZxCHuo51hYpI4Po=",
    "originContent": "- **Cross-Image Comparison**: Convert multiple related images to Git repositories and use Git's comparison tools to analyze their differences and commonalities.",
    "translatedContent": ""
  },
  {
    "row": 87,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## 安装"
  },
  {
    "row": 88,
    "rowsha": "oV0SUDvwD2VN8Gi9nlr2JZ2xcDrASmE2W5kc5SVX5eo=",
    "originContent": "## Installation",
    "translatedContent": ""
  },
  {
    "row": 89,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### 从源码安装"
  },
  {
    "row": 90,
    "rowsha": "smCviOjFIAlOvuDZi5hcf9TF4fvruU1pMREpfc9h7z4=",
    "originContent": "### From Source",
    "translatedContent": ""
  },
  {
    "row": 91,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 92,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 93,
    "rowsha": "EJ1kGcOyM89S1RwOEHSj/NB/bjY/T7n0DRgAblC5zSQ=",
    "originContent": "# Clone the repository",
    "translatedContent": "# Clone the repository"
  },
  {
    "row": 94,
    "rowsha": "GgDmsyotXIYA9lPAF8UqVbDmtab+bmOTjtIHmgptW58=",
    "originContent": "git clone https://github.com/virviil/oci2git.git",
    "translatedContent": "git clone https://github.com/virviil/oci2git.git"
  },
  {
    "row": 95,
    "rowsha": "Cg0UvvWHJIAgHoDR/ghkoy1Oa46TeGoV+FMOkIsVcwU=",
    "originContent": "cd oci2git",
    "translatedContent": "cd oci2git"
  },
  {
    "row": 96,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 97,
    "rowsha": "H6+xT/LyFn0O/PQ/zBIXSd5Jl6SHlzOBquL67WbGC7M=",
    "originContent": "# Install locally",
    "translatedContent": "# Install locally"
  },
  {
    "row": 98,
    "rowsha": "UrfYV89HEr7Y2LOJNzJS2dfNsaKrBlUdCgPrc5ar/XM=",
    "originContent": "cargo install --path .",
    "translatedContent": "cargo install --path ."
  },
  {
    "row": 99,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 100,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 101,
    "rowsha": "s0ICCxui+k3ysWndrW/JgMzRMUhamp4AwQ4C8sYtiQA=",
    "originContent": "### From Crates.io",
    "translatedContent": "### 来自 Crates.io"
  },
  {
    "row": 102,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 103,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 104,
    "rowsha": "OQT+ZkNKWvK3aZcEdqXoFRvgjGUcASoUE9xU/xk+/L4=",
    "originContent": "cargo install oci2git",
    "translatedContent": "cargo install oci2git"
  },
  {
    "row": 105,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 106,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 107,
    "rowsha": "Y7/WGgVhslWiyqCi463Qkcp+Mn8voGpAfLsv80G4WNg=",
    "originContent": "## Usage",
    "translatedContent": "## 用法"
  },
  {
    "row": 108,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 109,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 110,
    "rowsha": "2WRwWCw177jhmY5buD8ojF4vHlooOLdyRvwnmrgEYWo=",
    "originContent": "oci2git [OPTIONS] <IMAGE>",
    "translatedContent": "oci2git [OPTIONS] <IMAGE>"
  },
  {
    "row": 111,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 112,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 113,
    "rowsha": "oSgcDB7IRyqQzvCaBTUTZjOSF0fLxHKz1ngn/NkHWig=",
    "originContent": "Arguments:",
    "translatedContent": "Arguments:"
  },
  {
    "row": 114,
    "rowsha": "72lmQzDj4J9lGCyDB3LTUf9xx2x9vXL+Ltt98pd0hIk=",
    "originContent": "  `<IMAGE>`  Image name to convert (e.g., 'ubuntu:latest') or path to tarball when using the tar engine",
    "translatedContent": "  `<IMAGE>`  要转换的镜像名称（例如，'ubuntu:latest'）或使用 tar 引擎时的 tar 包路径"
  },
  {
    "row": 115,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 116,
    "rowsha": "NnQx/WZLtobZ/9ITM5sTgv2OFQnCH83If6v2i9FvEzM=",
    "originContent": "Options:",
    "translatedContent": "Options:"
  },
  {
    "row": 117,
    "rowsha": "DVu2KWbsYSpZe0KWcYqDtTpSdS4mtD7GWWbWSGb70Oc=",
    "originContent": "  `-o, --output <o>`  Output directory for Git repository [default: ./container_repo]",
    "translatedContent": "  `-o, --output <o>`  Git 仓库输出目录 [默认值: ./container_repo]"
  },
  {
    "row": 118,
    "rowsha": "a9fQWVyCS1P9nAlLPlXbfd+NJtje69DmQ3azfee4ix4=",
    "originContent": "  `-e, --engine <ENGINE>`  Container engine to use (docker, nerdctl, tar) [default: docker]",
    "translatedContent": "  `-e, --engine <ENGINE>`  使用的容器引擎（docker、nerdctl、tar）[默认值: docker]"
  },
  {
    "row": 119,
    "rowsha": "pfNaVuEMbOBYDo771cuen9Xm6tIA5QTaymnUytkWncg=",
    "originContent": "  `-h, --help`            Print help information",
    "translatedContent": "  `-h, --help`            打印帮助信息"
  },
  {
    "row": 120,
    "rowsha": "3eBdsxBaF1NM21tvY2+/U1zZoXNXI+AYag5nMbKQuZE=",
    "originContent": "  `-V, --version`         Print version information",
    "translatedContent": "  `-V, --version`         打印版本信息"
  },
  {
    "row": 121,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 122,
    "rowsha": "YGL4UqTuaFB0ZGIuBIgF08qREavcDoYEpCh+1s8q9Hw=",
    "originContent": "Environment Variables:",
    "translatedContent": "Environment Variables:"
  },
  {
    "row": 123,
    "rowsha": "L/o5NQhvt3s5wMDzH0UBcCbYTr+YSY+3NRMsKy0uOts=",
    "originContent": "  `TMPDIR`  Set this environment variable to change the default location used for intermediate data processing. This is platform-dependent (e.g., `TMPDIR` on Unix/macOS, `TEMP` or `TMP` on Windows).",
    "translatedContent": "  `TMPDIR`  设置此环境变量以更改用于中间数据处理的默认位置。此位置依赖于平台（例如，Unix/macOS 上的 `TMPDIR`，Windows 上的 `TEMP` 或 `TMP`）。"
  },
  {
    "row": 124,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 125,
    "rowsha": "DRmrRjGXhXaABVNjE/Ar07m3eartgu6sW/en95atPvE=",
    "originContent": "## Examples",
    "translatedContent": "## Examples"
  },
  {
    "row": 126,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 127,
    "rowsha": "tOe+OVX+wmFfmqDbxSgitmk7kWcEwwrN773KBCziJHI=",
    "originContent": "Using Docker engine (default):",
    "translatedContent": "使用 Docker 引擎（默认）："
  },
  {
    "row": 128,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 129,
    "rowsha": "CwijH6mSrhzZB8aiSJpD0fbRWryeaub9zJijG6SDIic=",
    "originContent": "oci2git -o ./ubuntu-repo ubuntu:latest",
    "translatedContent": "oci2git -o ./ubuntu-repo ubuntu:latest"
  },
  {
    "row": 130,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 131,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 132,
    "rowsha": "lchakMbjmv1co1SLeMYNOKe+JMNJchmUzW4HrVyzifo=",
    "originContent": "Using an already downloaded image tarball:",
    "translatedContent": "使用已下载的镜像 tar 包："
  },
  {
    "row": 133,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 134,
    "rowsha": "NSDqpfFBxy00SAPgyBe+P5tig3WY9lqE/l8SRgvZnK4=",
    "originContent": "oci2git -e tar -o ./ubuntu-repo /path/to/ubuntu-latest.tar",
    "translatedContent": "oci2git -e tar -o ./ubuntu-repo /path/to/ubuntu-latest.tar"
  },
  {
    "row": 135,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 136,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 137,
    "rowsha": "JhyrPFQKgZ6fhAnxD3vIs/T43bxfz9m3OnBQ6JvohcA=",
    "originContent": "The tar engine expects a valid OCI format tarball, which is typically created with `docker save`:",
    "translatedContent": "tar 引擎期望一个有效的 OCI 格式 tar 包，通常使用 `docker save` 创建："
  },
  {
    "row": 138,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 139,
    "rowsha": "swtiJp2yNOZ6Ht2Rb0LC9bkkw94oTuAnkm9LK8A2Blo=",
    "originContent": "# Create a tarball from a local Docker image",
    "translatedContent": "# Create a tarball from a local Docker image"
  },
  {
    "row": 140,
    "rowsha": "0dJQePuNnqBLk40Y93ZgPm8P3Swzsjd/UCAkmwLsRmw=",
    "originContent": "docker save -o ubuntu-latest.tar ubuntu:latest",
    "translatedContent": "docker save -o ubuntu-latest.tar ubuntu:latest"
  },
  {
    "row": 141,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 142,
    "rowsha": "ezIq3aqK4rOW/G624kkj8OmBApTf0SM6DdJ3trUC8Sk=",
    "originContent": "# Convert the tarball to a Git repository",
    "translatedContent": "# Convert the tarball to a Git repository"
  },
  {
    "row": 143,
    "rowsha": "cGK8BEjM9KLqC11KAFA5FBzvWyaQeLcvI3rB2tWEgdE=",
    "originContent": "oci2git -e tar -o ./ubuntu-repo ubuntu-latest.tar",
    "translatedContent": "oci2git -e tar -o ./ubuntu-repo ubuntu-latest.tar"
  },
  {
    "row": 144,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 145,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "这将在 `./ubuntu-repo` 中创建一个 Git 仓库，包含："
  },
  {
    "row": 146,
    "rowsha": "OOWYf6W46cviTyPAAxNpPJfVj3Fz3L4yTa0jzxfElPw=",
    "originContent": "This will create a Git repository in `./ubuntu-repo` containing:",
    "translatedContent": "- `Image.md` - 以 Markdown 格式完整描述镜像的元数据"
  },
  {
    "row": 147,
    "rowsha": "r5qWFXFkojxcgiNwLnGMlSadWVnCbfub6qM8e9q/8Nw=",
    "originContent": "- `Image.md` - Complete metadata about the image in Markdown format",
    "translatedContent": "- `rootfs/` - 来自容器的文件系统内容"
  },
  {
    "row": 148,
    "rowsha": "maGh1e8JV7Pxg6B5BF5ccKdr3748ZRk9+1VXfyfkCCk=",
    "originContent": "- `rootfs/` - The filesystem content from the container",
    "translatedContent": ""
  },
  {
    "row": 149,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "Git 历史反映了容器的层历史："
  },
  {
    "row": 150,
    "rowsha": "wCWXhTKQ6DvpyP8SADyuKHM/QiDACq4ZQnoi9qcq+n8=",
    "originContent": "The Git history reflects the container's layer history:",
    "translatedContent": "- 第一次提交仅包含带有完整元数据的 `Image.md` 文件"
  },
  {
    "row": 151,
    "rowsha": "mKSS8K3EnUBF75usNbBpi8f03aCRxjCDSod1fw5UlPo=",
    "originContent": "- The first commit contains only the `Image.md` file with full metadata",
    "translatedContent": "- 之后的每次提交代表原始镜像的一个层"
  },
  {
    "row": 152,
    "rowsha": "DumNUFJcRb5coqibkEQ+d640i1Rp+R8PheJDIxOPrIs=",
    "originContent": "- Each subsequent commit represents a layer from the original image",
    "translatedContent": "- 提交包含 Dockerfile 命令作为提交信息"
  },
  {
    "row": 153,
    "rowsha": "nAIJv9HcEeQMdJh37pgdGN/infZD9mMXC360e1LQkdY=",
    "originContent": "- Commits include the Dockerfile command as the commit message",
    "translatedContent": ""
  },
  {
    "row": 154,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## 仓库结构"
  },
  {
    "row": 155,
    "rowsha": "4YmSzpzFxS1sIl9f+qnViulCsiQaK92OjsAy48LamXw=",
    "originContent": "## Repository Structure",
    "translatedContent": ""
  },
  {
    "row": 156,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 157,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 158,
    "rowsha": "ymd463MLTfw5xIKiUKp3sacrkQKq/Rg5QrDuNbpDvcY=",
    "originContent": "repository/",
    "translatedContent": "repository/"
  },
  {
    "row": 159,
    "rowsha": "rGSVTlNtMKKBIW1FxCJWjanSdr8dlkP7O6zHyMZodq8=",
    "originContent": "├── .git/",
    "translatedContent": "├── .git/"
  },
  {
    "row": 160,
    "rowsha": "mNFu3LETomltwZN7TAyCPLhKNPjKB0qREbpCI/mLuWk=",
    "originContent": "├── Image.md     # Complete image metadata",
    "translatedContent": "├── Image.md     # Complete image metadata"
  },
  {
    "row": 161,
    "rowsha": "PoxusKysn7mnRdYEig5Hq6oqPxeAE2uQdy2gcbouJ4U=",
    "originContent": "└── rootfs/      # Filesystem content from the container",
    "translatedContent": "└── rootfs/      # Filesystem content from the container"
  },
  {
    "row": 162,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 163,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## 要求"
  },
  {
    "row": 164,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 165,
    "rowsha": "mMM7CgcUhEutaXLQUe7dHnP5fzAA/B384D1dAMFg/uA=",
    "originContent": "## Requirements",
    "translatedContent": "- Rust 2021 版本"
  },
  {
    "row": 166,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "- Docker CLI（用于 Docker 引擎支持）"
  },
  {
    "row": 167,
    "rowsha": "Us8fEFZmHC5X2cJkY2OvtPWFQAio7vkyVb6AuvWar/8=",
    "originContent": "- Rust 2021 edition",
    "translatedContent": "- Git"
  },
  {
    "row": 168,
    "rowsha": "y2x00WuBv+Za3+ZZ4PNU5MmCW6c1ChHUs7aZPMjrozg=",
    "originContent": "- Docker CLI (for Docker engine support)",
    "translatedContent": ""
  },
  {
    "row": 169,
    "rowsha": "rCZ/3ibSx3AY5DZNLpABDQtGlwv/91+MA66GxZb8src=",
    "originContent": "- Git",
    "translatedContent": "## 许可证"
  },
  {
    "row": 170,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 171,
    "rowsha": "bFSaVtsB4CHySNjaeCiaMZfT24b+DTbTM4HQ38cR6Lw=",
    "originContent": "## License",
    "translatedContent": "MIT"
  },
  {
    "row": 172,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 173,
    "rowsha": "5dz/6Da27IpY5JJBm1UOZfuMvcMIUDl55drLM6x+o7c=",
    "originContent": "MIT",
    "translatedContent": ""
  }
]