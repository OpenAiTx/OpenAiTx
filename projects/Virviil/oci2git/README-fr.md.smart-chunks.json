[
  {
    "Id": 1,
    "Content": "\n<div align=\"right\">\n  <details>\n    <summary >üåê Language</summary>\n    <div>\n      <div align=\"center\">\n        <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=en\">English</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ja\">Êó•Êú¨Ë™û</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ko\">ÌïúÍµ≠Ïñ¥</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=th\">‡πÑ‡∏ó‡∏¢</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=fr\">Fran√ßais</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=de\">Deutsch</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=es\">Espa√±ol</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=it\">Italiano</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ru\">–†—É—Å—Å–∫–∏–π</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=pt\">Portugu√™s</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=nl\">Nederlands</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=pl\">Polski</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=tr\">T√ºrk√ße</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=vi\">Ti·∫øng Vi·ªát</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=id\">Bahasa Indonesia</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=as\">‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ</\n      </div>\n    </div>\n  </details>\n</div>\n\n# OCI2Git\n\nA Rust application that converts container images (Docker, etc.) to Git repositories. Each container layer is represented as a Git commit, preserving the history and structure of the original image.\n\n![Demo of OCI2Git converting the nginx image](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/nginx.gif)\n\n## Features\n",
    "ContentSha": "wsUDBAghVA46mgjW/0PdhV0nKVhXa8pat1jRvRsNBcI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n<div align=\"right\">\n  <details>\n    <summary >üåê Langue</summary>\n    <div>\n      <div align=\"center\">\n        <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=en\">English</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ja\">Êó•Êú¨Ë™û</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ko\">ÌïúÍµ≠Ïñ¥</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=th\">‡πÑ‡∏ó‡∏¢</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=fr\">Fran√ßais</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=de\">Deutsch</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=es\">Espa√±ol</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=it\">Italiano</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ru\">–†—É—Å—Å–∫–∏–π</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=pt\">Portugu√™s</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=nl\">Nederlands</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=pl\">Polski</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=tr\">T√ºrk√ße</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=vi\">Ti·∫øng Vi·ªát</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=id\">Bahasa Indonesia</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=as\">‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ</\n      </div>\n    </div>\n  </details>\n</div>\n\n# OCI2Git\n\nUne application Rust qui convertit les images de conteneur (Docker, etc.) en d√©p√¥ts Git. Chaque couche du conteneur est repr√©sent√©e comme un commit Git, pr√©servant l‚Äôhistorique et la structure de l‚Äôimage originale.\n\n![D√©mo d'OCI2Git convertissant l'image nginx](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/nginx.gif)\n\n## Fonctionnalit√©s\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "cWgam+tnnXudu7i74+ahMEGk/A9dQS+EwWLAIfi3dHk=",
        "originContent": "<div align=\"right\">",
        "translatedContent": "<div align=\"right\">"
      },
      {
        "row": 3,
        "rowsha": "orOcu5ARna/hb3RUkj6dBI8pHTM3WHeTvby17l5E0h0=",
        "originContent": "  <details>",
        "translatedContent": "  <details>"
      },
      {
        "row": 4,
        "rowsha": "TtgkLzblnvP0q9aAIVXt6s2LczXjy5k+QvHKcU0/5Ms=",
        "originContent": "    <summary >üåê Language</summary>",
        "translatedContent": "    <summary >üåê Langue</summary>"
      },
      {
        "row": 5,
        "rowsha": "fZtk4rPTAJEEslnbhSVkHEcPlsctYSzAV7CDPL3rJmA=",
        "originContent": "    <div>",
        "translatedContent": "    <div>"
      },
      {
        "row": 6,
        "rowsha": "9KQxOeJSigvTmGWO+mtnl8kZY9zQfueoy8sk4lYm09Q=",
        "originContent": "      <div align=\"center\">",
        "translatedContent": "      <div align=\"center\">"
      },
      {
        "row": 7,
        "rowsha": "K5FORXhiyNomCxcGwIgUemCHIqZZ79R0b94zmyJ5+dI=",
        "originContent": "        <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=en\">English</a>",
        "translatedContent": "        <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=en\">English</a>"
      },
      {
        "row": 8,
        "rowsha": "PBn2fZFLPPOzkzXjVwasq75tw/3Aph5gK+FtJ799vCM=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a>"
      },
      {
        "row": 9,
        "rowsha": "5suJZ8r2OJDgmEPCoXbfBtPKucer3SePFFaEQ29rJGw=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a>"
      },
      {
        "row": 10,
        "rowsha": "YJ/wv7VoLAvGznqBTXVZGjIVbB08cdhRlAlIoOwChdo=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ja\">Êó•Êú¨Ë™û</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ja\">Êó•Êú¨Ë™û</a>"
      },
      {
        "row": 11,
        "rowsha": "GdxjcBOXDRXe37BC7YKbwHqRjj8qQUa4AWVU3AlxdMw=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ko\">ÌïúÍµ≠Ïñ¥</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ko\">ÌïúÍµ≠Ïñ¥</a>"
      },
      {
        "row": 12,
        "rowsha": "hEJUPz3f6GensimAXOy1isnCsIrjsqIitTkBfqFsMnA=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a>"
      },
      {
        "row": 13,
        "rowsha": "jlHJhaRCQfXsRUffG2FgAzkXDelSM+vIf5cRCRkYXjo=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=th\">‡πÑ‡∏ó‡∏¢</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=th\">‡πÑ‡∏ó‡∏¢</a>"
      },
      {
        "row": 14,
        "rowsha": "ulMNqD6/ZYJxIKzj6ov+bOEEphjM3gnsITX5Cl6NMQ0=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=fr\">Fran√ßais</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=fr\">Fran√ßais</a>"
      },
      {
        "row": 15,
        "rowsha": "GKKSDoeHn3t89DFSzrGbhv+XhyZqmusVNm5MvuBHCxk=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=de\">Deutsch</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=de\">Deutsch</a>"
      },
      {
        "row": 16,
        "rowsha": "BsS+kkR0nE+Fc0O6wwVYGW6NjhhWEOEnB/FHySkMQY8=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=es\">Espa√±ol</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=es\">Espa√±ol</a>"
      },
      {
        "row": 17,
        "rowsha": "aur2UTTJiIiierHGidc3OihUXQ7OuPA9ItoF/9UpFy0=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=it\">Italiano</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=it\">Italiano</a>"
      },
      {
        "row": 18,
        "rowsha": "m5lzNZv/2I8t4b6By2iwEaD5+PFZn6YaMMkb54lAZdY=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ru\">–†—É—Å—Å–∫–∏–π</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ru\">–†—É—Å—Å–∫–∏–π</a>"
      },
      {
        "row": 19,
        "rowsha": "bqNo/wlZlNq9lWjIFDllbgNm1+XI21AcIgFC/dDb7lA=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=pt\">Portugu√™s</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=pt\">Portugu√™s</a>"
      },
      {
        "row": 20,
        "rowsha": "I1ExF30BVI6B8VfJ+MacEOHRRCy/XU633qbkqJLjGw8=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=nl\">Nederlands</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=nl\">Nederlands</a>"
      },
      {
        "row": 21,
        "rowsha": "g/CsyFGLa9sxMWpFwkW2uiHdQW0OCENDWPE1Nr3PlOU=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=pl\">Polski</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=pl\">Polski</a>"
      },
      {
        "row": 22,
        "rowsha": "joh9IFJCqD979ht5QZqA1TF0C8MIB3kcRRCfP41wtEE=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a>"
      },
      {
        "row": 23,
        "rowsha": "sc/eA+rzaDVu5SJneI2jQzqM3JUBogFttJBjVJPWECE=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a>"
      },
      {
        "row": 24,
        "rowsha": "SsEAfcoG4wBFWvLGmeNrCPVIyjMfB+MvkmB1QRizgX0=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=tr\">T√ºrk√ße</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=tr\">T√ºrk√ße</a>"
      },
      {
        "row": 25,
        "rowsha": "2+/abRCqUIM5cQlEUJ21yD6g3zr7F07n/LH+YQjI87g=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=vi\">Ti·∫øng Vi·ªát</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=vi\">Ti·∫øng Vi·ªát</a>"
      },
      {
        "row": 26,
        "rowsha": "1f9VmvVxq0qOMeGubG3f/1tFYYKpwuVoK1Qs0QN4sw4=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=id\">Bahasa Indonesia</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=id\">Bahasa Indonesia</a>"
      },
      {
        "row": 27,
        "rowsha": "grKDcH6pp8u8CJJlYrVGYPLIRBVt6NblofBWfB9NbQI=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=as\">‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ</",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=Virviil&project=oci2git&lang=as\">‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ</"
      },
      {
        "row": 28,
        "rowsha": "0OM5wNEm0TO56MEBvQzL7AUZM7/3OpgIeqRf2zFre3Q=",
        "originContent": "      </div>",
        "translatedContent": "      </div>"
      },
      {
        "row": 29,
        "rowsha": "fcjTfY+fs8YnY5slBs1sZvWPAqEQR7tzaBDO54skkGQ=",
        "originContent": "    </div>",
        "translatedContent": "    </div>"
      },
      {
        "row": 30,
        "rowsha": "+fQNH2ldI7UM/rqRscP3hUSWAmw1HvQ2wEKDN8JagT0=",
        "originContent": "  </details>",
        "translatedContent": "  </details>"
      },
      {
        "row": 31,
        "rowsha": "qsMmUbEPVnxGG5tPJV1vsfpoWbU2jYvZpRr5IKshzyM=",
        "originContent": "</div>",
        "translatedContent": "</div>"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "RXxvvTH61GaA2lPt/wrkEM3eHNkXuPqsF5MwHHiRXP0=",
        "originContent": "# OCI2Git",
        "translatedContent": "# OCI2Git"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "Yt7buMMjActSOqvfCV85v0Rh1Tf/2dXj+DaIGZwA9RA=",
        "originContent": "A Rust application that converts container images (Docker, etc.) to Git repositories. Each container layer is represented as a Git commit, preserving the history and structure of the original image.",
        "translatedContent": "Une application Rust qui convertit les images de conteneur (Docker, etc.) en d√©p√¥ts Git. Chaque couche du conteneur est repr√©sent√©e comme un commit Git, pr√©servant l‚Äôhistorique et la structure de l‚Äôimage originale."
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "//FYkPzWahj3gIMXsIh1taqlY2/2UrYXdlAZmRJvT+U=",
        "originContent": "![Demo of OCI2Git converting the nginx image](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/nginx.gif)",
        "translatedContent": "![D√©mo d'OCI2Git convertissant l'image nginx](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/nginx.gif)"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "nrVeE3oDH0tNFm9CX5stkYPKAaCrnePTkJZtrLHmoDg=",
        "originContent": "## Features",
        "translatedContent": "## Fonctionnalit√©s"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "- Analyze Docker images and extract layer information\n- Create a Git repository where each image layer is represented as a commit\n- Support for empty layers (ENV, WORKDIR, etc.) as empty commits\n- Complete metadata extraction to Markdown format\n- Extensible architecture for supporting different container engines\n\n## Use Cases\n\n### Layer Diffing\nWhen troubleshooting container issues, you can use Git's powerful diffing capabilities to identify exactly what changed between any two layers. By running `git diff` between commits, engineers can see precisely which files were added, modified, or deleted, making it much easier to understand the impact of each Dockerfile instruction and locate problematic changes.\n![Example for layer diff](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/layer-diff.png)\n\n### Origin Tracking\nUsing `git blame`, developers can quickly determine which layer introduced a specific file or line of code. This is particularly valuable when diagnosing issues with configuration files or dependencies. Instead of manually inspecting each layer, you can immediately trace the origin of any file back to its source layer and corresponding Dockerfile instruction.\n\n### File Lifecycle Tracking\nOCI2Git enables you to follow a specific file's journey throughout the container image's history. You can observe when a file was initially created, how it was modified across layers, and if/when it was eventually removed. This comprehensive view helps understand file evolution without having to manually track changes across potentially dozens of layers.\n\nTo track the history of a file in your container image ‚Äî including when it first appeared, was changed, or deleted ‚Äî you can use these Git commands after conversion:\n",
    "ContentSha": "cpvo4uqnoKEuFJVcXqZGLfkSQORrIp1iTJIPvUE38N4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "- Analysez les images Docker et extrayez les informations des couches\n- Cr√©ez un d√©p√¥t Git o√π chaque couche d'image est repr√©sent√©e comme un commit\n- Prise en charge des couches vides (ENV, WORKDIR, etc.) sous forme de commits vides\n- Extraction compl√®te des m√©tadonn√©es au format Markdown\n- Architecture extensible pour supporter diff√©rents moteurs de conteneurs\n\n## Cas d'utilisation\n\n### Comparaison des couches\nLors du d√©pannage des probl√®mes de conteneur, vous pouvez utiliser les puissantes capacit√©s de comparaison de Git pour identifier exactement ce qui a chang√© entre deux couches. En ex√©cutant `git diff` entre des commits, les ing√©nieurs peuvent voir pr√©cis√©ment quels fichiers ont √©t√© ajout√©s, modifi√©s ou supprim√©s, ce qui facilite grandement la compr√©hension de l'impact de chaque instruction Dockerfile et la localisation des changements probl√©matiques.\n![Exemple de comparaison de couches](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/layer-diff.png)\n\n### Suivi de l'origine\n√Ä l'aide de `git blame`, les d√©veloppeurs peuvent rapidement d√©terminer quelle couche a introduit un fichier ou une ligne de code sp√©cifique. Ceci est particuli√®rement utile lors du diagnostic de probl√®mes li√©s aux fichiers de configuration ou aux d√©pendances. Au lieu d'inspecter manuellement chaque couche, vous pouvez imm√©diatement retracer l'origine de tout fichier jusqu'√† sa couche source et √† l'instruction Dockerfile correspondante.\n\n### Suivi du cycle de vie des fichiers\nOCI2Git vous permet de suivre le parcours d'un fichier sp√©cifique tout au long de l'historique de l'image du conteneur. Vous pouvez observer quand un fichier a √©t√© initialement cr√©√©, comment il a √©t√© modifi√© √† travers les couches, et si/quand il a finalement √©t√© supprim√©. Cette vue compl√®te aide √† comprendre l'√©volution d'un fichier sans avoir √† suivre manuellement les changements sur potentiellement des dizaines de couches.\n\nPour suivre l'historique d'un fichier dans votre image de conteneur ‚Äî y compris quand il est apparu pour la premi√®re fois, a √©t√© modifi√© ou supprim√© ‚Äî vous pouvez utiliser ces commandes Git apr√®s conversion :\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "fi1muZ1SfkNwRATe0FyTwPtiBpXzDttmmQkrpmT5c14=",
        "originContent": "- Analyze Docker images and extract layer information",
        "translatedContent": "- Analysez les images Docker et extrayez les informations des couches"
      },
      {
        "row": 2,
        "rowsha": "TxXPmzDPxz/0RRZZZGt/NJCbHCtSGYEBc8ztOOE4rSI=",
        "originContent": "- Create a Git repository where each image layer is represented as a commit",
        "translatedContent": "- Cr√©ez un d√©p√¥t Git o√π chaque couche d'image est repr√©sent√©e comme un commit"
      },
      {
        "row": 3,
        "rowsha": "dqDneuJMUNFjBUZjZ5o0yVWsx1+CA1cQkulQ4mWkh7U=",
        "originContent": "- Support for empty layers (ENV, WORKDIR, etc.) as empty commits",
        "translatedContent": "- Prise en charge des couches vides (ENV, WORKDIR, etc.) sous forme de commits vides"
      },
      {
        "row": 4,
        "rowsha": "JbJcIVQyhw9GQGyK3J8ORqxjXbhGYb27Zt6bioFGlxY=",
        "originContent": "- Complete metadata extraction to Markdown format",
        "translatedContent": "- Extraction compl√®te des m√©tadonn√©es au format Markdown"
      },
      {
        "row": 5,
        "rowsha": "WM41v1kLx5sRbXDs3mG8K5UtB9rj6VGAWT1oaxlLWh4=",
        "originContent": "- Extensible architecture for supporting different container engines",
        "translatedContent": "- Architecture extensible pour supporter diff√©rents moteurs de conteneurs"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "4vWujHs5Ye7w1xO1jq955leyFikp9SiNLFJmgYQgCYI=",
        "originContent": "## Use Cases",
        "translatedContent": "## Cas d'utilisation"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "E2n7dPydQYzOmSYdIJYX2UpgFCHpPJ++RZpX+UyckS8=",
        "originContent": "### Layer Diffing",
        "translatedContent": "### Comparaison des couches"
      },
      {
        "row": 10,
        "rowsha": "zWiOMkvkQsg7Ro/wIs9arXxy5pz3SvWMD4RVFmqGY2Q=",
        "originContent": "When troubleshooting container issues, you can use Git's powerful diffing capabilities to identify exactly what changed between any two layers. By running `git diff` between commits, engineers can see precisely which files were added, modified, or deleted, making it much easier to understand the impact of each Dockerfile instruction and locate problematic changes.",
        "translatedContent": "Lors du d√©pannage des probl√®mes de conteneur, vous pouvez utiliser les puissantes capacit√©s de comparaison de Git pour identifier exactement ce qui a chang√© entre deux couches. En ex√©cutant `git diff` entre des commits, les ing√©nieurs peuvent voir pr√©cis√©ment quels fichiers ont √©t√© ajout√©s, modifi√©s ou supprim√©s, ce qui facilite grandement la compr√©hension de l'impact de chaque instruction Dockerfile et la localisation des changements probl√©matiques."
      },
      {
        "row": 11,
        "rowsha": "CasDr/NfxbBl9ND+Q9c/7Qle4eGEAJW/lMJqrYGVKtY=",
        "originContent": "![Example for layer diff](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/layer-diff.png)",
        "translatedContent": "![Exemple de comparaison de couches](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/layer-diff.png)"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "E/blJ113pQ9M93xEk5CafWzLs7QhCQbHp1pPdtKgLpw=",
        "originContent": "### Origin Tracking",
        "translatedContent": "### Suivi de l'origine"
      },
      {
        "row": 14,
        "rowsha": "6BJyqkc8ucX6zX6CQ5KR2G4e+XqwZeBjzU6vd8G128Y=",
        "originContent": "Using `git blame`, developers can quickly determine which layer introduced a specific file or line of code. This is particularly valuable when diagnosing issues with configuration files or dependencies. Instead of manually inspecting each layer, you can immediately trace the origin of any file back to its source layer and corresponding Dockerfile instruction.",
        "translatedContent": "√Ä l'aide de `git blame`, les d√©veloppeurs peuvent rapidement d√©terminer quelle couche a introduit un fichier ou une ligne de code sp√©cifique. Ceci est particuli√®rement utile lors du diagnostic de probl√®mes li√©s aux fichiers de configuration ou aux d√©pendances. Au lieu d'inspecter manuellement chaque couche, vous pouvez imm√©diatement retracer l'origine de tout fichier jusqu'√† sa couche source et √† l'instruction Dockerfile correspondante."
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "tjbbryF+A9tu7pgePp78TjDMWcBFPeqdNCHhWbK20/I=",
        "originContent": "### File Lifecycle Tracking",
        "translatedContent": "### Suivi du cycle de vie des fichiers"
      },
      {
        "row": 17,
        "rowsha": "X7Ul9KO1ZSdjb3AA/dyMaOUGjVoEq/TVN3ic4n8hwVU=",
        "originContent": "OCI2Git enables you to follow a specific file's journey throughout the container image's history. You can observe when a file was initially created, how it was modified across layers, and if/when it was eventually removed. This comprehensive view helps understand file evolution without having to manually track changes across potentially dozens of layers.",
        "translatedContent": "OCI2Git vous permet de suivre le parcours d'un fichier sp√©cifique tout au long de l'historique de l'image du conteneur. Vous pouvez observer quand un fichier a √©t√© initialement cr√©√©, comment il a √©t√© modifi√© √† travers les couches, et si/quand il a finalement √©t√© supprim√©. Cette vue compl√®te aide √† comprendre l'√©volution d'un fichier sans avoir √† suivre manuellement les changements sur potentiellement des dizaines de couches."
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "CFZY3Krc9gFeR7X13SIQ0WBlPsXpXqk4COWVuQ+negw=",
        "originContent": "To track the history of a file in your container image ‚Äî including when it first appeared, was changed, or deleted ‚Äî you can use these Git commands after conversion:",
        "translatedContent": "Pour suivre l'historique d'un fichier dans votre image de conteneur ‚Äî y compris quand il est apparu pour la premi√®re fois, a √©t√© modifi√© ou supprim√© ‚Äî vous pouvez utiliser ces commandes Git apr√®s conversion :"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 3,
    "Content": "```bash\n# Full history of a file (including renames)\ngit log --follow -- /rootfs/my/file/path\n\n# First appearance (i.e. creation) - see which layer introduced the file\ngit log --diff-filter=A -- /rootfs/my/file/path\n\n# All changes made to the file (with diffs)\ngit log -p --follow -- /rootfs/my/file/path\n\n# When the file was deleted\ngit log --diff-filter=D -- /rootfs/my/file/path\n\n# Show short commit info (concise layer history)\ngit log --follow --oneline -- /rootfs/my/file/path\n```",
    "ContentSha": "2Zu2rMbR+TQAbryNCahkpHND4kRAxNrlljaUOECIzcQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n# Full history of a file (including renames)\ngit log --follow -- /rootfs/my/file/path\n\n# First appearance (i.e. creation) - see which layer introduced the file\ngit log --diff-filter=A -- /rootfs/my/file/path\n\n# All changes made to the file (with diffs)\ngit log -p --follow -- /rootfs/my/file/path\n\n# When the file was deleted\ngit log --diff-filter=D -- /rootfs/my/file/path\n\n# Show short commit info (concise layer history)\ngit log --follow --oneline -- /rootfs/my/file/path\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 4,
    "Content": "\nThese commands make it simple to trace any file's complete history across container layers without the complexity of manually extracting and comparing layer tarballs.\n\n### Multi-Layer Analysis\nSometimes the most insightful comparisons come from examining changes across multiple non-consecutive layers. With OCI2Git, you can use Git's comparison tools to analyze how components evolved over multiple build stages, identifying patterns that might be invisible when looking only at adjacent layers.\n\n### Layer Exploration\nBy using `git checkout` to move to any specific commit, you can examine the container filesystem exactly as it existed at that layer. This allows developers to inspect the precise state of files and directories at any point in the image's creation process, providing invaluable context when debugging or examining container behavior.\n![Checkout to previous commit](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/checkout.png)\n\n### Multi-Image Analysis\n\nWhen working with multiple container images that share common ancestry, OCI2Git intelligently creates branches only when the images actually diverge. This allows you to analyze multiple related images in a single repository while preserving their common history.\n",
    "ContentSha": "CSCjy/bmQLKQGsh5PDhnbR810De11Xc4e3y2JTlQIvw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Ces commandes facilitent la tra√ßabilit√© de l'historique complet de n'importe quel fichier √† travers les couches du conteneur, sans la complexit√© d'extraire et de comparer manuellement les archives tar des couches.\n\n### Analyse Multi-Couches\nParfois, les comparaisons les plus pertinentes proviennent de l'examen des changements √† travers plusieurs couches non cons√©cutives. Avec OCI2Git, vous pouvez utiliser les outils de comparaison de Git pour analyser l'√©volution des composants sur plusieurs √©tapes de construction, identifiant des motifs invisibles en regardant uniquement les couches adjacentes.\n\n### Exploration des Couches\nEn utilisant `git checkout` pour passer √† un commit sp√©cifique, vous pouvez examiner le syst√®me de fichiers du conteneur tel qu'il existait √† cette couche. Cela permet aux d√©veloppeurs d'inspecter l'√©tat pr√©cis des fichiers et r√©pertoires √† n'importe quel moment du processus de cr√©ation de l'image, fournissant un contexte pr√©cieux lors du d√©bogage ou de l'examen du comportement du conteneur.\n![Checkout to previous commit](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/checkout.png)\n\n### Analyse Multi-Images\n\nLorsqu'on travaille avec plusieurs images de conteneurs partageant une ascendance commune, OCI2Git cr√©e intelligemment des branches uniquement lorsque les images divergent r√©ellement. Cela permet d'analyser plusieurs images li√©es dans un seul d√©p√¥t tout en conservant leur histoire commune.\n\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 5,
    "Content": "```bash\n# Convert first image to create the base repository\noci2git postgres:16.9-alpine3.21 -o alp\n\n# Convert second image to the same output folder\noci2git nginx:1.28.0-alpine-slim -o alp\n```",
    "ContentSha": "WlCXP1d4ON1FR85ANmvbbKd95Mp/yKj7sAG3bdqmFzM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n# Convert first image to create the base repository\noci2git postgres:16.9-alpine3.21 -o alp\n\n# Convert second image to the same output folder\noci2git nginx:1.28.0-alpine-slim -o alp\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 6,
    "Content": "\nOCI2Git automatically detects shared layers between images and creates a branching structure that reflects their common base. The Git history will show:\n- A common trunk containing all shared layers\n- Separate branches that diverge only when the images actually differ\n- Clear visualization of where images share common ancestry vs. where they become unique\n- Smart duplicate handling: if the exact same image is processed twice, the algorithm detects this before the final metadata commit and skips creating a duplicate branch\n\nThis approach is particularly valuable for:\n- **Image Family Analysis**: Understanding how different variants of an image (different versions, architectures, or configurations) relate to each other\n- **Base Image Impact**: Seeing exactly how changes to a base image affect multiple derived images\n- **Optimization Opportunities**: Identifying shared components that could be better leveraged across image variants\n\n![Multi-image repository structure showing shared base and diverging branches](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/multiimage.png)\n\n### Additional Use Cases\n\n- **Security Auditing**: Identify exactly when vulnerable packages or configurations were introduced and trace them back to specific build instructions.\n- **Image Optimization**: Analyze layer structures to find redundant operations or large files that could be consolidated, helping to reduce image size.\n- **Dependency Management**: Monitor when dependencies were added, upgraded, or removed across the image history.\n- **Build Process Improvement**: Examine layer composition to optimize Dockerfile instructions for better caching and smaller image size.\n- **Cross-Image Comparison**: Convert multiple related images to Git repositories and use Git's comparison tools to analyze their differences and commonalities.\n\n## Installation\n\n### From Source\n",
    "ContentSha": "psdRWbKOEea0YRdo0Ert6iXwe4BB/X/Zuartd5NAvQ0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "OCI2Git d√©tecte automatiquement les couches partag√©es entre les images et cr√©e une structure en branches qui refl√®te leur base commune. L‚Äôhistorique Git affichera :\n- Un tronc commun contenant toutes les couches partag√©es\n- Des branches s√©par√©es qui divergent uniquement lorsque les images diff√®rent r√©ellement\n- Une visualisation claire de l‚Äôendroit o√π les images partagent une ascendance commune vs. o√π elles deviennent uniques\n- Gestion intelligente des doublons : si la m√™me image est trait√©e deux fois, l‚Äôalgorithme le d√©tecte avant le commit final des m√©tadonn√©es et √©vite de cr√©er une branche en double\n\nCette approche est particuli√®rement pr√©cieuse pour :\n- **Analyse des familles d‚Äôimages** : Comprendre comment diff√©rentes variantes d‚Äôune image (diff√©rentes versions, architectures ou configurations) sont li√©es entre elles\n- **Impact de l‚Äôimage de base** : Voir pr√©cis√©ment comment les modifications d‚Äôune image de base affectent plusieurs images d√©riv√©es\n- **Opportunit√©s d‚Äôoptimisation** : Identifier les composants partag√©s qui pourraient √™tre mieux exploit√©s entre les variantes d‚Äôimages\n\n![Structure de d√©p√¥t multi-images montrant la base partag√©e et les branches divergentes](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/multiimage.png)\n\n### Cas d‚Äôutilisation suppl√©mentaires\n\n- **Audit de s√©curit√©** : Identifier pr√©cis√©ment quand des paquets ou configurations vuln√©rables ont √©t√© introduits et retracer leur origine dans des instructions de build sp√©cifiques.\n- **Optimisation des images** : Analyser la structure des couches pour rep√©rer les op√©rations redondantes ou les fichiers volumineux √† consolider, aidant √† r√©duire la taille des images.\n- **Gestion des d√©pendances** : Surveiller quand les d√©pendances ont √©t√© ajout√©es, mises √† jour ou supprim√©es dans l‚Äôhistorique des images.\n- **Am√©lioration du processus de build** : Examiner la composition des couches pour optimiser les instructions Dockerfile afin d‚Äôam√©liorer la mise en cache et r√©duire la taille des images.\n- **Comparaison inter-images** : Convertir plusieurs images li√©es en d√©p√¥ts Git et utiliser les outils de comparaison Git pour analyser leurs diff√©rences et points communs.\n\n## Installation\n\n### Depuis les sources\n\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 7,
    "Content": "```bash\n# Clone the repository\ngit clone https://github.com/virviil/oci2git.git\ncd oci2git\n\n# Install locally\ncargo install --path .\n```",
    "ContentSha": "1uQDBBJ51j7XM43O6ynPX84MTtndSie65mUBfkL65RA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n# Clone the repository\ngit clone https://github.com/virviil/oci2git.git\ncd oci2git\n\n# Install locally\ncargo install --path .\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 8,
    "Content": "\n### From Crates.io\n",
    "ContentSha": "6vtqMgFgzMfcD8W+PzY+ygsgwI/+zJfAdTwoXzzffwU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n### Depuis Crates.io\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 9,
    "Content": "```bash\ncargo install oci2git\n```",
    "ContentSha": "QOWE2eGOeDYFxtuEordZhmEy447ySIoPb9OZsI9wmoI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ncargo install oci2git\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 10,
    "Content": "\n## Usage\n",
    "ContentSha": "d4QdQvtMh2QXOhSJXnbLIKLQwW7kakrJbYZVgSkHQiE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n## Utilisation\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 11,
    "Content": "```bash\noci2git [OPTIONS] <IMAGE>\n```",
    "ContentSha": "2YUi6TtK+3gibp5tR8iWzKGTN2gezwdTMc9OzkW3i7Y=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\noci2git [OPTIONS] <IMAGE>\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 12,
    "Content": "\nArguments:\n  `<IMAGE>`  Image name to convert (e.g., 'ubuntu:latest') or path to tarball when using the tar engine\n\nOptions:\n  `-o, --output <o>`  Output directory for Git repository [default: ./container_repo]\n  `-e, --engine <ENGINE>`  Container engine to use (docker, nerdctl, tar) [default: docker]\n  `-h, --help`            Print help information\n  `-V, --version`         Print version information\n\nEnvironment Variables:\n  `TMPDIR`  Set this environment variable to change the default location used for intermediate data processing. This is platform-dependent (e.g., `TMPDIR` on Unix/macOS, `TEMP` or `TMP` on Windows).\n\n## Examples\n\nUsing Docker engine (default):",
    "ContentSha": "7FOaiJd6BeVMKoYWUfqNK6O5hoaFw9bS+WED0Etc32U=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Arguments :\n  `<IMAGE>`  Nom de l'image √† convertir (par exemple, 'ubuntu:latest') ou chemin vers une archive tar lors de l'utilisation du moteur tar\n\nOptions :\n  `-o, --output <o>`  R√©pertoire de sortie pour le d√©p√¥t Git [par d√©faut : ./container_repo]\n  `-e, --engine <ENGINE>`  Moteur de conteneur √† utiliser (docker, nerdctl, tar) [par d√©faut : docker]\n  `-h, --help`            Afficher l'aide\n  `-V, --version`         Afficher la version\n\nVariables d'environnement :\n  `TMPDIR`  D√©finissez cette variable d'environnement pour modifier l'emplacement par d√©faut utilis√© pour le traitement interm√©diaire des donn√©es. Cela d√©pend de la plateforme (par exemple, `TMPDIR` sous Unix/macOS, `TEMP` ou `TMP` sous Windows).\n\n## Exemples\n\nUtilisation du moteur Docker (par d√©faut) :\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 13,
    "Content": "```bash\noci2git -o ./ubuntu-repo ubuntu:latest\n```",
    "ContentSha": "BtDnoSdLc2QmazoYm9HkbtDeVeGoUHvokfDZ25KJ7fc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\noci2git -o ./ubuntu-repo ubuntu:latest\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 14,
    "Content": "\nUsing an already downloaded image tarball:",
    "ContentSha": "OeRvaZWgQLZETvvMyFzz4cWuklQ8Y5utFvd0CH5ZWx4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nUtilisation d‚Äôune archive d‚Äôimage d√©j√† t√©l√©charg√©e :",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 15,
    "Content": "```bash\noci2git -e tar -o ./ubuntu-repo /path/to/ubuntu-latest.tar\n```",
    "ContentSha": "mRopUOXltG+tci/OLLRHZ62/3BOzYI+nNIUEAf4e/tA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\noci2git -e tar -o ./ubuntu-repo /path/to/ubuntu-latest.tar\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 16,
    "Content": "\nThe tar engine expects a valid OCI format tarball, which is typically created with `docker save`:",
    "ContentSha": "BT4Lk3SyKhGJmYNYn34W6/DFREYgEKthgxA8vmecsHA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Le moteur tar attend une archive tar au format OCI valide, g√©n√©ralement cr√©√©e avec `docker save` :\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 17,
    "Content": "```bash\n# Create a tarball from a local Docker image\ndocker save -o ubuntu-latest.tar ubuntu:latest\n\n# Convert the tarball to a Git repository\noci2git -e tar -o ./ubuntu-repo ubuntu-latest.tar\n```",
    "ContentSha": "E+FCGwQ2bheue5kTCYWyAiWvL7RKGMFRDPDtDOG5lBU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n# Create a tarball from a local Docker image\ndocker save -o ubuntu-latest.tar ubuntu:latest\n\n# Convert the tarball to a Git repository\noci2git -e tar -o ./ubuntu-repo ubuntu-latest.tar\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 18,
    "Content": "\nThis will create a Git repository in `./ubuntu-repo` containing:\n- `Image.md` - Complete metadata about the image in Markdown format\n- `rootfs/` - The filesystem content from the container\n\nThe Git history reflects the container's layer history:\n- The first commit contains only the `Image.md` file with full metadata\n- Each subsequent commit represents a layer from the original image\n- Commits include the Dockerfile command as the commit message\n\n## Repository Structure\n",
    "ContentSha": "l6RVjT4XYNG172JW4XkvweckPrxkr1lym1RdciEbXL0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nCela cr√©era un d√©p√¥t Git dans `./ubuntu-repo` contenant :\n- `Image.md` - M√©tadonn√©es compl√®tes sur l'image au format Markdown\n- `rootfs/` - Le contenu du syst√®me de fichiers du conteneur\n\nL'historique Git refl√®te l'historique des couches du conteneur :\n- Le premier commit contient uniquement le fichier `Image.md` avec toutes les m√©tadonn√©es\n- Chaque commit suivant repr√©sente une couche de l'image originale\n- Les commits incluent la commande Dockerfile comme message de commit\n\n## Structure du d√©p√¥t\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 19,
    "Content": "```\nrepository/\n‚îú‚îÄ‚îÄ .git/\n‚îú‚îÄ‚îÄ Image.md     # Complete image metadata\n‚îî‚îÄ‚îÄ rootfs/      # Filesystem content from the container\n```",
    "ContentSha": "2m0JhqxmxhkJHFqbriGCtVRY2NXBGSX9opKyYJJg89M=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nrepository/\n‚îú‚îÄ‚îÄ .git/\n‚îú‚îÄ‚îÄ Image.md     # Complete image metadata\n‚îî‚îÄ‚îÄ rootfs/      # Filesystem content from the container\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 20,
    "Content": "\n\n## Requirements\n\n- Rust 2021 edition\n- Docker CLI (for Docker engine support)\n- Git\n\n## License\n\nMIT",
    "ContentSha": "hpcCBZBPjdyKJNk1o9Y+GIokmpMAJnEjgxZqFi3m1M8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## Exigences\n\n- Rust √©dition 2021\n- CLI Docker (pour le support du moteur Docker)\n- Git\n\n## Licence\n\nMIT\n\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  }
]