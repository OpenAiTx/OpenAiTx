[
  {
    "row": 1,
    "rowsha": "RXxvvTH61GaA2lPt/wrkEM3eHNkXuPqsF5MwHHiRXP0=",
    "originContent": "# OCI2Git",
    "translatedContent": "# OCI2Git"
  },
  {
    "row": 2,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 3,
    "rowsha": "Yt7buMMjActSOqvfCV85v0Rh1Tf/2dXj+DaIGZwA9RA=",
    "originContent": "A Rust application that converts container images (Docker, etc.) to Git repositories. Each container layer is represented as a Git commit, preserving the history and structure of the original image.",
    "translatedContent": "コンテナイメージ（Dockerなど）をGitリポジトリに変換するRust製アプリケーションです。各コンテナレイヤーはGitコミットとして表現され、元のイメージの履歴と構造が保持されます。"
  },
  {
    "row": 4,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 5,
    "rowsha": "//FYkPzWahj3gIMXsIh1taqlY2/2UrYXdlAZmRJvT+U=",
    "originContent": "![Demo of OCI2Git converting the nginx image](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/nginx.gif)",
    "translatedContent": "![nginxイメージをOCI2Gitで変換するデモ](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/nginx.gif)"
  },
  {
    "row": 6,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 7,
    "rowsha": "nrVeE3oDH0tNFm9CX5stkYPKAaCrnePTkJZtrLHmoDg=",
    "originContent": "## Features",
    "translatedContent": "## 機能"
  },
  {
    "row": 8,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 9,
    "rowsha": "fi1muZ1SfkNwRATe0FyTwPtiBpXzDttmmQkrpmT5c14=",
    "originContent": "- Analyze Docker images and extract layer information",
    "translatedContent": "- Dockerイメージを解析しレイヤー情報を抽出"
  },
  {
    "row": 10,
    "rowsha": "TxXPmzDPxz/0RRZZZGt/NJCbHCtSGYEBc8ztOOE4rSI=",
    "originContent": "- Create a Git repository where each image layer is represented as a commit",
    "translatedContent": "- 各イメージレイヤーをコミットとして表現するGitリポジトリを作成"
  },
  {
    "row": 11,
    "rowsha": "dqDneuJMUNFjBUZjZ5o0yVWsx1+CA1cQkulQ4mWkh7U=",
    "originContent": "- Support for empty layers (ENV, WORKDIR, etc.) as empty commits",
    "translatedContent": "- 空レイヤー（ENV、WORKDIRなど）を空コミットとしてサポート"
  },
  {
    "row": 12,
    "rowsha": "JbJcIVQyhw9GQGyK3J8ORqxjXbhGYb27Zt6bioFGlxY=",
    "originContent": "- Complete metadata extraction to Markdown format",
    "translatedContent": "- メタデータをMarkdown形式で完全抽出"
  },
  {
    "row": 13,
    "rowsha": "WM41v1kLx5sRbXDs3mG8K5UtB9rj6VGAWT1oaxlLWh4=",
    "originContent": "- Extensible architecture for supporting different container engines",
    "translatedContent": "- 異なるコンテナエンジン対応のための拡張可能なアーキテクチャ"
  },
  {
    "row": 14,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 15,
    "rowsha": "4vWujHs5Ye7w1xO1jq955leyFikp9SiNLFJmgYQgCYI=",
    "originContent": "## Use Cases",
    "translatedContent": "## ユースケース"
  },
  {
    "row": 16,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 17,
    "rowsha": "E2n7dPydQYzOmSYdIJYX2UpgFCHpPJ++RZpX+UyckS8=",
    "originContent": "### Layer Diffing",
    "translatedContent": "### レイヤーディフ比較"
  },
  {
    "row": 18,
    "rowsha": "zWiOMkvkQsg7Ro/wIs9arXxy5pz3SvWMD4RVFmqGY2Q=",
    "originContent": "When troubleshooting container issues, you can use Git's powerful diffing capabilities to identify exactly what changed between any two layers. By running `git diff` between commits, engineers can see precisely which files were added, modified, or deleted, making it much easier to understand the impact of each Dockerfile instruction and locate problematic changes.",
    "translatedContent": "コンテナの問題解決時に、Gitの強力なdiff機能を使って任意の2レイヤー間で何が変更されたか正確に特定可能です。コミット間で`git diff`を実行することで、エンジニアはどのファイルが追加、変更、削除されたかを正確に把握でき、各Dockerfile命令の影響や問題のある変更点を容易に理解できます。"
  },
  {
    "row": 19,
    "rowsha": "CasDr/NfxbBl9ND+Q9c/7Qle4eGEAJW/lMJqrYGVKtY=",
    "originContent": "![Example for layer diff](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/layer-diff.png)",
    "translatedContent": "![レイヤーディフの例](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/layer-diff.png)"
  },
  {
    "row": 20,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 21,
    "rowsha": "E/blJ113pQ9M93xEk5CafWzLs7QhCQbHp1pPdtKgLpw=",
    "originContent": "### Origin Tracking",
    "translatedContent": "### 起源の追跡"
  },
  {
    "row": 22,
    "rowsha": "6BJyqkc8ucX6zX6CQ5KR2G4e+XqwZeBjzU6vd8G128Y=",
    "originContent": "Using `git blame`, developers can quickly determine which layer introduced a specific file or line of code. This is particularly valuable when diagnosing issues with configuration files or dependencies. Instead of manually inspecting each layer, you can immediately trace the origin of any file back to its source layer and corresponding Dockerfile instruction.",
    "translatedContent": "`git blame`を使用することで、開発者は特定のファイルやコード行を導入したレイヤーを迅速に特定できます。これは設定ファイルや依存関係の問題を診断する際に特に有用です。各レイヤーを手動で調査する代わりに、任意のファイルの起源を対応するDockerfile命令とともに即座に辿ることが可能です。"
  },
  {
    "row": 23,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 24,
    "rowsha": "tjbbryF+A9tu7pgePp78TjDMWcBFPeqdNCHhWbK20/I=",
    "originContent": "### File Lifecycle Tracking",
    "translatedContent": "### ファイルのライフサイクル追跡"
  },
  {
    "row": 25,
    "rowsha": "X7Ul9KO1ZSdjb3AA/dyMaOUGjVoEq/TVN3ic4n8hwVU=",
    "originContent": "OCI2Git enables you to follow a specific file's journey throughout the container image's history. You can observe when a file was initially created, how it was modified across layers, and if/when it was eventually removed. This comprehensive view helps understand file evolution without having to manually track changes across potentially dozens of layers.",
    "translatedContent": "OCI2Gitはコンテナイメージの履歴における特定ファイルの変遷を追跡可能にします。ファイルが初めて作成された時期、レイヤーをまたいでどのように変更されたか、そして最終的に削除されたかどうかを観察できます。この包括的なビューにより、多数のレイヤーを手動で追跡することなくファイルの進化を理解できます。"
  },
  {
    "row": 26,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 27,
    "rowsha": "CFZY3Krc9gFeR7X13SIQ0WBlPsXpXqk4COWVuQ+negw=",
    "originContent": "To track the history of a file in your container image — including when it first appeared, was changed, or deleted — you can use these Git commands after conversion:",
    "translatedContent": "コンテナイメージ内のファイルの履歴（初出、変更、削除）を追跡するには、変換後に以下のGitコマンドを使用できます："
  },
  {
    "row": 28,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 29,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 30,
    "rowsha": "HQJG+JPZtIzO2/N+XpAayqc5/W+JpoWndXPo/mwDtHM=",
    "originContent": "# Full history of a file (including renames)",
    "translatedContent": "# Full history of a file (including renames)"
  },
  {
    "row": 31,
    "rowsha": "CtkVUkixJrEqQQNw1x4/A/UjF662xT/SmaoxIeKgzx0=",
    "originContent": "git log --follow -- /rootfs/my/file/path",
    "translatedContent": "git log --follow -- /rootfs/my/file/path"
  },
  {
    "row": 32,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 33,
    "rowsha": "+5HFk91zfi3xUwcySpt5aBg198utCjaXx/t+jNbycWo=",
    "originContent": "# First appearance (i.e. creation) - see which layer introduced the file",
    "translatedContent": "# First appearance (i.e. creation) - see which layer introduced the file"
  },
  {
    "row": 34,
    "rowsha": "6HnF5QDnEyn95lL3ni48aa1k4ax4Sgq1tqQG+ceSVok=",
    "originContent": "git log --diff-filter=A -- /rootfs/my/file/path",
    "translatedContent": "git log --diff-filter=A -- /rootfs/my/file/path"
  },
  {
    "row": 35,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 36,
    "rowsha": "q74lJSPNP3o12/pIhSV3SEgSVBRUDrN9T0nftZbEVtg=",
    "originContent": "# All changes made to the file (with diffs)",
    "translatedContent": "# All changes made to the file (with diffs)"
  },
  {
    "row": 37,
    "rowsha": "F27msy3tqZ5fh10nzSsSmSCibSe6mETnpu45xI/tqAE=",
    "originContent": "git log -p --follow -- /rootfs/my/file/path",
    "translatedContent": "git log -p --follow -- /rootfs/my/file/path"
  },
  {
    "row": 38,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 39,
    "rowsha": "JXRDWMdVwBL1G4D3+i84Mt7CPGlDY0O4R+NFb8iedTs=",
    "originContent": "# When the file was deleted",
    "translatedContent": "# When the file was deleted"
  },
  {
    "row": 40,
    "rowsha": "lIJRO1z/Aqo4htQWZpbuPDbQn08JFxCniaJULrKdzHs=",
    "originContent": "git log --diff-filter=D -- /rootfs/my/file/path",
    "translatedContent": "git log --diff-filter=D -- /rootfs/my/file/path"
  },
  {
    "row": 41,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 42,
    "rowsha": "gNOmeCWHta34jtrsOJ02Ji8DzKxjJEawkLau93d6SCI=",
    "originContent": "# Show short commit info (concise layer history)",
    "translatedContent": "# Show short commit info (concise layer history)"
  },
  {
    "row": 43,
    "rowsha": "iHuliTkKrH25h4zoknCHu2b83dvDxW9TyjgbgxLzW24=",
    "originContent": "git log --follow --oneline -- /rootfs/my/file/path",
    "translatedContent": "git log --follow --oneline -- /rootfs/my/file/path"
  },
  {
    "row": 44,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 45,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "これらのコマンドにより、レイヤーのtarballを手動で抽出・比較する複雑さなしに、任意のファイルのコンテナレイヤー全体の履歴を簡単に追跡できます。"
  },
  {
    "row": 46,
    "rowsha": "9fN+GKu+hL+eGAsr4x5QSBdDuJ7YVua7P6+/wylnPgI=",
    "originContent": "These commands make it simple to trace any file's complete history across container layers without the complexity of manually extracting and comparing layer tarballs.",
    "translatedContent": ""
  },
  {
    "row": 47,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### マルチレイヤー分析"
  },
  {
    "row": 48,
    "rowsha": "LiMzICDoPJ5+qOaHfyJO4djRWTELaIJ08XP2NcOBIks=",
    "originContent": "### Multi-Layer Analysis",
    "translatedContent": "時には、連続していない複数のレイヤー間の変更を調べることが最も洞察に富んだ比較をもたらします。OCI2Gitを使えば、Gitの比較ツールを利用して複数のビルドステージにわたるコンポーネントの進化を分析し、隣接するレイヤーだけを見ていると見えないパターンを特定できます。"
  },
  {
    "row": 49,
    "rowsha": "X9UHirDpVMu7uLvtmuYYeFbwupkrPEHBYYpKRa2jlNw=",
    "originContent": "Sometimes the most insightful comparisons come from examining changes across multiple non-consecutive layers. With OCI2Git, you can use Git's comparison tools to analyze how components evolved over multiple build stages, identifying patterns that might be invisible when looking only at adjacent layers.",
    "translatedContent": ""
  },
  {
    "row": 50,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### レイヤーの探索"
  },
  {
    "row": 51,
    "rowsha": "j+ffQV2C7DT7/GxNYpAmcSdsWzgEelcoJTbROPm3EiQ=",
    "originContent": "### Layer Exploration",
    "translatedContent": "`git checkout`を使用して任意のコミットに移動することで、そのレイヤーの時点でのコンテナファイルシステムを正確に調べることができます。これにより、開発者はイメージ作成プロセスの任意の時点でのファイルやディレクトリの正確な状態を検査でき、デバッグやコンテナの動作検証時に非常に有用なコンテキストを提供します。"
  },
  {
    "row": 52,
    "rowsha": "FBo5CohOy9c+YZaTko1cbJ/2fAb7iKQ2oozCb8Z6rBw=",
    "originContent": "By using `git checkout` to move to any specific commit, you can examine the container filesystem exactly as it existed at that layer. This allows developers to inspect the precise state of files and directories at any point in the image's creation process, providing invaluable context when debugging or examining container behavior.",
    "translatedContent": "![Checkout to previous commit](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/checkout.png)"
  },
  {
    "row": 53,
    "rowsha": "0PCWuFzpLEM5zEVE4k2FHFyIXyf1wGVJHJha31NNUGc=",
    "originContent": "![Checkout to previous commit](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/checkout.png)",
    "translatedContent": ""
  },
  {
    "row": 54,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### マルチイメージ分析"
  },
  {
    "row": 55,
    "rowsha": "IIpbeFQmbsUcYSI0Md1+mK0az/WdLCjeULLOY/COazw=",
    "originContent": "### Multi-Image Analysis",
    "translatedContent": ""
  },
  {
    "row": 56,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "共通の起源を持つ複数のコンテナイメージを扱う場合、OCI2Gitは実際にイメージが分岐したときのみブランチを賢く作成します。これにより、共通の履歴を保持しつつ、単一のリポジトリ内で複数の関連イメージを分析できます。"
  },
  {
    "row": 57,
    "rowsha": "2uKOHRns0K5f4MhOE5ob7KEkTc0/cWfmmZPJcNf1so8=",
    "originContent": "When working with multiple container images that share common ancestry, OCI2Git intelligently creates branches only when the images actually diverge. This allows you to analyze multiple related images in a single repository while preserving their common history.",
    "translatedContent": ""
  },
  {
    "row": 58,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 59,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 60,
    "rowsha": "gJ3lk3zI05bODtNOn1/mcREN4YUrNNxLpmj4aTdGpc8=",
    "originContent": "# Convert first image to create the base repository",
    "translatedContent": "# Convert first image to create the base repository"
  },
  {
    "row": 61,
    "rowsha": "iURAR2kaX3xVJcVIoVo/i0UC3owmVxtlS/OlOpOH9R0=",
    "originContent": "oci2git postgres:16.9-alpine3.21 -o alp",
    "translatedContent": "oci2git postgres:16.9-alpine3.21 -o alp"
  },
  {
    "row": 62,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 63,
    "rowsha": "CY0ID/KyFEol9kOocxnfF0BBHgc4aG/8X59RHCpb03A=",
    "originContent": "# Convert second image to the same output folder",
    "translatedContent": "# Convert second image to the same output folder"
  },
  {
    "row": 64,
    "rowsha": "9wfMofG913V7Y1BzIhftfQ8WIRTn2GAAQrHcqSTSkwE=",
    "originContent": "oci2git nginx:1.28.0-alpine-slim -o alp",
    "translatedContent": "oci2git nginx:1.28.0-alpine-slim -o alp"
  },
  {
    "row": 65,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 66,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "OCI2Gitは、イメージ間の共有レイヤーを自動的に検出し、それらの共通のベースを反映したブランチ構造を作成します。Gitの履歴には以下が表示されます："
  },
  {
    "row": 67,
    "rowsha": "6LTUD8+pcJMZgBPG/5v5lVPVQ9Hxe2XEKoMOmBTTGLI=",
    "originContent": "OCI2Git automatically detects shared layers between images and creates a branching structure that reflects their common base. The Git history will show:",
    "translatedContent": "- すべての共有レイヤーを含む共通の幹"
  },
  {
    "row": 68,
    "rowsha": "uIJA8N3Yn8nJIShppfbe5/VqQwvEjS/vdXZMLV74Dqw=",
    "originContent": "- A common trunk containing all shared layers",
    "translatedContent": "- イメージが実際に異なる場合にのみ分岐する個別のブランチ"
  },
  {
    "row": 69,
    "rowsha": "IB8n3F4BtXDld8GlF6SeKKkZ+a+kXrWm27CNe0cgv1c=",
    "originContent": "- Separate branches that diverge only when the images actually differ",
    "translatedContent": "- イメージが共通の祖先を共有する部分と、独自の部分が明確に視覚化される"
  },
  {
    "row": 70,
    "rowsha": "UBel4LiGyWz4YAk730NGfcSjHY1kk3xu3gBC3H2hfxk=",
    "originContent": "- Clear visualization of where images share common ancestry vs. where they become unique",
    "translatedContent": "- 賢い重複処理：まったく同じイメージが二度処理された場合、最終的なメタデータコミットの前にこれを検出し、重複したブランチの作成をスキップ"
  },
  {
    "row": 71,
    "rowsha": "Yq5IgSM+QgVoSd6smqIoif4IAvi+RdxFI+4nvv5uH28=",
    "originContent": "- Smart duplicate handling: if the exact same image is processed twice, the algorithm detects this before the final metadata commit and skips creating a duplicate branch",
    "translatedContent": ""
  },
  {
    "row": 72,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "このアプローチは特に次の点で有用です："
  },
  {
    "row": 73,
    "rowsha": "PakMj8z4HRkjhYpL7PjDSNw57Y3OGyZeSLa/Z16wQf4=",
    "originContent": "This approach is particularly valuable for:",
    "translatedContent": "- **イメージファミリー分析**：異なるバージョン、アーキテクチャ、または構成など、イメージの異なるバリアントが互いにどのように関連しているかを理解する"
  },
  {
    "row": 74,
    "rowsha": "uSDvHuhYhLUIzktSDixyAwvQpUrpMzLQRnssT0JsguQ=",
    "originContent": "- **Image Family Analysis**: Understanding how different variants of an image (different versions, architectures, or configurations) relate to each other",
    "translatedContent": "- **ベースイメージの影響**：ベースイメージの変更が複数の派生イメージにどのように影響するかを正確に把握する"
  },
  {
    "row": 75,
    "rowsha": "Yo0kOfD+YrkFq8V58X2u2Cb7DBS35yn5ifLYnG6+XB0=",
    "originContent": "- **Base Image Impact**: Seeing exactly how changes to a base image affect multiple derived images",
    "translatedContent": "- **最適化の機会**：イメージバリアント間でより良く活用できる共有コンポーネントを特定する"
  },
  {
    "row": 76,
    "rowsha": "ki3fH0UPzJ7A7KweKewJ0qO2e8h0iAP1uwwL64nh5VI=",
    "originContent": "- **Optimization Opportunities**: Identifying shared components that could be better leveraged across image variants",
    "translatedContent": ""
  },
  {
    "row": 77,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "![共有ベースと分岐するブランチを示すマルチイメージリポジトリ構造](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/multiimage.png)"
  },
  {
    "row": 78,
    "rowsha": "BbN5OLYB4s+kmmpRubPeS7o9xcI4EIqsB8NFc29QUQI=",
    "originContent": "![Multi-image repository structure showing shared base and diverging branches](https://raw.githubusercontent.com/Virviil/oci2git/main/./assets/multiimage.png)",
    "translatedContent": ""
  },
  {
    "row": 79,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### 追加のユースケース"
  },
  {
    "row": 80,
    "rowsha": "D4/0KP+uRgYhIhVFEBoyiqt95uyOgb7+oYn24/0QCdY=",
    "originContent": "### Additional Use Cases",
    "translatedContent": ""
  },
  {
    "row": 81,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "- **セキュリティ監査**：脆弱なパッケージや設定が正確にいつ導入されたかを特定し、特定のビルド指示に遡ることができる。"
  },
  {
    "row": 82,
    "rowsha": "XpiOHvscMgQVCt9dw8vIqza+SY8H4+PornFuTrVyvvg=",
    "originContent": "- **Security Auditing**: Identify exactly when vulnerable packages or configurations were introduced and trace them back to specific build instructions.",
    "translatedContent": "- **イメージ最適化**：レイヤー構造を分析して冗長な操作や統合可能な大きなファイルを見つけ、イメージサイズの削減に役立てる。"
  },
  {
    "row": 83,
    "rowsha": "ht04W08EP7CJDOoh0DwD/Dozp/1fC8UYEIX5+R6ICwk=",
    "originContent": "- **Image Optimization**: Analyze layer structures to find redundant operations or large files that could be consolidated, helping to reduce image size.",
    "translatedContent": "- **依存関係管理**：依存関係がイメージ履歴のどの時点で追加、アップグレード、または削除されたかを監視する。"
  },
  {
    "row": 84,
    "rowsha": "U4Wj74BqfCGU6N6MlI+ZwqdXxuJ9sFOjYpdn5xAp8Uw=",
    "originContent": "- **Dependency Management**: Monitor when dependencies were added, upgraded, or removed across the image history.",
    "translatedContent": "- **ビルドプロセスの改善**：レイヤー構成を検証してDockerfileの指示を最適化し、キャッシュ効率とイメージサイズの縮小を図る。"
  },
  {
    "row": 85,
    "rowsha": "N42jLPvwR5fiEcM4X17ISprr2UjtkFiYkMmB4n8GuP4=",
    "originContent": "- **Build Process Improvement**: Examine layer composition to optimize Dockerfile instructions for better caching and smaller image size.",
    "translatedContent": "- **クロスイメージ比較**：複数の関連イメージをGitリポジトリに変換し、Gitの比較ツールを使って差異と共通点を分析する。"
  },
  {
    "row": 86,
    "rowsha": "qLA3g0haMoRlswu5jqH5D9IkPYPNZxCHuo51hYpI4Po=",
    "originContent": "- **Cross-Image Comparison**: Convert multiple related images to Git repositories and use Git's comparison tools to analyze their differences and commonalities.",
    "translatedContent": ""
  },
  {
    "row": 87,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## インストール"
  },
  {
    "row": 88,
    "rowsha": "oV0SUDvwD2VN8Gi9nlr2JZ2xcDrASmE2W5kc5SVX5eo=",
    "originContent": "## Installation",
    "translatedContent": ""
  },
  {
    "row": 89,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### ソースからのインストール"
  },
  {
    "row": 90,
    "rowsha": "smCviOjFIAlOvuDZi5hcf9TF4fvruU1pMREpfc9h7z4=",
    "originContent": "### From Source",
    "translatedContent": ""
  },
  {
    "row": 91,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 92,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 93,
    "rowsha": "EJ1kGcOyM89S1RwOEHSj/NB/bjY/T7n0DRgAblC5zSQ=",
    "originContent": "# Clone the repository",
    "translatedContent": "# Clone the repository"
  },
  {
    "row": 94,
    "rowsha": "GgDmsyotXIYA9lPAF8UqVbDmtab+bmOTjtIHmgptW58=",
    "originContent": "git clone https://github.com/virviil/oci2git.git",
    "translatedContent": "git clone https://github.com/virviil/oci2git.git"
  },
  {
    "row": 95,
    "rowsha": "Cg0UvvWHJIAgHoDR/ghkoy1Oa46TeGoV+FMOkIsVcwU=",
    "originContent": "cd oci2git",
    "translatedContent": "cd oci2git"
  },
  {
    "row": 96,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 97,
    "rowsha": "H6+xT/LyFn0O/PQ/zBIXSd5Jl6SHlzOBquL67WbGC7M=",
    "originContent": "# Install locally",
    "translatedContent": "# Install locally"
  },
  {
    "row": 98,
    "rowsha": "UrfYV89HEr7Y2LOJNzJS2dfNsaKrBlUdCgPrc5ar/XM=",
    "originContent": "cargo install --path .",
    "translatedContent": "cargo install --path ."
  },
  {
    "row": 99,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 100,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 101,
    "rowsha": "s0ICCxui+k3ysWndrW/JgMzRMUhamp4AwQ4C8sYtiQA=",
    "originContent": "### From Crates.io",
    "translatedContent": "### Crates.ioからの入手方法"
  },
  {
    "row": 102,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 103,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 104,
    "rowsha": "OQT+ZkNKWvK3aZcEdqXoFRvgjGUcASoUE9xU/xk+/L4=",
    "originContent": "cargo install oci2git",
    "translatedContent": "cargo install oci2git"
  },
  {
    "row": 105,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 106,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 107,
    "rowsha": "Y7/WGgVhslWiyqCi463Qkcp+Mn8voGpAfLsv80G4WNg=",
    "originContent": "## Usage",
    "translatedContent": "## 使用方法"
  },
  {
    "row": 108,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 109,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 110,
    "rowsha": "2WRwWCw177jhmY5buD8ojF4vHlooOLdyRvwnmrgEYWo=",
    "originContent": "oci2git [OPTIONS] <IMAGE>",
    "translatedContent": "oci2git [OPTIONS] <IMAGE>"
  },
  {
    "row": 111,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 112,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 113,
    "rowsha": "oSgcDB7IRyqQzvCaBTUTZjOSF0fLxHKz1ngn/NkHWig=",
    "originContent": "Arguments:",
    "translatedContent": "引数:"
  },
  {
    "row": 114,
    "rowsha": "72lmQzDj4J9lGCyDB3LTUf9xx2x9vXL+Ltt98pd0hIk=",
    "originContent": "  `<IMAGE>`  Image name to convert (e.g., 'ubuntu:latest') or path to tarball when using the tar engine",
    "translatedContent": "  `<IMAGE>`  変換するイメージ名（例: 'ubuntu:latest'）またはtarエンジン使用時のtarボールのパス"
  },
  {
    "row": 115,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 116,
    "rowsha": "NnQx/WZLtobZ/9ITM5sTgv2OFQnCH83If6v2i9FvEzM=",
    "originContent": "Options:",
    "translatedContent": "オプション:"
  },
  {
    "row": 117,
    "rowsha": "DVu2KWbsYSpZe0KWcYqDtTpSdS4mtD7GWWbWSGb70Oc=",
    "originContent": "  `-o, --output <o>`  Output directory for Git repository [default: ./container_repo]",
    "translatedContent": "  `-o, --output <o>`  Gitリポジトリの出力ディレクトリ [デフォルト: ./container_repo]"
  },
  {
    "row": 118,
    "rowsha": "a9fQWVyCS1P9nAlLPlXbfd+NJtje69DmQ3azfee4ix4=",
    "originContent": "  `-e, --engine <ENGINE>`  Container engine to use (docker, nerdctl, tar) [default: docker]",
    "translatedContent": "  `-e, --engine <ENGINE>`  使用するコンテナエンジン（docker、nerdctl、tar） [デフォルト: docker]"
  },
  {
    "row": 119,
    "rowsha": "pfNaVuEMbOBYDo771cuen9Xm6tIA5QTaymnUytkWncg=",
    "originContent": "  `-h, --help`            Print help information",
    "translatedContent": "  `-h, --help`            ヘルプ情報を表示"
  },
  {
    "row": 120,
    "rowsha": "3eBdsxBaF1NM21tvY2+/U1zZoXNXI+AYag5nMbKQuZE=",
    "originContent": "  `-V, --version`         Print version information",
    "translatedContent": "  `-V, --version`         バージョン情報を表示"
  },
  {
    "row": 121,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 122,
    "rowsha": "YGL4UqTuaFB0ZGIuBIgF08qREavcDoYEpCh+1s8q9Hw=",
    "originContent": "Environment Variables:",
    "translatedContent": "環境変数:"
  },
  {
    "row": 123,
    "rowsha": "L/o5NQhvt3s5wMDzH0UBcCbYTr+YSY+3NRMsKy0uOts=",
    "originContent": "  `TMPDIR`  Set this environment variable to change the default location used for intermediate data processing. This is platform-dependent (e.g., `TMPDIR` on Unix/macOS, `TEMP` or `TMP` on Windows).",
    "translatedContent": "  `TMPDIR`  中間データ処理に使用されるデフォルトの場所を変更するためにこの環境変数を設定します。これはプラットフォーム依存です（例: Unix/macOSでは`TMPDIR`、Windowsでは`TEMP`または`TMP`）。"
  },
  {
    "row": 124,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 125,
    "rowsha": "DRmrRjGXhXaABVNjE/Ar07m3eartgu6sW/en95atPvE=",
    "originContent": "## Examples",
    "translatedContent": "## 例"
  },
  {
    "row": 126,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 127,
    "rowsha": "tOe+OVX+wmFfmqDbxSgitmk7kWcEwwrN773KBCziJHI=",
    "originContent": "Using Docker engine (default):",
    "translatedContent": "Dockerエンジン使用（デフォルト）:"
  },
  {
    "row": 128,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 129,
    "rowsha": "CwijH6mSrhzZB8aiSJpD0fbRWryeaub9zJijG6SDIic=",
    "originContent": "oci2git -o ./ubuntu-repo ubuntu:latest",
    "translatedContent": "oci2git -o ./ubuntu-repo ubuntu:latest"
  },
  {
    "row": 130,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 131,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 132,
    "rowsha": "lchakMbjmv1co1SLeMYNOKe+JMNJchmUzW4HrVyzifo=",
    "originContent": "Using an already downloaded image tarball:",
    "translatedContent": "すでにダウンロードされたイメージtarballを使用する場合："
  },
  {
    "row": 133,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 134,
    "rowsha": "NSDqpfFBxy00SAPgyBe+P5tig3WY9lqE/l8SRgvZnK4=",
    "originContent": "oci2git -e tar -o ./ubuntu-repo /path/to/ubuntu-latest.tar",
    "translatedContent": "oci2git -e tar -o ./ubuntu-repo /path/to/ubuntu-latest.tar"
  },
  {
    "row": 135,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 136,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "tarエンジンは有効なOCIフォーマットのtarボールを期待しており、これは通常`docker save`で作成されます："
  },
  {
    "row": 137,
    "rowsha": "JhyrPFQKgZ6fhAnxD3vIs/T43bxfz9m3OnBQ6JvohcA=",
    "originContent": "The tar engine expects a valid OCI format tarball, which is typically created with `docker save`:",
    "translatedContent": ""
  },
  {
    "row": 138,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 139,
    "rowsha": "swtiJp2yNOZ6Ht2Rb0LC9bkkw94oTuAnkm9LK8A2Blo=",
    "originContent": "# Create a tarball from a local Docker image",
    "translatedContent": "# Create a tarball from a local Docker image"
  },
  {
    "row": 140,
    "rowsha": "0dJQePuNnqBLk40Y93ZgPm8P3Swzsjd/UCAkmwLsRmw=",
    "originContent": "docker save -o ubuntu-latest.tar ubuntu:latest",
    "translatedContent": "docker save -o ubuntu-latest.tar ubuntu:latest"
  },
  {
    "row": 141,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 142,
    "rowsha": "ezIq3aqK4rOW/G624kkj8OmBApTf0SM6DdJ3trUC8Sk=",
    "originContent": "# Convert the tarball to a Git repository",
    "translatedContent": "# Convert the tarball to a Git repository"
  },
  {
    "row": 143,
    "rowsha": "cGK8BEjM9KLqC11KAFA5FBzvWyaQeLcvI3rB2tWEgdE=",
    "originContent": "oci2git -e tar -o ./ubuntu-repo ubuntu-latest.tar",
    "translatedContent": "oci2git -e tar -o ./ubuntu-repo ubuntu-latest.tar"
  },
  {
    "row": 144,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 145,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 146,
    "rowsha": "OOWYf6W46cviTyPAAxNpPJfVj3Fz3L4yTa0jzxfElPw=",
    "originContent": "This will create a Git repository in `./ubuntu-repo` containing:",
    "translatedContent": "これにより、`./ubuntu-repo` に以下を含むGitリポジトリが作成されます："
  },
  {
    "row": 147,
    "rowsha": "r5qWFXFkojxcgiNwLnGMlSadWVnCbfub6qM8e9q/8Nw=",
    "originContent": "- `Image.md` - Complete metadata about the image in Markdown format",
    "translatedContent": "- `Image.md` - 画像に関する完全なメタデータをMarkdown形式で記述"
  },
  {
    "row": 148,
    "rowsha": "maGh1e8JV7Pxg6B5BF5ccKdr3748ZRk9+1VXfyfkCCk=",
    "originContent": "- `rootfs/` - The filesystem content from the container",
    "translatedContent": "- `rootfs/` - コンテナからのファイルシステムの内容"
  },
  {
    "row": 149,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 150,
    "rowsha": "wCWXhTKQ6DvpyP8SADyuKHM/QiDACq4ZQnoi9qcq+n8=",
    "originContent": "The Git history reflects the container's layer history:",
    "translatedContent": "Gitの履歴はコンテナのレイヤー履歴を反映します："
  },
  {
    "row": 151,
    "rowsha": "mKSS8K3EnUBF75usNbBpi8f03aCRxjCDSod1fw5UlPo=",
    "originContent": "- The first commit contains only the `Image.md` file with full metadata",
    "translatedContent": "- 最初のコミットは完全なメタデータを含む `Image.md` ファイルのみ"
  },
  {
    "row": 152,
    "rowsha": "DumNUFJcRb5coqibkEQ+d640i1Rp+R8PheJDIxOPrIs=",
    "originContent": "- Each subsequent commit represents a layer from the original image",
    "translatedContent": "- 以降の各コミットは元のイメージのレイヤーを表す"
  },
  {
    "row": 153,
    "rowsha": "nAIJv9HcEeQMdJh37pgdGN/infZD9mMXC360e1LQkdY=",
    "originContent": "- Commits include the Dockerfile command as the commit message",
    "translatedContent": "- コミットメッセージにはDockerfileのコマンドが含まれる"
  },
  {
    "row": 154,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 155,
    "rowsha": "4YmSzpzFxS1sIl9f+qnViulCsiQaK92OjsAy48LamXw=",
    "originContent": "## Repository Structure",
    "translatedContent": "## リポジトリ構成"
  },
  {
    "row": 156,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 157,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 158,
    "rowsha": "ymd463MLTfw5xIKiUKp3sacrkQKq/Rg5QrDuNbpDvcY=",
    "originContent": "repository/",
    "translatedContent": "repository/"
  },
  {
    "row": 159,
    "rowsha": "rGSVTlNtMKKBIW1FxCJWjanSdr8dlkP7O6zHyMZodq8=",
    "originContent": "├── .git/",
    "translatedContent": "├── .git/"
  },
  {
    "row": 160,
    "rowsha": "mNFu3LETomltwZN7TAyCPLhKNPjKB0qREbpCI/mLuWk=",
    "originContent": "├── Image.md     # Complete image metadata",
    "translatedContent": "├── Image.md     # Complete image metadata"
  },
  {
    "row": 161,
    "rowsha": "PoxusKysn7mnRdYEig5Hq6oqPxeAE2uQdy2gcbouJ4U=",
    "originContent": "└── rootfs/      # Filesystem content from the container",
    "translatedContent": "└── rootfs/      # Filesystem content from the container"
  },
  {
    "row": 162,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 163,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 164,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## 要件"
  },
  {
    "row": 165,
    "rowsha": "mMM7CgcUhEutaXLQUe7dHnP5fzAA/B384D1dAMFg/uA=",
    "originContent": "## Requirements",
    "translatedContent": ""
  },
  {
    "row": 166,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "- Rust 2021 エディション"
  },
  {
    "row": 167,
    "rowsha": "Us8fEFZmHC5X2cJkY2OvtPWFQAio7vkyVb6AuvWar/8=",
    "originContent": "- Rust 2021 edition",
    "translatedContent": "- Docker CLI（Dockerエンジンのサポート用）"
  },
  {
    "row": 168,
    "rowsha": "y2x00WuBv+Za3+ZZ4PNU5MmCW6c1ChHUs7aZPMjrozg=",
    "originContent": "- Docker CLI (for Docker engine support)",
    "translatedContent": "- Git"
  },
  {
    "row": 169,
    "rowsha": "rCZ/3ibSx3AY5DZNLpABDQtGlwv/91+MA66GxZb8src=",
    "originContent": "- Git",
    "translatedContent": ""
  },
  {
    "row": 170,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## ライセンス"
  },
  {
    "row": 171,
    "rowsha": "bFSaVtsB4CHySNjaeCiaMZfT24b+DTbTM4HQ38cR6Lw=",
    "originContent": "## License",
    "translatedContent": ""
  },
  {
    "row": 172,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "MIT"
  },
  {
    "row": 173,
    "rowsha": "5dz/6Da27IpY5JJBm1UOZfuMvcMIUDl55drLM6x+o7c=",
    "originContent": "MIT",
    "translatedContent": ""
  }
]