[
  {
    "row": 1,
    "rowsha": "ORHkZy1aZEOTqS4/AqneAQ8W2kXn7ZXQinKydUXb/Yw=",
    "originContent": "# RISC-V Vector benchmark",
    "translatedContent": "# RISC-V ベクターベンチマーク"
  },
  {
    "row": 2,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 3,
    "rowsha": "FSmW3ivRY3MYq56AmMpjtwQdkSsBIjG1lqQmf9TmcUE=",
    "originContent": "A collection of RISC-V Vector (RVV) benchmarks to help developers write portably performant RVV code.",
    "translatedContent": "ポータブルで高性能なRVVコードを書くための開発者支援用RISC-Vベクター（RVV）ベンチマークのコレクションです。"
  },
  {
    "row": 4,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 5,
    "rowsha": "0vhtGt+ZlgXOgITSo1iF9LMqLelNoJY5HzfAdM6RRK4=",
    "originContent": "Benchmark results can be found at: https://camel-cdr.github.io/rvv-bench-results",
    "translatedContent": "ベンチマーク結果は以下で確認できます：https://camel-cdr.github.io/rvv-bench-results"
  },
  {
    "row": 6,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 7,
    "rowsha": "atAsnd+Imf0Koh1YsWCDB/sFMv4GpkEVu02FPmK1uUo=",
    "originContent": "## Benchmarks ([./bench/](./bench/))",
    "translatedContent": "## ベンチマーク ([./bench/](./bench/))"
  },
  {
    "row": 8,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 9,
    "rowsha": "PK4CnG++cvbZvYpzuLgBC3ZxlkREiGexDmwmjfeSTpk=",
    "originContent": "Contains a bunch of benchmark of different implementations of certain algorithms.",
    "translatedContent": "特定のアルゴリズムのさまざまな実装のベンチマークを多数収録しています。"
  },
  {
    "row": 10,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 11,
    "rowsha": "3YmBfYhdK+HTo06a7dQjEUfuVFNie/N7lyWzciDDsQc=",
    "originContent": "## Instruction cycle count ([./instructions/](./instructions/))",
    "translatedContent": "## 命令サイクルカウント ([./instructions/](./instructions/))"
  },
  {
    "row": 12,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 13,
    "rowsha": "AMmALKgqh75UryFWjmXdWs+tY4aYNF5eSdQj3c7aihU=",
    "originContent": "Measures the cycle count of RVV instructions by unrolling and looping over the given instruction repeatedly.",
    "translatedContent": "指定したRVV命令を繰り返し展開しループさせることで、命令のサイクル数を測定します。"
  },
  {
    "row": 14,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 15,
    "rowsha": "eetlngBf9IRRYZknBdo+Zo5q71Wk5hbFmnHDAzfrtps=",
    "originContent": "## Getting started",
    "translatedContent": "## はじめに"
  },
  {
    "row": 16,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 17,
    "rowsha": "RATqtRwnHlBfbneNgql/2Fludl4qUf7zGgLPqvLpT+k=",
    "originContent": "Start by configuring [./config.mk](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/./config.mk), such that `make` works and optionally [./run.sh](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/./run.sh), which allows you to compile and run using `make run`.",
    "translatedContent": "まず[./config.mk](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/./config.mk)を設定して`make`が動作するようにし、オプションで`make run`を使ってコンパイルと実行を可能にする[./run.sh](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/./run.sh)も設定します。"
  },
  {
    "row": 18,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 19,
    "rowsha": "MhZZ7phZTBX2DGWuxewP3StXIx2hJgYfylpZkhLVVL0=",
    "originContent": "The default configuration should work with all recent clang builds and doesn't require a full cross compilation toolchain, because it builds in freestanding mode.",
    "translatedContent": "デフォルト設定は最近のclangビルドで動作し、フルクロスコンパイルツールチェーンは不要です。なぜならfreestandingモードでビルドするためです。"
  },
  {
    "row": 20,
    "rowsha": "FJ+maq7xiFb21vAVXU0ficI4xVZC/fXbijKeMvZ/7zg=",
    "originContent": "This means it will only work on linux, or linux syscall compatible OS.",
    "translatedContent": "つまりLinuxかLinuxのシステムコール互換OSでのみ動作します。"
  },
  {
    "row": 21,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 22,
    "rowsha": "OuTaq2UdZvS6857Cil8hZ+glV8F4w7yOnWmUYSZaRqw=",
    "originContent": "On recent linux versions, the performance counters aren't exposed by default, you may have to execute `echo 2 >/proc/sys/kernel/perf_user_access` and append `-DUSE_PERF_EVENT` to the `CFLAGS=...` line in [./config.mk](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/./config.mk) (if that doesn't work, try `-DUSE_PERF_EVENT_SLOW` instead).",
    "translatedContent": "最近のLinuxではパフォーマンスカウンターはデフォルトで公開されていないため、`echo 2 >/proc/sys/kernel/perf_user_access`を実行し、[./config.mk](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/./config.mk)の`CFLAGS=...`行に`-DUSE_PERF_EVENT`を追加する必要があります（動作しない場合は代わりに`-DUSE_PERF_EVENT_SLOW`を試してください）。"
  },
  {
    "row": 23,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 24,
    "rowsha": "wUQRkKYbx9qCypZK4u3lwuJyLpsdvBV9bdz/QgdHrmM=",
    "originContent": "You can configure [./config.mk](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/./config.mk) to build a hosted build or configure it with your custom toolchain, add the `-DCUSTOM_HOST` define, and implement the unimplemented functions under `#ifdef CUSTOM_HOST` in [./nolibc.h](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/./nolibc.h).",
    "translatedContent": "[./config.mk](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/./config.mk)をホステッドビルド用に設定するか、カスタムツールチェーンで設定し、`-DCUSTOM_HOST`を定義に追加し、[./nolibc.h](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/./nolibc.h)の`#ifdef CUSTOM_HOST`以下の未実装関数を実装してください。"
  },
  {
    "row": 25,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 26,
    "rowsha": "QRFDvlLEfnqVJ7RdOPfbJ9BdOg2Q3B8Y00dVWWStkx4=",
    "originContent": "XTheadVector isn't supported anymore.",
    "translatedContent": "XTheadVectorはサポートを終了しました。"
  },
  {
    "row": 27,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 28,
    "rowsha": "pq/plj5gqTE4Q0XCTVhuV7298OqC731xEj7r6fR+2AA=",
    "originContent": "### Running benchmarks ([./bench/](./bench/))",
    "translatedContent": "### ベンチマークの実行 ([./bench/](./bench/))"
  },
  {
    "row": 29,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 30,
    "rowsha": "1k6Axz94UWWc0Bsegctd7ts37gcdhTKiyvQz8YS8+cM=",
    "originContent": "To run the benchmarks, first look through ([./bench/config.h](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/./bench/config.h)) and adjust it to your processor (e.g. set `HAS_E64`). If it takes too long to execute, try lowering `MAX_MEM`, which is used to scale the benchmark, and play around with the other constants until it executes in a reasonable amount of time and gives a relatively smooth graph.",
    "translatedContent": "ベンチマークを実行するには、まず([./bench/config.h](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/./bench/config.h))を確認し、プロセッサに合わせて調整します（例：`HAS_E64`を設定）。実行に時間がかかる場合は、ベンチマークのスケールに使われる`MAX_MEM`を減らし、他の定数も調整して、実行時間が適切で比較的滑らかなグラフになるようにします。"
  },
  {
    "row": 31,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 32,
    "rowsha": "uOlVPPF/VE+7OKIaFzxzy/DF4alRHNigKLxiGwlBJEo=",
    "originContent": "Now you can just run the benchmarks using `make run` in the ([./bench/](./bench/)) directory, or `make` to just build the executables.",
    "translatedContent": "その後、([./bench/](./bench/))ディレクトリで`make run`を実行するか、実行ファイルだけをビルドする場合は`make`を実行してください。"
  },
  {
    "row": 33,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 34,
    "rowsha": "3P6meKSCPE5J4W3ClsBBwKPoV14SH3bmeDNEJJs3d+k=",
    "originContent": "### Measuring cycle count ([./instructions/](./instructions/))",
    "translatedContent": "### サイクルカウントの測定 ([./instructions/](./instructions/))"
  },
  {
    "row": 35,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 36,
    "rowsha": "okN6ed2j+2Y8j5TB2iibQQOnTeJelgsF3a7jGOVVEhQ=",
    "originContent": "To run the cycle count measurement, first configure [instructions/rvv/config.h](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/instructions/rvv/config.h) to your processor.",
    "translatedContent": "サイクルカウント測定を実行するには、まず[instructions/rvv/config.h](https://raw.githubusercontent.com/camel-cdr/rvv-bench/main/instructions/rvv/config.h)をプロセッサに合わせて設定します。"
  },
  {
    "row": 37,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 38,
    "rowsha": "MHva9rFWPs7Y64Pjrls/VBT5wsSQwOmCqcUucjCGWBQ=",
    "originContent": "Now you can run the measurement using `make run` in the ([./instructions/rvv/](./instructions/rvv/)) directory, or `make` to just build the executables.",
    "translatedContent": "その後、([./instructions/rvv/](./instructions/rvv/))ディレクトリで`make run`を実行するか、実行ファイルだけをビルドする場合は`make`を実行してください。"
  },
  {
    "row": 39,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 40,
    "rowsha": "dq8cZCLUwsRTjkkYqYw2+RWdxFEo11yoUoZqau9HvyA=",
    "originContent": "For XTheadVector use the ([./instructions/xtheadvector/](./instructions/xtheadvector/)) directory instead. (this isn't maintained anymore)",
    "translatedContent": "XTheadVectorの場合は([./instructions/xtheadvector/](./instructions/xtheadvector/))ディレクトリを使用してください。（こちらはもはやメンテナンスされていません）"
  },
  {
    "row": 41,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 42,
    "rowsha": "R5ZPLZ4vkE9tjX5qe8QB7AkTfWZsuNTGFLFKMp2KUzM=",
    "originContent": "## Contributing",
    "translatedContent": "## 貢献について"
  },
  {
    "row": 43,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 44,
    "rowsha": "qY/ETJS2ixFUyg30/IJDyi8g8WvYoZDhUk09CR/No3k=",
    "originContent": "Here are some suggestions of things that still need to be done.",
    "translatedContent": "以下はまだ行う必要がある作業の提案です。"
  },
  {
    "row": 45,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 46,
    "rowsha": "xE/r3EAKCIliSuFWjm0sUAfnXhhwCRu2HsbJqS9RdCE=",
    "originContent": "* contribute a measurement of a new CPU to: https://github.com/camel-cdr/rvv-bench-results \\",
    "translatedContent": "* 新しいCPUの測定結果を https://github.com/camel-cdr/rvv-bench-results に貢献してください。\\"
  },
  {
    "row": 47,
    "rowsha": "xoSG9N0qa4hiqyPdJJeyJoXd7g/sqJVYxTo6tUZsFtE=",
    "originContent": "  You can just create an issue with a single json file, which contains all concatenated [./bench/](./bench/) results. (after proper setup, `make run > out.json` should do the trick). \\",
    "translatedContent": "  単一のjsonファイルを含むissueを作成するだけで構いません。このファイルにはすべての結合された[./bench/](./bench/)の結果が含まれます。（適切なセットアップ後、`make run > out.json` で実行可能です）。\\"
  },
  {
    "row": 48,
    "rowsha": "yT6iwcWiQsSpos2Q+/4m6nTcwthVciNSQmozzlk4aI4=",
    "originContent": "* implement non memory bound benchmarks",
    "translatedContent": "* メモリ非依存ベンチマークの実装"
  },
  {
    "row": 49,
    "rowsha": "QFwgp1N3p+8fohBHFjhKAlSBOJ8GOH88jodQwVpUHsk=",
    "originContent": "* implement more benchmarks",
    "translatedContent": "* さらに多くのベンチマークの実装"
  },
  {
    "row": 50,
    "rowsha": "MlzK0xJ4PogmG/VcU7h8DKcqEXnZ8UKzoXGs3FAytxM=",
    "originContent": "* better cycle count measurements: throughput vs latency (also: can we figure out the execution port configuration?)",
    "translatedContent": "* より良いサイクルカウント測定：スループット対レイテンシ（また：実行ポート構成を特定できますか？）"
  },
  {
    "row": 51,
    "rowsha": "6KnPE9TQgqJNz+Ieg6+CBYw3XipmrFINEpvAEoulWuk=",
    "originContent": "* cycle count for load/stores",
    "translatedContent": "* ロード／ストアのサイクルカウント"
  },
  {
    "row": 52,
    "rowsha": "9Iv85q1v+dIdR5osJ30VNVRHh8a/ZgUlbQ1t1WbvSU4=",
    "originContent": "* cycle count for vsetvl",
    "translatedContent": "* vsetvlのサイクルカウント"
  },
  {
    "row": 53,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 54,
    "rowsha": "bFSaVtsB4CHySNjaeCiaMZfT24b+DTbTM4HQ38cR6Lw=",
    "originContent": "## License",
    "translatedContent": "## ライセンス"
  },
  {
    "row": 55,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 56,
    "rowsha": "ICc4Vy1/+XdoO5LcZNVtAYO6qdFgMziQHTgyb6OU4IE=",
    "originContent": "This repository is licensed under the MIT [LICENSE](LICENSE).",
    "translatedContent": "このリポジトリはMITライセンス[LICENSE](LICENSE)の下でライセンスされています。"
  },
  {
    "row": 57,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 58,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  }
]