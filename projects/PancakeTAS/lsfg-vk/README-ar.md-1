{
  "id": 1,
  "origin": "# lsfg-vk\nThis project brings [Lossless Scaling's Frame Generation](https://store.steampowered.com/app/993090/Lossless_Scaling/) to Linux!\n>[!NOTE]\n> This is a work-in-progress. While frame generation has worked in a few games, there's still a long way to go. Please review the wiki for support (the wiki is not written yet)\n\n## Building, Installing and Running\n\n>[!CAUTION]\n> The build instructions have recently changed. Please review them.\n\nIn order to compile LSFG, make sure you have the following components installed on your system:\n- Traditional build tools (+ sed, git)\n- Clang compiler (this project does NOT compile easily with GCC)\n- Vulkan header files\n- CMake build system\n- Meson build system (for DXVK)\n- Ninja build system (backend for CMake)\n\nCompiling lsfg-vk is relatively straight forward, as everything is neatly integrated into CMake:\n```bash\n$ cmake -B build -G Ninja \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=~/.local \\\n    -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \\\n    -DCMAKE_CXX_CLANG_TIDY=\"\"\n$ cmake --build build\n$ cmake --install build\n```\nThis will install lsfg-vk to ~/.local/lib and ~/.local/share/vulkan.\n\nNext, you'll need to download Lossless Scaling from Steam. Switch to the `legacy_2.13` branch or download the corresponding depot.\nCopy or note down the path of \"Lossless.dll\" from the game files.\n\nFinally, let's actually start a program with frame generation enabled. I'm going to be using `vkcube` for this example:\n```bash\nVK_INSTANCE_LAYERS=\"VK_LAYER_LS_frame_generation\" LSFG_DLL_PATH=\"/home/pancake/games/Lossless Scaling/Lossless.dll\" LSFG_MULTIPLIER=4 vkcube\n```\nMake sure you adjust the paths. Let's examine each one:\n- `LVK_INSTANCE_LAYERS`: Specify `VK_LAYER_LS_frame_generation` here. This forces any Vulkan app to load the lsfg-vk layer.\n- `LSFG_DLL_PATH`: Here you specify the Lossless.dll you downloaded from Steam. lsfg-vk will extract and translate the shaders from here.\n- `LSFG_MULTIPLIER`: This is the multiplier you should be familiar with. Specify `2` for doubling the framerate, etc.\n- `VK_LAYER_PATH`: If you did not install to `~/.local` or `/usr`, you have to specify the `explicit_layer.d` folder here.\n\n>[!WARNING]\n> Unlike on Windows, LSFG_MULTIPLIER is heavily limited here (at the moment!). If your hardware can create 8 swapchain images, then setting LSFG_MULTIPLIER to 4 occupies 4 of those, leaving only 4 to the game. If the game requested 5 or more, it will crash.\n",
  "origin_sha": "uxYiaVQ8HcbifhmKjFaWo6h0d3am2FT7mbjFZPpk5WI=",
  "translate": "# lsfg-vk\nيجلب هذا المشروع [توليد الإطارات من Lossless Scaling](https://store.steampowered.com/app/993090/Lossless_Scaling/) إلى لينكس!\n>[!NOTE]\n> هذا العمل قيد الإنجاز. على الرغم من أن توليد الإطارات عمل في بعض الألعاب، لا يزال الطريق طويلاً أمامنا. يرجى مراجعة الويكي للدعم (الويكي لم يُكتب بعد)\n\n## البناء، التثبيت والتشغيل\n\n>[!CAUTION]\n> تم تغيير تعليمات البناء مؤخراً. يرجى مراجعتها.\n\nلكي تقوم بترجمة LSFG، تأكد من تثبيت المكونات التالية على نظامك:\n- أدوات البناء التقليدية (+ sed, git)\n- مترجم Clang (هذا المشروع لا يُترجم بسهولة مع GCC)\n- ملفات ترويسة Vulkan\n- نظام البناء CMake\n- نظام البناء Meson (من أجل DXVK)\n- نظام البناء Ninja (خلفية لـCMake)\n\nترجمة lsfg-vk مباشرة نسبياً، حيث أن كل شيء مدمج بشكل منظم في CMake:\n```bash\n$ cmake -B build -G Ninja \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=~/.local \\\n    -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \\\n    -DCMAKE_CXX_CLANG_TIDY=\"\"\n$ cmake --build build\n$ cmake --install build\n```\nسيتم تثبيت lsfg-vk في ~/.local/lib و ~/.local/share/vulkan.\n\nبعد ذلك، ستحتاج إلى تنزيل Lossless Scaling من Steam. انتقل إلى الفرع `legacy_2.13` أو قم بتنزيل المستودع المقابل.\nانسخ أو لاحظ مسار \"Lossless.dll\" من ملفات اللعبة.\n\nوأخيراً، دعونا نبدأ برنامجاً مع تمكين توليد الإطارات. سأستخدم `vkcube` في هذا المثال:\n```bash\nVK_INSTANCE_LAYERS=\"VK_LAYER_LS_frame_generation\" LSFG_DLL_PATH=\"/home/pancake/games/Lossless Scaling/Lossless.dll\" LSFG_MULTIPLIER=4 vkcube\n```\nتأكد من تعديل المسارات. دعونا نفحص كل واحدة منها:\n- `LVK_INSTANCE_LAYERS`: حدد هنا `VK_LAYER_LS_frame_generation`. هذا يجبر أي تطبيق Vulkan على تحميل طبقة lsfg-vk.\n- `LSFG_DLL_PATH`: هنا تحدد ملف Lossless.dll الذي قمت بتنزيله من Steam. سيقوم lsfg-vk باستخراج وترجمة التظليلات من هنا.\n- `LSFG_MULTIPLIER`: هذا هو المضاعف الذي يجب أن تكون على دراية به. حدد `2` لمضاعفة معدل الإطارات، وهكذا.\n- `VK_LAYER_PATH`: إذا لم تثبت في `~/.local` أو `/usr`، يجب عليك تحديد مجلد `explicit_layer.d` هنا.\n\n>[!WARNING]\n> على عكس ويندوز، LSFG_MULTIPLIER هنا محدود بشكل كبير (في الوقت الحالي!). إذا كان جهازك يمكنه إنشاء 8 صور swapchain، فإن تعيين LSFG_MULTIPLIER إلى 4 سيشغل 4 منها، ويترك فقط 4 للعبة. إذا طلبت اللعبة 5 أو أكثر، فسوف تنهار.",
  "status": "ok"
}