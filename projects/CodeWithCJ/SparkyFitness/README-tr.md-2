{
  "id": 2,
  "origin": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Access the Application:**\n    Once the services are up and running, access SparkyFitness in your web browser at:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optional Configuration:**\n    To enable the AI Chatbot's full functionality, including secure API key storage and database access, follow these steps:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Generate a secret in \"Supabase -> Edge Functions\" -> \"Environment Variables\". This key is used for encrypting your AI keys when it is stored within Supabase.\n\n    *   **Generate `SUPABASE_ACCESS_TOKEN`:**\n        1.  Access your Docker console.\n        2.  Run `supabase login` and authenticate using the provided URL.\n        3.  Retrieve the access token by running `cat ~/.supabase/access-token`.\n        4.  Update your `docker-compose.yml` or Portainer configuration with this token to redeploy.\n        5.  After redeployment, log in to SparkyFitness and configure the AI service with your preferred provider.\n     \n\n### Manul Deployment of DB & Functions to Supabase\n**Method 1:  \n**If you don't have IPV6 network connection enabled, DB migration will fail as Supabase's free verssion doesn't support IPV4 direct connection.\n\n   1. Download latest release and unzip to your PC.\n   2. Navigate to the project folder. Docker needs to be up & running.\n   3. Run below commands. (functions deploy is needed only for AI configuration. If you don't need ChatBOT, you can skip it)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRe-run Docker compose. Front end App will start working.\n\n**Method 2:  \n   1. Download latest release and unzip to your PC.  \n   2. Navigate to the project folder.  \n   3. Go to supabase/migrations. Copy the SQL statements and run them in Supabase-->Project-->SQL Editor one by one in ASC order.  \n   4. [Optional] Do the same for supabase/functions/chat  if you require AI ChatBOT. Copy index.js and run it in Supabase-->Project-->Edge Function-->Deploy new function.  \n\n\n",
  "origin_sha": "r6znWWj0ns4QLCEd2ocJVOflhPH5rNgzKE0nMQYJP/c=",
  "translate": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Uygulamaya Erişim:**\n    Servisler başlatıldıktan sonra, SparkyFitness uygulamasına web tarayıcınızdan şu adresten erişebilirsiniz:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **Yapay Zeka Sohbet Botu - Opsiyonel Yapılandırma:**\n    Yapay Zeka Sohbet Botu'nun tam işlevselliğini etkinleştirmek, güvenli API anahtarı depolama ve veritabanı erişimi dahil olmak üzere, aşağıdaki adımları izleyin:\n\n    *   **`AI_API_ENCRYPTION_KEY` Yapılandırması:** \"Supabase -> Edge Functions\" -> \"Environment Variables\" kısmında bir gizli anahtar oluşturun. Bu anahtar, yapay zeka anahtarlarınızı Supabase içinde saklanırken şifrelemek için kullanılır.\n\n    *   **`SUPABASE_ACCESS_TOKEN` Oluşturma:**\n        1.  Docker konsolunuza erişin.\n        2.  `supabase login` komutunu çalıştırın ve verilen URL ile kimlik doğrulaması yapın.\n        3.  `cat ~/.supabase/access-token` komutunu çalıştırarak erişim anahtarını alın.\n        4.  Bu anahtarı `docker-compose.yml` veya Portainer yapılandırmanıza ekleyin ve yeniden dağıtım yapın.\n        5.  Yeniden dağıtımdan sonra, SparkyFitness'a giriş yapın ve tercih ettiğiniz sağlayıcı ile AI servisini yapılandırın.\n     \n\n### Supabase'e DB & Fonksiyonların Manuel Dağıtımı\n**Yöntem 1:  \n**Eğer IPV6 ağ bağlantınız etkin değilse, veritabanı geçişi başarısız olur çünkü Supabase'in ücretsiz sürümü IPV4 doğrudan bağlantıyı desteklemez.\n\n   1. Son sürümü indirin ve bilgisayarınıza çıkarın.\n   2. Proje klasörüne gidin. Docker'ın çalışıyor olması gerekir.\n   3. Aşağıdaki komutları çalıştırın. (functions deploy sadece AI yapılandırması için gereklidir. ChatBOT'a ihtiyacınız yoksa atlayabilirsiniz)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nDocker compose'u tekrar çalıştırın. Ön uç uygulama çalışmaya başlayacaktır.\n\n**Yöntem 2:  \n   1. Son sürümü indirin ve bilgisayarınıza çıkarın.  \n   2. Proje klasörüne gidin.  \n   3. supabase/migrations dizinine gidin. SQL ifadelerini kopyalayıp Supabase-->Proje-->SQL Editör kısmında sırayla (ASC olarak) çalıştırın.  \n   4. [Opsiyonel] AI ChatBOT'a ihtiyacınız varsa, aynı işlemi supabase/functions/chat için de yapın. index.js dosyasını kopyalayıp Supabase-->Proje-->Edge Function-->Yeni fonksiyon dağıt kısmında çalıştırın.  \n\n",
  "status": "ok"
}