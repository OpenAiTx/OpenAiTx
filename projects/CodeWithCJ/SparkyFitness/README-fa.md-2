{
  "id": 2,
  "origin": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Access the Application:**\n    Once the services are up and running, access SparkyFitness in your web browser at:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optional Configuration:**\n    To enable the AI Chatbot's full functionality, including secure API key storage and database access, follow these steps:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Generate a secret in \"Supabase -> Edge Functions\" -> \"Environment Variables\". This key is used for encrypting your AI keys when it is stored within Supabase.\n\n    *   **Generate `SUPABASE_ACCESS_TOKEN`:**\n        1.  Access your Docker console.\n        2.  Run `supabase login` and authenticate using the provided URL.\n        3.  Retrieve the access token by running `cat ~/.supabase/access-token`.\n        4.  Update your `docker-compose.yml` or Portainer configuration with this token to redeploy.\n        5.  After redeployment, log in to SparkyFitness and configure the AI service with your preferred provider.\n     \n\n### Manul Deployment of DB & Functions to Supabase\n**Method 1:  \n**If you don't have IPV6 network connection enabled, DB migration will fail as Supabase's free verssion doesn't support IPV4 direct connection.\n\n   1. Download latest release and unzip to your PC.\n   2. Navigate to the project folder. Docker needs to be up & running.\n   3. Run below commands. (functions deploy is needed only for AI configuration. If you don't need ChatBOT, you can skip it)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRe-run Docker compose. Front end App will start working.\n\n**Method 2:  \n   1. Download latest release and unzip to your PC.  \n   2. Navigate to the project folder.  \n   3. Go to supabase/migrations. Copy the SQL statements and run them in Supabase-->Project-->SQL Editor one by one in ASC order.  \n   4. [Optional] Do the same for supabase/functions/chat  if you require AI ChatBOT. Copy index.js and run it in Supabase-->Project-->Edge Function-->Deploy new function.  \n\n\n",
  "origin_sha": "r6znWWj0ns4QLCEd2ocJVOflhPH5rNgzKE0nMQYJP/c=",
  "translate": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **دسترسی به برنامه:**\n    پس از راه‌اندازی سرویس‌ها، SparkyFitness را در مرورگر وب خود در این آدرس باز کنید:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **پیکربندی اختیاری چت‌بات هوش مصنوعی:**\n    برای فعال‌سازی کامل عملکرد چت‌بات هوش مصنوعی، شامل ذخیره‌سازی امن کلید API و دسترسی به پایگاه داده، مراحل زیر را دنبال کنید:\n\n    *   **پیکربندی `AI_API_ENCRYPTION_KEY`:** یک کلید مخفی در \"Supabase -> Edge Functions\" -> \"Environment Variables\" ایجاد کنید. این کلید برای رمزنگاری کلیدهای هوش مصنوعی شما هنگام ذخیره‌سازی در Supabase استفاده می‌شود.\n\n    *   **تولید `SUPABASE_ACCESS_TOKEN`:**\n        1.  وارد کنسول Docker خود شوید.\n        2.  دستور `supabase login` را اجرا کنید و از طریق URL ارائه‌شده احراز هویت نمایید.\n        3.  توکن دسترسی را با اجرای دستور `cat ~/.supabase/access-token` دریافت کنید.\n        4.  فایل `docker-compose.yml` یا تنظیمات Portainer خود را با این توکن به‌روزرسانی کرده و مجدد استقرار دهید.\n        5.  پس از استقرار مجدد، وارد SparkyFitness شوید و سرویس هوش مصنوعی را با ارائه‌دهنده موردنظر خود پیکربندی کنید.\n     \n\n### استقرار دستی پایگاه داده و توابع در Supabase\n**روش ۱:  \n**اگر اتصال شبکه IPV6 ندارید، مهاجرت پایگاه داده با شکست مواجه می‌شود زیرا نسخه رایگان Supabase از اتصال مستقیم IPV4 پشتیبانی نمی‌کند.\n\n   1. آخرین نسخه را دانلود و در رایانه خود از حالت فشرده خارج کنید.\n   2. به پوشه پروژه بروید. Docker باید اجرا شود.\n   3. دستورات زیر را اجرا کنید. (استقرار توابع فقط برای پیکربندی هوش مصنوعی لازم است. اگر به چت‌بات نیاز ندارید، این مرحله را رد کنید)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nدوباره Docker compose را اجرا کنید. برنامه Front end شروع به کار خواهد کرد.\n\n**روش ۲:  \n   1. آخرین نسخه را دانلود و در رایانه خود از حالت فشرده خارج کنید.  \n   2. به پوشه پروژه بروید.  \n   3. به مسیر supabase/migrations بروید. دستورات SQL را کپی کرده و یکی‌یکی به ترتیب صعودی در Supabase-->Project-->SQL Editor اجرا کنید.  \n   4. [اختیاری] همین کار را برای supabase/functions/chat در صورت نیاز به چت‌بات هوش مصنوعی انجام دهید. فایل index.js را کپی کرده و در Supabase-->Project-->Edge Function-->Deploy new function اجرا کنید.  \n",
  "status": "ok"
}