{
  "id": 2,
  "origin": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Access the Application:**\n    Once the services are up and running, access SparkyFitness in your web browser at:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optional Configuration:**\n    To enable the AI Chatbot's full functionality, including secure API key storage and database access, follow these steps:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Generate a secret in \"Supabase -> Edge Functions\" -> \"Environment Variables\". This key is used for encrypting your AI keys when it is stored within Supabase.\n\n    *   **Generate `SUPABASE_ACCESS_TOKEN`:**\n        1.  Access your Docker console.\n        2.  Run `supabase login` and authenticate using the provided URL.\n        3.  Retrieve the access token by running `cat ~/.supabase/access-token`.\n        4.  Update your `docker-compose.yml` or Portainer configuration with this token to redeploy.\n        5.  After redeployment, log in to SparkyFitness and configure the AI service with your preferred provider.\n     \n\n### Manul Deployment of DB & Functions to Supabase\n**Method 1:  \n**If you don't have IPV6 network connection enabled, DB migration will fail as Supabase's free verssion doesn't support IPV4 direct connection.\n\n   1. Download latest release and unzip to your PC.\n   2. Navigate to the project folder. Docker needs to be up & running.\n   3. Run below commands. (functions deploy is needed only for AI configuration. If you don't need ChatBOT, you can skip it)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRe-run Docker compose. Front end App will start working.\n\n**Method 2:  \n   1. Download latest release and unzip to your PC.  \n   2. Navigate to the project folder.  \n   3. Go to supabase/migrations. Copy the SQL statements and run them in Supabase-->Project-->SQL Editor one by one in ASC order.  \n   4. [Optional] Do the same for supabase/functions/chat  if you require AI ChatBOT. Copy index.js and run it in Supabase-->Project-->Edge Function-->Deploy new function.  \n\n\n",
  "origin_sha": "r6znWWj0ns4QLCEd2ocJVOflhPH5rNgzKE0nMQYJP/c=",
  "translate": "```markdown\n    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Доступ к приложению:**\n    После запуска всех сервисов откройте SparkyFitness в вашем веб-браузере по адресу:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI-чатбот — необязательная конфигурация:**\n    Чтобы включить полную функциональность AI-чатбота, включая безопасное хранение API-ключа и доступ к базе данных, выполните следующие шаги:\n\n    *   **Настройте `AI_API_ENCRYPTION_KEY`:** Сгенерируйте секрет в \"Supabase -> Edge Functions\" -> \"Environment Variables\". Этот ключ используется для шифрования ваших AI-ключей при их хранении в Supabase.\n\n    *   **Сгенерируйте `SUPABASE_ACCESS_TOKEN`:**\n        1.  Откройте консоль Docker.\n        2.  Выполните команду `supabase login` и выполните аутентификацию по предоставленной ссылке.\n        3.  Получите токен доступа, выполнив команду `cat ~/.supabase/access-token`.\n        4.  Обновите ваш `docker-compose.yml` или конфигурацию Portainer этим токеном для повторного развертывания.\n        5.  После повторного развертывания войдите в SparkyFitness и настройте AI-сервис с вашим выбранным провайдером.\n     \n\n### Ручное развертывание БД и функций в Supabase\n**Метод 1:  \n**Если у вас не включено соединение по IPV6, миграция БД завершится неудачно, так как бесплатная версия Supabase не поддерживает прямое подключение по IPV4.\n\n   1. Скачайте последнюю версию и распакуйте на свой ПК.\n   2. Перейдите в папку проекта. Docker должен быть запущен.\n   3. Выполните нижеуказанные команды. (развёртывание функций нужно только для настройки AI. Если чат-бот не нужен, этот шаг можно пропустить)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nПовторно выполните Docker compose. Front end-приложение запустится.\n\n**Метод 2:  \n   1. Скачайте последнюю версию и распакуйте на свой ПК.  \n   2. Перейдите в папку проекта.  \n   3. Перейдите в supabase/migrations. Скопируйте SQL-запросы и выполните их по очереди в Supabase-->Project-->SQL Editor в порядке ASC.  \n   4. [Необязательно] То же самое для supabase/functions/chat, если вам нужен AI-чатбот. Скопируйте index.js и выполните его в Supabase-->Project-->Edge Function-->Deploy new function.  \n```",
  "status": "ok"
}