{
  "id": 2,
  "origin": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Access the Application:**\n    Once the services are up and running, access SparkyFitness in your web browser at:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optional Configuration:**\n    To enable the AI Chatbot's full functionality, including secure API key storage and database access, follow these steps:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Generate a secret in \"Supabase -> Edge Functions\" -> \"Environment Variables\". This key is used for encrypting your AI keys when it is stored within Supabase.\n\n    *   **Generate `SUPABASE_ACCESS_TOKEN`:**\n        1.  Access your Docker console.\n        2.  Run `supabase login` and authenticate using the provided URL.\n        3.  Retrieve the access token by running `cat ~/.supabase/access-token`.\n        4.  Update your `docker-compose.yml` or Portainer configuration with this token to redeploy.\n        5.  After redeployment, log in to SparkyFitness and configure the AI service with your preferred provider.\n     \n\n### Manul Deployment of DB & Functions to Supabase\n**Method 1:  \n**If you don't have IPV6 network connection enabled, DB migration will fail as Supabase's free verssion doesn't support IPV4 direct connection.\n\n   1. Download latest release and unzip to your PC.\n   2. Navigate to the project folder. Docker needs to be up & running.\n   3. Run below commands. (functions deploy is needed only for AI configuration. If you don't need ChatBOT, you can skip it)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRe-run Docker compose. Front end App will start working.\n\n**Method 2:  \n   1. Download latest release and unzip to your PC.  \n   2. Navigate to the project folder.  \n   3. Go to supabase/migrations. Copy the SQL statements and run them in Supabase-->Project-->SQL Editor one by one in ASC order.  \n   4. [Optional] Do the same for supabase/functions/chat  if you require AI ChatBOT. Copy index.js and run it in Supabase-->Project-->Edge Function-->Deploy new function.  \n\n\n",
  "origin_sha": "r6znWWj0ns4QLCEd2ocJVOflhPH5rNgzKE0nMQYJP/c=",
  "translate": "```markdown\n    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Accede a la Aplicación:**\n    Una vez que los servicios estén en funcionamiento, accede a SparkyFitness en tu navegador web en:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **Chatbot IA - Configuración Opcional:**\n    Para habilitar la funcionalidad completa del Chatbot de IA, incluida el almacenamiento seguro de la clave API y el acceso a la base de datos, sigue estos pasos:\n\n    *   **Configura `AI_API_ENCRYPTION_KEY`:** Genera un secreto en \"Supabase -> Edge Functions\" -> \"Environment Variables\". Esta clave se utiliza para cifrar tus claves de IA cuando se almacenan en Supabase.\n\n    *   **Genera `SUPABASE_ACCESS_TOKEN`:**\n        1.  Accede a tu consola de Docker.\n        2.  Ejecuta `supabase login` y autentícate usando la URL proporcionada.\n        3.  Recupera el token de acceso ejecutando `cat ~/.supabase/access-token`.\n        4.  Actualiza tu `docker-compose.yml` o la configuración de Portainer con este token para volver a desplegar.\n        5.  Después del redepliegue, inicia sesión en SparkyFitness y configura el servicio de IA con tu proveedor preferido.\n     \n\n### Despliegue Manual de la Base de Datos y Funciones en Supabase\n**Método 1:  \n**Si no tienes habilitada la conexión de red IPV6, la migración de la base de datos fallará ya que la versión gratuita de Supabase no soporta conexión directa por IPV4.\n\n   1. Descarga la última versión y descomprímela en tu PC.\n   2. Navega a la carpeta del proyecto. Docker debe estar en funcionamiento.\n   3. Ejecuta los siguientes comandos. (el despliegue de funciones solo es necesario para la configuración de IA. Si no necesitas ChatBOT, puedes omitirlo)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nVuelve a ejecutar Docker compose. La aplicación Front end comenzará a funcionar.\n\n**Método 2:  \n   1. Descarga la última versión y descomprímela en tu PC.  \n   2. Navega a la carpeta del proyecto.  \n   3. Ve a supabase/migrations. Copia las sentencias SQL y ejecútalas en Supabase-->Project-->SQL Editor una por una en orden ASC.  \n   4. [Opcional] Haz lo mismo para supabase/functions/chat si necesitas el ChatBOT de IA. Copia index.js y ejecútalo en Supabase-->Project-->Edge Function-->Deploy new function.  \n```",
  "status": "ok"
}