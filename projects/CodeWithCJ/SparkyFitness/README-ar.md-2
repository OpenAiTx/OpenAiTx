{
  "id": 2,
  "origin": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Access the Application:**\n    Once the services are up and running, access SparkyFitness in your web browser at:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optional Configuration:**\n    To enable the AI Chatbot's full functionality, including secure API key storage and database access, follow these steps:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Generate a secret in \"Supabase -> Edge Functions\" -> \"Environment Variables\". This key is used for encrypting your AI keys when it is stored within Supabase.\n\n    *   **Generate `SUPABASE_ACCESS_TOKEN`:**\n        1.  Access your Docker console.\n        2.  Run `supabase login` and authenticate using the provided URL.\n        3.  Retrieve the access token by running `cat ~/.supabase/access-token`.\n        4.  Update your `docker-compose.yml` or Portainer configuration with this token to redeploy.\n        5.  After redeployment, log in to SparkyFitness and configure the AI service with your preferred provider.\n     \n\n### Manul Deployment of DB & Functions to Supabase\n**Method 1:  \n**If you don't have IPV6 network connection enabled, DB migration will fail as Supabase's free verssion doesn't support IPV4 direct connection.\n\n   1. Download latest release and unzip to your PC.\n   2. Navigate to the project folder. Docker needs to be up & running.\n   3. Run below commands. (functions deploy is needed only for AI configuration. If you don't need ChatBOT, you can skip it)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRe-run Docker compose. Front end App will start working.\n\n**Method 2:  \n   1. Download latest release and unzip to your PC.  \n   2. Navigate to the project folder.  \n   3. Go to supabase/migrations. Copy the SQL statements and run them in Supabase-->Project-->SQL Editor one by one in ASC order.  \n   4. [Optional] Do the same for supabase/functions/chat  if you require AI ChatBOT. Copy index.js and run it in Supabase-->Project-->Edge Function-->Deploy new function.  \n\n\n",
  "origin_sha": "r6znWWj0ns4QLCEd2ocJVOflhPH5rNgzKE0nMQYJP/c=",
  "translate": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **الوصول إلى التطبيق:**\n    بعد تشغيل الخدمات، يمكنك الوصول إلى SparkyFitness من خلال متصفح الويب على العنوان:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **تكوين روبوت الدردشة الذكي - اختياري:**\n    لتمكين الوظائف الكاملة لروبوت الدردشة الذكي، بما في ذلك التخزين الآمن لمفتاح واجهة برمجة التطبيقات (API Key) والوصول إلى قاعدة البيانات، اتبع الخطوات التالية:\n\n    *   **تكوين `AI_API_ENCRYPTION_KEY`:** أنشئ مفتاحًا سريًا في \"Supabase -> Edge Functions\" -> \"Environment Variables\". يُستخدم هذا المفتاح لتشفير مفاتيح الذكاء الاصطناعي الخاصة بك عند تخزينها داخل Supabase.\n\n    *   **توليد `SUPABASE_ACCESS_TOKEN`:**\n        1.  ادخل إلى وحدة تحكم Docker الخاصة بك.\n        2.  نفّذ الأمر `supabase login` وقم بالمصادقة باستخدام الرابط المقدم.\n        3.  استخرج رمز الوصول (access token) بتنفيذ الأمر `cat ~/.supabase/access-token`.\n        4.  حدث ملف `docker-compose.yml` أو إعدادات Portainer باستخدام هذا الرمز لإعادة النشر.\n        5.  بعد إعادة النشر، سجل الدخول إلى SparkyFitness وقم بتكوين خدمة الذكاء الاصطناعي مع المزود الذي تفضله.\n     \n\n### النشر اليدوي لقاعدة البيانات والدوال إلى Supabase\n**الطريقة 1:  \n**إذا لم يكن لديك اتصال شبكة IPV6 مفعّل، ستفشل عملية ترحيل قاعدة البيانات لأن النسخة المجانية من Supabase لا تدعم الاتصال المباشر عبر IPV4.\n\n   1. قم بتنزيل أحدث إصدار وفك ضغطه على جهاز الكمبيوتر الخاص بك.\n   2. انتقل إلى مجلد المشروع. يجب أن يكون Docker قيد التشغيل.\n   3. نفّذ الأوامر التالية. (نشر الدوال مطلوب فقط عند تفعيل الذكاء الاصطناعي. إذا لم تكن بحاجة إلى روبوت الدردشة، يمكنك تخطي هذه الخطوة)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nأعد تشغيل Docker compose. سيبدأ تطبيق الواجهة الأمامية بالعمل.\n\n**الطريقة 2:  \n   1. قم بتنزيل أحدث إصدار وفك ضغطه على جهاز الكمبيوتر الخاص بك.  \n   2. انتقل إلى مجلد المشروع.  \n   3. اذهب إلى supabase/migrations. انسخ أوامر SQL ونفذها في Supabase-->Project-->SQL Editor واحدًا تلو الآخر حسب الترتيب التصاعدي (ASC).  \n   4. [اختياري] افعل الشيء نفسه مع supabase/functions/chat إذا كنت بحاجة إلى روبوت الدردشة الذكي. انسخ ملف index.js ونفذه في Supabase-->Project-->Edge Function-->Deploy new function.  \n",
  "status": "ok"
}