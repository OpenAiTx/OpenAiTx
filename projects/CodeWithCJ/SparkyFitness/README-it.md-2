{
  "id": 2,
  "origin": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Access the Application:**\n    Once the services are up and running, access SparkyFitness in your web browser at:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optional Configuration:**\n    To enable the AI Chatbot's full functionality, including secure API key storage and database access, follow these steps:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Generate a secret in \"Supabase -> Edge Functions\" -> \"Environment Variables\". This key is used for encrypting your AI keys when it is stored within Supabase.\n\n    *   **Generate `SUPABASE_ACCESS_TOKEN`:**\n        1.  Access your Docker console.\n        2.  Run `supabase login` and authenticate using the provided URL.\n        3.  Retrieve the access token by running `cat ~/.supabase/access-token`.\n        4.  Update your `docker-compose.yml` or Portainer configuration with this token to redeploy.\n        5.  After redeployment, log in to SparkyFitness and configure the AI service with your preferred provider.\n     \n\n### Manul Deployment of DB & Functions to Supabase\n**Method 1:  \n**If you don't have IPV6 network connection enabled, DB migration will fail as Supabase's free verssion doesn't support IPV4 direct connection.\n\n   1. Download latest release and unzip to your PC.\n   2. Navigate to the project folder. Docker needs to be up & running.\n   3. Run below commands. (functions deploy is needed only for AI configuration. If you don't need ChatBOT, you can skip it)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRe-run Docker compose. Front end App will start working.\n\n**Method 2:  \n   1. Download latest release and unzip to your PC.  \n   2. Navigate to the project folder.  \n   3. Go to supabase/migrations. Copy the SQL statements and run them in Supabase-->Project-->SQL Editor one by one in ASC order.  \n   4. [Optional] Do the same for supabase/functions/chat  if you require AI ChatBOT. Copy index.js and run it in Supabase-->Project-->Edge Function-->Deploy new function.  \n\n\n",
  "origin_sha": "r6znWWj0ns4QLCEd2ocJVOflhPH5rNgzKE0nMQYJP/c=",
  "translate": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Accedi all'Applicazione:**\n    Una volta che i servizi sono attivi e funzionanti, accedi a SparkyFitness nel tuo browser web all'indirizzo:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **Chatbot AI - Configurazione Opzionale:**\n    Per abilitare la piena funzionalità del Chatbot AI, inclusa l'archiviazione sicura delle chiavi API e l'accesso al database, segui questi passaggi:\n\n    *   **Configura `AI_API_ENCRYPTION_KEY`:** Genera un segreto in \"Supabase -> Edge Functions\" -> \"Environment Variables\". Questa chiave viene utilizzata per criptare le tue chiavi AI quando vengono memorizzate all'interno di Supabase.\n\n    *   **Genera `SUPABASE_ACCESS_TOKEN`:**\n        1.  Accedi alla tua console Docker.\n        2.  Esegui `supabase login` e autenticati utilizzando l'URL fornito.\n        3.  Recupera il token di accesso eseguendo `cat ~/.supabase/access-token`.\n        4.  Aggiorna il tuo file `docker-compose.yml` o la configurazione di Portainer con questo token per effettuare il redeploy.\n        5.  Dopo il redeploy, accedi a SparkyFitness e configura il servizio AI con il provider che preferisci.\n     \n\n### Deploy Manuale di DB & Funzioni su Supabase\n**Metodo 1:  \n**Se non hai la connessione di rete IPV6 abilitata, la migrazione del DB fallirà poiché la versione gratuita di Supabase non supporta la connessione diretta IPV4.\n\n   1. Scarica l'ultima release e decomprimila sul tuo PC.\n   2. Vai nella cartella del progetto. Docker deve essere avviato e funzionante.\n   3. Esegui i seguenti comandi. (il deploy delle functions è necessario solo per la configurazione AI. Se non ti serve il ChatBOT, puoi saltare questo passaggio)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRiesegui Docker compose. L'app Front end inizierà a funzionare.\n\n**Metodo 2:  \n   1. Scarica l'ultima release e decomprimila sul tuo PC.  \n   2. Vai nella cartella del progetto.  \n   3. Vai su supabase/migrations. Copia le istruzioni SQL ed eseguile in Supabase-->Project-->SQL Editor una alla volta in ordine ASC.  \n   4. [Opzionale] Fai lo stesso per supabase/functions/chat se hai bisogno del ChatBOT AI. Copia index.js ed eseguilo in Supabase-->Project-->Edge Function-->Deploy new function.  ",
  "status": "ok"
}