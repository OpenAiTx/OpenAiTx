{
  "id": 2,
  "origin": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Access the Application:**\n    Once the services are up and running, access SparkyFitness in your web browser at:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optional Configuration:**\n    To enable the AI Chatbot's full functionality, including secure API key storage and database access, follow these steps:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Generate a secret in \"Supabase -> Edge Functions\" -> \"Environment Variables\". This key is used for encrypting your AI keys when it is stored within Supabase.\n\n    *   **Generate `SUPABASE_ACCESS_TOKEN`:**\n        1.  Access your Docker console.\n        2.  Run `supabase login` and authenticate using the provided URL.\n        3.  Retrieve the access token by running `cat ~/.supabase/access-token`.\n        4.  Update your `docker-compose.yml` or Portainer configuration with this token to redeploy.\n        5.  After redeployment, log in to SparkyFitness and configure the AI service with your preferred provider.\n     \n\n### Manul Deployment of DB & Functions to Supabase\n**Method 1:  \n**If you don't have IPV6 network connection enabled, DB migration will fail as Supabase's free verssion doesn't support IPV4 direct connection.\n\n   1. Download latest release and unzip to your PC.\n   2. Navigate to the project folder. Docker needs to be up & running.\n   3. Run below commands. (functions deploy is needed only for AI configuration. If you don't need ChatBOT, you can skip it)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRe-run Docker compose. Front end App will start working.\n\n**Method 2:  \n   1. Download latest release and unzip to your PC.  \n   2. Navigate to the project folder.  \n   3. Go to supabase/migrations. Copy the SQL statements and run them in Supabase-->Project-->SQL Editor one by one in ASC order.  \n   4. [Optional] Do the same for supabase/functions/chat  if you require AI ChatBOT. Copy index.js and run it in Supabase-->Project-->Edge Function-->Deploy new function.  \n\n\n",
  "origin_sha": "r6znWWj0ns4QLCEd2ocJVOflhPH5rNgzKE0nMQYJP/c=",
  "translate": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **存取應用程式：**\n    當服務啟動並運行後，請在您的網頁瀏覽器中進入 SparkyFitness：\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI 聊天機器人－可選設定：**\n    若要啟用 AI 聊天機器人的完整功能，包括安全的 API 金鑰儲存與資料庫存取，請依照以下步驟操作：\n\n    *   **設定 `AI_API_ENCRYPTION_KEY`：** 在「Supabase -> Edge Functions」->「Environment Variables」中產生一組密鑰。此密鑰用於加密您儲存在 Supabase 內的 AI 金鑰。\n\n    *   **產生 `SUPABASE_ACCESS_TOKEN`：**\n        1.  進入您的 Docker 控制台。\n        2.  執行 `supabase login` 並使用提供的網址進行認證。\n        3.  執行 `cat ~/.supabase/access-token` 以取得存取權杖。\n        4.  將此權杖更新到您的 `docker-compose.yml` 或 Portainer 設定中，然後重新部署。\n        5.  重新部署後，登入 SparkyFitness 並以您偏好的供應商設定 AI 服務。\n     \n\n### 手動部署資料庫與函數至 Supabase\n**方法一：**  \n**如果您沒有啟用 IPV6 網路連線，資料庫遷移將會失敗，因為 Supabase 免費版不支援直接的 IPV4 連線。**\n\n   1. 下載最新釋出檔並解壓縮至您的電腦。\n   2. 進入專案資料夾。Docker 必須已啟動並運行。\n   3. 執行以下指令（functions deploy 僅在需要 AI 設定時使用，如果不需要 ChatBOT，可以略過）：\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\n重新執行 Docker compose。前端應用程式將開始運作。\n\n**方法二：**  \n   1. 下載最新釋出檔並解壓縮至您的電腦。  \n   2. 進入專案資料夾。  \n   3. 前往 supabase/migrations。複製 SQL 指令，並依照 ASC 順序逐一在 Supabase-->Project-->SQL Editor 中執行。  \n   4. 【可選】若需要 AI ChatBOT，同樣操作 supabase/functions/chat。複製 index.js 並在 Supabase-->Project-->Edge Function-->Deploy new function 中執行。",
  "status": "ok"
}