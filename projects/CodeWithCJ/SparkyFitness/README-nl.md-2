{
  "id": 2,
  "origin": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Access the Application:**\n    Once the services are up and running, access SparkyFitness in your web browser at:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optional Configuration:**\n    To enable the AI Chatbot's full functionality, including secure API key storage and database access, follow these steps:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Generate a secret in \"Supabase -> Edge Functions\" -> \"Environment Variables\". This key is used for encrypting your AI keys when it is stored within Supabase.\n\n    *   **Generate `SUPABASE_ACCESS_TOKEN`:**\n        1.  Access your Docker console.\n        2.  Run `supabase login` and authenticate using the provided URL.\n        3.  Retrieve the access token by running `cat ~/.supabase/access-token`.\n        4.  Update your `docker-compose.yml` or Portainer configuration with this token to redeploy.\n        5.  After redeployment, log in to SparkyFitness and configure the AI service with your preferred provider.\n     \n\n### Manul Deployment of DB & Functions to Supabase\n**Method 1:  \n**If you don't have IPV6 network connection enabled, DB migration will fail as Supabase's free verssion doesn't support IPV4 direct connection.\n\n   1. Download latest release and unzip to your PC.\n   2. Navigate to the project folder. Docker needs to be up & running.\n   3. Run below commands. (functions deploy is needed only for AI configuration. If you don't need ChatBOT, you can skip it)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRe-run Docker compose. Front end App will start working.\n\n**Method 2:  \n   1. Download latest release and unzip to your PC.  \n   2. Navigate to the project folder.  \n   3. Go to supabase/migrations. Copy the SQL statements and run them in Supabase-->Project-->SQL Editor one by one in ASC order.  \n   4. [Optional] Do the same for supabase/functions/chat  if you require AI ChatBOT. Copy index.js and run it in Supabase-->Project-->Edge Function-->Deploy new function.  \n\n\n",
  "origin_sha": "r6znWWj0ns4QLCEd2ocJVOflhPH5rNgzKE0nMQYJP/c=",
  "translate": "```markdown\n    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Toegang tot de Applicatie:**\n    Zodra de services actief zijn, kun je SparkyFitness openen in je webbrowser op:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optionele Configuratie:**\n    Om de volledige functionaliteit van de AI Chatbot mogelijk te maken, inclusief veilige API-sleutelopslag en database-toegang, volg je deze stappen:\n\n    *   **Configureer `AI_API_ENCRYPTION_KEY`:** Genereer een geheim in \"Supabase -> Edge Functions\" -> \"Environment Variables\". Deze sleutel wordt gebruikt voor het versleutelen van je AI-sleutels wanneer deze binnen Supabase worden opgeslagen.\n\n    *   **Genereer `SUPABASE_ACCESS_TOKEN`:**\n        1.  Open je Docker-console.\n        2.  Voer `supabase login` uit en authenticeer via de opgegeven URL.\n        3.  Haal het toegangstoken op door `cat ~/.supabase/access-token` uit te voeren.\n        4.  Werk je `docker-compose.yml` of Portainer-configuratie bij met dit token om opnieuw te deployen.\n        5.  Na herdeploy, log in bij SparkyFitness en configureer de AI-service met je gewenste provider.\n     \n\n### Handmatige Deploy van DB & Functies naar Supabase\n**Methode 1:  \n**Als je geen IPV6-netwerkverbinding hebt ingeschakeld, zal DB-migratie mislukken omdat de gratis versie van Supabase geen directe IPV4-verbinding ondersteunt.\n\n   1. Download de laatste release en pak deze uit op je PC.\n   2. Navigeer naar de projectmap. Docker moet actief zijn.\n   3. Voer onderstaande commando's uit. (functions deploy is alleen nodig voor AI-configuratie. Als je geen ChatBOT nodig hebt, kun je deze stap overslaan)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nHerstart Docker compose. De frontend-app zal beginnen te werken.\n\n**Methode 2:  \n   1. Download de laatste release en pak deze uit op je PC.  \n   2. Navigeer naar de projectmap.  \n   3. Ga naar supabase/migrations. Kopieer de SQL-statements en voer ze één voor één uit in Supabase-->Project-->SQL Editor in ASC-volgorde.  \n   4. [Optioneel] Doe hetzelfde voor supabase/functions/chat als je een AI ChatBOT nodig hebt. Kopieer index.js en voer deze uit in Supabase-->Project-->Edge Function-->Deploy new function.  \n```\n",
  "status": "ok"
}