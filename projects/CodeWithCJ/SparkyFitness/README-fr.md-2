{
  "id": 2,
  "origin": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Access the Application:**\n    Once the services are up and running, access SparkyFitness in your web browser at:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optional Configuration:**\n    To enable the AI Chatbot's full functionality, including secure API key storage and database access, follow these steps:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Generate a secret in \"Supabase -> Edge Functions\" -> \"Environment Variables\". This key is used for encrypting your AI keys when it is stored within Supabase.\n\n    *   **Generate `SUPABASE_ACCESS_TOKEN`:**\n        1.  Access your Docker console.\n        2.  Run `supabase login` and authenticate using the provided URL.\n        3.  Retrieve the access token by running `cat ~/.supabase/access-token`.\n        4.  Update your `docker-compose.yml` or Portainer configuration with this token to redeploy.\n        5.  After redeployment, log in to SparkyFitness and configure the AI service with your preferred provider.\n     \n\n### Manul Deployment of DB & Functions to Supabase\n**Method 1:  \n**If you don't have IPV6 network connection enabled, DB migration will fail as Supabase's free verssion doesn't support IPV4 direct connection.\n\n   1. Download latest release and unzip to your PC.\n   2. Navigate to the project folder. Docker needs to be up & running.\n   3. Run below commands. (functions deploy is needed only for AI configuration. If you don't need ChatBOT, you can skip it)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRe-run Docker compose. Front end App will start working.\n\n**Method 2:  \n   1. Download latest release and unzip to your PC.  \n   2. Navigate to the project folder.  \n   3. Go to supabase/migrations. Copy the SQL statements and run them in Supabase-->Project-->SQL Editor one by one in ASC order.  \n   4. [Optional] Do the same for supabase/functions/chat  if you require AI ChatBOT. Copy index.js and run it in Supabase-->Project-->Edge Function-->Deploy new function.  \n\n\n",
  "origin_sha": "r6znWWj0ns4QLCEd2ocJVOflhPH5rNgzKE0nMQYJP/c=",
  "translate": "```markdown\n    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Accéder à l'application :**\n    Une fois les services lancés, accédez à SparkyFitness dans votre navigateur web à l'adresse suivante :\n    ```\n    http://localhost:3000\n    ```\n\n4.  **Chatbot IA - Configuration optionnelle :**\n    Pour activer la pleine fonctionnalité du Chatbot IA, y compris le stockage sécurisé de la clé API et l'accès à la base de données, suivez ces étapes :\n\n    *   **Configurer `AI_API_ENCRYPTION_KEY` :** Générez un secret dans \"Supabase -> Edge Functions\" -> \"Variables d'environnement\". Cette clé est utilisée pour chiffrer vos clés IA lors de leur stockage dans Supabase.\n\n    *   **Générer `SUPABASE_ACCESS_TOKEN` :**\n        1.  Accédez à votre console Docker.\n        2.  Exécutez `supabase login` et authentifiez-vous en utilisant l'URL fournie.\n        3.  Récupérez le jeton d'accès en exécutant `cat ~/.supabase/access-token`.\n        4.  Mettez à jour votre fichier `docker-compose.yml` ou la configuration Portainer avec ce jeton pour redéployer.\n        5.  Après le redéploiement, connectez-vous à SparkyFitness et configurez le service IA avec votre fournisseur préféré.\n     \n\n### Déploiement manuel de la base de données & fonctions sur Supabase\n**Méthode 1 :  \n**Si vous n'avez pas de connexion réseau IPV6 activée, la migration de la base de données échouera car la version gratuite de Supabase ne prend pas en charge la connexion directe IPV4.\n\n   1. Téléchargez la dernière version et décompressez-la sur votre ordinateur.\n   2. Accédez au dossier du projet. Docker doit être lancé et en fonctionnement.\n   3. Exécutez les commandes ci-dessous. (le déploiement des fonctions n'est nécessaire que pour la configuration IA. Si vous n'avez pas besoin du ChatBOT, vous pouvez l'ignorer)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRelancez Docker compose. L'application front-end démarrera.\n\n**Méthode 2 :  \n   1. Téléchargez la dernière version et décompressez-la sur votre ordinateur.  \n   2. Accédez au dossier du projet.  \n   3. Allez dans supabase/migrations. Copiez les instructions SQL et exécutez-les dans Supabase-->Projet-->Éditeur SQL une par une dans l'ordre ASC.  \n   4. [Optionnel] Faites de même pour supabase/functions/chat si vous avez besoin du ChatBOT IA. Copiez index.js et exécutez-le dans Supabase-->Projet-->Edge Function-->Déployer une nouvelle fonction.  \n```",
  "status": "ok"
}