{
  "id": 2,
  "origin": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Access the Application:**\n    Once the services are up and running, access SparkyFitness in your web browser at:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optional Configuration:**\n    To enable the AI Chatbot's full functionality, including secure API key storage and database access, follow these steps:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Generate a secret in \"Supabase -> Edge Functions\" -> \"Environment Variables\". This key is used for encrypting your AI keys when it is stored within Supabase.\n\n    *   **Generate `SUPABASE_ACCESS_TOKEN`:**\n        1.  Access your Docker console.\n        2.  Run `supabase login` and authenticate using the provided URL.\n        3.  Retrieve the access token by running `cat ~/.supabase/access-token`.\n        4.  Update your `docker-compose.yml` or Portainer configuration with this token to redeploy.\n        5.  After redeployment, log in to SparkyFitness and configure the AI service with your preferred provider.\n     \n\n### Manul Deployment of DB & Functions to Supabase\n**Method 1:  \n**If you don't have IPV6 network connection enabled, DB migration will fail as Supabase's free verssion doesn't support IPV4 direct connection.\n\n   1. Download latest release and unzip to your PC.\n   2. Navigate to the project folder. Docker needs to be up & running.\n   3. Run below commands. (functions deploy is needed only for AI configuration. If you don't need ChatBOT, you can skip it)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRe-run Docker compose. Front end App will start working.\n\n**Method 2:  \n   1. Download latest release and unzip to your PC.  \n   2. Navigate to the project folder.  \n   3. Go to supabase/migrations. Copy the SQL statements and run them in Supabase-->Project-->SQL Editor one by one in ASC order.  \n   4. [Optional] Do the same for supabase/functions/chat  if you require AI ChatBOT. Copy index.js and run it in Supabase-->Project-->Edge Function-->Deploy new function.  \n\n\n",
  "origin_sha": "r6znWWj0ns4QLCEd2ocJVOflhPH5rNgzKE0nMQYJP/c=",
  "translate": "```\ndocker compose pull\ndocker compose up -d\n```\n\n3.  **访问应用程序：**  \n    一旦服务启动并运行，在您的网页浏览器中访问 SparkyFitness，地址为：  \n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI 聊天机器人 - 可选配置：**  \n    如需启用 AI 聊天机器人的全部功能，包括安全的 API 密钥存储和数据库访问，请按照以下步骤操作：\n\n    *   **配置 `AI_API_ENCRYPTION_KEY`：** 在 “Supabase -> Edge Functions” -> “Environment Variables” 中生成一个密钥。此密钥用于在 Supabase 内部存储您的 AI 密钥时进行加密。\n\n    *   **生成 `SUPABASE_ACCESS_TOKEN`：**\n        1.  进入您的 Docker 控制台。\n        2.  运行 `supabase login` 并使用提供的 URL 进行身份验证。\n        3.  通过运行 `cat ~/.supabase/access-token` 获取访问令牌。\n        4.  在 `docker-compose.yml` 或 Portainer 配置中更新此令牌并重新部署。\n        5.  重新部署后，登录 SparkyFitness 并在 AI 服务配置中选择您的首选提供商。\n     \n\n### 手动部署数据库和函数到 Supabase\n\n**方法一：**  \n**如果您没有启用 IPV6 网络连接，数据库迁移将会失败，因为 Supabase 免费版不支持 IPV4 直连。**\n\n   1. 下载最新版本并解压到您的电脑。\n   2. 进入项目文件夹。需要确保 Docker 已启动并运行。\n   3. 运行以下命令。（functions deploy 仅在需要 AI 配置时执行。如果不需要 ChatBOT，可以跳过此步骤）\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\n重新运行 Docker compose。前端应用将开始运行。\n\n**方法二：**  \n   1. 下载最新版本并解压到您的电脑。  \n   2. 进入项目文件夹。  \n   3. 打开 supabase/migrations。复制 SQL 语句，并在 Supabase-->Project-->SQL Editor 中按升序逐条执行。  \n   4. 【可选】如需 AI ChatBOT，同样操作 supabase/functions/chat。复制 index.js 并在 Supabase-->Project-->Edge Function-->Deploy new function 中运行。  \n",
  "status": "ok"
}