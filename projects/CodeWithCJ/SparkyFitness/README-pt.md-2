{
  "id": 2,
  "origin": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Access the Application:**\n    Once the services are up and running, access SparkyFitness in your web browser at:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optional Configuration:**\n    To enable the AI Chatbot's full functionality, including secure API key storage and database access, follow these steps:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Generate a secret in \"Supabase -> Edge Functions\" -> \"Environment Variables\". This key is used for encrypting your AI keys when it is stored within Supabase.\n\n    *   **Generate `SUPABASE_ACCESS_TOKEN`:**\n        1.  Access your Docker console.\n        2.  Run `supabase login` and authenticate using the provided URL.\n        3.  Retrieve the access token by running `cat ~/.supabase/access-token`.\n        4.  Update your `docker-compose.yml` or Portainer configuration with this token to redeploy.\n        5.  After redeployment, log in to SparkyFitness and configure the AI service with your preferred provider.\n     \n\n### Manul Deployment of DB & Functions to Supabase\n**Method 1:  \n**If you don't have IPV6 network connection enabled, DB migration will fail as Supabase's free verssion doesn't support IPV4 direct connection.\n\n   1. Download latest release and unzip to your PC.\n   2. Navigate to the project folder. Docker needs to be up & running.\n   3. Run below commands. (functions deploy is needed only for AI configuration. If you don't need ChatBOT, you can skip it)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRe-run Docker compose. Front end App will start working.\n\n**Method 2:  \n   1. Download latest release and unzip to your PC.  \n   2. Navigate to the project folder.  \n   3. Go to supabase/migrations. Copy the SQL statements and run them in Supabase-->Project-->SQL Editor one by one in ASC order.  \n   4. [Optional] Do the same for supabase/functions/chat  if you require AI ChatBOT. Copy index.js and run it in Supabase-->Project-->Edge Function-->Deploy new function.  \n\n\n",
  "origin_sha": "r6znWWj0ns4QLCEd2ocJVOflhPH5rNgzKE0nMQYJP/c=",
  "translate": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Acesse o Aplicativo:**\n    Assim que os serviços estiverem ativos e em execução, acesse o SparkyFitness em seu navegador web em:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **Chatbot de IA - Configuração Opcional:**\n    Para habilitar todas as funcionalidades do Chatbot de IA, incluindo armazenamento seguro de chaves de API e acesso ao banco de dados, siga estes passos:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Gere um segredo em \"Supabase -> Edge Functions\" -> \"Environment Variables\". Esta chave é usada para criptografar suas chaves de IA quando armazenadas no Supabase.\n\n    *   **Gere `SUPABASE_ACCESS_TOKEN`:**\n        1.  Acesse o console do seu Docker.\n        2.  Execute `supabase login` e autentique-se usando a URL fornecida.\n        3.  Recupere o token de acesso executando `cat ~/.supabase/access-token`.\n        4.  Atualize seu `docker-compose.yml` ou a configuração do Portainer com este token para fazer o redeploy.\n        5.  Após o redeploy, faça login no SparkyFitness e configure o serviço de IA com seu provedor preferido.\n     \n\n### Implantação Manual do DB & Funções no Supabase\n**Método 1:  \n**Se você não possui conexão de rede IPV6 habilitada, a migração do banco de dados irá falhar, pois a versão gratuita do Supabase não suporta conexão direta via IPV4.\n\n   1. Baixe a última versão e descompacte em seu PC.\n   2. Navegue até a pasta do projeto. O Docker precisa estar ativo e em execução.\n   3. Execute os comandos abaixo. (deploy das funções é necessário apenas para a configuração de IA. Se não precisar do ChatBOT, pode pular esta etapa)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nExecute novamente o Docker compose. O aplicativo Front-end começará a funcionar.\n\n**Método 2:  \n   1. Baixe a última versão e descompacte em seu PC.  \n   2. Navegue até a pasta do projeto.  \n   3. Vá para supabase/migrations. Copie os comandos SQL e execute-os no Supabase-->Projeto-->Editor SQL um por um em ordem ASC.  \n   4. [Opcional] Faça o mesmo para supabase/functions/chat se precisar do ChatBOT de IA. Copie o index.js e execute-o em Supabase-->Projeto-->Edge Function-->Deploy new function.  \n",
  "status": "ok"
}