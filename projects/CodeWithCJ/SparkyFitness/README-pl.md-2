{
  "id": 2,
  "origin": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Access the Application:**\n    Once the services are up and running, access SparkyFitness in your web browser at:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optional Configuration:**\n    To enable the AI Chatbot's full functionality, including secure API key storage and database access, follow these steps:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Generate a secret in \"Supabase -> Edge Functions\" -> \"Environment Variables\". This key is used for encrypting your AI keys when it is stored within Supabase.\n\n    *   **Generate `SUPABASE_ACCESS_TOKEN`:**\n        1.  Access your Docker console.\n        2.  Run `supabase login` and authenticate using the provided URL.\n        3.  Retrieve the access token by running `cat ~/.supabase/access-token`.\n        4.  Update your `docker-compose.yml` or Portainer configuration with this token to redeploy.\n        5.  After redeployment, log in to SparkyFitness and configure the AI service with your preferred provider.\n     \n\n### Manul Deployment of DB & Functions to Supabase\n**Method 1:  \n**If you don't have IPV6 network connection enabled, DB migration will fail as Supabase's free verssion doesn't support IPV4 direct connection.\n\n   1. Download latest release and unzip to your PC.\n   2. Navigate to the project folder. Docker needs to be up & running.\n   3. Run below commands. (functions deploy is needed only for AI configuration. If you don't need ChatBOT, you can skip it)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRe-run Docker compose. Front end App will start working.\n\n**Method 2:  \n   1. Download latest release and unzip to your PC.  \n   2. Navigate to the project folder.  \n   3. Go to supabase/migrations. Copy the SQL statements and run them in Supabase-->Project-->SQL Editor one by one in ASC order.  \n   4. [Optional] Do the same for supabase/functions/chat  if you require AI ChatBOT. Copy index.js and run it in Supabase-->Project-->Edge Function-->Deploy new function.  \n\n\n",
  "origin_sha": "r6znWWj0ns4QLCEd2ocJVOflhPH5rNgzKE0nMQYJP/c=",
  "translate": "```markdown\n    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Dostęp do aplikacji:**\n    Po uruchomieniu usług, otwórz SparkyFitness w swojej przeglądarce internetowej pod adresem:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Konfiguracja opcjonalna:**\n    Aby włączyć pełną funkcjonalność AI Chatbota, w tym bezpieczne przechowywanie kluczy API i dostęp do bazy danych, wykonaj następujące kroki:\n\n    *   **Skonfiguruj `AI_API_ENCRYPTION_KEY`:** Wygeneruj sekret w \"Supabase -> Edge Functions\" -> \"Environment Variables\". Ten klucz służy do szyfrowania Twoich kluczy AI podczas ich przechowywania w Supabase.\n\n    *   **Wygeneruj `SUPABASE_ACCESS_TOKEN`:**\n        1.  Uzyskaj dostęp do swojej konsoli Dockera.\n        2.  Uruchom `supabase login` i uwierzytelnij się przy użyciu podanego URL.\n        3.  Pobierz token dostępu, uruchamiając `cat ~/.supabase/access-token`.\n        4.  Zaktualizuj swój plik `docker-compose.yml` lub konfigurację Portainera tym tokenem, aby ponownie wdrożyć.\n        5.  Po ponownym wdrożeniu zaloguj się do SparkyFitness i skonfiguruj usługę AI z wybranym dostawcą.\n     \n\n### Ręczne wdrożenie bazy danych i funkcji do Supabase\n**Metoda 1:  \n**Jeśli nie masz włączonego połączenia sieciowego IPV6, migracja bazy danych nie powiedzie się, ponieważ darmowa wersja Supabase nie obsługuje bezpośredniego połączenia IPV4.\n\n   1. Pobierz najnowsze wydanie i rozpakuj na swoim komputerze.\n   2. Przejdź do folderu projektu. Docker musi być uruchomiony.\n   3. Wykonaj poniższe polecenia. (Deploy funkcji jest potrzebny tylko do konfiguracji AI. Jeśli nie potrzebujesz ChatBOTA, możesz to pominąć)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nUruchom ponownie Docker compose. Aplikacja frontendowa zacznie działać.\n\n**Metoda 2:  \n   1. Pobierz najnowsze wydanie i rozpakuj na swoim komputerze.  \n   2. Przejdź do folderu projektu.  \n   3. Przejdź do supabase/migrations. Skopiuj polecenia SQL i uruchamiaj je kolejno w Supabase-->Projekt-->Edytor SQL w kolejności rosnącej (ASC).  \n   4. [Opcjonalnie] Zrób to samo dla supabase/functions/chat, jeśli potrzebujesz AI ChatBOTA. Skopiuj index.js i uruchom go w Supabase-->Projekt-->Edge Function-->Deploy new function.  \n```",
  "status": "ok"
}