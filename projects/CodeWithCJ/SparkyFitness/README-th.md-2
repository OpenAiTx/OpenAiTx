{
  "id": 2,
  "origin": "    docker compose pull\n    docker compose up -d\n    ```\n\n3.  **Access the Application:**\n    Once the services are up and running, access SparkyFitness in your web browser at:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - Optional Configuration:**\n    To enable the AI Chatbot's full functionality, including secure API key storage and database access, follow these steps:\n\n    *   **Configure `AI_API_ENCRYPTION_KEY`:** Generate a secret in \"Supabase -> Edge Functions\" -> \"Environment Variables\". This key is used for encrypting your AI keys when it is stored within Supabase.\n\n    *   **Generate `SUPABASE_ACCESS_TOKEN`:**\n        1.  Access your Docker console.\n        2.  Run `supabase login` and authenticate using the provided URL.\n        3.  Retrieve the access token by running `cat ~/.supabase/access-token`.\n        4.  Update your `docker-compose.yml` or Portainer configuration with this token to redeploy.\n        5.  After redeployment, log in to SparkyFitness and configure the AI service with your preferred provider.\n     \n\n### Manul Deployment of DB & Functions to Supabase\n**Method 1:  \n**If you don't have IPV6 network connection enabled, DB migration will fail as Supabase's free verssion doesn't support IPV4 direct connection.\n\n   1. Download latest release and unzip to your PC.\n   2. Navigate to the project folder. Docker needs to be up & running.\n   3. Run below commands. (functions deploy is needed only for AI configuration. If you don't need ChatBOT, you can skip it)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nRe-run Docker compose. Front end App will start working.\n\n**Method 2:  \n   1. Download latest release and unzip to your PC.  \n   2. Navigate to the project folder.  \n   3. Go to supabase/migrations. Copy the SQL statements and run them in Supabase-->Project-->SQL Editor one by one in ASC order.  \n   4. [Optional] Do the same for supabase/functions/chat  if you require AI ChatBOT. Copy index.js and run it in Supabase-->Project-->Edge Function-->Deploy new function.  \n\n\n",
  "origin_sha": "r6znWWj0ns4QLCEd2ocJVOflhPH5rNgzKE0nMQYJP/c=",
  "translate": "```\ndocker compose pull\ndocker compose up -d\n```\n\n3.  **เข้าถึงแอปพลิเคชัน:**\n    เมื่อบริการทั้งหมดทำงานแล้ว ให้เข้าถึง SparkyFitness ผ่านเว็บเบราว์เซอร์ของคุณที่:\n    ```\n    http://localhost:3000\n    ```\n\n4.  **AI Chatbot - การตั้งค่าทางเลือก:**\n    หากต้องการเปิดใช้งานฟังก์ชันเต็มรูปแบบของ AI Chatbot รวมถึงการเก็บรักษาคีย์ API อย่างปลอดภัยและการเข้าถึงฐานข้อมูล ให้ดำเนินการตามขั้นตอนดังนี้:\n\n    *   **ตั้งค่า `AI_API_ENCRYPTION_KEY`:** สร้าง secret ใน \"Supabase -> Edge Functions\" -> \"Environment Variables\" คีย์นี้จะใช้สำหรับเข้ารหัสคีย์ AI ของคุณเมื่อถูกเก็บไว้ใน Supabase\n\n    *   **สร้าง `SUPABASE_ACCESS_TOKEN`:**\n        1.  เข้าสู่คอนโซล Docker ของคุณ\n        2.  รันคำสั่ง `supabase login` และตรวจสอบสิทธิ์โดยใช้ URL ที่ให้มา\n        3.  ดึง access token โดยรัน `cat ~/.supabase/access-token`\n        4.  อัปเดต `docker-compose.yml` หรือการตั้งค่า Portainer ของคุณด้วยโทเคนนี้เพื่อทำการ redeploy\n        5.  หลังจาก redeploy แล้ว ให้เข้าสู่ระบบ SparkyFitness และตั้งค่าบริการ AI ด้วยผู้ให้บริการที่คุณต้องการ\n     \n\n### การดีพลอยฐานข้อมูลและฟังก์ชันไปยัง Supabase ด้วยตนเอง\n**วิธีที่ 1:**  \n**หากคุณไม่มีการเชื่อมต่อเครือข่าย IPV6 การย้ายฐานข้อมูลจะล้มเหลวเนื่องจากเวอร์ชันฟรีของ Supabase ไม่รองรับการเชื่อมต่อ IPV4 โดยตรง\n\n   1. ดาวน์โหลด release ล่าสุดและแตกไฟล์ไปยังเครื่องคอมพิวเตอร์ของคุณ\n   2. ไปที่โฟลเดอร์โปรเจกต์ ต้องให้ Docker ทำงานอยู่แล้ว\n   3. รันคำสั่งด้านล่าง (functions deploy จำเป็นเฉพาะสำหรับการตั้งค่า AI ถ้าไม่ต้องการใช้ ChatBOT สามารถข้ามขั้นตอนนี้ได้)\n``\n      supabase login  \n      supabase link  \n      supabase db push  \n      supabase functions deploy chat   \n``\nรัน Docker compose ใหม่อีกครั้ง แอปฝั่งหน้าเว็บจะเริ่มทำงาน\n\n**วิธีที่ 2:**  \n   1. ดาวน์โหลด release ล่าสุดและแตกไฟล์ไปยังเครื่องคอมพิวเตอร์ของคุณ  \n   2. ไปที่โฟลเดอร์โปรเจกต์  \n   3. ไปที่ supabase/migrations คัดลอกคำสั่ง SQL และรันใน Supabase-->Project-->SQL Editor ทีละคำสั่งตามลำดับ ASC  \n   4. [ไม่บังคับ] ทำเช่นเดียวกันกับ supabase/functions/chat หากต้องการใช้ AI ChatBOT ให้คัดลอก index.js และนำไปรันใน Supabase-->Project-->Edge Function-->Deploy new function  \n",
  "status": "ok"
}