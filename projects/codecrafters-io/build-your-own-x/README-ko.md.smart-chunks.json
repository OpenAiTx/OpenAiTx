[
  {
    "Id": 1,
    "Content": "[![Banner](https://codecrafters.io/images/updated-byox-banner.gif)](https://codecrafters.io/github-banner)\n\n## Build your own &lt;insert-technology-here&gt;\n\nThis repository is a compilation of well-written, step-by-step guides for re-creating our favorite technologies from scratch. \n\n> *What I cannot create, I do not understand — Richard Feynman.*\n\nIt's a great way to learn.\n\n* [3D Renderer](#build-your-own-3d-renderer)\n* [Augmented Reality](#build-your-own-augmented-reality)\n* [BitTorrent Client](#build-your-own-bittorrent-client)\n* [Blockchain / Cryptocurrency](#build-your-own-blockchain--cryptocurrency)\n* [Bot](#build-your-own-bot)\n* [Command-Line Tool](#build-your-own-command-line-tool)\n* [Database](#build-your-own-database)\n* [Docker](#build-your-own-docker)\n* [Emulator / Virtual Machine](#build-your-own-emulator--virtual-machine)\n* [Front-end Framework / Library](#build-your-own-front-end-framework--library)\n* [Game](#build-your-own-game)\n* [Git](#build-your-own-git)\n* [Network Stack](#build-your-own-network-stack)\n* [Neural Network](#build-your-own-neural-network)\n* [Operating System](#build-your-own-operating-system)\n* [Physics Engine](#build-your-own-physics-engine)\n* [Programming Language](#build-your-own-programming-language)\n* [Regex Engine](#build-your-own-regex-engine)\n* [Search Engine](#build-your-own-search-engine)\n* [Shell](#build-your-own-shell)\n* [Template Engine](#build-your-own-template-engine)\n* [Text Editor](#build-your-own-text-editor)\n* [Visual Recognition System](#build-your-own-visual-recognition-system)\n* [Voxel Engine](#build-your-own-voxel-engine)\n* [Web Browser](#build-your-own-web-browser)\n* [Web Server](#build-your-own-web-server)\n* [Uncategorized](#uncategorized)\n\n## Tutorials\n\n#### Build your own `3D Renderer`\n\n* [**C++**: _Introduction to Ray Tracing: a Simple Method for Creating 3D Images_](https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work)\n* [**C++**: _How OpenGL works: software rendering in 500 lines of code_](https://github.com/ssloy/tinyrenderer/wiki)\n* [**C++**: _Raycasting engine of Wolfenstein 3D_](http://lodev.org/cgtutor/raycasting.html)\n* [**C++**: _Physically Based Rendering:From Theory To Implementation_](http://www.pbr-book.org/)\n* [**C++**: _Ray Tracing in One Weekend_](https://raytracing.github.io/books/RayTracingInOneWeekend.html)\n* [**C++**: _Rasterization: a Practical Implementation_](https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/overview-rasterization-algorithm)\n* [**C# / TypeScript / JavaScript**: _Learning how to write a 3D soft engine from scratch in C#, TypeScript or JavaScript_](https://www.davrous.com/2013/06/13/tutorial-series-learning-how-to-write-a-3d-soft-engine-from-scratch-in-c-typescript-or-javascript/)\n* [**Java / JavaScript**: _Build your own 3D renderer_](https://avik-das.github.io/build-your-own-raytracer/)\n* [**Java**: _How to create your own simple 3D render engine in pure Java_](http://blog.rogach.org/2015/08/how-to-create-your-own-simple-3d-render.html)\n* [**JavaScript / Pseudocode**: _Computer Graphics from scratch_](http://www.gabrielgambetta.com/computer-graphics-from-scratch/introduction.html)\n* [**Python**: _A 3D Modeller_](http://aosabook.org/en/500L/a-3d-modeller.html)\n\n#### Build your own `Augmented Reality`\n\n* [**C#**: _How To: Augmented Reality App Tutorial for Beginners with Vuforia and Unity 3D_](https://www.youtube.com/watch?v=uXNjNcqW4kY) [video]\n* [**C#**: _How To Unity ARCore_](https://www.youtube.com/playlist?list=PLKIKuXdn4ZMjuUAtdQfK1vwTZPQn_rgSv) [video]\n* [**C#**: _AR Portal Tutorial with Unity_](https://www.youtube.com/playlist?list=PLPCqNOwwN794Gz5fzUSi1p4OqLU0HTmvn) [video]\n* [**C#**: _How to create a Dragon in Augmented Reality in Unity ARCore_](https://www.youtube.com/watch?v=qTSDPkPyPqs) [video]\n* [**C#**: _How to Augmented Reality AR Tutorial: ARKit Portal to the Upside Down_](https://www.youtube.com/watch?v=Z5AmqMuNi08) [video]\n* [**Python**: _Augmented Reality with Python and OpenCV_](https://bitesofcode.wordpress.com/2017/09/12/augmented-reality-with-python-and-opencv-part-1/)\n\n#### Build your own `BitTorrent Client`\n\n* [**C#**: _Building a BitTorrent client from scratch in C#_](https://www.seanjoflynn.com/research/bittorrent.html)\n* [**Go**: _Building a BitTorrent client from the ground up in Go_](https://blog.jse.li/posts/torrent/)\n* [**Nim**: _Writing a Bencode Parser_](https://xmonader.github.io/nimdays/day02_bencode.html)\n* [**Node.js**: _Write your own bittorrent client_](https://allenkim67.github.io/programming/2016/05/04/how-to-make-your-own-bittorrent-client.html)\n* [**Python**: _A BitTorrent client in Python 3.5_](http://markuseliasson.se/article/bittorrent-in-python/)\n\n#### Build your own `Blockchain / Cryptocurrency`\n\n* [**ATS**: _Functional Blockchain_](https://beta.observablehq.com/@galletti94/functional-blockchain)\n* [**C#**: _Programming The Blockchain in C#_](https://programmingblockchain.gitbooks.io/programmingblockchain/)\n* [**Crystal**: _Write your own blockchain and PoW algorithm using Crystal_](https://medium.com/@bradford_hamilton/write-your-own-blockchain-and-pow-algorithm-using-crystal-d53d5d9d0c52)\n* [**Go**: _Building Blockchain in Go_](https://jeiwan.net/posts/building-blockchain-in-go-part-1/)\n* [**Go**: _Code your own blockchain in less than 200 lines of Go_](https://medium.com/@mycoralhealth/code-your-own-blockchain-in-less-than-200-lines-of-go-e296282bcffc)\n* [**Java**: _Creating Your First Blockchain with Java_](https://medium.com/programmers-blockchain/create-simple-blockchain-java-tutorial-from-scratch-6eeed3cb03fa)\n* [**JavaScript**: _A cryptocurrency implementation in less than 1500 lines of code_](https://github.com/conradoqg/naivecoin)\n* [**JavaScript**: _Build your own Blockchain in JavaScript_](https://github.com/nambrot/blockchain-in-js)\n* [**JavaScript**: _Learn & Build a JavaScript Blockchain_](https://medium.com/digital-alchemy-holdings/learn-build-a-javascript-blockchain-part-1-ca61c285821e)\n* [**JavaScript**: _Creating a blockchain with JavaScript_](https://github.com/SavjeeTutorials/SavjeeCoin)\n* [**JavaScript**: _How To Launch Your Own Production-Ready Cryptocurrency_](https://hackernoon.com/how-to-launch-your-own-production-ready-cryptocurrency-ab97cb773371)\n* [**JavaScript**: _Writing a Blockchain in Node.js_](https://www.smashingmagazine.com/2020/02/cryptocurrency-blockchain-node-js/)\n* [**Kotlin**: _Let’s implement a cryptocurrency in Kotlin_](https://medium.com/@vasilyf/lets-implement-a-cryptocurrency-in-kotlin-part-1-blockchain-8704069f8580)\n* [**Python**: _Learn Blockchains by Building One_](https://hackernoon.com/learn-blockchains-by-building-one-117428612f46)\n* [**Python**: _Build your own blockchain: a Python tutorial_](http://ecomunsing.com/build-your-own-blockchain)\n* [**Python**: _A Practical Introduction to Blockchain with Python_](http://adilmoujahid.com/posts/2018/03/intro-blockchain-bitcoin-python/)\n* [**Python**: _Let’s Build the Tiniest Blockchain_](https://medium.com/crypto-currently/lets-build-the-tiniest-blockchain-e70965a248b)\n* [**Ruby**: _Programming Blockchains Step-by-Step (Manuscripts Book Edition)_](https://github.com/yukimotopress/programming-blockchains-step-by-step)\n* [**Scala**: _How to build a simple actor-based blockchain_](https://medium.freecodecamp.org/how-to-build-a-simple-actor-based-blockchain-aac1e996c177)\n* [**TypeScript**: _Naivecoin: a tutorial for building a cryptocurrency_](https://lhartikk.github.io/)\n* [**TypeScript**: _NaivecoinStake: a tutorial for building a cryptocurrency with the Proof of Stake consensus_](https://naivecoinstake.learn.uno/)\n* [**Rust**: _Building A Blockchain in Rust & Substrate_](https://hackernoon.com/building-a-blockchain-in-rust-and-substrate-a-step-by-step-guide-for-developers-kc223ybp)\n\n\n#### Build your own `Bot`\n\n* [**Haskell**: _Roll your own IRC bot_](https://wiki.haskell.org/Roll_your_own_IRC_bot)",
    "ContentSha": "dkqEEB4jN73T0z6iSkfHXeUj4LPuP16lMT6frd8zd+c=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "[![배너](https://codecrafters.io/images/updated-byox-banner.gif)](https://codecrafters.io/github-banner)\n\n## 나만의 &lt;insert-technology-here&gt; 만들기\n\n이 저장소는 우리가 좋아하는 기술들을 처음부터 다시 만드는 잘 작성된 단계별 가이드들의 모음입니다. \n\n> *내가 만들 수 없는 것은 이해하지 못한다 — 리처드 파인만.*\n\n학습하기에 아주 좋은 방법입니다.\n\n* [3D 렌더러](#build-your-own-3d-renderer)\n* [증강 현실](#build-your-own-augmented-reality)\n* [비트토렌트 클라이언트](#build-your-own-bittorrent-client)\n* [블록체인 / 암호화폐](#build-your-own-blockchain--cryptocurrency)\n* [봇](#build-your-own-bot)\n* [커맨드라인 도구](#build-your-own-command-line-tool)\n* [데이터베이스](#build-your-own-database)\n* [도커](#build-your-own-docker)\n* [에뮬레이터 / 가상 머신](#build-your-own-emulator--virtual-machine)\n* [프론트엔드 프레임워크 / 라이브러리](#build-your-own-front-end-framework--library)\n* [게임](#build-your-own-game)\n* [깃](#build-your-own-git)\n* [네트워크 스택](#build-your-own-network-stack)\n* [신경망](#build-your-own-neural-network)\n* [운영체제](#build-your-own-operating-system)\n* [물리 엔진](#build-your-own-physics-engine)\n* [프로그래밍 언어](#build-your-own-programming-language)\n* [정규식 엔진](#build-your-own-regex-engine)\n* [검색 엔진](#build-your-own-search-engine)\n* [쉘](#build-your-own-shell)\n* [템플릿 엔진](#build-your-own-template-engine)\n* [텍스트 에디터](#build-your-own-text-editor)\n* [시각 인식 시스템](#build-your-own-visual-recognition-system)\n* [복셀 엔진](#build-your-own-voxel-engine)\n* [웹 브라우저](#build-your-own-web-browser)\n* [웹 서버](#build-your-own-web-server)\n* [분류되지 않음](#uncategorized)\n\n## 튜토리얼\n\n#### 나만의 `3D 렌더러` 만들기\n\n* [**C++**: _레이 트레이싱 소개: 3D 이미지를 만드는 간단한 방법_](https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work)\n* [**C++**: _OpenGL 작동 원리: 500줄 코드로 소프트웨어 렌더링_](https://github.com/ssloy/tinyrenderer/wiki)\n* [**C++**: _Wolfenstein 3D의 레이캐스팅 엔진_](http://lodev.org/cgtutor/raycasting.html)\n* [**C++**: _물리 기반 렌더링: 이론에서 구현까지_](http://www.pbr-book.org/)\n* [**C++**: _주말에 배우는 레이 트레이싱_](https://raytracing.github.io/books/RayTracingInOneWeekend.html)\n* [**C++**: _래스터화: 실용적 구현_](https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/overview-rasterization-algorithm)\n* [**C# / TypeScript / JavaScript**: _C#, TypeScript, JavaScript로 3D 소프트 엔진을 처음부터 배우기_](https://www.davrous.com/2013/06/13/tutorial-series-learning-how-to-write-a-3d-soft-engine-from-scratch-in-c-typescript-or-javascript/)\n* [**Java / JavaScript**: _나만의 3D 렌더러 만들기_](https://avik-das.github.io/build-your-own-raytracer/)\n* [**Java**: _순수 Java로 간단한 3D 렌더링 엔진 만들기_](http://blog.rogach.org/2015/08/how-to-create-your-own-simple-3d-render.html)\n* [**JavaScript / 의사코드**: _처음부터 배우는 컴퓨터 그래픽_](http://www.gabrielgambetta.com/computer-graphics-from-scratch/introduction.html)\n* [**Python**: _3D 모델러_](http://aosabook.org/en/500L/a-3d-modeller.html)\n\n#### 나만의 `증강 현실` 만들기\n\n* [**C#**: _Vuforia와 Unity 3D를 이용한 초보자용 증강 현실 앱 튜토리얼_](https://www.youtube.com/watch?v=uXNjNcqW4kY) [영상]\n* [**C#**: _Unity ARCore 사용법_](https://www.youtube.com/playlist?list=PLKIKuXdn4ZMjuUAtdQfK1vwTZPQn_rgSv) [영상]\n* [**C#**: _Unity를 이용한 AR 포털 튜토리얼_](https://www.youtube.com/playlist?list=PLPCqNOwwN794Gz5fzUSi1p4OqLU0HTmvn) [영상]\n* [**C#**: _Unity ARCore에서 증강 현실 드래곤 만들기_](https://www.youtube.com/watch?v=qTSDPkPyPqs) [영상]\n* [**C#**: _ARKit을 활용한 증강 현실 튜토리얼: 뒤집힌 세상으로 가는 포털_](https://www.youtube.com/watch?v=Z5AmqMuNi08) [영상]\n* [**Python**: _Python과 OpenCV를 이용한 증강 현실_](https://bitesofcode.wordpress.com/2017/09/12/augmented-reality-with-python-and-opencv-part-1/)\n\n#### 나만의 `비트토렌트 클라이언트` 만들기\n\n* [**C#**: _C#으로 처음부터 비트토렌트 클라이언트 만들기_](https://www.seanjoflynn.com/research/bittorrent.html)\n* [**Go**: _Go로 처음부터 비트토렌트 클라이언트 만들기_](https://blog.jse.li/posts/torrent/)\n* [**Nim**: _Bencode 파서 작성하기_](https://xmonader.github.io/nimdays/day02_bencode.html)\n* [**Node.js**: _나만의 비트토렌트 클라이언트 작성하기_](https://allenkim67.github.io/programming/2016/05/04/how-to-make-your-own-bittorrent-client.html)\n* [**Python**: _Python 3.5로 만든 비트토렌트 클라이언트_](http://markuseliasson.se/article/bittorrent-in-python/)\n\n#### 나만의 `블록체인 / 암호화폐` 만들기\n\n* [**ATS**: _함수형 블록체인_](https://beta.observablehq.com/@galletti94/functional-blockchain)\n* [**C#**: _C#으로 블록체인 프로그래밍하기_](https://programmingblockchain.gitbooks.io/programmingblockchain/)\n* [**Crystal**: _Crystal로 블록체인과 PoW 알고리즘 만들기_](https://medium.com/@bradford_hamilton/write-your-own-blockchain-and-pow-algorithm-using-crystal-d53d5d9d0c52)\n* [**Go**: _Go로 블록체인 만들기_](https://jeiwan.net/posts/building-blockchain-in-go-part-1/)\n* [**Go**: _200줄 미만 Go 코드로 블록체인 만들기_](https://medium.com/@mycoralhealth/code-your-own-blockchain-in-less-than-200-lines-of-go-e296282bcffc)\n* [**Java**: _Java로 첫 블록체인 만들기_](https://medium.com/programmers-blockchain/create-simple-blockchain-java-tutorial-from-scratch-6eeed3cb03fa)\n* [**JavaScript**: _1500줄 미만 코드로 구현한 암호화폐_](https://github.com/conradoqg/naivecoin)\n* [**JavaScript**: _JavaScript로 나만의 블록체인 만들기_](https://github.com/nambrot/blockchain-in-js)\n* [**JavaScript**: _JavaScript 블록체인 배우고 만들기_](https://medium.com/digital-alchemy-holdings/learn-build-a-javascript-blockchain-part-1-ca61c285821e)\n* [**JavaScript**: _JavaScript로 블록체인 생성하기_](https://github.com/SavjeeTutorials/SavjeeCoin)\n* [**JavaScript**: _내 프로덕션용 암호화폐 출시 방법_](https://hackernoon.com/how-to-launch-your-own-production-ready-cryptocurrency-ab97cb773371)\n* [**JavaScript**: _Node.js로 블록체인 작성하기_](https://www.smashingmagazine.com/2020/02/cryptocurrency-blockchain-node-js/)\n* [**Kotlin**: _Kotlin으로 암호화폐 구현하기_](https://medium.com/@vasilyf/lets-implement-a-cryptocurrency-in-kotlin-part-1-blockchain-8704069f8580)\n* [**Python**: _블록체인 배우기: 직접 만들어보기_](https://hackernoon.com/learn-blockchains-by-building-one-117428612f46)\n* [**Python**: _나만의 블록체인 만들기: Python 튜토리얼_](http://ecomunsing.com/build-your-own-blockchain)\n* [**Python**: _Python을 이용한 블록체인 실용 입문_](http://adilmoujahid.com/posts/2018/03/intro-blockchain-bitcoin-python/)\n* [**Python**: _가장 작은 블록체인 만들기_](https://medium.com/crypto-currently/lets-build-the-tiniest-blockchain-e70965a248b)\n* [**Ruby**: _단계별 블록체인 프로그래밍 (Manuscripts Book Edition)_](https://github.com/yukimotopress/programming-blockchains-step-by-step)\n* [**Scala**: _간단한 액터 기반 블록체인 만들기_](https://medium.freecodecamp.org/how-to-build-a-simple-actor-based-blockchain-aac1e996c177)\n* [**TypeScript**: _Naivecoin: 암호화폐 만들기 튜토리얼_](https://lhartikk.github.io/)\n* [**TypeScript**: _NaivecoinStake: 지분 증명 합의로 암호화폐 만들기 튜토리얼_](https://naivecoinstake.learn.uno/)\n* [**Rust**: _Rust & Substrate로 블록체인 만들기_](https://hackernoon.com/building-a-blockchain-in-rust-and-substrate-a-step-by-step-guide-for-developers-kc223ybp)\n\n\n#### 나만의 `봇` 만들기\n\n* [**Haskell**: _나만의 IRC 봇 만들기_](https://wiki.haskell.org/Roll_your_own_IRC_bot)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "slzxJxrqZ5/mIrhvO44SEP1JWZ9Bkh0L/ZNfyLv/koE=",
        "originContent": "[![Banner](https://codecrafters.io/images/updated-byox-banner.gif)](https://codecrafters.io/github-banner)",
        "translatedContent": "[![배너](https://codecrafters.io/images/updated-byox-banner.gif)](https://codecrafters.io/github-banner)"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "ZYLPQT2SRmpaj6vNSOjusxfZWmyiLmC+1uLN+H21CDs=",
        "originContent": "## Build your own &lt;insert-technology-here&gt;",
        "translatedContent": "## 나만의 &lt;insert-technology-here&gt; 만들기"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "68oS9GgX9od/GM70QPraeZcgnFH3TxdEnRIsOyFKc7Q=",
        "originContent": "This repository is a compilation of well-written, step-by-step guides for re-creating our favorite technologies from scratch. ",
        "translatedContent": "이 저장소는 우리가 좋아하는 기술들을 처음부터 다시 만드는 잘 작성된 단계별 가이드들의 모음입니다. "
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "Mxca7xxf+eSUSGx0CbuHUQmPTxzwNoLBnGCWVL0y7yI=",
        "originContent": "> *What I cannot create, I do not understand — Richard Feynman.*",
        "translatedContent": "> *내가 만들 수 없는 것은 이해하지 못한다 — 리처드 파인만.*"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "y9RzUuZVvVOM6W849DxA61IkbePEh/VTes5gu5B7C5M=",
        "originContent": "It's a great way to learn.",
        "translatedContent": "학습하기에 아주 좋은 방법입니다."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "Gf+Xzz6TATBS/Gy9BDQIwIRq8OvPlNxAsgN1ER1JZ00=",
        "originContent": "* [3D Renderer](#build-your-own-3d-renderer)",
        "translatedContent": "* [3D 렌더러](#build-your-own-3d-renderer)"
      },
      {
        "row": 12,
        "rowsha": "aH+XtPo0wtR4IHkWndznAE30i4r74EjusNFTy7SqvoA=",
        "originContent": "* [Augmented Reality](#build-your-own-augmented-reality)",
        "translatedContent": "* [증강 현실](#build-your-own-augmented-reality)"
      },
      {
        "row": 13,
        "rowsha": "++/IQvwK5InCe9VgmEeR6EuuXNhQYu1Wspirmhy3vgg=",
        "originContent": "* [BitTorrent Client](#build-your-own-bittorrent-client)",
        "translatedContent": "* [비트토렌트 클라이언트](#build-your-own-bittorrent-client)"
      },
      {
        "row": 14,
        "rowsha": "8KHL2kP5kVN4vC97kKUJPFrFJZrgD/MBodUmYgfbYW0=",
        "originContent": "* [Blockchain / Cryptocurrency](#build-your-own-blockchain--cryptocurrency)",
        "translatedContent": "* [블록체인 / 암호화폐](#build-your-own-blockchain--cryptocurrency)"
      },
      {
        "row": 15,
        "rowsha": "gqbSMYWw8+NbglWX8EuvI8LzSomn5QUTundsjcZhupU=",
        "originContent": "* [Bot](#build-your-own-bot)",
        "translatedContent": "* [봇](#build-your-own-bot)"
      },
      {
        "row": 16,
        "rowsha": "NXg3byr8vxeFdUZXWn3hcd10fLLj7SS4HBFYYv61kfU=",
        "originContent": "* [Command-Line Tool](#build-your-own-command-line-tool)",
        "translatedContent": "* [커맨드라인 도구](#build-your-own-command-line-tool)"
      },
      {
        "row": 17,
        "rowsha": "tWD5ZUR0OqdkmGwFQj7Rm68+FkbXYelNvAv6qYxmius=",
        "originContent": "* [Database](#build-your-own-database)",
        "translatedContent": "* [데이터베이스](#build-your-own-database)"
      },
      {
        "row": 18,
        "rowsha": "pXR39R1Hgxkkc+3Xn4SQF3QQlbCmQv10E12Ewv1valI=",
        "originContent": "* [Docker](#build-your-own-docker)",
        "translatedContent": "* [도커](#build-your-own-docker)"
      },
      {
        "row": 19,
        "rowsha": "ZX9lyfxT88wnwst7NfL8d2CNe0siS7tSaOIhwwS/Jck=",
        "originContent": "* [Emulator / Virtual Machine](#build-your-own-emulator--virtual-machine)",
        "translatedContent": "* [에뮬레이터 / 가상 머신](#build-your-own-emulator--virtual-machine)"
      },
      {
        "row": 20,
        "rowsha": "pewam7Gz8r4VL8xfhBNGAIBejIgUKSmzJDNkb/82B9w=",
        "originContent": "* [Front-end Framework / Library](#build-your-own-front-end-framework--library)",
        "translatedContent": "* [프론트엔드 프레임워크 / 라이브러리](#build-your-own-front-end-framework--library)"
      },
      {
        "row": 21,
        "rowsha": "rLBo6x7Zq1d9sVfHdirRpnX0kFv3GrCDQDlDonUEqE0=",
        "originContent": "* [Game](#build-your-own-game)",
        "translatedContent": "* [게임](#build-your-own-game)"
      },
      {
        "row": 22,
        "rowsha": "xmrymaSyn1NieBMMQthYncZno+7vN0B030DOA6YF2sA=",
        "originContent": "* [Git](#build-your-own-git)",
        "translatedContent": "* [깃](#build-your-own-git)"
      },
      {
        "row": 23,
        "rowsha": "2rKvMqbfZ/LEHuzvqBJBRWEJykWlKEPHu0oeIC32Glo=",
        "originContent": "* [Network Stack](#build-your-own-network-stack)",
        "translatedContent": "* [네트워크 스택](#build-your-own-network-stack)"
      },
      {
        "row": 24,
        "rowsha": "mwDtHE2+mH9jv4+m5RI0yydg115Cb/rsFmCJacO0XTk=",
        "originContent": "* [Neural Network](#build-your-own-neural-network)",
        "translatedContent": "* [신경망](#build-your-own-neural-network)"
      },
      {
        "row": 25,
        "rowsha": "ECjc5R4dw0DhTCNM/MpAG0bSh95M8ntHZ7fQsbSiHtI=",
        "originContent": "* [Operating System](#build-your-own-operating-system)",
        "translatedContent": "* [운영체제](#build-your-own-operating-system)"
      },
      {
        "row": 26,
        "rowsha": "JvmaFb6GSusRHB956KXKlY7hA/Mnssrk0maIhyZ2c4Y=",
        "originContent": "* [Physics Engine](#build-your-own-physics-engine)",
        "translatedContent": "* [물리 엔진](#build-your-own-physics-engine)"
      },
      {
        "row": 27,
        "rowsha": "2p8n+auf8Q6MoqkpXDaWEuiBNk8X5Anj4jUx9eJGphw=",
        "originContent": "* [Programming Language](#build-your-own-programming-language)",
        "translatedContent": "* [프로그래밍 언어](#build-your-own-programming-language)"
      },
      {
        "row": 28,
        "rowsha": "ABlQaBGb4DxADIvThozMGUyfKPVg8A03iZVGkjoFaWI=",
        "originContent": "* [Regex Engine](#build-your-own-regex-engine)",
        "translatedContent": "* [정규식 엔진](#build-your-own-regex-engine)"
      },
      {
        "row": 29,
        "rowsha": "0Vs0hajE5nnRISE5HbdmlpoFMLfzyLxWDr3ZvT1Yhwg=",
        "originContent": "* [Search Engine](#build-your-own-search-engine)",
        "translatedContent": "* [검색 엔진](#build-your-own-search-engine)"
      },
      {
        "row": 30,
        "rowsha": "O9xkotXtONdKm51LyoEuUARQiyDU7PO43HQDlO9pBdc=",
        "originContent": "* [Shell](#build-your-own-shell)",
        "translatedContent": "* [쉘](#build-your-own-shell)"
      },
      {
        "row": 31,
        "rowsha": "08ING9dRd/hZgK0PXfnGtu6sgxeMVOJYCXZ3io6YIss=",
        "originContent": "* [Template Engine](#build-your-own-template-engine)",
        "translatedContent": "* [템플릿 엔진](#build-your-own-template-engine)"
      },
      {
        "row": 32,
        "rowsha": "+qMy2DD7EKTld90M0DO3edwlFtt2OuoXsQ1iHA7bp7I=",
        "originContent": "* [Text Editor](#build-your-own-text-editor)",
        "translatedContent": "* [텍스트 에디터](#build-your-own-text-editor)"
      },
      {
        "row": 33,
        "rowsha": "7tFVPBNODWnlPoQpciTXX+dpXU39xknsN4sA3YvxuUc=",
        "originContent": "* [Visual Recognition System](#build-your-own-visual-recognition-system)",
        "translatedContent": "* [시각 인식 시스템](#build-your-own-visual-recognition-system)"
      },
      {
        "row": 34,
        "rowsha": "6dqn80HXQqsdbNMoVrEwiiJ98gNYA3wbR+eysAE07gY=",
        "originContent": "* [Voxel Engine](#build-your-own-voxel-engine)",
        "translatedContent": "* [복셀 엔진](#build-your-own-voxel-engine)"
      },
      {
        "row": 35,
        "rowsha": "wZKz+uw+oKTMQZnZ7iZenHii3JdzUoSHOJYeFKLmrJA=",
        "originContent": "* [Web Browser](#build-your-own-web-browser)",
        "translatedContent": "* [웹 브라우저](#build-your-own-web-browser)"
      },
      {
        "row": 36,
        "rowsha": "BSPZZW+f/J0vXv0wPRHOhuHrCd6g2LsPZTLWRp2HTo8=",
        "originContent": "* [Web Server](#build-your-own-web-server)",
        "translatedContent": "* [웹 서버](#build-your-own-web-server)"
      },
      {
        "row": 37,
        "rowsha": "d5sc2ebbRq4vzfBIisXGCRtohiPWGg9yDRRVQXDJQY8=",
        "originContent": "* [Uncategorized](#uncategorized)",
        "translatedContent": "* [분류되지 않음](#uncategorized)"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "7xFNzunIBuEt26ofABLXiVBRdVibYqIB+8J99W1182s=",
        "originContent": "## Tutorials",
        "translatedContent": "## 튜토리얼"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 41,
        "rowsha": "BQg1aWEFpcfDZXjqC7SVKFOFmjq+womzyi4pF/DkiN8=",
        "originContent": "#### Build your own `3D Renderer`",
        "translatedContent": "#### 나만의 `3D 렌더러` 만들기"
      },
      {
        "row": 42,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 43,
        "rowsha": "Wuw0e35ELiIOCfbaL8cP6J0IYR6t1SCshcVSfZ/Cg00=",
        "originContent": "* [**C++**: _Introduction to Ray Tracing: a Simple Method for Creating 3D Images_](https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work)",
        "translatedContent": "* [**C++**: _레이 트레이싱 소개: 3D 이미지를 만드는 간단한 방법_](https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work)"
      },
      {
        "row": 44,
        "rowsha": "XyTvZfe+6zg2ZCx8nRuz9wUrG+2gRkAyzALPNKtLC6I=",
        "originContent": "* [**C++**: _How OpenGL works: software rendering in 500 lines of code_](https://github.com/ssloy/tinyrenderer/wiki)",
        "translatedContent": "* [**C++**: _OpenGL 작동 원리: 500줄 코드로 소프트웨어 렌더링_](https://github.com/ssloy/tinyrenderer/wiki)"
      },
      {
        "row": 45,
        "rowsha": "xAUTcAeaOLmFn8MJUhmjzt26W35NZzj/U5jL9NP/Sbk=",
        "originContent": "* [**C++**: _Raycasting engine of Wolfenstein 3D_](http://lodev.org/cgtutor/raycasting.html)",
        "translatedContent": "* [**C++**: _Wolfenstein 3D의 레이캐스팅 엔진_](http://lodev.org/cgtutor/raycasting.html)"
      },
      {
        "row": 46,
        "rowsha": "HhvoRAb4D1FWHy/jdEEoigXROXfo/FJsmrQ4WEStiFc=",
        "originContent": "* [**C++**: _Physically Based Rendering:From Theory To Implementation_](http://www.pbr-book.org/)",
        "translatedContent": "* [**C++**: _물리 기반 렌더링: 이론에서 구현까지_](http://www.pbr-book.org/)"
      },
      {
        "row": 47,
        "rowsha": "vD6si154UPMY+RFeZPvRucOVWVUoxKJI81TIp3Xsbks=",
        "originContent": "* [**C++**: _Ray Tracing in One Weekend_](https://raytracing.github.io/books/RayTracingInOneWeekend.html)",
        "translatedContent": "* [**C++**: _주말에 배우는 레이 트레이싱_](https://raytracing.github.io/books/RayTracingInOneWeekend.html)"
      },
      {
        "row": 48,
        "rowsha": "Ga5Y+plbqpENjNZG9yNjYAi2S7Hyf9Lcphw4qXzQPnQ=",
        "originContent": "* [**C++**: _Rasterization: a Practical Implementation_](https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/overview-rasterization-algorithm)",
        "translatedContent": "* [**C++**: _래스터화: 실용적 구현_](https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/overview-rasterization-algorithm)"
      },
      {
        "row": 49,
        "rowsha": "77iEoAGpRWZGTtsJq+FMUCvOJHtImneIaLot41NWxSU=",
        "originContent": "* [**C# / TypeScript / JavaScript**: _Learning how to write a 3D soft engine from scratch in C#, TypeScript or JavaScript_](https://www.davrous.com/2013/06/13/tutorial-series-learning-how-to-write-a-3d-soft-engine-from-scratch-in-c-typescript-or-javascript/)",
        "translatedContent": "* [**C# / TypeScript / JavaScript**: _C#, TypeScript, JavaScript로 3D 소프트 엔진을 처음부터 배우기_](https://www.davrous.com/2013/06/13/tutorial-series-learning-how-to-write-a-3d-soft-engine-from-scratch-in-c-typescript-or-javascript/)"
      },
      {
        "row": 50,
        "rowsha": "dRwIx25toMOYvbPaNEnB377YIiWUJEByDTSLKUGM2ZI=",
        "originContent": "* [**Java / JavaScript**: _Build your own 3D renderer_](https://avik-das.github.io/build-your-own-raytracer/)",
        "translatedContent": "* [**Java / JavaScript**: _나만의 3D 렌더러 만들기_](https://avik-das.github.io/build-your-own-raytracer/)"
      },
      {
        "row": 51,
        "rowsha": "JvrGGvkxv3tzyB8pbu2Hk6xH9I3RxU5a1Y0CRuMFtFo=",
        "originContent": "* [**Java**: _How to create your own simple 3D render engine in pure Java_](http://blog.rogach.org/2015/08/how-to-create-your-own-simple-3d-render.html)",
        "translatedContent": "* [**Java**: _순수 Java로 간단한 3D 렌더링 엔진 만들기_](http://blog.rogach.org/2015/08/how-to-create-your-own-simple-3d-render.html)"
      },
      {
        "row": 52,
        "rowsha": "bQlh+5oYmwXujP4oxZv4WdzKqJckaWfsJGkjm9Nfg2Q=",
        "originContent": "* [**JavaScript / Pseudocode**: _Computer Graphics from scratch_](http://www.gabrielgambetta.com/computer-graphics-from-scratch/introduction.html)",
        "translatedContent": "* [**JavaScript / 의사코드**: _처음부터 배우는 컴퓨터 그래픽_](http://www.gabrielgambetta.com/computer-graphics-from-scratch/introduction.html)"
      },
      {
        "row": 53,
        "rowsha": "WTzI5JNw/0zA8T3N4h9jIw/UDV/+smF/WvRxcrvg2Nw=",
        "originContent": "* [**Python**: _A 3D Modeller_](http://aosabook.org/en/500L/a-3d-modeller.html)",
        "translatedContent": "* [**Python**: _3D 모델러_](http://aosabook.org/en/500L/a-3d-modeller.html)"
      },
      {
        "row": 54,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 55,
        "rowsha": "+Fu07vFJo9wcZIsS/rfQ1+Y+Ika4o0eARg1g4n6R4/w=",
        "originContent": "#### Build your own `Augmented Reality`",
        "translatedContent": "#### 나만의 `증강 현실` 만들기"
      },
      {
        "row": 56,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 57,
        "rowsha": "xe7hUbHD16SlGZcCXfLXHHrIYyRy6OB/80F67S2Kl3o=",
        "originContent": "* [**C#**: _How To: Augmented Reality App Tutorial for Beginners with Vuforia and Unity 3D_](https://www.youtube.com/watch?v=uXNjNcqW4kY) [video]",
        "translatedContent": "* [**C#**: _Vuforia와 Unity 3D를 이용한 초보자용 증강 현실 앱 튜토리얼_](https://www.youtube.com/watch?v=uXNjNcqW4kY) [영상]"
      },
      {
        "row": 58,
        "rowsha": "bApoZhq9QUwHNTxAHgmBOa8SmHNt5l3A9cg5+Fu6l3s=",
        "originContent": "* [**C#**: _How To Unity ARCore_](https://www.youtube.com/playlist?list=PLKIKuXdn4ZMjuUAtdQfK1vwTZPQn_rgSv) [video]",
        "translatedContent": "* [**C#**: _Unity ARCore 사용법_](https://www.youtube.com/playlist?list=PLKIKuXdn4ZMjuUAtdQfK1vwTZPQn_rgSv) [영상]"
      },
      {
        "row": 59,
        "rowsha": "qOc8jm0PplPybHSvMxwFhO39Xn42HTV+6QXPpL70cF4=",
        "originContent": "* [**C#**: _AR Portal Tutorial with Unity_](https://www.youtube.com/playlist?list=PLPCqNOwwN794Gz5fzUSi1p4OqLU0HTmvn) [video]",
        "translatedContent": "* [**C#**: _Unity를 이용한 AR 포털 튜토리얼_](https://www.youtube.com/playlist?list=PLPCqNOwwN794Gz5fzUSi1p4OqLU0HTmvn) [영상]"
      },
      {
        "row": 60,
        "rowsha": "+zdTFVojAoyGo8oILvvHLih9zI0LsE5YUrGorcZ/Ymg=",
        "originContent": "* [**C#**: _How to create a Dragon in Augmented Reality in Unity ARCore_](https://www.youtube.com/watch?v=qTSDPkPyPqs) [video]",
        "translatedContent": "* [**C#**: _Unity ARCore에서 증강 현실 드래곤 만들기_](https://www.youtube.com/watch?v=qTSDPkPyPqs) [영상]"
      },
      {
        "row": 61,
        "rowsha": "bLp8Y75iTzz//mHqeiyqliETr1gyo7EZ1Hm2rmmbyS4=",
        "originContent": "* [**C#**: _How to Augmented Reality AR Tutorial: ARKit Portal to the Upside Down_](https://www.youtube.com/watch?v=Z5AmqMuNi08) [video]",
        "translatedContent": "* [**C#**: _ARKit을 활용한 증강 현실 튜토리얼: 뒤집힌 세상으로 가는 포털_](https://www.youtube.com/watch?v=Z5AmqMuNi08) [영상]"
      },
      {
        "row": 62,
        "rowsha": "anSDcHaCzz5T9dyKtbRvR+sBoyjQtNDNd2X6axwHQWo=",
        "originContent": "* [**Python**: _Augmented Reality with Python and OpenCV_](https://bitesofcode.wordpress.com/2017/09/12/augmented-reality-with-python-and-opencv-part-1/)",
        "translatedContent": "* [**Python**: _Python과 OpenCV를 이용한 증강 현실_](https://bitesofcode.wordpress.com/2017/09/12/augmented-reality-with-python-and-opencv-part-1/)"
      },
      {
        "row": 63,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 64,
        "rowsha": "BjvKJ9sNfsNJIHeVENltKzA1jSHWbxtVLM8K2Pmy97M=",
        "originContent": "#### Build your own `BitTorrent Client`",
        "translatedContent": "#### 나만의 `비트토렌트 클라이언트` 만들기"
      },
      {
        "row": 65,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 66,
        "rowsha": "+IL3/ddOQEH+e0CNogJYMfU2SPx70cfQJ5QbIId6aCk=",
        "originContent": "* [**C#**: _Building a BitTorrent client from scratch in C#_](https://www.seanjoflynn.com/research/bittorrent.html)",
        "translatedContent": "* [**C#**: _C#으로 처음부터 비트토렌트 클라이언트 만들기_](https://www.seanjoflynn.com/research/bittorrent.html)"
      },
      {
        "row": 67,
        "rowsha": "LgB6x8wQyhdJkIO5Khz8yEnaAMEzwYG1iWYm338TKrU=",
        "originContent": "* [**Go**: _Building a BitTorrent client from the ground up in Go_](https://blog.jse.li/posts/torrent/)",
        "translatedContent": "* [**Go**: _Go로 처음부터 비트토렌트 클라이언트 만들기_](https://blog.jse.li/posts/torrent/)"
      },
      {
        "row": 68,
        "rowsha": "GEp8CsfePKkDzAGsgbNcoCGTCWYhATXh9MkOkUAX5fc=",
        "originContent": "* [**Nim**: _Writing a Bencode Parser_](https://xmonader.github.io/nimdays/day02_bencode.html)",
        "translatedContent": "* [**Nim**: _Bencode 파서 작성하기_](https://xmonader.github.io/nimdays/day02_bencode.html)"
      },
      {
        "row": 69,
        "rowsha": "nqVAk1crCS4fVgRV8QuAKJprpEdDQufYbN3cMPHLbio=",
        "originContent": "* [**Node.js**: _Write your own bittorrent client_](https://allenkim67.github.io/programming/2016/05/04/how-to-make-your-own-bittorrent-client.html)",
        "translatedContent": "* [**Node.js**: _나만의 비트토렌트 클라이언트 작성하기_](https://allenkim67.github.io/programming/2016/05/04/how-to-make-your-own-bittorrent-client.html)"
      },
      {
        "row": 70,
        "rowsha": "kZxa9b3ub6Cl+dkkXf6eQpnfkoypLTZAcWTvx/x9cuM=",
        "originContent": "* [**Python**: _A BitTorrent client in Python 3.5_](http://markuseliasson.se/article/bittorrent-in-python/)",
        "translatedContent": "* [**Python**: _Python 3.5로 만든 비트토렌트 클라이언트_](http://markuseliasson.se/article/bittorrent-in-python/)"
      },
      {
        "row": 71,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 72,
        "rowsha": "wnf1DawlEYLjyj+Uz8bKXrctFuGDPjBVIV38RsFUG50=",
        "originContent": "#### Build your own `Blockchain / Cryptocurrency`",
        "translatedContent": "#### 나만의 `블록체인 / 암호화폐` 만들기"
      },
      {
        "row": 73,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 74,
        "rowsha": "pufEDcnteXIuBxLK/9PAO0eSKLIUOEqa3kYn7xP5cJk=",
        "originContent": "* [**ATS**: _Functional Blockchain_](https://beta.observablehq.com/@galletti94/functional-blockchain)",
        "translatedContent": "* [**ATS**: _함수형 블록체인_](https://beta.observablehq.com/@galletti94/functional-blockchain)"
      },
      {
        "row": 75,
        "rowsha": "iab3imWJ1UbJIzb0rN8yYMVC3/NXi/Yixkx/lxVKrGc=",
        "originContent": "* [**C#**: _Programming The Blockchain in C#_](https://programmingblockchain.gitbooks.io/programmingblockchain/)",
        "translatedContent": "* [**C#**: _C#으로 블록체인 프로그래밍하기_](https://programmingblockchain.gitbooks.io/programmingblockchain/)"
      },
      {
        "row": 76,
        "rowsha": "lw9jNJNb7gfDKpWf6mvxIm3qWxFQs2+yYAd9WfakHBw=",
        "originContent": "* [**Crystal**: _Write your own blockchain and PoW algorithm using Crystal_](https://medium.com/@bradford_hamilton/write-your-own-blockchain-and-pow-algorithm-using-crystal-d53d5d9d0c52)",
        "translatedContent": "* [**Crystal**: _Crystal로 블록체인과 PoW 알고리즘 만들기_](https://medium.com/@bradford_hamilton/write-your-own-blockchain-and-pow-algorithm-using-crystal-d53d5d9d0c52)"
      },
      {
        "row": 77,
        "rowsha": "54+YuhEH4dvBqN3OE0Mv7PPXW1O6IPkAzUjV1qmdqB4=",
        "originContent": "* [**Go**: _Building Blockchain in Go_](https://jeiwan.net/posts/building-blockchain-in-go-part-1/)",
        "translatedContent": "* [**Go**: _Go로 블록체인 만들기_](https://jeiwan.net/posts/building-blockchain-in-go-part-1/)"
      },
      {
        "row": 78,
        "rowsha": "myWWi/rLuZokAYA7RKYwjTIUjQw5D0JFd3t15UJVaFc=",
        "originContent": "* [**Go**: _Code your own blockchain in less than 200 lines of Go_](https://medium.com/@mycoralhealth/code-your-own-blockchain-in-less-than-200-lines-of-go-e296282bcffc)",
        "translatedContent": "* [**Go**: _200줄 미만 Go 코드로 블록체인 만들기_](https://medium.com/@mycoralhealth/code-your-own-blockchain-in-less-than-200-lines-of-go-e296282bcffc)"
      },
      {
        "row": 79,
        "rowsha": "ZGYVtQWtmPoAnAnu1sXNdIe7IUTShJ8TgZ1IQoIhsLA=",
        "originContent": "* [**Java**: _Creating Your First Blockchain with Java_](https://medium.com/programmers-blockchain/create-simple-blockchain-java-tutorial-from-scratch-6eeed3cb03fa)",
        "translatedContent": "* [**Java**: _Java로 첫 블록체인 만들기_](https://medium.com/programmers-blockchain/create-simple-blockchain-java-tutorial-from-scratch-6eeed3cb03fa)"
      },
      {
        "row": 80,
        "rowsha": "E25e8LXRrvVUpMUJCP+sBs2tKD6ypQxWeXoLTYDQhw0=",
        "originContent": "* [**JavaScript**: _A cryptocurrency implementation in less than 1500 lines of code_](https://github.com/conradoqg/naivecoin)",
        "translatedContent": "* [**JavaScript**: _1500줄 미만 코드로 구현한 암호화폐_](https://github.com/conradoqg/naivecoin)"
      },
      {
        "row": 81,
        "rowsha": "sDtwxpWpZgFfAscq1x6IulczLboRlCgULo6c9KJwmfY=",
        "originContent": "* [**JavaScript**: _Build your own Blockchain in JavaScript_](https://github.com/nambrot/blockchain-in-js)",
        "translatedContent": "* [**JavaScript**: _JavaScript로 나만의 블록체인 만들기_](https://github.com/nambrot/blockchain-in-js)"
      },
      {
        "row": 82,
        "rowsha": "pj6JYuBJR+NqJRbXZVOMunDCK4UH0xmQhOTXiAzjOsQ=",
        "originContent": "* [**JavaScript**: _Learn & Build a JavaScript Blockchain_](https://medium.com/digital-alchemy-holdings/learn-build-a-javascript-blockchain-part-1-ca61c285821e)",
        "translatedContent": "* [**JavaScript**: _JavaScript 블록체인 배우고 만들기_](https://medium.com/digital-alchemy-holdings/learn-build-a-javascript-blockchain-part-1-ca61c285821e)"
      },
      {
        "row": 83,
        "rowsha": "DnRkMP6MmOOntb8AUi+EBOnBIUDnzTBe2sJVjJR3osk=",
        "originContent": "* [**JavaScript**: _Creating a blockchain with JavaScript_](https://github.com/SavjeeTutorials/SavjeeCoin)",
        "translatedContent": "* [**JavaScript**: _JavaScript로 블록체인 생성하기_](https://github.com/SavjeeTutorials/SavjeeCoin)"
      },
      {
        "row": 84,
        "rowsha": "fLlAvZnrvu7gwbkoc/4gk8UbnscK3wzKU++WamoPh6Q=",
        "originContent": "* [**JavaScript**: _How To Launch Your Own Production-Ready Cryptocurrency_](https://hackernoon.com/how-to-launch-your-own-production-ready-cryptocurrency-ab97cb773371)",
        "translatedContent": "* [**JavaScript**: _내 프로덕션용 암호화폐 출시 방법_](https://hackernoon.com/how-to-launch-your-own-production-ready-cryptocurrency-ab97cb773371)"
      },
      {
        "row": 85,
        "rowsha": "3C2oOd3kSon1TgcDRM1uwy1wM/xRO0jS5TXYr6HcZ2c=",
        "originContent": "* [**JavaScript**: _Writing a Blockchain in Node.js_](https://www.smashingmagazine.com/2020/02/cryptocurrency-blockchain-node-js/)",
        "translatedContent": "* [**JavaScript**: _Node.js로 블록체인 작성하기_](https://www.smashingmagazine.com/2020/02/cryptocurrency-blockchain-node-js/)"
      },
      {
        "row": 86,
        "rowsha": "ovVP5cgvw8qA81GmQD0x6Fzs/5v83nxdEvSUNZ2WzFA=",
        "originContent": "* [**Kotlin**: _Let’s implement a cryptocurrency in Kotlin_](https://medium.com/@vasilyf/lets-implement-a-cryptocurrency-in-kotlin-part-1-blockchain-8704069f8580)",
        "translatedContent": "* [**Kotlin**: _Kotlin으로 암호화폐 구현하기_](https://medium.com/@vasilyf/lets-implement-a-cryptocurrency-in-kotlin-part-1-blockchain-8704069f8580)"
      },
      {
        "row": 87,
        "rowsha": "aEITG+5FTrqUB9gcwzPvvN7WASdT4vGspZzARDE6eFs=",
        "originContent": "* [**Python**: _Learn Blockchains by Building One_](https://hackernoon.com/learn-blockchains-by-building-one-117428612f46)",
        "translatedContent": "* [**Python**: _블록체인 배우기: 직접 만들어보기_](https://hackernoon.com/learn-blockchains-by-building-one-117428612f46)"
      },
      {
        "row": 88,
        "rowsha": "mw9sy+cJ1QsmMV9Tsj3Jul7Y9uU/IsBbQ88jXVvSlMM=",
        "originContent": "* [**Python**: _Build your own blockchain: a Python tutorial_](http://ecomunsing.com/build-your-own-blockchain)",
        "translatedContent": "* [**Python**: _나만의 블록체인 만들기: Python 튜토리얼_](http://ecomunsing.com/build-your-own-blockchain)"
      },
      {
        "row": 89,
        "rowsha": "AJOIhd5/QbQDgcmo2TAwJ5wd89YolEvJGgoIc5xhDTQ=",
        "originContent": "* [**Python**: _A Practical Introduction to Blockchain with Python_](http://adilmoujahid.com/posts/2018/03/intro-blockchain-bitcoin-python/)",
        "translatedContent": "* [**Python**: _Python을 이용한 블록체인 실용 입문_](http://adilmoujahid.com/posts/2018/03/intro-blockchain-bitcoin-python/)"
      },
      {
        "row": 90,
        "rowsha": "79zwQx6IR1wluz5cQrImSCAXFnUQ+FyHEF1L2lf3Plw=",
        "originContent": "* [**Python**: _Let’s Build the Tiniest Blockchain_](https://medium.com/crypto-currently/lets-build-the-tiniest-blockchain-e70965a248b)",
        "translatedContent": "* [**Python**: _가장 작은 블록체인 만들기_](https://medium.com/crypto-currently/lets-build-the-tiniest-blockchain-e70965a248b)"
      },
      {
        "row": 91,
        "rowsha": "JOHg8EOmvaTVkTc+hctLIbp54QArQ20n7j0KN4PfHM0=",
        "originContent": "* [**Ruby**: _Programming Blockchains Step-by-Step (Manuscripts Book Edition)_](https://github.com/yukimotopress/programming-blockchains-step-by-step)",
        "translatedContent": "* [**Ruby**: _단계별 블록체인 프로그래밍 (Manuscripts Book Edition)_](https://github.com/yukimotopress/programming-blockchains-step-by-step)"
      },
      {
        "row": 92,
        "rowsha": "JhL9pxF4GhbgiDBm/W68QWyhLxxXSaYAwa8xmyZL+WM=",
        "originContent": "* [**Scala**: _How to build a simple actor-based blockchain_](https://medium.freecodecamp.org/how-to-build-a-simple-actor-based-blockchain-aac1e996c177)",
        "translatedContent": "* [**Scala**: _간단한 액터 기반 블록체인 만들기_](https://medium.freecodecamp.org/how-to-build-a-simple-actor-based-blockchain-aac1e996c177)"
      },
      {
        "row": 93,
        "rowsha": "uS1UuPTsuqtek4oPYonUedxCGffO+rhL3svNrqPSSaE=",
        "originContent": "* [**TypeScript**: _Naivecoin: a tutorial for building a cryptocurrency_](https://lhartikk.github.io/)",
        "translatedContent": "* [**TypeScript**: _Naivecoin: 암호화폐 만들기 튜토리얼_](https://lhartikk.github.io/)"
      },
      {
        "row": 94,
        "rowsha": "Lc16GjE2LW+PFqfJLYlIMW2m85H/D0LQOlLHTf0nzwo=",
        "originContent": "* [**TypeScript**: _NaivecoinStake: a tutorial for building a cryptocurrency with the Proof of Stake consensus_](https://naivecoinstake.learn.uno/)",
        "translatedContent": "* [**TypeScript**: _NaivecoinStake: 지분 증명 합의로 암호화폐 만들기 튜토리얼_](https://naivecoinstake.learn.uno/)"
      },
      {
        "row": 95,
        "rowsha": "Vsr3LK/Bec5S0SD9WeVY3MSoTZCRpegpB53fEyPt6mI=",
        "originContent": "* [**Rust**: _Building A Blockchain in Rust & Substrate_](https://hackernoon.com/building-a-blockchain-in-rust-and-substrate-a-step-by-step-guide-for-developers-kc223ybp)",
        "translatedContent": "* [**Rust**: _Rust & Substrate로 블록체인 만들기_](https://hackernoon.com/building-a-blockchain-in-rust-and-substrate-a-step-by-step-guide-for-developers-kc223ybp)"
      },
      {
        "row": 96,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 97,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 98,
        "rowsha": "EUR+SUDBG5Ab+dXyAHerv6Dv5U8eMfUXlJEyeVNMuOE=",
        "originContent": "#### Build your own `Bot`",
        "translatedContent": "#### 나만의 `봇` 만들기"
      },
      {
        "row": 99,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 100,
        "rowsha": "UbjMmKlnKlHN5q1s5e8vVBnUZIAQYWMcDlcz7/TpUW0=",
        "originContent": "* [**Haskell**: _Roll your own IRC bot_](https://wiki.haskell.org/Roll_your_own_IRC_bot)",
        "translatedContent": "* [**Haskell**: _나만의 IRC 봇 만들기_](https://wiki.haskell.org/Roll_your_own_IRC_bot)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "* [**Node.js**: _Creating a Simple Facebook Messenger AI Bot with API.ai in Node.js_](https://tutorials.botsfloor.com/creating-a-simple-facebook-messenger-ai-bot-with-api-ai-in-node-js-50ae2fa5c80d)\n* [**Node.js**: _How to make a responsive telegram bot_](https://www.sohamkamani.com/blog/2016/09/21/making-a-telegram-bot/)\n* [**Node.js**: _Create a Discord bot_](https://discordjs.guide/)\n* [**Node.js**: _gifbot - Building a GitHub App_](https://blog.scottlogic.com/2017/05/22/gifbot-github-integration.html)\n* [**Node.js**: _Building A Simple AI Chatbot With Web Speech API And Node.js_](https://www.smashingmagazine.com/2017/08/ai-chatbot-web-speech-api-node-js/)\n* [**Python**: _How to Build Your First Slack Bot with Python_](https://www.fullstackpython.com/blog/build-first-slack-bot-python.html)\n* [**Python**: _How to build a Slack Bot with Python using Slack Events API & Django under 20 minute_](https://medium.com/freehunch/how-to-build-a-slack-bot-with-python-using-slack-events-api-django-under-20-minute-code-included-269c3a9bf64e)\n* [**Python**: _Build a Reddit Bot_](http://pythonforengineers.com/build-a-reddit-bot-part-1/)\n* [**Python**: _How To Make A Reddit Bot_](https://www.youtube.com/watch?v=krTUf7BpTc0) [video]\n* [**Python**: _How To Create a Telegram Bot Using Python_](https://www.freecodecamp.org/news/how-to-create-a-telegram-bot-using-python/)\n* [**Python**: _Create a Twitter Bot in Python Using Tweepy_](https://medium.freecodecamp.org/creating-a-twitter-bot-in-python-with-tweepy-ac524157a607)\n* [**Python**: _Creating Reddit Bot with Python & PRAW_](https://www.youtube.com/playlist?list=PLIFBTFgFpoJ9vmYYlfxRFV6U_XhG-4fpP) [video]\n* [**R**: _Build A Cryptocurrency Trading Bot with R_](https://towardsdatascience.com/build-a-cryptocurrency-trading-bot-with-r-1445c429e1b1)\n* [**Rust**: _A bot for Starcraft in Rust, C or any other language_](https://habr.com/en/post/436254/)\n\n#### Build your own `Command-Line Tool`\n\n* [**Go**: _Visualize your local git contributions with Go_](https://flaviocopes.com/go-git-contributions/)\n* [**Go**: _Build a command line app with Go: lolcat_](https://flaviocopes.com/go-tutorial-lolcat/)\n* [**Go**: _Building a cli command with Go: cowsay_](https://flaviocopes.com/go-tutorial-cowsay/)\n* [**Go**: _Go CLI tutorial: fortune clone_](https://flaviocopes.com/go-tutorial-fortune/)\n* [**Nim**: _Writing a stow alternative to manage dotfiles_](https://xmonader.github.io/nimdays/day06_nistow.html)\n* [**Node.js**: _Create a CLI tool in Javascript_](https://citw.dev/tutorial/create-your-own-cli-tool)\n* [**Rust**: _Command line apps in Rust_](https://rust-cli.github.io/book/index.html)\n* [**Rust**: _Writing a Command Line Tool in Rust_](https://mattgathu.dev/2017/08/29/writing-cli-app-rust.html)\n* [**Zig**: _Build Your Own CLI App in Zig from Scratch_](https://rebuild-x.github.io/docs/#/./zig/terminal/cli)\n\n\n#### Build your own `Database`\n\n* [**C**: _Let's Build a Simple Database_](https://cstack.github.io/db_tutorial/)\n* [**C++**: _Build Your Own Redis from Scratch_](https://build-your-own.org/redis)\n* [**C#**: _Build Your Own Database_](https://www.codeproject.com/Articles/1029838/Build-Your-Own-Database)\n* [**Clojure**: _An Archaeology-Inspired Database_](http://aosabook.org/en/500L/an-archaeology-inspired-database.html)\n* [**Crystal**: _Why you should build your own NoSQL Database_](https://medium.com/@marceloboeira/why-you-should-build-your-own-nosql-database-9bbba42039f5)\n* [**Go**: _Build Your Own Database from Scratch: Persistence, Indexing, Concurrency_](https://build-your-own.org/database/)\n* [**Go**: _Build Your Own Redis from Scratch_](https://www.build-redis-from-scratch.dev/)\n* [**JavaScript**: _Dagoba: an in-memory graph database_](http://aosabook.org/en/500L/dagoba-an-in-memory-graph-database.html)\n* [**Python**: _DBDB: Dog Bed Database_](http://aosabook.org/en/500L/dbdb-dog-bed-database.html)\n* [**Python**: _Write your own miniature Redis with Python_](http://charlesleifer.com/blog/building-a-simple-redis-server-with-python/)\n* [**Ruby**: _Build your own fast, persistent KV store in Ruby_](https://dineshgowda.com/posts/build-your-own-persistent-kv-store/)\n* [**Rust**: _Build your own Redis client and server_](https://tokio.rs/tokio/tutorial/setup)\n\n#### Build your own `Docker`\n\n* [**C**: _Linux containers in 500 lines of code_](https://blog.lizzie.io/linux-containers-in-500-loc.html)\n* [**Go**: _Build Your Own Container Using Less than 100 Lines of Go_](https://www.infoq.com/articles/build-a-container-golang)\n* [**Go**: _Building a container from scratch in Go_](https://www.youtube.com/watch?v=8fi7uSYlOdc) [video]\n* [**Python**: _A workshop on Linux containers: Rebuild Docker from Scratch_](https://github.com/Fewbytes/rubber-docker)\n* [**Python**: _A proof-of-concept imitation of Docker, written in 100% Python_](https://github.com/tonybaloney/mocker)\n* [**Shell**: _Docker implemented in around 100 lines of bash_](https://github.com/p8952/bocker)\n\n#### Build your own `Emulator / Virtual Machine`\n\n* [**C**: _Home-grown bytecode interpreters_](https://medium.com/bumble-tech/home-grown-bytecode-interpreters-51e12d59b25c)\n* [**C**: _Virtual machine in C_](http://web.archive.org/web/20200121100942/https://blog.felixangell.com/virtual-machine-in-c/)\n* [**C**: _Write your Own Virtual Machine_](https://justinmeiners.github.io/lc3-vm/)\n* [**C**: _Writing a Game Boy emulator, Cinoop_](https://cturt.github.io/cinoop.html)\n* [**C++**: _How to write an emulator (CHIP-8 interpreter)_](http://www.multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/)\n* [**C++**: _Emulation tutorial (CHIP-8 interpreter)_](http://www.codeslinger.co.uk/pages/projects/chip8.html)\n* [**C++**: _Emulation tutorial (GameBoy emulator)_](http://www.codeslinger.co.uk/pages/projects/gameboy.html)\n* [**C++**: _Emulation tutorial (Master System emulator)_](http://www.codeslinger.co.uk/pages/projects/mastersystem/memory.html)\n* [**C++**: _NES Emulator From Scratch_](https://www.youtube.com/playlist?list=PLrOv9FMX8xJHqMvSGB_9G9nZZ_4IgteYf) [video]\n* [**Common Lisp**: _CHIP-8 in Common Lisp_](http://stevelosh.com/blog/2016/12/chip8-cpu/)\n* [**JavaScript**: _GameBoy Emulation in JavaScript_](http://imrannazar.com/GameBoy-Emulation-in-JavaScript)\n* [**Python**: _Emulation Basics: Write your own Chip 8 Emulator/Interpreter_](http://omokute.blogspot.com.br/2012/06/emulation-basics-write-your-own-chip-8.html)\n* [**Rust**: _0dmg: Learning Rust by building a partial Game Boy emulator_](https://jeremybanks.github.io/0dmg/)\n\n#### Build your own `Front-end Framework / Library`\n\n* [**JavaScript**: _WTF is JSX (Let's Build a JSX Renderer)_](https://jasonformat.com/wtf-is-jsx/)\n* [**JavaScript**: _A DIY guide to build your own React_](https://github.com/hexacta/didact)\n* [**JavaScript**: _Building React From Scratch_](https://www.youtube.com/watch?v=_MAD4Oly9yg) [video]\n* [**JavaScript**: _Gooact: React in 160 lines of JavaScript_](https://medium.com/@sweetpalma/gooact-react-in-160-lines-of-javascript-44e0742ad60f)\n* [**JavaScript**: _Learn how React Reconciler package works by building your own lightweight React DOM_](https://hackernoon.com/learn-you-some-custom-react-renderers-aed7164a4199)\n* [**JavaScript**: _Build Yourself a Redux_](https://zapier.com/engineering/how-to-build-redux/)\n* [**JavaScript**: _Let’s Write Redux!_](https://www.jamasoftware.com/blog/lets-write-redux/)\n* [**JavaScript**: _Redux: Implementing Store from Scratch_](https://egghead.io/lessons/react-redux-implementing-store-from-scratch) [video]\n* [**JavaScript**: _Build Your own Simplified AngularJS in 200 Lines of JavaScript_](https://blog.mgechev.com/2015/03/09/build-learn-your-own-light-lightweight-angularjs/)\n* [**JavaScript**: _Make Your Own AngularJS_](http://teropa.info/blog/2013/11/03/make-your-own-angular-part-1-scopes-and-digest.html)\n* [**JavaScript**: _How to write your own Virtual DOM_](https://medium.com/@deathmood/how-to-write-your-own-virtual-dom-ee74acc13060)\n* [**JavaScript**: _Building a frontend framework, from scratch, with components (templating, state, VDOM)_](https://mfrachet.github.io/create-frontend-framework/)\n* [**JavaScript**: _Build your own React_](https://pomb.us/build-your-own-react/)\n* [**JavaScript**: _Building a Custom React Renderer_](https://youtu.be/CGpMlWVcHok) [video]\n\n#### Build your own `Game`\n\n* [**C**: _Handmade Hero_](https://handmadehero.org/)\n* [**C**: _How to Program an NES game in C_](https://nesdoug.com/)\n* [**C**: _Chess Engine In C_](https://www.youtube.com/playlist?list=PLZ1QII7yudbc-Ky058TEaOstZHVbT-2hg) [video]\n* [**C**: _Let's Make: Dangerous Dave_](https://www.youtube.com/playlist?list=PLSkJey49cOgTSj465v2KbLZ7LMn10bCF9) [video]\n* [**C**: _Learn Video Game Programming in C_](https://www.youtube.com/playlist?list=PLT6WFYYZE6uLMcPGS3qfpYm7T_gViYMMt)\n  [video]\n* [**C**: _Coding A Sudoku Solver in C_](https://www.youtube.com/playlist?list=PLkTXsX7igf8edTYU92nU-f5Ntzuf-RKvW) [video]\n* [**C**: _Coding a Rogue/Nethack RPG in C_](https://www.youtube.com/playlist?list=PLkTXsX7igf8erbWGYT4iSAhpnJLJ0Nk5G) [video]\n* [**C**: _On Tetris and Reimplementation_](https://brennan.io/2015/06/12/tetris-reimplementation/)\n* [**C++**: _Breakout_](https://learnopengl.com/In-Practice/2D-Game/Breakout)\n* [**C++**: _Beginning Game Programming v2.0_](http://lazyfoo.net/tutorials/SDL/)\n* [**C++**: _Tetris tutorial in C++ platform independent focused in game logic for beginners_](http://javilop.com/gamedev/tetris-tutorial-in-c-platform-independent-focused-in-game-logic-for-beginners/)\n* [**C++**: _Remaking Cavestory in C++_](https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa) [video]",
    "ContentSha": "qbq/7/GHvyYVMmy6356o8Kl5vgG2bKmNmuy2EDQ3bNA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [**Node.js**: _Node.js에서 API.ai를 사용하여 간단한 Facebook Messenger AI 봇 만들기_](https://tutorials.botsfloor.com/creating-a-simple-facebook-messenger-ai-bot-with-api-ai-in-node-js-50ae2fa5c80d)\n* [**Node.js**: _반응형 텔레그램 봇 만드는 방법_](https://www.sohamkamani.com/blog/2016/09/21/making-a-telegram-bot/)\n* [**Node.js**: _디스코드 봇 만들기_](https://discordjs.guide/)\n* [**Node.js**: _gifbot - GitHub 앱 구축하기_](https://blog.scottlogic.com/2017/05/22/gifbot-github-integration.html)\n* [**Node.js**: _Web Speech API와 Node.js로 간단한 AI 챗봇 만들기_](https://www.smashingmagazine.com/2017/08/ai-chatbot-web-speech-api-node-js/)\n* [**Python**: _Python으로 첫 슬랙 봇 만들기_](https://www.fullstackpython.com/blog/build-first-slack-bot-python.html)\n* [**Python**: _Slack Events API와 Django를 사용해 20분 안에 슬랙 봇 만들기_](https://medium.com/freehunch/how-to-build-a-slack-bot-with-python-using-slack-events-api-django-under-20-minute-code-included-269c3a9bf64e)\n* [**Python**: _레딧 봇 만들기_](http://pythonforengineers.com/build-a-reddit-bot-part-1/)\n* [**Python**: _레딧 봇 만드는 방법_](https://www.youtube.com/watch?v=krTUf7BpTc0) [비디오]\n* [**Python**: _Python으로 텔레그램 봇 만들기_](https://www.freecodecamp.org/news/how-to-create-a-telegram-bot-using-python/)\n* [**Python**: _Tweepy를 사용해 Python으로 트위터 봇 만들기_](https://medium.freecodecamp.org/creating-a-twitter-bot-in-python-with-tweepy-ac524157a607)\n* [**Python**: _Python과 PRAW로 레딧 봇 만들기_](https://www.youtube.com/playlist?list=PLIFBTFgFpoJ9vmYYlfxRFV6U_XhG-4fpP) [비디오]\n* [**R**: _R로 암호화폐 트레이딩 봇 만들기_](https://towardsdatascience.com/build-a-cryptocurrency-trading-bot-with-r-1445c429e1b1)\n* [**Rust**: _Rust, C 또는 다른 언어로 스타크래프트용 봇 만들기_](https://habr.com/en/post/436254/)\n\n#### 자신만의 `커맨드라인 도구` 만들기\n\n* [**Go**: _Go로 로컬 git 기여도 시각화하기_](https://flaviocopes.com/go-git-contributions/)\n* [**Go**: _Go로 커맨드라인 앱 만들기: lolcat_](https://flaviocopes.com/go-tutorial-lolcat/)\n* [**Go**: _Go로 CLI 커맨드 만들기: cowsay_](https://flaviocopes.com/go-tutorial-cowsay/)\n* [**Go**: _Go CLI 튜토리얼: fortune 클론_](https://flaviocopes.com/go-tutorial-fortune/)\n* [**Nim**: _dotfiles 관리를 위한 stow 대체품 작성하기_](https://xmonader.github.io/nimdays/day06_nistow.html)\n* [**Node.js**: _자바스크립트로 CLI 도구 만들기_](https://citw.dev/tutorial/create-your-own-cli-tool)\n* [**Rust**: _Rust로 커맨드라인 앱 만들기_](https://rust-cli.github.io/book/index.html)\n* [**Rust**: _Rust로 커맨드라인 도구 작성하기_](https://mattgathu.dev/2017/08/29/writing-cli-app-rust.html)\n* [**Zig**: _Zig로 처음부터 CLI 앱 만들기_](https://rebuild-x.github.io/docs/#/./zig/terminal/cli)\n\n\n#### 자신만의 `데이터베이스` 만들기\n\n* [**C**: _간단한 데이터베이스 만들기_](https://cstack.github.io/db_tutorial/)\n* [**C++**: _Redis를 처음부터 직접 만들어보기_](https://build-your-own.org/redis)\n* [**C#**: _자신만의 데이터베이스 만들기_](https://www.codeproject.com/Articles/1029838/Build-Your-Own-Database)\n* [**Clojure**: _고고학에서 영감을 받은 데이터베이스_](http://aosabook.org/en/500L/an-archaeology-inspired-database.html)\n* [**Crystal**: _왜 자신만의 NoSQL 데이터베이스를 만들어야 하는가_](https://medium.com/@marceloboeira/why-you-should-build-your-own-nosql-database-9bbba42039f5)\n* [**Go**: _처음부터 직접 만드는 데이터베이스: 지속성, 인덱싱, 동시성_](https://build-your-own.org/database/)\n* [**Go**: _처음부터 직접 만드는 Redis_](https://www.build-redis-from-scratch.dev/)\n* [**JavaScript**: _Dagoba: 인메모리 그래프 데이터베이스_](http://aosabook.org/en/500L/dagoba-an-in-memory-graph-database.html)\n* [**Python**: _DBDB: 강아지 침대 데이터베이스_](http://aosabook.org/en/500L/dbdb-dog-bed-database.html)\n* [**Python**: _Python으로 미니 Redis 작성하기_](http://charlesleifer.com/blog/building-a-simple-redis-server-with-python/)\n* [**Ruby**: _빠르고 지속 가능한 KV 스토어를 Ruby로 만들기_](https://dineshgowda.com/posts/build-your-own-persistent-kv-store/)\n* [**Rust**: _Rust로 Redis 클라이언트와 서버 만들기_](https://tokio.rs/tokio/tutorial/setup)\n\n#### 자신만의 `Docker` 만들기\n\n* [**C**: _500줄 코드로 Linux 컨테이너 만들기_](https://blog.lizzie.io/linux-containers-in-500-loc.html)\n* [**Go**: _100줄 이하 Go 코드로 자신만의 컨테이너 만들기_](https://www.infoq.com/articles/build-a-container-golang)\n* [**Go**: _Go로 처음부터 컨테이너 만들기_](https://www.youtube.com/watch?v=8fi7uSYlOdc) [비디오]\n* [**Python**: _Linux 컨테이너 워크샵: Docker를 처음부터 다시 만들기_](https://github.com/Fewbytes/rubber-docker)\n* [**Python**: _100% Python으로 작성한 Docker 모방 프로젝트_](https://github.com/tonybaloney/mocker)\n* [**Shell**: _bash 약 100줄로 구현한 Docker_](https://github.com/p8952/bocker)\n\n#### 자신만의 `에뮬레이터 / 가상 머신` 만들기\n\n* [**C**: _자체 제작 바이트코드 인터프리터_](https://medium.com/bumble-tech/home-grown-bytecode-interpreters-51e12d59b25c)\n* [**C**: _C로 작성한 가상 머신_](http://web.archive.org/web/20200121100942/https://blog.felixangell.com/virtual-machine-in-c/)\n* [**C**: _자신만의 가상 머신 작성하기_](https://justinmeiners.github.io/lc3-vm/)\n* [**C**: _Game Boy 에뮬레이터 작성, Cinoop_](https://cturt.github.io/cinoop.html)\n* [**C++**: _에뮬레이터 작성법 (CHIP-8 인터프리터)_](http://www.multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/)\n* [**C++**: _에뮬레이션 튜토리얼 (CHIP-8 인터프리터)_](http://www.codeslinger.co.uk/pages/projects/chip8.html)\n* [**C++**: _에뮬레이션 튜토리얼 (GameBoy 에뮬레이터)_](http://www.codeslinger.co.uk/pages/projects/gameboy.html)\n* [**C++**: _에뮬레이션 튜토리얼 (Master System 에뮬레이터)_](http://www.codeslinger.co.uk/pages/projects/mastersystem/memory.html)\n* [**C++**: _처음부터 만드는 NES 에뮬레이터_](https://www.youtube.com/playlist?list=PLrOv9FMX8xJHqMvSGB_9G9nZZ_4IgteYf) [비디오]\n* [**Common Lisp**: _Common Lisp로 CHIP-8 구현하기_](http://stevelosh.com/blog/2016/12/chip8-cpu/)\n* [**JavaScript**: _JavaScript로 GameBoy 에뮬레이션_](http://imrannazar.com/GameBoy-Emulation-in-JavaScript)\n* [**Python**: _에뮬레이션 기초: 자신만의 Chip 8 에뮬레이터/인터프리터 작성하기_](http://omokute.blogspot.com.br/2012/06/emulation-basics-write-your-own-chip-8.html)\n* [**Rust**: _0dmg: 부분적인 Game Boy 에뮬레이터를 만들어보며 Rust 배우기_](https://jeremybanks.github.io/0dmg/)\n\n#### 자신만의 `프론트엔드 프레임워크 / 라이브러리` 만들기\n\n* [**JavaScript**: _JSX란 무엇인가 (JSX 렌더러 만들기)_](https://jasonformat.com/wtf-is-jsx/)\n* [**JavaScript**: _자신만의 React 만들기 가이드_](https://github.com/hexacta/didact)\n* [**JavaScript**: _React를 처음부터 만들기_](https://www.youtube.com/watch?v=_MAD4Oly9yg) [비디오]\n* [**JavaScript**: _Gooact: 160줄 JavaScript로 만든 React_](https://medium.com/@sweetpalma/gooact-react-in-160-lines-of-javascript-44e0742ad60f)\n* [**JavaScript**: _React Reconciler 패키지 이해하기: 경량 React DOM 만들기_](https://hackernoon.com/learn-you-some-custom-react-renderers-aed7164a4199)\n* [**JavaScript**: _자신만의 Redux 만들기_](https://zapier.com/engineering/how-to-build-redux/)\n* [**JavaScript**: _Redux 직접 작성하기!_](https://www.jamasoftware.com/blog/lets-write-redux/)\n* [**JavaScript**: _Redux: 스토어를 직접 구현하기_](https://egghead.io/lessons/react-redux-implementing-store-from-scratch) [비디오]\n* [**JavaScript**: _200줄 JavaScript로 간단한 AngularJS 만들기_](https://blog.mgechev.com/2015/03/09/build-learn-your-own-light-lightweight-angularjs/)\n* [**JavaScript**: _자신만의 AngularJS 만들기_](http://teropa.info/blog/2013/11/03/make-your-own-angular-part-1-scopes-and-digest.html)\n* [**JavaScript**: _자신만의 Virtual DOM 작성법_](https://medium.com/@deathmood/how-to-write-your-own-virtual-dom-ee74acc13060)\n* [**JavaScript**: _처음부터 컴포넌트(템플릿, 상태, VDOM) 기반 프론트엔드 프레임워크 만들기_](https://mfrachet.github.io/create-frontend-framework/)\n* [**JavaScript**: _자신만의 React 만들기_](https://pomb.us/build-your-own-react/)\n* [**JavaScript**: _커스텀 React 렌더러 만들기_](https://youtu.be/CGpMlWVcHok) [비디오]\n\n#### 자신만의 `게임` 만들기\n\n* [**C**: _Handmade Hero_](https://handmadehero.org/)\n* [**C**: _C로 NES 게임 프로그래밍하기_](https://nesdoug.com/)\n* [**C**: _C로 체스 엔진 만들기_](https://www.youtube.com/playlist?list=PLZ1QII7yudbc-Ky058TEaOstZHVbT-2hg) [비디오]\n* [**C**: _Dangerous Dave 만들기_](https://www.youtube.com/playlist?list=PLSkJey49cOgTSj465v2KbLZ7LMn10bCF9) [비디오]\n* [**C**: _C로 비디오 게임 프로그래밍 배우기_](https://www.youtube.com/playlist?list=PLT6WFYYZE6uLMcPGS3qfpYm7T_gViYMMt)\n  [비디오]\n* [**C**: _C로 스도쿠 솔버 코딩하기_](https://www.youtube.com/playlist?list=PLkTXsX7igf8edTYU92nU-f5Ntzuf-RKvW) [비디오]\n* [**C**: _C로 Rogue/Nethack RPG 코딩하기_](https://www.youtube.com/playlist?list=PLkTXsX7igf8erbWGYT4iSAhpnJLJ0Nk5G) [비디오]\n* [**C**: _테트리스와 재구현에 관하여_](https://brennan.io/2015/06/12/tetris-reimplementation/)\n* [**C++**: _Breakout_](https://learnopengl.com/In-Practice/2D-Game/Breakout)\n* [**C++**: _게임 프로그래밍 입문 v2.0_](http://lazyfoo.net/tutorials/SDL/)\n* [**C++**: _초보자를 위한 플랫폼 독립적 C++ 테트리스 튜토리얼_](http://javilop.com/gamedev/tetris-tutorial-in-c-platform-independent-focused-in-game-logic-for-beginners/)\n* [**C++**: _C++로 Cavestory 리메이크_](https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa) [비디오]",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "nyShCL6IVwB4oeOb+9kNhSQo01dlnVxJo2m2h9Ku6q4=",
        "originContent": "* [**Node.js**: _Creating a Simple Facebook Messenger AI Bot with API.ai in Node.js_](https://tutorials.botsfloor.com/creating-a-simple-facebook-messenger-ai-bot-with-api-ai-in-node-js-50ae2fa5c80d)",
        "translatedContent": "* [**Node.js**: _Node.js에서 API.ai를 사용하여 간단한 Facebook Messenger AI 봇 만들기_](https://tutorials.botsfloor.com/creating-a-simple-facebook-messenger-ai-bot-with-api-ai-in-node-js-50ae2fa5c80d)"
      },
      {
        "row": 2,
        "rowsha": "8btWsrjeORN/D52sKI6n95Df559LMsEdfAHdI1gP9pc=",
        "originContent": "* [**Node.js**: _How to make a responsive telegram bot_](https://www.sohamkamani.com/blog/2016/09/21/making-a-telegram-bot/)",
        "translatedContent": "* [**Node.js**: _반응형 텔레그램 봇 만드는 방법_](https://www.sohamkamani.com/blog/2016/09/21/making-a-telegram-bot/)"
      },
      {
        "row": 3,
        "rowsha": "xn/xE3opn6LH+y99aQVhsHjQ//GgZ3SGZ0dvPB4k6xc=",
        "originContent": "* [**Node.js**: _Create a Discord bot_](https://discordjs.guide/)",
        "translatedContent": "* [**Node.js**: _디스코드 봇 만들기_](https://discordjs.guide/)"
      },
      {
        "row": 4,
        "rowsha": "Zd5YuS8aLcrPHFMgdxXFwgYLB0jCDFen6O5c6JRuSzc=",
        "originContent": "* [**Node.js**: _gifbot - Building a GitHub App_](https://blog.scottlogic.com/2017/05/22/gifbot-github-integration.html)",
        "translatedContent": "* [**Node.js**: _gifbot - GitHub 앱 구축하기_](https://blog.scottlogic.com/2017/05/22/gifbot-github-integration.html)"
      },
      {
        "row": 5,
        "rowsha": "qsAq/I1TxnMzJgvGHcD2QEwl/kZA/aXCAJFPt2Ncs5Q=",
        "originContent": "* [**Node.js**: _Building A Simple AI Chatbot With Web Speech API And Node.js_](https://www.smashingmagazine.com/2017/08/ai-chatbot-web-speech-api-node-js/)",
        "translatedContent": "* [**Node.js**: _Web Speech API와 Node.js로 간단한 AI 챗봇 만들기_](https://www.smashingmagazine.com/2017/08/ai-chatbot-web-speech-api-node-js/)"
      },
      {
        "row": 6,
        "rowsha": "HsOs+komHRlehuGhbS7lsmVA25QTDaBEPxVguTcZanc=",
        "originContent": "* [**Python**: _How to Build Your First Slack Bot with Python_](https://www.fullstackpython.com/blog/build-first-slack-bot-python.html)",
        "translatedContent": "* [**Python**: _Python으로 첫 슬랙 봇 만들기_](https://www.fullstackpython.com/blog/build-first-slack-bot-python.html)"
      },
      {
        "row": 7,
        "rowsha": "yO2Mq8YDkcw/RboY42K4SRvNU1jwxFKM6qM/Y56m6nQ=",
        "originContent": "* [**Python**: _How to build a Slack Bot with Python using Slack Events API & Django under 20 minute_](https://medium.com/freehunch/how-to-build-a-slack-bot-with-python-using-slack-events-api-django-under-20-minute-code-included-269c3a9bf64e)",
        "translatedContent": "* [**Python**: _Slack Events API와 Django를 사용해 20분 안에 슬랙 봇 만들기_](https://medium.com/freehunch/how-to-build-a-slack-bot-with-python-using-slack-events-api-django-under-20-minute-code-included-269c3a9bf64e)"
      },
      {
        "row": 8,
        "rowsha": "0VRB1hnpUTEWcWZYU/C+gGap+eYRGZY+IW70HlcceaA=",
        "originContent": "* [**Python**: _Build a Reddit Bot_](http://pythonforengineers.com/build-a-reddit-bot-part-1/)",
        "translatedContent": "* [**Python**: _레딧 봇 만들기_](http://pythonforengineers.com/build-a-reddit-bot-part-1/)"
      },
      {
        "row": 9,
        "rowsha": "fCJ3plwr4hjBQLBy2TgheKL9FNeIM1ukwCLH269UYFU=",
        "originContent": "* [**Python**: _How To Make A Reddit Bot_](https://www.youtube.com/watch?v=krTUf7BpTc0) [video]",
        "translatedContent": "* [**Python**: _레딧 봇 만드는 방법_](https://www.youtube.com/watch?v=krTUf7BpTc0) [비디오]"
      },
      {
        "row": 10,
        "rowsha": "w5RtounBAV4RCKJxwrafteh68VOC9fQvNOJfLybhrsI=",
        "originContent": "* [**Python**: _How To Create a Telegram Bot Using Python_](https://www.freecodecamp.org/news/how-to-create-a-telegram-bot-using-python/)",
        "translatedContent": "* [**Python**: _Python으로 텔레그램 봇 만들기_](https://www.freecodecamp.org/news/how-to-create-a-telegram-bot-using-python/)"
      },
      {
        "row": 11,
        "rowsha": "pqDTONghMXUKBGvSpVviuU3BvjSm3kFbkzD1RNLyEas=",
        "originContent": "* [**Python**: _Create a Twitter Bot in Python Using Tweepy_](https://medium.freecodecamp.org/creating-a-twitter-bot-in-python-with-tweepy-ac524157a607)",
        "translatedContent": "* [**Python**: _Tweepy를 사용해 Python으로 트위터 봇 만들기_](https://medium.freecodecamp.org/creating-a-twitter-bot-in-python-with-tweepy-ac524157a607)"
      },
      {
        "row": 12,
        "rowsha": "rcNPUUbosUXadhXvHJBEEdguUs1qVKFKS4aP6k4l8SU=",
        "originContent": "* [**Python**: _Creating Reddit Bot with Python & PRAW_](https://www.youtube.com/playlist?list=PLIFBTFgFpoJ9vmYYlfxRFV6U_XhG-4fpP) [video]",
        "translatedContent": "* [**Python**: _Python과 PRAW로 레딧 봇 만들기_](https://www.youtube.com/playlist?list=PLIFBTFgFpoJ9vmYYlfxRFV6U_XhG-4fpP) [비디오]"
      },
      {
        "row": 13,
        "rowsha": "FQQTF0LGU/flFd0tmt8oIzszcD4gS6mAzsvflY7euEI=",
        "originContent": "* [**R**: _Build A Cryptocurrency Trading Bot with R_](https://towardsdatascience.com/build-a-cryptocurrency-trading-bot-with-r-1445c429e1b1)",
        "translatedContent": "* [**R**: _R로 암호화폐 트레이딩 봇 만들기_](https://towardsdatascience.com/build-a-cryptocurrency-trading-bot-with-r-1445c429e1b1)"
      },
      {
        "row": 14,
        "rowsha": "QSGAxMy8fVAjFCwwbV2Zyd28MOKsecYCYbMuDUT45EU=",
        "originContent": "* [**Rust**: _A bot for Starcraft in Rust, C or any other language_](https://habr.com/en/post/436254/)",
        "translatedContent": "* [**Rust**: _Rust, C 또는 다른 언어로 스타크래프트용 봇 만들기_](https://habr.com/en/post/436254/)"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "Ji3gVHuQxtdiOd5ciO9ZZpXU5vKSZ7O1pEdhCV4252o=",
        "originContent": "#### Build your own `Command-Line Tool`",
        "translatedContent": "#### 자신만의 `커맨드라인 도구` 만들기"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "FibB9UzVEpNmkgfR9lCabHRya5r2WANb16iewuEKhLE=",
        "originContent": "* [**Go**: _Visualize your local git contributions with Go_](https://flaviocopes.com/go-git-contributions/)",
        "translatedContent": "* [**Go**: _Go로 로컬 git 기여도 시각화하기_](https://flaviocopes.com/go-git-contributions/)"
      },
      {
        "row": 19,
        "rowsha": "xMqNYuxrTlkG/OVocLi258bL1EonNBqkaEChyeL8dVI=",
        "originContent": "* [**Go**: _Build a command line app with Go: lolcat_](https://flaviocopes.com/go-tutorial-lolcat/)",
        "translatedContent": "* [**Go**: _Go로 커맨드라인 앱 만들기: lolcat_](https://flaviocopes.com/go-tutorial-lolcat/)"
      },
      {
        "row": 20,
        "rowsha": "cekwLmOlT1GUG97SDHVKo6VYvbuaVEjH+738MTUAnDk=",
        "originContent": "* [**Go**: _Building a cli command with Go: cowsay_](https://flaviocopes.com/go-tutorial-cowsay/)",
        "translatedContent": "* [**Go**: _Go로 CLI 커맨드 만들기: cowsay_](https://flaviocopes.com/go-tutorial-cowsay/)"
      },
      {
        "row": 21,
        "rowsha": "SAdnMzrtMeFEc5tXudu6GKeXfzAABsegZLKsglSUQUg=",
        "originContent": "* [**Go**: _Go CLI tutorial: fortune clone_](https://flaviocopes.com/go-tutorial-fortune/)",
        "translatedContent": "* [**Go**: _Go CLI 튜토리얼: fortune 클론_](https://flaviocopes.com/go-tutorial-fortune/)"
      },
      {
        "row": 22,
        "rowsha": "Z3QipmPbPjlCy6QxpxPBu1Zbbmg2q3irJOinbpmyaeo=",
        "originContent": "* [**Nim**: _Writing a stow alternative to manage dotfiles_](https://xmonader.github.io/nimdays/day06_nistow.html)",
        "translatedContent": "* [**Nim**: _dotfiles 관리를 위한 stow 대체품 작성하기_](https://xmonader.github.io/nimdays/day06_nistow.html)"
      },
      {
        "row": 23,
        "rowsha": "MMT7noko20a2cLQzvLBqQoklJzX+FiybBVLUHkto2z0=",
        "originContent": "* [**Node.js**: _Create a CLI tool in Javascript_](https://citw.dev/tutorial/create-your-own-cli-tool)",
        "translatedContent": "* [**Node.js**: _자바스크립트로 CLI 도구 만들기_](https://citw.dev/tutorial/create-your-own-cli-tool)"
      },
      {
        "row": 24,
        "rowsha": "b3i3mnXViUwEhWZM6MBwv6o7wUK4C9H7Mm/l9Ws5noY=",
        "originContent": "* [**Rust**: _Command line apps in Rust_](https://rust-cli.github.io/book/index.html)",
        "translatedContent": "* [**Rust**: _Rust로 커맨드라인 앱 만들기_](https://rust-cli.github.io/book/index.html)"
      },
      {
        "row": 25,
        "rowsha": "f+VPpw/mT+zxfv4g6Xoy5LW1VyUgvHiRVC84AKXV6bM=",
        "originContent": "* [**Rust**: _Writing a Command Line Tool in Rust_](https://mattgathu.dev/2017/08/29/writing-cli-app-rust.html)",
        "translatedContent": "* [**Rust**: _Rust로 커맨드라인 도구 작성하기_](https://mattgathu.dev/2017/08/29/writing-cli-app-rust.html)"
      },
      {
        "row": 26,
        "rowsha": "+j6sTcaAonfp+gjlK1ifMqo5devv6/YMmOdBEa31t1Y=",
        "originContent": "* [**Zig**: _Build Your Own CLI App in Zig from Scratch_](https://rebuild-x.github.io/docs/#/./zig/terminal/cli)",
        "translatedContent": "* [**Zig**: _Zig로 처음부터 CLI 앱 만들기_](https://rebuild-x.github.io/docs/#/./zig/terminal/cli)"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "cpCwUGHf8XBhrMTYZk+B+zX4uipN+wSw1w07Ub2Xx48=",
        "originContent": "#### Build your own `Database`",
        "translatedContent": "#### 자신만의 `데이터베이스` 만들기"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "Mtq8r2GtSBLuVj59stRtLV7GV0y+rmJ/J/ZOrHQo8x8=",
        "originContent": "* [**C**: _Let's Build a Simple Database_](https://cstack.github.io/db_tutorial/)",
        "translatedContent": "* [**C**: _간단한 데이터베이스 만들기_](https://cstack.github.io/db_tutorial/)"
      },
      {
        "row": 32,
        "rowsha": "0JOL2bcwqC2ikz1FrXgxL0sda0alE5rHS/R+dMk0OYA=",
        "originContent": "* [**C++**: _Build Your Own Redis from Scratch_](https://build-your-own.org/redis)",
        "translatedContent": "* [**C++**: _Redis를 처음부터 직접 만들어보기_](https://build-your-own.org/redis)"
      },
      {
        "row": 33,
        "rowsha": "2sAamhSpwqAE3ndksk7QQBC/Ru2mS7rg3fQbsRVeu5A=",
        "originContent": "* [**C#**: _Build Your Own Database_](https://www.codeproject.com/Articles/1029838/Build-Your-Own-Database)",
        "translatedContent": "* [**C#**: _자신만의 데이터베이스 만들기_](https://www.codeproject.com/Articles/1029838/Build-Your-Own-Database)"
      },
      {
        "row": 34,
        "rowsha": "mdKhOOIUK9jqlFeKw6TjCln5zDdwqX7d90FR+a0UV7k=",
        "originContent": "* [**Clojure**: _An Archaeology-Inspired Database_](http://aosabook.org/en/500L/an-archaeology-inspired-database.html)",
        "translatedContent": "* [**Clojure**: _고고학에서 영감을 받은 데이터베이스_](http://aosabook.org/en/500L/an-archaeology-inspired-database.html)"
      },
      {
        "row": 35,
        "rowsha": "7mKr6X0UN7PO7Wd5W/knllwGxKekMvVSDvh+s1lwIcw=",
        "originContent": "* [**Crystal**: _Why you should build your own NoSQL Database_](https://medium.com/@marceloboeira/why-you-should-build-your-own-nosql-database-9bbba42039f5)",
        "translatedContent": "* [**Crystal**: _왜 자신만의 NoSQL 데이터베이스를 만들어야 하는가_](https://medium.com/@marceloboeira/why-you-should-build-your-own-nosql-database-9bbba42039f5)"
      },
      {
        "row": 36,
        "rowsha": "N2mr79crotRftvhbG0wPUdEDybqogqWci3LylDA7TY4=",
        "originContent": "* [**Go**: _Build Your Own Database from Scratch: Persistence, Indexing, Concurrency_](https://build-your-own.org/database/)",
        "translatedContent": "* [**Go**: _처음부터 직접 만드는 데이터베이스: 지속성, 인덱싱, 동시성_](https://build-your-own.org/database/)"
      },
      {
        "row": 37,
        "rowsha": "gB4a5QWFQGOmlXh7cOQVg6uAKpj77cN8uCpZAnIUWG4=",
        "originContent": "* [**Go**: _Build Your Own Redis from Scratch_](https://www.build-redis-from-scratch.dev/)",
        "translatedContent": "* [**Go**: _처음부터 직접 만드는 Redis_](https://www.build-redis-from-scratch.dev/)"
      },
      {
        "row": 38,
        "rowsha": "dVBTF5w2EHBexhuvtkLLBpLm+ikeUbbLMl6+53afOe0=",
        "originContent": "* [**JavaScript**: _Dagoba: an in-memory graph database_](http://aosabook.org/en/500L/dagoba-an-in-memory-graph-database.html)",
        "translatedContent": "* [**JavaScript**: _Dagoba: 인메모리 그래프 데이터베이스_](http://aosabook.org/en/500L/dagoba-an-in-memory-graph-database.html)"
      },
      {
        "row": 39,
        "rowsha": "COArm2UTT/2xBOR7Uo3VaObVdsK01oufdtIx92/coTc=",
        "originContent": "* [**Python**: _DBDB: Dog Bed Database_](http://aosabook.org/en/500L/dbdb-dog-bed-database.html)",
        "translatedContent": "* [**Python**: _DBDB: 강아지 침대 데이터베이스_](http://aosabook.org/en/500L/dbdb-dog-bed-database.html)"
      },
      {
        "row": 40,
        "rowsha": "bXY54aB9bTxFDl1q/8QhpNmKHq4cBYK/VIqtsuzT3/o=",
        "originContent": "* [**Python**: _Write your own miniature Redis with Python_](http://charlesleifer.com/blog/building-a-simple-redis-server-with-python/)",
        "translatedContent": "* [**Python**: _Python으로 미니 Redis 작성하기_](http://charlesleifer.com/blog/building-a-simple-redis-server-with-python/)"
      },
      {
        "row": 41,
        "rowsha": "dnA2SG1NdrClX6zbCneO6MKP2WYnSkq1R1RQU3c3Wso=",
        "originContent": "* [**Ruby**: _Build your own fast, persistent KV store in Ruby_](https://dineshgowda.com/posts/build-your-own-persistent-kv-store/)",
        "translatedContent": "* [**Ruby**: _빠르고 지속 가능한 KV 스토어를 Ruby로 만들기_](https://dineshgowda.com/posts/build-your-own-persistent-kv-store/)"
      },
      {
        "row": 42,
        "rowsha": "SETUHPc4xst/q1+5GOU7VIT35qOXl0jxhlyTjdVGlLY=",
        "originContent": "* [**Rust**: _Build your own Redis client and server_](https://tokio.rs/tokio/tutorial/setup)",
        "translatedContent": "* [**Rust**: _Rust로 Redis 클라이언트와 서버 만들기_](https://tokio.rs/tokio/tutorial/setup)"
      },
      {
        "row": 43,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 44,
        "rowsha": "HIq9vLa/J5xl0flMh3RZiDfahf8h/AmL3bLtZ0bA7xw=",
        "originContent": "#### Build your own `Docker`",
        "translatedContent": "#### 자신만의 `Docker` 만들기"
      },
      {
        "row": 45,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 46,
        "rowsha": "e6xIMuYeE3MY/8+Mepf4MAWQPIytY9c4Y75d9jFUoXY=",
        "originContent": "* [**C**: _Linux containers in 500 lines of code_](https://blog.lizzie.io/linux-containers-in-500-loc.html)",
        "translatedContent": "* [**C**: _500줄 코드로 Linux 컨테이너 만들기_](https://blog.lizzie.io/linux-containers-in-500-loc.html)"
      },
      {
        "row": 47,
        "rowsha": "f0vov702vIbVYjy9OfVOdhSI8ULUu5q4DGf0olDotOg=",
        "originContent": "* [**Go**: _Build Your Own Container Using Less than 100 Lines of Go_](https://www.infoq.com/articles/build-a-container-golang)",
        "translatedContent": "* [**Go**: _100줄 이하 Go 코드로 자신만의 컨테이너 만들기_](https://www.infoq.com/articles/build-a-container-golang)"
      },
      {
        "row": 48,
        "rowsha": "AQ7CSm0Dn95T6gYqamJRDpWdYZsw1URwxL9ddys9DHs=",
        "originContent": "* [**Go**: _Building a container from scratch in Go_](https://www.youtube.com/watch?v=8fi7uSYlOdc) [video]",
        "translatedContent": "* [**Go**: _Go로 처음부터 컨테이너 만들기_](https://www.youtube.com/watch?v=8fi7uSYlOdc) [비디오]"
      },
      {
        "row": 49,
        "rowsha": "5HJidmrSQ+zXMSxfXfThDP7wDIJ7fvjYn5OusKuO6rA=",
        "originContent": "* [**Python**: _A workshop on Linux containers: Rebuild Docker from Scratch_](https://github.com/Fewbytes/rubber-docker)",
        "translatedContent": "* [**Python**: _Linux 컨테이너 워크샵: Docker를 처음부터 다시 만들기_](https://github.com/Fewbytes/rubber-docker)"
      },
      {
        "row": 50,
        "rowsha": "lJ4R5S2v7URpVPJEoZsle4Oi4rbPpGdyz2JNXOe1zZA=",
        "originContent": "* [**Python**: _A proof-of-concept imitation of Docker, written in 100% Python_](https://github.com/tonybaloney/mocker)",
        "translatedContent": "* [**Python**: _100% Python으로 작성한 Docker 모방 프로젝트_](https://github.com/tonybaloney/mocker)"
      },
      {
        "row": 51,
        "rowsha": "+Znt9ib1rhqgWSR8c+8RrvGutVOGn/qvNVimH2BrhRk=",
        "originContent": "* [**Shell**: _Docker implemented in around 100 lines of bash_](https://github.com/p8952/bocker)",
        "translatedContent": "* [**Shell**: _bash 약 100줄로 구현한 Docker_](https://github.com/p8952/bocker)"
      },
      {
        "row": 52,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 53,
        "rowsha": "AulnY5Xjg6HdlDRa/VfFUIYqpGoWXnAQzbYxZCTrUdY=",
        "originContent": "#### Build your own `Emulator / Virtual Machine`",
        "translatedContent": "#### 자신만의 `에뮬레이터 / 가상 머신` 만들기"
      },
      {
        "row": 54,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 55,
        "rowsha": "gPscxLVrysvjRerXBjOwTrcDqgJ0iTWhzPJBe4h984E=",
        "originContent": "* [**C**: _Home-grown bytecode interpreters_](https://medium.com/bumble-tech/home-grown-bytecode-interpreters-51e12d59b25c)",
        "translatedContent": "* [**C**: _자체 제작 바이트코드 인터프리터_](https://medium.com/bumble-tech/home-grown-bytecode-interpreters-51e12d59b25c)"
      },
      {
        "row": 56,
        "rowsha": "VDDts3NCjJuFHdaph+HcdzSudgr+8sZOnKPe66Xm07E=",
        "originContent": "* [**C**: _Virtual machine in C_](http://web.archive.org/web/20200121100942/https://blog.felixangell.com/virtual-machine-in-c/)",
        "translatedContent": "* [**C**: _C로 작성한 가상 머신_](http://web.archive.org/web/20200121100942/https://blog.felixangell.com/virtual-machine-in-c/)"
      },
      {
        "row": 57,
        "rowsha": "vgx8q3IVX34Bq/DOAvFYa0Ew2BzdCV3+gGDsdlT218M=",
        "originContent": "* [**C**: _Write your Own Virtual Machine_](https://justinmeiners.github.io/lc3-vm/)",
        "translatedContent": "* [**C**: _자신만의 가상 머신 작성하기_](https://justinmeiners.github.io/lc3-vm/)"
      },
      {
        "row": 58,
        "rowsha": "3jYkomLu3gUIa9qsExFG5PpJyhZjceL2B2Xq65MEoUA=",
        "originContent": "* [**C**: _Writing a Game Boy emulator, Cinoop_](https://cturt.github.io/cinoop.html)",
        "translatedContent": "* [**C**: _Game Boy 에뮬레이터 작성, Cinoop_](https://cturt.github.io/cinoop.html)"
      },
      {
        "row": 59,
        "rowsha": "i5iWjDlv09U2hKx5YFSIa7MbjiRgd4Sb3MobX9x//Xo=",
        "originContent": "* [**C++**: _How to write an emulator (CHIP-8 interpreter)_](http://www.multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/)",
        "translatedContent": "* [**C++**: _에뮬레이터 작성법 (CHIP-8 인터프리터)_](http://www.multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/)"
      },
      {
        "row": 60,
        "rowsha": "lUf4pNfMONLQi0ZO+ziI6OmnZ0ze6fD0mJ/ghvlEBU0=",
        "originContent": "* [**C++**: _Emulation tutorial (CHIP-8 interpreter)_](http://www.codeslinger.co.uk/pages/projects/chip8.html)",
        "translatedContent": "* [**C++**: _에뮬레이션 튜토리얼 (CHIP-8 인터프리터)_](http://www.codeslinger.co.uk/pages/projects/chip8.html)"
      },
      {
        "row": 61,
        "rowsha": "YmFmhdZ0+WYNcRHWSW+l8ZbaMTQkdiS0Rmkll1WCu2M=",
        "originContent": "* [**C++**: _Emulation tutorial (GameBoy emulator)_](http://www.codeslinger.co.uk/pages/projects/gameboy.html)",
        "translatedContent": "* [**C++**: _에뮬레이션 튜토리얼 (GameBoy 에뮬레이터)_](http://www.codeslinger.co.uk/pages/projects/gameboy.html)"
      },
      {
        "row": 62,
        "rowsha": "lKPGZ5g3Hq+9R7bT+5CAIbraYt4SLJPn0GqDxxy/KVU=",
        "originContent": "* [**C++**: _Emulation tutorial (Master System emulator)_](http://www.codeslinger.co.uk/pages/projects/mastersystem/memory.html)",
        "translatedContent": "* [**C++**: _에뮬레이션 튜토리얼 (Master System 에뮬레이터)_](http://www.codeslinger.co.uk/pages/projects/mastersystem/memory.html)"
      },
      {
        "row": 63,
        "rowsha": "ITmt9q3VepzbmL9f9BRewoFzDUBOHVH/WCg5QMUIrcg=",
        "originContent": "* [**C++**: _NES Emulator From Scratch_](https://www.youtube.com/playlist?list=PLrOv9FMX8xJHqMvSGB_9G9nZZ_4IgteYf) [video]",
        "translatedContent": "* [**C++**: _처음부터 만드는 NES 에뮬레이터_](https://www.youtube.com/playlist?list=PLrOv9FMX8xJHqMvSGB_9G9nZZ_4IgteYf) [비디오]"
      },
      {
        "row": 64,
        "rowsha": "GCGlbfnU/1rJiWy7HPn26oIiz5jjutAZcP0hkiFY+Jo=",
        "originContent": "* [**Common Lisp**: _CHIP-8 in Common Lisp_](http://stevelosh.com/blog/2016/12/chip8-cpu/)",
        "translatedContent": "* [**Common Lisp**: _Common Lisp로 CHIP-8 구현하기_](http://stevelosh.com/blog/2016/12/chip8-cpu/)"
      },
      {
        "row": 65,
        "rowsha": "NN4UoCran/050absmTiiIx2xkG5aCDBgu1jbZZBRX8c=",
        "originContent": "* [**JavaScript**: _GameBoy Emulation in JavaScript_](http://imrannazar.com/GameBoy-Emulation-in-JavaScript)",
        "translatedContent": "* [**JavaScript**: _JavaScript로 GameBoy 에뮬레이션_](http://imrannazar.com/GameBoy-Emulation-in-JavaScript)"
      },
      {
        "row": 66,
        "rowsha": "DtckaYC4uEKkzOpcbioSbrPc+I3mukdKmi0ywS0ph+s=",
        "originContent": "* [**Python**: _Emulation Basics: Write your own Chip 8 Emulator/Interpreter_](http://omokute.blogspot.com.br/2012/06/emulation-basics-write-your-own-chip-8.html)",
        "translatedContent": "* [**Python**: _에뮬레이션 기초: 자신만의 Chip 8 에뮬레이터/인터프리터 작성하기_](http://omokute.blogspot.com.br/2012/06/emulation-basics-write-your-own-chip-8.html)"
      },
      {
        "row": 67,
        "rowsha": "fHnZNVshgZmd1GF7OYxKzzwJBljr+zYYjiVMU85DLEA=",
        "originContent": "* [**Rust**: _0dmg: Learning Rust by building a partial Game Boy emulator_](https://jeremybanks.github.io/0dmg/)",
        "translatedContent": "* [**Rust**: _0dmg: 부분적인 Game Boy 에뮬레이터를 만들어보며 Rust 배우기_](https://jeremybanks.github.io/0dmg/)"
      },
      {
        "row": 68,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 69,
        "rowsha": "Apbep1EepGhiqUxEV5iDkAMVomeNSBXa4j2XbybAXKc=",
        "originContent": "#### Build your own `Front-end Framework / Library`",
        "translatedContent": "#### 자신만의 `프론트엔드 프레임워크 / 라이브러리` 만들기"
      },
      {
        "row": 70,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 71,
        "rowsha": "yTaW4x0ZP8+4J8Sg0WMBOt+xDNwpJmGmm7O+6gbSExg=",
        "originContent": "* [**JavaScript**: _WTF is JSX (Let's Build a JSX Renderer)_](https://jasonformat.com/wtf-is-jsx/)",
        "translatedContent": "* [**JavaScript**: _JSX란 무엇인가 (JSX 렌더러 만들기)_](https://jasonformat.com/wtf-is-jsx/)"
      },
      {
        "row": 72,
        "rowsha": "o7Aj7aW8IcxH/mci6fRmnMZEMJciswAs+vaY8+Y88Kk=",
        "originContent": "* [**JavaScript**: _A DIY guide to build your own React_](https://github.com/hexacta/didact)",
        "translatedContent": "* [**JavaScript**: _자신만의 React 만들기 가이드_](https://github.com/hexacta/didact)"
      },
      {
        "row": 73,
        "rowsha": "AQ5kQ2pjFtJumIg+BKu/iHlSH/G4SYXrwgVhGvaNqEo=",
        "originContent": "* [**JavaScript**: _Building React From Scratch_](https://www.youtube.com/watch?v=_MAD4Oly9yg) [video]",
        "translatedContent": "* [**JavaScript**: _React를 처음부터 만들기_](https://www.youtube.com/watch?v=_MAD4Oly9yg) [비디오]"
      },
      {
        "row": 74,
        "rowsha": "O+RMTDHqsPIiitxa9/ZX51ISDQdVAIAhJ8m/FqubKBM=",
        "originContent": "* [**JavaScript**: _Gooact: React in 160 lines of JavaScript_](https://medium.com/@sweetpalma/gooact-react-in-160-lines-of-javascript-44e0742ad60f)",
        "translatedContent": "* [**JavaScript**: _Gooact: 160줄 JavaScript로 만든 React_](https://medium.com/@sweetpalma/gooact-react-in-160-lines-of-javascript-44e0742ad60f)"
      },
      {
        "row": 75,
        "rowsha": "1Jm1Ui49aTG7Rc6+vdjun4PX4XJyktiV8N8cWv0hnxA=",
        "originContent": "* [**JavaScript**: _Learn how React Reconciler package works by building your own lightweight React DOM_](https://hackernoon.com/learn-you-some-custom-react-renderers-aed7164a4199)",
        "translatedContent": "* [**JavaScript**: _React Reconciler 패키지 이해하기: 경량 React DOM 만들기_](https://hackernoon.com/learn-you-some-custom-react-renderers-aed7164a4199)"
      },
      {
        "row": 76,
        "rowsha": "TKQ1eTXV85rXBEgzE/jzJtxl7v4OZd5fH2rWgipHyMA=",
        "originContent": "* [**JavaScript**: _Build Yourself a Redux_](https://zapier.com/engineering/how-to-build-redux/)",
        "translatedContent": "* [**JavaScript**: _자신만의 Redux 만들기_](https://zapier.com/engineering/how-to-build-redux/)"
      },
      {
        "row": 77,
        "rowsha": "UIqme+besAw0MeKZKIos/sNHHvnZDU6/stva7aLsDgc=",
        "originContent": "* [**JavaScript**: _Let’s Write Redux!_](https://www.jamasoftware.com/blog/lets-write-redux/)",
        "translatedContent": "* [**JavaScript**: _Redux 직접 작성하기!_](https://www.jamasoftware.com/blog/lets-write-redux/)"
      },
      {
        "row": 78,
        "rowsha": "B1gJLhR/PjFBXz/Dxe7n6keIiPy6XMC4ACTJal+6I48=",
        "originContent": "* [**JavaScript**: _Redux: Implementing Store from Scratch_](https://egghead.io/lessons/react-redux-implementing-store-from-scratch) [video]",
        "translatedContent": "* [**JavaScript**: _Redux: 스토어를 직접 구현하기_](https://egghead.io/lessons/react-redux-implementing-store-from-scratch) [비디오]"
      },
      {
        "row": 79,
        "rowsha": "pYEhg9+7iyTXgbJPriWceH6IRw9AOO3RwpIplg7NcDA=",
        "originContent": "* [**JavaScript**: _Build Your own Simplified AngularJS in 200 Lines of JavaScript_](https://blog.mgechev.com/2015/03/09/build-learn-your-own-light-lightweight-angularjs/)",
        "translatedContent": "* [**JavaScript**: _200줄 JavaScript로 간단한 AngularJS 만들기_](https://blog.mgechev.com/2015/03/09/build-learn-your-own-light-lightweight-angularjs/)"
      },
      {
        "row": 80,
        "rowsha": "+mf0mHaMziIhv66d8w2h74s/18U1cm9BNsZnAYb7jc0=",
        "originContent": "* [**JavaScript**: _Make Your Own AngularJS_](http://teropa.info/blog/2013/11/03/make-your-own-angular-part-1-scopes-and-digest.html)",
        "translatedContent": "* [**JavaScript**: _자신만의 AngularJS 만들기_](http://teropa.info/blog/2013/11/03/make-your-own-angular-part-1-scopes-and-digest.html)"
      },
      {
        "row": 81,
        "rowsha": "ksPc7yBCXLKgXDPhiVzE/X7bfHfpVs+vcr12ut613dk=",
        "originContent": "* [**JavaScript**: _How to write your own Virtual DOM_](https://medium.com/@deathmood/how-to-write-your-own-virtual-dom-ee74acc13060)",
        "translatedContent": "* [**JavaScript**: _자신만의 Virtual DOM 작성법_](https://medium.com/@deathmood/how-to-write-your-own-virtual-dom-ee74acc13060)"
      },
      {
        "row": 82,
        "rowsha": "3/9dfpxkNRPUGPBpBkfBaEK4UluzeOm+EUzkhoFgvfk=",
        "originContent": "* [**JavaScript**: _Building a frontend framework, from scratch, with components (templating, state, VDOM)_](https://mfrachet.github.io/create-frontend-framework/)",
        "translatedContent": "* [**JavaScript**: _처음부터 컴포넌트(템플릿, 상태, VDOM) 기반 프론트엔드 프레임워크 만들기_](https://mfrachet.github.io/create-frontend-framework/)"
      },
      {
        "row": 83,
        "rowsha": "nX/5Z342S8+4Aey67AELUBAb3Rha4JWcqLmc269Gmtw=",
        "originContent": "* [**JavaScript**: _Build your own React_](https://pomb.us/build-your-own-react/)",
        "translatedContent": "* [**JavaScript**: _자신만의 React 만들기_](https://pomb.us/build-your-own-react/)"
      },
      {
        "row": 84,
        "rowsha": "Xb0i0t/aTZO3dG5xmRY4nM6Cv08Q3V5iheZABmxDvAQ=",
        "originContent": "* [**JavaScript**: _Building a Custom React Renderer_](https://youtu.be/CGpMlWVcHok) [video]",
        "translatedContent": "* [**JavaScript**: _커스텀 React 렌더러 만들기_](https://youtu.be/CGpMlWVcHok) [비디오]"
      },
      {
        "row": 85,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 86,
        "rowsha": "gAZ3I1xKmKPs233L4Vjk8QZcpPAvJrr8FSRyeMvF2yk=",
        "originContent": "#### Build your own `Game`",
        "translatedContent": "#### 자신만의 `게임` 만들기"
      },
      {
        "row": 87,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 88,
        "rowsha": "X53Z3X4ycpVhzg8sCaOgR7OiucHSJG0Hbg7MQc1uD1A=",
        "originContent": "* [**C**: _Handmade Hero_](https://handmadehero.org/)",
        "translatedContent": "* [**C**: _Handmade Hero_](https://handmadehero.org/)"
      },
      {
        "row": 89,
        "rowsha": "VHzkrk28XSi0/ub8wochLj2anHtr5x/HaEZQxej4kPY=",
        "originContent": "* [**C**: _How to Program an NES game in C_](https://nesdoug.com/)",
        "translatedContent": "* [**C**: _C로 NES 게임 프로그래밍하기_](https://nesdoug.com/)"
      },
      {
        "row": 90,
        "rowsha": "+anpmL6tkVzi9hBXWTDLQhNUhQTyleaOATfgdROw4ZQ=",
        "originContent": "* [**C**: _Chess Engine In C_](https://www.youtube.com/playlist?list=PLZ1QII7yudbc-Ky058TEaOstZHVbT-2hg) [video]",
        "translatedContent": "* [**C**: _C로 체스 엔진 만들기_](https://www.youtube.com/playlist?list=PLZ1QII7yudbc-Ky058TEaOstZHVbT-2hg) [비디오]"
      },
      {
        "row": 91,
        "rowsha": "Q22A8PMZm5IQI2oBALTUv+b7wuOcguHSl//Gpk6V9yE=",
        "originContent": "* [**C**: _Let's Make: Dangerous Dave_](https://www.youtube.com/playlist?list=PLSkJey49cOgTSj465v2KbLZ7LMn10bCF9) [video]",
        "translatedContent": "* [**C**: _Dangerous Dave 만들기_](https://www.youtube.com/playlist?list=PLSkJey49cOgTSj465v2KbLZ7LMn10bCF9) [비디오]"
      },
      {
        "row": 92,
        "rowsha": "UeVTTaQr7KChvEDFRjgWjul+ACg6QnCbAQ+m7rEB9WY=",
        "originContent": "* [**C**: _Learn Video Game Programming in C_](https://www.youtube.com/playlist?list=PLT6WFYYZE6uLMcPGS3qfpYm7T_gViYMMt)",
        "translatedContent": "* [**C**: _C로 비디오 게임 프로그래밍 배우기_](https://www.youtube.com/playlist?list=PLT6WFYYZE6uLMcPGS3qfpYm7T_gViYMMt)"
      },
      {
        "row": 93,
        "rowsha": "KiM2Wx2jg2irW6Fjgppx6Eb+HEuTQ+EcTIde/YKMc9I=",
        "originContent": "  [video]",
        "translatedContent": "  [비디오]"
      },
      {
        "row": 94,
        "rowsha": "I0oJFg+clxf+GB/wY0ah3Rsw/hBHCfFz4FIRGMspDPc=",
        "originContent": "* [**C**: _Coding A Sudoku Solver in C_](https://www.youtube.com/playlist?list=PLkTXsX7igf8edTYU92nU-f5Ntzuf-RKvW) [video]",
        "translatedContent": "* [**C**: _C로 스도쿠 솔버 코딩하기_](https://www.youtube.com/playlist?list=PLkTXsX7igf8edTYU92nU-f5Ntzuf-RKvW) [비디오]"
      },
      {
        "row": 95,
        "rowsha": "mm0e5b8SzgjZ9K0HLyThn4DqDjmWz9nAIrSGpqpWkpw=",
        "originContent": "* [**C**: _Coding a Rogue/Nethack RPG in C_](https://www.youtube.com/playlist?list=PLkTXsX7igf8erbWGYT4iSAhpnJLJ0Nk5G) [video]",
        "translatedContent": "* [**C**: _C로 Rogue/Nethack RPG 코딩하기_](https://www.youtube.com/playlist?list=PLkTXsX7igf8erbWGYT4iSAhpnJLJ0Nk5G) [비디오]"
      },
      {
        "row": 96,
        "rowsha": "+SJ4e/Ws1AOpk2/1bmlAsUsHO7S3I407C72Loh+D1L8=",
        "originContent": "* [**C**: _On Tetris and Reimplementation_](https://brennan.io/2015/06/12/tetris-reimplementation/)",
        "translatedContent": "* [**C**: _테트리스와 재구현에 관하여_](https://brennan.io/2015/06/12/tetris-reimplementation/)"
      },
      {
        "row": 97,
        "rowsha": "xXdm1ET5cRttEvE3C2GKcdAMXPgYAWKKDkABak4l3Ng=",
        "originContent": "* [**C++**: _Breakout_](https://learnopengl.com/In-Practice/2D-Game/Breakout)",
        "translatedContent": "* [**C++**: _Breakout_](https://learnopengl.com/In-Practice/2D-Game/Breakout)"
      },
      {
        "row": 98,
        "rowsha": "IC4qEEVD5fMsA52/AKHtdgPygpzMWmSO44gGzAyuuQ8=",
        "originContent": "* [**C++**: _Beginning Game Programming v2.0_](http://lazyfoo.net/tutorials/SDL/)",
        "translatedContent": "* [**C++**: _게임 프로그래밍 입문 v2.0_](http://lazyfoo.net/tutorials/SDL/)"
      },
      {
        "row": 99,
        "rowsha": "jyHSKrbqEkfOiv0H7sylS5vMTZmQumlvPBO29ph8gdY=",
        "originContent": "* [**C++**: _Tetris tutorial in C++ platform independent focused in game logic for beginners_](http://javilop.com/gamedev/tetris-tutorial-in-c-platform-independent-focused-in-game-logic-for-beginners/)",
        "translatedContent": "* [**C++**: _초보자를 위한 플랫폼 독립적 C++ 테트리스 튜토리얼_](http://javilop.com/gamedev/tetris-tutorial-in-c-platform-independent-focused-in-game-logic-for-beginners/)"
      },
      {
        "row": 100,
        "rowsha": "yP0aMgkhovFjymT9xVWZykMJu8j6SVFtDIsOo6DGe/g=",
        "originContent": "* [**C++**: _Remaking Cavestory in C++_](https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa) [video]",
        "translatedContent": "* [**C++**: _C++로 Cavestory 리메이크_](https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa) [비디오]"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 3,
    "Content": "* [**C++**: _Reconstructing Cave Story_](https://www.youtube.com/playlist?list=PL006xsVEsbKjSKBmLu1clo85yLrwjY67X) [video]\n* [**C++**: _Space Invaders from Scratch_](http://nicktasios.nl/posts/space-invaders-from-scratch-part-1.html)\n* [**C#**: _Learn C# by Building a Simple RPG_](http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/)\n* [**C#**: _Creating a Roguelike Game in C#_](https://roguesharp.wordpress.com/)\n* [**C#**: _Build a C#/WPF RPG_](https://scottlilly.com/build-a-cwpf-rpg/)\n* [**Go**: _Games With Go_](https://www.youtube.com/playlist?list=PLDZujg-VgQlZUy1iCqBbe5faZLMkA3g2x) [video]\n* [**Java**: _Code a 2D Game Engine using Java - Full Course for Beginners_](https://www.youtube.com/watch?v=025QFeZfeyM) [video]\n* [**Java**: _3D Game Development with LWJGL 3_](https://lwjglgamedev.gitbooks.io/3d-game-development-with-lwjgl/content/)\n* [**JavaScript**: _2D breakout game using Phaser_](https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser)\n* [**JavaScript**: _How to Make Flappy Bird in HTML5 With Phaser_](http://www.lessmilk.com/tutorial/flappy-bird-phaser-1)\n* [**JavaScript**: _Developing Games with React, Redux, and SVG_](https://auth0.com/blog/developing-games-with-react-redux-and-svg-part-1/)\n* [**JavaScript**: _Build your own 8-Ball Pool game from scratch_](https://www.youtube.com/watch?v=aXwCrtAo4Wc) [video]\n* [**JavaScript**: _How to Make Your First Roguelike_](https://gamedevelopment.tutsplus.com/tutorials/how-to-make-your-first-roguelike--gamedev-13677)\n* [**JavaScript**: _Think like a programmer: How to build Snake using only JavaScript, HTML & CSS_](https://medium.freecodecamp.org/think-like-a-programmer-how-to-build-snake-using-only-javascript-html-and-css-7b1479c3339e)\n* [**Lua**: _BYTEPATH_](https://github.com/SSYGEN/blog/issues/30)\n* [**Python**: _Developing Games With PyGame_](https://pythonprogramming.net/pygame-python-3-part-1-intro/)\n* [**Python**: _Making Games with Python & Pygame_](https://inventwithpython.com/makinggames.pdf) [pdf]\n* [**Python**: _Roguelike Tutorial Revised_](http://rogueliketutorials.com/)\n* [**Ruby**: _Developing Games With Ruby_](https://leanpub.com/developing-games-with-ruby/read)\n* [**Ruby**: _Ruby Snake_](https://www.diatomenterprises.com/gamedev-on-ruby-why-not/)\n* [**Rust**: _Adventures in Rust: A Basic 2D Game_](https://a5huynh.github.io/posts/2018/adventures-in-rust/)\n* [**Rust**: _Roguelike Tutorial in Rust + tcod_](https://tomassedovic.github.io/roguelike-tutorial/)\n\n#### Build your own `Git`\n\n* [**Haskell**: _Reimplementing “git clone” in Haskell from the bottom up_](http://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/)\n* [**JavaScript**: _Gitlet_](http://gitlet.maryrosecook.com/docs/gitlet.html)\n* [**JavaScript**: _Build GIT - Learn GIT_](https://kushagra.dev/blog/build-git-learn-git/)\n* [**Python**: _Just enough of a Git client to create a repo, commit, and push itself to GitHub_](https://benhoyt.com/writings/pygit/)\n* [**Python**: _Write yourself a Git!_](https://wyag.thb.lt/)\n* [**Python**: _ugit: Learn Git Internals by Building Git Yourself_](https://www.leshenko.net/p/ugit/)\n* [**Ruby**: _Rebuilding Git in Ruby_](https://robots.thoughtbot.com/rebuilding-git-in-ruby)\n\n#### Build your own `Network Stack`\n\n* [**C**: _Beej's Guide to Network Programming_](http://beej.us/guide/bgnet/)\n* [**C**: _Let's code a TCP/IP stack_](http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/)\n* [**C / Python**: _Build your own VPN/Virtual Switch_](https://github.com/peiyuanix/build-your-own-zerotier)\n* [**Ruby**: _How to build a network stack in Ruby_](https://medium.com/geckoboard-under-the-hood/how-to-build-a-network-stack-in-ruby-f73aeb1b661b)\n\n#### Build your own `Neural Network`\n\n* [**C#**: _Neural Network OCR_](https://www.codeproject.com/Articles/11285/Neural-Network-OCR)\n* [**F#**: _Building Neural Networks in F#_](https://towardsdatascience.com/building-neural-networks-in-f-part-1-a2832ae972e6)\n* [**Go**: _Build a multilayer perceptron with Golang_](https://made2591.github.io/posts/neuralnetwork)\n* [**Go**: _How to build a simple artificial neural network with Go_](https://sausheong.github.io/posts/how-to-build-a-simple-artificial-neural-network-with-go/)\n* [**Go**: _Building a Neural Net from Scratch in Go_](https://datadan.io/blog/neural-net-with-go)\n* [**JavaScript / Java**: _Neural Networks - The Nature of Code_](https://www.youtube.com/playlist?list=PLRqwX-V7Uu6aCibgK1PTWWu9by6XFdCfh) [video]\n* [**JavaScript**: _Neural networks from scratch for JavaScript linguists (Part1 — The Perceptron)_](https://hackernoon.com/neural-networks-from-scratch-for-javascript-linguists-part1-the-perceptron-632a4d1fbad2)\n* [**Python**: _A Neural Network in 11 lines of Python_](https://iamtrask.github.io/2015/07/12/basic-python-network/)\n* [**Python**: _Implement a Neural Network from Scratch_](https://victorzhou.com/blog/intro-to-neural-networks/)\n* [**Python**: _Optical Character Recognition (OCR)_](http://aosabook.org/en/500L/optical-character-recognition-ocr.html)\n* [**Python**: _Traffic signs classification with a convolutional network_](https://navoshta.com/traffic-signs-classification/)\n* [**Python**: _Generate Music using LSTM Neural Network in Keras_](https://towardsdatascience.com/how-to-generate-music-using-a-lstm-neural-network-in-keras-68786834d4c5)\n* [**Python**: _An Introduction to Convolutional Neural Networks_](https://victorzhou.com/blog/intro-to-cnns-part-1/)\n* [**Python**: _Neural Networks: Zero to Hero_](https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ)\n\n#### Build your own `Operating System`\n\n* [**Assembly**: _Writing a Tiny x86 Bootloader_](http://joebergeron.io/posts/post_two.html)\n* [**Assembly**: _Baking Pi – Operating Systems Development_](http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/index.html)\n* [**C**: _Building a software and hardware stack for a simple computer from scratch_](https://www.youtube.com/watch?v=ZjwvMcP3Nf0&list=PLU94OURih-CiP4WxKSMt3UcwMSDM3aTtX) [video]\n* [**C**: _Operating Systems: From 0 to 1_](https://tuhdo.github.io/os01/)\n* [**C**: _The little book about OS development_](https://littleosbook.github.io/)\n* [**C**: _Roll your own toy UNIX-clone OS_](http://jamesmolloy.co.uk/tutorial_html/)\n* [**C**: _Kernel 101 – Let’s write a Kernel_](https://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel)\n* [**C**: _Kernel 201 – Let’s write a Kernel with keyboard and screen support_](https://arjunsreedharan.org/post/99370248137/kernel-201-lets-write-a-kernel-with-keyboard)\n* [**C**: _Build a minimal multi-tasking kernel for ARM from scratch_](https://github.com/jserv/mini-arm-os)\n* [**C**: _How to create an OS from scratch_](https://github.com/cfenollosa/os-tutorial)\n* [**C**: _Malloc tutorial_](https://danluu.com/malloc-tutorial/)\n* [**C**: _Hack the virtual memory_](https://blog.holbertonschool.com/hack-the-virtual-memory-c-strings-proc/)\n* [**C**: _Learning operating system development using Linux kernel and Raspberry Pi_](https://github.com/s-matyukevich/raspberry-pi-os)\n* [**C**: _Operating systems development for Dummies_](https://medium.com/@lduck11007/operating-systems-development-for-dummies-3d4d786e8ac)\n* [**C++**: _Write your own Operating System_](https://www.youtube.com/playlist?list=PLHh55M_Kq4OApWScZyPl5HhgsTJS9MZ6M) [video]\n* [**C++**: _Writing a Bootloader_](http://3zanders.co.uk/2017/10/13/writing-a-bootloader/)\n* [**Rust**: _Writing an OS in Rust_](https://os.phil-opp.com/)\n* [**Rust**: _Add RISC-V Rust Operating System Tutorial_](https://osblog.stephenmarz.com/)\n* [**(any)**: _Linux from scratch_](https://linuxfromscratch.org/lfs)\n\n#### Build your own `Physics Engine`\n\n* [**C**: _Video Game Physics Tutorial_](https://www.toptal.com/game/video-game-physics-part-i-an-introduction-to-rigid-body-dynamics)\n* [**C++**: _Game physics series by Allen Chou_](http://allenchou.net/game-physics-series/)\n* [**C++**: _How to Create a Custom Physics Engine_](https://gamedevelopment.tutsplus.com/series/how-to-create-a-custom-physics-engine--gamedev-12715)\n* [**C++**: _3D Physics Engine Tutorial_](https://www.youtube.com/playlist?list=PLEETnX-uPtBXm1KEr_2zQ6K_0hoGH6JJ0) [video]\n* [**JavaScript**: _How Physics Engines Work_](http://buildnewgames.com/gamephysics/)\n* [**JavaScript**: _Broad Phase Collision Detection Using Spatial Partitioning_](http://buildnewgames.com/broad-phase-collision-detection/)\n* [**JavaScript**: _Build a simple 2D physics engine for JavaScript games_](https://developer.ibm.com/tutorials/wa-build2dphysicsengine/?mhsrc=ibmsearch_a&mhq=2dphysic)\n\n#### Build your own `Programming Language`\n\n* [**(any)**: _mal - Make a Lisp_](https://github.com/kanaka/mal#mal---make-a-lisp)\n* [**Assembly**: _Jonesforth_](https://github.com/nornagon/jonesforth/blob/master/jonesforth.S)\n* [**C**: _Baby's First Garbage Collector_](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)\n* [**C**: _Build Your Own Lisp: Learn C and build your own programming language in 1000 lines of code_](http://www.buildyourownlisp.com/)\n* [**C**: _Writing a Simple Garbage Collector in C_](http://maplant.com/gc.html)\n* [**C**: _C interpreter that interprets itself._](https://github.com/lotabout/write-a-C-interpreter)\n* [**C**: _A C & x86 version of the \"Let's Build a Compiler\" by Jack Crenshaw_](https://github.com/lotabout/Let-s-build-a-compiler)\n* [**C**: _A journey explaining how to build a compiler from scratch_](https://github.com/DoctorWkt/acwj)\n* [**C++**: _Writing Your Own Toy Compiler Using Flex_](https://gnuu.org/2009/09/18/writing-your-own-toy-compiler/)",
    "ContentSha": "7aATIYPFON/mEMNnZq1QPHSZ5OvMgoDmSMCwqQiLqOM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [**C++**: _케이브 스토리 재구성하기_](https://www.youtube.com/playlist?list=PL006xsVEsbKjSKBmLu1clo85yLrwjY67X) [비디오]\n* [**C++**: _처음부터 만드는 스페이스 인베이더_](http://nicktasios.nl/posts/space-invaders-from-scratch-part-1.html)\n* [**C#**: _간단한 RPG 만들기로 배우는 C#_](http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/)\n* [**C#**: _C#로 로그라이크 게임 만들기_](https://roguesharp.wordpress.com/)\n* [**C#**: _C#/WPF RPG 만들기_](https://scottlilly.com/build-a-cwpf-rpg/)\n* [**Go**: _Go로 만드는 게임_](https://www.youtube.com/playlist?list=PLDZujg-VgQlZUy1iCqBbe5faZLMkA3g2x) [비디오]\n* [**Java**: _Java를 사용한 2D 게임 엔진 코딩 - 초보자용 전체 강좌_](https://www.youtube.com/watch?v=025QFeZfeyM) [비디오]\n* [**Java**: _LWJGL 3로 3D 게임 개발_](https://lwjglgamedev.gitbooks.io/3d-game-development-with-lwjgl/content/)\n* [**JavaScript**: _Phaser를 이용한 2D 브레이크아웃 게임_](https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser)\n* [**JavaScript**: _Phaser로 HTML5 플래피 버드 만들기_](http://www.lessmilk.com/tutorial/flappy-bird-phaser-1)\n* [**JavaScript**: _React, Redux, SVG로 게임 개발하기_](https://auth0.com/blog/developing-games-with-react-redux-and-svg-part-1/)\n* [**JavaScript**: _처음부터 만드는 8볼 당구 게임_](https://www.youtube.com/watch?v=aXwCrtAo4Wc) [비디오]\n* [**JavaScript**: _처음 만드는 로그라이크 게임_](https://gamedevelopment.tutsplus.com/tutorials/how-to-make-your-first-roguelike--gamedev-13677)\n* [**JavaScript**: _프로그래머처럼 생각하기: JavaScript, HTML & CSS만으로 스네이크 만들기_](https://medium.freecodecamp.org/think-like-a-programmer-how-to-build-snake-using-only-javascript-html-and-css-7b1479c3339e)\n* [**Lua**: _BYTEPATH_](https://github.com/SSYGEN/blog/issues/30)\n* [**Python**: _PyGame으로 게임 개발하기_](https://pythonprogramming.net/pygame-python-3-part-1-intro/)\n* [**Python**: _Python & Pygame으로 게임 만들기_](https://inventwithpython.com/makinggames.pdf) [pdf]\n* [**Python**: _로그라이크 튜토리얼 개정판_](http://rogueliketutorials.com/)\n* [**Ruby**: _Ruby로 게임 개발하기_](https://leanpub.com/developing-games-with-ruby/read)\n* [**Ruby**: _Ruby 스네이크_](https://www.diatomenterprises.com/gamedev-on-ruby-why-not/)\n* [**Rust**: _러스트로 배우는 모험: 기본 2D 게임_](https://a5huynh.github.io/posts/2018/adventures-in-rust/)\n* [**Rust**: _Rust + tcod로 로그라이크 튜토리얼_](https://tomassedovic.github.io/roguelike-tutorial/)\n\n#### 나만의 `Git` 만들기\n\n* [**Haskell**: _Haskell로 “git clone” 바닥부터 재구현하기_](http://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/)\n* [**JavaScript**: _Gitlet_](http://gitlet.maryrosecook.com/docs/gitlet.html)\n* [**JavaScript**: _GIT 만들기 - GIT 배우기_](https://kushagra.dev/blog/build-git-learn-git/)\n* [**Python**: _Git 저장소 생성, 커밋, GitHub로 푸시하는 최소한의 Git 클라이언트_](https://benhoyt.com/writings/pygit/)\n* [**Python**: _직접 만드는 Git!_](https://wyag.thb.lt/)\n* [**Python**: _ugit: Git 내부 구조 학습을 위한 Git 직접 만들기_](https://www.leshenko.net/p/ugit/)\n* [**Ruby**: _Ruby로 Git 재구성하기_](https://robots.thoughtbot.com/rebuilding-git-in-ruby)\n\n#### 나만의 `네트워크 스택` 만들기\n\n* [**C**: _Beej의 네트워크 프로그래밍 가이드_](http://beej.us/guide/bgnet/)\n* [**C**: _TCP/IP 스택 코딩하기_](http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/)\n* [**C / Python**: _나만의 VPN/가상 스위치 만들기_](https://github.com/peiyuanix/build-your-own-zerotier)\n* [**Ruby**: _Ruby로 네트워크 스택 만들기_](https://medium.com/geckoboard-under-the-hood/how-to-build-a-network-stack-in-ruby-f73aeb1b661b)\n\n#### 나만의 `신경망` 만들기\n\n* [**C#**: _신경망 OCR_](https://www.codeproject.com/Articles/11285/Neural-Network-OCR)\n* [**F#**: _F#로 신경망 만들기_](https://towardsdatascience.com/building-neural-networks-in-f-part-1-a2832ae972e6)\n* [**Go**: _Golang으로 다층 퍼셉트론 만들기_](https://made2591.github.io/posts/neuralnetwork)\n* [**Go**: _Go로 간단한 인공 신경망 만들기_](https://sausheong.github.io/posts/how-to-build-a-simple-artificial-neural-network-with-go/)\n* [**Go**: _Go에서 신경망 직접 만들기_](https://datadan.io/blog/neural-net-with-go)\n* [**JavaScript / Java**: _신경망 - The Nature of Code_](https://www.youtube.com/playlist?list=PLRqwX-V7Uu6aCibgK1PTWWu9by6XFdCfh) [비디오]\n* [**JavaScript**: _JavaScript 언어학자를 위한 신경망 직접 만들기 (1부 — 퍼셉트론)_](https://hackernoon.com/neural-networks-from-scratch-for-javascript-linguists-part1-the-perceptron-632a4d1fbad2)\n* [**Python**: _11줄 파이썬 신경망_](https://iamtrask.github.io/2015/07/12/basic-python-network/)\n* [**Python**: _신경망 직접 구현하기_](https://victorzhou.com/blog/intro-to-neural-networks/)\n* [**Python**: _광학 문자 인식 (OCR)_](http://aosabook.org/en/500L/optical-character-recognition-ocr.html)\n* [**Python**: _합성곱 신경망을 이용한 교통 표지 분류_](https://navoshta.com/traffic-signs-classification/)\n* [**Python**: _Keras의 LSTM 신경망으로 음악 생성하기_](https://towardsdatascience.com/how-to-generate-music-using-a-lstm-neural-network-in-keras-68786834d4c5)\n* [**Python**: _합성곱 신경망 입문_](https://victorzhou.com/blog/intro-to-cnns-part-1/)\n* [**Python**: _신경망: 기초부터 전문가까지_](https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ)\n\n#### 나만의 `운영체제` 만들기\n\n* [**어셈블리**: _작은 x86 부트로더 작성하기_](http://joebergeron.io/posts/post_two.html)\n* [**어셈블리**: _Baking Pi – 운영체제 개발_](http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/index.html)\n* [**C**: _처음부터 만드는 간단한 컴퓨터용 소프트웨어 및 하드웨어 스택_](https://www.youtube.com/watch?v=ZjwvMcP3Nf0&list=PLU94OURih-CiP4WxKSMt3UcwMSDM3aTtX) [비디오]\n* [**C**: _운영체제: 0에서 1까지_](https://tuhdo.github.io/os01/)\n* [**C**: _운영체제 개발에 관한 작은 책_](https://littleosbook.github.io/)\n* [**C**: _나만의 토이 UNIX 클론 OS 만들기_](http://jamesmolloy.co.uk/tutorial_html/)\n* [**C**: _커널 101 – 커널 작성하기_](https://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel)\n* [**C**: _커널 201 – 키보드 및 화면 지원 커널 작성하기_](https://arjunsreedharan.org/post/99370248137/kernel-201-lets-write-a-kernel-with-keyboard)\n* [**C**: _ARM용 최소 멀티태스킹 커널 처음부터 만들기_](https://github.com/jserv/mini-arm-os)\n* [**C**: _처음부터 운영체제 만드는 법_](https://github.com/cfenollosa/os-tutorial)\n* [**C**: _Malloc 튜토리얼_](https://danluu.com/malloc-tutorial/)\n* [**C**: _가상 메모리 해킹하기_](https://blog.holbertonschool.com/hack-the-virtual-memory-c-strings-proc/)\n* [**C**: _Linux 커널과 Raspberry Pi를 이용한 운영체제 개발 학습_](https://github.com/s-matyukevich/raspberry-pi-os)\n* [**C**: _운영체제 개발 초보자용_](https://medium.com/@lduck11007/operating-systems-development-for-dummies-3d4d786e8ac)\n* [**C++**: _나만의 운영체제 작성하기_](https://www.youtube.com/playlist?list=PLHh55M_Kq4OApWScZyPl5HhgsTJS9MZ6M) [비디오]\n* [**C++**: _부트로더 작성하기_](http://3zanders.co.uk/2017/10/13/writing-a-bootloader/)\n* [**Rust**: _Rust로 운영체제 작성하기_](https://os.phil-opp.com/)\n* [**Rust**: _RISC-V Rust 운영체제 튜토리얼 추가_](https://osblog.stephenmarz.com/)\n* [**(any)**: _리눅스 프롬 스크래치_](https://linuxfromscratch.org/lfs)\n\n#### 나만의 `물리 엔진` 만들기\n\n* [**C**: _비디오 게임 물리 튜토리얼_](https://www.toptal.com/game/video-game-physics-part-i-an-introduction-to-rigid-body-dynamics)\n* [**C++**: _Allen Chou의 게임 물리 시리즈_](http://allenchou.net/game-physics-series/)\n* [**C++**: _커스텀 물리 엔진 만드는 법_](https://gamedevelopment.tutsplus.com/series/how-to-create-a-custom-physics-engine--gamedev-12715)\n* [**C++**: _3D 물리 엔진 튜토리얼_](https://www.youtube.com/playlist?list=PLEETnX-uPtBXm1KEr_2zQ6K_0hoGH6JJ0) [비디오]\n* [**JavaScript**: _물리 엔진은 어떻게 작동하는가_](http://buildnewgames.com/gamephysics/)\n* [**JavaScript**: _공간 분할을 이용한 광역 충돌 감지_](http://buildnewgames.com/broad-phase-collision-detection/)\n* [**JavaScript**: _JavaScript 게임용 간단한 2D 물리 엔진 만들기_](https://developer.ibm.com/tutorials/wa-build2dphysicsengine/?mhsrc=ibmsearch_a&mhq=2dphysic)\n\n#### 나만의 `프로그래밍 언어` 만들기\n\n* [**(any)**: _mal - Lisp 만들기_](https://github.com/kanaka/mal#mal---make-a-lisp)\n* [**어셈블리**: _Jonesforth_](https://github.com/nornagon/jonesforth/blob/master/jonesforth.S)\n* [**C**: _처음 만드는 가비지 컬렉터_](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)\n* [**C**: _나만의 Lisp 만들기: C 배우고 1000줄 코드로 프로그래밍 언어 만들기_](http://www.buildyourownlisp.com/)\n* [**C**: _C로 간단한 가비지 컬렉터 작성하기_](http://maplant.com/gc.html)\n* [**C**: _자체 해석하는 C 인터프리터_](https://github.com/lotabout/write-a-C-interpreter)\n* [**C**: _Jack Crenshaw의 \"컴파일러 만들기\" C & x86 버전_](https://github.com/lotabout/Let-s-build-a-compiler)\n* [**C**: _처음부터 컴파일러 만드는 여정_](https://github.com/DoctorWkt/acwj)\n* [**C++**: _Flex를 이용한 나만의 토이 컴파일러 작성하기_](https://gnuu.org/2009/09/18/writing-your-own-toy-compiler/)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rm8mqk3VFXyPBvPm8viNZACnuSMpLR62KCtP+mFPONQ=",
        "originContent": "* [**C++**: _Reconstructing Cave Story_](https://www.youtube.com/playlist?list=PL006xsVEsbKjSKBmLu1clo85yLrwjY67X) [video]",
        "translatedContent": "* [**C++**: _케이브 스토리 재구성하기_](https://www.youtube.com/playlist?list=PL006xsVEsbKjSKBmLu1clo85yLrwjY67X) [비디오]"
      },
      {
        "row": 2,
        "rowsha": "H9dzNvYmRhoe++HvvMUKicMOeWRzbmcwn5SDc/gyqcY=",
        "originContent": "* [**C++**: _Space Invaders from Scratch_](http://nicktasios.nl/posts/space-invaders-from-scratch-part-1.html)",
        "translatedContent": "* [**C++**: _처음부터 만드는 스페이스 인베이더_](http://nicktasios.nl/posts/space-invaders-from-scratch-part-1.html)"
      },
      {
        "row": 3,
        "rowsha": "uZI0U4g9MiskZ6BEhxZGHEBKj7745WXtc7Z6Sya5FwY=",
        "originContent": "* [**C#**: _Learn C# by Building a Simple RPG_](http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/)",
        "translatedContent": "* [**C#**: _간단한 RPG 만들기로 배우는 C#_](http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/)"
      },
      {
        "row": 4,
        "rowsha": "U4WmUL+fg6AoGQd3oHtC2ISeSA4/F1ru3eWv0ZVEu/4=",
        "originContent": "* [**C#**: _Creating a Roguelike Game in C#_](https://roguesharp.wordpress.com/)",
        "translatedContent": "* [**C#**: _C#로 로그라이크 게임 만들기_](https://roguesharp.wordpress.com/)"
      },
      {
        "row": 5,
        "rowsha": "7M6FcVYqEx5FDbWzs92e0wIir/l4MkoEJzJpDN43kjE=",
        "originContent": "* [**C#**: _Build a C#/WPF RPG_](https://scottlilly.com/build-a-cwpf-rpg/)",
        "translatedContent": "* [**C#**: _C#/WPF RPG 만들기_](https://scottlilly.com/build-a-cwpf-rpg/)"
      },
      {
        "row": 6,
        "rowsha": "ro5dr+MWv43GCWvwcfFCaxUrIppkl5z2E5Ep/dAYqpY=",
        "originContent": "* [**Go**: _Games With Go_](https://www.youtube.com/playlist?list=PLDZujg-VgQlZUy1iCqBbe5faZLMkA3g2x) [video]",
        "translatedContent": "* [**Go**: _Go로 만드는 게임_](https://www.youtube.com/playlist?list=PLDZujg-VgQlZUy1iCqBbe5faZLMkA3g2x) [비디오]"
      },
      {
        "row": 7,
        "rowsha": "6SB9df0iwIEAqNxGpzruPjHrfZn1JUhj1mM27K2hjgQ=",
        "originContent": "* [**Java**: _Code a 2D Game Engine using Java - Full Course for Beginners_](https://www.youtube.com/watch?v=025QFeZfeyM) [video]",
        "translatedContent": "* [**Java**: _Java를 사용한 2D 게임 엔진 코딩 - 초보자용 전체 강좌_](https://www.youtube.com/watch?v=025QFeZfeyM) [비디오]"
      },
      {
        "row": 8,
        "rowsha": "/ik9xxN4UscHloa2mJlwDquiJ4ASRzUJBkpLiiHo1HU=",
        "originContent": "* [**Java**: _3D Game Development with LWJGL 3_](https://lwjglgamedev.gitbooks.io/3d-game-development-with-lwjgl/content/)",
        "translatedContent": "* [**Java**: _LWJGL 3로 3D 게임 개발_](https://lwjglgamedev.gitbooks.io/3d-game-development-with-lwjgl/content/)"
      },
      {
        "row": 9,
        "rowsha": "xv+68zPnuyjs0EX9gMufi9nkJUGIDcb2Yvnr8gnAxXU=",
        "originContent": "* [**JavaScript**: _2D breakout game using Phaser_](https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser)",
        "translatedContent": "* [**JavaScript**: _Phaser를 이용한 2D 브레이크아웃 게임_](https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser)"
      },
      {
        "row": 10,
        "rowsha": "zgsKUrwKMxcCLq8EjRq0bMRlZLxT/H8aClN4PCjx4nw=",
        "originContent": "* [**JavaScript**: _How to Make Flappy Bird in HTML5 With Phaser_](http://www.lessmilk.com/tutorial/flappy-bird-phaser-1)",
        "translatedContent": "* [**JavaScript**: _Phaser로 HTML5 플래피 버드 만들기_](http://www.lessmilk.com/tutorial/flappy-bird-phaser-1)"
      },
      {
        "row": 11,
        "rowsha": "IzEVQuCNxJxBnFqTAeuybX4ULLqISB2Mzpc85GErD3Q=",
        "originContent": "* [**JavaScript**: _Developing Games with React, Redux, and SVG_](https://auth0.com/blog/developing-games-with-react-redux-and-svg-part-1/)",
        "translatedContent": "* [**JavaScript**: _React, Redux, SVG로 게임 개발하기_](https://auth0.com/blog/developing-games-with-react-redux-and-svg-part-1/)"
      },
      {
        "row": 12,
        "rowsha": "yy1zfDcuGdwlSYMrnuVgRtLtDmrESvL3/DznbLwqQgY=",
        "originContent": "* [**JavaScript**: _Build your own 8-Ball Pool game from scratch_](https://www.youtube.com/watch?v=aXwCrtAo4Wc) [video]",
        "translatedContent": "* [**JavaScript**: _처음부터 만드는 8볼 당구 게임_](https://www.youtube.com/watch?v=aXwCrtAo4Wc) [비디오]"
      },
      {
        "row": 13,
        "rowsha": "65mKbc1azoORRCPm3QThdRs7kkzKnoyW6QPuU2mnHIQ=",
        "originContent": "* [**JavaScript**: _How to Make Your First Roguelike_](https://gamedevelopment.tutsplus.com/tutorials/how-to-make-your-first-roguelike--gamedev-13677)",
        "translatedContent": "* [**JavaScript**: _처음 만드는 로그라이크 게임_](https://gamedevelopment.tutsplus.com/tutorials/how-to-make-your-first-roguelike--gamedev-13677)"
      },
      {
        "row": 14,
        "rowsha": "7lzoc9frwyThw7hSVHBQz5BQ1DjuLjyQ2Q4hoJqnTZI=",
        "originContent": "* [**JavaScript**: _Think like a programmer: How to build Snake using only JavaScript, HTML & CSS_](https://medium.freecodecamp.org/think-like-a-programmer-how-to-build-snake-using-only-javascript-html-and-css-7b1479c3339e)",
        "translatedContent": "* [**JavaScript**: _프로그래머처럼 생각하기: JavaScript, HTML & CSS만으로 스네이크 만들기_](https://medium.freecodecamp.org/think-like-a-programmer-how-to-build-snake-using-only-javascript-html-and-css-7b1479c3339e)"
      },
      {
        "row": 15,
        "rowsha": "3/24ClZNS8bJbpwfH4KTDXyli7UrQDGS2bd2b+Vhra4=",
        "originContent": "* [**Lua**: _BYTEPATH_](https://github.com/SSYGEN/blog/issues/30)",
        "translatedContent": "* [**Lua**: _BYTEPATH_](https://github.com/SSYGEN/blog/issues/30)"
      },
      {
        "row": 16,
        "rowsha": "XVdf1msnVW6Q0ho+HSXP+tliwSvcdoEXznPDBCHej9c=",
        "originContent": "* [**Python**: _Developing Games With PyGame_](https://pythonprogramming.net/pygame-python-3-part-1-intro/)",
        "translatedContent": "* [**Python**: _PyGame으로 게임 개발하기_](https://pythonprogramming.net/pygame-python-3-part-1-intro/)"
      },
      {
        "row": 17,
        "rowsha": "602MERNwCJ1mNS58qxDqHgkCpPIkPovP4bl3r/R+7As=",
        "originContent": "* [**Python**: _Making Games with Python & Pygame_](https://inventwithpython.com/makinggames.pdf) [pdf]",
        "translatedContent": "* [**Python**: _Python & Pygame으로 게임 만들기_](https://inventwithpython.com/makinggames.pdf) [pdf]"
      },
      {
        "row": 18,
        "rowsha": "Z0jCyNEWq0fyYrbV9CrO3uAFAOof7j/RorSLmahYrts=",
        "originContent": "* [**Python**: _Roguelike Tutorial Revised_](http://rogueliketutorials.com/)",
        "translatedContent": "* [**Python**: _로그라이크 튜토리얼 개정판_](http://rogueliketutorials.com/)"
      },
      {
        "row": 19,
        "rowsha": "U4B2b0kBq9lJB/Z2itVUd5BZlgb8tMhccTO3KKRkHT0=",
        "originContent": "* [**Ruby**: _Developing Games With Ruby_](https://leanpub.com/developing-games-with-ruby/read)",
        "translatedContent": "* [**Ruby**: _Ruby로 게임 개발하기_](https://leanpub.com/developing-games-with-ruby/read)"
      },
      {
        "row": 20,
        "rowsha": "B5XrtxrTwuAxGOMXKKgXeEs1w2aFHbqUZLf3QO0NfmQ=",
        "originContent": "* [**Ruby**: _Ruby Snake_](https://www.diatomenterprises.com/gamedev-on-ruby-why-not/)",
        "translatedContent": "* [**Ruby**: _Ruby 스네이크_](https://www.diatomenterprises.com/gamedev-on-ruby-why-not/)"
      },
      {
        "row": 21,
        "rowsha": "AHhI/j48z8TyJ8EMwZmE0aNO+E31gYhtTtEUeNqJO4Y=",
        "originContent": "* [**Rust**: _Adventures in Rust: A Basic 2D Game_](https://a5huynh.github.io/posts/2018/adventures-in-rust/)",
        "translatedContent": "* [**Rust**: _러스트로 배우는 모험: 기본 2D 게임_](https://a5huynh.github.io/posts/2018/adventures-in-rust/)"
      },
      {
        "row": 22,
        "rowsha": "LfLJ5YqWHCG5Yf1es0iweCC7DpsWdGmvFEAois/DkIE=",
        "originContent": "* [**Rust**: _Roguelike Tutorial in Rust + tcod_](https://tomassedovic.github.io/roguelike-tutorial/)",
        "translatedContent": "* [**Rust**: _Rust + tcod로 로그라이크 튜토리얼_](https://tomassedovic.github.io/roguelike-tutorial/)"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "GQGGmAZB2YTsePZlHf9a8u+oEDthqGuVmFMCSB72TGE=",
        "originContent": "#### Build your own `Git`",
        "translatedContent": "#### 나만의 `Git` 만들기"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "tqBkzvaSXeCd/UwiEyXWcwnYzBAS6oqVJmae6H5PLm8=",
        "originContent": "* [**Haskell**: _Reimplementing “git clone” in Haskell from the bottom up_](http://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/)",
        "translatedContent": "* [**Haskell**: _Haskell로 “git clone” 바닥부터 재구현하기_](http://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/)"
      },
      {
        "row": 27,
        "rowsha": "kkHTcZxYNGlLD5adCI7bwzlZKju/ChUIOjynZyj0epg=",
        "originContent": "* [**JavaScript**: _Gitlet_](http://gitlet.maryrosecook.com/docs/gitlet.html)",
        "translatedContent": "* [**JavaScript**: _Gitlet_](http://gitlet.maryrosecook.com/docs/gitlet.html)"
      },
      {
        "row": 28,
        "rowsha": "lvZp3Fr+PARFSFsSryGh8syX9eNOta/J82wN7qgjahg=",
        "originContent": "* [**JavaScript**: _Build GIT - Learn GIT_](https://kushagra.dev/blog/build-git-learn-git/)",
        "translatedContent": "* [**JavaScript**: _GIT 만들기 - GIT 배우기_](https://kushagra.dev/blog/build-git-learn-git/)"
      },
      {
        "row": 29,
        "rowsha": "Oc1vMeb4CPCCWsGprJzEaBEcGZkk4LKuuV57HvVSkTU=",
        "originContent": "* [**Python**: _Just enough of a Git client to create a repo, commit, and push itself to GitHub_](https://benhoyt.com/writings/pygit/)",
        "translatedContent": "* [**Python**: _Git 저장소 생성, 커밋, GitHub로 푸시하는 최소한의 Git 클라이언트_](https://benhoyt.com/writings/pygit/)"
      },
      {
        "row": 30,
        "rowsha": "D0lxtL9KeawIs5xCALK5jPIeGlNK3uhUAam5BmkHyvk=",
        "originContent": "* [**Python**: _Write yourself a Git!_](https://wyag.thb.lt/)",
        "translatedContent": "* [**Python**: _직접 만드는 Git!_](https://wyag.thb.lt/)"
      },
      {
        "row": 31,
        "rowsha": "5FeSwpwHD4rJ+fVzU/M9WT54bE3pIaYebl2qcpx8dCc=",
        "originContent": "* [**Python**: _ugit: Learn Git Internals by Building Git Yourself_](https://www.leshenko.net/p/ugit/)",
        "translatedContent": "* [**Python**: _ugit: Git 내부 구조 학습을 위한 Git 직접 만들기_](https://www.leshenko.net/p/ugit/)"
      },
      {
        "row": 32,
        "rowsha": "JZL0v3ZaSgfy34zkrn/fkO2BUEpn0tFZiINferEHhxk=",
        "originContent": "* [**Ruby**: _Rebuilding Git in Ruby_](https://robots.thoughtbot.com/rebuilding-git-in-ruby)",
        "translatedContent": "* [**Ruby**: _Ruby로 Git 재구성하기_](https://robots.thoughtbot.com/rebuilding-git-in-ruby)"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "v1dxtJt/GBb/MZu+e/jyJq/CPhJYgWDME4m9CtcZ+rQ=",
        "originContent": "#### Build your own `Network Stack`",
        "translatedContent": "#### 나만의 `네트워크 스택` 만들기"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "XEN5+1F5F3ImDydF0Kx3UIHZa2/TCUoqXn3GMoTpYiE=",
        "originContent": "* [**C**: _Beej's Guide to Network Programming_](http://beej.us/guide/bgnet/)",
        "translatedContent": "* [**C**: _Beej의 네트워크 프로그래밍 가이드_](http://beej.us/guide/bgnet/)"
      },
      {
        "row": 37,
        "rowsha": "y7hSGVEqsYbpaBxaAynvOw5GIiH45RKJSh1O9H+04zo=",
        "originContent": "* [**C**: _Let's code a TCP/IP stack_](http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/)",
        "translatedContent": "* [**C**: _TCP/IP 스택 코딩하기_](http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/)"
      },
      {
        "row": 38,
        "rowsha": "buTICIWigAsZpnK66vd6kz6oRP0vixCou5I98cIGcuo=",
        "originContent": "* [**C / Python**: _Build your own VPN/Virtual Switch_](https://github.com/peiyuanix/build-your-own-zerotier)",
        "translatedContent": "* [**C / Python**: _나만의 VPN/가상 스위치 만들기_](https://github.com/peiyuanix/build-your-own-zerotier)"
      },
      {
        "row": 39,
        "rowsha": "IxtW1xgGH7IIzUQQBOO3dGllJXc+kIQZ0ljpopQ/ZIM=",
        "originContent": "* [**Ruby**: _How to build a network stack in Ruby_](https://medium.com/geckoboard-under-the-hood/how-to-build-a-network-stack-in-ruby-f73aeb1b661b)",
        "translatedContent": "* [**Ruby**: _Ruby로 네트워크 스택 만들기_](https://medium.com/geckoboard-under-the-hood/how-to-build-a-network-stack-in-ruby-f73aeb1b661b)"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 41,
        "rowsha": "5yjQid4lHRxxBbbegjKQ/1ytkEtI2iDshQzAIOTZXfg=",
        "originContent": "#### Build your own `Neural Network`",
        "translatedContent": "#### 나만의 `신경망` 만들기"
      },
      {
        "row": 42,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 43,
        "rowsha": "WmAffliVObFMQkxyg8yOOj512rlQRX049Uzr5O5hZ0E=",
        "originContent": "* [**C#**: _Neural Network OCR_](https://www.codeproject.com/Articles/11285/Neural-Network-OCR)",
        "translatedContent": "* [**C#**: _신경망 OCR_](https://www.codeproject.com/Articles/11285/Neural-Network-OCR)"
      },
      {
        "row": 44,
        "rowsha": "Mh9MyxN1PdEvKsPH0gvFBjZ24wQdoZKbDKq1TE/1e8A=",
        "originContent": "* [**F#**: _Building Neural Networks in F#_](https://towardsdatascience.com/building-neural-networks-in-f-part-1-a2832ae972e6)",
        "translatedContent": "* [**F#**: _F#로 신경망 만들기_](https://towardsdatascience.com/building-neural-networks-in-f-part-1-a2832ae972e6)"
      },
      {
        "row": 45,
        "rowsha": "jvo0+EOZOyw05QzNEWhcdReTgLAJ1iYjhzJfXjfcHBc=",
        "originContent": "* [**Go**: _Build a multilayer perceptron with Golang_](https://made2591.github.io/posts/neuralnetwork)",
        "translatedContent": "* [**Go**: _Golang으로 다층 퍼셉트론 만들기_](https://made2591.github.io/posts/neuralnetwork)"
      },
      {
        "row": 46,
        "rowsha": "nnONqldKt41+qNr5dxBLAmGAnfRLQeIH+9ofrqMJd94=",
        "originContent": "* [**Go**: _How to build a simple artificial neural network with Go_](https://sausheong.github.io/posts/how-to-build-a-simple-artificial-neural-network-with-go/)",
        "translatedContent": "* [**Go**: _Go로 간단한 인공 신경망 만들기_](https://sausheong.github.io/posts/how-to-build-a-simple-artificial-neural-network-with-go/)"
      },
      {
        "row": 47,
        "rowsha": "HYfZIaCDRurF+2G5OI+XrltyvZUR7DpuQYbVlicgdhw=",
        "originContent": "* [**Go**: _Building a Neural Net from Scratch in Go_](https://datadan.io/blog/neural-net-with-go)",
        "translatedContent": "* [**Go**: _Go에서 신경망 직접 만들기_](https://datadan.io/blog/neural-net-with-go)"
      },
      {
        "row": 48,
        "rowsha": "5gETON2zXFDqZ3HMDjd8YpstIXdmmiDDrbqcAZzf6uA=",
        "originContent": "* [**JavaScript / Java**: _Neural Networks - The Nature of Code_](https://www.youtube.com/playlist?list=PLRqwX-V7Uu6aCibgK1PTWWu9by6XFdCfh) [video]",
        "translatedContent": "* [**JavaScript / Java**: _신경망 - The Nature of Code_](https://www.youtube.com/playlist?list=PLRqwX-V7Uu6aCibgK1PTWWu9by6XFdCfh) [비디오]"
      },
      {
        "row": 49,
        "rowsha": "UsQSw7y0oarvv83RLHOV2e85jvU3knAEeuSPNHQlvm4=",
        "originContent": "* [**JavaScript**: _Neural networks from scratch for JavaScript linguists (Part1 — The Perceptron)_](https://hackernoon.com/neural-networks-from-scratch-for-javascript-linguists-part1-the-perceptron-632a4d1fbad2)",
        "translatedContent": "* [**JavaScript**: _JavaScript 언어학자를 위한 신경망 직접 만들기 (1부 — 퍼셉트론)_](https://hackernoon.com/neural-networks-from-scratch-for-javascript-linguists-part1-the-perceptron-632a4d1fbad2)"
      },
      {
        "row": 50,
        "rowsha": "a/lo13hA9GPLoEWhW6qS2MEcje4d4tKvNYJZ4zyr9E8=",
        "originContent": "* [**Python**: _A Neural Network in 11 lines of Python_](https://iamtrask.github.io/2015/07/12/basic-python-network/)",
        "translatedContent": "* [**Python**: _11줄 파이썬 신경망_](https://iamtrask.github.io/2015/07/12/basic-python-network/)"
      },
      {
        "row": 51,
        "rowsha": "FPzW0oc2DzFlmWPKuzZPUVDfQ/gfPxGnGhEDttnvPug=",
        "originContent": "* [**Python**: _Implement a Neural Network from Scratch_](https://victorzhou.com/blog/intro-to-neural-networks/)",
        "translatedContent": "* [**Python**: _신경망 직접 구현하기_](https://victorzhou.com/blog/intro-to-neural-networks/)"
      },
      {
        "row": 52,
        "rowsha": "WWUkwmXRo/lyyPzLGW4F0lbVZAXup1U5CuPszHzGjHs=",
        "originContent": "* [**Python**: _Optical Character Recognition (OCR)_](http://aosabook.org/en/500L/optical-character-recognition-ocr.html)",
        "translatedContent": "* [**Python**: _광학 문자 인식 (OCR)_](http://aosabook.org/en/500L/optical-character-recognition-ocr.html)"
      },
      {
        "row": 53,
        "rowsha": "llh53cJDjeNGcnkiYXoOnbG8nbZhNe09sFX12WG8wlw=",
        "originContent": "* [**Python**: _Traffic signs classification with a convolutional network_](https://navoshta.com/traffic-signs-classification/)",
        "translatedContent": "* [**Python**: _합성곱 신경망을 이용한 교통 표지 분류_](https://navoshta.com/traffic-signs-classification/)"
      },
      {
        "row": 54,
        "rowsha": "ZWjkIGcAkni1k9cMV5Lv967zd+6pabrFkxMD4w0d9Q0=",
        "originContent": "* [**Python**: _Generate Music using LSTM Neural Network in Keras_](https://towardsdatascience.com/how-to-generate-music-using-a-lstm-neural-network-in-keras-68786834d4c5)",
        "translatedContent": "* [**Python**: _Keras의 LSTM 신경망으로 음악 생성하기_](https://towardsdatascience.com/how-to-generate-music-using-a-lstm-neural-network-in-keras-68786834d4c5)"
      },
      {
        "row": 55,
        "rowsha": "Qz1v5pxYUj+pfyRfGSfMLy85iZ7RqyrFVNaouJ+vtHk=",
        "originContent": "* [**Python**: _An Introduction to Convolutional Neural Networks_](https://victorzhou.com/blog/intro-to-cnns-part-1/)",
        "translatedContent": "* [**Python**: _합성곱 신경망 입문_](https://victorzhou.com/blog/intro-to-cnns-part-1/)"
      },
      {
        "row": 56,
        "rowsha": "1zzjNuzv/HtnLuBJ56BUU0wFTDUfOSTV3LiH7xtEAJg=",
        "originContent": "* [**Python**: _Neural Networks: Zero to Hero_](https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ)",
        "translatedContent": "* [**Python**: _신경망: 기초부터 전문가까지_](https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ)"
      },
      {
        "row": 57,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 58,
        "rowsha": "EXVRJh6P73pINcUtcuFpiCP1TiiSMHwwl1PJrJouFKE=",
        "originContent": "#### Build your own `Operating System`",
        "translatedContent": "#### 나만의 `운영체제` 만들기"
      },
      {
        "row": 59,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 60,
        "rowsha": "o2nLtBIddkuG9ffsEVkIHojskPv2wrGi4Kz+PuCoEto=",
        "originContent": "* [**Assembly**: _Writing a Tiny x86 Bootloader_](http://joebergeron.io/posts/post_two.html)",
        "translatedContent": "* [**어셈블리**: _작은 x86 부트로더 작성하기_](http://joebergeron.io/posts/post_two.html)"
      },
      {
        "row": 61,
        "rowsha": "WeegDPlFwYKTh4KHWxRTjETNQnnlSfj7KgdBCdSArb0=",
        "originContent": "* [**Assembly**: _Baking Pi – Operating Systems Development_](http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/index.html)",
        "translatedContent": "* [**어셈블리**: _Baking Pi – 운영체제 개발_](http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/index.html)"
      },
      {
        "row": 62,
        "rowsha": "WNvWcbLUHA9Mjh9DTRWizn7SGjR59tfWjSC3DN3PNzY=",
        "originContent": "* [**C**: _Building a software and hardware stack for a simple computer from scratch_](https://www.youtube.com/watch?v=ZjwvMcP3Nf0&list=PLU94OURih-CiP4WxKSMt3UcwMSDM3aTtX) [video]",
        "translatedContent": "* [**C**: _처음부터 만드는 간단한 컴퓨터용 소프트웨어 및 하드웨어 스택_](https://www.youtube.com/watch?v=ZjwvMcP3Nf0&list=PLU94OURih-CiP4WxKSMt3UcwMSDM3aTtX) [비디오]"
      },
      {
        "row": 63,
        "rowsha": "7S9Jc91o3lkd7WJqHeU7wB3XndSFEZx9oFIPyzfAhSM=",
        "originContent": "* [**C**: _Operating Systems: From 0 to 1_](https://tuhdo.github.io/os01/)",
        "translatedContent": "* [**C**: _운영체제: 0에서 1까지_](https://tuhdo.github.io/os01/)"
      },
      {
        "row": 64,
        "rowsha": "VCz4vnHx+qyjGx9f0TwpHdHqKWf7cfHmIkMzRiMnNNk=",
        "originContent": "* [**C**: _The little book about OS development_](https://littleosbook.github.io/)",
        "translatedContent": "* [**C**: _운영체제 개발에 관한 작은 책_](https://littleosbook.github.io/)"
      },
      {
        "row": 65,
        "rowsha": "kBZAc3cwa/b4iEXHZy0WfO063ENA7X/JAb9StwxUrLQ=",
        "originContent": "* [**C**: _Roll your own toy UNIX-clone OS_](http://jamesmolloy.co.uk/tutorial_html/)",
        "translatedContent": "* [**C**: _나만의 토이 UNIX 클론 OS 만들기_](http://jamesmolloy.co.uk/tutorial_html/)"
      },
      {
        "row": 66,
        "rowsha": "vIKDUc4u8wJjLPP4kIhhGBiB8k+0ebdVdMTYzRN83cg=",
        "originContent": "* [**C**: _Kernel 101 – Let’s write a Kernel_](https://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel)",
        "translatedContent": "* [**C**: _커널 101 – 커널 작성하기_](https://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel)"
      },
      {
        "row": 67,
        "rowsha": "N6P81ORbudKRstkgYifMun7uUKsINu5Wi9MEk7v2mek=",
        "originContent": "* [**C**: _Kernel 201 – Let’s write a Kernel with keyboard and screen support_](https://arjunsreedharan.org/post/99370248137/kernel-201-lets-write-a-kernel-with-keyboard)",
        "translatedContent": "* [**C**: _커널 201 – 키보드 및 화면 지원 커널 작성하기_](https://arjunsreedharan.org/post/99370248137/kernel-201-lets-write-a-kernel-with-keyboard)"
      },
      {
        "row": 68,
        "rowsha": "AC2zONdoF8/7OQKZ3b74wHDEPn/sLaXNmu/yEkGWJbw=",
        "originContent": "* [**C**: _Build a minimal multi-tasking kernel for ARM from scratch_](https://github.com/jserv/mini-arm-os)",
        "translatedContent": "* [**C**: _ARM용 최소 멀티태스킹 커널 처음부터 만들기_](https://github.com/jserv/mini-arm-os)"
      },
      {
        "row": 69,
        "rowsha": "AtSaqcIxlBXqT9rBo4HOMKbvpL6l7vEVm2kVwnCkNy4=",
        "originContent": "* [**C**: _How to create an OS from scratch_](https://github.com/cfenollosa/os-tutorial)",
        "translatedContent": "* [**C**: _처음부터 운영체제 만드는 법_](https://github.com/cfenollosa/os-tutorial)"
      },
      {
        "row": 70,
        "rowsha": "YEyle3mctvIGWMqwX9YUPan2Nqe3M49txwYZ+FGBwmc=",
        "originContent": "* [**C**: _Malloc tutorial_](https://danluu.com/malloc-tutorial/)",
        "translatedContent": "* [**C**: _Malloc 튜토리얼_](https://danluu.com/malloc-tutorial/)"
      },
      {
        "row": 71,
        "rowsha": "lrtCAEI1ILBGHPjZSdLsBN5a2WxnnwmqYphBqqx1Elo=",
        "originContent": "* [**C**: _Hack the virtual memory_](https://blog.holbertonschool.com/hack-the-virtual-memory-c-strings-proc/)",
        "translatedContent": "* [**C**: _가상 메모리 해킹하기_](https://blog.holbertonschool.com/hack-the-virtual-memory-c-strings-proc/)"
      },
      {
        "row": 72,
        "rowsha": "Ft1a+ljImZQ0Ci8MI8yTDJNy7Hmf2CL0/KJGSMdz2j4=",
        "originContent": "* [**C**: _Learning operating system development using Linux kernel and Raspberry Pi_](https://github.com/s-matyukevich/raspberry-pi-os)",
        "translatedContent": "* [**C**: _Linux 커널과 Raspberry Pi를 이용한 운영체제 개발 학습_](https://github.com/s-matyukevich/raspberry-pi-os)"
      },
      {
        "row": 73,
        "rowsha": "J3TWDvc4WmYqN6pQVHd+6nzaOtjFqXBBE/2owKddJHc=",
        "originContent": "* [**C**: _Operating systems development for Dummies_](https://medium.com/@lduck11007/operating-systems-development-for-dummies-3d4d786e8ac)",
        "translatedContent": "* [**C**: _운영체제 개발 초보자용_](https://medium.com/@lduck11007/operating-systems-development-for-dummies-3d4d786e8ac)"
      },
      {
        "row": 74,
        "rowsha": "joRs7W1pKpkEbOiLjARG/cwNNcRNaWVmDUZKYU7lOug=",
        "originContent": "* [**C++**: _Write your own Operating System_](https://www.youtube.com/playlist?list=PLHh55M_Kq4OApWScZyPl5HhgsTJS9MZ6M) [video]",
        "translatedContent": "* [**C++**: _나만의 운영체제 작성하기_](https://www.youtube.com/playlist?list=PLHh55M_Kq4OApWScZyPl5HhgsTJS9MZ6M) [비디오]"
      },
      {
        "row": 75,
        "rowsha": "///AqaUDo7pzqJC6ct9Ye8Ahk2XlWvdhm9ruZijDB2s=",
        "originContent": "* [**C++**: _Writing a Bootloader_](http://3zanders.co.uk/2017/10/13/writing-a-bootloader/)",
        "translatedContent": "* [**C++**: _부트로더 작성하기_](http://3zanders.co.uk/2017/10/13/writing-a-bootloader/)"
      },
      {
        "row": 76,
        "rowsha": "9ToDA4Z66BOiFMvLxGpXsT25PdU5eD6C5MVFTD7y7kI=",
        "originContent": "* [**Rust**: _Writing an OS in Rust_](https://os.phil-opp.com/)",
        "translatedContent": "* [**Rust**: _Rust로 운영체제 작성하기_](https://os.phil-opp.com/)"
      },
      {
        "row": 77,
        "rowsha": "y6zXRwnRiV3H1h/1XOWYwQ965c/5OFEwmVO4vHmiFhc=",
        "originContent": "* [**Rust**: _Add RISC-V Rust Operating System Tutorial_](https://osblog.stephenmarz.com/)",
        "translatedContent": "* [**Rust**: _RISC-V Rust 운영체제 튜토리얼 추가_](https://osblog.stephenmarz.com/)"
      },
      {
        "row": 78,
        "rowsha": "nc7ZpbSHzUwJ+k/1EX1zA3VGGdpGGPRLTzD+n47Z/Lo=",
        "originContent": "* [**(any)**: _Linux from scratch_](https://linuxfromscratch.org/lfs)",
        "translatedContent": "* [**(any)**: _리눅스 프롬 스크래치_](https://linuxfromscratch.org/lfs)"
      },
      {
        "row": 79,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 80,
        "rowsha": "CZs2MI4Xk/MnAWxkTrNXRuN6rSwGwI4opplrdA6nWgo=",
        "originContent": "#### Build your own `Physics Engine`",
        "translatedContent": "#### 나만의 `물리 엔진` 만들기"
      },
      {
        "row": 81,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 82,
        "rowsha": "aYCBJu5g2VaV4dzQ3UeuXz2yS7m/RSC/0ccp7mAtnfM=",
        "originContent": "* [**C**: _Video Game Physics Tutorial_](https://www.toptal.com/game/video-game-physics-part-i-an-introduction-to-rigid-body-dynamics)",
        "translatedContent": "* [**C**: _비디오 게임 물리 튜토리얼_](https://www.toptal.com/game/video-game-physics-part-i-an-introduction-to-rigid-body-dynamics)"
      },
      {
        "row": 83,
        "rowsha": "zZWsyITC8tWrnjD5uzxYGQNv3fJk2qFc8Qdg/8pB9Qk=",
        "originContent": "* [**C++**: _Game physics series by Allen Chou_](http://allenchou.net/game-physics-series/)",
        "translatedContent": "* [**C++**: _Allen Chou의 게임 물리 시리즈_](http://allenchou.net/game-physics-series/)"
      },
      {
        "row": 84,
        "rowsha": "RC4HkmZTGJOfDBqbNb4B4oqh5JePQpR4FOSQCya2SBg=",
        "originContent": "* [**C++**: _How to Create a Custom Physics Engine_](https://gamedevelopment.tutsplus.com/series/how-to-create-a-custom-physics-engine--gamedev-12715)",
        "translatedContent": "* [**C++**: _커스텀 물리 엔진 만드는 법_](https://gamedevelopment.tutsplus.com/series/how-to-create-a-custom-physics-engine--gamedev-12715)"
      },
      {
        "row": 85,
        "rowsha": "pNbRva+LuHYi+xY4QpBXwcohjgpTy/mXLMgDPUIBtps=",
        "originContent": "* [**C++**: _3D Physics Engine Tutorial_](https://www.youtube.com/playlist?list=PLEETnX-uPtBXm1KEr_2zQ6K_0hoGH6JJ0) [video]",
        "translatedContent": "* [**C++**: _3D 물리 엔진 튜토리얼_](https://www.youtube.com/playlist?list=PLEETnX-uPtBXm1KEr_2zQ6K_0hoGH6JJ0) [비디오]"
      },
      {
        "row": 86,
        "rowsha": "976P/Qf2ibh3akfH7LHrPFZnwreSgSU7ugTPnQeYunk=",
        "originContent": "* [**JavaScript**: _How Physics Engines Work_](http://buildnewgames.com/gamephysics/)",
        "translatedContent": "* [**JavaScript**: _물리 엔진은 어떻게 작동하는가_](http://buildnewgames.com/gamephysics/)"
      },
      {
        "row": 87,
        "rowsha": "IX0+EEV51gQE6JtZwmIFhWxidRWZFv1Gu2INkCisSKw=",
        "originContent": "* [**JavaScript**: _Broad Phase Collision Detection Using Spatial Partitioning_](http://buildnewgames.com/broad-phase-collision-detection/)",
        "translatedContent": "* [**JavaScript**: _공간 분할을 이용한 광역 충돌 감지_](http://buildnewgames.com/broad-phase-collision-detection/)"
      },
      {
        "row": 88,
        "rowsha": "mrUhMmPf6ruaALQDj2rcWHWBCVj0JF/xLUfYGNgVCfc=",
        "originContent": "* [**JavaScript**: _Build a simple 2D physics engine for JavaScript games_](https://developer.ibm.com/tutorials/wa-build2dphysicsengine/?mhsrc=ibmsearch_a&mhq=2dphysic)",
        "translatedContent": "* [**JavaScript**: _JavaScript 게임용 간단한 2D 물리 엔진 만들기_](https://developer.ibm.com/tutorials/wa-build2dphysicsengine/?mhsrc=ibmsearch_a&mhq=2dphysic)"
      },
      {
        "row": 89,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 90,
        "rowsha": "zjtQAroMsWUFlLxU/ktbIDGw2KFuGysJF6aPHFOfSJ0=",
        "originContent": "#### Build your own `Programming Language`",
        "translatedContent": "#### 나만의 `프로그래밍 언어` 만들기"
      },
      {
        "row": 91,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 92,
        "rowsha": "ZFTN0aJY7FIjgxy+cg99zmtfeNZAyzQedFOoye5+aoU=",
        "originContent": "* [**(any)**: _mal - Make a Lisp_](https://github.com/kanaka/mal#mal---make-a-lisp)",
        "translatedContent": "* [**(any)**: _mal - Lisp 만들기_](https://github.com/kanaka/mal#mal---make-a-lisp)"
      },
      {
        "row": 93,
        "rowsha": "zgqjek6n6t4UtbmbOz5wTQBHCKIVwCYje4CcVTdPp44=",
        "originContent": "* [**Assembly**: _Jonesforth_](https://github.com/nornagon/jonesforth/blob/master/jonesforth.S)",
        "translatedContent": "* [**어셈블리**: _Jonesforth_](https://github.com/nornagon/jonesforth/blob/master/jonesforth.S)"
      },
      {
        "row": 94,
        "rowsha": "dJt7ypyJBKcVIyD51/o2KOUHoP6Y0l9HhJe/AJydI2A=",
        "originContent": "* [**C**: _Baby's First Garbage Collector_](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)",
        "translatedContent": "* [**C**: _처음 만드는 가비지 컬렉터_](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)"
      },
      {
        "row": 95,
        "rowsha": "NdILKv0PHz0t1vaKqaLvlXFnWhD75M4+04olrpEvZm4=",
        "originContent": "* [**C**: _Build Your Own Lisp: Learn C and build your own programming language in 1000 lines of code_](http://www.buildyourownlisp.com/)",
        "translatedContent": "* [**C**: _나만의 Lisp 만들기: C 배우고 1000줄 코드로 프로그래밍 언어 만들기_](http://www.buildyourownlisp.com/)"
      },
      {
        "row": 96,
        "rowsha": "31fpCxTPZa4W66DzGlqVjZ1abl8B9y6ychv/SvEtzuQ=",
        "originContent": "* [**C**: _Writing a Simple Garbage Collector in C_](http://maplant.com/gc.html)",
        "translatedContent": "* [**C**: _C로 간단한 가비지 컬렉터 작성하기_](http://maplant.com/gc.html)"
      },
      {
        "row": 97,
        "rowsha": "pc5JnAtLo7qiMg+MfDQFwIth3Y5ymRKSWMhs1SDOnGY=",
        "originContent": "* [**C**: _C interpreter that interprets itself._](https://github.com/lotabout/write-a-C-interpreter)",
        "translatedContent": "* [**C**: _자체 해석하는 C 인터프리터_](https://github.com/lotabout/write-a-C-interpreter)"
      },
      {
        "row": 98,
        "rowsha": "V3khjCEEWwfSSB+PTfXSNDZwwLQLImTpD8NNtWa23ZM=",
        "originContent": "* [**C**: _A C & x86 version of the \"Let's Build a Compiler\" by Jack Crenshaw_](https://github.com/lotabout/Let-s-build-a-compiler)",
        "translatedContent": "* [**C**: _Jack Crenshaw의 \"컴파일러 만들기\" C & x86 버전_](https://github.com/lotabout/Let-s-build-a-compiler)"
      },
      {
        "row": 99,
        "rowsha": "fEsiD7I+IIyMkHbBOfKYzb1LWP/aCW+bJn6fYX/6xL4=",
        "originContent": "* [**C**: _A journey explaining how to build a compiler from scratch_](https://github.com/DoctorWkt/acwj)",
        "translatedContent": "* [**C**: _처음부터 컴파일러 만드는 여정_](https://github.com/DoctorWkt/acwj)"
      },
      {
        "row": 100,
        "rowsha": "KRx4Uu6ufWpI/ubiu+lLx9eshR+EnV7klkzM2llTuT4=",
        "originContent": "* [**C++**: _Writing Your Own Toy Compiler Using Flex_](https://gnuu.org/2009/09/18/writing-your-own-toy-compiler/)",
        "translatedContent": "* [**C++**: _Flex를 이용한 나만의 토이 컴파일러 작성하기_](https://gnuu.org/2009/09/18/writing-your-own-toy-compiler/)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "* [**C++**: _How to Create a Compiler_](https://www.youtube.com/watch?v=eF9qWbuQLuw) [video]\n* [**C++**: _Kaleidoscope: Implementing a Language with LLVM_](https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/index.html)\n* [**F#**: _Understanding Parser Combinators_](https://fsharpforfunandprofit.com/posts/understanding-parser-combinators/)\n* [**Elixir**: _Demystifying compilers by writing your own_](https://www.youtube.com/watch?v=zMJYoYwOCd4) [video]\n* [**Go**: _The Super Tiny Compiler_](https://github.com/hazbo/the-super-tiny-compiler)\n* [**Go**: _Lexical Scanning in Go_](https://www.youtube.com/watch?v=HxaD_trXwRE) [video]\n* [**Haskell**: _Let's Build a Compiler_](https://g-ford.github.io/cradle/)\n* [**Haskell**: _Write You a Haskell_](http://dev.stephendiehl.com/fun/)\n* [**Haskell**: _Write Yourself a Scheme in 48 Hours_](https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours)\n* [**Haskell**: _Write You A Scheme_](https://www.wespiser.com/writings/wyas/home.html)\n* [**Java**: _Crafting interpreters: A handbook for making programming languages_](http://www.craftinginterpreters.com/)\n* [**Java**: _Creating JVM Language_](http://jakubdziworski.github.io/categories.html#Enkel-ref)\n* [**JavaScript**: _The Super Tiny Compiler_](https://github.com/jamiebuilds/the-super-tiny-compiler)\n* [**JavaScript**: _The Super Tiny Interpreter_](https://github.com/keyanzhang/the-super-tiny-interpreter)\n* [**JavaScript**: _Little Lisp interpreter_](https://maryrosecook.com/blog/post/little-lisp-interpreter)\n* [**JavaScript**: _How to implement a programming language in JavaScript_](http://lisperator.net/pltut/)\n* [**JavaScript**: _Let’s go write a Lisp_](https://idiocy.org/lets-go-write-a-lisp/part-1.html)\n* [**OCaml**: _Writing a C Compiler_](https://norasandler.com/2017/11/29/Write-a-Compiler.html)\n* [**OCaml**: _Writing a Lisp, the series_](https://bernsteinbear.com/blog/lisp/)\n* [**Pascal**: _Let's Build a Compiler_](https://compilers.iecc.com/crenshaw/)\n* [**Python**: _A Python Interpreter Written in Python_](http://aosabook.org/en/500L/a-python-interpreter-written-in-python.html)\n* [**Python**: _lisp.py: Make your own Lisp interpreter_](http://khamidou.com/compilers/lisp.py/)\n* [**Python**: _How to Write a Lisp Interpreter in Python_](http://norvig.com/lispy.html)\n* [**Python**: _Let’s Build A Simple Interpreter_](https://ruslanspivak.com/lsbasi-part1/)\n* [**Python**: _Make Your Own Simple Interpreted Programming Language_](https://www.youtube.com/watch?v=dj9CBS3ikGA&list=PLZQftyCk7_SdoVexSmwy_tBgs7P0b97yD&index=1) [video]\n* [**Python**: _From Source Code To Machine Code: Build Your Own Compiler From Scratch_](https://build-your-own.org/compiler/)\n* [**Racket**: _Beautiful Racket: How to make your own programming languages with Racket_](https://beautifulracket.com/)\n* [**Ruby**: _A Compiler From Scratch_](https://www.destroyallsoftware.com/screencasts/catalog/a-compiler-from-scratch)\n* [**Ruby**: _Markdown compiler from scratch in Ruby_](https://blog.beezwax.net/2017/07/07/writing-a-markdown-compiler/)\n* [**Rust**: _So You Want to Build a Language VM_](https://blog.subnetzero.io/post/building-language-vm-part-00/)\n* [**Rust**: _Learning Parser Combinators With Rust_](https://bodil.lol/parser-combinators/)\n* [**Swift**: _Building a LISP from scratch with Swift_](https://www.uraimo.com/2017/02/05/building-a-lisp-from-scratch-with-swift/)\n* [**TypeScript**: _Build your own WebAssembly Compiler_](https://blog.scottlogic.com/2019/05/17/webassembly-compiler.html)\n\n#### Build your own `Regex Engine`\n\n* [**C**: _A Regular Expression Matcher_](https://www.cs.princeton.edu/courses/archive/spr09/cos333/beautiful.html)\n* [**C**: _Regular Expression Matching Can Be Simple And Fast_](https://swtch.com/~rsc/regexp/regexp1.html)\n* [**Go**: _How to build a regex engine from scratch_](https://rhaeguard.github.io/posts/regex)\n* [**JavaScript**: _Build a Regex Engine in Less than 40 Lines of Code_](https://nickdrane.com/build-your-own-regex/)\n* [**JavaScript**: _How to implement regular expressions in functional javascript using derivatives_](http://dpk.io/dregs/toydregs)\n* [**JavaScript**: _Implementing a Regular Expression Engine_](https://deniskyashif.com/2019/02/17/implementing-a-regular-expression-engine/) \n* [**Perl**: _How Regexes Work_](https://perl.plover.com/Regex/article.html)\n* [**Python**: _Build Your Own Regular Expression Engines: Backtracking, NFA, DFA_](https://build-your-own.org/b2a/r0_intro)\n* [**Scala**: _No Magic: Regular Expressions_](https://rcoh.svbtle.com/no-magic-regular-expressions)\n\n#### Build your own `Search Engine`\n\n* [**CSS**: _A search engine in CSS_](https://stories.algolia.com/a-search-engine-in-css-b5ec4e902e97)\n* [**Python**: _Building a search engine using Redis and redis-py_](http://www.dr-josiah.com/2010/07/building-search-engine-using-redis-and.html)\n* [**Python**: _Building a Vector Space Indexing Engine in Python_](https://boyter.org/2010/08/build-vector-space-search-engine-python/)\n* [**Python**: _Building A Python-Based Search Engine_](https://www.youtube.com/watch?v=cY7pE7vX6MU) [video]\n* [**Python**: _Making text search learn from feedback_](https://medium.com/filament-ai/making-text-search-learn-from-feedback-4fe210fd87b0)\n* [**Python**: _Finding Important Words in Text Using TF-IDF_](https://stevenloria.com/tf-idf/)\n\n#### Build your own `Shell`\n\n* [**C**: _Tutorial - Write a Shell in C_](https://brennan.io/2015/01/16/write-a-shell-in-c/)\n* [**C**: _Let's build a shell!_](https://github.com/kamalmarhubi/shell-workshop)\n* [**C**: _Writing a UNIX Shell_](https://indradhanush.github.io/blog/writing-a-unix-shell-part-1/)\n* [**C**: _Build Your Own Shell_](https://github.com/tokenrove/build-your-own-shell)\n* [**C**: Write a shell in C](https://danishpraka.sh/posts/write-a-shell/)\n* [**Go**: _Writing a simple shell in Go_](https://sj14.gitlab.io/post/2018-07-01-go-unix-shell/)\n* [**Rust**: _Build Your Own Shell using Rust_](https://www.joshmcguigan.com/blog/build-your-own-shell-rust/)\n\n#### Build your own `Template Engine`\n\n* [**JavaScript**: _JavaScript template engine in just 20 lines_](http://krasimirtsonev.com/blog/article/Javascript-template-engine-in-just-20-line)\n* [**JavaScript**: _Understanding JavaScript Micro-Templating_](https://medium.com/wdstack/understanding-javascript-micro-templating-f37a37b3b40e)\n* [**Python**: _Approach: Building a toy template engine in Python_](http://alexmic.net/building-a-template-engine/)\n* [**Python**: _A Template Engine_](http://aosabook.org/en/500L/a-template-engine.html)\n* [**Ruby**: _How to write a template engine in less than 30 lines of code_](http://bits.citrusbyte.com/how-to-write-a-template-library/)\n\n#### Build your own `Text Editor`\n\n* [**C**: _Build Your Own Text Editor_](https://viewsourcecode.org/snaptoken/kilo/)\n* [**C++**: _Designing a Simple Text Editor_](http://www.fltk.org/doc-1.1/editor.html)\n* [**Python**: _Python Tutorial: Make Your Own Text Editor_](https://www.youtube.com/watch?v=xqDonHEYPgA) [video]\n* [**Python**: _Create a Simple Python Text Editor!_](http://www.instructables.com/id/Create-a-Simple-Python-Text-Editor/)\n* [**Ruby**: _Build a Collaborative Text Editor Using Rails_](https://blog.aha.io/text-editor/)\n* [**Rust**: _Hecto: Build your own text editor in Rust_ ](https://www.flenker.blog/hecto/)\n\n#### Build your own `Visual Recognition System`\n\n* [**Python**: _Developing a License Plate Recognition System with Machine Learning in Python_](https://medium.com/devcenter/developing-a-license-plate-recognition-system-with-machine-learning-in-python-787833569ccd)\n* [**Python**: _Building a Facial Recognition Pipeline with Deep Learning in Tensorflow_](https://hackernoon.com/building-a-facial-recognition-pipeline-with-deep-learning-in-tensorflow-66e7645015b8)\n\n#### Build your own `Voxel Engine`\n\n* [**C++**: _Let's Make a Voxel Engine_](https://sites.google.com/site/letsmakeavoxelengine/home)\n* [**Java**: _Java Voxel Engine Tutorial_](https://www.youtube.com/watch?v=QZ4Vk2PkPZk&list=PL80Zqpd23vJfyWQi-8FKDbeO_ZQamLKJL) [video]\n\n#### Build your own `Web Browser`\n\n* [**Rust**: _Let's build a browser engine_](https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html)\n* [**Python**: _Browser Engineering_](https://browser.engineering)\n\n#### Build your own `Web Server`\n\n* [**C#**: _Writing a Web Server from Scratch_](https://www.codeproject.com/Articles/859108/Writing-a-Web-Server-from-Scratch)",
    "ContentSha": "azqUBSyIVdAJ/U8BT6C56eLqVfOxmnqTssnCXQDVa2Q=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [**C++**: _컴파일러 만드는 법_](https://www.youtube.com/watch?v=eF9qWbuQLuw) [비디오]\n* [**C++**: _Kaleidoscope: LLVM으로 언어 구현하기_](https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/index.html)\n* [**F#**: _파서 컴비네이터 이해하기_](https://fsharpforfunandprofit.com/posts/understanding-parser-combinators/)\n* [**Elixir**: _직접 컴파일러 작성하며 컴파일러 이해하기_](https://www.youtube.com/watch?v=zMJYoYwOCd4) [비디오]\n* [**Go**: _초소형 컴파일러_](https://github.com/hazbo/the-super-tiny-compiler)\n* [**Go**: _Go에서 렉시컬 스캐닝_](https://www.youtube.com/watch?v=HxaD_trXwRE) [비디오]\n* [**Haskell**: _컴파일러 만들기_](https://g-ford.github.io/cradle/)\n* [**Haskell**: _Write You a Haskell_](http://dev.stephendiehl.com/fun/)\n* [**Haskell**: _48시간 안에 Scheme 작성하기_](https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours)\n* [**Haskell**: _Write You A Scheme_](https://www.wespiser.com/writings/wyas/home.html)\n* [**Java**: _인터프리터 제작: 프로그래밍 언어 만들기 핸드북_](http://www.craftinginterpreters.com/)\n* [**Java**: _JVM 언어 만들기_](http://jakubdziworski.github.io/categories.html#Enkel-ref)\n* [**JavaScript**: _초소형 컴파일러_](https://github.com/jamiebuilds/the-super-tiny-compiler)\n* [**JavaScript**: _초소형 인터프리터_](https://github.com/keyanzhang/the-super-tiny-interpreter)\n* [**JavaScript**: _작은 Lisp 인터프리터_](https://maryrosecook.com/blog/post/little-lisp-interpreter)\n* [**JavaScript**: _JavaScript로 프로그래밍 언어 구현하기_](http://lisperator.net/pltut/)\n* [**JavaScript**: _Lisp 작성하러 가자_](https://idiocy.org/lets-go-write-a-lisp/part-1.html)\n* [**OCaml**: _C 컴파일러 작성하기_](https://norasandler.com/2017/11/29/Write-a-Compiler.html)\n* [**OCaml**: _Lisp 작성 시리즈_](https://bernsteinbear.com/blog/lisp/)\n* [**Pascal**: _컴파일러 만들기_](https://compilers.iecc.com/crenshaw/)\n* [**Python**: _Python으로 작성한 Python 인터프리터_](http://aosabook.org/en/500L/a-python-interpreter-written-in-python.html)\n* [**Python**: _lisp.py: 나만의 Lisp 인터프리터 만들기_](http://khamidou.com/compilers/lisp.py/)\n* [**Python**: _Python으로 Lisp 인터프리터 작성하기_](http://norvig.com/lispy.html)\n* [**Python**: _간단한 인터프리터 만들기_](https://ruslanspivak.com/lsbasi-part1/)\n* [**Python**: _나만의 간단한 인터프리티드 프로그래밍 언어 만들기_](https://www.youtube.com/watch?v=dj9CBS3ikGA&list=PLZQftyCk7_SdoVexSmwy_tBgs7P0b97yD&index=1) [비디오]\n* [**Python**: _소스 코드에서 머신 코드까지: 나만의 컴파일러 만들기_](https://build-your-own.org/compiler/)\n* [**Racket**: _Beautiful Racket: Racket으로 나만의 프로그래밍 언어 만들기_](https://beautifulracket.com/)\n* [**Ruby**: _처음부터 만드는 컴파일러_](https://www.destroyallsoftware.com/screencasts/catalog/a-compiler-from-scratch)\n* [**Ruby**: _루비로 만드는 마크다운 컴파일러_](https://blog.beezwax.net/2017/07/07/writing-a-markdown-compiler/)\n* [**Rust**: _언어 VM 만들기_](https://blog.subnetzero.io/post/building-language-vm-part-00/)\n* [**Rust**: _Rust로 파서 컴비네이터 배우기_](https://bodil.lol/parser-combinators/)\n* [**Swift**: _Swift로 처음부터 LISP 만들기_](https://www.uraimo.com/2017/02/05/building-a-lisp-from-scratch-with-swift/)\n* [**TypeScript**: _나만의 WebAssembly 컴파일러 만들기_](https://blog.scottlogic.com/2019/05/17/webassembly-compiler.html)\n\n#### 나만의 `정규 표현식 엔진` 만들기\n\n* [**C**: _정규 표현식 매처_](https://www.cs.princeton.edu/courses/archive/spr09/cos333/beautiful.html)\n* [**C**: _정규 표현식 매칭은 간단하고 빠를 수 있다_](https://swtch.com/~rsc/regexp/regexp1.html)\n* [**Go**: _처음부터 만드는 정규식 엔진_](https://rhaeguard.github.io/posts/regex)\n* [**JavaScript**: _40줄 미만 코드로 정규식 엔진 만들기_](https://nickdrane.com/build-your-own-regex/)\n* [**JavaScript**: _함수형 JavaScript에서 유도함수를 사용해 정규 표현식 구현하기_](http://dpk.io/dregs/toydregs)\n* [**JavaScript**: _정규 표현식 엔진 구현하기_](https://deniskyashif.com/2019/02/17/implementing-a-regular-expression-engine/) \n* [**Perl**: _정규식 작동 원리_](https://perl.plover.com/Regex/article.html)\n* [**Python**: _나만의 정규 표현식 엔진 만들기: 백트래킹, NFA, DFA_](https://build-your-own.org/b2a/r0_intro)\n* [**Scala**: _매직 없이: 정규 표현식_](https://rcoh.svbtle.com/no-magic-regular-expressions)\n\n#### 나만의 `검색 엔진` 만들기\n\n* [**CSS**: _CSS로 만든 검색 엔진_](https://stories.algolia.com/a-search-engine-in-css-b5ec4e902e97)\n* [**Python**: _Redis와 redis-py로 검색 엔진 만들기_](http://www.dr-josiah.com/2010/07/building-search-engine-using-redis-and.html)\n* [**Python**: _Python으로 벡터 공간 인덱싱 엔진 만들기_](https://boyter.org/2010/08/build-vector-space-search-engine-python/)\n* [**Python**: _Python 기반 검색 엔진 만들기_](https://www.youtube.com/watch?v=cY7pE7vX6MU) [비디오]\n* [**Python**: _피드백으로 학습하는 텍스트 검색 만들기_](https://medium.com/filament-ai/making-text-search-learn-from-feedback-4fe210fd87b0)\n* [**Python**: _TF-IDF로 텍스트에서 중요한 단어 찾기_](https://stevenloria.com/tf-idf/)\n\n#### 나만의 `쉘` 만들기\n\n* [**C**: _튜토리얼 - C로 쉘 작성하기_](https://brennan.io/2015/01/16/write-a-shell-in-c/)\n* [**C**: _쉘 만들기!_](https://github.com/kamalmarhubi/shell-workshop)\n* [**C**: _유닉스 쉘 작성하기_](https://indradhanush.github.io/blog/writing-a-unix-shell-part-1/)\n* [**C**: _나만의 쉘 만들기_](https://github.com/tokenrove/build-your-own-shell)\n* [**C**: C로 쉘 작성하기](https://danishpraka.sh/posts/write-a-shell/)\n* [**Go**: _Go로 간단한 쉘 만들기_](https://sj14.gitlab.io/post/2018-07-01-go-unix-shell/)\n* [**Rust**: _Rust로 나만의 쉘 만들기_](https://www.joshmcguigan.com/blog/build-your-own-shell-rust/)\n\n#### 나만의 `템플릿 엔진` 만들기\n\n* [**JavaScript**: _20줄로 만드는 JavaScript 템플릿 엔진_](http://krasimirtsonev.com/blog/article/Javascript-template-engine-in-just-20-line)\n* [**JavaScript**: _JavaScript 마이크로 템플레이팅 이해하기_](https://medium.com/wdstack/understanding-javascript-micro-templating-f37a37b3b40e)\n* [**Python**: _장난감 템플릿 엔진 만들기 접근법_](http://alexmic.net/building-a-template-engine/)\n* [**Python**: _템플릿 엔진_](http://aosabook.org/en/500L/a-template-engine.html)\n* [**Ruby**: _30줄 미만 코드로 템플릿 엔진 작성하기_](http://bits.citrusbyte.com/how-to-write-a-template-library/)\n\n#### 나만의 `텍스트 에디터` 만들기\n\n* [**C**: _나만의 텍스트 에디터 만들기_](https://viewsourcecode.org/snaptoken/kilo/)\n* [**C++**: _간단한 텍스트 에디터 설계_](http://www.fltk.org/doc-1.1/editor.html)\n* [**Python**: _Python 튜토리얼: 나만의 텍스트 에디터 만들기_](https://www.youtube.com/watch?v=xqDonHEYPgA) [비디오]\n* [**Python**: _간단한 Python 텍스트 에디터 만들기!_](http://www.instructables.com/id/Create-a-Simple-Python-Text-Editor/)\n* [**Ruby**: _Rails로 협업 텍스트 에디터 만들기_](https://blog.aha.io/text-editor/)\n* [**Rust**: _Hecto: Rust로 나만의 텍스트 에디터 만들기_](https://www.flenker.blog/hecto/)\n\n#### 나만의 `시각 인식 시스템` 만들기\n\n* [**Python**: _Python과 머신러닝으로 번호판 인식 시스템 개발하기_](https://medium.com/devcenter/developing-a-license-plate-recognition-system-with-machine-learning-in-python-787833569ccd)\n* [**Python**: _Tensorflow로 딥러닝 얼굴 인식 파이프라인 만들기_](https://hackernoon.com/building-a-facial-recognition-pipeline-with-deep-learning-in-tensorflow-66e7645015b8)\n\n#### 나만의 `복셀 엔진` 만들기\n\n* [**C++**: _복셀 엔진 만들기_](https://sites.google.com/site/letsmakeavoxelengine/home)\n* [**Java**: _Java 복셀 엔진 튜토리얼_](https://www.youtube.com/watch?v=QZ4Vk2PkPZk&list=PL80Zqpd23vJfyWQi-8FKDbeO_ZQamLKJL) [비디오]\n\n#### 나만의 `웹 브라우저` 만들기\n\n* [**Rust**: _브라우저 엔진 만들기_](https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html)\n* [**Python**: _브라우저 엔지니어링_](https://browser.engineering)\n\n#### 나만의 `웹 서버` 만들기\n\n* [**C#**: _처음부터 웹 서버 작성하기_](https://www.codeproject.com/Articles/859108/Writing-a-Web-Server-from-Scratch)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "4PSMJtmYf33bM86BlwTlxpKrS5/UoRQNzNn79WLQ1os=",
        "originContent": "* [**C++**: _How to Create a Compiler_](https://www.youtube.com/watch?v=eF9qWbuQLuw) [video]",
        "translatedContent": "* [**C++**: _컴파일러 만드는 법_](https://www.youtube.com/watch?v=eF9qWbuQLuw) [비디오]"
      },
      {
        "row": 2,
        "rowsha": "0mROMUE795VN/xXbumLYVhGITnk45B/fbdwegyZIpeM=",
        "originContent": "* [**C++**: _Kaleidoscope: Implementing a Language with LLVM_](https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/index.html)",
        "translatedContent": "* [**C++**: _Kaleidoscope: LLVM으로 언어 구현하기_](https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/index.html)"
      },
      {
        "row": 3,
        "rowsha": "rMclDSVcsVKKSdQt2/ZRRwFtpeRmSU+a9PjsLsiirDE=",
        "originContent": "* [**F#**: _Understanding Parser Combinators_](https://fsharpforfunandprofit.com/posts/understanding-parser-combinators/)",
        "translatedContent": "* [**F#**: _파서 컴비네이터 이해하기_](https://fsharpforfunandprofit.com/posts/understanding-parser-combinators/)"
      },
      {
        "row": 4,
        "rowsha": "G1WT4ENtPSxDDDnc0teGnxVfqiAY0jgu55R3ygGIEQE=",
        "originContent": "* [**Elixir**: _Demystifying compilers by writing your own_](https://www.youtube.com/watch?v=zMJYoYwOCd4) [video]",
        "translatedContent": "* [**Elixir**: _직접 컴파일러 작성하며 컴파일러 이해하기_](https://www.youtube.com/watch?v=zMJYoYwOCd4) [비디오]"
      },
      {
        "row": 5,
        "rowsha": "O+R/Qmmq4fylfZxUA/ndChVuVYde1eiPVklvYovebUw=",
        "originContent": "* [**Go**: _The Super Tiny Compiler_](https://github.com/hazbo/the-super-tiny-compiler)",
        "translatedContent": "* [**Go**: _초소형 컴파일러_](https://github.com/hazbo/the-super-tiny-compiler)"
      },
      {
        "row": 6,
        "rowsha": "6EBD9EharSfXgZoTprWxvuRjWWY/j+W4Dlc44dga07M=",
        "originContent": "* [**Go**: _Lexical Scanning in Go_](https://www.youtube.com/watch?v=HxaD_trXwRE) [video]",
        "translatedContent": "* [**Go**: _Go에서 렉시컬 스캐닝_](https://www.youtube.com/watch?v=HxaD_trXwRE) [비디오]"
      },
      {
        "row": 7,
        "rowsha": "/9A0VELXoJD0GB2ZTEgZSo/n0NcM03OCqzaOqeppQJ4=",
        "originContent": "* [**Haskell**: _Let's Build a Compiler_](https://g-ford.github.io/cradle/)",
        "translatedContent": "* [**Haskell**: _컴파일러 만들기_](https://g-ford.github.io/cradle/)"
      },
      {
        "row": 8,
        "rowsha": "WTv76xCabScXeo+8pIRyYTFADbbbqb+Y3PuJFLwH0J4=",
        "originContent": "* [**Haskell**: _Write You a Haskell_](http://dev.stephendiehl.com/fun/)",
        "translatedContent": "* [**Haskell**: _Write You a Haskell_](http://dev.stephendiehl.com/fun/)"
      },
      {
        "row": 9,
        "rowsha": "zEWioD7+Q4jjPE/CJ7eMVwMg2JOfHTpuynIOyGYYf2g=",
        "originContent": "* [**Haskell**: _Write Yourself a Scheme in 48 Hours_](https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours)",
        "translatedContent": "* [**Haskell**: _48시간 안에 Scheme 작성하기_](https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours)"
      },
      {
        "row": 10,
        "rowsha": "Zv6M5Thb/7HkrY0zPYkE9ka2Kdoder8qu4GPTyVxAYU=",
        "originContent": "* [**Haskell**: _Write You A Scheme_](https://www.wespiser.com/writings/wyas/home.html)",
        "translatedContent": "* [**Haskell**: _Write You A Scheme_](https://www.wespiser.com/writings/wyas/home.html)"
      },
      {
        "row": 11,
        "rowsha": "HRLuVYHymi2D4RLMVawkMrE+N8DfDMWyiP+yeaIKpcI=",
        "originContent": "* [**Java**: _Crafting interpreters: A handbook for making programming languages_](http://www.craftinginterpreters.com/)",
        "translatedContent": "* [**Java**: _인터프리터 제작: 프로그래밍 언어 만들기 핸드북_](http://www.craftinginterpreters.com/)"
      },
      {
        "row": 12,
        "rowsha": "B9y8Y4xngW51tD7L46Taacdlj2tlqxV0t6h6vrs6Ous=",
        "originContent": "* [**Java**: _Creating JVM Language_](http://jakubdziworski.github.io/categories.html#Enkel-ref)",
        "translatedContent": "* [**Java**: _JVM 언어 만들기_](http://jakubdziworski.github.io/categories.html#Enkel-ref)"
      },
      {
        "row": 13,
        "rowsha": "K5Wm9DiDqPYGlaQSDHHtgc/bmmdmVHFfpDSR7XiLuto=",
        "originContent": "* [**JavaScript**: _The Super Tiny Compiler_](https://github.com/jamiebuilds/the-super-tiny-compiler)",
        "translatedContent": "* [**JavaScript**: _초소형 컴파일러_](https://github.com/jamiebuilds/the-super-tiny-compiler)"
      },
      {
        "row": 14,
        "rowsha": "TdNs3xSdPURA00e1oHo9FM4n6DrqTkRSgIkBd1kFIag=",
        "originContent": "* [**JavaScript**: _The Super Tiny Interpreter_](https://github.com/keyanzhang/the-super-tiny-interpreter)",
        "translatedContent": "* [**JavaScript**: _초소형 인터프리터_](https://github.com/keyanzhang/the-super-tiny-interpreter)"
      },
      {
        "row": 15,
        "rowsha": "NZX3fDGy4b3YVR/nLM7RFqzin5fyVB2c7OQSe6KTFOI=",
        "originContent": "* [**JavaScript**: _Little Lisp interpreter_](https://maryrosecook.com/blog/post/little-lisp-interpreter)",
        "translatedContent": "* [**JavaScript**: _작은 Lisp 인터프리터_](https://maryrosecook.com/blog/post/little-lisp-interpreter)"
      },
      {
        "row": 16,
        "rowsha": "snIv/kqirvYlf8TQyr6P0IoeYtvoCWgvKbIcYg/4XY8=",
        "originContent": "* [**JavaScript**: _How to implement a programming language in JavaScript_](http://lisperator.net/pltut/)",
        "translatedContent": "* [**JavaScript**: _JavaScript로 프로그래밍 언어 구현하기_](http://lisperator.net/pltut/)"
      },
      {
        "row": 17,
        "rowsha": "wpdue72HvV8lJEKVtYa0D73/w2cNndhJiqEvrHrTzT0=",
        "originContent": "* [**JavaScript**: _Let’s go write a Lisp_](https://idiocy.org/lets-go-write-a-lisp/part-1.html)",
        "translatedContent": "* [**JavaScript**: _Lisp 작성하러 가자_](https://idiocy.org/lets-go-write-a-lisp/part-1.html)"
      },
      {
        "row": 18,
        "rowsha": "BBZoWuY7zQQmU3tRrlHf/oE2s7o1WacO1nLfzvQkOI8=",
        "originContent": "* [**OCaml**: _Writing a C Compiler_](https://norasandler.com/2017/11/29/Write-a-Compiler.html)",
        "translatedContent": "* [**OCaml**: _C 컴파일러 작성하기_](https://norasandler.com/2017/11/29/Write-a-Compiler.html)"
      },
      {
        "row": 19,
        "rowsha": "R5gV7uMY/BCNjI/J6kPLgjmx2xUzTC5qdIivEAfk8bU=",
        "originContent": "* [**OCaml**: _Writing a Lisp, the series_](https://bernsteinbear.com/blog/lisp/)",
        "translatedContent": "* [**OCaml**: _Lisp 작성 시리즈_](https://bernsteinbear.com/blog/lisp/)"
      },
      {
        "row": 20,
        "rowsha": "Q0OoGZw44x7jYlKKQ0D36Kc/8PrVrCtF+UNMlzzwZnE=",
        "originContent": "* [**Pascal**: _Let's Build a Compiler_](https://compilers.iecc.com/crenshaw/)",
        "translatedContent": "* [**Pascal**: _컴파일러 만들기_](https://compilers.iecc.com/crenshaw/)"
      },
      {
        "row": 21,
        "rowsha": "hkEIaGBIe3YMrenfwnVsW0n75uv+Xp4KU0rvVzo78No=",
        "originContent": "* [**Python**: _A Python Interpreter Written in Python_](http://aosabook.org/en/500L/a-python-interpreter-written-in-python.html)",
        "translatedContent": "* [**Python**: _Python으로 작성한 Python 인터프리터_](http://aosabook.org/en/500L/a-python-interpreter-written-in-python.html)"
      },
      {
        "row": 22,
        "rowsha": "TAm6YMamLgo3TW1yzbvubJprsCMWVd7guBvIV5kV4Ew=",
        "originContent": "* [**Python**: _lisp.py: Make your own Lisp interpreter_](http://khamidou.com/compilers/lisp.py/)",
        "translatedContent": "* [**Python**: _lisp.py: 나만의 Lisp 인터프리터 만들기_](http://khamidou.com/compilers/lisp.py/)"
      },
      {
        "row": 23,
        "rowsha": "Z7xXBcpJDQNwFxiirUk/4ycTVvm920JwmnO8GbIF5Xs=",
        "originContent": "* [**Python**: _How to Write a Lisp Interpreter in Python_](http://norvig.com/lispy.html)",
        "translatedContent": "* [**Python**: _Python으로 Lisp 인터프리터 작성하기_](http://norvig.com/lispy.html)"
      },
      {
        "row": 24,
        "rowsha": "eNOY7g7waNBW8rA7fvB53iRzbEEsO9Zi2QMJimSCPWU=",
        "originContent": "* [**Python**: _Let’s Build A Simple Interpreter_](https://ruslanspivak.com/lsbasi-part1/)",
        "translatedContent": "* [**Python**: _간단한 인터프리터 만들기_](https://ruslanspivak.com/lsbasi-part1/)"
      },
      {
        "row": 25,
        "rowsha": "jWEeJmY+BY5+XobVYshNq/dHosDAqDWmcq/j1/QCFjY=",
        "originContent": "* [**Python**: _Make Your Own Simple Interpreted Programming Language_](https://www.youtube.com/watch?v=dj9CBS3ikGA&list=PLZQftyCk7_SdoVexSmwy_tBgs7P0b97yD&index=1) [video]",
        "translatedContent": "* [**Python**: _나만의 간단한 인터프리티드 프로그래밍 언어 만들기_](https://www.youtube.com/watch?v=dj9CBS3ikGA&list=PLZQftyCk7_SdoVexSmwy_tBgs7P0b97yD&index=1) [비디오]"
      },
      {
        "row": 26,
        "rowsha": "xj43UDDaMvSqJM8gT1jrUG5WTdOU0y/DXCGYIT3j+b4=",
        "originContent": "* [**Python**: _From Source Code To Machine Code: Build Your Own Compiler From Scratch_](https://build-your-own.org/compiler/)",
        "translatedContent": "* [**Python**: _소스 코드에서 머신 코드까지: 나만의 컴파일러 만들기_](https://build-your-own.org/compiler/)"
      },
      {
        "row": 27,
        "rowsha": "WKFXYW5H5cgEljjzkpzwsMTXJCK4TvuNLC8CDJtbmr8=",
        "originContent": "* [**Racket**: _Beautiful Racket: How to make your own programming languages with Racket_](https://beautifulracket.com/)",
        "translatedContent": "* [**Racket**: _Beautiful Racket: Racket으로 나만의 프로그래밍 언어 만들기_](https://beautifulracket.com/)"
      },
      {
        "row": 28,
        "rowsha": "u5RIWRJ/D7TZaJEf3+VODll29XACkg40KaBqH2YPr6A=",
        "originContent": "* [**Ruby**: _A Compiler From Scratch_](https://www.destroyallsoftware.com/screencasts/catalog/a-compiler-from-scratch)",
        "translatedContent": "* [**Ruby**: _처음부터 만드는 컴파일러_](https://www.destroyallsoftware.com/screencasts/catalog/a-compiler-from-scratch)"
      },
      {
        "row": 29,
        "rowsha": "PwHajujanETnNMugAlYu1wmLg39CbwmVE8jnmGmMHug=",
        "originContent": "* [**Ruby**: _Markdown compiler from scratch in Ruby_](https://blog.beezwax.net/2017/07/07/writing-a-markdown-compiler/)",
        "translatedContent": "* [**Ruby**: _루비로 만드는 마크다운 컴파일러_](https://blog.beezwax.net/2017/07/07/writing-a-markdown-compiler/)"
      },
      {
        "row": 30,
        "rowsha": "nzJhr4kc5kvHHA76Zo3zYmAofcqkYQiQWW2FK6Ee5VU=",
        "originContent": "* [**Rust**: _So You Want to Build a Language VM_](https://blog.subnetzero.io/post/building-language-vm-part-00/)",
        "translatedContent": "* [**Rust**: _언어 VM 만들기_](https://blog.subnetzero.io/post/building-language-vm-part-00/)"
      },
      {
        "row": 31,
        "rowsha": "EII1Di5oTzYyPFZFjJsQjj7pUyCWofJbQ6Ejt2jF/wg=",
        "originContent": "* [**Rust**: _Learning Parser Combinators With Rust_](https://bodil.lol/parser-combinators/)",
        "translatedContent": "* [**Rust**: _Rust로 파서 컴비네이터 배우기_](https://bodil.lol/parser-combinators/)"
      },
      {
        "row": 32,
        "rowsha": "QZEsQYPn1WTlIJ2K3HIUCYE0EfWbzl5mL+avPF16jVE=",
        "originContent": "* [**Swift**: _Building a LISP from scratch with Swift_](https://www.uraimo.com/2017/02/05/building-a-lisp-from-scratch-with-swift/)",
        "translatedContent": "* [**Swift**: _Swift로 처음부터 LISP 만들기_](https://www.uraimo.com/2017/02/05/building-a-lisp-from-scratch-with-swift/)"
      },
      {
        "row": 33,
        "rowsha": "wb2lE5SwiBlhqXTyjgurCSlo/+ufUt9Aqsxu3TR49aY=",
        "originContent": "* [**TypeScript**: _Build your own WebAssembly Compiler_](https://blog.scottlogic.com/2019/05/17/webassembly-compiler.html)",
        "translatedContent": "* [**TypeScript**: _나만의 WebAssembly 컴파일러 만들기_](https://blog.scottlogic.com/2019/05/17/webassembly-compiler.html)"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "jEPVpOjIdI4Ggnj1I0hiUlbEIYnVSQ/1xMhhr74s6Qg=",
        "originContent": "#### Build your own `Regex Engine`",
        "translatedContent": "#### 나만의 `정규 표현식 엔진` 만들기"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "2hx+RVnG6n6Cq1g16qTZ1bNvvkdIrq0N7YTCpjmCGnQ=",
        "originContent": "* [**C**: _A Regular Expression Matcher_](https://www.cs.princeton.edu/courses/archive/spr09/cos333/beautiful.html)",
        "translatedContent": "* [**C**: _정규 표현식 매처_](https://www.cs.princeton.edu/courses/archive/spr09/cos333/beautiful.html)"
      },
      {
        "row": 38,
        "rowsha": "QkiKFZKprhsrOsG+u+DloD/WBvnKSPbGqpMyeDADctE=",
        "originContent": "* [**C**: _Regular Expression Matching Can Be Simple And Fast_](https://swtch.com/~rsc/regexp/regexp1.html)",
        "translatedContent": "* [**C**: _정규 표현식 매칭은 간단하고 빠를 수 있다_](https://swtch.com/~rsc/regexp/regexp1.html)"
      },
      {
        "row": 39,
        "rowsha": "4anbBHE/y0L0iA43U+9NbMgMZCPU0XH6whSjmQJI//c=",
        "originContent": "* [**Go**: _How to build a regex engine from scratch_](https://rhaeguard.github.io/posts/regex)",
        "translatedContent": "* [**Go**: _처음부터 만드는 정규식 엔진_](https://rhaeguard.github.io/posts/regex)"
      },
      {
        "row": 40,
        "rowsha": "GFNQcmMJ/1ysPtBuq1zQKzZqOOvdMXFZlWi247mJAvg=",
        "originContent": "* [**JavaScript**: _Build a Regex Engine in Less than 40 Lines of Code_](https://nickdrane.com/build-your-own-regex/)",
        "translatedContent": "* [**JavaScript**: _40줄 미만 코드로 정규식 엔진 만들기_](https://nickdrane.com/build-your-own-regex/)"
      },
      {
        "row": 41,
        "rowsha": "iU+hCq4z3EMNHPHUT9WFoG/taNw1UaSVBdO1fvXS6dI=",
        "originContent": "* [**JavaScript**: _How to implement regular expressions in functional javascript using derivatives_](http://dpk.io/dregs/toydregs)",
        "translatedContent": "* [**JavaScript**: _함수형 JavaScript에서 유도함수를 사용해 정규 표현식 구현하기_](http://dpk.io/dregs/toydregs)"
      },
      {
        "row": 42,
        "rowsha": "ijtScZXVRiMhRsue0rd9NvHb67O+D06NX1+/cfyozLU=",
        "originContent": "* [**JavaScript**: _Implementing a Regular Expression Engine_](https://deniskyashif.com/2019/02/17/implementing-a-regular-expression-engine/) ",
        "translatedContent": "* [**JavaScript**: _정규 표현식 엔진 구현하기_](https://deniskyashif.com/2019/02/17/implementing-a-regular-expression-engine/) "
      },
      {
        "row": 43,
        "rowsha": "Qq7HvFAI1b7vH4K5WtVgmoIzAkDnCOPF9M2GSrtqxNI=",
        "originContent": "* [**Perl**: _How Regexes Work_](https://perl.plover.com/Regex/article.html)",
        "translatedContent": "* [**Perl**: _정규식 작동 원리_](https://perl.plover.com/Regex/article.html)"
      },
      {
        "row": 44,
        "rowsha": "C+dbZn+0+38KYyF9aa9WX1VyleUqm3fbk1kRVBpYKeU=",
        "originContent": "* [**Python**: _Build Your Own Regular Expression Engines: Backtracking, NFA, DFA_](https://build-your-own.org/b2a/r0_intro)",
        "translatedContent": "* [**Python**: _나만의 정규 표현식 엔진 만들기: 백트래킹, NFA, DFA_](https://build-your-own.org/b2a/r0_intro)"
      },
      {
        "row": 45,
        "rowsha": "hTLn+XTDWej64LzQV5r7JdqIOhvpB2VGwgXorJTCR4A=",
        "originContent": "* [**Scala**: _No Magic: Regular Expressions_](https://rcoh.svbtle.com/no-magic-regular-expressions)",
        "translatedContent": "* [**Scala**: _매직 없이: 정규 표현식_](https://rcoh.svbtle.com/no-magic-regular-expressions)"
      },
      {
        "row": 46,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 47,
        "rowsha": "e99Bz9QkmssuzhveMuvIt9sFaQFQS/rknA7LybbYhNQ=",
        "originContent": "#### Build your own `Search Engine`",
        "translatedContent": "#### 나만의 `검색 엔진` 만들기"
      },
      {
        "row": 48,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 49,
        "rowsha": "nh+J3TkG7ssh+F4wYn3TE3tXd9iD3TXcp7+MsjG2am8=",
        "originContent": "* [**CSS**: _A search engine in CSS_](https://stories.algolia.com/a-search-engine-in-css-b5ec4e902e97)",
        "translatedContent": "* [**CSS**: _CSS로 만든 검색 엔진_](https://stories.algolia.com/a-search-engine-in-css-b5ec4e902e97)"
      },
      {
        "row": 50,
        "rowsha": "7A1qv6FwFHn7cuhjCj9CXqr/8n4jJ2mh1YoRmLxmXlc=",
        "originContent": "* [**Python**: _Building a search engine using Redis and redis-py_](http://www.dr-josiah.com/2010/07/building-search-engine-using-redis-and.html)",
        "translatedContent": "* [**Python**: _Redis와 redis-py로 검색 엔진 만들기_](http://www.dr-josiah.com/2010/07/building-search-engine-using-redis-and.html)"
      },
      {
        "row": 51,
        "rowsha": "aiW5GHpOqKWQpL8SLmwuW0i2yKA5V8W2KX3Xvidy9fk=",
        "originContent": "* [**Python**: _Building a Vector Space Indexing Engine in Python_](https://boyter.org/2010/08/build-vector-space-search-engine-python/)",
        "translatedContent": "* [**Python**: _Python으로 벡터 공간 인덱싱 엔진 만들기_](https://boyter.org/2010/08/build-vector-space-search-engine-python/)"
      },
      {
        "row": 52,
        "rowsha": "H95aAyU00FA36xYZH95Pr/xuv4DUeVqc4Gr1VPFn9C4=",
        "originContent": "* [**Python**: _Building A Python-Based Search Engine_](https://www.youtube.com/watch?v=cY7pE7vX6MU) [video]",
        "translatedContent": "* [**Python**: _Python 기반 검색 엔진 만들기_](https://www.youtube.com/watch?v=cY7pE7vX6MU) [비디오]"
      },
      {
        "row": 53,
        "rowsha": "U+mXlq1L8W5C6V9mMWOrx2unUrfPQ66ON43Vs0SSkxQ=",
        "originContent": "* [**Python**: _Making text search learn from feedback_](https://medium.com/filament-ai/making-text-search-learn-from-feedback-4fe210fd87b0)",
        "translatedContent": "* [**Python**: _피드백으로 학습하는 텍스트 검색 만들기_](https://medium.com/filament-ai/making-text-search-learn-from-feedback-4fe210fd87b0)"
      },
      {
        "row": 54,
        "rowsha": "+lOmrw2IBW3ZooyWFNtuIaRKi8J83hOAo1rZ+xXcMNM=",
        "originContent": "* [**Python**: _Finding Important Words in Text Using TF-IDF_](https://stevenloria.com/tf-idf/)",
        "translatedContent": "* [**Python**: _TF-IDF로 텍스트에서 중요한 단어 찾기_](https://stevenloria.com/tf-idf/)"
      },
      {
        "row": 55,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 56,
        "rowsha": "r0ToShVuH85VGJP5XQmPeXExxIQ+BApzBWoWM4I8m44=",
        "originContent": "#### Build your own `Shell`",
        "translatedContent": "#### 나만의 `쉘` 만들기"
      },
      {
        "row": 57,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 58,
        "rowsha": "p0m1eebEHsNz5o5EjeqIWzqEVglRem1qvjEwI/Bt9dI=",
        "originContent": "* [**C**: _Tutorial - Write a Shell in C_](https://brennan.io/2015/01/16/write-a-shell-in-c/)",
        "translatedContent": "* [**C**: _튜토리얼 - C로 쉘 작성하기_](https://brennan.io/2015/01/16/write-a-shell-in-c/)"
      },
      {
        "row": 59,
        "rowsha": "GZLdESLgjEVN3nxgeFJWz+k3wID+Z3qxIoLjrv3x5As=",
        "originContent": "* [**C**: _Let's build a shell!_](https://github.com/kamalmarhubi/shell-workshop)",
        "translatedContent": "* [**C**: _쉘 만들기!_](https://github.com/kamalmarhubi/shell-workshop)"
      },
      {
        "row": 60,
        "rowsha": "wPjNdBtOXSC7LAHZdF+qurGzXwcmMRtxoI3hnYqA0oQ=",
        "originContent": "* [**C**: _Writing a UNIX Shell_](https://indradhanush.github.io/blog/writing-a-unix-shell-part-1/)",
        "translatedContent": "* [**C**: _유닉스 쉘 작성하기_](https://indradhanush.github.io/blog/writing-a-unix-shell-part-1/)"
      },
      {
        "row": 61,
        "rowsha": "SsbjuAyiWPfQr3oe84HZWtkYz8vgnPNquTYc2Szs9XM=",
        "originContent": "* [**C**: _Build Your Own Shell_](https://github.com/tokenrove/build-your-own-shell)",
        "translatedContent": "* [**C**: _나만의 쉘 만들기_](https://github.com/tokenrove/build-your-own-shell)"
      },
      {
        "row": 62,
        "rowsha": "E3IgtaR0mOGd5pOYnwmOfi2D9goqYXKClmn35qsXxiQ=",
        "originContent": "* [**C**: Write a shell in C](https://danishpraka.sh/posts/write-a-shell/)",
        "translatedContent": "* [**C**: C로 쉘 작성하기](https://danishpraka.sh/posts/write-a-shell/)"
      },
      {
        "row": 63,
        "rowsha": "EsStWmYQfY2KLtQbZGyMmg1leH7iDrAr1Eyo1HLNOz8=",
        "originContent": "* [**Go**: _Writing a simple shell in Go_](https://sj14.gitlab.io/post/2018-07-01-go-unix-shell/)",
        "translatedContent": "* [**Go**: _Go로 간단한 쉘 만들기_](https://sj14.gitlab.io/post/2018-07-01-go-unix-shell/)"
      },
      {
        "row": 64,
        "rowsha": "zNjFUKUtbT7IMFv+b2VetM+HY2vyhQg2FvB6w6CznIo=",
        "originContent": "* [**Rust**: _Build Your Own Shell using Rust_](https://www.joshmcguigan.com/blog/build-your-own-shell-rust/)",
        "translatedContent": "* [**Rust**: _Rust로 나만의 쉘 만들기_](https://www.joshmcguigan.com/blog/build-your-own-shell-rust/)"
      },
      {
        "row": 65,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 66,
        "rowsha": "/YUV5VbnRSn2bb5QyG6YS6IbFHdtJD40D4jD5YhWTc8=",
        "originContent": "#### Build your own `Template Engine`",
        "translatedContent": "#### 나만의 `템플릿 엔진` 만들기"
      },
      {
        "row": 67,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 68,
        "rowsha": "fkLvTjwub7GQb9xNMt1jFLktTQWcTLn0xZmBQgK3gg0=",
        "originContent": "* [**JavaScript**: _JavaScript template engine in just 20 lines_](http://krasimirtsonev.com/blog/article/Javascript-template-engine-in-just-20-line)",
        "translatedContent": "* [**JavaScript**: _20줄로 만드는 JavaScript 템플릿 엔진_](http://krasimirtsonev.com/blog/article/Javascript-template-engine-in-just-20-line)"
      },
      {
        "row": 69,
        "rowsha": "NCTxe5ztKtUF59Ew6BxRuHj+vNHPSgVrc70enqTwXDE=",
        "originContent": "* [**JavaScript**: _Understanding JavaScript Micro-Templating_](https://medium.com/wdstack/understanding-javascript-micro-templating-f37a37b3b40e)",
        "translatedContent": "* [**JavaScript**: _JavaScript 마이크로 템플레이팅 이해하기_](https://medium.com/wdstack/understanding-javascript-micro-templating-f37a37b3b40e)"
      },
      {
        "row": 70,
        "rowsha": "n2wTXhuUQemJP4cC6K8lkbCBI3KtgV+s00KAG5nCApg=",
        "originContent": "* [**Python**: _Approach: Building a toy template engine in Python_](http://alexmic.net/building-a-template-engine/)",
        "translatedContent": "* [**Python**: _장난감 템플릿 엔진 만들기 접근법_](http://alexmic.net/building-a-template-engine/)"
      },
      {
        "row": 71,
        "rowsha": "M/Y2dqq+j6dVahbquB+qq22aWduM/EnKLq1Yr6THJpc=",
        "originContent": "* [**Python**: _A Template Engine_](http://aosabook.org/en/500L/a-template-engine.html)",
        "translatedContent": "* [**Python**: _템플릿 엔진_](http://aosabook.org/en/500L/a-template-engine.html)"
      },
      {
        "row": 72,
        "rowsha": "7hPiiN5Ia2sehkGeS/DmTLW1ZHfdRUkZFd1FuoondK4=",
        "originContent": "* [**Ruby**: _How to write a template engine in less than 30 lines of code_](http://bits.citrusbyte.com/how-to-write-a-template-library/)",
        "translatedContent": "* [**Ruby**: _30줄 미만 코드로 템플릿 엔진 작성하기_](http://bits.citrusbyte.com/how-to-write-a-template-library/)"
      },
      {
        "row": 73,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 74,
        "rowsha": "htdZB5tPnhRUu35L3N1pCgN7opLLRBTGYqdJXOxLbvU=",
        "originContent": "#### Build your own `Text Editor`",
        "translatedContent": "#### 나만의 `텍스트 에디터` 만들기"
      },
      {
        "row": 75,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 76,
        "rowsha": "lf70b41Krjy0LANrb8k1zTIjQYAS6UNiLQq2tur+6kA=",
        "originContent": "* [**C**: _Build Your Own Text Editor_](https://viewsourcecode.org/snaptoken/kilo/)",
        "translatedContent": "* [**C**: _나만의 텍스트 에디터 만들기_](https://viewsourcecode.org/snaptoken/kilo/)"
      },
      {
        "row": 77,
        "rowsha": "0GAPQFpYfLIYok8SIVuO2D77+aOzakuuNUwEWl7swkE=",
        "originContent": "* [**C++**: _Designing a Simple Text Editor_](http://www.fltk.org/doc-1.1/editor.html)",
        "translatedContent": "* [**C++**: _간단한 텍스트 에디터 설계_](http://www.fltk.org/doc-1.1/editor.html)"
      },
      {
        "row": 78,
        "rowsha": "4s+ogH2wt3IQcAFfBKSlomKB0X5wv+5sDWuFMuQ+Ws4=",
        "originContent": "* [**Python**: _Python Tutorial: Make Your Own Text Editor_](https://www.youtube.com/watch?v=xqDonHEYPgA) [video]",
        "translatedContent": "* [**Python**: _Python 튜토리얼: 나만의 텍스트 에디터 만들기_](https://www.youtube.com/watch?v=xqDonHEYPgA) [비디오]"
      },
      {
        "row": 79,
        "rowsha": "f/2LY7a6LpkPcRTA5+3MbxFT44v2UwF4KZtGKT2bXT4=",
        "originContent": "* [**Python**: _Create a Simple Python Text Editor!_](http://www.instructables.com/id/Create-a-Simple-Python-Text-Editor/)",
        "translatedContent": "* [**Python**: _간단한 Python 텍스트 에디터 만들기!_](http://www.instructables.com/id/Create-a-Simple-Python-Text-Editor/)"
      },
      {
        "row": 80,
        "rowsha": "tTCQdIijIt2IxPLKGL42Ilx9YN5HMOsMbiq4LuI2Mz8=",
        "originContent": "* [**Ruby**: _Build a Collaborative Text Editor Using Rails_](https://blog.aha.io/text-editor/)",
        "translatedContent": "* [**Ruby**: _Rails로 협업 텍스트 에디터 만들기_](https://blog.aha.io/text-editor/)"
      },
      {
        "row": 81,
        "rowsha": "bOXcw/T/9k2RsobiMJvwdZ40ZwjAgoNWTPkkPdcqMg8=",
        "originContent": "* [**Rust**: _Hecto: Build your own text editor in Rust_ ](https://www.flenker.blog/hecto/)",
        "translatedContent": "* [**Rust**: _Hecto: Rust로 나만의 텍스트 에디터 만들기_](https://www.flenker.blog/hecto/)"
      },
      {
        "row": 82,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 83,
        "rowsha": "K/78aMpQ2ZKKqiv2mx05TJLb2CxqEJf3uL9jrUQFOwE=",
        "originContent": "#### Build your own `Visual Recognition System`",
        "translatedContent": "#### 나만의 `시각 인식 시스템` 만들기"
      },
      {
        "row": 84,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 85,
        "rowsha": "IAFnTIuk00faPI+aembQFhpZz1TPqU1M1LITttYkvo0=",
        "originContent": "* [**Python**: _Developing a License Plate Recognition System with Machine Learning in Python_](https://medium.com/devcenter/developing-a-license-plate-recognition-system-with-machine-learning-in-python-787833569ccd)",
        "translatedContent": "* [**Python**: _Python과 머신러닝으로 번호판 인식 시스템 개발하기_](https://medium.com/devcenter/developing-a-license-plate-recognition-system-with-machine-learning-in-python-787833569ccd)"
      },
      {
        "row": 86,
        "rowsha": "QtSHaHqLnqfZ02H5iByNygD6gQvrdikHQr0gYknjPDI=",
        "originContent": "* [**Python**: _Building a Facial Recognition Pipeline with Deep Learning in Tensorflow_](https://hackernoon.com/building-a-facial-recognition-pipeline-with-deep-learning-in-tensorflow-66e7645015b8)",
        "translatedContent": "* [**Python**: _Tensorflow로 딥러닝 얼굴 인식 파이프라인 만들기_](https://hackernoon.com/building-a-facial-recognition-pipeline-with-deep-learning-in-tensorflow-66e7645015b8)"
      },
      {
        "row": 87,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 88,
        "rowsha": "7oF2B4K+CjphjBtDPpJ06+ROSV0TSdBOcN0xQU/k6gY=",
        "originContent": "#### Build your own `Voxel Engine`",
        "translatedContent": "#### 나만의 `복셀 엔진` 만들기"
      },
      {
        "row": 89,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 90,
        "rowsha": "01Cnvghfp9HdkvqY6UZfS5dYTHMoffOZ+iHbniIng88=",
        "originContent": "* [**C++**: _Let's Make a Voxel Engine_](https://sites.google.com/site/letsmakeavoxelengine/home)",
        "translatedContent": "* [**C++**: _복셀 엔진 만들기_](https://sites.google.com/site/letsmakeavoxelengine/home)"
      },
      {
        "row": 91,
        "rowsha": "DL7dEinzpoK2zkMZTVJjKKt/ggUquh8b1kQDLyaN7Ho=",
        "originContent": "* [**Java**: _Java Voxel Engine Tutorial_](https://www.youtube.com/watch?v=QZ4Vk2PkPZk&list=PL80Zqpd23vJfyWQi-8FKDbeO_ZQamLKJL) [video]",
        "translatedContent": "* [**Java**: _Java 복셀 엔진 튜토리얼_](https://www.youtube.com/watch?v=QZ4Vk2PkPZk&list=PL80Zqpd23vJfyWQi-8FKDbeO_ZQamLKJL) [비디오]"
      },
      {
        "row": 92,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 93,
        "rowsha": "/NqoyuC2TNQfEBVAjlp+5/sfb0QQEDGRAEXZCSU6rGE=",
        "originContent": "#### Build your own `Web Browser`",
        "translatedContent": "#### 나만의 `웹 브라우저` 만들기"
      },
      {
        "row": 94,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 95,
        "rowsha": "324p+079fhq88B2jH5JWRWHzGlR5PHjjcyd+6D64t8o=",
        "originContent": "* [**Rust**: _Let's build a browser engine_](https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html)",
        "translatedContent": "* [**Rust**: _브라우저 엔진 만들기_](https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html)"
      },
      {
        "row": 96,
        "rowsha": "8ZySGpkOykZldQ4bg8RDpVD0SfczVPF4EBAGQWxVjZ4=",
        "originContent": "* [**Python**: _Browser Engineering_](https://browser.engineering)",
        "translatedContent": "* [**Python**: _브라우저 엔지니어링_](https://browser.engineering)"
      },
      {
        "row": 97,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 98,
        "rowsha": "d728GfI1Hb2/kybgJ8gNZ5olD6dQti5r0kaxGiGZO0c=",
        "originContent": "#### Build your own `Web Server`",
        "translatedContent": "#### 나만의 `웹 서버` 만들기"
      },
      {
        "row": 99,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 100,
        "rowsha": "/6M65JWQWII5+zqwi/c8KiazxRID5gvzh6/BJIexoc4=",
        "originContent": "* [**C#**: _Writing a Web Server from Scratch_](https://www.codeproject.com/Articles/859108/Writing-a-Web-Server-from-Scratch)",
        "translatedContent": "* [**C#**: _처음부터 웹 서버 작성하기_](https://www.codeproject.com/Articles/859108/Writing-a-Web-Server-from-Scratch)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 5,
    "Content": "* [**Node.js**: _Build Your Own Web Server From Scratch In JavaScript_](https://build-your-own.org/webserver/)\n* [**Node.js**: _Let's code a web server from scratch with NodeJS Streams_](https://www.codementor.io/@ziad-saab/let-s-code-a-web-server-from-scratch-with-nodejs-streams-h4uc9utji)\n* [**Node.js**: _lets-build-express_](https://github.com/antoaravinth/lets-build-express)\n* [**PHP**: _Writing a webserver in pure PHP_](http://station.clancats.com/writing-a-webserver-in-pure-php/)\n* [**Python**: _A Simple Web Server_](http://aosabook.org/en/500L/a-simple-web-server.html)\n* [**Python**: _Let’s Build A Web Server._](https://ruslanspivak.com/lsbaws-part1/)\n* [**Python**: _Web application from scratch_](https://defn.io/2018/02/25/web-app-from-scratch-01/)\n* [**Python**: _Building a basic HTTP Server from scratch in Python_](http://joaoventura.net/blog/2017/python-webserver/)\n* [**Python**: _Implementing a RESTful Web API with Python & Flask_](http://blog.luisrei.com/articles/flaskrest.html)\n* [**Ruby**: _Building a simple websockets server from scratch in Ruby_](http://blog.honeybadger.io/building-a-simple-websockets-server-from-scratch-in-ruby/)\n\n#### Uncategorized\n\n* [**(any)**: _From NAND to Tetris: Building a Modern Computer From First Principles_](http://nand2tetris.org/)\n* [**Alloy**: _The Same-Origin Policy_](http://aosabook.org/en/500L/the-same-origin-policy.html)\n* [**C**: _How to Write a Video Player in Less Than 1000 Lines_](http://dranger.com/ffmpeg/ffmpeg.html)\n* [**C**: _Learn how to write a hash table in C_](https://github.com/jamesroutley/write-a-hash-table)\n* [**C**: _The very basics of a terminal emulator_](https://www.uninformativ.de/blog/postings/2018-02-24/0/POSTING-en.html)\n* [**C**: _Write a System Call_](https://brennan.io/2016/11/14/kernel-dev-ep3/)\n* [**C**: _Sol - An MQTT broker from scratch_](https://codepr.github.io/posts/sol-mqtt-broker)\n* [**C++**: _Build your own VR headset for $200_](https://github.com/relativty/Relativ)\n* [**C++**: _How X Window Managers work and how to write one_](https://seasonofcode.com/posts/how-x-window-managers-work-and-how-to-write-one-part-i.html)\n* [**C++**: _Writing a Linux Debugger_](https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/)\n* [**C++**: _How a 64k intro is made_](http://www.lofibucket.com/articles/64k_intro.html)\n* [**C++**: _Make your own Game Engine_](https://www.youtube.com/playlist?list=PLlrATfBNZ98dC-V-N3m0Go4deliWHPFwT)\n* [**C#**: _C# Networking: Create a TCP chater server, TCP games, UDP Pong and more_](https://16bpp.net/tutorials/csharp-networking)\n* [**C#**: _Loading and rendering 3D skeletal animations from scratch in C# and GLSL_](https://www.seanjoflynn.com/research/skeletal-animation.html)\n* [**Clojure**: _Building a spell-checker_](https://bernhardwenzel.com/articles/clojure-spellchecker/)\n* [**Go**: _Build A Simple Terminal Emulator In 100 Lines of Golang_](https://ishuah.com/2021/03/10/build-a-terminal-emulator-in-100-lines-of-go/)\n* [**Go**: _Let's Create a Simple Load Balancer_](https://kasvith.me/posts/lets-create-a-simple-lb-go/)\n* [**Go**: _Video Encoding from Scratch_](https://github.com/kevmo314/codec-from-scratch)\n* [**Java**: _How to Build an Android Reddit App_](https://www.youtube.com/playlist?list=PLgCYzUzKIBE9HUJU-upNvl3TRVAo9W47y) [video]\n* [**JavaScript**: _Build Your Own Module Bundler - Minipack_](https://github.com/ronami/minipack)\n* [**JavaScript**: _Learn JavaScript Promises by Building a Promise from Scratch_](https://levelup.gitconnected.com/understand-javascript-promises-by-building-a-promise-from-scratch-84c0fd855720)\n* [**JavaScript**: _Implementing promises from scratch (TDD way)_](https://www.mauriciopoppe.com/notes/computer-science/computation/promises/)\n* [**JavaScript**: _Implement your own — call(), apply() and bind() method in JavaScript_](https://blog.usejournal.com/implement-your-own-call-apply-and-bind-method-in-javascript-42cc85dba1b)\n* [**JavaScript**: _JavaScript Algorithms and Data Structures_](https://github.com/trekhleb/javascript-algorithms)\n* [**JavaScript**: _Build a ride hailing app with React Native_](https://pusher.com/tutorials/ride-hailing-react-native)\n* [**JavaScript**: _Build Your Own AdBlocker in (Literally) 10 Minutes_](https://levelup.gitconnected.com/building-your-own-adblocker-in-literally-10-minutes-1eec093b04cd)\n* [**Kotlin**: _Build Your Own Cache_](https://github.com/kezhenxu94/cache-lite)\n* [**Lua**: _Building a CDN from Scratch to Learn about CDN_](https://github.com/leandromoreira/cdn-up-and-running)\n* [**Nim**: _Writing a Redis Protocol Parser_](https://xmonader.github.io/nimdays/day12_resp.html)\n* [**Nim**: _Writing a Build system_](https://xmonader.github.io/nimdays/day11_buildsystem.html)\n* [**Nim**: _Writing a MiniTest Framework_](https://xmonader.github.io/nimdays/day08_minitest.html)\n* [**Nim**: _Writing a DMIDecode Parser_](https://xmonader.github.io/nimdays/day01_dmidecode.html)\n* [**Nim**: _Writing a INI Parser_](https://xmonader.github.io/nimdays/day05_iniparser.html)\n* [**Nim**: _Writing a Link Checker_](https://xmonader.github.io/nimdays/day04_asynclinkschecker.html)\n* [**Nim**: _Writing a URL Shortening Service_](https://xmonader.github.io/nimdays/day07_shorturl.html)\n* [**Node.js**: _Build a static site generator in 40 lines with Node.js_](https://www.webdevdrops.com/en/build-static-site-generator-nodejs-8969ebe34b22/)\n* [**Node.js**: _Building A Simple Single Sign On(SSO) Server And Solution From Scratch In Node.js._](https://codeburst.io/building-a-simple-single-sign-on-sso-server-and-solution-from-scratch-in-node-js-ea6ee5fdf340)\n* [**Node.js**: _How to create a real-world Node CLI app with Node_](https://medium.freecodecamp.org/how-to-create-a-real-world-node-cli-app-with-node-391b727bbed3)\n* [**Node.js**: _Build a DNS Server in Node.js_](https://engineerhead.github.io/dns-server/)\n* [**PHP**: _Write your own MVC from scratch in PHP_ ](https://chaitya62.github.io/2018/04/29/Writing-your-own-MVC-from-Scratch-in-PHP.html)\n* [**PHP**: _Make your own blog_](https://ilovephp.jondh.me.uk/en/tutorial/make-your-own-blog)\n* [**PHP**: _Modern PHP Without a Framework_](https://kevinsmith.io/modern-php-without-a-framework)\n* [**PHP**: _Code a Web Search Engine in PHP_](https://boyter.org/2013/01/code-for-a-search-engine-in-php-part-1/)\n* [**Python**: _Build a Deep Learning Library_](https://www.youtube.com/watch?v=o64FV-ez6Gw) [video]\n* [**Python**: _How to Build a Kick-Ass Mobile Document Scanner in Just 5 Minutes_](https://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/)\n* [**Python**: _Continuous Integration System_](http://aosabook.org/en/500L/a-continuous-integration-system.html)\n* [**Python**: _Recommender Systems in Python: Beginner Tutorial_](https://www.datacamp.com/community/tutorials/recommender-systems-python)\n* [**Python**: _Write SMS-spam detector with Scikit-learn_](https://medium.com/@kopilov.vlad/detect-sms-spam-in-kaggle-with-scikit-learn-5f6afa7a3ca2)\n* [**Python**: _A Simple Content-Based Recommendation Engine in Python_](http://blog.untrod.com/2016/06/simple-similar-products-recommendation-engine-in-python.html)\n* [**Python**: _Stock Market Predictions with LSTM in Python_](https://www.datacamp.com/community/tutorials/lstm-python-stock-market)\n* [**Python**: _Building a simple Generative Adversarial Network (GAN) using Tensorflow_](https://blog.paperspace.com/implementing-gans-in-tensorflow/)\n* [**Python**: _Learn ML Algorithms by coding: Decision Trees_](https://lethalbrains.com/learn-ml-algorithms-by-coding-decision-trees-439ac503c9a4)\n* [**Python**: _JSON Decoding Algorithm_](https://github.com/cheery/json-algorithm)\n* [**Python**: _Build your own Git plugin with python_](https://joshburns-xyz.vercel.app/posts/build-your-own-git-plugin)\n* [**Ruby**: _A Pedometer in the Real World_](http://aosabook.org/en/500L/a-pedometer-in-the-real-world.html)\n* [**Ruby**: _Creating a Linux Desktop application with Ruby_](https://iridakos.com/tutorials/2018/01/25/creating-a-gtk-todo-application-with-ruby)\n* [**Rust**: _Building a DNS server in Rust_](https://github.com/EmilHernvall/dnsguide/blob/master/README.md)\n* [**Rust**: _Writing Scalable Chat Service from Scratch_](https://nbaksalyar.github.io/2015/07/10/writing-chat-in-rust.html)\n* [**Rust**: _WebGL + Rust: Basic Water Tutorial_](https://www.chinedufn.com/3d-webgl-basic-water-tutorial/)\n* [**TypeScript**: _Tiny Package Manager: Learns how npm or Yarn works_](https://github.com/g-plane/tiny-package-manager)\n\n## Contribute \n* Submissions welcome, just send a PR, or [create an issue](https://github.com/codecrafters-io/build-your-own-x/issues/new)\n* Help us review [pending submissions](https://github.com/codecrafters-io/build-your-own-x/issues) by leaving comments and \"reactions\"\n\n## Origins & License\n\n[![CC0](https://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)\n\nThis repository is the work of [many contributors](https://github.com/codecrafters-io/build-your-own-x/graphs/contributors). It was started by [Daniel Stefanovic](https://github.com/danistefanovic), and is now maintained by [CodeCrafters, Inc.](https://codecrafters.io) To the extent possible under law, [CodeCrafters, Inc.](https://codecrafters.io) has waived all copyright and related or neighboring rights to this work.\n",
    "ContentSha": "A/qPoes/EjJ6ttVy1qTe1QEep0vYt74wmpY+PoAC9Q0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [**Node.js**: _JavaScript로 나만의 웹 서버를 처음부터 만들어보기_](https://build-your-own.org/webserver/)\n* [**Node.js**: _NodeJS 스트림으로 웹 서버를 처음부터 코딩해보기_](https://www.codementor.io/@ziad-saab/let-s-code-a-web-server-from-scratch-with-nodejs-streams-h4uc9utji)\n* [**Node.js**: _lets-build-express_](https://github.com/antoaravinth/lets-build-express)\n* [**PHP**: _순수 PHP로 웹 서버 작성하기_](http://station.clancats.com/writing-a-webserver-in-pure-php/)\n* [**Python**: _간단한 웹 서버_](http://aosabook.org/en/500L/a-simple-web-server.html)\n* [**Python**: _웹 서버를 만들어보자._](https://ruslanspivak.com/lsbaws-part1/)\n* [**Python**: _처음부터 만드는 웹 애플리케이션_](https://defn.io/2018/02/25/web-app-from-scratch-01/)\n* [**Python**: _Python으로 처음부터 기본 HTTP 서버 만들기_](http://joaoventura.net/blog/2017/python-webserver/)\n* [**Python**: _Python & Flask로 RESTful 웹 API 구현하기_](http://blog.luisrei.com/articles/flaskrest.html)\n* [**Ruby**: _Ruby로 처음부터 간단한 웹소켓 서버 만들기_](http://blog.honeybadger.io/building-a-simple-websockets-server-from-scratch-in-ruby/)\n\n#### 기타 분류 없음\n\n* [**(any)**: _NAND부터 Tetris까지: 근본 원리부터 현대 컴퓨터 만들기_](http://nand2tetris.org/)\n* [**Alloy**: _동일 출처 정책_](http://aosabook.org/en/500L/the-same-origin-policy.html)\n* [**C**: _1000줄 미만으로 비디오 플레이어 작성하는 방법_](http://dranger.com/ffmpeg/ffmpeg.html)\n* [**C**: _C로 해시 테이블 작성법 배우기_](https://github.com/jamesroutley/write-a-hash-table)\n* [**C**: _터미널 에뮬레이터의 기본_](https://www.uninformativ.de/blog/postings/2018-02-24/0/POSTING-en.html)\n* [**C**: _시스템 콜 작성하기_](https://brennan.io/2016/11/14/kernel-dev-ep3/)\n* [**C**: _Sol - 처음부터 만드는 MQTT 브로커_](https://codepr.github.io/posts/sol-mqtt-broker)\n* [**C++**: _$200로 나만의 VR 헤드셋 만들기_](https://github.com/relativty/Relativ)\n* [**C++**: _X 윈도우 매니저의 작동 원리와 작성법_](https://seasonofcode.com/posts/how-x-window-managers-work-and-how-to-write-one-part-i.html)\n* [**C++**: _리눅스 디버거 작성하기_](https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/)\n* [**C++**: _64k 인트로가 만들어지는 방법_](http://www.lofibucket.com/articles/64k_intro.html)\n* [**C++**: _나만의 게임 엔진 만들기_](https://www.youtube.com/playlist?list=PLlrATfBNZ98dC-V-N3m0Go4deliWHPFwT)\n* [**C#**: _C# 네트워킹: TCP 채팅 서버, TCP 게임, UDP Pong 등 만들기_](https://16bpp.net/tutorials/csharp-networking)\n* [**C#**: _C#과 GLSL로 3D 골격 애니메이션 로딩 및 렌더링_](https://www.seanjoflynn.com/research/skeletal-animation.html)\n* [**Clojure**: _맞춤법 검사기 만들기_](https://bernhardwenzel.com/articles/clojure-spellchecker/)\n* [**Go**: _100줄의 Golang으로 간단한 터미널 에뮬레이터 만들기_](https://ishuah.com/2021/03/10/build-a-terminal-emulator-in-100-lines-of-go/)\n* [**Go**: _간단한 로드 밸런서 만들기_](https://kasvith.me/posts/lets-create-a-simple-lb-go/)\n* [**Go**: _처음부터 비디오 인코딩하기_](https://github.com/kevmo314/codec-from-scratch)\n* [**Java**: _안드로이드 레딧 앱 만들기_](https://www.youtube.com/playlist?list=PLgCYzUzKIBE9HUJU-upNvl3TRVAo9W47y) [영상]\n* [**JavaScript**: _나만의 모듈 번들러 만들기 - Minipack_](https://github.com/ronami/minipack)\n* [**JavaScript**: _처음부터 자바스크립트 프로미스 만들며 배우기_](https://levelup.gitconnected.com/understand-javascript-promises-by-building-a-promise-from-scratch-84c0fd855720)\n* [**JavaScript**: _처음부터 프로미스 구현하기 (TDD 방식)_](https://www.mauriciopoppe.com/notes/computer-science/computation/promises/)\n* [**JavaScript**: _자바스크립트에서 call(), apply(), bind() 직접 구현하기_](https://blog.usejournal.com/implement-your-own-call-apply-and-bind-method-in-javascript-42cc85dba1b)\n* [**JavaScript**: _자바스크립트 알고리즘과 자료구조_](https://github.com/trekhleb/javascript-algorithms)\n* [**JavaScript**: _React Native로 라이드 헤일링 앱 만들기_](https://pusher.com/tutorials/ride-hailing-react-native)\n* [**JavaScript**: _(말 그대로) 10분만에 나만의 광고 차단기 만들기_](https://levelup.gitconnected.com/building-your-own-adblocker-in-literally-10-minutes-1eec093b04cd)\n* [**Kotlin**: _나만의 캐시 만들기_](https://github.com/kezhenxu94/cache-lite)\n* [**Lua**: _CDN에 대해 배우기 위해 처음부터 CDN 구축하기_](https://github.com/leandromoreira/cdn-up-and-running)\n* [**Nim**: _Redis 프로토콜 파서 작성하기_](https://xmonader.github.io/nimdays/day12_resp.html)\n* [**Nim**: _빌드 시스템 작성하기_](https://xmonader.github.io/nimdays/day11_buildsystem.html)\n* [**Nim**: _MiniTest 프레임워크 작성하기_](https://xmonader.github.io/nimdays/day08_minitest.html)\n* [**Nim**: _DMIDecode 파서 작성하기_](https://xmonader.github.io/nimdays/day01_dmidecode.html)\n* [**Nim**: _INI 파서 작성하기_](https://xmonader.github.io/nimdays/day05_iniparser.html)\n* [**Nim**: _링크 체커 작성하기_](https://xmonader.github.io/nimdays/day04_asynclinkschecker.html)\n* [**Nim**: _URL 단축 서비스 작성하기_](https://xmonader.github.io/nimdays/day07_shorturl.html)\n* [**Node.js**: _Node.js로 40줄짜리 정적 사이트 생성기 만들기_](https://www.webdevdrops.com/en/build-static-site-generator-nodejs-8969ebe34b22/)\n* [**Node.js**: _Node.js로 처음부터 간단한 싱글 사인온(SSO) 서버 및 솔루션 만들기_](https://codeburst.io/building-a-simple-single-sign-on-sso-server-and-solution-from-scratch-in-node-js-ea6ee5fdf340)\n* [**Node.js**: _Node로 실제 작동하는 CLI 앱 만드는 방법_](https://medium.freecodecamp.org/how-to-create-a-real-world-node-cli-app-with-node-391b727bbed3)\n* [**Node.js**: _Node.js로 DNS 서버 만들기_](https://engineerhead.github.io/dns-server/)\n* [**PHP**: _PHP로 처음부터 나만의 MVC 작성하기_](https://chaitya62.github.io/2018/04/29/Writing-your-own-MVC-from-Scratch-in-PHP.html)\n* [**PHP**: _나만의 블로그 만들기_](https://ilovephp.jondh.me.uk/en/tutorial/make-your-own-blog)\n* [**PHP**: _프레임워크 없이 현대적인 PHP 개발_](https://kevinsmith.io/modern-php-without-a-framework)\n* [**PHP**: _PHP로 웹 검색 엔진 코딩하기_](https://boyter.org/2013/01/code-for-a-search-engine-in-php-part-1/)\n* [**Python**: _딥러닝 라이브러리 만들기_](https://www.youtube.com/watch?v=o64FV-ez6Gw) [영상]\n* [**Python**: _단 5분 만에 강력한 모바일 문서 스캐너 만들기_](https://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/)\n* [**Python**: _지속적 통합 시스템_](http://aosabook.org/en/500L/a-continuous-integration-system.html)\n* [**Python**: _초보자용 추천 시스템 튜토리얼_](https://www.datacamp.com/community/tutorials/recommender-systems-python)\n* [**Python**: _Scikit-learn으로 SMS 스팸 탐지기 작성하기_](https://medium.com/@kopilov.vlad/detect-sms-spam-in-kaggle-with-scikit-learn-5f6afa7a3ca2)\n* [**Python**: _간단한 콘텐츠 기반 추천 엔진 만들기_](http://blog.untrod.com/2016/06/simple-similar-products-recommendation-engine-in-python.html)\n* [**Python**: _Python에서 LSTM으로 주식 시장 예측하기_](https://www.datacamp.com/community/tutorials/lstm-python-stock-market)\n* [**Python**: _Tensorflow로 간단한 생성적 적대 신경망(GAN) 구축하기_](https://blog.paperspace.com/implementing-gans-in-tensorflow/)\n* [**Python**: _코딩으로 배우는 ML 알고리즘: 결정 트리_](https://lethalbrains.com/learn-ml-algorithms-by-coding-decision-trees-439ac503c9a4)\n* [**Python**: _JSON 디코딩 알고리즘_](https://github.com/cheery/json-algorithm)\n* [**Python**: _Python으로 나만의 Git 플러그인 만들기_](https://joshburns-xyz.vercel.app/posts/build-your-own-git-plugin)\n* [**Ruby**: _실생활에서의 만보계_](http://aosabook.org/en/500L/a-pedometer-in-the-real-world.html)\n* [**Ruby**: _Ruby로 리눅스 데스크탑 애플리케이션 만들기_](https://iridakos.com/tutorials/2018/01/25/creating-a-gtk-todo-application-with-ruby)\n* [**Rust**: _Rust로 DNS 서버 만들기_](https://github.com/EmilHernvall/dnsguide/blob/master/README.md)\n* [**Rust**: _처음부터 확장 가능한 채팅 서비스 작성하기_](https://nbaksalyar.github.io/2015/07/10/writing-chat-in-rust.html)\n* [**Rust**: _WebGL + Rust: 기본 물 튜토리얼_](https://www.chinedufn.com/3d-webgl-basic-water-tutorial/)\n* [**TypeScript**: _작은 패키지 매니저: npm이나 Yarn의 동작 원리 배우기_](https://github.com/g-plane/tiny-package-manager)\n\n## 기여하기\n* 제출 환영합니다. PR을 보내거나 [이슈 생성](https://github.com/codecrafters-io/build-your-own-x/issues/new) 해주세요\n* 댓글과 \"반응\"을 남겨 [대기 중인 제출물](https://github.com/codecrafters-io/build-your-own-x/issues) 검토를 도와주세요\n\n## 출처 및 라이선스\n\n[![CC0](https://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)\n\n이 저장소는 [수많은 기여자들](https://github.com/codecrafters-io/build-your-own-x/graphs/contributors)의 작품입니다. [Daniel Stefanovic](https://github.com/danistefanovic)가 시작했으며, 현재는 [CodeCrafters, Inc.](https://codecrafters.io)에서 유지 관리 중입니다. 법률이 허용하는 범위 내에서, [CodeCrafters, Inc.](https://codecrafters.io)는 이 작업에 대한 모든 저작권 및 관련 권리를 포기하였습니다.\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "az7OZRwmb3/mq8Yfm+K+Unlccs0bz83KiQypOqVYjdY=",
        "originContent": "* [**Node.js**: _Build Your Own Web Server From Scratch In JavaScript_](https://build-your-own.org/webserver/)",
        "translatedContent": "* [**Node.js**: _JavaScript로 나만의 웹 서버를 처음부터 만들어보기_](https://build-your-own.org/webserver/)"
      },
      {
        "row": 2,
        "rowsha": "qLsJFLQYYqH6Mtm+huasV84QZWYU2Bm8ysUIfcDntiI=",
        "originContent": "* [**Node.js**: _Let's code a web server from scratch with NodeJS Streams_](https://www.codementor.io/@ziad-saab/let-s-code-a-web-server-from-scratch-with-nodejs-streams-h4uc9utji)",
        "translatedContent": "* [**Node.js**: _NodeJS 스트림으로 웹 서버를 처음부터 코딩해보기_](https://www.codementor.io/@ziad-saab/let-s-code-a-web-server-from-scratch-with-nodejs-streams-h4uc9utji)"
      },
      {
        "row": 3,
        "rowsha": "DNP9tZcv3XfNYBg8f7e/CW5GuiRVBx7EDdKrmOC7xh0=",
        "originContent": "* [**Node.js**: _lets-build-express_](https://github.com/antoaravinth/lets-build-express)",
        "translatedContent": "* [**Node.js**: _lets-build-express_](https://github.com/antoaravinth/lets-build-express)"
      },
      {
        "row": 4,
        "rowsha": "jpiLi4ySn6/oOwK53Goem6zEzmj97JSFnjLOuu3Phog=",
        "originContent": "* [**PHP**: _Writing a webserver in pure PHP_](http://station.clancats.com/writing-a-webserver-in-pure-php/)",
        "translatedContent": "* [**PHP**: _순수 PHP로 웹 서버 작성하기_](http://station.clancats.com/writing-a-webserver-in-pure-php/)"
      },
      {
        "row": 5,
        "rowsha": "/Vya46S8Tfr5FFKgDhLakhDWJo7Rpvbe5bb5pl1lIVE=",
        "originContent": "* [**Python**: _A Simple Web Server_](http://aosabook.org/en/500L/a-simple-web-server.html)",
        "translatedContent": "* [**Python**: _간단한 웹 서버_](http://aosabook.org/en/500L/a-simple-web-server.html)"
      },
      {
        "row": 6,
        "rowsha": "5K0E6fUZA3MNhO/HR/SsKuJZSvHP9mCuFPp70/H4n4c=",
        "originContent": "* [**Python**: _Let’s Build A Web Server._](https://ruslanspivak.com/lsbaws-part1/)",
        "translatedContent": "* [**Python**: _웹 서버를 만들어보자._](https://ruslanspivak.com/lsbaws-part1/)"
      },
      {
        "row": 7,
        "rowsha": "HNGCPV5Zu6pHq/BsCZIbmTTpjzoi+JCIFBRGRLDAxDU=",
        "originContent": "* [**Python**: _Web application from scratch_](https://defn.io/2018/02/25/web-app-from-scratch-01/)",
        "translatedContent": "* [**Python**: _처음부터 만드는 웹 애플리케이션_](https://defn.io/2018/02/25/web-app-from-scratch-01/)"
      },
      {
        "row": 8,
        "rowsha": "w55kSHssHoqkk6IRPrl9fI6q184xbvjLIIpTDzwT6Dw=",
        "originContent": "* [**Python**: _Building a basic HTTP Server from scratch in Python_](http://joaoventura.net/blog/2017/python-webserver/)",
        "translatedContent": "* [**Python**: _Python으로 처음부터 기본 HTTP 서버 만들기_](http://joaoventura.net/blog/2017/python-webserver/)"
      },
      {
        "row": 9,
        "rowsha": "zIe/VgPu3v4o9HGddD2MDvVjXXhOdyLb3/J68cOE/Tc=",
        "originContent": "* [**Python**: _Implementing a RESTful Web API with Python & Flask_](http://blog.luisrei.com/articles/flaskrest.html)",
        "translatedContent": "* [**Python**: _Python & Flask로 RESTful 웹 API 구현하기_](http://blog.luisrei.com/articles/flaskrest.html)"
      },
      {
        "row": 10,
        "rowsha": "hCKcAoudSRtaLy/NzvonwKD0+Pkncu8zgEMsEfc56hw=",
        "originContent": "* [**Ruby**: _Building a simple websockets server from scratch in Ruby_](http://blog.honeybadger.io/building-a-simple-websockets-server-from-scratch-in-ruby/)",
        "translatedContent": "* [**Ruby**: _Ruby로 처음부터 간단한 웹소켓 서버 만들기_](http://blog.honeybadger.io/building-a-simple-websockets-server-from-scratch-in-ruby/)"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "3xO+MwuhEeH+t8LtCeSYvh1C6CjWj0TF3UoBWBcwnlY=",
        "originContent": "#### Uncategorized",
        "translatedContent": "#### 기타 분류 없음"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "HevCG5VZzf1tylYBvuOLOUtTt2wF1+HWhHx3o9HqT+g=",
        "originContent": "* [**(any)**: _From NAND to Tetris: Building a Modern Computer From First Principles_](http://nand2tetris.org/)",
        "translatedContent": "* [**(any)**: _NAND부터 Tetris까지: 근본 원리부터 현대 컴퓨터 만들기_](http://nand2tetris.org/)"
      },
      {
        "row": 15,
        "rowsha": "whK4sLwviWHoJbPKNG6u5a2XmJcSNx9qNDtY4wQY5tc=",
        "originContent": "* [**Alloy**: _The Same-Origin Policy_](http://aosabook.org/en/500L/the-same-origin-policy.html)",
        "translatedContent": "* [**Alloy**: _동일 출처 정책_](http://aosabook.org/en/500L/the-same-origin-policy.html)"
      },
      {
        "row": 16,
        "rowsha": "nvNVxdlWYdS/+Vo6wqe+NMa8Wqp+wqlnoHXCVeU+QvU=",
        "originContent": "* [**C**: _How to Write a Video Player in Less Than 1000 Lines_](http://dranger.com/ffmpeg/ffmpeg.html)",
        "translatedContent": "* [**C**: _1000줄 미만으로 비디오 플레이어 작성하는 방법_](http://dranger.com/ffmpeg/ffmpeg.html)"
      },
      {
        "row": 17,
        "rowsha": "RfctLkI3Ev6/UK52hi8uuZVEEPTi2QucHXssqpumfao=",
        "originContent": "* [**C**: _Learn how to write a hash table in C_](https://github.com/jamesroutley/write-a-hash-table)",
        "translatedContent": "* [**C**: _C로 해시 테이블 작성법 배우기_](https://github.com/jamesroutley/write-a-hash-table)"
      },
      {
        "row": 18,
        "rowsha": "qN36pq4LbN3C2QtTqag2XaeYAdm+X9I22z6mPJQfbgA=",
        "originContent": "* [**C**: _The very basics of a terminal emulator_](https://www.uninformativ.de/blog/postings/2018-02-24/0/POSTING-en.html)",
        "translatedContent": "* [**C**: _터미널 에뮬레이터의 기본_](https://www.uninformativ.de/blog/postings/2018-02-24/0/POSTING-en.html)"
      },
      {
        "row": 19,
        "rowsha": "CCtwFPsc8P0du2VDtqCVbVpVh/W/ZcGKfpezIM13GP8=",
        "originContent": "* [**C**: _Write a System Call_](https://brennan.io/2016/11/14/kernel-dev-ep3/)",
        "translatedContent": "* [**C**: _시스템 콜 작성하기_](https://brennan.io/2016/11/14/kernel-dev-ep3/)"
      },
      {
        "row": 20,
        "rowsha": "Cg00uytyC8G+FVhKLUM/JLjpUpMDUKXx0/Mvd4J9xtY=",
        "originContent": "* [**C**: _Sol - An MQTT broker from scratch_](https://codepr.github.io/posts/sol-mqtt-broker)",
        "translatedContent": "* [**C**: _Sol - 처음부터 만드는 MQTT 브로커_](https://codepr.github.io/posts/sol-mqtt-broker)"
      },
      {
        "row": 21,
        "rowsha": "dZOAP08b2BDViuE1KzpyEsiM0QyNcAbTgK4Pahrywjo=",
        "originContent": "* [**C++**: _Build your own VR headset for $200_](https://github.com/relativty/Relativ)",
        "translatedContent": "* [**C++**: _$200로 나만의 VR 헤드셋 만들기_](https://github.com/relativty/Relativ)"
      },
      {
        "row": 22,
        "rowsha": "s889Y25JdunuppN2iCbYAm/UzJjFv6WhyZPiN7QBLZM=",
        "originContent": "* [**C++**: _How X Window Managers work and how to write one_](https://seasonofcode.com/posts/how-x-window-managers-work-and-how-to-write-one-part-i.html)",
        "translatedContent": "* [**C++**: _X 윈도우 매니저의 작동 원리와 작성법_](https://seasonofcode.com/posts/how-x-window-managers-work-and-how-to-write-one-part-i.html)"
      },
      {
        "row": 23,
        "rowsha": "6v6xXUm5MBsXwO9U20QWmC6tAJg4BWjeSHkQAHub9XE=",
        "originContent": "* [**C++**: _Writing a Linux Debugger_](https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/)",
        "translatedContent": "* [**C++**: _리눅스 디버거 작성하기_](https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/)"
      },
      {
        "row": 24,
        "rowsha": "ds/vuL2H5kPYlWGk3WNz32E2pJeAlLwagt0wQNSISlk=",
        "originContent": "* [**C++**: _How a 64k intro is made_](http://www.lofibucket.com/articles/64k_intro.html)",
        "translatedContent": "* [**C++**: _64k 인트로가 만들어지는 방법_](http://www.lofibucket.com/articles/64k_intro.html)"
      },
      {
        "row": 25,
        "rowsha": "CqLjBLHgvrOdYDkecuJ+sex3nDl6T6wfPXqXQ+lb9+A=",
        "originContent": "* [**C++**: _Make your own Game Engine_](https://www.youtube.com/playlist?list=PLlrATfBNZ98dC-V-N3m0Go4deliWHPFwT)",
        "translatedContent": "* [**C++**: _나만의 게임 엔진 만들기_](https://www.youtube.com/playlist?list=PLlrATfBNZ98dC-V-N3m0Go4deliWHPFwT)"
      },
      {
        "row": 26,
        "rowsha": "0v3W6lmpxP9bdeDrmEJqDq7RwQeTdJxcTZBVsxYytK8=",
        "originContent": "* [**C#**: _C# Networking: Create a TCP chater server, TCP games, UDP Pong and more_](https://16bpp.net/tutorials/csharp-networking)",
        "translatedContent": "* [**C#**: _C# 네트워킹: TCP 채팅 서버, TCP 게임, UDP Pong 등 만들기_](https://16bpp.net/tutorials/csharp-networking)"
      },
      {
        "row": 27,
        "rowsha": "7A3P9ysMA4eWrqvLVYI2cf2XoDNCS9y8ys1+bPBfpsE=",
        "originContent": "* [**C#**: _Loading and rendering 3D skeletal animations from scratch in C# and GLSL_](https://www.seanjoflynn.com/research/skeletal-animation.html)",
        "translatedContent": "* [**C#**: _C#과 GLSL로 3D 골격 애니메이션 로딩 및 렌더링_](https://www.seanjoflynn.com/research/skeletal-animation.html)"
      },
      {
        "row": 28,
        "rowsha": "X9qPn7FhunbbgwqU1j/PHhPBodxtlVGUGPcubInZaqU=",
        "originContent": "* [**Clojure**: _Building a spell-checker_](https://bernhardwenzel.com/articles/clojure-spellchecker/)",
        "translatedContent": "* [**Clojure**: _맞춤법 검사기 만들기_](https://bernhardwenzel.com/articles/clojure-spellchecker/)"
      },
      {
        "row": 29,
        "rowsha": "wprSwR0HxBCBEBbugT/4X0W6A0Rs3S1KN/KLDNWwiPo=",
        "originContent": "* [**Go**: _Build A Simple Terminal Emulator In 100 Lines of Golang_](https://ishuah.com/2021/03/10/build-a-terminal-emulator-in-100-lines-of-go/)",
        "translatedContent": "* [**Go**: _100줄의 Golang으로 간단한 터미널 에뮬레이터 만들기_](https://ishuah.com/2021/03/10/build-a-terminal-emulator-in-100-lines-of-go/)"
      },
      {
        "row": 30,
        "rowsha": "xE1ITysd1Kwu3YJH9wuvVjX3VNOUZ7OCIAJfQx33jRM=",
        "originContent": "* [**Go**: _Let's Create a Simple Load Balancer_](https://kasvith.me/posts/lets-create-a-simple-lb-go/)",
        "translatedContent": "* [**Go**: _간단한 로드 밸런서 만들기_](https://kasvith.me/posts/lets-create-a-simple-lb-go/)"
      },
      {
        "row": 31,
        "rowsha": "TqOvGr6Vg2DAOstsbl4sHcYsmNSK6jZ+qi40kFqOacM=",
        "originContent": "* [**Go**: _Video Encoding from Scratch_](https://github.com/kevmo314/codec-from-scratch)",
        "translatedContent": "* [**Go**: _처음부터 비디오 인코딩하기_](https://github.com/kevmo314/codec-from-scratch)"
      },
      {
        "row": 32,
        "rowsha": "dKiaA1Mx2MVkNwgJ7W9JW3aZ9nM9VW3JwPsXEQBT0io=",
        "originContent": "* [**Java**: _How to Build an Android Reddit App_](https://www.youtube.com/playlist?list=PLgCYzUzKIBE9HUJU-upNvl3TRVAo9W47y) [video]",
        "translatedContent": "* [**Java**: _안드로이드 레딧 앱 만들기_](https://www.youtube.com/playlist?list=PLgCYzUzKIBE9HUJU-upNvl3TRVAo9W47y) [영상]"
      },
      {
        "row": 33,
        "rowsha": "SQHqV25V7gTfgu3gDPmHWA+TS3kItcwBkf5OZA9bTDg=",
        "originContent": "* [**JavaScript**: _Build Your Own Module Bundler - Minipack_](https://github.com/ronami/minipack)",
        "translatedContent": "* [**JavaScript**: _나만의 모듈 번들러 만들기 - Minipack_](https://github.com/ronami/minipack)"
      },
      {
        "row": 34,
        "rowsha": "8dhPOQvI1p90CVms7IqDGq9qC1RvTUmjwH/8MVDoXDA=",
        "originContent": "* [**JavaScript**: _Learn JavaScript Promises by Building a Promise from Scratch_](https://levelup.gitconnected.com/understand-javascript-promises-by-building-a-promise-from-scratch-84c0fd855720)",
        "translatedContent": "* [**JavaScript**: _처음부터 자바스크립트 프로미스 만들며 배우기_](https://levelup.gitconnected.com/understand-javascript-promises-by-building-a-promise-from-scratch-84c0fd855720)"
      },
      {
        "row": 35,
        "rowsha": "wpXIHxhCPmbgYWsyub0WqekY3DZOmpK6zN9GmCVI6bM=",
        "originContent": "* [**JavaScript**: _Implementing promises from scratch (TDD way)_](https://www.mauriciopoppe.com/notes/computer-science/computation/promises/)",
        "translatedContent": "* [**JavaScript**: _처음부터 프로미스 구현하기 (TDD 방식)_](https://www.mauriciopoppe.com/notes/computer-science/computation/promises/)"
      },
      {
        "row": 36,
        "rowsha": "qrLwl9hWRr4+58/PjQ8MM/qNQzhjFzHHasjZPvHr2Xw=",
        "originContent": "* [**JavaScript**: _Implement your own — call(), apply() and bind() method in JavaScript_](https://blog.usejournal.com/implement-your-own-call-apply-and-bind-method-in-javascript-42cc85dba1b)",
        "translatedContent": "* [**JavaScript**: _자바스크립트에서 call(), apply(), bind() 직접 구현하기_](https://blog.usejournal.com/implement-your-own-call-apply-and-bind-method-in-javascript-42cc85dba1b)"
      },
      {
        "row": 37,
        "rowsha": "GpIBJyOq9OraXLdQjkLoeIuR8Ddj4MyoBwyX2yrp23k=",
        "originContent": "* [**JavaScript**: _JavaScript Algorithms and Data Structures_](https://github.com/trekhleb/javascript-algorithms)",
        "translatedContent": "* [**JavaScript**: _자바스크립트 알고리즘과 자료구조_](https://github.com/trekhleb/javascript-algorithms)"
      },
      {
        "row": 38,
        "rowsha": "xILSdSTeA87oYC2Kjrlr1BALfqopE1m842QeVBinyUk=",
        "originContent": "* [**JavaScript**: _Build a ride hailing app with React Native_](https://pusher.com/tutorials/ride-hailing-react-native)",
        "translatedContent": "* [**JavaScript**: _React Native로 라이드 헤일링 앱 만들기_](https://pusher.com/tutorials/ride-hailing-react-native)"
      },
      {
        "row": 39,
        "rowsha": "t4vFjJ+RAV7F2O6GvWJiX0dCyc63hIsCpn3SiuIXRe0=",
        "originContent": "* [**JavaScript**: _Build Your Own AdBlocker in (Literally) 10 Minutes_](https://levelup.gitconnected.com/building-your-own-adblocker-in-literally-10-minutes-1eec093b04cd)",
        "translatedContent": "* [**JavaScript**: _(말 그대로) 10분만에 나만의 광고 차단기 만들기_](https://levelup.gitconnected.com/building-your-own-adblocker-in-literally-10-minutes-1eec093b04cd)"
      },
      {
        "row": 40,
        "rowsha": "ZMT38MFJtak3mR4wX8qTCGlk8OC9UrNYS7QfRUAWRN8=",
        "originContent": "* [**Kotlin**: _Build Your Own Cache_](https://github.com/kezhenxu94/cache-lite)",
        "translatedContent": "* [**Kotlin**: _나만의 캐시 만들기_](https://github.com/kezhenxu94/cache-lite)"
      },
      {
        "row": 41,
        "rowsha": "Pi5IQFpezANq1HcxObKv+RbDecp9EAZgkBxgl1SIiW0=",
        "originContent": "* [**Lua**: _Building a CDN from Scratch to Learn about CDN_](https://github.com/leandromoreira/cdn-up-and-running)",
        "translatedContent": "* [**Lua**: _CDN에 대해 배우기 위해 처음부터 CDN 구축하기_](https://github.com/leandromoreira/cdn-up-and-running)"
      },
      {
        "row": 42,
        "rowsha": "YckF1yVsuBnKcb0ZOa0XSfaWd1AkjpjH+nT5CYUq4Rk=",
        "originContent": "* [**Nim**: _Writing a Redis Protocol Parser_](https://xmonader.github.io/nimdays/day12_resp.html)",
        "translatedContent": "* [**Nim**: _Redis 프로토콜 파서 작성하기_](https://xmonader.github.io/nimdays/day12_resp.html)"
      },
      {
        "row": 43,
        "rowsha": "qutoqTtB+jWolYhp2pt7uyCFeqMCjZtycGlD+acY43Y=",
        "originContent": "* [**Nim**: _Writing a Build system_](https://xmonader.github.io/nimdays/day11_buildsystem.html)",
        "translatedContent": "* [**Nim**: _빌드 시스템 작성하기_](https://xmonader.github.io/nimdays/day11_buildsystem.html)"
      },
      {
        "row": 44,
        "rowsha": "tolbTUAtSFrRcRDd0Hjd3OCq+aYPhA3+sYUkWYmL1O0=",
        "originContent": "* [**Nim**: _Writing a MiniTest Framework_](https://xmonader.github.io/nimdays/day08_minitest.html)",
        "translatedContent": "* [**Nim**: _MiniTest 프레임워크 작성하기_](https://xmonader.github.io/nimdays/day08_minitest.html)"
      },
      {
        "row": 45,
        "rowsha": "/70QxMtkqkVysRonq7M5HaCEBSkRGxsdDUKYag0qAmc=",
        "originContent": "* [**Nim**: _Writing a DMIDecode Parser_](https://xmonader.github.io/nimdays/day01_dmidecode.html)",
        "translatedContent": "* [**Nim**: _DMIDecode 파서 작성하기_](https://xmonader.github.io/nimdays/day01_dmidecode.html)"
      },
      {
        "row": 46,
        "rowsha": "uM1iEyTi770Rag/qux1nGySOnBWvLxdw76Y/23WMCko=",
        "originContent": "* [**Nim**: _Writing a INI Parser_](https://xmonader.github.io/nimdays/day05_iniparser.html)",
        "translatedContent": "* [**Nim**: _INI 파서 작성하기_](https://xmonader.github.io/nimdays/day05_iniparser.html)"
      },
      {
        "row": 47,
        "rowsha": "5uDDfWuyowBjUG4n9MSxbA4NT9u1R9D3Mkq8sSolVjo=",
        "originContent": "* [**Nim**: _Writing a Link Checker_](https://xmonader.github.io/nimdays/day04_asynclinkschecker.html)",
        "translatedContent": "* [**Nim**: _링크 체커 작성하기_](https://xmonader.github.io/nimdays/day04_asynclinkschecker.html)"
      },
      {
        "row": 48,
        "rowsha": "hiK+d8nM03NqVTcSnvaUQYCmeLYGRYUUofgIeAru04A=",
        "originContent": "* [**Nim**: _Writing a URL Shortening Service_](https://xmonader.github.io/nimdays/day07_shorturl.html)",
        "translatedContent": "* [**Nim**: _URL 단축 서비스 작성하기_](https://xmonader.github.io/nimdays/day07_shorturl.html)"
      },
      {
        "row": 49,
        "rowsha": "pNfIGmERlUXDpdK4exnqCyv0BEsRtBvO33RMGJzoF84=",
        "originContent": "* [**Node.js**: _Build a static site generator in 40 lines with Node.js_](https://www.webdevdrops.com/en/build-static-site-generator-nodejs-8969ebe34b22/)",
        "translatedContent": "* [**Node.js**: _Node.js로 40줄짜리 정적 사이트 생성기 만들기_](https://www.webdevdrops.com/en/build-static-site-generator-nodejs-8969ebe34b22/)"
      },
      {
        "row": 50,
        "rowsha": "hBc4oBjklhei/76Z47UVqmFJOl/685XJQkKxNnGr0EE=",
        "originContent": "* [**Node.js**: _Building A Simple Single Sign On(SSO) Server And Solution From Scratch In Node.js._](https://codeburst.io/building-a-simple-single-sign-on-sso-server-and-solution-from-scratch-in-node-js-ea6ee5fdf340)",
        "translatedContent": "* [**Node.js**: _Node.js로 처음부터 간단한 싱글 사인온(SSO) 서버 및 솔루션 만들기_](https://codeburst.io/building-a-simple-single-sign-on-sso-server-and-solution-from-scratch-in-node-js-ea6ee5fdf340)"
      },
      {
        "row": 51,
        "rowsha": "JHSgPyQxvM3gjb9c7xGySGLXgMTJxsngpDb0fkdg1Z0=",
        "originContent": "* [**Node.js**: _How to create a real-world Node CLI app with Node_](https://medium.freecodecamp.org/how-to-create-a-real-world-node-cli-app-with-node-391b727bbed3)",
        "translatedContent": "* [**Node.js**: _Node로 실제 작동하는 CLI 앱 만드는 방법_](https://medium.freecodecamp.org/how-to-create-a-real-world-node-cli-app-with-node-391b727bbed3)"
      },
      {
        "row": 52,
        "rowsha": "PoXeGy9XxlwTKGZbQ6xx4dkOkbEYVrEYB02W76puC00=",
        "originContent": "* [**Node.js**: _Build a DNS Server in Node.js_](https://engineerhead.github.io/dns-server/)",
        "translatedContent": "* [**Node.js**: _Node.js로 DNS 서버 만들기_](https://engineerhead.github.io/dns-server/)"
      },
      {
        "row": 53,
        "rowsha": "l7UUdSpGswHDBE//qsFbMnNxvUsXG/9G6tD4Pwh04Zc=",
        "originContent": "* [**PHP**: _Write your own MVC from scratch in PHP_ ](https://chaitya62.github.io/2018/04/29/Writing-your-own-MVC-from-Scratch-in-PHP.html)",
        "translatedContent": "* [**PHP**: _PHP로 처음부터 나만의 MVC 작성하기_](https://chaitya62.github.io/2018/04/29/Writing-your-own-MVC-from-Scratch-in-PHP.html)"
      },
      {
        "row": 54,
        "rowsha": "DEMzYK5W6rCNP6QHqNTcTEZ3my8SCzypIq1fCUB4wOA=",
        "originContent": "* [**PHP**: _Make your own blog_](https://ilovephp.jondh.me.uk/en/tutorial/make-your-own-blog)",
        "translatedContent": "* [**PHP**: _나만의 블로그 만들기_](https://ilovephp.jondh.me.uk/en/tutorial/make-your-own-blog)"
      },
      {
        "row": 55,
        "rowsha": "7rdaWV1g04pgWdP73u+nBeQzarYo1D2yHNgJPn+kgBE=",
        "originContent": "* [**PHP**: _Modern PHP Without a Framework_](https://kevinsmith.io/modern-php-without-a-framework)",
        "translatedContent": "* [**PHP**: _프레임워크 없이 현대적인 PHP 개발_](https://kevinsmith.io/modern-php-without-a-framework)"
      },
      {
        "row": 56,
        "rowsha": "fgyKXqyFQnDvXoY/pnb1oP/xnzwNZgQYThNMub9fiRY=",
        "originContent": "* [**PHP**: _Code a Web Search Engine in PHP_](https://boyter.org/2013/01/code-for-a-search-engine-in-php-part-1/)",
        "translatedContent": "* [**PHP**: _PHP로 웹 검색 엔진 코딩하기_](https://boyter.org/2013/01/code-for-a-search-engine-in-php-part-1/)"
      },
      {
        "row": 57,
        "rowsha": "BctfTK2pOX+Z7MkVgneJYoncM6nN5JUnyUBgqByy/oI=",
        "originContent": "* [**Python**: _Build a Deep Learning Library_](https://www.youtube.com/watch?v=o64FV-ez6Gw) [video]",
        "translatedContent": "* [**Python**: _딥러닝 라이브러리 만들기_](https://www.youtube.com/watch?v=o64FV-ez6Gw) [영상]"
      },
      {
        "row": 58,
        "rowsha": "3HT7X5pnPH+uQZ5CLxEwJEwOIWLAgrxgVIYmjSLXLI4=",
        "originContent": "* [**Python**: _How to Build a Kick-Ass Mobile Document Scanner in Just 5 Minutes_](https://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/)",
        "translatedContent": "* [**Python**: _단 5분 만에 강력한 모바일 문서 스캐너 만들기_](https://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/)"
      },
      {
        "row": 59,
        "rowsha": "a+guigxWFTQtyafk606bF1bhhH1hqB1vIGA2jN/pJrY=",
        "originContent": "* [**Python**: _Continuous Integration System_](http://aosabook.org/en/500L/a-continuous-integration-system.html)",
        "translatedContent": "* [**Python**: _지속적 통합 시스템_](http://aosabook.org/en/500L/a-continuous-integration-system.html)"
      },
      {
        "row": 60,
        "rowsha": "4RI4MvqgXdlUVqqGvbl+YK6zi0emG6RCXzsnFiChzXg=",
        "originContent": "* [**Python**: _Recommender Systems in Python: Beginner Tutorial_](https://www.datacamp.com/community/tutorials/recommender-systems-python)",
        "translatedContent": "* [**Python**: _초보자용 추천 시스템 튜토리얼_](https://www.datacamp.com/community/tutorials/recommender-systems-python)"
      },
      {
        "row": 61,
        "rowsha": "fnFqNNa7RaFM3XW+NRqU6cOs7eB1mJkcvCNRKXFyXPM=",
        "originContent": "* [**Python**: _Write SMS-spam detector with Scikit-learn_](https://medium.com/@kopilov.vlad/detect-sms-spam-in-kaggle-with-scikit-learn-5f6afa7a3ca2)",
        "translatedContent": "* [**Python**: _Scikit-learn으로 SMS 스팸 탐지기 작성하기_](https://medium.com/@kopilov.vlad/detect-sms-spam-in-kaggle-with-scikit-learn-5f6afa7a3ca2)"
      },
      {
        "row": 62,
        "rowsha": "jhzD94GDHulR4ohZyw2spUncFUUDFx05R0L6Rd5vYfs=",
        "originContent": "* [**Python**: _A Simple Content-Based Recommendation Engine in Python_](http://blog.untrod.com/2016/06/simple-similar-products-recommendation-engine-in-python.html)",
        "translatedContent": "* [**Python**: _간단한 콘텐츠 기반 추천 엔진 만들기_](http://blog.untrod.com/2016/06/simple-similar-products-recommendation-engine-in-python.html)"
      },
      {
        "row": 63,
        "rowsha": "bdvbqBntdp3MGsaeIHq5OtVle8v2gb8bLvU84IeNIc0=",
        "originContent": "* [**Python**: _Stock Market Predictions with LSTM in Python_](https://www.datacamp.com/community/tutorials/lstm-python-stock-market)",
        "translatedContent": "* [**Python**: _Python에서 LSTM으로 주식 시장 예측하기_](https://www.datacamp.com/community/tutorials/lstm-python-stock-market)"
      },
      {
        "row": 64,
        "rowsha": "Ru35CR97zJKySfmPxWgxZ/cCV+x52tS8A8gyw2TK3Vo=",
        "originContent": "* [**Python**: _Building a simple Generative Adversarial Network (GAN) using Tensorflow_](https://blog.paperspace.com/implementing-gans-in-tensorflow/)",
        "translatedContent": "* [**Python**: _Tensorflow로 간단한 생성적 적대 신경망(GAN) 구축하기_](https://blog.paperspace.com/implementing-gans-in-tensorflow/)"
      },
      {
        "row": 65,
        "rowsha": "ab6iTVV7++pgrIzOlv6cdUoY3bTNC5ZEJ/zMGfK8YvA=",
        "originContent": "* [**Python**: _Learn ML Algorithms by coding: Decision Trees_](https://lethalbrains.com/learn-ml-algorithms-by-coding-decision-trees-439ac503c9a4)",
        "translatedContent": "* [**Python**: _코딩으로 배우는 ML 알고리즘: 결정 트리_](https://lethalbrains.com/learn-ml-algorithms-by-coding-decision-trees-439ac503c9a4)"
      },
      {
        "row": 66,
        "rowsha": "0waY/gDlV6bh6R/tC0i74/Dd8taI9LDw6+OeiaXMHRI=",
        "originContent": "* [**Python**: _JSON Decoding Algorithm_](https://github.com/cheery/json-algorithm)",
        "translatedContent": "* [**Python**: _JSON 디코딩 알고리즘_](https://github.com/cheery/json-algorithm)"
      },
      {
        "row": 67,
        "rowsha": "Jnbo/3gFzjaXwGo7AIMS10nZ0u6FbgI1+hs6VAlhJ38=",
        "originContent": "* [**Python**: _Build your own Git plugin with python_](https://joshburns-xyz.vercel.app/posts/build-your-own-git-plugin)",
        "translatedContent": "* [**Python**: _Python으로 나만의 Git 플러그인 만들기_](https://joshburns-xyz.vercel.app/posts/build-your-own-git-plugin)"
      },
      {
        "row": 68,
        "rowsha": "dFrJz5MO8zV+L/lPMy8ou3R7As+C0p/kIYqFHqJfS1g=",
        "originContent": "* [**Ruby**: _A Pedometer in the Real World_](http://aosabook.org/en/500L/a-pedometer-in-the-real-world.html)",
        "translatedContent": "* [**Ruby**: _실생활에서의 만보계_](http://aosabook.org/en/500L/a-pedometer-in-the-real-world.html)"
      },
      {
        "row": 69,
        "rowsha": "CmCLGs6/wtA3ZDjmWB+RMrIjMVHpOKsSUmq+7S4z5vc=",
        "originContent": "* [**Ruby**: _Creating a Linux Desktop application with Ruby_](https://iridakos.com/tutorials/2018/01/25/creating-a-gtk-todo-application-with-ruby)",
        "translatedContent": "* [**Ruby**: _Ruby로 리눅스 데스크탑 애플리케이션 만들기_](https://iridakos.com/tutorials/2018/01/25/creating-a-gtk-todo-application-with-ruby)"
      },
      {
        "row": 70,
        "rowsha": "rRKkr29bAQRdrYCX3gsVT2YUb3wnpQj+MxOAG6XgogY=",
        "originContent": "* [**Rust**: _Building a DNS server in Rust_](https://github.com/EmilHernvall/dnsguide/blob/master/README.md)",
        "translatedContent": "* [**Rust**: _Rust로 DNS 서버 만들기_](https://github.com/EmilHernvall/dnsguide/blob/master/README.md)"
      },
      {
        "row": 71,
        "rowsha": "MHXieZo6+PrcVMPEzHxyh45NtFOJ/inxXITYuF4rqgo=",
        "originContent": "* [**Rust**: _Writing Scalable Chat Service from Scratch_](https://nbaksalyar.github.io/2015/07/10/writing-chat-in-rust.html)",
        "translatedContent": "* [**Rust**: _처음부터 확장 가능한 채팅 서비스 작성하기_](https://nbaksalyar.github.io/2015/07/10/writing-chat-in-rust.html)"
      },
      {
        "row": 72,
        "rowsha": "HyVpiQRMX5fs9yays1BSI6Ca/FXksB3Bu5+AjhGEglA=",
        "originContent": "* [**Rust**: _WebGL + Rust: Basic Water Tutorial_](https://www.chinedufn.com/3d-webgl-basic-water-tutorial/)",
        "translatedContent": "* [**Rust**: _WebGL + Rust: 기본 물 튜토리얼_](https://www.chinedufn.com/3d-webgl-basic-water-tutorial/)"
      },
      {
        "row": 73,
        "rowsha": "UxMgvs/PwpXEG7D7iDj2QfRTAgetRk8iLL4PsuQ3d2o=",
        "originContent": "* [**TypeScript**: _Tiny Package Manager: Learns how npm or Yarn works_](https://github.com/g-plane/tiny-package-manager)",
        "translatedContent": "* [**TypeScript**: _작은 패키지 매니저: npm이나 Yarn의 동작 원리 배우기_](https://github.com/g-plane/tiny-package-manager)"
      },
      {
        "row": 74,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 75,
        "rowsha": "eGNAOkMC4MZYwOzdYUxieLrxOe9KOA7xKFs6H2RFFWI=",
        "originContent": "## Contribute ",
        "translatedContent": "## 기여하기"
      },
      {
        "row": 76,
        "rowsha": "mLaF8DTYqzNPgc3+zp7ycnU+HYjWhnFthDsNWFubF6g=",
        "originContent": "* Submissions welcome, just send a PR, or [create an issue](https://github.com/codecrafters-io/build-your-own-x/issues/new)",
        "translatedContent": "* 제출 환영합니다. PR을 보내거나 [이슈 생성](https://github.com/codecrafters-io/build-your-own-x/issues/new) 해주세요"
      },
      {
        "row": 77,
        "rowsha": "5a3NDszozlxiDH6RgPt55y324BYta3o1WPWMO83CHAo=",
        "originContent": "* Help us review [pending submissions](https://github.com/codecrafters-io/build-your-own-x/issues) by leaving comments and \"reactions\"",
        "translatedContent": "* 댓글과 \"반응\"을 남겨 [대기 중인 제출물](https://github.com/codecrafters-io/build-your-own-x/issues) 검토를 도와주세요"
      },
      {
        "row": 78,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 79,
        "rowsha": "6oewgzZXac4e2gsiW2tt+w2nRZ1rEIwGqzjC9BEoGps=",
        "originContent": "## Origins & License",
        "translatedContent": "## 출처 및 라이선스"
      },
      {
        "row": 80,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 81,
        "rowsha": "yHRszTjkgLCagHSXsbp/RD5+8BTuXZmJ7LxLpqPz8Po=",
        "originContent": "[![CC0](https://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)",
        "translatedContent": "[![CC0](https://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)"
      },
      {
        "row": 82,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 83,
        "rowsha": "mrvVfb7nmPBuFCVt+5HUqmjVzB0EyD9Wd3s85s1fywE=",
        "originContent": "This repository is the work of [many contributors](https://github.com/codecrafters-io/build-your-own-x/graphs/contributors). It was started by [Daniel Stefanovic](https://github.com/danistefanovic), and is now maintained by [CodeCrafters, Inc.](https://codecrafters.io) To the extent possible under law, [CodeCrafters, Inc.](https://codecrafters.io) has waived all copyright and related or neighboring rights to this work.",
        "translatedContent": "이 저장소는 [수많은 기여자들](https://github.com/codecrafters-io/build-your-own-x/graphs/contributors)의 작품입니다. [Daniel Stefanovic](https://github.com/danistefanovic)가 시작했으며, 현재는 [CodeCrafters, Inc.](https://codecrafters.io)에서 유지 관리 중입니다. 법률이 허용하는 범위 내에서, [CodeCrafters, Inc.](https://codecrafters.io)는 이 작업에 대한 모든 저작권 및 관련 권리를 포기하였습니다."
      },
      {
        "row": 84,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]