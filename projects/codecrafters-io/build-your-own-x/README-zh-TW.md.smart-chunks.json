[
  {
    "Id": 1,
    "Content": "[![Banner](https://codecrafters.io/images/updated-byox-banner.gif)](https://codecrafters.io/github-banner)\n\n## Build your own &lt;insert-technology-here&gt;\n\nThis repository is a compilation of well-written, step-by-step guides for re-creating our favorite technologies from scratch. \n\n> *What I cannot create, I do not understand — Richard Feynman.*\n\nIt's a great way to learn.\n\n* [3D Renderer](#build-your-own-3d-renderer)\n* [Augmented Reality](#build-your-own-augmented-reality)\n* [BitTorrent Client](#build-your-own-bittorrent-client)\n* [Blockchain / Cryptocurrency](#build-your-own-blockchain--cryptocurrency)\n* [Bot](#build-your-own-bot)\n* [Command-Line Tool](#build-your-own-command-line-tool)\n* [Database](#build-your-own-database)\n* [Docker](#build-your-own-docker)\n* [Emulator / Virtual Machine](#build-your-own-emulator--virtual-machine)\n* [Front-end Framework / Library](#build-your-own-front-end-framework--library)\n* [Game](#build-your-own-game)\n* [Git](#build-your-own-git)\n* [Network Stack](#build-your-own-network-stack)\n* [Neural Network](#build-your-own-neural-network)\n* [Operating System](#build-your-own-operating-system)\n* [Physics Engine](#build-your-own-physics-engine)\n* [Programming Language](#build-your-own-programming-language)\n* [Regex Engine](#build-your-own-regex-engine)\n* [Search Engine](#build-your-own-search-engine)\n* [Shell](#build-your-own-shell)\n* [Template Engine](#build-your-own-template-engine)\n* [Text Editor](#build-your-own-text-editor)\n* [Visual Recognition System](#build-your-own-visual-recognition-system)\n* [Voxel Engine](#build-your-own-voxel-engine)\n* [Web Browser](#build-your-own-web-browser)\n* [Web Server](#build-your-own-web-server)\n* [Uncategorized](#uncategorized)\n\n## Tutorials\n\n#### Build your own `3D Renderer`\n\n* [**C++**: _Introduction to Ray Tracing: a Simple Method for Creating 3D Images_](https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work)\n* [**C++**: _How OpenGL works: software rendering in 500 lines of code_](https://github.com/ssloy/tinyrenderer/wiki)\n* [**C++**: _Raycasting engine of Wolfenstein 3D_](http://lodev.org/cgtutor/raycasting.html)\n* [**C++**: _Physically Based Rendering:From Theory To Implementation_](http://www.pbr-book.org/)\n* [**C++**: _Ray Tracing in One Weekend_](https://raytracing.github.io/books/RayTracingInOneWeekend.html)\n* [**C++**: _Rasterization: a Practical Implementation_](https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/overview-rasterization-algorithm)\n* [**C# / TypeScript / JavaScript**: _Learning how to write a 3D soft engine from scratch in C#, TypeScript or JavaScript_](https://www.davrous.com/2013/06/13/tutorial-series-learning-how-to-write-a-3d-soft-engine-from-scratch-in-c-typescript-or-javascript/)\n* [**Java / JavaScript**: _Build your own 3D renderer_](https://avik-das.github.io/build-your-own-raytracer/)\n* [**Java**: _How to create your own simple 3D render engine in pure Java_](http://blog.rogach.org/2015/08/how-to-create-your-own-simple-3d-render.html)\n* [**JavaScript / Pseudocode**: _Computer Graphics from scratch_](http://www.gabrielgambetta.com/computer-graphics-from-scratch/introduction.html)\n* [**Python**: _A 3D Modeller_](http://aosabook.org/en/500L/a-3d-modeller.html)\n\n#### Build your own `Augmented Reality`\n\n* [**C#**: _How To: Augmented Reality App Tutorial for Beginners with Vuforia and Unity 3D_](https://www.youtube.com/watch?v=uXNjNcqW4kY) [video]\n* [**C#**: _How To Unity ARCore_](https://www.youtube.com/playlist?list=PLKIKuXdn4ZMjuUAtdQfK1vwTZPQn_rgSv) [video]\n* [**C#**: _AR Portal Tutorial with Unity_](https://www.youtube.com/playlist?list=PLPCqNOwwN794Gz5fzUSi1p4OqLU0HTmvn) [video]\n* [**C#**: _How to create a Dragon in Augmented Reality in Unity ARCore_](https://www.youtube.com/watch?v=qTSDPkPyPqs) [video]\n* [**C#**: _How to Augmented Reality AR Tutorial: ARKit Portal to the Upside Down_](https://www.youtube.com/watch?v=Z5AmqMuNi08) [video]\n* [**Python**: _Augmented Reality with Python and OpenCV_](https://bitesofcode.wordpress.com/2017/09/12/augmented-reality-with-python-and-opencv-part-1/)\n\n#### Build your own `BitTorrent Client`\n\n* [**C#**: _Building a BitTorrent client from scratch in C#_](https://www.seanjoflynn.com/research/bittorrent.html)\n* [**Go**: _Building a BitTorrent client from the ground up in Go_](https://blog.jse.li/posts/torrent/)\n* [**Nim**: _Writing a Bencode Parser_](https://xmonader.github.io/nimdays/day02_bencode.html)\n* [**Node.js**: _Write your own bittorrent client_](https://allenkim67.github.io/programming/2016/05/04/how-to-make-your-own-bittorrent-client.html)\n* [**Python**: _A BitTorrent client in Python 3.5_](http://markuseliasson.se/article/bittorrent-in-python/)\n\n#### Build your own `Blockchain / Cryptocurrency`\n\n* [**ATS**: _Functional Blockchain_](https://beta.observablehq.com/@galletti94/functional-blockchain)\n* [**C#**: _Programming The Blockchain in C#_](https://programmingblockchain.gitbooks.io/programmingblockchain/)\n* [**Crystal**: _Write your own blockchain and PoW algorithm using Crystal_](https://medium.com/@bradford_hamilton/write-your-own-blockchain-and-pow-algorithm-using-crystal-d53d5d9d0c52)\n* [**Go**: _Building Blockchain in Go_](https://jeiwan.net/posts/building-blockchain-in-go-part-1/)\n* [**Go**: _Code your own blockchain in less than 200 lines of Go_](https://medium.com/@mycoralhealth/code-your-own-blockchain-in-less-than-200-lines-of-go-e296282bcffc)\n* [**Java**: _Creating Your First Blockchain with Java_](https://medium.com/programmers-blockchain/create-simple-blockchain-java-tutorial-from-scratch-6eeed3cb03fa)\n* [**JavaScript**: _A cryptocurrency implementation in less than 1500 lines of code_](https://github.com/conradoqg/naivecoin)\n* [**JavaScript**: _Build your own Blockchain in JavaScript_](https://github.com/nambrot/blockchain-in-js)\n* [**JavaScript**: _Learn & Build a JavaScript Blockchain_](https://medium.com/digital-alchemy-holdings/learn-build-a-javascript-blockchain-part-1-ca61c285821e)\n* [**JavaScript**: _Creating a blockchain with JavaScript_](https://github.com/SavjeeTutorials/SavjeeCoin)\n* [**JavaScript**: _How To Launch Your Own Production-Ready Cryptocurrency_](https://hackernoon.com/how-to-launch-your-own-production-ready-cryptocurrency-ab97cb773371)\n* [**JavaScript**: _Writing a Blockchain in Node.js_](https://www.smashingmagazine.com/2020/02/cryptocurrency-blockchain-node-js/)\n* [**Kotlin**: _Let’s implement a cryptocurrency in Kotlin_](https://medium.com/@vasilyf/lets-implement-a-cryptocurrency-in-kotlin-part-1-blockchain-8704069f8580)\n* [**Python**: _Learn Blockchains by Building One_](https://hackernoon.com/learn-blockchains-by-building-one-117428612f46)\n* [**Python**: _Build your own blockchain: a Python tutorial_](http://ecomunsing.com/build-your-own-blockchain)\n* [**Python**: _A Practical Introduction to Blockchain with Python_](http://adilmoujahid.com/posts/2018/03/intro-blockchain-bitcoin-python/)\n* [**Python**: _Let’s Build the Tiniest Blockchain_](https://medium.com/crypto-currently/lets-build-the-tiniest-blockchain-e70965a248b)\n* [**Ruby**: _Programming Blockchains Step-by-Step (Manuscripts Book Edition)_](https://github.com/yukimotopress/programming-blockchains-step-by-step)\n* [**Scala**: _How to build a simple actor-based blockchain_](https://medium.freecodecamp.org/how-to-build-a-simple-actor-based-blockchain-aac1e996c177)\n* [**TypeScript**: _Naivecoin: a tutorial for building a cryptocurrency_](https://lhartikk.github.io/)\n* [**TypeScript**: _NaivecoinStake: a tutorial for building a cryptocurrency with the Proof of Stake consensus_](https://naivecoinstake.learn.uno/)\n* [**Rust**: _Building A Blockchain in Rust & Substrate_](https://hackernoon.com/building-a-blockchain-in-rust-and-substrate-a-step-by-step-guide-for-developers-kc223ybp)\n\n\n#### Build your own `Bot`\n\n* [**Haskell**: _Roll your own IRC bot_](https://wiki.haskell.org/Roll_your_own_IRC_bot)",
    "ContentSha": "dkqEEB4jN73T0z6iSkfHXeUj4LPuP16lMT6frd8zd+c=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "[![Banner](https://codecrafters.io/images/updated-byox-banner.gif)](https://codecrafters.io/github-banner)\n\n## 建立你自己的 &lt;插入技術名稱&gt;\n\n本存儲庫彙整了多個撰寫完善、逐步指導的教學，用以從零開始重現我們最喜愛的技術。\n\n> *「我不能創造的東西，我就無法理解。」— 理查德·費曼。*\n\n這是一個絕佳的學習方式。\n\n* [3D 渲染器](#build-your-own-3d-renderer)\n* [擴增實境](#build-your-own-augmented-reality)\n* [BitTorrent 用戶端](#build-your-own-bittorrent-client)\n* [區塊鏈 / 加密貨幣](#build-your-own-blockchain--cryptocurrency)\n* [機器人](#build-your-own-bot)\n* [命令列工具](#build-your-own-command-line-tool)\n* [資料庫](#build-your-own-database)\n* [Docker](#build-your-own-docker)\n* [模擬器 / 虛擬機](#build-your-own-emulator--virtual-machine)\n* [前端框架 / 函式庫](#build-your-own-front-end-framework--library)\n* [遊戲](#build-your-own-game)\n* [Git](#build-your-own-git)\n* [網路堆疊](#build-your-own-network-stack)\n* [神經網路](#build-your-own-neural-network)\n* [作業系統](#build-your-own-operating-system)\n* [物理引擎](#build-your-own-physics-engine)\n* [程式語言](#build-your-own-programming-language)\n* [正規表達式引擎](#build-your-own-regex-engine)\n* [搜尋引擎](#build-your-own-search-engine)\n* [Shell](#build-your-own-shell)\n* [模板引擎](#build-your-own-template-engine)\n* [文字編輯器](#build-your-own-text-editor)\n* [視覺辨識系統](#build-your-own-visual-recognition-system)\n* [體素引擎](#build-your-own-voxel-engine)\n* [網頁瀏覽器](#build-your-own-web-browser)\n* [網頁伺服器](#build-your-own-web-server)\n* [未分類](#uncategorized)\n\n## 教學指南\n\n#### 建立你自己的 `3D 渲染器`\n\n* [**C++**：_光線追蹤入門：建立 3D 影像的簡單方法_](https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work)\n* [**C++**：_OpenGL 如何運作：500 行程式碼的軟體渲染實作_](https://github.com/ssloy/tinyrenderer/wiki)\n* [**C++**：_Wolfenstein 3D 的射線投射引擎_](http://lodev.org/cgtutor/raycasting.html)\n* [**C++**：_基於物理的渲染：從理論到實作_](http://www.pbr-book.org/)\n* [**C++**：_週末光線追蹤_](https://raytracing.github.io/books/RayTracingInOneWeekend.html)\n* [**C++**：_光柵化：實務實作_](https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/overview-rasterization-algorithm)\n* [**C# / TypeScript / JavaScript**：_學習如何從零開始撰寫 3D 軟體引擎_](https://www.davrous.com/2013/06/13/tutorial-series-learning-how-to-write-a-3d-soft-engine-from-scratch-in-c-typescript-or-javascript/)\n* [**Java / JavaScript**：_建立你自己的 3D 渲染器_](https://avik-das.github.io/build-your-own-raytracer/)\n* [**Java**：_如何使用純 Java 建立簡易的 3D 渲染引擎_](http://blog.rogach.org/2015/08/how-to-create-your-own-simple-3d-render.html)\n* [**JavaScript / 偽程式碼**：_從零開始的電腦繪圖_](http://www.gabrielgambetta.com/computer-graphics-from-scratch/introduction.html)\n* [**Python**：_3D 建模器_](http://aosabook.org/en/500L/a-3d-modeller.html)\n\n#### 建立你自己的 `擴增實境`\n\n* [**C#**：_入門擴增實境應用程式教學，結合 Vuforia 與 Unity 3D_](https://www.youtube.com/watch?v=uXNjNcqW4kY) [影片]\n* [**C#**：_Unity ARCore 教學系列_](https://www.youtube.com/playlist?list=PLKIKuXdn4ZMjuUAtdQfK1vwTZPQn_rgSv) [影片]\n* [**C#**：_Unity AR 門戶教學_](https://www.youtube.com/playlist?list=PLPCqNOwwN794Gz5fzUSi1p4OqLU0HTmvn) [影片]\n* [**C#**：_如何在 Unity ARCore 中建立擴增實境龍_](https://www.youtube.com/watch?v=qTSDPkPyPqs) [影片]\n* [**C#**：_擴增實境 AR 教學：ARKit 門戶至倒置世界_](https://www.youtube.com/watch?v=Z5AmqMuNi08) [影片]\n* [**Python**：_使用 Python 與 OpenCV 實作擴增實境_](https://bitesofcode.wordpress.com/2017/09/12/augmented-reality-with-python-and-opencv-part-1/)\n\n#### 建立你自己的 `BitTorrent 用戶端`\n\n* [**C#**：_從零開始用 C# 建立 BitTorrent 用戶端_](https://www.seanjoflynn.com/research/bittorrent.html)\n* [**Go**：_用 Go 從頭打造 BitTorrent 用戶端_](https://blog.jse.li/posts/torrent/)\n* [**Nim**：_撰寫 Bencode 解析器_](https://xmonader.github.io/nimdays/day02_bencode.html)\n* [**Node.js**：_撰寫你自己的 bittorrent 用戶端_](https://allenkim67.github.io/programming/2016/05/04/how-to-make-your-own-bittorrent-client.html)\n* [**Python**：_Python 3.5 實作 BitTorrent 用戶端_](http://markuseliasson.se/article/bittorrent-in-python/)\n\n#### 建立你自己的 `區塊鏈 / 加密貨幣`\n\n* [**ATS**：_函式式區塊鏈_](https://beta.observablehq.com/@galletti94/functional-blockchain)\n* [**C#**：_用 C# 程式設計區塊鏈_](https://programmingblockchain.gitbooks.io/programmingblockchain/)\n* [**Crystal**：_用 Crystal 撰寫你的區塊鏈與工作量證明演算法_](https://medium.com/@bradford_hamilton/write-your-own-blockchain-and-pow-algorithm-using-crystal-d53d5d9d0c52)\n* [**Go**：_用 Go 建立區塊鏈_](https://jeiwan.net/posts/building-blockchain-in-go-part-1/)\n* [**Go**：_用不到 200 行 Go 程式碼實作區塊鏈_](https://medium.com/@mycoralhealth/code-your-own-blockchain-in-less-than-200-lines-of-go-e296282bcffc)\n* [**Java**：_用 Java 創建你的第一個區塊鏈_](https://medium.com/programmers-blockchain/create-simple-blockchain-java-tutorial-from-scratch-6eeed3cb03fa)\n* [**JavaScript**：_少於 1500 行程式碼的加密貨幣實作_](https://github.com/conradoqg/naivecoin)\n* [**JavaScript**：_用 JavaScript 建立你自己的區塊鏈_](https://github.com/nambrot/blockchain-in-js)\n* [**JavaScript**：_學習並建立 JavaScript 區塊鏈_](https://medium.com/digital-alchemy-holdings/learn-build-a-javascript-blockchain-part-1-ca61c285821e)\n* [**JavaScript**：_用 JavaScript 創建區塊鏈_](https://github.com/SavjeeTutorials/SavjeeCoin)\n* [**JavaScript**：_如何發行你自己的生產級加密貨幣_](https://hackernoon.com/how-to-launch-your-own-production-ready-cryptocurrency-ab97cb773371)\n* [**JavaScript**：_用 Node.js 撰寫區塊鏈_](https://www.smashingmagazine.com/2020/02/cryptocurrency-blockchain-node-js/)\n* [**Kotlin**：_用 Kotlin 實作加密貨幣_](https://medium.com/@vasilyf/lets-implement-a-cryptocurrency-in-kotlin-part-1-blockchain-8704069f8580)\n* [**Python**：_透過建立區塊鏈來學習區塊鏈_](https://hackernoon.com/learn-blockchains-by-building-one-117428612f46)\n* [**Python**：_建立你自己的區塊鏈：Python 教學_](http://ecomunsing.com/build-your-own-blockchain)\n* [**Python**：_Python 區塊鏈實務入門_](http://adilmoujahid.com/posts/2018/03/intro-blockchain-bitcoin-python/)\n* [**Python**：_建立最簡區塊鏈_](https://medium.com/crypto-currently/lets-build-the-tiniest-blockchain-e70965a248b)\n* [**Ruby**：_區塊鏈程式設計逐步教學（Manuscripts 書籍版）_](https://github.com/yukimotopress/programming-blockchains-step-by-step)\n* [**Scala**：_如何建立簡易的基於 Actor 的區塊鏈_](https://medium.freecodecamp.org/how-to-build-a-simple-actor-based-blockchain-aac1e996c177)\n* [**TypeScript**：_Naivecoin：建立加密貨幣的教學_](https://lhartikk.github.io/)\n* [**TypeScript**：_NaivecoinStake：使用權益證明共識的加密貨幣教學_](https://naivecoinstake.learn.uno/)\n* [**Rust**：_用 Rust 與 Substrate 建立區塊鏈_](https://hackernoon.com/building-a-blockchain-in-rust-and-substrate-a-step-by-step-guide-for-developers-kc223ybp)\n\n\n#### 建立你自己的 `機器人`\n\n* [**Haskell**：_自行撰寫 IRC 機器人_](https://wiki.haskell.org/Roll_your_own_IRC_bot)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "slzxJxrqZ5/mIrhvO44SEP1JWZ9Bkh0L/ZNfyLv/koE=",
        "originContent": "[![Banner](https://codecrafters.io/images/updated-byox-banner.gif)](https://codecrafters.io/github-banner)",
        "translatedContent": "[![Banner](https://codecrafters.io/images/updated-byox-banner.gif)](https://codecrafters.io/github-banner)"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "ZYLPQT2SRmpaj6vNSOjusxfZWmyiLmC+1uLN+H21CDs=",
        "originContent": "## Build your own &lt;insert-technology-here&gt;",
        "translatedContent": "## 建立你自己的 &lt;插入技術名稱&gt;"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "68oS9GgX9od/GM70QPraeZcgnFH3TxdEnRIsOyFKc7Q=",
        "originContent": "This repository is a compilation of well-written, step-by-step guides for re-creating our favorite technologies from scratch. ",
        "translatedContent": "本存儲庫彙整了多個撰寫完善、逐步指導的教學，用以從零開始重現我們最喜愛的技術。"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "Mxca7xxf+eSUSGx0CbuHUQmPTxzwNoLBnGCWVL0y7yI=",
        "originContent": "> *What I cannot create, I do not understand — Richard Feynman.*",
        "translatedContent": "> *「我不能創造的東西，我就無法理解。」— 理查德·費曼。*"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "y9RzUuZVvVOM6W849DxA61IkbePEh/VTes5gu5B7C5M=",
        "originContent": "It's a great way to learn.",
        "translatedContent": "這是一個絕佳的學習方式。"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "Gf+Xzz6TATBS/Gy9BDQIwIRq8OvPlNxAsgN1ER1JZ00=",
        "originContent": "* [3D Renderer](#build-your-own-3d-renderer)",
        "translatedContent": "* [3D 渲染器](#build-your-own-3d-renderer)"
      },
      {
        "row": 12,
        "rowsha": "aH+XtPo0wtR4IHkWndznAE30i4r74EjusNFTy7SqvoA=",
        "originContent": "* [Augmented Reality](#build-your-own-augmented-reality)",
        "translatedContent": "* [擴增實境](#build-your-own-augmented-reality)"
      },
      {
        "row": 13,
        "rowsha": "++/IQvwK5InCe9VgmEeR6EuuXNhQYu1Wspirmhy3vgg=",
        "originContent": "* [BitTorrent Client](#build-your-own-bittorrent-client)",
        "translatedContent": "* [BitTorrent 用戶端](#build-your-own-bittorrent-client)"
      },
      {
        "row": 14,
        "rowsha": "8KHL2kP5kVN4vC97kKUJPFrFJZrgD/MBodUmYgfbYW0=",
        "originContent": "* [Blockchain / Cryptocurrency](#build-your-own-blockchain--cryptocurrency)",
        "translatedContent": "* [區塊鏈 / 加密貨幣](#build-your-own-blockchain--cryptocurrency)"
      },
      {
        "row": 15,
        "rowsha": "gqbSMYWw8+NbglWX8EuvI8LzSomn5QUTundsjcZhupU=",
        "originContent": "* [Bot](#build-your-own-bot)",
        "translatedContent": "* [機器人](#build-your-own-bot)"
      },
      {
        "row": 16,
        "rowsha": "NXg3byr8vxeFdUZXWn3hcd10fLLj7SS4HBFYYv61kfU=",
        "originContent": "* [Command-Line Tool](#build-your-own-command-line-tool)",
        "translatedContent": "* [命令列工具](#build-your-own-command-line-tool)"
      },
      {
        "row": 17,
        "rowsha": "tWD5ZUR0OqdkmGwFQj7Rm68+FkbXYelNvAv6qYxmius=",
        "originContent": "* [Database](#build-your-own-database)",
        "translatedContent": "* [資料庫](#build-your-own-database)"
      },
      {
        "row": 18,
        "rowsha": "pXR39R1Hgxkkc+3Xn4SQF3QQlbCmQv10E12Ewv1valI=",
        "originContent": "* [Docker](#build-your-own-docker)",
        "translatedContent": "* [Docker](#build-your-own-docker)"
      },
      {
        "row": 19,
        "rowsha": "ZX9lyfxT88wnwst7NfL8d2CNe0siS7tSaOIhwwS/Jck=",
        "originContent": "* [Emulator / Virtual Machine](#build-your-own-emulator--virtual-machine)",
        "translatedContent": "* [模擬器 / 虛擬機](#build-your-own-emulator--virtual-machine)"
      },
      {
        "row": 20,
        "rowsha": "pewam7Gz8r4VL8xfhBNGAIBejIgUKSmzJDNkb/82B9w=",
        "originContent": "* [Front-end Framework / Library](#build-your-own-front-end-framework--library)",
        "translatedContent": "* [前端框架 / 函式庫](#build-your-own-front-end-framework--library)"
      },
      {
        "row": 21,
        "rowsha": "rLBo6x7Zq1d9sVfHdirRpnX0kFv3GrCDQDlDonUEqE0=",
        "originContent": "* [Game](#build-your-own-game)",
        "translatedContent": "* [遊戲](#build-your-own-game)"
      },
      {
        "row": 22,
        "rowsha": "xmrymaSyn1NieBMMQthYncZno+7vN0B030DOA6YF2sA=",
        "originContent": "* [Git](#build-your-own-git)",
        "translatedContent": "* [Git](#build-your-own-git)"
      },
      {
        "row": 23,
        "rowsha": "2rKvMqbfZ/LEHuzvqBJBRWEJykWlKEPHu0oeIC32Glo=",
        "originContent": "* [Network Stack](#build-your-own-network-stack)",
        "translatedContent": "* [網路堆疊](#build-your-own-network-stack)"
      },
      {
        "row": 24,
        "rowsha": "mwDtHE2+mH9jv4+m5RI0yydg115Cb/rsFmCJacO0XTk=",
        "originContent": "* [Neural Network](#build-your-own-neural-network)",
        "translatedContent": "* [神經網路](#build-your-own-neural-network)"
      },
      {
        "row": 25,
        "rowsha": "ECjc5R4dw0DhTCNM/MpAG0bSh95M8ntHZ7fQsbSiHtI=",
        "originContent": "* [Operating System](#build-your-own-operating-system)",
        "translatedContent": "* [作業系統](#build-your-own-operating-system)"
      },
      {
        "row": 26,
        "rowsha": "JvmaFb6GSusRHB956KXKlY7hA/Mnssrk0maIhyZ2c4Y=",
        "originContent": "* [Physics Engine](#build-your-own-physics-engine)",
        "translatedContent": "* [物理引擎](#build-your-own-physics-engine)"
      },
      {
        "row": 27,
        "rowsha": "2p8n+auf8Q6MoqkpXDaWEuiBNk8X5Anj4jUx9eJGphw=",
        "originContent": "* [Programming Language](#build-your-own-programming-language)",
        "translatedContent": "* [程式語言](#build-your-own-programming-language)"
      },
      {
        "row": 28,
        "rowsha": "ABlQaBGb4DxADIvThozMGUyfKPVg8A03iZVGkjoFaWI=",
        "originContent": "* [Regex Engine](#build-your-own-regex-engine)",
        "translatedContent": "* [正規表達式引擎](#build-your-own-regex-engine)"
      },
      {
        "row": 29,
        "rowsha": "0Vs0hajE5nnRISE5HbdmlpoFMLfzyLxWDr3ZvT1Yhwg=",
        "originContent": "* [Search Engine](#build-your-own-search-engine)",
        "translatedContent": "* [搜尋引擎](#build-your-own-search-engine)"
      },
      {
        "row": 30,
        "rowsha": "O9xkotXtONdKm51LyoEuUARQiyDU7PO43HQDlO9pBdc=",
        "originContent": "* [Shell](#build-your-own-shell)",
        "translatedContent": "* [Shell](#build-your-own-shell)"
      },
      {
        "row": 31,
        "rowsha": "08ING9dRd/hZgK0PXfnGtu6sgxeMVOJYCXZ3io6YIss=",
        "originContent": "* [Template Engine](#build-your-own-template-engine)",
        "translatedContent": "* [模板引擎](#build-your-own-template-engine)"
      },
      {
        "row": 32,
        "rowsha": "+qMy2DD7EKTld90M0DO3edwlFtt2OuoXsQ1iHA7bp7I=",
        "originContent": "* [Text Editor](#build-your-own-text-editor)",
        "translatedContent": "* [文字編輯器](#build-your-own-text-editor)"
      },
      {
        "row": 33,
        "rowsha": "7tFVPBNODWnlPoQpciTXX+dpXU39xknsN4sA3YvxuUc=",
        "originContent": "* [Visual Recognition System](#build-your-own-visual-recognition-system)",
        "translatedContent": "* [視覺辨識系統](#build-your-own-visual-recognition-system)"
      },
      {
        "row": 34,
        "rowsha": "6dqn80HXQqsdbNMoVrEwiiJ98gNYA3wbR+eysAE07gY=",
        "originContent": "* [Voxel Engine](#build-your-own-voxel-engine)",
        "translatedContent": "* [體素引擎](#build-your-own-voxel-engine)"
      },
      {
        "row": 35,
        "rowsha": "wZKz+uw+oKTMQZnZ7iZenHii3JdzUoSHOJYeFKLmrJA=",
        "originContent": "* [Web Browser](#build-your-own-web-browser)",
        "translatedContent": "* [網頁瀏覽器](#build-your-own-web-browser)"
      },
      {
        "row": 36,
        "rowsha": "BSPZZW+f/J0vXv0wPRHOhuHrCd6g2LsPZTLWRp2HTo8=",
        "originContent": "* [Web Server](#build-your-own-web-server)",
        "translatedContent": "* [網頁伺服器](#build-your-own-web-server)"
      },
      {
        "row": 37,
        "rowsha": "d5sc2ebbRq4vzfBIisXGCRtohiPWGg9yDRRVQXDJQY8=",
        "originContent": "* [Uncategorized](#uncategorized)",
        "translatedContent": "* [未分類](#uncategorized)"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "7xFNzunIBuEt26ofABLXiVBRdVibYqIB+8J99W1182s=",
        "originContent": "## Tutorials",
        "translatedContent": "## 教學指南"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 41,
        "rowsha": "BQg1aWEFpcfDZXjqC7SVKFOFmjq+womzyi4pF/DkiN8=",
        "originContent": "#### Build your own `3D Renderer`",
        "translatedContent": "#### 建立你自己的 `3D 渲染器`"
      },
      {
        "row": 42,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 43,
        "rowsha": "Wuw0e35ELiIOCfbaL8cP6J0IYR6t1SCshcVSfZ/Cg00=",
        "originContent": "* [**C++**: _Introduction to Ray Tracing: a Simple Method for Creating 3D Images_](https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work)",
        "translatedContent": "* [**C++**：_光線追蹤入門：建立 3D 影像的簡單方法_](https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work)"
      },
      {
        "row": 44,
        "rowsha": "XyTvZfe+6zg2ZCx8nRuz9wUrG+2gRkAyzALPNKtLC6I=",
        "originContent": "* [**C++**: _How OpenGL works: software rendering in 500 lines of code_](https://github.com/ssloy/tinyrenderer/wiki)",
        "translatedContent": "* [**C++**：_OpenGL 如何運作：500 行程式碼的軟體渲染實作_](https://github.com/ssloy/tinyrenderer/wiki)"
      },
      {
        "row": 45,
        "rowsha": "xAUTcAeaOLmFn8MJUhmjzt26W35NZzj/U5jL9NP/Sbk=",
        "originContent": "* [**C++**: _Raycasting engine of Wolfenstein 3D_](http://lodev.org/cgtutor/raycasting.html)",
        "translatedContent": "* [**C++**：_Wolfenstein 3D 的射線投射引擎_](http://lodev.org/cgtutor/raycasting.html)"
      },
      {
        "row": 46,
        "rowsha": "HhvoRAb4D1FWHy/jdEEoigXROXfo/FJsmrQ4WEStiFc=",
        "originContent": "* [**C++**: _Physically Based Rendering:From Theory To Implementation_](http://www.pbr-book.org/)",
        "translatedContent": "* [**C++**：_基於物理的渲染：從理論到實作_](http://www.pbr-book.org/)"
      },
      {
        "row": 47,
        "rowsha": "vD6si154UPMY+RFeZPvRucOVWVUoxKJI81TIp3Xsbks=",
        "originContent": "* [**C++**: _Ray Tracing in One Weekend_](https://raytracing.github.io/books/RayTracingInOneWeekend.html)",
        "translatedContent": "* [**C++**：_週末光線追蹤_](https://raytracing.github.io/books/RayTracingInOneWeekend.html)"
      },
      {
        "row": 48,
        "rowsha": "Ga5Y+plbqpENjNZG9yNjYAi2S7Hyf9Lcphw4qXzQPnQ=",
        "originContent": "* [**C++**: _Rasterization: a Practical Implementation_](https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/overview-rasterization-algorithm)",
        "translatedContent": "* [**C++**：_光柵化：實務實作_](https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/overview-rasterization-algorithm)"
      },
      {
        "row": 49,
        "rowsha": "77iEoAGpRWZGTtsJq+FMUCvOJHtImneIaLot41NWxSU=",
        "originContent": "* [**C# / TypeScript / JavaScript**: _Learning how to write a 3D soft engine from scratch in C#, TypeScript or JavaScript_](https://www.davrous.com/2013/06/13/tutorial-series-learning-how-to-write-a-3d-soft-engine-from-scratch-in-c-typescript-or-javascript/)",
        "translatedContent": "* [**C# / TypeScript / JavaScript**：_學習如何從零開始撰寫 3D 軟體引擎_](https://www.davrous.com/2013/06/13/tutorial-series-learning-how-to-write-a-3d-soft-engine-from-scratch-in-c-typescript-or-javascript/)"
      },
      {
        "row": 50,
        "rowsha": "dRwIx25toMOYvbPaNEnB377YIiWUJEByDTSLKUGM2ZI=",
        "originContent": "* [**Java / JavaScript**: _Build your own 3D renderer_](https://avik-das.github.io/build-your-own-raytracer/)",
        "translatedContent": "* [**Java / JavaScript**：_建立你自己的 3D 渲染器_](https://avik-das.github.io/build-your-own-raytracer/)"
      },
      {
        "row": 51,
        "rowsha": "JvrGGvkxv3tzyB8pbu2Hk6xH9I3RxU5a1Y0CRuMFtFo=",
        "originContent": "* [**Java**: _How to create your own simple 3D render engine in pure Java_](http://blog.rogach.org/2015/08/how-to-create-your-own-simple-3d-render.html)",
        "translatedContent": "* [**Java**：_如何使用純 Java 建立簡易的 3D 渲染引擎_](http://blog.rogach.org/2015/08/how-to-create-your-own-simple-3d-render.html)"
      },
      {
        "row": 52,
        "rowsha": "bQlh+5oYmwXujP4oxZv4WdzKqJckaWfsJGkjm9Nfg2Q=",
        "originContent": "* [**JavaScript / Pseudocode**: _Computer Graphics from scratch_](http://www.gabrielgambetta.com/computer-graphics-from-scratch/introduction.html)",
        "translatedContent": "* [**JavaScript / 偽程式碼**：_從零開始的電腦繪圖_](http://www.gabrielgambetta.com/computer-graphics-from-scratch/introduction.html)"
      },
      {
        "row": 53,
        "rowsha": "WTzI5JNw/0zA8T3N4h9jIw/UDV/+smF/WvRxcrvg2Nw=",
        "originContent": "* [**Python**: _A 3D Modeller_](http://aosabook.org/en/500L/a-3d-modeller.html)",
        "translatedContent": "* [**Python**：_3D 建模器_](http://aosabook.org/en/500L/a-3d-modeller.html)"
      },
      {
        "row": 54,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 55,
        "rowsha": "+Fu07vFJo9wcZIsS/rfQ1+Y+Ika4o0eARg1g4n6R4/w=",
        "originContent": "#### Build your own `Augmented Reality`",
        "translatedContent": "#### 建立你自己的 `擴增實境`"
      },
      {
        "row": 56,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 57,
        "rowsha": "xe7hUbHD16SlGZcCXfLXHHrIYyRy6OB/80F67S2Kl3o=",
        "originContent": "* [**C#**: _How To: Augmented Reality App Tutorial for Beginners with Vuforia and Unity 3D_](https://www.youtube.com/watch?v=uXNjNcqW4kY) [video]",
        "translatedContent": "* [**C#**：_入門擴增實境應用程式教學，結合 Vuforia 與 Unity 3D_](https://www.youtube.com/watch?v=uXNjNcqW4kY) [影片]"
      },
      {
        "row": 58,
        "rowsha": "bApoZhq9QUwHNTxAHgmBOa8SmHNt5l3A9cg5+Fu6l3s=",
        "originContent": "* [**C#**: _How To Unity ARCore_](https://www.youtube.com/playlist?list=PLKIKuXdn4ZMjuUAtdQfK1vwTZPQn_rgSv) [video]",
        "translatedContent": "* [**C#**：_Unity ARCore 教學系列_](https://www.youtube.com/playlist?list=PLKIKuXdn4ZMjuUAtdQfK1vwTZPQn_rgSv) [影片]"
      },
      {
        "row": 59,
        "rowsha": "qOc8jm0PplPybHSvMxwFhO39Xn42HTV+6QXPpL70cF4=",
        "originContent": "* [**C#**: _AR Portal Tutorial with Unity_](https://www.youtube.com/playlist?list=PLPCqNOwwN794Gz5fzUSi1p4OqLU0HTmvn) [video]",
        "translatedContent": "* [**C#**：_Unity AR 門戶教學_](https://www.youtube.com/playlist?list=PLPCqNOwwN794Gz5fzUSi1p4OqLU0HTmvn) [影片]"
      },
      {
        "row": 60,
        "rowsha": "+zdTFVojAoyGo8oILvvHLih9zI0LsE5YUrGorcZ/Ymg=",
        "originContent": "* [**C#**: _How to create a Dragon in Augmented Reality in Unity ARCore_](https://www.youtube.com/watch?v=qTSDPkPyPqs) [video]",
        "translatedContent": "* [**C#**：_如何在 Unity ARCore 中建立擴增實境龍_](https://www.youtube.com/watch?v=qTSDPkPyPqs) [影片]"
      },
      {
        "row": 61,
        "rowsha": "bLp8Y75iTzz//mHqeiyqliETr1gyo7EZ1Hm2rmmbyS4=",
        "originContent": "* [**C#**: _How to Augmented Reality AR Tutorial: ARKit Portal to the Upside Down_](https://www.youtube.com/watch?v=Z5AmqMuNi08) [video]",
        "translatedContent": "* [**C#**：_擴增實境 AR 教學：ARKit 門戶至倒置世界_](https://www.youtube.com/watch?v=Z5AmqMuNi08) [影片]"
      },
      {
        "row": 62,
        "rowsha": "anSDcHaCzz5T9dyKtbRvR+sBoyjQtNDNd2X6axwHQWo=",
        "originContent": "* [**Python**: _Augmented Reality with Python and OpenCV_](https://bitesofcode.wordpress.com/2017/09/12/augmented-reality-with-python-and-opencv-part-1/)",
        "translatedContent": "* [**Python**：_使用 Python 與 OpenCV 實作擴增實境_](https://bitesofcode.wordpress.com/2017/09/12/augmented-reality-with-python-and-opencv-part-1/)"
      },
      {
        "row": 63,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 64,
        "rowsha": "BjvKJ9sNfsNJIHeVENltKzA1jSHWbxtVLM8K2Pmy97M=",
        "originContent": "#### Build your own `BitTorrent Client`",
        "translatedContent": "#### 建立你自己的 `BitTorrent 用戶端`"
      },
      {
        "row": 65,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 66,
        "rowsha": "+IL3/ddOQEH+e0CNogJYMfU2SPx70cfQJ5QbIId6aCk=",
        "originContent": "* [**C#**: _Building a BitTorrent client from scratch in C#_](https://www.seanjoflynn.com/research/bittorrent.html)",
        "translatedContent": "* [**C#**：_從零開始用 C# 建立 BitTorrent 用戶端_](https://www.seanjoflynn.com/research/bittorrent.html)"
      },
      {
        "row": 67,
        "rowsha": "LgB6x8wQyhdJkIO5Khz8yEnaAMEzwYG1iWYm338TKrU=",
        "originContent": "* [**Go**: _Building a BitTorrent client from the ground up in Go_](https://blog.jse.li/posts/torrent/)",
        "translatedContent": "* [**Go**：_用 Go 從頭打造 BitTorrent 用戶端_](https://blog.jse.li/posts/torrent/)"
      },
      {
        "row": 68,
        "rowsha": "GEp8CsfePKkDzAGsgbNcoCGTCWYhATXh9MkOkUAX5fc=",
        "originContent": "* [**Nim**: _Writing a Bencode Parser_](https://xmonader.github.io/nimdays/day02_bencode.html)",
        "translatedContent": "* [**Nim**：_撰寫 Bencode 解析器_](https://xmonader.github.io/nimdays/day02_bencode.html)"
      },
      {
        "row": 69,
        "rowsha": "nqVAk1crCS4fVgRV8QuAKJprpEdDQufYbN3cMPHLbio=",
        "originContent": "* [**Node.js**: _Write your own bittorrent client_](https://allenkim67.github.io/programming/2016/05/04/how-to-make-your-own-bittorrent-client.html)",
        "translatedContent": "* [**Node.js**：_撰寫你自己的 bittorrent 用戶端_](https://allenkim67.github.io/programming/2016/05/04/how-to-make-your-own-bittorrent-client.html)"
      },
      {
        "row": 70,
        "rowsha": "kZxa9b3ub6Cl+dkkXf6eQpnfkoypLTZAcWTvx/x9cuM=",
        "originContent": "* [**Python**: _A BitTorrent client in Python 3.5_](http://markuseliasson.se/article/bittorrent-in-python/)",
        "translatedContent": "* [**Python**：_Python 3.5 實作 BitTorrent 用戶端_](http://markuseliasson.se/article/bittorrent-in-python/)"
      },
      {
        "row": 71,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 72,
        "rowsha": "wnf1DawlEYLjyj+Uz8bKXrctFuGDPjBVIV38RsFUG50=",
        "originContent": "#### Build your own `Blockchain / Cryptocurrency`",
        "translatedContent": "#### 建立你自己的 `區塊鏈 / 加密貨幣`"
      },
      {
        "row": 73,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 74,
        "rowsha": "pufEDcnteXIuBxLK/9PAO0eSKLIUOEqa3kYn7xP5cJk=",
        "originContent": "* [**ATS**: _Functional Blockchain_](https://beta.observablehq.com/@galletti94/functional-blockchain)",
        "translatedContent": "* [**ATS**：_函式式區塊鏈_](https://beta.observablehq.com/@galletti94/functional-blockchain)"
      },
      {
        "row": 75,
        "rowsha": "iab3imWJ1UbJIzb0rN8yYMVC3/NXi/Yixkx/lxVKrGc=",
        "originContent": "* [**C#**: _Programming The Blockchain in C#_](https://programmingblockchain.gitbooks.io/programmingblockchain/)",
        "translatedContent": "* [**C#**：_用 C# 程式設計區塊鏈_](https://programmingblockchain.gitbooks.io/programmingblockchain/)"
      },
      {
        "row": 76,
        "rowsha": "lw9jNJNb7gfDKpWf6mvxIm3qWxFQs2+yYAd9WfakHBw=",
        "originContent": "* [**Crystal**: _Write your own blockchain and PoW algorithm using Crystal_](https://medium.com/@bradford_hamilton/write-your-own-blockchain-and-pow-algorithm-using-crystal-d53d5d9d0c52)",
        "translatedContent": "* [**Crystal**：_用 Crystal 撰寫你的區塊鏈與工作量證明演算法_](https://medium.com/@bradford_hamilton/write-your-own-blockchain-and-pow-algorithm-using-crystal-d53d5d9d0c52)"
      },
      {
        "row": 77,
        "rowsha": "54+YuhEH4dvBqN3OE0Mv7PPXW1O6IPkAzUjV1qmdqB4=",
        "originContent": "* [**Go**: _Building Blockchain in Go_](https://jeiwan.net/posts/building-blockchain-in-go-part-1/)",
        "translatedContent": "* [**Go**：_用 Go 建立區塊鏈_](https://jeiwan.net/posts/building-blockchain-in-go-part-1/)"
      },
      {
        "row": 78,
        "rowsha": "myWWi/rLuZokAYA7RKYwjTIUjQw5D0JFd3t15UJVaFc=",
        "originContent": "* [**Go**: _Code your own blockchain in less than 200 lines of Go_](https://medium.com/@mycoralhealth/code-your-own-blockchain-in-less-than-200-lines-of-go-e296282bcffc)",
        "translatedContent": "* [**Go**：_用不到 200 行 Go 程式碼實作區塊鏈_](https://medium.com/@mycoralhealth/code-your-own-blockchain-in-less-than-200-lines-of-go-e296282bcffc)"
      },
      {
        "row": 79,
        "rowsha": "ZGYVtQWtmPoAnAnu1sXNdIe7IUTShJ8TgZ1IQoIhsLA=",
        "originContent": "* [**Java**: _Creating Your First Blockchain with Java_](https://medium.com/programmers-blockchain/create-simple-blockchain-java-tutorial-from-scratch-6eeed3cb03fa)",
        "translatedContent": "* [**Java**：_用 Java 創建你的第一個區塊鏈_](https://medium.com/programmers-blockchain/create-simple-blockchain-java-tutorial-from-scratch-6eeed3cb03fa)"
      },
      {
        "row": 80,
        "rowsha": "E25e8LXRrvVUpMUJCP+sBs2tKD6ypQxWeXoLTYDQhw0=",
        "originContent": "* [**JavaScript**: _A cryptocurrency implementation in less than 1500 lines of code_](https://github.com/conradoqg/naivecoin)",
        "translatedContent": "* [**JavaScript**：_少於 1500 行程式碼的加密貨幣實作_](https://github.com/conradoqg/naivecoin)"
      },
      {
        "row": 81,
        "rowsha": "sDtwxpWpZgFfAscq1x6IulczLboRlCgULo6c9KJwmfY=",
        "originContent": "* [**JavaScript**: _Build your own Blockchain in JavaScript_](https://github.com/nambrot/blockchain-in-js)",
        "translatedContent": "* [**JavaScript**：_用 JavaScript 建立你自己的區塊鏈_](https://github.com/nambrot/blockchain-in-js)"
      },
      {
        "row": 82,
        "rowsha": "pj6JYuBJR+NqJRbXZVOMunDCK4UH0xmQhOTXiAzjOsQ=",
        "originContent": "* [**JavaScript**: _Learn & Build a JavaScript Blockchain_](https://medium.com/digital-alchemy-holdings/learn-build-a-javascript-blockchain-part-1-ca61c285821e)",
        "translatedContent": "* [**JavaScript**：_學習並建立 JavaScript 區塊鏈_](https://medium.com/digital-alchemy-holdings/learn-build-a-javascript-blockchain-part-1-ca61c285821e)"
      },
      {
        "row": 83,
        "rowsha": "DnRkMP6MmOOntb8AUi+EBOnBIUDnzTBe2sJVjJR3osk=",
        "originContent": "* [**JavaScript**: _Creating a blockchain with JavaScript_](https://github.com/SavjeeTutorials/SavjeeCoin)",
        "translatedContent": "* [**JavaScript**：_用 JavaScript 創建區塊鏈_](https://github.com/SavjeeTutorials/SavjeeCoin)"
      },
      {
        "row": 84,
        "rowsha": "fLlAvZnrvu7gwbkoc/4gk8UbnscK3wzKU++WamoPh6Q=",
        "originContent": "* [**JavaScript**: _How To Launch Your Own Production-Ready Cryptocurrency_](https://hackernoon.com/how-to-launch-your-own-production-ready-cryptocurrency-ab97cb773371)",
        "translatedContent": "* [**JavaScript**：_如何發行你自己的生產級加密貨幣_](https://hackernoon.com/how-to-launch-your-own-production-ready-cryptocurrency-ab97cb773371)"
      },
      {
        "row": 85,
        "rowsha": "3C2oOd3kSon1TgcDRM1uwy1wM/xRO0jS5TXYr6HcZ2c=",
        "originContent": "* [**JavaScript**: _Writing a Blockchain in Node.js_](https://www.smashingmagazine.com/2020/02/cryptocurrency-blockchain-node-js/)",
        "translatedContent": "* [**JavaScript**：_用 Node.js 撰寫區塊鏈_](https://www.smashingmagazine.com/2020/02/cryptocurrency-blockchain-node-js/)"
      },
      {
        "row": 86,
        "rowsha": "ovVP5cgvw8qA81GmQD0x6Fzs/5v83nxdEvSUNZ2WzFA=",
        "originContent": "* [**Kotlin**: _Let’s implement a cryptocurrency in Kotlin_](https://medium.com/@vasilyf/lets-implement-a-cryptocurrency-in-kotlin-part-1-blockchain-8704069f8580)",
        "translatedContent": "* [**Kotlin**：_用 Kotlin 實作加密貨幣_](https://medium.com/@vasilyf/lets-implement-a-cryptocurrency-in-kotlin-part-1-blockchain-8704069f8580)"
      },
      {
        "row": 87,
        "rowsha": "aEITG+5FTrqUB9gcwzPvvN7WASdT4vGspZzARDE6eFs=",
        "originContent": "* [**Python**: _Learn Blockchains by Building One_](https://hackernoon.com/learn-blockchains-by-building-one-117428612f46)",
        "translatedContent": "* [**Python**：_透過建立區塊鏈來學習區塊鏈_](https://hackernoon.com/learn-blockchains-by-building-one-117428612f46)"
      },
      {
        "row": 88,
        "rowsha": "mw9sy+cJ1QsmMV9Tsj3Jul7Y9uU/IsBbQ88jXVvSlMM=",
        "originContent": "* [**Python**: _Build your own blockchain: a Python tutorial_](http://ecomunsing.com/build-your-own-blockchain)",
        "translatedContent": "* [**Python**：_建立你自己的區塊鏈：Python 教學_](http://ecomunsing.com/build-your-own-blockchain)"
      },
      {
        "row": 89,
        "rowsha": "AJOIhd5/QbQDgcmo2TAwJ5wd89YolEvJGgoIc5xhDTQ=",
        "originContent": "* [**Python**: _A Practical Introduction to Blockchain with Python_](http://adilmoujahid.com/posts/2018/03/intro-blockchain-bitcoin-python/)",
        "translatedContent": "* [**Python**：_Python 區塊鏈實務入門_](http://adilmoujahid.com/posts/2018/03/intro-blockchain-bitcoin-python/)"
      },
      {
        "row": 90,
        "rowsha": "79zwQx6IR1wluz5cQrImSCAXFnUQ+FyHEF1L2lf3Plw=",
        "originContent": "* [**Python**: _Let’s Build the Tiniest Blockchain_](https://medium.com/crypto-currently/lets-build-the-tiniest-blockchain-e70965a248b)",
        "translatedContent": "* [**Python**：_建立最簡區塊鏈_](https://medium.com/crypto-currently/lets-build-the-tiniest-blockchain-e70965a248b)"
      },
      {
        "row": 91,
        "rowsha": "JOHg8EOmvaTVkTc+hctLIbp54QArQ20n7j0KN4PfHM0=",
        "originContent": "* [**Ruby**: _Programming Blockchains Step-by-Step (Manuscripts Book Edition)_](https://github.com/yukimotopress/programming-blockchains-step-by-step)",
        "translatedContent": "* [**Ruby**：_區塊鏈程式設計逐步教學（Manuscripts 書籍版）_](https://github.com/yukimotopress/programming-blockchains-step-by-step)"
      },
      {
        "row": 92,
        "rowsha": "JhL9pxF4GhbgiDBm/W68QWyhLxxXSaYAwa8xmyZL+WM=",
        "originContent": "* [**Scala**: _How to build a simple actor-based blockchain_](https://medium.freecodecamp.org/how-to-build-a-simple-actor-based-blockchain-aac1e996c177)",
        "translatedContent": "* [**Scala**：_如何建立簡易的基於 Actor 的區塊鏈_](https://medium.freecodecamp.org/how-to-build-a-simple-actor-based-blockchain-aac1e996c177)"
      },
      {
        "row": 93,
        "rowsha": "uS1UuPTsuqtek4oPYonUedxCGffO+rhL3svNrqPSSaE=",
        "originContent": "* [**TypeScript**: _Naivecoin: a tutorial for building a cryptocurrency_](https://lhartikk.github.io/)",
        "translatedContent": "* [**TypeScript**：_Naivecoin：建立加密貨幣的教學_](https://lhartikk.github.io/)"
      },
      {
        "row": 94,
        "rowsha": "Lc16GjE2LW+PFqfJLYlIMW2m85H/D0LQOlLHTf0nzwo=",
        "originContent": "* [**TypeScript**: _NaivecoinStake: a tutorial for building a cryptocurrency with the Proof of Stake consensus_](https://naivecoinstake.learn.uno/)",
        "translatedContent": "* [**TypeScript**：_NaivecoinStake：使用權益證明共識的加密貨幣教學_](https://naivecoinstake.learn.uno/)"
      },
      {
        "row": 95,
        "rowsha": "Vsr3LK/Bec5S0SD9WeVY3MSoTZCRpegpB53fEyPt6mI=",
        "originContent": "* [**Rust**: _Building A Blockchain in Rust & Substrate_](https://hackernoon.com/building-a-blockchain-in-rust-and-substrate-a-step-by-step-guide-for-developers-kc223ybp)",
        "translatedContent": "* [**Rust**：_用 Rust 與 Substrate 建立區塊鏈_](https://hackernoon.com/building-a-blockchain-in-rust-and-substrate-a-step-by-step-guide-for-developers-kc223ybp)"
      },
      {
        "row": 96,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 97,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 98,
        "rowsha": "EUR+SUDBG5Ab+dXyAHerv6Dv5U8eMfUXlJEyeVNMuOE=",
        "originContent": "#### Build your own `Bot`",
        "translatedContent": "#### 建立你自己的 `機器人`"
      },
      {
        "row": 99,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 100,
        "rowsha": "UbjMmKlnKlHN5q1s5e8vVBnUZIAQYWMcDlcz7/TpUW0=",
        "originContent": "* [**Haskell**: _Roll your own IRC bot_](https://wiki.haskell.org/Roll_your_own_IRC_bot)",
        "translatedContent": "* [**Haskell**：_自行撰寫 IRC 機器人_](https://wiki.haskell.org/Roll_your_own_IRC_bot)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "* [**Node.js**: _Creating a Simple Facebook Messenger AI Bot with API.ai in Node.js_](https://tutorials.botsfloor.com/creating-a-simple-facebook-messenger-ai-bot-with-api-ai-in-node-js-50ae2fa5c80d)\n* [**Node.js**: _How to make a responsive telegram bot_](https://www.sohamkamani.com/blog/2016/09/21/making-a-telegram-bot/)\n* [**Node.js**: _Create a Discord bot_](https://discordjs.guide/)\n* [**Node.js**: _gifbot - Building a GitHub App_](https://blog.scottlogic.com/2017/05/22/gifbot-github-integration.html)\n* [**Node.js**: _Building A Simple AI Chatbot With Web Speech API And Node.js_](https://www.smashingmagazine.com/2017/08/ai-chatbot-web-speech-api-node-js/)\n* [**Python**: _How to Build Your First Slack Bot with Python_](https://www.fullstackpython.com/blog/build-first-slack-bot-python.html)\n* [**Python**: _How to build a Slack Bot with Python using Slack Events API & Django under 20 minute_](https://medium.com/freehunch/how-to-build-a-slack-bot-with-python-using-slack-events-api-django-under-20-minute-code-included-269c3a9bf64e)\n* [**Python**: _Build a Reddit Bot_](http://pythonforengineers.com/build-a-reddit-bot-part-1/)\n* [**Python**: _How To Make A Reddit Bot_](https://www.youtube.com/watch?v=krTUf7BpTc0) [video]\n* [**Python**: _How To Create a Telegram Bot Using Python_](https://www.freecodecamp.org/news/how-to-create-a-telegram-bot-using-python/)\n* [**Python**: _Create a Twitter Bot in Python Using Tweepy_](https://medium.freecodecamp.org/creating-a-twitter-bot-in-python-with-tweepy-ac524157a607)\n* [**Python**: _Creating Reddit Bot with Python & PRAW_](https://www.youtube.com/playlist?list=PLIFBTFgFpoJ9vmYYlfxRFV6U_XhG-4fpP) [video]\n* [**R**: _Build A Cryptocurrency Trading Bot with R_](https://towardsdatascience.com/build-a-cryptocurrency-trading-bot-with-r-1445c429e1b1)\n* [**Rust**: _A bot for Starcraft in Rust, C or any other language_](https://habr.com/en/post/436254/)\n\n#### Build your own `Command-Line Tool`\n\n* [**Go**: _Visualize your local git contributions with Go_](https://flaviocopes.com/go-git-contributions/)\n* [**Go**: _Build a command line app with Go: lolcat_](https://flaviocopes.com/go-tutorial-lolcat/)\n* [**Go**: _Building a cli command with Go: cowsay_](https://flaviocopes.com/go-tutorial-cowsay/)\n* [**Go**: _Go CLI tutorial: fortune clone_](https://flaviocopes.com/go-tutorial-fortune/)\n* [**Nim**: _Writing a stow alternative to manage dotfiles_](https://xmonader.github.io/nimdays/day06_nistow.html)\n* [**Node.js**: _Create a CLI tool in Javascript_](https://citw.dev/tutorial/create-your-own-cli-tool)\n* [**Rust**: _Command line apps in Rust_](https://rust-cli.github.io/book/index.html)\n* [**Rust**: _Writing a Command Line Tool in Rust_](https://mattgathu.dev/2017/08/29/writing-cli-app-rust.html)\n* [**Zig**: _Build Your Own CLI App in Zig from Scratch_](https://rebuild-x.github.io/docs/#/./zig/terminal/cli)\n\n\n#### Build your own `Database`\n\n* [**C**: _Let's Build a Simple Database_](https://cstack.github.io/db_tutorial/)\n* [**C++**: _Build Your Own Redis from Scratch_](https://build-your-own.org/redis)\n* [**C#**: _Build Your Own Database_](https://www.codeproject.com/Articles/1029838/Build-Your-Own-Database)\n* [**Clojure**: _An Archaeology-Inspired Database_](http://aosabook.org/en/500L/an-archaeology-inspired-database.html)\n* [**Crystal**: _Why you should build your own NoSQL Database_](https://medium.com/@marceloboeira/why-you-should-build-your-own-nosql-database-9bbba42039f5)\n* [**Go**: _Build Your Own Database from Scratch: Persistence, Indexing, Concurrency_](https://build-your-own.org/database/)\n* [**Go**: _Build Your Own Redis from Scratch_](https://www.build-redis-from-scratch.dev/)\n* [**JavaScript**: _Dagoba: an in-memory graph database_](http://aosabook.org/en/500L/dagoba-an-in-memory-graph-database.html)\n* [**Python**: _DBDB: Dog Bed Database_](http://aosabook.org/en/500L/dbdb-dog-bed-database.html)\n* [**Python**: _Write your own miniature Redis with Python_](http://charlesleifer.com/blog/building-a-simple-redis-server-with-python/)\n* [**Ruby**: _Build your own fast, persistent KV store in Ruby_](https://dineshgowda.com/posts/build-your-own-persistent-kv-store/)\n* [**Rust**: _Build your own Redis client and server_](https://tokio.rs/tokio/tutorial/setup)\n\n#### Build your own `Docker`\n\n* [**C**: _Linux containers in 500 lines of code_](https://blog.lizzie.io/linux-containers-in-500-loc.html)\n* [**Go**: _Build Your Own Container Using Less than 100 Lines of Go_](https://www.infoq.com/articles/build-a-container-golang)\n* [**Go**: _Building a container from scratch in Go_](https://www.youtube.com/watch?v=8fi7uSYlOdc) [video]\n* [**Python**: _A workshop on Linux containers: Rebuild Docker from Scratch_](https://github.com/Fewbytes/rubber-docker)\n* [**Python**: _A proof-of-concept imitation of Docker, written in 100% Python_](https://github.com/tonybaloney/mocker)\n* [**Shell**: _Docker implemented in around 100 lines of bash_](https://github.com/p8952/bocker)\n\n#### Build your own `Emulator / Virtual Machine`\n\n* [**C**: _Home-grown bytecode interpreters_](https://medium.com/bumble-tech/home-grown-bytecode-interpreters-51e12d59b25c)\n* [**C**: _Virtual machine in C_](http://web.archive.org/web/20200121100942/https://blog.felixangell.com/virtual-machine-in-c/)\n* [**C**: _Write your Own Virtual Machine_](https://justinmeiners.github.io/lc3-vm/)\n* [**C**: _Writing a Game Boy emulator, Cinoop_](https://cturt.github.io/cinoop.html)\n* [**C++**: _How to write an emulator (CHIP-8 interpreter)_](http://www.multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/)\n* [**C++**: _Emulation tutorial (CHIP-8 interpreter)_](http://www.codeslinger.co.uk/pages/projects/chip8.html)\n* [**C++**: _Emulation tutorial (GameBoy emulator)_](http://www.codeslinger.co.uk/pages/projects/gameboy.html)\n* [**C++**: _Emulation tutorial (Master System emulator)_](http://www.codeslinger.co.uk/pages/projects/mastersystem/memory.html)\n* [**C++**: _NES Emulator From Scratch_](https://www.youtube.com/playlist?list=PLrOv9FMX8xJHqMvSGB_9G9nZZ_4IgteYf) [video]\n* [**Common Lisp**: _CHIP-8 in Common Lisp_](http://stevelosh.com/blog/2016/12/chip8-cpu/)\n* [**JavaScript**: _GameBoy Emulation in JavaScript_](http://imrannazar.com/GameBoy-Emulation-in-JavaScript)\n* [**Python**: _Emulation Basics: Write your own Chip 8 Emulator/Interpreter_](http://omokute.blogspot.com.br/2012/06/emulation-basics-write-your-own-chip-8.html)\n* [**Rust**: _0dmg: Learning Rust by building a partial Game Boy emulator_](https://jeremybanks.github.io/0dmg/)\n\n#### Build your own `Front-end Framework / Library`\n\n* [**JavaScript**: _WTF is JSX (Let's Build a JSX Renderer)_](https://jasonformat.com/wtf-is-jsx/)\n* [**JavaScript**: _A DIY guide to build your own React_](https://github.com/hexacta/didact)\n* [**JavaScript**: _Building React From Scratch_](https://www.youtube.com/watch?v=_MAD4Oly9yg) [video]\n* [**JavaScript**: _Gooact: React in 160 lines of JavaScript_](https://medium.com/@sweetpalma/gooact-react-in-160-lines-of-javascript-44e0742ad60f)\n* [**JavaScript**: _Learn how React Reconciler package works by building your own lightweight React DOM_](https://hackernoon.com/learn-you-some-custom-react-renderers-aed7164a4199)\n* [**JavaScript**: _Build Yourself a Redux_](https://zapier.com/engineering/how-to-build-redux/)\n* [**JavaScript**: _Let’s Write Redux!_](https://www.jamasoftware.com/blog/lets-write-redux/)\n* [**JavaScript**: _Redux: Implementing Store from Scratch_](https://egghead.io/lessons/react-redux-implementing-store-from-scratch) [video]\n* [**JavaScript**: _Build Your own Simplified AngularJS in 200 Lines of JavaScript_](https://blog.mgechev.com/2015/03/09/build-learn-your-own-light-lightweight-angularjs/)\n* [**JavaScript**: _Make Your Own AngularJS_](http://teropa.info/blog/2013/11/03/make-your-own-angular-part-1-scopes-and-digest.html)\n* [**JavaScript**: _How to write your own Virtual DOM_](https://medium.com/@deathmood/how-to-write-your-own-virtual-dom-ee74acc13060)\n* [**JavaScript**: _Building a frontend framework, from scratch, with components (templating, state, VDOM)_](https://mfrachet.github.io/create-frontend-framework/)\n* [**JavaScript**: _Build your own React_](https://pomb.us/build-your-own-react/)\n* [**JavaScript**: _Building a Custom React Renderer_](https://youtu.be/CGpMlWVcHok) [video]\n\n#### Build your own `Game`\n\n* [**C**: _Handmade Hero_](https://handmadehero.org/)\n* [**C**: _How to Program an NES game in C_](https://nesdoug.com/)\n* [**C**: _Chess Engine In C_](https://www.youtube.com/playlist?list=PLZ1QII7yudbc-Ky058TEaOstZHVbT-2hg) [video]\n* [**C**: _Let's Make: Dangerous Dave_](https://www.youtube.com/playlist?list=PLSkJey49cOgTSj465v2KbLZ7LMn10bCF9) [video]\n* [**C**: _Learn Video Game Programming in C_](https://www.youtube.com/playlist?list=PLT6WFYYZE6uLMcPGS3qfpYm7T_gViYMMt)\n  [video]\n* [**C**: _Coding A Sudoku Solver in C_](https://www.youtube.com/playlist?list=PLkTXsX7igf8edTYU92nU-f5Ntzuf-RKvW) [video]\n* [**C**: _Coding a Rogue/Nethack RPG in C_](https://www.youtube.com/playlist?list=PLkTXsX7igf8erbWGYT4iSAhpnJLJ0Nk5G) [video]\n* [**C**: _On Tetris and Reimplementation_](https://brennan.io/2015/06/12/tetris-reimplementation/)\n* [**C++**: _Breakout_](https://learnopengl.com/In-Practice/2D-Game/Breakout)\n* [**C++**: _Beginning Game Programming v2.0_](http://lazyfoo.net/tutorials/SDL/)\n* [**C++**: _Tetris tutorial in C++ platform independent focused in game logic for beginners_](http://javilop.com/gamedev/tetris-tutorial-in-c-platform-independent-focused-in-game-logic-for-beginners/)\n* [**C++**: _Remaking Cavestory in C++_](https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa) [video]",
    "ContentSha": "qbq/7/GHvyYVMmy6356o8Kl5vgG2bKmNmuy2EDQ3bNA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [**Node.js**: _使用 API.ai 在 Node.js 中建立簡單的 Facebook Messenger AI 機器人_](https://tutorials.botsfloor.com/creating-a-simple-facebook-messenger-ai-bot-with-api-ai-in-node-js-50ae2fa5c80d)\n* [**Node.js**: _如何製作一個回應迅速的 Telegram 機器人_](https://www.sohamkamani.com/blog/2016/09/21/making-a-telegram-bot/)\n* [**Node.js**: _建立一個 Discord 機器人_](https://discordjs.guide/)\n* [**Node.js**: _gifbot - 建立 GitHub 應用程式_](https://blog.scottlogic.com/2017/05/22/gifbot-github-integration.html)\n* [**Node.js**: _使用 Web Speech API 和 Node.js 建立簡單 AI 聊天機器人_](https://www.smashingmagazine.com/2017/08/ai-chatbot-web-speech-api-node-js/)\n* [**Python**: _如何用 Python 建立你的第一個 Slack 機器人_](https://www.fullstackpython.com/blog/build-first-slack-bot-python.html)\n* [**Python**: _如何使用 Slack 事件 API 和 Django 在 20 分鐘內建立 Slack 機器人_](https://medium.com/freehunch/how-to-build-a-slack-bot-with-python-using-slack-events-api-django-under-20-minute-code-included-269c3a9bf64e)\n* [**Python**: _建立 Reddit 機器人_](http://pythonforengineers.com/build-a-reddit-bot-part-1/)\n* [**Python**: _如何製作 Reddit 機器人_](https://www.youtube.com/watch?v=krTUf7BpTc0) [影片]\n* [**Python**: _如何使用 Python 建立 Telegram 機器人_](https://www.freecodecamp.org/news/how-to-create-a-telegram-bot-using-python/)\n* [**Python**: _使用 Tweepy 在 Python 中建立 Twitter 機器人_](https://medium.freecodecamp.org/creating-a-twitter-bot-in-python-with-tweepy-ac524157a607)\n* [**Python**: _使用 Python 和 PRAW 建立 Reddit 機器人_](https://www.youtube.com/playlist?list=PLIFBTFgFpoJ9vmYYlfxRFV6U_XhG-4fpP) [影片]\n* [**R**: _使用 R 建立加密貨幣交易機器人_](https://towardsdatascience.com/build-a-cryptocurrency-trading-bot-with-r-1445c429e1b1)\n* [**Rust**: _使用 Rust、C 或其他語言建立 Starcraft 機器人_](https://habr.com/en/post/436254/)\n\n#### 建立你自己的 `命令列工具`\n\n* [**Go**: _使用 Go 視覺化你的本地 git 貢獻_](https://flaviocopes.com/go-git-contributions/)\n* [**Go**: _使用 Go 建立命令列應用程式：lolcat_](https://flaviocopes.com/go-tutorial-lolcat/)\n* [**Go**: _使用 Go 建立 cli 命令：cowsay_](https://flaviocopes.com/go-tutorial-cowsay/)\n* [**Go**: _Go CLI 教學：fortune 克隆版_](https://flaviocopes.com/go-tutorial-fortune/)\n* [**Nim**: _撰寫管理點檔案的 stow 替代工具_](https://xmonader.github.io/nimdays/day06_nistow.html)\n* [**Node.js**: _使用 JavaScript 建立 CLI 工具_](https://citw.dev/tutorial/create-your-own-cli-tool)\n* [**Rust**: _Rust 中的命令列應用程式_](https://rust-cli.github.io/book/index.html)\n* [**Rust**: _使用 Rust 撰寫命令列工具_](https://mattgathu.dev/2017/08/29/writing-cli-app-rust.html)\n* [**Zig**: _從零開始用 Zig 建立你的 CLI 應用程式_](https://rebuild-x.github.io/docs/#/./zig/terminal/cli)\n\n#### 建立你自己的 `資料庫`\n\n* [**C**: _讓我們建立一個簡單的資料庫_](https://cstack.github.io/db_tutorial/)\n* [**C++**: _從零開始建立你的 Redis_](https://build-your-own.org/redis)\n* [**C#**: _建立你自己的資料庫_](https://www.codeproject.com/Articles/1029838/Build-Your-Own-Database)\n* [**Clojure**: _一個考古學啟發的資料庫_](http://aosabook.org/en/500L/an-archaeology-inspired-database.html)\n* [**Crystal**: _為何你應該建立自己的 NoSQL 資料庫_](https://medium.com/@marceloboeira/why-you-should-build-your-own-nosql-database-9bbba42039f5)\n* [**Go**: _從零開始建立你的資料庫：持久化、索引、併發_](https://build-your-own.org/database/)\n* [**Go**: _從零開始建立你的 Redis_](https://www.build-redis-from-scratch.dev/)\n* [**JavaScript**: _Dagoba：一個記憶體內的圖形資料庫_](http://aosabook.org/en/500L/dagoba-an-in-memory-graph-database.html)\n* [**Python**: _DBDB：狗床資料庫_](http://aosabook.org/en/500L/dbdb-dog-bed-database.html)\n* [**Python**: _用 Python 撰寫你的迷你 Redis_](http://charlesleifer.com/blog/building-a-simple-redis-server-with-python/)\n* [**Ruby**: _建立你自己的快速持久化鍵值存儲庫_](https://dineshgowda.com/posts/build-your-own-persistent-kv-store/)\n* [**Rust**: _建立你自己的 Redis 用戶端和伺服器_](https://tokio.rs/tokio/tutorial/setup)\n\n#### 建立你自己的 `Docker`\n\n* [**C**: _500 行代碼實作 Linux 容器_](https://blog.lizzie.io/linux-containers-in-500-loc.html)\n* [**Go**: _使用不到 100 行 Go 代碼建立你的容器_](https://www.infoq.com/articles/build-a-container-golang)\n* [**Go**: _用 Go 從零開始建立容器_](https://www.youtube.com/watch?v=8fi7uSYlOdc) [影片]\n* [**Python**: _Linux 容器工作坊：從零重建 Docker_](https://github.com/Fewbytes/rubber-docker)\n* [**Python**: _用 100% Python 撰寫的 Docker 概念驗證模擬_](https://github.com/tonybaloney/mocker)\n* [**Shell**: _用約 100 行 bash 實作 Docker_](https://github.com/p8952/bocker)\n\n#### 建立你自己的 `模擬器 / 虛擬機`\n\n* [**C**: _自製位元組碼解譯器_](https://medium.com/bumble-tech/home-grown-bytecode-interpreters-51e12d59b25c)\n* [**C**: _C 語言虛擬機_](http://web.archive.org/web/20200121100942/https://blog.felixangell.com/virtual-machine-in-c/)\n* [**C**: _撰寫你自己的虛擬機_](https://justinmeiners.github.io/lc3-vm/)\n* [**C**: _撰寫 Game Boy 模擬器，Cinoop_](https://cturt.github.io/cinoop.html)\n* [**C++**: _如何撰寫模擬器（CHIP-8 解譯器）_](http://www.multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/)\n* [**C++**: _模擬教學（CHIP-8 解譯器）_](http://www.codeslinger.co.uk/pages/projects/chip8.html)\n* [**C++**: _模擬教學（GameBoy 模擬器）_](http://www.codeslinger.co.uk/pages/projects/gameboy.html)\n* [**C++**: _模擬教學（Master System 模擬器）_](http://www.codeslinger.co.uk/pages/projects/mastersystem/memory.html)\n* [**C++**: _從零開始的 NES 模擬器_](https://www.youtube.com/playlist?list=PLrOv9FMX8xJHqMvSGB_9G9nZZ_4IgteYf) [影片]\n* [**Common Lisp**: _Common Lisp 中的 CHIP-8_](http://stevelosh.com/blog/2016/12/chip8-cpu/)\n* [**JavaScript**: _JavaScript 中的 GameBoy 模擬_](http://imrannazar.com/GameBoy-Emulation-in-JavaScript)\n* [**Python**: _模擬基礎：撰寫你自己的 Chip 8 模擬器/解譯器_](http://omokute.blogspot.com.br/2012/06/emulation-basics-write-your-own-chip-8.html)\n* [**Rust**: _0dmg：透過構建部分 Game Boy 模擬器學習 Rust_](https://jeremybanks.github.io/0dmg/)\n\n#### 建立你自己的 `前端框架 / 函式庫`\n\n* [**JavaScript**: _什麼是 JSX（讓我們建立一個 JSX 渲染器）_](https://jasonformat.com/wtf-is-jsx/)\n* [**JavaScript**: _DIY 指南：建立你自己的 React_](https://github.com/hexacta/didact)\n* [**JavaScript**: _從零開始建立 React_](https://www.youtube.com/watch?v=_MAD4Oly9yg) [影片]\n* [**JavaScript**: _Gooact：160 行 JavaScript 實作 React_](https://medium.com/@sweetpalma/gooact-react-in-160-lines-of-javascript-44e0742ad60f)\n* [**JavaScript**: _透過建立你自己的輕量級 React DOM，了解 React Reconciler 套件的運作方式_](https://hackernoon.com/learn-you-some-custom-react-renderers-aed7164a4199)\n* [**JavaScript**: _自己建立 Redux_](https://zapier.com/engineering/how-to-build-redux/)\n* [**JavaScript**: _讓我們一起寫 Redux！_](https://www.jamasoftware.com/blog/lets-write-redux/)\n* [**JavaScript**: _Redux：從零實作 Store_](https://egghead.io/lessons/react-redux-implementing-store-from-scratch) [影片]\n* [**JavaScript**: _用 200 行 JavaScript 建立你自己的簡易 AngularJS_](https://blog.mgechev.com/2015/03/09/build-learn-your-own-light-lightweight-angularjs/)\n* [**JavaScript**: _自己製作 AngularJS_](http://teropa.info/blog/2013/11/03/make-your-own-angular-part-1-scopes-and-digest.html)\n* [**JavaScript**: _如何撰寫你自己的虛擬 DOM_](https://medium.com/@deathmood/how-to-write-your-own-virtual-dom-ee74acc13060)\n* [**JavaScript**: _從零開始建立一個具有組件（模板、狀態、虛擬 DOM）的前端框架_](https://mfrachet.github.io/create-frontend-framework/)\n* [**JavaScript**: _建立你自己的 React_](https://pomb.us/build-your-own-react/)\n* [**JavaScript**: _建立自訂 React 渲染器_](https://youtu.be/CGpMlWVcHok) [影片]\n\n#### 建立你自己的 `遊戲`\n\n* [**C**: _Handmade Hero_](https://handmadehero.org/)\n* [**C**: _如何用 C 程式設計 NES 遊戲_](https://nesdoug.com/)\n* [**C**: _C 語言西洋棋引擎_](https://www.youtube.com/playlist?list=PLZ1QII7yudbc-Ky058TEaOstZHVbT-2hg) [影片]\n* [**C**: _讓我們製作：Dangerous Dave_](https://www.youtube.com/playlist?list=PLSkJey49cOgTSj465v2KbLZ7LMn10bCF9) [影片]\n* [**C**: _學習 C 語言的電子遊戲程式設計_](https://www.youtube.com/playlist?list=PLT6WFYYZE6uLMcPGS3qfpYm7T_gViYMMt)\n  [影片]\n* [**C**: _用 C 撰寫數獨解題器_](https://www.youtube.com/playlist?list=PLkTXsX7igf8edTYU92nU-f5Ntzuf-RKvW) [影片]\n* [**C**: _用 C 撰寫 Rogue/Nethack 角色扮演遊戲_](https://www.youtube.com/playlist?list=PLkTXsX7igf8erbWGYT4iSAhpnJLJ0Nk5G) [影片]\n* [**C**: _關於俄羅斯方塊與重新實作_](https://brennan.io/2015/06/12/tetris-reimplementation/)\n* [**C++**: _打磚塊遊戲_](https://learnopengl.com/In-Practice/2D-Game/Breakout)\n* [**C++**: _遊戲程式設計入門 v2.0_](http://lazyfoo.net/tutorials/SDL/)\n* [**C++**: _專注於遊戲邏輯的跨平台 C++ 俄羅斯方塊教學_](http://javilop.com/gamedev/tetris-tutorial-in-c-platform-independent-focused-in-game-logic-for-beginners/)\n* [**C++**: _用 C++ 重製 Cavestory_](https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa) [影片]\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "nyShCL6IVwB4oeOb+9kNhSQo01dlnVxJo2m2h9Ku6q4=",
        "originContent": "* [**Node.js**: _Creating a Simple Facebook Messenger AI Bot with API.ai in Node.js_](https://tutorials.botsfloor.com/creating-a-simple-facebook-messenger-ai-bot-with-api-ai-in-node-js-50ae2fa5c80d)",
        "translatedContent": "* [**Node.js**: _使用 API.ai 在 Node.js 中建立簡單的 Facebook Messenger AI 機器人_](https://tutorials.botsfloor.com/creating-a-simple-facebook-messenger-ai-bot-with-api-ai-in-node-js-50ae2fa5c80d)"
      },
      {
        "row": 2,
        "rowsha": "8btWsrjeORN/D52sKI6n95Df559LMsEdfAHdI1gP9pc=",
        "originContent": "* [**Node.js**: _How to make a responsive telegram bot_](https://www.sohamkamani.com/blog/2016/09/21/making-a-telegram-bot/)",
        "translatedContent": "* [**Node.js**: _如何製作一個回應迅速的 Telegram 機器人_](https://www.sohamkamani.com/blog/2016/09/21/making-a-telegram-bot/)"
      },
      {
        "row": 3,
        "rowsha": "xn/xE3opn6LH+y99aQVhsHjQ//GgZ3SGZ0dvPB4k6xc=",
        "originContent": "* [**Node.js**: _Create a Discord bot_](https://discordjs.guide/)",
        "translatedContent": "* [**Node.js**: _建立一個 Discord 機器人_](https://discordjs.guide/)"
      },
      {
        "row": 4,
        "rowsha": "Zd5YuS8aLcrPHFMgdxXFwgYLB0jCDFen6O5c6JRuSzc=",
        "originContent": "* [**Node.js**: _gifbot - Building a GitHub App_](https://blog.scottlogic.com/2017/05/22/gifbot-github-integration.html)",
        "translatedContent": "* [**Node.js**: _gifbot - 建立 GitHub 應用程式_](https://blog.scottlogic.com/2017/05/22/gifbot-github-integration.html)"
      },
      {
        "row": 5,
        "rowsha": "qsAq/I1TxnMzJgvGHcD2QEwl/kZA/aXCAJFPt2Ncs5Q=",
        "originContent": "* [**Node.js**: _Building A Simple AI Chatbot With Web Speech API And Node.js_](https://www.smashingmagazine.com/2017/08/ai-chatbot-web-speech-api-node-js/)",
        "translatedContent": "* [**Node.js**: _使用 Web Speech API 和 Node.js 建立簡單 AI 聊天機器人_](https://www.smashingmagazine.com/2017/08/ai-chatbot-web-speech-api-node-js/)"
      },
      {
        "row": 6,
        "rowsha": "HsOs+komHRlehuGhbS7lsmVA25QTDaBEPxVguTcZanc=",
        "originContent": "* [**Python**: _How to Build Your First Slack Bot with Python_](https://www.fullstackpython.com/blog/build-first-slack-bot-python.html)",
        "translatedContent": "* [**Python**: _如何用 Python 建立你的第一個 Slack 機器人_](https://www.fullstackpython.com/blog/build-first-slack-bot-python.html)"
      },
      {
        "row": 7,
        "rowsha": "yO2Mq8YDkcw/RboY42K4SRvNU1jwxFKM6qM/Y56m6nQ=",
        "originContent": "* [**Python**: _How to build a Slack Bot with Python using Slack Events API & Django under 20 minute_](https://medium.com/freehunch/how-to-build-a-slack-bot-with-python-using-slack-events-api-django-under-20-minute-code-included-269c3a9bf64e)",
        "translatedContent": "* [**Python**: _如何使用 Slack 事件 API 和 Django 在 20 分鐘內建立 Slack 機器人_](https://medium.com/freehunch/how-to-build-a-slack-bot-with-python-using-slack-events-api-django-under-20-minute-code-included-269c3a9bf64e)"
      },
      {
        "row": 8,
        "rowsha": "0VRB1hnpUTEWcWZYU/C+gGap+eYRGZY+IW70HlcceaA=",
        "originContent": "* [**Python**: _Build a Reddit Bot_](http://pythonforengineers.com/build-a-reddit-bot-part-1/)",
        "translatedContent": "* [**Python**: _建立 Reddit 機器人_](http://pythonforengineers.com/build-a-reddit-bot-part-1/)"
      },
      {
        "row": 9,
        "rowsha": "fCJ3plwr4hjBQLBy2TgheKL9FNeIM1ukwCLH269UYFU=",
        "originContent": "* [**Python**: _How To Make A Reddit Bot_](https://www.youtube.com/watch?v=krTUf7BpTc0) [video]",
        "translatedContent": "* [**Python**: _如何製作 Reddit 機器人_](https://www.youtube.com/watch?v=krTUf7BpTc0) [影片]"
      },
      {
        "row": 10,
        "rowsha": "w5RtounBAV4RCKJxwrafteh68VOC9fQvNOJfLybhrsI=",
        "originContent": "* [**Python**: _How To Create a Telegram Bot Using Python_](https://www.freecodecamp.org/news/how-to-create-a-telegram-bot-using-python/)",
        "translatedContent": "* [**Python**: _如何使用 Python 建立 Telegram 機器人_](https://www.freecodecamp.org/news/how-to-create-a-telegram-bot-using-python/)"
      },
      {
        "row": 11,
        "rowsha": "pqDTONghMXUKBGvSpVviuU3BvjSm3kFbkzD1RNLyEas=",
        "originContent": "* [**Python**: _Create a Twitter Bot in Python Using Tweepy_](https://medium.freecodecamp.org/creating-a-twitter-bot-in-python-with-tweepy-ac524157a607)",
        "translatedContent": "* [**Python**: _使用 Tweepy 在 Python 中建立 Twitter 機器人_](https://medium.freecodecamp.org/creating-a-twitter-bot-in-python-with-tweepy-ac524157a607)"
      },
      {
        "row": 12,
        "rowsha": "rcNPUUbosUXadhXvHJBEEdguUs1qVKFKS4aP6k4l8SU=",
        "originContent": "* [**Python**: _Creating Reddit Bot with Python & PRAW_](https://www.youtube.com/playlist?list=PLIFBTFgFpoJ9vmYYlfxRFV6U_XhG-4fpP) [video]",
        "translatedContent": "* [**Python**: _使用 Python 和 PRAW 建立 Reddit 機器人_](https://www.youtube.com/playlist?list=PLIFBTFgFpoJ9vmYYlfxRFV6U_XhG-4fpP) [影片]"
      },
      {
        "row": 13,
        "rowsha": "FQQTF0LGU/flFd0tmt8oIzszcD4gS6mAzsvflY7euEI=",
        "originContent": "* [**R**: _Build A Cryptocurrency Trading Bot with R_](https://towardsdatascience.com/build-a-cryptocurrency-trading-bot-with-r-1445c429e1b1)",
        "translatedContent": "* [**R**: _使用 R 建立加密貨幣交易機器人_](https://towardsdatascience.com/build-a-cryptocurrency-trading-bot-with-r-1445c429e1b1)"
      },
      {
        "row": 14,
        "rowsha": "QSGAxMy8fVAjFCwwbV2Zyd28MOKsecYCYbMuDUT45EU=",
        "originContent": "* [**Rust**: _A bot for Starcraft in Rust, C or any other language_](https://habr.com/en/post/436254/)",
        "translatedContent": "* [**Rust**: _使用 Rust、C 或其他語言建立 Starcraft 機器人_](https://habr.com/en/post/436254/)"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "Ji3gVHuQxtdiOd5ciO9ZZpXU5vKSZ7O1pEdhCV4252o=",
        "originContent": "#### Build your own `Command-Line Tool`",
        "translatedContent": "#### 建立你自己的 `命令列工具`"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "FibB9UzVEpNmkgfR9lCabHRya5r2WANb16iewuEKhLE=",
        "originContent": "* [**Go**: _Visualize your local git contributions with Go_](https://flaviocopes.com/go-git-contributions/)",
        "translatedContent": "* [**Go**: _使用 Go 視覺化你的本地 git 貢獻_](https://flaviocopes.com/go-git-contributions/)"
      },
      {
        "row": 19,
        "rowsha": "xMqNYuxrTlkG/OVocLi258bL1EonNBqkaEChyeL8dVI=",
        "originContent": "* [**Go**: _Build a command line app with Go: lolcat_](https://flaviocopes.com/go-tutorial-lolcat/)",
        "translatedContent": "* [**Go**: _使用 Go 建立命令列應用程式：lolcat_](https://flaviocopes.com/go-tutorial-lolcat/)"
      },
      {
        "row": 20,
        "rowsha": "cekwLmOlT1GUG97SDHVKo6VYvbuaVEjH+738MTUAnDk=",
        "originContent": "* [**Go**: _Building a cli command with Go: cowsay_](https://flaviocopes.com/go-tutorial-cowsay/)",
        "translatedContent": "* [**Go**: _使用 Go 建立 cli 命令：cowsay_](https://flaviocopes.com/go-tutorial-cowsay/)"
      },
      {
        "row": 21,
        "rowsha": "SAdnMzrtMeFEc5tXudu6GKeXfzAABsegZLKsglSUQUg=",
        "originContent": "* [**Go**: _Go CLI tutorial: fortune clone_](https://flaviocopes.com/go-tutorial-fortune/)",
        "translatedContent": "* [**Go**: _Go CLI 教學：fortune 克隆版_](https://flaviocopes.com/go-tutorial-fortune/)"
      },
      {
        "row": 22,
        "rowsha": "Z3QipmPbPjlCy6QxpxPBu1Zbbmg2q3irJOinbpmyaeo=",
        "originContent": "* [**Nim**: _Writing a stow alternative to manage dotfiles_](https://xmonader.github.io/nimdays/day06_nistow.html)",
        "translatedContent": "* [**Nim**: _撰寫管理點檔案的 stow 替代工具_](https://xmonader.github.io/nimdays/day06_nistow.html)"
      },
      {
        "row": 23,
        "rowsha": "MMT7noko20a2cLQzvLBqQoklJzX+FiybBVLUHkto2z0=",
        "originContent": "* [**Node.js**: _Create a CLI tool in Javascript_](https://citw.dev/tutorial/create-your-own-cli-tool)",
        "translatedContent": "* [**Node.js**: _使用 JavaScript 建立 CLI 工具_](https://citw.dev/tutorial/create-your-own-cli-tool)"
      },
      {
        "row": 24,
        "rowsha": "b3i3mnXViUwEhWZM6MBwv6o7wUK4C9H7Mm/l9Ws5noY=",
        "originContent": "* [**Rust**: _Command line apps in Rust_](https://rust-cli.github.io/book/index.html)",
        "translatedContent": "* [**Rust**: _Rust 中的命令列應用程式_](https://rust-cli.github.io/book/index.html)"
      },
      {
        "row": 25,
        "rowsha": "f+VPpw/mT+zxfv4g6Xoy5LW1VyUgvHiRVC84AKXV6bM=",
        "originContent": "* [**Rust**: _Writing a Command Line Tool in Rust_](https://mattgathu.dev/2017/08/29/writing-cli-app-rust.html)",
        "translatedContent": "* [**Rust**: _使用 Rust 撰寫命令列工具_](https://mattgathu.dev/2017/08/29/writing-cli-app-rust.html)"
      },
      {
        "row": 26,
        "rowsha": "+j6sTcaAonfp+gjlK1ifMqo5devv6/YMmOdBEa31t1Y=",
        "originContent": "* [**Zig**: _Build Your Own CLI App in Zig from Scratch_](https://rebuild-x.github.io/docs/#/./zig/terminal/cli)",
        "translatedContent": "* [**Zig**: _從零開始用 Zig 建立你的 CLI 應用程式_](https://rebuild-x.github.io/docs/#/./zig/terminal/cli)"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### 建立你自己的 `資料庫`"
      },
      {
        "row": 29,
        "rowsha": "cpCwUGHf8XBhrMTYZk+B+zX4uipN+wSw1w07Ub2Xx48=",
        "originContent": "#### Build your own `Database`",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [**C**: _讓我們建立一個簡單的資料庫_](https://cstack.github.io/db_tutorial/)"
      },
      {
        "row": 31,
        "rowsha": "Mtq8r2GtSBLuVj59stRtLV7GV0y+rmJ/J/ZOrHQo8x8=",
        "originContent": "* [**C**: _Let's Build a Simple Database_](https://cstack.github.io/db_tutorial/)",
        "translatedContent": "* [**C++**: _從零開始建立你的 Redis_](https://build-your-own.org/redis)"
      },
      {
        "row": 32,
        "rowsha": "0JOL2bcwqC2ikz1FrXgxL0sda0alE5rHS/R+dMk0OYA=",
        "originContent": "* [**C++**: _Build Your Own Redis from Scratch_](https://build-your-own.org/redis)",
        "translatedContent": "* [**C#**: _建立你自己的資料庫_](https://www.codeproject.com/Articles/1029838/Build-Your-Own-Database)"
      },
      {
        "row": 33,
        "rowsha": "2sAamhSpwqAE3ndksk7QQBC/Ru2mS7rg3fQbsRVeu5A=",
        "originContent": "* [**C#**: _Build Your Own Database_](https://www.codeproject.com/Articles/1029838/Build-Your-Own-Database)",
        "translatedContent": "* [**Clojure**: _一個考古學啟發的資料庫_](http://aosabook.org/en/500L/an-archaeology-inspired-database.html)"
      },
      {
        "row": 34,
        "rowsha": "mdKhOOIUK9jqlFeKw6TjCln5zDdwqX7d90FR+a0UV7k=",
        "originContent": "* [**Clojure**: _An Archaeology-Inspired Database_](http://aosabook.org/en/500L/an-archaeology-inspired-database.html)",
        "translatedContent": "* [**Crystal**: _為何你應該建立自己的 NoSQL 資料庫_](https://medium.com/@marceloboeira/why-you-should-build-your-own-nosql-database-9bbba42039f5)"
      },
      {
        "row": 35,
        "rowsha": "7mKr6X0UN7PO7Wd5W/knllwGxKekMvVSDvh+s1lwIcw=",
        "originContent": "* [**Crystal**: _Why you should build your own NoSQL Database_](https://medium.com/@marceloboeira/why-you-should-build-your-own-nosql-database-9bbba42039f5)",
        "translatedContent": "* [**Go**: _從零開始建立你的資料庫：持久化、索引、併發_](https://build-your-own.org/database/)"
      },
      {
        "row": 36,
        "rowsha": "N2mr79crotRftvhbG0wPUdEDybqogqWci3LylDA7TY4=",
        "originContent": "* [**Go**: _Build Your Own Database from Scratch: Persistence, Indexing, Concurrency_](https://build-your-own.org/database/)",
        "translatedContent": "* [**Go**: _從零開始建立你的 Redis_](https://www.build-redis-from-scratch.dev/)"
      },
      {
        "row": 37,
        "rowsha": "gB4a5QWFQGOmlXh7cOQVg6uAKpj77cN8uCpZAnIUWG4=",
        "originContent": "* [**Go**: _Build Your Own Redis from Scratch_](https://www.build-redis-from-scratch.dev/)",
        "translatedContent": "* [**JavaScript**: _Dagoba：一個記憶體內的圖形資料庫_](http://aosabook.org/en/500L/dagoba-an-in-memory-graph-database.html)"
      },
      {
        "row": 38,
        "rowsha": "dVBTF5w2EHBexhuvtkLLBpLm+ikeUbbLMl6+53afOe0=",
        "originContent": "* [**JavaScript**: _Dagoba: an in-memory graph database_](http://aosabook.org/en/500L/dagoba-an-in-memory-graph-database.html)",
        "translatedContent": "* [**Python**: _DBDB：狗床資料庫_](http://aosabook.org/en/500L/dbdb-dog-bed-database.html)"
      },
      {
        "row": 39,
        "rowsha": "COArm2UTT/2xBOR7Uo3VaObVdsK01oufdtIx92/coTc=",
        "originContent": "* [**Python**: _DBDB: Dog Bed Database_](http://aosabook.org/en/500L/dbdb-dog-bed-database.html)",
        "translatedContent": "* [**Python**: _用 Python 撰寫你的迷你 Redis_](http://charlesleifer.com/blog/building-a-simple-redis-server-with-python/)"
      },
      {
        "row": 40,
        "rowsha": "bXY54aB9bTxFDl1q/8QhpNmKHq4cBYK/VIqtsuzT3/o=",
        "originContent": "* [**Python**: _Write your own miniature Redis with Python_](http://charlesleifer.com/blog/building-a-simple-redis-server-with-python/)",
        "translatedContent": "* [**Ruby**: _建立你自己的快速持久化鍵值存儲庫_](https://dineshgowda.com/posts/build-your-own-persistent-kv-store/)"
      },
      {
        "row": 41,
        "rowsha": "dnA2SG1NdrClX6zbCneO6MKP2WYnSkq1R1RQU3c3Wso=",
        "originContent": "* [**Ruby**: _Build your own fast, persistent KV store in Ruby_](https://dineshgowda.com/posts/build-your-own-persistent-kv-store/)",
        "translatedContent": "* [**Rust**: _建立你自己的 Redis 用戶端和伺服器_](https://tokio.rs/tokio/tutorial/setup)"
      },
      {
        "row": 42,
        "rowsha": "SETUHPc4xst/q1+5GOU7VIT35qOXl0jxhlyTjdVGlLY=",
        "originContent": "* [**Rust**: _Build your own Redis client and server_](https://tokio.rs/tokio/tutorial/setup)",
        "translatedContent": ""
      },
      {
        "row": 43,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### 建立你自己的 `Docker`"
      },
      {
        "row": 44,
        "rowsha": "HIq9vLa/J5xl0flMh3RZiDfahf8h/AmL3bLtZ0bA7xw=",
        "originContent": "#### Build your own `Docker`",
        "translatedContent": ""
      },
      {
        "row": 45,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [**C**: _500 行代碼實作 Linux 容器_](https://blog.lizzie.io/linux-containers-in-500-loc.html)"
      },
      {
        "row": 46,
        "rowsha": "e6xIMuYeE3MY/8+Mepf4MAWQPIytY9c4Y75d9jFUoXY=",
        "originContent": "* [**C**: _Linux containers in 500 lines of code_](https://blog.lizzie.io/linux-containers-in-500-loc.html)",
        "translatedContent": "* [**Go**: _使用不到 100 行 Go 代碼建立你的容器_](https://www.infoq.com/articles/build-a-container-golang)"
      },
      {
        "row": 47,
        "rowsha": "f0vov702vIbVYjy9OfVOdhSI8ULUu5q4DGf0olDotOg=",
        "originContent": "* [**Go**: _Build Your Own Container Using Less than 100 Lines of Go_](https://www.infoq.com/articles/build-a-container-golang)",
        "translatedContent": "* [**Go**: _用 Go 從零開始建立容器_](https://www.youtube.com/watch?v=8fi7uSYlOdc) [影片]"
      },
      {
        "row": 48,
        "rowsha": "AQ7CSm0Dn95T6gYqamJRDpWdYZsw1URwxL9ddys9DHs=",
        "originContent": "* [**Go**: _Building a container from scratch in Go_](https://www.youtube.com/watch?v=8fi7uSYlOdc) [video]",
        "translatedContent": "* [**Python**: _Linux 容器工作坊：從零重建 Docker_](https://github.com/Fewbytes/rubber-docker)"
      },
      {
        "row": 49,
        "rowsha": "5HJidmrSQ+zXMSxfXfThDP7wDIJ7fvjYn5OusKuO6rA=",
        "originContent": "* [**Python**: _A workshop on Linux containers: Rebuild Docker from Scratch_](https://github.com/Fewbytes/rubber-docker)",
        "translatedContent": "* [**Python**: _用 100% Python 撰寫的 Docker 概念驗證模擬_](https://github.com/tonybaloney/mocker)"
      },
      {
        "row": 50,
        "rowsha": "lJ4R5S2v7URpVPJEoZsle4Oi4rbPpGdyz2JNXOe1zZA=",
        "originContent": "* [**Python**: _A proof-of-concept imitation of Docker, written in 100% Python_](https://github.com/tonybaloney/mocker)",
        "translatedContent": "* [**Shell**: _用約 100 行 bash 實作 Docker_](https://github.com/p8952/bocker)"
      },
      {
        "row": 51,
        "rowsha": "+Znt9ib1rhqgWSR8c+8RrvGutVOGn/qvNVimH2BrhRk=",
        "originContent": "* [**Shell**: _Docker implemented in around 100 lines of bash_](https://github.com/p8952/bocker)",
        "translatedContent": ""
      },
      {
        "row": 52,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### 建立你自己的 `模擬器 / 虛擬機`"
      },
      {
        "row": 53,
        "rowsha": "AulnY5Xjg6HdlDRa/VfFUIYqpGoWXnAQzbYxZCTrUdY=",
        "originContent": "#### Build your own `Emulator / Virtual Machine`",
        "translatedContent": ""
      },
      {
        "row": 54,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [**C**: _自製位元組碼解譯器_](https://medium.com/bumble-tech/home-grown-bytecode-interpreters-51e12d59b25c)"
      },
      {
        "row": 55,
        "rowsha": "gPscxLVrysvjRerXBjOwTrcDqgJ0iTWhzPJBe4h984E=",
        "originContent": "* [**C**: _Home-grown bytecode interpreters_](https://medium.com/bumble-tech/home-grown-bytecode-interpreters-51e12d59b25c)",
        "translatedContent": "* [**C**: _C 語言虛擬機_](http://web.archive.org/web/20200121100942/https://blog.felixangell.com/virtual-machine-in-c/)"
      },
      {
        "row": 56,
        "rowsha": "VDDts3NCjJuFHdaph+HcdzSudgr+8sZOnKPe66Xm07E=",
        "originContent": "* [**C**: _Virtual machine in C_](http://web.archive.org/web/20200121100942/https://blog.felixangell.com/virtual-machine-in-c/)",
        "translatedContent": "* [**C**: _撰寫你自己的虛擬機_](https://justinmeiners.github.io/lc3-vm/)"
      },
      {
        "row": 57,
        "rowsha": "vgx8q3IVX34Bq/DOAvFYa0Ew2BzdCV3+gGDsdlT218M=",
        "originContent": "* [**C**: _Write your Own Virtual Machine_](https://justinmeiners.github.io/lc3-vm/)",
        "translatedContent": "* [**C**: _撰寫 Game Boy 模擬器，Cinoop_](https://cturt.github.io/cinoop.html)"
      },
      {
        "row": 58,
        "rowsha": "3jYkomLu3gUIa9qsExFG5PpJyhZjceL2B2Xq65MEoUA=",
        "originContent": "* [**C**: _Writing a Game Boy emulator, Cinoop_](https://cturt.github.io/cinoop.html)",
        "translatedContent": "* [**C++**: _如何撰寫模擬器（CHIP-8 解譯器）_](http://www.multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/)"
      },
      {
        "row": 59,
        "rowsha": "i5iWjDlv09U2hKx5YFSIa7MbjiRgd4Sb3MobX9x//Xo=",
        "originContent": "* [**C++**: _How to write an emulator (CHIP-8 interpreter)_](http://www.multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/)",
        "translatedContent": "* [**C++**: _模擬教學（CHIP-8 解譯器）_](http://www.codeslinger.co.uk/pages/projects/chip8.html)"
      },
      {
        "row": 60,
        "rowsha": "lUf4pNfMONLQi0ZO+ziI6OmnZ0ze6fD0mJ/ghvlEBU0=",
        "originContent": "* [**C++**: _Emulation tutorial (CHIP-8 interpreter)_](http://www.codeslinger.co.uk/pages/projects/chip8.html)",
        "translatedContent": "* [**C++**: _模擬教學（GameBoy 模擬器）_](http://www.codeslinger.co.uk/pages/projects/gameboy.html)"
      },
      {
        "row": 61,
        "rowsha": "YmFmhdZ0+WYNcRHWSW+l8ZbaMTQkdiS0Rmkll1WCu2M=",
        "originContent": "* [**C++**: _Emulation tutorial (GameBoy emulator)_](http://www.codeslinger.co.uk/pages/projects/gameboy.html)",
        "translatedContent": "* [**C++**: _模擬教學（Master System 模擬器）_](http://www.codeslinger.co.uk/pages/projects/mastersystem/memory.html)"
      },
      {
        "row": 62,
        "rowsha": "lKPGZ5g3Hq+9R7bT+5CAIbraYt4SLJPn0GqDxxy/KVU=",
        "originContent": "* [**C++**: _Emulation tutorial (Master System emulator)_](http://www.codeslinger.co.uk/pages/projects/mastersystem/memory.html)",
        "translatedContent": "* [**C++**: _從零開始的 NES 模擬器_](https://www.youtube.com/playlist?list=PLrOv9FMX8xJHqMvSGB_9G9nZZ_4IgteYf) [影片]"
      },
      {
        "row": 63,
        "rowsha": "ITmt9q3VepzbmL9f9BRewoFzDUBOHVH/WCg5QMUIrcg=",
        "originContent": "* [**C++**: _NES Emulator From Scratch_](https://www.youtube.com/playlist?list=PLrOv9FMX8xJHqMvSGB_9G9nZZ_4IgteYf) [video]",
        "translatedContent": "* [**Common Lisp**: _Common Lisp 中的 CHIP-8_](http://stevelosh.com/blog/2016/12/chip8-cpu/)"
      },
      {
        "row": 64,
        "rowsha": "GCGlbfnU/1rJiWy7HPn26oIiz5jjutAZcP0hkiFY+Jo=",
        "originContent": "* [**Common Lisp**: _CHIP-8 in Common Lisp_](http://stevelosh.com/blog/2016/12/chip8-cpu/)",
        "translatedContent": "* [**JavaScript**: _JavaScript 中的 GameBoy 模擬_](http://imrannazar.com/GameBoy-Emulation-in-JavaScript)"
      },
      {
        "row": 65,
        "rowsha": "NN4UoCran/050absmTiiIx2xkG5aCDBgu1jbZZBRX8c=",
        "originContent": "* [**JavaScript**: _GameBoy Emulation in JavaScript_](http://imrannazar.com/GameBoy-Emulation-in-JavaScript)",
        "translatedContent": "* [**Python**: _模擬基礎：撰寫你自己的 Chip 8 模擬器/解譯器_](http://omokute.blogspot.com.br/2012/06/emulation-basics-write-your-own-chip-8.html)"
      },
      {
        "row": 66,
        "rowsha": "DtckaYC4uEKkzOpcbioSbrPc+I3mukdKmi0ywS0ph+s=",
        "originContent": "* [**Python**: _Emulation Basics: Write your own Chip 8 Emulator/Interpreter_](http://omokute.blogspot.com.br/2012/06/emulation-basics-write-your-own-chip-8.html)",
        "translatedContent": "* [**Rust**: _0dmg：透過構建部分 Game Boy 模擬器學習 Rust_](https://jeremybanks.github.io/0dmg/)"
      },
      {
        "row": 67,
        "rowsha": "fHnZNVshgZmd1GF7OYxKzzwJBljr+zYYjiVMU85DLEA=",
        "originContent": "* [**Rust**: _0dmg: Learning Rust by building a partial Game Boy emulator_](https://jeremybanks.github.io/0dmg/)",
        "translatedContent": ""
      },
      {
        "row": 68,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### 建立你自己的 `前端框架 / 函式庫`"
      },
      {
        "row": 69,
        "rowsha": "Apbep1EepGhiqUxEV5iDkAMVomeNSBXa4j2XbybAXKc=",
        "originContent": "#### Build your own `Front-end Framework / Library`",
        "translatedContent": ""
      },
      {
        "row": 70,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [**JavaScript**: _什麼是 JSX（讓我們建立一個 JSX 渲染器）_](https://jasonformat.com/wtf-is-jsx/)"
      },
      {
        "row": 71,
        "rowsha": "yTaW4x0ZP8+4J8Sg0WMBOt+xDNwpJmGmm7O+6gbSExg=",
        "originContent": "* [**JavaScript**: _WTF is JSX (Let's Build a JSX Renderer)_](https://jasonformat.com/wtf-is-jsx/)",
        "translatedContent": "* [**JavaScript**: _DIY 指南：建立你自己的 React_](https://github.com/hexacta/didact)"
      },
      {
        "row": 72,
        "rowsha": "o7Aj7aW8IcxH/mci6fRmnMZEMJciswAs+vaY8+Y88Kk=",
        "originContent": "* [**JavaScript**: _A DIY guide to build your own React_](https://github.com/hexacta/didact)",
        "translatedContent": "* [**JavaScript**: _從零開始建立 React_](https://www.youtube.com/watch?v=_MAD4Oly9yg) [影片]"
      },
      {
        "row": 73,
        "rowsha": "AQ5kQ2pjFtJumIg+BKu/iHlSH/G4SYXrwgVhGvaNqEo=",
        "originContent": "* [**JavaScript**: _Building React From Scratch_](https://www.youtube.com/watch?v=_MAD4Oly9yg) [video]",
        "translatedContent": "* [**JavaScript**: _Gooact：160 行 JavaScript 實作 React_](https://medium.com/@sweetpalma/gooact-react-in-160-lines-of-javascript-44e0742ad60f)"
      },
      {
        "row": 74,
        "rowsha": "O+RMTDHqsPIiitxa9/ZX51ISDQdVAIAhJ8m/FqubKBM=",
        "originContent": "* [**JavaScript**: _Gooact: React in 160 lines of JavaScript_](https://medium.com/@sweetpalma/gooact-react-in-160-lines-of-javascript-44e0742ad60f)",
        "translatedContent": "* [**JavaScript**: _透過建立你自己的輕量級 React DOM，了解 React Reconciler 套件的運作方式_](https://hackernoon.com/learn-you-some-custom-react-renderers-aed7164a4199)"
      },
      {
        "row": 75,
        "rowsha": "1Jm1Ui49aTG7Rc6+vdjun4PX4XJyktiV8N8cWv0hnxA=",
        "originContent": "* [**JavaScript**: _Learn how React Reconciler package works by building your own lightweight React DOM_](https://hackernoon.com/learn-you-some-custom-react-renderers-aed7164a4199)",
        "translatedContent": "* [**JavaScript**: _自己建立 Redux_](https://zapier.com/engineering/how-to-build-redux/)"
      },
      {
        "row": 76,
        "rowsha": "TKQ1eTXV85rXBEgzE/jzJtxl7v4OZd5fH2rWgipHyMA=",
        "originContent": "* [**JavaScript**: _Build Yourself a Redux_](https://zapier.com/engineering/how-to-build-redux/)",
        "translatedContent": "* [**JavaScript**: _讓我們一起寫 Redux！_](https://www.jamasoftware.com/blog/lets-write-redux/)"
      },
      {
        "row": 77,
        "rowsha": "UIqme+besAw0MeKZKIos/sNHHvnZDU6/stva7aLsDgc=",
        "originContent": "* [**JavaScript**: _Let’s Write Redux!_](https://www.jamasoftware.com/blog/lets-write-redux/)",
        "translatedContent": "* [**JavaScript**: _Redux：從零實作 Store_](https://egghead.io/lessons/react-redux-implementing-store-from-scratch) [影片]"
      },
      {
        "row": 78,
        "rowsha": "B1gJLhR/PjFBXz/Dxe7n6keIiPy6XMC4ACTJal+6I48=",
        "originContent": "* [**JavaScript**: _Redux: Implementing Store from Scratch_](https://egghead.io/lessons/react-redux-implementing-store-from-scratch) [video]",
        "translatedContent": "* [**JavaScript**: _用 200 行 JavaScript 建立你自己的簡易 AngularJS_](https://blog.mgechev.com/2015/03/09/build-learn-your-own-light-lightweight-angularjs/)"
      },
      {
        "row": 79,
        "rowsha": "pYEhg9+7iyTXgbJPriWceH6IRw9AOO3RwpIplg7NcDA=",
        "originContent": "* [**JavaScript**: _Build Your own Simplified AngularJS in 200 Lines of JavaScript_](https://blog.mgechev.com/2015/03/09/build-learn-your-own-light-lightweight-angularjs/)",
        "translatedContent": "* [**JavaScript**: _自己製作 AngularJS_](http://teropa.info/blog/2013/11/03/make-your-own-angular-part-1-scopes-and-digest.html)"
      },
      {
        "row": 80,
        "rowsha": "+mf0mHaMziIhv66d8w2h74s/18U1cm9BNsZnAYb7jc0=",
        "originContent": "* [**JavaScript**: _Make Your Own AngularJS_](http://teropa.info/blog/2013/11/03/make-your-own-angular-part-1-scopes-and-digest.html)",
        "translatedContent": "* [**JavaScript**: _如何撰寫你自己的虛擬 DOM_](https://medium.com/@deathmood/how-to-write-your-own-virtual-dom-ee74acc13060)"
      },
      {
        "row": 81,
        "rowsha": "ksPc7yBCXLKgXDPhiVzE/X7bfHfpVs+vcr12ut613dk=",
        "originContent": "* [**JavaScript**: _How to write your own Virtual DOM_](https://medium.com/@deathmood/how-to-write-your-own-virtual-dom-ee74acc13060)",
        "translatedContent": "* [**JavaScript**: _從零開始建立一個具有組件（模板、狀態、虛擬 DOM）的前端框架_](https://mfrachet.github.io/create-frontend-framework/)"
      },
      {
        "row": 82,
        "rowsha": "3/9dfpxkNRPUGPBpBkfBaEK4UluzeOm+EUzkhoFgvfk=",
        "originContent": "* [**JavaScript**: _Building a frontend framework, from scratch, with components (templating, state, VDOM)_](https://mfrachet.github.io/create-frontend-framework/)",
        "translatedContent": "* [**JavaScript**: _建立你自己的 React_](https://pomb.us/build-your-own-react/)"
      },
      {
        "row": 83,
        "rowsha": "nX/5Z342S8+4Aey67AELUBAb3Rha4JWcqLmc269Gmtw=",
        "originContent": "* [**JavaScript**: _Build your own React_](https://pomb.us/build-your-own-react/)",
        "translatedContent": "* [**JavaScript**: _建立自訂 React 渲染器_](https://youtu.be/CGpMlWVcHok) [影片]"
      },
      {
        "row": 84,
        "rowsha": "Xb0i0t/aTZO3dG5xmRY4nM6Cv08Q3V5iheZABmxDvAQ=",
        "originContent": "* [**JavaScript**: _Building a Custom React Renderer_](https://youtu.be/CGpMlWVcHok) [video]",
        "translatedContent": ""
      },
      {
        "row": 85,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### 建立你自己的 `遊戲`"
      },
      {
        "row": 86,
        "rowsha": "gAZ3I1xKmKPs233L4Vjk8QZcpPAvJrr8FSRyeMvF2yk=",
        "originContent": "#### Build your own `Game`",
        "translatedContent": ""
      },
      {
        "row": 87,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [**C**: _Handmade Hero_](https://handmadehero.org/)"
      },
      {
        "row": 88,
        "rowsha": "X53Z3X4ycpVhzg8sCaOgR7OiucHSJG0Hbg7MQc1uD1A=",
        "originContent": "* [**C**: _Handmade Hero_](https://handmadehero.org/)",
        "translatedContent": "* [**C**: _如何用 C 程式設計 NES 遊戲_](https://nesdoug.com/)"
      },
      {
        "row": 89,
        "rowsha": "VHzkrk28XSi0/ub8wochLj2anHtr5x/HaEZQxej4kPY=",
        "originContent": "* [**C**: _How to Program an NES game in C_](https://nesdoug.com/)",
        "translatedContent": "* [**C**: _C 語言西洋棋引擎_](https://www.youtube.com/playlist?list=PLZ1QII7yudbc-Ky058TEaOstZHVbT-2hg) [影片]"
      },
      {
        "row": 90,
        "rowsha": "+anpmL6tkVzi9hBXWTDLQhNUhQTyleaOATfgdROw4ZQ=",
        "originContent": "* [**C**: _Chess Engine In C_](https://www.youtube.com/playlist?list=PLZ1QII7yudbc-Ky058TEaOstZHVbT-2hg) [video]",
        "translatedContent": "* [**C**: _讓我們製作：Dangerous Dave_](https://www.youtube.com/playlist?list=PLSkJey49cOgTSj465v2KbLZ7LMn10bCF9) [影片]"
      },
      {
        "row": 91,
        "rowsha": "Q22A8PMZm5IQI2oBALTUv+b7wuOcguHSl//Gpk6V9yE=",
        "originContent": "* [**C**: _Let's Make: Dangerous Dave_](https://www.youtube.com/playlist?list=PLSkJey49cOgTSj465v2KbLZ7LMn10bCF9) [video]",
        "translatedContent": "* [**C**: _學習 C 語言的電子遊戲程式設計_](https://www.youtube.com/playlist?list=PLT6WFYYZE6uLMcPGS3qfpYm7T_gViYMMt)"
      },
      {
        "row": 92,
        "rowsha": "UeVTTaQr7KChvEDFRjgWjul+ACg6QnCbAQ+m7rEB9WY=",
        "originContent": "* [**C**: _Learn Video Game Programming in C_](https://www.youtube.com/playlist?list=PLT6WFYYZE6uLMcPGS3qfpYm7T_gViYMMt)",
        "translatedContent": "  [影片]"
      },
      {
        "row": 93,
        "rowsha": "KiM2Wx2jg2irW6Fjgppx6Eb+HEuTQ+EcTIde/YKMc9I=",
        "originContent": "  [video]",
        "translatedContent": "* [**C**: _用 C 撰寫數獨解題器_](https://www.youtube.com/playlist?list=PLkTXsX7igf8edTYU92nU-f5Ntzuf-RKvW) [影片]"
      },
      {
        "row": 94,
        "rowsha": "I0oJFg+clxf+GB/wY0ah3Rsw/hBHCfFz4FIRGMspDPc=",
        "originContent": "* [**C**: _Coding A Sudoku Solver in C_](https://www.youtube.com/playlist?list=PLkTXsX7igf8edTYU92nU-f5Ntzuf-RKvW) [video]",
        "translatedContent": "* [**C**: _用 C 撰寫 Rogue/Nethack 角色扮演遊戲_](https://www.youtube.com/playlist?list=PLkTXsX7igf8erbWGYT4iSAhpnJLJ0Nk5G) [影片]"
      },
      {
        "row": 95,
        "rowsha": "mm0e5b8SzgjZ9K0HLyThn4DqDjmWz9nAIrSGpqpWkpw=",
        "originContent": "* [**C**: _Coding a Rogue/Nethack RPG in C_](https://www.youtube.com/playlist?list=PLkTXsX7igf8erbWGYT4iSAhpnJLJ0Nk5G) [video]",
        "translatedContent": "* [**C**: _關於俄羅斯方塊與重新實作_](https://brennan.io/2015/06/12/tetris-reimplementation/)"
      },
      {
        "row": 96,
        "rowsha": "+SJ4e/Ws1AOpk2/1bmlAsUsHO7S3I407C72Loh+D1L8=",
        "originContent": "* [**C**: _On Tetris and Reimplementation_](https://brennan.io/2015/06/12/tetris-reimplementation/)",
        "translatedContent": "* [**C++**: _打磚塊遊戲_](https://learnopengl.com/In-Practice/2D-Game/Breakout)"
      },
      {
        "row": 97,
        "rowsha": "xXdm1ET5cRttEvE3C2GKcdAMXPgYAWKKDkABak4l3Ng=",
        "originContent": "* [**C++**: _Breakout_](https://learnopengl.com/In-Practice/2D-Game/Breakout)",
        "translatedContent": "* [**C++**: _遊戲程式設計入門 v2.0_](http://lazyfoo.net/tutorials/SDL/)"
      },
      {
        "row": 98,
        "rowsha": "IC4qEEVD5fMsA52/AKHtdgPygpzMWmSO44gGzAyuuQ8=",
        "originContent": "* [**C++**: _Beginning Game Programming v2.0_](http://lazyfoo.net/tutorials/SDL/)",
        "translatedContent": "* [**C++**: _專注於遊戲邏輯的跨平台 C++ 俄羅斯方塊教學_](http://javilop.com/gamedev/tetris-tutorial-in-c-platform-independent-focused-in-game-logic-for-beginners/)"
      },
      {
        "row": 99,
        "rowsha": "jyHSKrbqEkfOiv0H7sylS5vMTZmQumlvPBO29ph8gdY=",
        "originContent": "* [**C++**: _Tetris tutorial in C++ platform independent focused in game logic for beginners_](http://javilop.com/gamedev/tetris-tutorial-in-c-platform-independent-focused-in-game-logic-for-beginners/)",
        "translatedContent": "* [**C++**: _用 C++ 重製 Cavestory_](https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa) [影片]"
      },
      {
        "row": 100,
        "rowsha": "yP0aMgkhovFjymT9xVWZykMJu8j6SVFtDIsOo6DGe/g=",
        "originContent": "* [**C++**: _Remaking Cavestory in C++_](https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa) [video]",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 3,
    "Content": "* [**C++**: _Reconstructing Cave Story_](https://www.youtube.com/playlist?list=PL006xsVEsbKjSKBmLu1clo85yLrwjY67X) [video]\n* [**C++**: _Space Invaders from Scratch_](http://nicktasios.nl/posts/space-invaders-from-scratch-part-1.html)\n* [**C#**: _Learn C# by Building a Simple RPG_](http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/)\n* [**C#**: _Creating a Roguelike Game in C#_](https://roguesharp.wordpress.com/)\n* [**C#**: _Build a C#/WPF RPG_](https://scottlilly.com/build-a-cwpf-rpg/)\n* [**Go**: _Games With Go_](https://www.youtube.com/playlist?list=PLDZujg-VgQlZUy1iCqBbe5faZLMkA3g2x) [video]\n* [**Java**: _Code a 2D Game Engine using Java - Full Course for Beginners_](https://www.youtube.com/watch?v=025QFeZfeyM) [video]\n* [**Java**: _3D Game Development with LWJGL 3_](https://lwjglgamedev.gitbooks.io/3d-game-development-with-lwjgl/content/)\n* [**JavaScript**: _2D breakout game using Phaser_](https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser)\n* [**JavaScript**: _How to Make Flappy Bird in HTML5 With Phaser_](http://www.lessmilk.com/tutorial/flappy-bird-phaser-1)\n* [**JavaScript**: _Developing Games with React, Redux, and SVG_](https://auth0.com/blog/developing-games-with-react-redux-and-svg-part-1/)\n* [**JavaScript**: _Build your own 8-Ball Pool game from scratch_](https://www.youtube.com/watch?v=aXwCrtAo4Wc) [video]\n* [**JavaScript**: _How to Make Your First Roguelike_](https://gamedevelopment.tutsplus.com/tutorials/how-to-make-your-first-roguelike--gamedev-13677)\n* [**JavaScript**: _Think like a programmer: How to build Snake using only JavaScript, HTML & CSS_](https://medium.freecodecamp.org/think-like-a-programmer-how-to-build-snake-using-only-javascript-html-and-css-7b1479c3339e)\n* [**Lua**: _BYTEPATH_](https://github.com/SSYGEN/blog/issues/30)\n* [**Python**: _Developing Games With PyGame_](https://pythonprogramming.net/pygame-python-3-part-1-intro/)\n* [**Python**: _Making Games with Python & Pygame_](https://inventwithpython.com/makinggames.pdf) [pdf]\n* [**Python**: _Roguelike Tutorial Revised_](http://rogueliketutorials.com/)\n* [**Ruby**: _Developing Games With Ruby_](https://leanpub.com/developing-games-with-ruby/read)\n* [**Ruby**: _Ruby Snake_](https://www.diatomenterprises.com/gamedev-on-ruby-why-not/)\n* [**Rust**: _Adventures in Rust: A Basic 2D Game_](https://a5huynh.github.io/posts/2018/adventures-in-rust/)\n* [**Rust**: _Roguelike Tutorial in Rust + tcod_](https://tomassedovic.github.io/roguelike-tutorial/)\n\n#### Build your own `Git`\n\n* [**Haskell**: _Reimplementing “git clone” in Haskell from the bottom up_](http://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/)\n* [**JavaScript**: _Gitlet_](http://gitlet.maryrosecook.com/docs/gitlet.html)\n* [**JavaScript**: _Build GIT - Learn GIT_](https://kushagra.dev/blog/build-git-learn-git/)\n* [**Python**: _Just enough of a Git client to create a repo, commit, and push itself to GitHub_](https://benhoyt.com/writings/pygit/)\n* [**Python**: _Write yourself a Git!_](https://wyag.thb.lt/)\n* [**Python**: _ugit: Learn Git Internals by Building Git Yourself_](https://www.leshenko.net/p/ugit/)\n* [**Ruby**: _Rebuilding Git in Ruby_](https://robots.thoughtbot.com/rebuilding-git-in-ruby)\n\n#### Build your own `Network Stack`\n\n* [**C**: _Beej's Guide to Network Programming_](http://beej.us/guide/bgnet/)\n* [**C**: _Let's code a TCP/IP stack_](http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/)\n* [**C / Python**: _Build your own VPN/Virtual Switch_](https://github.com/peiyuanix/build-your-own-zerotier)\n* [**Ruby**: _How to build a network stack in Ruby_](https://medium.com/geckoboard-under-the-hood/how-to-build-a-network-stack-in-ruby-f73aeb1b661b)\n\n#### Build your own `Neural Network`\n\n* [**C#**: _Neural Network OCR_](https://www.codeproject.com/Articles/11285/Neural-Network-OCR)\n* [**F#**: _Building Neural Networks in F#_](https://towardsdatascience.com/building-neural-networks-in-f-part-1-a2832ae972e6)\n* [**Go**: _Build a multilayer perceptron with Golang_](https://made2591.github.io/posts/neuralnetwork)\n* [**Go**: _How to build a simple artificial neural network with Go_](https://sausheong.github.io/posts/how-to-build-a-simple-artificial-neural-network-with-go/)\n* [**Go**: _Building a Neural Net from Scratch in Go_](https://datadan.io/blog/neural-net-with-go)\n* [**JavaScript / Java**: _Neural Networks - The Nature of Code_](https://www.youtube.com/playlist?list=PLRqwX-V7Uu6aCibgK1PTWWu9by6XFdCfh) [video]\n* [**JavaScript**: _Neural networks from scratch for JavaScript linguists (Part1 — The Perceptron)_](https://hackernoon.com/neural-networks-from-scratch-for-javascript-linguists-part1-the-perceptron-632a4d1fbad2)\n* [**Python**: _A Neural Network in 11 lines of Python_](https://iamtrask.github.io/2015/07/12/basic-python-network/)\n* [**Python**: _Implement a Neural Network from Scratch_](https://victorzhou.com/blog/intro-to-neural-networks/)\n* [**Python**: _Optical Character Recognition (OCR)_](http://aosabook.org/en/500L/optical-character-recognition-ocr.html)\n* [**Python**: _Traffic signs classification with a convolutional network_](https://navoshta.com/traffic-signs-classification/)\n* [**Python**: _Generate Music using LSTM Neural Network in Keras_](https://towardsdatascience.com/how-to-generate-music-using-a-lstm-neural-network-in-keras-68786834d4c5)\n* [**Python**: _An Introduction to Convolutional Neural Networks_](https://victorzhou.com/blog/intro-to-cnns-part-1/)\n* [**Python**: _Neural Networks: Zero to Hero_](https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ)\n\n#### Build your own `Operating System`\n\n* [**Assembly**: _Writing a Tiny x86 Bootloader_](http://joebergeron.io/posts/post_two.html)\n* [**Assembly**: _Baking Pi – Operating Systems Development_](http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/index.html)\n* [**C**: _Building a software and hardware stack for a simple computer from scratch_](https://www.youtube.com/watch?v=ZjwvMcP3Nf0&list=PLU94OURih-CiP4WxKSMt3UcwMSDM3aTtX) [video]\n* [**C**: _Operating Systems: From 0 to 1_](https://tuhdo.github.io/os01/)\n* [**C**: _The little book about OS development_](https://littleosbook.github.io/)\n* [**C**: _Roll your own toy UNIX-clone OS_](http://jamesmolloy.co.uk/tutorial_html/)\n* [**C**: _Kernel 101 – Let’s write a Kernel_](https://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel)\n* [**C**: _Kernel 201 – Let’s write a Kernel with keyboard and screen support_](https://arjunsreedharan.org/post/99370248137/kernel-201-lets-write-a-kernel-with-keyboard)\n* [**C**: _Build a minimal multi-tasking kernel for ARM from scratch_](https://github.com/jserv/mini-arm-os)\n* [**C**: _How to create an OS from scratch_](https://github.com/cfenollosa/os-tutorial)\n* [**C**: _Malloc tutorial_](https://danluu.com/malloc-tutorial/)\n* [**C**: _Hack the virtual memory_](https://blog.holbertonschool.com/hack-the-virtual-memory-c-strings-proc/)\n* [**C**: _Learning operating system development using Linux kernel and Raspberry Pi_](https://github.com/s-matyukevich/raspberry-pi-os)\n* [**C**: _Operating systems development for Dummies_](https://medium.com/@lduck11007/operating-systems-development-for-dummies-3d4d786e8ac)\n* [**C++**: _Write your own Operating System_](https://www.youtube.com/playlist?list=PLHh55M_Kq4OApWScZyPl5HhgsTJS9MZ6M) [video]\n* [**C++**: _Writing a Bootloader_](http://3zanders.co.uk/2017/10/13/writing-a-bootloader/)\n* [**Rust**: _Writing an OS in Rust_](https://os.phil-opp.com/)\n* [**Rust**: _Add RISC-V Rust Operating System Tutorial_](https://osblog.stephenmarz.com/)\n* [**(any)**: _Linux from scratch_](https://linuxfromscratch.org/lfs)\n\n#### Build your own `Physics Engine`\n\n* [**C**: _Video Game Physics Tutorial_](https://www.toptal.com/game/video-game-physics-part-i-an-introduction-to-rigid-body-dynamics)\n* [**C++**: _Game physics series by Allen Chou_](http://allenchou.net/game-physics-series/)\n* [**C++**: _How to Create a Custom Physics Engine_](https://gamedevelopment.tutsplus.com/series/how-to-create-a-custom-physics-engine--gamedev-12715)\n* [**C++**: _3D Physics Engine Tutorial_](https://www.youtube.com/playlist?list=PLEETnX-uPtBXm1KEr_2zQ6K_0hoGH6JJ0) [video]\n* [**JavaScript**: _How Physics Engines Work_](http://buildnewgames.com/gamephysics/)\n* [**JavaScript**: _Broad Phase Collision Detection Using Spatial Partitioning_](http://buildnewgames.com/broad-phase-collision-detection/)\n* [**JavaScript**: _Build a simple 2D physics engine for JavaScript games_](https://developer.ibm.com/tutorials/wa-build2dphysicsengine/?mhsrc=ibmsearch_a&mhq=2dphysic)\n\n#### Build your own `Programming Language`\n\n* [**(any)**: _mal - Make a Lisp_](https://github.com/kanaka/mal#mal---make-a-lisp)\n* [**Assembly**: _Jonesforth_](https://github.com/nornagon/jonesforth/blob/master/jonesforth.S)\n* [**C**: _Baby's First Garbage Collector_](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)\n* [**C**: _Build Your Own Lisp: Learn C and build your own programming language in 1000 lines of code_](http://www.buildyourownlisp.com/)\n* [**C**: _Writing a Simple Garbage Collector in C_](http://maplant.com/gc.html)\n* [**C**: _C interpreter that interprets itself._](https://github.com/lotabout/write-a-C-interpreter)\n* [**C**: _A C & x86 version of the \"Let's Build a Compiler\" by Jack Crenshaw_](https://github.com/lotabout/Let-s-build-a-compiler)\n* [**C**: _A journey explaining how to build a compiler from scratch_](https://github.com/DoctorWkt/acwj)\n* [**C++**: _Writing Your Own Toy Compiler Using Flex_](https://gnuu.org/2009/09/18/writing-your-own-toy-compiler/)",
    "ContentSha": "7aATIYPFON/mEMNnZq1QPHSZ5OvMgoDmSMCwqQiLqOM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [**C++**：_重建洞窟故事_](https://www.youtube.com/playlist?list=PL006xsVEsbKjSKBmLu1clo85yLrwjY67X) [影片]\n* [**C++**：_從零開始製作太空侵略者_](http://nicktasios.nl/posts/space-invaders-from-scratch-part-1.html)\n* [**C#**：_透過建立簡單RPG學習C#_](http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/)\n* [**C#**：_用C#創建Roguelike遊戲_](https://roguesharp.wordpress.com/)\n* [**C#**：_打造C#/WPF RPG_](https://scottlilly.com/build-a-cwpf-rpg/)\n* [**Go**：_用Go製作遊戲_](https://www.youtube.com/playlist?list=PLDZujg-VgQlZUy1iCqBbe5faZLMkA3g2x) [影片]\n* [**Java**：_使用Java編寫2D遊戲引擎 - 初學者完整課程_](https://www.youtube.com/watch?v=025QFeZfeyM) [影片]\n* [**Java**：_使用LWJGL 3的3D遊戲開發_](https://lwjglgamedev.gitbooks.io/3d-game-development-with-lwjgl/content/)\n* [**JavaScript**：_使用Phaser製作2D打磚塊遊戲_](https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser)\n* [**JavaScript**：_如何用Phaser在HTML5中製作Flappy Bird_](http://www.lessmilk.com/tutorial/flappy-bird-phaser-1)\n* [**JavaScript**：_用React、Redux和SVG開發遊戲_](https://auth0.com/blog/developing-games-with-react-redux-and-svg-part-1/)\n* [**JavaScript**：_從零開始打造自己的8球撞球遊戲_](https://www.youtube.com/watch?v=aXwCrtAo4Wc) [影片]\n* [**JavaScript**：_如何製作你的第一個Roguelike_](https://gamedevelopment.tutsplus.com/tutorials/how-to-make-your-first-roguelike--gamedev-13677)\n* [**JavaScript**：_像程式設計師一樣思考：如何只用JavaScript、HTML和CSS打造貪食蛇_](https://medium.freecodecamp.org/think-like-a-programmer-how-to-build-snake-using-only-javascript-html-and-css-7b1479c3339e)\n* [**Lua**：_BYTEPATH_](https://github.com/SSYGEN/blog/issues/30)\n* [**Python**：_使用PyGame開發遊戲_](https://pythonprogramming.net/pygame-python-3-part-1-intro/)\n* [**Python**：_用Python與Pygame製作遊戲_](https://inventwithpython.com/makinggames.pdf) [pdf]\n* [**Python**：_Roguelike教學修訂版_](http://rogueliketutorials.com/)\n* [**Ruby**：_用Ruby開發遊戲_](https://leanpub.com/developing-games-with-ruby/read)\n* [**Ruby**：_Ruby貪食蛇_](https://www.diatomenterprises.com/gamedev-on-ruby-why-not/)\n* [**Rust**：_Rust冒險：基本2D遊戲_](https://a5huynh.github.io/posts/2018/adventures-in-rust/)\n* [**Rust**：_Rust + tcod的Roguelike教學_](https://tomassedovic.github.io/roguelike-tutorial/)\n\n#### 建立你自己的 `Git`\n\n* [**Haskell**：_從底層用Haskell重寫“git clone”_](http://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/)\n* [**JavaScript**：_Gitlet_](http://gitlet.maryrosecook.com/docs/gitlet.html)\n* [**JavaScript**：_打造GIT - 學習GIT_](https://kushagra.dev/blog/build-git-learn-git/)\n* [**Python**：_剛好能建立倉庫、提交並推送到GitHub的Git用戶端_](https://benhoyt.com/writings/pygit/)\n* [**Python**：_自己寫一個Git!_](https://wyag.thb.lt/)\n* [**Python**：_ugit：透過自己打造Git學習Git內部原理_](https://www.leshenko.net/p/ugit/)\n* [**Ruby**：_用Ruby重建Git_](https://robots.thoughtbot.com/rebuilding-git-in-ruby)\n\n#### 建立你自己的 `網路堆疊`\n\n* [**C**：_Beej的網路程式設計指南_](http://beej.us/guide/bgnet/)\n* [**C**：_讓我們編寫TCP/IP堆疊_](http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/)\n* [**C / Python**：_打造你自己的VPN/虛擬交換器_](https://github.com/peiyuanix/build-your-own-zerotier)\n* [**Ruby**：_如何用Ruby建立網路堆疊_](https://medium.com/geckoboard-under-the-hood/how-to-build-a-network-stack-in-ruby-f73aeb1b661b)\n\n#### 建立你自己的 `神經網路`\n\n* [**C#**：_神經網路OCR_](https://www.codeproject.com/Articles/11285/Neural-Network-OCR)\n* [**F#**：_用F#建立神經網路_](https://towardsdatascience.com/building-neural-networks-in-f-part-1-a2832ae972e6)\n* [**Go**：_用Golang打造多層感知器_](https://made2591.github.io/posts/neuralnetwork)\n* [**Go**：_如何用Go建立簡單人工神經網路_](https://sausheong.github.io/posts/how-to-build-a-simple-artificial-neural-network-with-go/)\n* [**Go**：_從零開始用Go建造神經網路_](https://datadan.io/blog/neural-net-with-go)\n* [**JavaScript / Java**：_神經網路 - 程式的本質_](https://www.youtube.com/playlist?list=PLRqwX-V7Uu6aCibgK1PTWWu9by6XFdCfh) [影片]\n* [**JavaScript**：_為JavaScript語言學者打造的神經網路 (第一部分—感知器)_](https://hackernoon.com/neural-networks-from-scratch-for-javascript-linguists-part1-the-perceptron-632a4d1fbad2)\n* [**Python**：_11行Python實作神經網路_](https://iamtrask.github.io/2015/07/12/basic-python-network/)\n* [**Python**：_從零開始實作神經網路_](https://victorzhou.com/blog/intro-to-neural-networks/)\n* [**Python**：_光學字符識別 (OCR)_](http://aosabook.org/en/500L/optical-character-recognition-ocr.html)\n* [**Python**：_用卷積網路做交通標誌分類_](https://navoshta.com/traffic-signs-classification/)\n* [**Python**：_用Keras的LSTM神經網路生成音樂_](https://towardsdatascience.com/how-to-generate-music-using-a-lstm-neural-network-in-keras-68786834d4c5)\n* [**Python**：_卷積神經網路入門_](https://victorzhou.com/blog/intro-to-cnns-part-1/)\n* [**Python**：_神經網路：從零到英雄_](https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ)\n\n#### 建立你自己的 `作業系統`\n\n* [**組合語言**：_撰寫微型x86開機載入程式_](http://joebergeron.io/posts/post_two.html)\n* [**組合語言**：_Baking Pi – 作業系統開發_](http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/index.html)\n* [**C**：_從零開始打造簡單電腦的軟硬體堆疊_](https://www.youtube.com/watch?v=ZjwvMcP3Nf0&list=PLU94OURih-CiP4WxKSMt3UcwMSDM3aTtX) [影片]\n* [**C**：_作業系統：從0到1_](https://tuhdo.github.io/os01/)\n* [**C**：_關於作業系統開發的小書_](https://littleosbook.github.io/)\n* [**C**：_打造自己的玩具UNIX克隆作業系統_](http://jamesmolloy.co.uk/tutorial_html/)\n* [**C**：_Kernel 101 – 讓我們寫一個Kernel_](https://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel)\n* [**C**：_Kernel 201 – 撰寫具鍵盤與螢幕支援的Kernel_](https://arjunsreedharan.org/post/99370248137/kernel-201-lets-write-a-kernel-with-keyboard)\n* [**C**：_從零打造ARM多工核心_](https://github.com/jserv/mini-arm-os)\n* [**C**：_如何從零開始創建作業系統_](https://github.com/cfenollosa/os-tutorial)\n* [**C**：_記憶體配置教學_](https://danluu.com/malloc-tutorial/)\n* [**C**：_駭入虛擬記憶體_](https://blog.holbertonschool.com/hack-the-virtual-memory-c-strings-proc/)\n* [**C**：_使用Linux核心與Raspberry Pi學習作業系統開發_](https://github.com/s-matyukevich/raspberry-pi-os)\n* [**C**：_作業系統開發入門_](https://medium.com/@lduck11007/operating-systems-development-for-dummies-3d4d786e8ac)\n* [**C++**：_撰寫你自己的作業系統_](https://www.youtube.com/playlist?list=PLHh55M_Kq4OApWScZyPl5HhgsTJS9MZ6M) [影片]\n* [**C++**：_撰寫開機載入程式_](http://3zanders.co.uk/2017/10/13/writing-a-bootloader/)\n* [**Rust**：_用Rust撰寫作業系統_](https://os.phil-opp.com/)\n* [**Rust**：_新增RISC-V Rust作業系統教學_](https://osblog.stephenmarz.com/)\n* [**(任意語言)**：_從零開始的Linux_](https://linuxfromscratch.org/lfs)\n\n#### 建立你自己的 `物理引擎`\n\n* [**C**：_電玩物理學教學_](https://www.toptal.com/game/video-game-physics-part-i-an-introduction-to-rigid-body-dynamics)\n* [**C++**：_Allen Chou的遊戲物理系列_](http://allenchou.net/game-physics-series/)\n* [**C++**：_如何打造自訂物理引擎_](https://gamedevelopment.tutsplus.com/series/how-to-create-a-custom-physics-engine--gamedev-12715)\n* [**C++**：_3D物理引擎教學_](https://www.youtube.com/playlist?list=PLEETnX-uPtBXm1KEr_2zQ6K_0hoGH6JJ0) [影片]\n* [**JavaScript**：_物理引擎如何運作_](http://buildnewgames.com/gamephysics/)\n* [**JavaScript**：_利用空間劃分進行廣域碰撞偵測_](http://buildnewgames.com/broad-phase-collision-detection/)\n* [**JavaScript**：_為JavaScript遊戲打造簡單2D物理引擎_](https://developer.ibm.com/tutorials/wa-build2dphysicsengine/?mhsrc=ibmsearch_a&mhq=2dphysic)\n\n#### 建立你自己的 `程式語言`\n\n* [**(任意語言)**：_mal - 製作一個Lisp_](https://github.com/kanaka/mal#mal---make-a-lisp)\n* [**組合語言**：_Jonesforth_](https://github.com/nornagon/jonesforth/blob/master/jonesforth.S)\n* [**C**：_寶寶的第一個垃圾收集器_](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)\n* [**C**：_打造你自己的Lisp：學習C並用1000行程式碼寫出你的程式語言_](http://www.buildyourownlisp.com/)\n* [**C**：_用C撰寫簡單垃圾收集器_](http://maplant.com/gc.html)\n* [**C**：_自我解譯的C語言直譯器_](https://github.com/lotabout/write-a-C-interpreter)\n* [**C**：_Jack Crenshaw的“讓我們打造一個編譯器”的C與x86版本_](https://github.com/lotabout/Let-s-build-a-compiler)\n* [**C**：_一段說明如何從零打造編譯器的旅程_](https://github.com/DoctorWkt/acwj)\n* [**C++**：_用Flex撰寫你自己的玩具編譯器_](https://gnuu.org/2009/09/18/writing-your-own-toy-compiler/)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rm8mqk3VFXyPBvPm8viNZACnuSMpLR62KCtP+mFPONQ=",
        "originContent": "* [**C++**: _Reconstructing Cave Story_](https://www.youtube.com/playlist?list=PL006xsVEsbKjSKBmLu1clo85yLrwjY67X) [video]",
        "translatedContent": "* [**C++**：_重建洞窟故事_](https://www.youtube.com/playlist?list=PL006xsVEsbKjSKBmLu1clo85yLrwjY67X) [影片]"
      },
      {
        "row": 2,
        "rowsha": "H9dzNvYmRhoe++HvvMUKicMOeWRzbmcwn5SDc/gyqcY=",
        "originContent": "* [**C++**: _Space Invaders from Scratch_](http://nicktasios.nl/posts/space-invaders-from-scratch-part-1.html)",
        "translatedContent": "* [**C++**：_從零開始製作太空侵略者_](http://nicktasios.nl/posts/space-invaders-from-scratch-part-1.html)"
      },
      {
        "row": 3,
        "rowsha": "uZI0U4g9MiskZ6BEhxZGHEBKj7745WXtc7Z6Sya5FwY=",
        "originContent": "* [**C#**: _Learn C# by Building a Simple RPG_](http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/)",
        "translatedContent": "* [**C#**：_透過建立簡單RPG學習C#_](http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/)"
      },
      {
        "row": 4,
        "rowsha": "U4WmUL+fg6AoGQd3oHtC2ISeSA4/F1ru3eWv0ZVEu/4=",
        "originContent": "* [**C#**: _Creating a Roguelike Game in C#_](https://roguesharp.wordpress.com/)",
        "translatedContent": "* [**C#**：_用C#創建Roguelike遊戲_](https://roguesharp.wordpress.com/)"
      },
      {
        "row": 5,
        "rowsha": "7M6FcVYqEx5FDbWzs92e0wIir/l4MkoEJzJpDN43kjE=",
        "originContent": "* [**C#**: _Build a C#/WPF RPG_](https://scottlilly.com/build-a-cwpf-rpg/)",
        "translatedContent": "* [**C#**：_打造C#/WPF RPG_](https://scottlilly.com/build-a-cwpf-rpg/)"
      },
      {
        "row": 6,
        "rowsha": "ro5dr+MWv43GCWvwcfFCaxUrIppkl5z2E5Ep/dAYqpY=",
        "originContent": "* [**Go**: _Games With Go_](https://www.youtube.com/playlist?list=PLDZujg-VgQlZUy1iCqBbe5faZLMkA3g2x) [video]",
        "translatedContent": "* [**Go**：_用Go製作遊戲_](https://www.youtube.com/playlist?list=PLDZujg-VgQlZUy1iCqBbe5faZLMkA3g2x) [影片]"
      },
      {
        "row": 7,
        "rowsha": "6SB9df0iwIEAqNxGpzruPjHrfZn1JUhj1mM27K2hjgQ=",
        "originContent": "* [**Java**: _Code a 2D Game Engine using Java - Full Course for Beginners_](https://www.youtube.com/watch?v=025QFeZfeyM) [video]",
        "translatedContent": "* [**Java**：_使用Java編寫2D遊戲引擎 - 初學者完整課程_](https://www.youtube.com/watch?v=025QFeZfeyM) [影片]"
      },
      {
        "row": 8,
        "rowsha": "/ik9xxN4UscHloa2mJlwDquiJ4ASRzUJBkpLiiHo1HU=",
        "originContent": "* [**Java**: _3D Game Development with LWJGL 3_](https://lwjglgamedev.gitbooks.io/3d-game-development-with-lwjgl/content/)",
        "translatedContent": "* [**Java**：_使用LWJGL 3的3D遊戲開發_](https://lwjglgamedev.gitbooks.io/3d-game-development-with-lwjgl/content/)"
      },
      {
        "row": 9,
        "rowsha": "xv+68zPnuyjs0EX9gMufi9nkJUGIDcb2Yvnr8gnAxXU=",
        "originContent": "* [**JavaScript**: _2D breakout game using Phaser_](https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser)",
        "translatedContent": "* [**JavaScript**：_使用Phaser製作2D打磚塊遊戲_](https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser)"
      },
      {
        "row": 10,
        "rowsha": "zgsKUrwKMxcCLq8EjRq0bMRlZLxT/H8aClN4PCjx4nw=",
        "originContent": "* [**JavaScript**: _How to Make Flappy Bird in HTML5 With Phaser_](http://www.lessmilk.com/tutorial/flappy-bird-phaser-1)",
        "translatedContent": "* [**JavaScript**：_如何用Phaser在HTML5中製作Flappy Bird_](http://www.lessmilk.com/tutorial/flappy-bird-phaser-1)"
      },
      {
        "row": 11,
        "rowsha": "IzEVQuCNxJxBnFqTAeuybX4ULLqISB2Mzpc85GErD3Q=",
        "originContent": "* [**JavaScript**: _Developing Games with React, Redux, and SVG_](https://auth0.com/blog/developing-games-with-react-redux-and-svg-part-1/)",
        "translatedContent": "* [**JavaScript**：_用React、Redux和SVG開發遊戲_](https://auth0.com/blog/developing-games-with-react-redux-and-svg-part-1/)"
      },
      {
        "row": 12,
        "rowsha": "yy1zfDcuGdwlSYMrnuVgRtLtDmrESvL3/DznbLwqQgY=",
        "originContent": "* [**JavaScript**: _Build your own 8-Ball Pool game from scratch_](https://www.youtube.com/watch?v=aXwCrtAo4Wc) [video]",
        "translatedContent": "* [**JavaScript**：_從零開始打造自己的8球撞球遊戲_](https://www.youtube.com/watch?v=aXwCrtAo4Wc) [影片]"
      },
      {
        "row": 13,
        "rowsha": "65mKbc1azoORRCPm3QThdRs7kkzKnoyW6QPuU2mnHIQ=",
        "originContent": "* [**JavaScript**: _How to Make Your First Roguelike_](https://gamedevelopment.tutsplus.com/tutorials/how-to-make-your-first-roguelike--gamedev-13677)",
        "translatedContent": "* [**JavaScript**：_如何製作你的第一個Roguelike_](https://gamedevelopment.tutsplus.com/tutorials/how-to-make-your-first-roguelike--gamedev-13677)"
      },
      {
        "row": 14,
        "rowsha": "7lzoc9frwyThw7hSVHBQz5BQ1DjuLjyQ2Q4hoJqnTZI=",
        "originContent": "* [**JavaScript**: _Think like a programmer: How to build Snake using only JavaScript, HTML & CSS_](https://medium.freecodecamp.org/think-like-a-programmer-how-to-build-snake-using-only-javascript-html-and-css-7b1479c3339e)",
        "translatedContent": "* [**JavaScript**：_像程式設計師一樣思考：如何只用JavaScript、HTML和CSS打造貪食蛇_](https://medium.freecodecamp.org/think-like-a-programmer-how-to-build-snake-using-only-javascript-html-and-css-7b1479c3339e)"
      },
      {
        "row": 15,
        "rowsha": "3/24ClZNS8bJbpwfH4KTDXyli7UrQDGS2bd2b+Vhra4=",
        "originContent": "* [**Lua**: _BYTEPATH_](https://github.com/SSYGEN/blog/issues/30)",
        "translatedContent": "* [**Lua**：_BYTEPATH_](https://github.com/SSYGEN/blog/issues/30)"
      },
      {
        "row": 16,
        "rowsha": "XVdf1msnVW6Q0ho+HSXP+tliwSvcdoEXznPDBCHej9c=",
        "originContent": "* [**Python**: _Developing Games With PyGame_](https://pythonprogramming.net/pygame-python-3-part-1-intro/)",
        "translatedContent": "* [**Python**：_使用PyGame開發遊戲_](https://pythonprogramming.net/pygame-python-3-part-1-intro/)"
      },
      {
        "row": 17,
        "rowsha": "602MERNwCJ1mNS58qxDqHgkCpPIkPovP4bl3r/R+7As=",
        "originContent": "* [**Python**: _Making Games with Python & Pygame_](https://inventwithpython.com/makinggames.pdf) [pdf]",
        "translatedContent": "* [**Python**：_用Python與Pygame製作遊戲_](https://inventwithpython.com/makinggames.pdf) [pdf]"
      },
      {
        "row": 18,
        "rowsha": "Z0jCyNEWq0fyYrbV9CrO3uAFAOof7j/RorSLmahYrts=",
        "originContent": "* [**Python**: _Roguelike Tutorial Revised_](http://rogueliketutorials.com/)",
        "translatedContent": "* [**Python**：_Roguelike教學修訂版_](http://rogueliketutorials.com/)"
      },
      {
        "row": 19,
        "rowsha": "U4B2b0kBq9lJB/Z2itVUd5BZlgb8tMhccTO3KKRkHT0=",
        "originContent": "* [**Ruby**: _Developing Games With Ruby_](https://leanpub.com/developing-games-with-ruby/read)",
        "translatedContent": "* [**Ruby**：_用Ruby開發遊戲_](https://leanpub.com/developing-games-with-ruby/read)"
      },
      {
        "row": 20,
        "rowsha": "B5XrtxrTwuAxGOMXKKgXeEs1w2aFHbqUZLf3QO0NfmQ=",
        "originContent": "* [**Ruby**: _Ruby Snake_](https://www.diatomenterprises.com/gamedev-on-ruby-why-not/)",
        "translatedContent": "* [**Ruby**：_Ruby貪食蛇_](https://www.diatomenterprises.com/gamedev-on-ruby-why-not/)"
      },
      {
        "row": 21,
        "rowsha": "AHhI/j48z8TyJ8EMwZmE0aNO+E31gYhtTtEUeNqJO4Y=",
        "originContent": "* [**Rust**: _Adventures in Rust: A Basic 2D Game_](https://a5huynh.github.io/posts/2018/adventures-in-rust/)",
        "translatedContent": "* [**Rust**：_Rust冒險：基本2D遊戲_](https://a5huynh.github.io/posts/2018/adventures-in-rust/)"
      },
      {
        "row": 22,
        "rowsha": "LfLJ5YqWHCG5Yf1es0iweCC7DpsWdGmvFEAois/DkIE=",
        "originContent": "* [**Rust**: _Roguelike Tutorial in Rust + tcod_](https://tomassedovic.github.io/roguelike-tutorial/)",
        "translatedContent": "* [**Rust**：_Rust + tcod的Roguelike教學_](https://tomassedovic.github.io/roguelike-tutorial/)"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "GQGGmAZB2YTsePZlHf9a8u+oEDthqGuVmFMCSB72TGE=",
        "originContent": "#### Build your own `Git`",
        "translatedContent": "#### 建立你自己的 `Git`"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "tqBkzvaSXeCd/UwiEyXWcwnYzBAS6oqVJmae6H5PLm8=",
        "originContent": "* [**Haskell**: _Reimplementing “git clone” in Haskell from the bottom up_](http://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/)",
        "translatedContent": "* [**Haskell**：_從底層用Haskell重寫“git clone”_](http://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/)"
      },
      {
        "row": 27,
        "rowsha": "kkHTcZxYNGlLD5adCI7bwzlZKju/ChUIOjynZyj0epg=",
        "originContent": "* [**JavaScript**: _Gitlet_](http://gitlet.maryrosecook.com/docs/gitlet.html)",
        "translatedContent": "* [**JavaScript**：_Gitlet_](http://gitlet.maryrosecook.com/docs/gitlet.html)"
      },
      {
        "row": 28,
        "rowsha": "lvZp3Fr+PARFSFsSryGh8syX9eNOta/J82wN7qgjahg=",
        "originContent": "* [**JavaScript**: _Build GIT - Learn GIT_](https://kushagra.dev/blog/build-git-learn-git/)",
        "translatedContent": "* [**JavaScript**：_打造GIT - 學習GIT_](https://kushagra.dev/blog/build-git-learn-git/)"
      },
      {
        "row": 29,
        "rowsha": "Oc1vMeb4CPCCWsGprJzEaBEcGZkk4LKuuV57HvVSkTU=",
        "originContent": "* [**Python**: _Just enough of a Git client to create a repo, commit, and push itself to GitHub_](https://benhoyt.com/writings/pygit/)",
        "translatedContent": "* [**Python**：_剛好能建立倉庫、提交並推送到GitHub的Git用戶端_](https://benhoyt.com/writings/pygit/)"
      },
      {
        "row": 30,
        "rowsha": "D0lxtL9KeawIs5xCALK5jPIeGlNK3uhUAam5BmkHyvk=",
        "originContent": "* [**Python**: _Write yourself a Git!_](https://wyag.thb.lt/)",
        "translatedContent": "* [**Python**：_自己寫一個Git!_](https://wyag.thb.lt/)"
      },
      {
        "row": 31,
        "rowsha": "5FeSwpwHD4rJ+fVzU/M9WT54bE3pIaYebl2qcpx8dCc=",
        "originContent": "* [**Python**: _ugit: Learn Git Internals by Building Git Yourself_](https://www.leshenko.net/p/ugit/)",
        "translatedContent": "* [**Python**：_ugit：透過自己打造Git學習Git內部原理_](https://www.leshenko.net/p/ugit/)"
      },
      {
        "row": 32,
        "rowsha": "JZL0v3ZaSgfy34zkrn/fkO2BUEpn0tFZiINferEHhxk=",
        "originContent": "* [**Ruby**: _Rebuilding Git in Ruby_](https://robots.thoughtbot.com/rebuilding-git-in-ruby)",
        "translatedContent": "* [**Ruby**：_用Ruby重建Git_](https://robots.thoughtbot.com/rebuilding-git-in-ruby)"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "v1dxtJt/GBb/MZu+e/jyJq/CPhJYgWDME4m9CtcZ+rQ=",
        "originContent": "#### Build your own `Network Stack`",
        "translatedContent": "#### 建立你自己的 `網路堆疊`"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "XEN5+1F5F3ImDydF0Kx3UIHZa2/TCUoqXn3GMoTpYiE=",
        "originContent": "* [**C**: _Beej's Guide to Network Programming_](http://beej.us/guide/bgnet/)",
        "translatedContent": "* [**C**：_Beej的網路程式設計指南_](http://beej.us/guide/bgnet/)"
      },
      {
        "row": 37,
        "rowsha": "y7hSGVEqsYbpaBxaAynvOw5GIiH45RKJSh1O9H+04zo=",
        "originContent": "* [**C**: _Let's code a TCP/IP stack_](http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/)",
        "translatedContent": "* [**C**：_讓我們編寫TCP/IP堆疊_](http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/)"
      },
      {
        "row": 38,
        "rowsha": "buTICIWigAsZpnK66vd6kz6oRP0vixCou5I98cIGcuo=",
        "originContent": "* [**C / Python**: _Build your own VPN/Virtual Switch_](https://github.com/peiyuanix/build-your-own-zerotier)",
        "translatedContent": "* [**C / Python**：_打造你自己的VPN/虛擬交換器_](https://github.com/peiyuanix/build-your-own-zerotier)"
      },
      {
        "row": 39,
        "rowsha": "IxtW1xgGH7IIzUQQBOO3dGllJXc+kIQZ0ljpopQ/ZIM=",
        "originContent": "* [**Ruby**: _How to build a network stack in Ruby_](https://medium.com/geckoboard-under-the-hood/how-to-build-a-network-stack-in-ruby-f73aeb1b661b)",
        "translatedContent": "* [**Ruby**：_如何用Ruby建立網路堆疊_](https://medium.com/geckoboard-under-the-hood/how-to-build-a-network-stack-in-ruby-f73aeb1b661b)"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 41,
        "rowsha": "5yjQid4lHRxxBbbegjKQ/1ytkEtI2iDshQzAIOTZXfg=",
        "originContent": "#### Build your own `Neural Network`",
        "translatedContent": "#### 建立你自己的 `神經網路`"
      },
      {
        "row": 42,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 43,
        "rowsha": "WmAffliVObFMQkxyg8yOOj512rlQRX049Uzr5O5hZ0E=",
        "originContent": "* [**C#**: _Neural Network OCR_](https://www.codeproject.com/Articles/11285/Neural-Network-OCR)",
        "translatedContent": "* [**C#**：_神經網路OCR_](https://www.codeproject.com/Articles/11285/Neural-Network-OCR)"
      },
      {
        "row": 44,
        "rowsha": "Mh9MyxN1PdEvKsPH0gvFBjZ24wQdoZKbDKq1TE/1e8A=",
        "originContent": "* [**F#**: _Building Neural Networks in F#_](https://towardsdatascience.com/building-neural-networks-in-f-part-1-a2832ae972e6)",
        "translatedContent": "* [**F#**：_用F#建立神經網路_](https://towardsdatascience.com/building-neural-networks-in-f-part-1-a2832ae972e6)"
      },
      {
        "row": 45,
        "rowsha": "jvo0+EOZOyw05QzNEWhcdReTgLAJ1iYjhzJfXjfcHBc=",
        "originContent": "* [**Go**: _Build a multilayer perceptron with Golang_](https://made2591.github.io/posts/neuralnetwork)",
        "translatedContent": "* [**Go**：_用Golang打造多層感知器_](https://made2591.github.io/posts/neuralnetwork)"
      },
      {
        "row": 46,
        "rowsha": "nnONqldKt41+qNr5dxBLAmGAnfRLQeIH+9ofrqMJd94=",
        "originContent": "* [**Go**: _How to build a simple artificial neural network with Go_](https://sausheong.github.io/posts/how-to-build-a-simple-artificial-neural-network-with-go/)",
        "translatedContent": "* [**Go**：_如何用Go建立簡單人工神經網路_](https://sausheong.github.io/posts/how-to-build-a-simple-artificial-neural-network-with-go/)"
      },
      {
        "row": 47,
        "rowsha": "HYfZIaCDRurF+2G5OI+XrltyvZUR7DpuQYbVlicgdhw=",
        "originContent": "* [**Go**: _Building a Neural Net from Scratch in Go_](https://datadan.io/blog/neural-net-with-go)",
        "translatedContent": "* [**Go**：_從零開始用Go建造神經網路_](https://datadan.io/blog/neural-net-with-go)"
      },
      {
        "row": 48,
        "rowsha": "5gETON2zXFDqZ3HMDjd8YpstIXdmmiDDrbqcAZzf6uA=",
        "originContent": "* [**JavaScript / Java**: _Neural Networks - The Nature of Code_](https://www.youtube.com/playlist?list=PLRqwX-V7Uu6aCibgK1PTWWu9by6XFdCfh) [video]",
        "translatedContent": "* [**JavaScript / Java**：_神經網路 - 程式的本質_](https://www.youtube.com/playlist?list=PLRqwX-V7Uu6aCibgK1PTWWu9by6XFdCfh) [影片]"
      },
      {
        "row": 49,
        "rowsha": "UsQSw7y0oarvv83RLHOV2e85jvU3knAEeuSPNHQlvm4=",
        "originContent": "* [**JavaScript**: _Neural networks from scratch for JavaScript linguists (Part1 — The Perceptron)_](https://hackernoon.com/neural-networks-from-scratch-for-javascript-linguists-part1-the-perceptron-632a4d1fbad2)",
        "translatedContent": "* [**JavaScript**：_為JavaScript語言學者打造的神經網路 (第一部分—感知器)_](https://hackernoon.com/neural-networks-from-scratch-for-javascript-linguists-part1-the-perceptron-632a4d1fbad2)"
      },
      {
        "row": 50,
        "rowsha": "a/lo13hA9GPLoEWhW6qS2MEcje4d4tKvNYJZ4zyr9E8=",
        "originContent": "* [**Python**: _A Neural Network in 11 lines of Python_](https://iamtrask.github.io/2015/07/12/basic-python-network/)",
        "translatedContent": "* [**Python**：_11行Python實作神經網路_](https://iamtrask.github.io/2015/07/12/basic-python-network/)"
      },
      {
        "row": 51,
        "rowsha": "FPzW0oc2DzFlmWPKuzZPUVDfQ/gfPxGnGhEDttnvPug=",
        "originContent": "* [**Python**: _Implement a Neural Network from Scratch_](https://victorzhou.com/blog/intro-to-neural-networks/)",
        "translatedContent": "* [**Python**：_從零開始實作神經網路_](https://victorzhou.com/blog/intro-to-neural-networks/)"
      },
      {
        "row": 52,
        "rowsha": "WWUkwmXRo/lyyPzLGW4F0lbVZAXup1U5CuPszHzGjHs=",
        "originContent": "* [**Python**: _Optical Character Recognition (OCR)_](http://aosabook.org/en/500L/optical-character-recognition-ocr.html)",
        "translatedContent": "* [**Python**：_光學字符識別 (OCR)_](http://aosabook.org/en/500L/optical-character-recognition-ocr.html)"
      },
      {
        "row": 53,
        "rowsha": "llh53cJDjeNGcnkiYXoOnbG8nbZhNe09sFX12WG8wlw=",
        "originContent": "* [**Python**: _Traffic signs classification with a convolutional network_](https://navoshta.com/traffic-signs-classification/)",
        "translatedContent": "* [**Python**：_用卷積網路做交通標誌分類_](https://navoshta.com/traffic-signs-classification/)"
      },
      {
        "row": 54,
        "rowsha": "ZWjkIGcAkni1k9cMV5Lv967zd+6pabrFkxMD4w0d9Q0=",
        "originContent": "* [**Python**: _Generate Music using LSTM Neural Network in Keras_](https://towardsdatascience.com/how-to-generate-music-using-a-lstm-neural-network-in-keras-68786834d4c5)",
        "translatedContent": "* [**Python**：_用Keras的LSTM神經網路生成音樂_](https://towardsdatascience.com/how-to-generate-music-using-a-lstm-neural-network-in-keras-68786834d4c5)"
      },
      {
        "row": 55,
        "rowsha": "Qz1v5pxYUj+pfyRfGSfMLy85iZ7RqyrFVNaouJ+vtHk=",
        "originContent": "* [**Python**: _An Introduction to Convolutional Neural Networks_](https://victorzhou.com/blog/intro-to-cnns-part-1/)",
        "translatedContent": "* [**Python**：_卷積神經網路入門_](https://victorzhou.com/blog/intro-to-cnns-part-1/)"
      },
      {
        "row": 56,
        "rowsha": "1zzjNuzv/HtnLuBJ56BUU0wFTDUfOSTV3LiH7xtEAJg=",
        "originContent": "* [**Python**: _Neural Networks: Zero to Hero_](https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ)",
        "translatedContent": "* [**Python**：_神經網路：從零到英雄_](https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ)"
      },
      {
        "row": 57,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 58,
        "rowsha": "EXVRJh6P73pINcUtcuFpiCP1TiiSMHwwl1PJrJouFKE=",
        "originContent": "#### Build your own `Operating System`",
        "translatedContent": "#### 建立你自己的 `作業系統`"
      },
      {
        "row": 59,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 60,
        "rowsha": "o2nLtBIddkuG9ffsEVkIHojskPv2wrGi4Kz+PuCoEto=",
        "originContent": "* [**Assembly**: _Writing a Tiny x86 Bootloader_](http://joebergeron.io/posts/post_two.html)",
        "translatedContent": "* [**組合語言**：_撰寫微型x86開機載入程式_](http://joebergeron.io/posts/post_two.html)"
      },
      {
        "row": 61,
        "rowsha": "WeegDPlFwYKTh4KHWxRTjETNQnnlSfj7KgdBCdSArb0=",
        "originContent": "* [**Assembly**: _Baking Pi – Operating Systems Development_](http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/index.html)",
        "translatedContent": "* [**組合語言**：_Baking Pi – 作業系統開發_](http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/index.html)"
      },
      {
        "row": 62,
        "rowsha": "WNvWcbLUHA9Mjh9DTRWizn7SGjR59tfWjSC3DN3PNzY=",
        "originContent": "* [**C**: _Building a software and hardware stack for a simple computer from scratch_](https://www.youtube.com/watch?v=ZjwvMcP3Nf0&list=PLU94OURih-CiP4WxKSMt3UcwMSDM3aTtX) [video]",
        "translatedContent": "* [**C**：_從零開始打造簡單電腦的軟硬體堆疊_](https://www.youtube.com/watch?v=ZjwvMcP3Nf0&list=PLU94OURih-CiP4WxKSMt3UcwMSDM3aTtX) [影片]"
      },
      {
        "row": 63,
        "rowsha": "7S9Jc91o3lkd7WJqHeU7wB3XndSFEZx9oFIPyzfAhSM=",
        "originContent": "* [**C**: _Operating Systems: From 0 to 1_](https://tuhdo.github.io/os01/)",
        "translatedContent": "* [**C**：_作業系統：從0到1_](https://tuhdo.github.io/os01/)"
      },
      {
        "row": 64,
        "rowsha": "VCz4vnHx+qyjGx9f0TwpHdHqKWf7cfHmIkMzRiMnNNk=",
        "originContent": "* [**C**: _The little book about OS development_](https://littleosbook.github.io/)",
        "translatedContent": "* [**C**：_關於作業系統開發的小書_](https://littleosbook.github.io/)"
      },
      {
        "row": 65,
        "rowsha": "kBZAc3cwa/b4iEXHZy0WfO063ENA7X/JAb9StwxUrLQ=",
        "originContent": "* [**C**: _Roll your own toy UNIX-clone OS_](http://jamesmolloy.co.uk/tutorial_html/)",
        "translatedContent": "* [**C**：_打造自己的玩具UNIX克隆作業系統_](http://jamesmolloy.co.uk/tutorial_html/)"
      },
      {
        "row": 66,
        "rowsha": "vIKDUc4u8wJjLPP4kIhhGBiB8k+0ebdVdMTYzRN83cg=",
        "originContent": "* [**C**: _Kernel 101 – Let’s write a Kernel_](https://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel)",
        "translatedContent": "* [**C**：_Kernel 101 – 讓我們寫一個Kernel_](https://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel)"
      },
      {
        "row": 67,
        "rowsha": "N6P81ORbudKRstkgYifMun7uUKsINu5Wi9MEk7v2mek=",
        "originContent": "* [**C**: _Kernel 201 – Let’s write a Kernel with keyboard and screen support_](https://arjunsreedharan.org/post/99370248137/kernel-201-lets-write-a-kernel-with-keyboard)",
        "translatedContent": "* [**C**：_Kernel 201 – 撰寫具鍵盤與螢幕支援的Kernel_](https://arjunsreedharan.org/post/99370248137/kernel-201-lets-write-a-kernel-with-keyboard)"
      },
      {
        "row": 68,
        "rowsha": "AC2zONdoF8/7OQKZ3b74wHDEPn/sLaXNmu/yEkGWJbw=",
        "originContent": "* [**C**: _Build a minimal multi-tasking kernel for ARM from scratch_](https://github.com/jserv/mini-arm-os)",
        "translatedContent": "* [**C**：_從零打造ARM多工核心_](https://github.com/jserv/mini-arm-os)"
      },
      {
        "row": 69,
        "rowsha": "AtSaqcIxlBXqT9rBo4HOMKbvpL6l7vEVm2kVwnCkNy4=",
        "originContent": "* [**C**: _How to create an OS from scratch_](https://github.com/cfenollosa/os-tutorial)",
        "translatedContent": "* [**C**：_如何從零開始創建作業系統_](https://github.com/cfenollosa/os-tutorial)"
      },
      {
        "row": 70,
        "rowsha": "YEyle3mctvIGWMqwX9YUPan2Nqe3M49txwYZ+FGBwmc=",
        "originContent": "* [**C**: _Malloc tutorial_](https://danluu.com/malloc-tutorial/)",
        "translatedContent": "* [**C**：_記憶體配置教學_](https://danluu.com/malloc-tutorial/)"
      },
      {
        "row": 71,
        "rowsha": "lrtCAEI1ILBGHPjZSdLsBN5a2WxnnwmqYphBqqx1Elo=",
        "originContent": "* [**C**: _Hack the virtual memory_](https://blog.holbertonschool.com/hack-the-virtual-memory-c-strings-proc/)",
        "translatedContent": "* [**C**：_駭入虛擬記憶體_](https://blog.holbertonschool.com/hack-the-virtual-memory-c-strings-proc/)"
      },
      {
        "row": 72,
        "rowsha": "Ft1a+ljImZQ0Ci8MI8yTDJNy7Hmf2CL0/KJGSMdz2j4=",
        "originContent": "* [**C**: _Learning operating system development using Linux kernel and Raspberry Pi_](https://github.com/s-matyukevich/raspberry-pi-os)",
        "translatedContent": "* [**C**：_使用Linux核心與Raspberry Pi學習作業系統開發_](https://github.com/s-matyukevich/raspberry-pi-os)"
      },
      {
        "row": 73,
        "rowsha": "J3TWDvc4WmYqN6pQVHd+6nzaOtjFqXBBE/2owKddJHc=",
        "originContent": "* [**C**: _Operating systems development for Dummies_](https://medium.com/@lduck11007/operating-systems-development-for-dummies-3d4d786e8ac)",
        "translatedContent": "* [**C**：_作業系統開發入門_](https://medium.com/@lduck11007/operating-systems-development-for-dummies-3d4d786e8ac)"
      },
      {
        "row": 74,
        "rowsha": "joRs7W1pKpkEbOiLjARG/cwNNcRNaWVmDUZKYU7lOug=",
        "originContent": "* [**C++**: _Write your own Operating System_](https://www.youtube.com/playlist?list=PLHh55M_Kq4OApWScZyPl5HhgsTJS9MZ6M) [video]",
        "translatedContent": "* [**C++**：_撰寫你自己的作業系統_](https://www.youtube.com/playlist?list=PLHh55M_Kq4OApWScZyPl5HhgsTJS9MZ6M) [影片]"
      },
      {
        "row": 75,
        "rowsha": "///AqaUDo7pzqJC6ct9Ye8Ahk2XlWvdhm9ruZijDB2s=",
        "originContent": "* [**C++**: _Writing a Bootloader_](http://3zanders.co.uk/2017/10/13/writing-a-bootloader/)",
        "translatedContent": "* [**C++**：_撰寫開機載入程式_](http://3zanders.co.uk/2017/10/13/writing-a-bootloader/)"
      },
      {
        "row": 76,
        "rowsha": "9ToDA4Z66BOiFMvLxGpXsT25PdU5eD6C5MVFTD7y7kI=",
        "originContent": "* [**Rust**: _Writing an OS in Rust_](https://os.phil-opp.com/)",
        "translatedContent": "* [**Rust**：_用Rust撰寫作業系統_](https://os.phil-opp.com/)"
      },
      {
        "row": 77,
        "rowsha": "y6zXRwnRiV3H1h/1XOWYwQ965c/5OFEwmVO4vHmiFhc=",
        "originContent": "* [**Rust**: _Add RISC-V Rust Operating System Tutorial_](https://osblog.stephenmarz.com/)",
        "translatedContent": "* [**Rust**：_新增RISC-V Rust作業系統教學_](https://osblog.stephenmarz.com/)"
      },
      {
        "row": 78,
        "rowsha": "nc7ZpbSHzUwJ+k/1EX1zA3VGGdpGGPRLTzD+n47Z/Lo=",
        "originContent": "* [**(any)**: _Linux from scratch_](https://linuxfromscratch.org/lfs)",
        "translatedContent": "* [**(任意語言)**：_從零開始的Linux_](https://linuxfromscratch.org/lfs)"
      },
      {
        "row": 79,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 80,
        "rowsha": "CZs2MI4Xk/MnAWxkTrNXRuN6rSwGwI4opplrdA6nWgo=",
        "originContent": "#### Build your own `Physics Engine`",
        "translatedContent": "#### 建立你自己的 `物理引擎`"
      },
      {
        "row": 81,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 82,
        "rowsha": "aYCBJu5g2VaV4dzQ3UeuXz2yS7m/RSC/0ccp7mAtnfM=",
        "originContent": "* [**C**: _Video Game Physics Tutorial_](https://www.toptal.com/game/video-game-physics-part-i-an-introduction-to-rigid-body-dynamics)",
        "translatedContent": "* [**C**：_電玩物理學教學_](https://www.toptal.com/game/video-game-physics-part-i-an-introduction-to-rigid-body-dynamics)"
      },
      {
        "row": 83,
        "rowsha": "zZWsyITC8tWrnjD5uzxYGQNv3fJk2qFc8Qdg/8pB9Qk=",
        "originContent": "* [**C++**: _Game physics series by Allen Chou_](http://allenchou.net/game-physics-series/)",
        "translatedContent": "* [**C++**：_Allen Chou的遊戲物理系列_](http://allenchou.net/game-physics-series/)"
      },
      {
        "row": 84,
        "rowsha": "RC4HkmZTGJOfDBqbNb4B4oqh5JePQpR4FOSQCya2SBg=",
        "originContent": "* [**C++**: _How to Create a Custom Physics Engine_](https://gamedevelopment.tutsplus.com/series/how-to-create-a-custom-physics-engine--gamedev-12715)",
        "translatedContent": "* [**C++**：_如何打造自訂物理引擎_](https://gamedevelopment.tutsplus.com/series/how-to-create-a-custom-physics-engine--gamedev-12715)"
      },
      {
        "row": 85,
        "rowsha": "pNbRva+LuHYi+xY4QpBXwcohjgpTy/mXLMgDPUIBtps=",
        "originContent": "* [**C++**: _3D Physics Engine Tutorial_](https://www.youtube.com/playlist?list=PLEETnX-uPtBXm1KEr_2zQ6K_0hoGH6JJ0) [video]",
        "translatedContent": "* [**C++**：_3D物理引擎教學_](https://www.youtube.com/playlist?list=PLEETnX-uPtBXm1KEr_2zQ6K_0hoGH6JJ0) [影片]"
      },
      {
        "row": 86,
        "rowsha": "976P/Qf2ibh3akfH7LHrPFZnwreSgSU7ugTPnQeYunk=",
        "originContent": "* [**JavaScript**: _How Physics Engines Work_](http://buildnewgames.com/gamephysics/)",
        "translatedContent": "* [**JavaScript**：_物理引擎如何運作_](http://buildnewgames.com/gamephysics/)"
      },
      {
        "row": 87,
        "rowsha": "IX0+EEV51gQE6JtZwmIFhWxidRWZFv1Gu2INkCisSKw=",
        "originContent": "* [**JavaScript**: _Broad Phase Collision Detection Using Spatial Partitioning_](http://buildnewgames.com/broad-phase-collision-detection/)",
        "translatedContent": "* [**JavaScript**：_利用空間劃分進行廣域碰撞偵測_](http://buildnewgames.com/broad-phase-collision-detection/)"
      },
      {
        "row": 88,
        "rowsha": "mrUhMmPf6ruaALQDj2rcWHWBCVj0JF/xLUfYGNgVCfc=",
        "originContent": "* [**JavaScript**: _Build a simple 2D physics engine for JavaScript games_](https://developer.ibm.com/tutorials/wa-build2dphysicsengine/?mhsrc=ibmsearch_a&mhq=2dphysic)",
        "translatedContent": "* [**JavaScript**：_為JavaScript遊戲打造簡單2D物理引擎_](https://developer.ibm.com/tutorials/wa-build2dphysicsengine/?mhsrc=ibmsearch_a&mhq=2dphysic)"
      },
      {
        "row": 89,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 90,
        "rowsha": "zjtQAroMsWUFlLxU/ktbIDGw2KFuGysJF6aPHFOfSJ0=",
        "originContent": "#### Build your own `Programming Language`",
        "translatedContent": "#### 建立你自己的 `程式語言`"
      },
      {
        "row": 91,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 92,
        "rowsha": "ZFTN0aJY7FIjgxy+cg99zmtfeNZAyzQedFOoye5+aoU=",
        "originContent": "* [**(any)**: _mal - Make a Lisp_](https://github.com/kanaka/mal#mal---make-a-lisp)",
        "translatedContent": "* [**(任意語言)**：_mal - 製作一個Lisp_](https://github.com/kanaka/mal#mal---make-a-lisp)"
      },
      {
        "row": 93,
        "rowsha": "zgqjek6n6t4UtbmbOz5wTQBHCKIVwCYje4CcVTdPp44=",
        "originContent": "* [**Assembly**: _Jonesforth_](https://github.com/nornagon/jonesforth/blob/master/jonesforth.S)",
        "translatedContent": "* [**組合語言**：_Jonesforth_](https://github.com/nornagon/jonesforth/blob/master/jonesforth.S)"
      },
      {
        "row": 94,
        "rowsha": "dJt7ypyJBKcVIyD51/o2KOUHoP6Y0l9HhJe/AJydI2A=",
        "originContent": "* [**C**: _Baby's First Garbage Collector_](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)",
        "translatedContent": "* [**C**：_寶寶的第一個垃圾收集器_](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)"
      },
      {
        "row": 95,
        "rowsha": "NdILKv0PHz0t1vaKqaLvlXFnWhD75M4+04olrpEvZm4=",
        "originContent": "* [**C**: _Build Your Own Lisp: Learn C and build your own programming language in 1000 lines of code_](http://www.buildyourownlisp.com/)",
        "translatedContent": "* [**C**：_打造你自己的Lisp：學習C並用1000行程式碼寫出你的程式語言_](http://www.buildyourownlisp.com/)"
      },
      {
        "row": 96,
        "rowsha": "31fpCxTPZa4W66DzGlqVjZ1abl8B9y6ychv/SvEtzuQ=",
        "originContent": "* [**C**: _Writing a Simple Garbage Collector in C_](http://maplant.com/gc.html)",
        "translatedContent": "* [**C**：_用C撰寫簡單垃圾收集器_](http://maplant.com/gc.html)"
      },
      {
        "row": 97,
        "rowsha": "pc5JnAtLo7qiMg+MfDQFwIth3Y5ymRKSWMhs1SDOnGY=",
        "originContent": "* [**C**: _C interpreter that interprets itself._](https://github.com/lotabout/write-a-C-interpreter)",
        "translatedContent": "* [**C**：_自我解譯的C語言直譯器_](https://github.com/lotabout/write-a-C-interpreter)"
      },
      {
        "row": 98,
        "rowsha": "V3khjCEEWwfSSB+PTfXSNDZwwLQLImTpD8NNtWa23ZM=",
        "originContent": "* [**C**: _A C & x86 version of the \"Let's Build a Compiler\" by Jack Crenshaw_](https://github.com/lotabout/Let-s-build-a-compiler)",
        "translatedContent": "* [**C**：_Jack Crenshaw的“讓我們打造一個編譯器”的C與x86版本_](https://github.com/lotabout/Let-s-build-a-compiler)"
      },
      {
        "row": 99,
        "rowsha": "fEsiD7I+IIyMkHbBOfKYzb1LWP/aCW+bJn6fYX/6xL4=",
        "originContent": "* [**C**: _A journey explaining how to build a compiler from scratch_](https://github.com/DoctorWkt/acwj)",
        "translatedContent": "* [**C**：_一段說明如何從零打造編譯器的旅程_](https://github.com/DoctorWkt/acwj)"
      },
      {
        "row": 100,
        "rowsha": "KRx4Uu6ufWpI/ubiu+lLx9eshR+EnV7klkzM2llTuT4=",
        "originContent": "* [**C++**: _Writing Your Own Toy Compiler Using Flex_](https://gnuu.org/2009/09/18/writing-your-own-toy-compiler/)",
        "translatedContent": "* [**C++**：_用Flex撰寫你自己的玩具編譯器_](https://gnuu.org/2009/09/18/writing-your-own-toy-compiler/)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "* [**C++**: _How to Create a Compiler_](https://www.youtube.com/watch?v=eF9qWbuQLuw) [video]\n* [**C++**: _Kaleidoscope: Implementing a Language with LLVM_](https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/index.html)\n* [**F#**: _Understanding Parser Combinators_](https://fsharpforfunandprofit.com/posts/understanding-parser-combinators/)\n* [**Elixir**: _Demystifying compilers by writing your own_](https://www.youtube.com/watch?v=zMJYoYwOCd4) [video]\n* [**Go**: _The Super Tiny Compiler_](https://github.com/hazbo/the-super-tiny-compiler)\n* [**Go**: _Lexical Scanning in Go_](https://www.youtube.com/watch?v=HxaD_trXwRE) [video]\n* [**Haskell**: _Let's Build a Compiler_](https://g-ford.github.io/cradle/)\n* [**Haskell**: _Write You a Haskell_](http://dev.stephendiehl.com/fun/)\n* [**Haskell**: _Write Yourself a Scheme in 48 Hours_](https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours)\n* [**Haskell**: _Write You A Scheme_](https://www.wespiser.com/writings/wyas/home.html)\n* [**Java**: _Crafting interpreters: A handbook for making programming languages_](http://www.craftinginterpreters.com/)\n* [**Java**: _Creating JVM Language_](http://jakubdziworski.github.io/categories.html#Enkel-ref)\n* [**JavaScript**: _The Super Tiny Compiler_](https://github.com/jamiebuilds/the-super-tiny-compiler)\n* [**JavaScript**: _The Super Tiny Interpreter_](https://github.com/keyanzhang/the-super-tiny-interpreter)\n* [**JavaScript**: _Little Lisp interpreter_](https://maryrosecook.com/blog/post/little-lisp-interpreter)\n* [**JavaScript**: _How to implement a programming language in JavaScript_](http://lisperator.net/pltut/)\n* [**JavaScript**: _Let’s go write a Lisp_](https://idiocy.org/lets-go-write-a-lisp/part-1.html)\n* [**OCaml**: _Writing a C Compiler_](https://norasandler.com/2017/11/29/Write-a-Compiler.html)\n* [**OCaml**: _Writing a Lisp, the series_](https://bernsteinbear.com/blog/lisp/)\n* [**Pascal**: _Let's Build a Compiler_](https://compilers.iecc.com/crenshaw/)\n* [**Python**: _A Python Interpreter Written in Python_](http://aosabook.org/en/500L/a-python-interpreter-written-in-python.html)\n* [**Python**: _lisp.py: Make your own Lisp interpreter_](http://khamidou.com/compilers/lisp.py/)\n* [**Python**: _How to Write a Lisp Interpreter in Python_](http://norvig.com/lispy.html)\n* [**Python**: _Let’s Build A Simple Interpreter_](https://ruslanspivak.com/lsbasi-part1/)\n* [**Python**: _Make Your Own Simple Interpreted Programming Language_](https://www.youtube.com/watch?v=dj9CBS3ikGA&list=PLZQftyCk7_SdoVexSmwy_tBgs7P0b97yD&index=1) [video]\n* [**Python**: _From Source Code To Machine Code: Build Your Own Compiler From Scratch_](https://build-your-own.org/compiler/)\n* [**Racket**: _Beautiful Racket: How to make your own programming languages with Racket_](https://beautifulracket.com/)\n* [**Ruby**: _A Compiler From Scratch_](https://www.destroyallsoftware.com/screencasts/catalog/a-compiler-from-scratch)\n* [**Ruby**: _Markdown compiler from scratch in Ruby_](https://blog.beezwax.net/2017/07/07/writing-a-markdown-compiler/)\n* [**Rust**: _So You Want to Build a Language VM_](https://blog.subnetzero.io/post/building-language-vm-part-00/)\n* [**Rust**: _Learning Parser Combinators With Rust_](https://bodil.lol/parser-combinators/)\n* [**Swift**: _Building a LISP from scratch with Swift_](https://www.uraimo.com/2017/02/05/building-a-lisp-from-scratch-with-swift/)\n* [**TypeScript**: _Build your own WebAssembly Compiler_](https://blog.scottlogic.com/2019/05/17/webassembly-compiler.html)\n\n#### Build your own `Regex Engine`\n\n* [**C**: _A Regular Expression Matcher_](https://www.cs.princeton.edu/courses/archive/spr09/cos333/beautiful.html)\n* [**C**: _Regular Expression Matching Can Be Simple And Fast_](https://swtch.com/~rsc/regexp/regexp1.html)\n* [**Go**: _How to build a regex engine from scratch_](https://rhaeguard.github.io/posts/regex)\n* [**JavaScript**: _Build a Regex Engine in Less than 40 Lines of Code_](https://nickdrane.com/build-your-own-regex/)\n* [**JavaScript**: _How to implement regular expressions in functional javascript using derivatives_](http://dpk.io/dregs/toydregs)\n* [**JavaScript**: _Implementing a Regular Expression Engine_](https://deniskyashif.com/2019/02/17/implementing-a-regular-expression-engine/) \n* [**Perl**: _How Regexes Work_](https://perl.plover.com/Regex/article.html)\n* [**Python**: _Build Your Own Regular Expression Engines: Backtracking, NFA, DFA_](https://build-your-own.org/b2a/r0_intro)\n* [**Scala**: _No Magic: Regular Expressions_](https://rcoh.svbtle.com/no-magic-regular-expressions)\n\n#### Build your own `Search Engine`\n\n* [**CSS**: _A search engine in CSS_](https://stories.algolia.com/a-search-engine-in-css-b5ec4e902e97)\n* [**Python**: _Building a search engine using Redis and redis-py_](http://www.dr-josiah.com/2010/07/building-search-engine-using-redis-and.html)\n* [**Python**: _Building a Vector Space Indexing Engine in Python_](https://boyter.org/2010/08/build-vector-space-search-engine-python/)\n* [**Python**: _Building A Python-Based Search Engine_](https://www.youtube.com/watch?v=cY7pE7vX6MU) [video]\n* [**Python**: _Making text search learn from feedback_](https://medium.com/filament-ai/making-text-search-learn-from-feedback-4fe210fd87b0)\n* [**Python**: _Finding Important Words in Text Using TF-IDF_](https://stevenloria.com/tf-idf/)\n\n#### Build your own `Shell`\n\n* [**C**: _Tutorial - Write a Shell in C_](https://brennan.io/2015/01/16/write-a-shell-in-c/)\n* [**C**: _Let's build a shell!_](https://github.com/kamalmarhubi/shell-workshop)\n* [**C**: _Writing a UNIX Shell_](https://indradhanush.github.io/blog/writing-a-unix-shell-part-1/)\n* [**C**: _Build Your Own Shell_](https://github.com/tokenrove/build-your-own-shell)\n* [**C**: Write a shell in C](https://danishpraka.sh/posts/write-a-shell/)\n* [**Go**: _Writing a simple shell in Go_](https://sj14.gitlab.io/post/2018-07-01-go-unix-shell/)\n* [**Rust**: _Build Your Own Shell using Rust_](https://www.joshmcguigan.com/blog/build-your-own-shell-rust/)\n\n#### Build your own `Template Engine`\n\n* [**JavaScript**: _JavaScript template engine in just 20 lines_](http://krasimirtsonev.com/blog/article/Javascript-template-engine-in-just-20-line)\n* [**JavaScript**: _Understanding JavaScript Micro-Templating_](https://medium.com/wdstack/understanding-javascript-micro-templating-f37a37b3b40e)\n* [**Python**: _Approach: Building a toy template engine in Python_](http://alexmic.net/building-a-template-engine/)\n* [**Python**: _A Template Engine_](http://aosabook.org/en/500L/a-template-engine.html)\n* [**Ruby**: _How to write a template engine in less than 30 lines of code_](http://bits.citrusbyte.com/how-to-write-a-template-library/)\n\n#### Build your own `Text Editor`\n\n* [**C**: _Build Your Own Text Editor_](https://viewsourcecode.org/snaptoken/kilo/)\n* [**C++**: _Designing a Simple Text Editor_](http://www.fltk.org/doc-1.1/editor.html)\n* [**Python**: _Python Tutorial: Make Your Own Text Editor_](https://www.youtube.com/watch?v=xqDonHEYPgA) [video]\n* [**Python**: _Create a Simple Python Text Editor!_](http://www.instructables.com/id/Create-a-Simple-Python-Text-Editor/)\n* [**Ruby**: _Build a Collaborative Text Editor Using Rails_](https://blog.aha.io/text-editor/)\n* [**Rust**: _Hecto: Build your own text editor in Rust_ ](https://www.flenker.blog/hecto/)\n\n#### Build your own `Visual Recognition System`\n\n* [**Python**: _Developing a License Plate Recognition System with Machine Learning in Python_](https://medium.com/devcenter/developing-a-license-plate-recognition-system-with-machine-learning-in-python-787833569ccd)\n* [**Python**: _Building a Facial Recognition Pipeline with Deep Learning in Tensorflow_](https://hackernoon.com/building-a-facial-recognition-pipeline-with-deep-learning-in-tensorflow-66e7645015b8)\n\n#### Build your own `Voxel Engine`\n\n* [**C++**: _Let's Make a Voxel Engine_](https://sites.google.com/site/letsmakeavoxelengine/home)\n* [**Java**: _Java Voxel Engine Tutorial_](https://www.youtube.com/watch?v=QZ4Vk2PkPZk&list=PL80Zqpd23vJfyWQi-8FKDbeO_ZQamLKJL) [video]\n\n#### Build your own `Web Browser`\n\n* [**Rust**: _Let's build a browser engine_](https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html)\n* [**Python**: _Browser Engineering_](https://browser.engineering)\n\n#### Build your own `Web Server`\n\n* [**C#**: _Writing a Web Server from Scratch_](https://www.codeproject.com/Articles/859108/Writing-a-Web-Server-from-Scratch)",
    "ContentSha": "azqUBSyIVdAJ/U8BT6C56eLqVfOxmnqTssnCXQDVa2Q=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [**C++**: _如何建立一個編譯器_](https://www.youtube.com/watch?v=eF9qWbuQLuw) [影片]\n* [**C++**: _萬花筒：使用 LLVM 實作一門語言_](https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/index.html)\n* [**F#**: _理解解析器組合子_](https://fsharpforfunandprofit.com/posts/understanding-parser-combinators/)\n* [**Elixir**: _透過自己撰寫編譯器來解密編譯器_](https://www.youtube.com/watch?v=zMJYoYwOCd4) [影片]\n* [**Go**: _超小型編譯器_](https://github.com/hazbo/the-super-tiny-compiler)\n* [**Go**: _Go 語言中的詞彙掃描_](https://www.youtube.com/watch?v=HxaD_trXwRE) [影片]\n* [**Haskell**: _讓我們來建構一個編譯器_](https://g-ford.github.io/cradle/)\n* [**Haskell**: _為你撰寫一個 Haskell_](http://dev.stephendiehl.com/fun/)\n* [**Haskell**: _在 48 小時內撰寫自己的 Scheme_](https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours)\n* [**Haskell**: _為你撰寫一個 Scheme_](https://www.wespiser.com/writings/wyas/home.html)\n* [**Java**: _打造解釋器：製作程式語言的手冊_](http://www.craftinginterpreters.com/)\n* [**Java**: _創建 JVM 語言_](http://jakubdziworski.github.io/categories.html#Enkel-ref)\n* [**JavaScript**: _超小型編譯器_](https://github.com/jamiebuilds/the-super-tiny-compiler)\n* [**JavaScript**: _超小型解釋器_](https://github.com/keyanzhang/the-super-tiny-interpreter)\n* [**JavaScript**: _小型 Lisp 解釋器_](https://maryrosecook.com/blog/post/little-lisp-interpreter)\n* [**JavaScript**: _如何在 JavaScript 中實現一門程式語言_](http://lisperator.net/pltut/)\n* [**JavaScript**: _讓我們來寫一個 Lisp_](https://idiocy.org/lets-go-write-a-lisp/part-1.html)\n* [**OCaml**: _撰寫一個 C 編譯器_](https://norasandler.com/2017/11/29/Write-a-Compiler.html)\n* [**OCaml**: _撰寫 Lisp 系列文章_](https://bernsteinbear.com/blog/lisp/)\n* [**Pascal**: _讓我們來建構一個編譯器_](https://compilers.iecc.com/crenshaw/)\n* [**Python**: _用 Python 撰寫的 Python 解釋器_](http://aosabook.org/en/500L/a-python-interpreter-written-in-python.html)\n* [**Python**: _lisp.py：打造你自己的 Lisp 解釋器_](http://khamidou.com/compilers/lisp.py/)\n* [**Python**: _如何用 Python 撰寫 Lisp 解釋器_](http://norvig.com/lispy.html)\n* [**Python**: _讓我們建構一個簡單的解釋器_](https://ruslanspivak.com/lsbasi-part1/)\n* [**Python**: _打造你自己的簡易解釋型程式語言_](https://www.youtube.com/watch?v=dj9CBS3ikGA&list=PLZQftyCk7_SdoVexSmwy_tBgs7P0b97yD&index=1) [影片]\n* [**Python**: _從原始碼到機器碼：從零開始打造你的編譯器_](https://build-your-own.org/compiler/)\n* [**Racket**: _美麗的 Racket：如何用 Racket 製作自己的程式語言_](https://beautifulracket.com/)\n* [**Ruby**: _從零打造一個編譯器_](https://www.destroyallsoftware.com/screencasts/catalog/a-compiler-from-scratch)\n* [**Ruby**: _用 Ruby 從零打造 Markdown 編譯器_](https://blog.beezwax.net/2017/07/07/writing-a-markdown-compiler/)\n* [**Rust**: _想打造語言虛擬機器嗎_](https://blog.subnetzero.io/post/building-language-vm-part-00/)\n* [**Rust**: _用 Rust 學習解析器組合子_](https://bodil.lol/parser-combinators/)\n* [**Swift**: _用 Swift 從零打造 LISP_](https://www.uraimo.com/2017/02/05/building-a-lisp-from-scratch-with-swift/)\n* [**TypeScript**: _打造你自己的 WebAssembly 編譯器_](https://blog.scottlogic.com/2019/05/17/webassembly-compiler.html)\n\n#### 打造你自己的 `正規表達式引擎`\n\n* [**C**: _正規表達式匹配器_](https://www.cs.princeton.edu/courses/archive/spr09/cos333/beautiful.html)\n* [**C**: _正規表達式匹配可以既簡單又快速_](https://swtch.com/~rsc/regexp/regexp1.html)\n* [**Go**: _如何從零打造一個正則引擎_](https://rhaeguard.github.io/posts/regex)\n* [**JavaScript**: _用不到 40 行程式碼打造正規表達式引擎_](https://nickdrane.com/build-your-own-regex/)\n* [**JavaScript**: _如何用函式式 JavaScript 使用導數實作正規表達式_](http://dpk.io/dregs/toydregs)\n* [**JavaScript**: _實作一個正規表達式引擎_](https://deniskyashif.com/2019/02/17/implementing-a-regular-expression-engine/)\n* [**Perl**: _正則表達式的運作原理_](https://perl.plover.com/Regex/article.html)\n* [**Python**: _打造你自己的正則表達式引擎：回溯、NFA、DFA_](https://build-your-own.org/b2a/r0_intro)\n* [**Scala**: _無魔法：正規表達式_](https://rcoh.svbtle.com/no-magic-regular-expressions)\n\n#### 打造你自己的 `搜尋引擎`\n\n* [**CSS**: _用 CSS 實作的搜尋引擎_](https://stories.algolia.com/a-search-engine-in-css-b5ec4e902e97)\n* [**Python**: _使用 Redis 與 redis-py 建立搜尋引擎_](http://www.dr-josiah.com/2010/07/building-search-engine-using-redis-and.html)\n* [**Python**: _在 Python 中建立向量空間索引引擎_](https://boyter.org/2010/08/build-vector-space-search-engine-python/)\n* [**Python**: _建立一個基於 Python 的搜尋引擎_](https://www.youtube.com/watch?v=cY7pE7vX6MU) [影片]\n* [**Python**: _讓文字搜尋從回饋中學習_](https://medium.com/filament-ai/making-text-search-learn-from-feedback-4fe210fd87b0)\n* [**Python**: _使用 TF-IDF 找出文本中的重要詞彙_](https://stevenloria.com/tf-idf/)\n\n#### 打造你自己的 `Shell`\n\n* [**C**: _教學 - 用 C 撰寫一個 Shell_](https://brennan.io/2015/01/16/write-a-shell-in-c/)\n* [**C**: _讓我們來打造一個 shell！_](https://github.com/kamalmarhubi/shell-workshop)\n* [**C**: _撰寫 UNIX Shell_](https://indradhanush.github.io/blog/writing-a-unix-shell-part-1/)\n* [**C**: _打造你自己的 Shell_](https://github.com/tokenrove/build-your-own-shell)\n* [**C**: 用 C 撰寫一個 shell](https://danishpraka.sh/posts/write-a-shell/)\n* [**Go**: _用 Go 撰寫簡單的 shell_](https://sj14.gitlab.io/post/2018-07-01-go-unix-shell/)\n* [**Rust**: _用 Rust 打造你自己的 Shell_](https://www.joshmcguigan.com/blog/build-your-own-shell-rust/)\n\n#### 打造你自己的 `模板引擎`\n\n* [**JavaScript**: _用不到 20 行的 JavaScript 模板引擎_](http://krasimirtsonev.com/blog/article/Javascript-template-engine-in-just-20-line)\n* [**JavaScript**: _理解 JavaScript 微型模板化_](https://medium.com/wdstack/understanding-javascript-micro-templating-f37a37b3b40e)\n* [**Python**: _方法：用 Python 打造玩具模板引擎_](http://alexmic.net/building-a-template-engine/)\n* [**Python**: _一個模板引擎_](http://aosabook.org/en/500L/a-template-engine.html)\n* [**Ruby**: _如何用不到 30 行程式碼撰寫模板引擎_](http://bits.citrusbyte.com/how-to-write-a-template-library/)\n\n#### 打造你自己的 `文字編輯器`\n\n* [**C**: _打造你自己的文字編輯器_](https://viewsourcecode.org/snaptoken/kilo/)\n* [**C++**: _設計一個簡單的文字編輯器_](http://www.fltk.org/doc-1.1/editor.html)\n* [**Python**: _Python 教學：打造你自己的文字編輯器_](https://www.youtube.com/watch?v=xqDonHEYPgA) [影片]\n* [**Python**: _建立一個簡單的 Python 文字編輯器！_](http://www.instructables.com/id/Create-a-Simple-Python-Text-Editor/)\n* [**Ruby**: _使用 Rails 建立協作文字編輯器_](https://blog.aha.io/text-editor/)\n* [**Rust**: _Hecto：用 Rust 打造你自己的文字編輯器_](https://www.flenker.blog/hecto/)\n\n#### 打造你自己的 `視覺辨識系統`\n\n* [**Python**: _用 Python 和機器學習開發車牌辨識系統_](https://medium.com/devcenter/developing-a-license-plate-recognition-system-with-machine-learning-in-python-787833569ccd)\n* [**Python**: _用 Tensorflow 深度學習打造人臉辨識流程_](https://hackernoon.com/building-a-facial-recognition-pipeline-with-deep-learning-in-tensorflow-66e7645015b8)\n\n#### 打造你自己的 `體素引擎`\n\n* [**C++**: _讓我們來做一個體素引擎_](https://sites.google.com/site/letsmakeavoxelengine/home)\n* [**Java**: _Java 體素引擎教學_](https://www.youtube.com/watch?v=QZ4Vk2PkPZk&list=PL80Zqpd23vJfyWQi-8FKDbeO_ZQamLKJL) [影片]\n\n#### 打造你自己的 `網頁瀏覽器`\n\n* [**Rust**: _讓我們打造一個瀏覽器引擎_](https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html)\n* [**Python**: _瀏覽器工程學_](https://browser.engineering)\n\n#### 打造你自己的 `網頁伺服器`\n\n* [**C#**: _從零開始撰寫一個網頁伺服器_](https://www.codeproject.com/Articles/859108/Writing-a-Web-Server-from-Scratch)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "4PSMJtmYf33bM86BlwTlxpKrS5/UoRQNzNn79WLQ1os=",
        "originContent": "* [**C++**: _How to Create a Compiler_](https://www.youtube.com/watch?v=eF9qWbuQLuw) [video]",
        "translatedContent": "* [**C++**: _如何建立一個編譯器_](https://www.youtube.com/watch?v=eF9qWbuQLuw) [影片]"
      },
      {
        "row": 2,
        "rowsha": "0mROMUE795VN/xXbumLYVhGITnk45B/fbdwegyZIpeM=",
        "originContent": "* [**C++**: _Kaleidoscope: Implementing a Language with LLVM_](https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/index.html)",
        "translatedContent": "* [**C++**: _萬花筒：使用 LLVM 實作一門語言_](https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/index.html)"
      },
      {
        "row": 3,
        "rowsha": "rMclDSVcsVKKSdQt2/ZRRwFtpeRmSU+a9PjsLsiirDE=",
        "originContent": "* [**F#**: _Understanding Parser Combinators_](https://fsharpforfunandprofit.com/posts/understanding-parser-combinators/)",
        "translatedContent": "* [**F#**: _理解解析器組合子_](https://fsharpforfunandprofit.com/posts/understanding-parser-combinators/)"
      },
      {
        "row": 4,
        "rowsha": "G1WT4ENtPSxDDDnc0teGnxVfqiAY0jgu55R3ygGIEQE=",
        "originContent": "* [**Elixir**: _Demystifying compilers by writing your own_](https://www.youtube.com/watch?v=zMJYoYwOCd4) [video]",
        "translatedContent": "* [**Elixir**: _透過自己撰寫編譯器來解密編譯器_](https://www.youtube.com/watch?v=zMJYoYwOCd4) [影片]"
      },
      {
        "row": 5,
        "rowsha": "O+R/Qmmq4fylfZxUA/ndChVuVYde1eiPVklvYovebUw=",
        "originContent": "* [**Go**: _The Super Tiny Compiler_](https://github.com/hazbo/the-super-tiny-compiler)",
        "translatedContent": "* [**Go**: _超小型編譯器_](https://github.com/hazbo/the-super-tiny-compiler)"
      },
      {
        "row": 6,
        "rowsha": "6EBD9EharSfXgZoTprWxvuRjWWY/j+W4Dlc44dga07M=",
        "originContent": "* [**Go**: _Lexical Scanning in Go_](https://www.youtube.com/watch?v=HxaD_trXwRE) [video]",
        "translatedContent": "* [**Go**: _Go 語言中的詞彙掃描_](https://www.youtube.com/watch?v=HxaD_trXwRE) [影片]"
      },
      {
        "row": 7,
        "rowsha": "/9A0VELXoJD0GB2ZTEgZSo/n0NcM03OCqzaOqeppQJ4=",
        "originContent": "* [**Haskell**: _Let's Build a Compiler_](https://g-ford.github.io/cradle/)",
        "translatedContent": "* [**Haskell**: _讓我們來建構一個編譯器_](https://g-ford.github.io/cradle/)"
      },
      {
        "row": 8,
        "rowsha": "WTv76xCabScXeo+8pIRyYTFADbbbqb+Y3PuJFLwH0J4=",
        "originContent": "* [**Haskell**: _Write You a Haskell_](http://dev.stephendiehl.com/fun/)",
        "translatedContent": "* [**Haskell**: _為你撰寫一個 Haskell_](http://dev.stephendiehl.com/fun/)"
      },
      {
        "row": 9,
        "rowsha": "zEWioD7+Q4jjPE/CJ7eMVwMg2JOfHTpuynIOyGYYf2g=",
        "originContent": "* [**Haskell**: _Write Yourself a Scheme in 48 Hours_](https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours)",
        "translatedContent": "* [**Haskell**: _在 48 小時內撰寫自己的 Scheme_](https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours)"
      },
      {
        "row": 10,
        "rowsha": "Zv6M5Thb/7HkrY0zPYkE9ka2Kdoder8qu4GPTyVxAYU=",
        "originContent": "* [**Haskell**: _Write You A Scheme_](https://www.wespiser.com/writings/wyas/home.html)",
        "translatedContent": "* [**Haskell**: _為你撰寫一個 Scheme_](https://www.wespiser.com/writings/wyas/home.html)"
      },
      {
        "row": 11,
        "rowsha": "HRLuVYHymi2D4RLMVawkMrE+N8DfDMWyiP+yeaIKpcI=",
        "originContent": "* [**Java**: _Crafting interpreters: A handbook for making programming languages_](http://www.craftinginterpreters.com/)",
        "translatedContent": "* [**Java**: _打造解釋器：製作程式語言的手冊_](http://www.craftinginterpreters.com/)"
      },
      {
        "row": 12,
        "rowsha": "B9y8Y4xngW51tD7L46Taacdlj2tlqxV0t6h6vrs6Ous=",
        "originContent": "* [**Java**: _Creating JVM Language_](http://jakubdziworski.github.io/categories.html#Enkel-ref)",
        "translatedContent": "* [**Java**: _創建 JVM 語言_](http://jakubdziworski.github.io/categories.html#Enkel-ref)"
      },
      {
        "row": 13,
        "rowsha": "K5Wm9DiDqPYGlaQSDHHtgc/bmmdmVHFfpDSR7XiLuto=",
        "originContent": "* [**JavaScript**: _The Super Tiny Compiler_](https://github.com/jamiebuilds/the-super-tiny-compiler)",
        "translatedContent": "* [**JavaScript**: _超小型編譯器_](https://github.com/jamiebuilds/the-super-tiny-compiler)"
      },
      {
        "row": 14,
        "rowsha": "TdNs3xSdPURA00e1oHo9FM4n6DrqTkRSgIkBd1kFIag=",
        "originContent": "* [**JavaScript**: _The Super Tiny Interpreter_](https://github.com/keyanzhang/the-super-tiny-interpreter)",
        "translatedContent": "* [**JavaScript**: _超小型解釋器_](https://github.com/keyanzhang/the-super-tiny-interpreter)"
      },
      {
        "row": 15,
        "rowsha": "NZX3fDGy4b3YVR/nLM7RFqzin5fyVB2c7OQSe6KTFOI=",
        "originContent": "* [**JavaScript**: _Little Lisp interpreter_](https://maryrosecook.com/blog/post/little-lisp-interpreter)",
        "translatedContent": "* [**JavaScript**: _小型 Lisp 解釋器_](https://maryrosecook.com/blog/post/little-lisp-interpreter)"
      },
      {
        "row": 16,
        "rowsha": "snIv/kqirvYlf8TQyr6P0IoeYtvoCWgvKbIcYg/4XY8=",
        "originContent": "* [**JavaScript**: _How to implement a programming language in JavaScript_](http://lisperator.net/pltut/)",
        "translatedContent": "* [**JavaScript**: _如何在 JavaScript 中實現一門程式語言_](http://lisperator.net/pltut/)"
      },
      {
        "row": 17,
        "rowsha": "wpdue72HvV8lJEKVtYa0D73/w2cNndhJiqEvrHrTzT0=",
        "originContent": "* [**JavaScript**: _Let’s go write a Lisp_](https://idiocy.org/lets-go-write-a-lisp/part-1.html)",
        "translatedContent": "* [**JavaScript**: _讓我們來寫一個 Lisp_](https://idiocy.org/lets-go-write-a-lisp/part-1.html)"
      },
      {
        "row": 18,
        "rowsha": "BBZoWuY7zQQmU3tRrlHf/oE2s7o1WacO1nLfzvQkOI8=",
        "originContent": "* [**OCaml**: _Writing a C Compiler_](https://norasandler.com/2017/11/29/Write-a-Compiler.html)",
        "translatedContent": "* [**OCaml**: _撰寫一個 C 編譯器_](https://norasandler.com/2017/11/29/Write-a-Compiler.html)"
      },
      {
        "row": 19,
        "rowsha": "R5gV7uMY/BCNjI/J6kPLgjmx2xUzTC5qdIivEAfk8bU=",
        "originContent": "* [**OCaml**: _Writing a Lisp, the series_](https://bernsteinbear.com/blog/lisp/)",
        "translatedContent": "* [**OCaml**: _撰寫 Lisp 系列文章_](https://bernsteinbear.com/blog/lisp/)"
      },
      {
        "row": 20,
        "rowsha": "Q0OoGZw44x7jYlKKQ0D36Kc/8PrVrCtF+UNMlzzwZnE=",
        "originContent": "* [**Pascal**: _Let's Build a Compiler_](https://compilers.iecc.com/crenshaw/)",
        "translatedContent": "* [**Pascal**: _讓我們來建構一個編譯器_](https://compilers.iecc.com/crenshaw/)"
      },
      {
        "row": 21,
        "rowsha": "hkEIaGBIe3YMrenfwnVsW0n75uv+Xp4KU0rvVzo78No=",
        "originContent": "* [**Python**: _A Python Interpreter Written in Python_](http://aosabook.org/en/500L/a-python-interpreter-written-in-python.html)",
        "translatedContent": "* [**Python**: _用 Python 撰寫的 Python 解釋器_](http://aosabook.org/en/500L/a-python-interpreter-written-in-python.html)"
      },
      {
        "row": 22,
        "rowsha": "TAm6YMamLgo3TW1yzbvubJprsCMWVd7guBvIV5kV4Ew=",
        "originContent": "* [**Python**: _lisp.py: Make your own Lisp interpreter_](http://khamidou.com/compilers/lisp.py/)",
        "translatedContent": "* [**Python**: _lisp.py：打造你自己的 Lisp 解釋器_](http://khamidou.com/compilers/lisp.py/)"
      },
      {
        "row": 23,
        "rowsha": "Z7xXBcpJDQNwFxiirUk/4ycTVvm920JwmnO8GbIF5Xs=",
        "originContent": "* [**Python**: _How to Write a Lisp Interpreter in Python_](http://norvig.com/lispy.html)",
        "translatedContent": "* [**Python**: _如何用 Python 撰寫 Lisp 解釋器_](http://norvig.com/lispy.html)"
      },
      {
        "row": 24,
        "rowsha": "eNOY7g7waNBW8rA7fvB53iRzbEEsO9Zi2QMJimSCPWU=",
        "originContent": "* [**Python**: _Let’s Build A Simple Interpreter_](https://ruslanspivak.com/lsbasi-part1/)",
        "translatedContent": "* [**Python**: _讓我們建構一個簡單的解釋器_](https://ruslanspivak.com/lsbasi-part1/)"
      },
      {
        "row": 25,
        "rowsha": "jWEeJmY+BY5+XobVYshNq/dHosDAqDWmcq/j1/QCFjY=",
        "originContent": "* [**Python**: _Make Your Own Simple Interpreted Programming Language_](https://www.youtube.com/watch?v=dj9CBS3ikGA&list=PLZQftyCk7_SdoVexSmwy_tBgs7P0b97yD&index=1) [video]",
        "translatedContent": "* [**Python**: _打造你自己的簡易解釋型程式語言_](https://www.youtube.com/watch?v=dj9CBS3ikGA&list=PLZQftyCk7_SdoVexSmwy_tBgs7P0b97yD&index=1) [影片]"
      },
      {
        "row": 26,
        "rowsha": "xj43UDDaMvSqJM8gT1jrUG5WTdOU0y/DXCGYIT3j+b4=",
        "originContent": "* [**Python**: _From Source Code To Machine Code: Build Your Own Compiler From Scratch_](https://build-your-own.org/compiler/)",
        "translatedContent": "* [**Python**: _從原始碼到機器碼：從零開始打造你的編譯器_](https://build-your-own.org/compiler/)"
      },
      {
        "row": 27,
        "rowsha": "WKFXYW5H5cgEljjzkpzwsMTXJCK4TvuNLC8CDJtbmr8=",
        "originContent": "* [**Racket**: _Beautiful Racket: How to make your own programming languages with Racket_](https://beautifulracket.com/)",
        "translatedContent": "* [**Racket**: _美麗的 Racket：如何用 Racket 製作自己的程式語言_](https://beautifulracket.com/)"
      },
      {
        "row": 28,
        "rowsha": "u5RIWRJ/D7TZaJEf3+VODll29XACkg40KaBqH2YPr6A=",
        "originContent": "* [**Ruby**: _A Compiler From Scratch_](https://www.destroyallsoftware.com/screencasts/catalog/a-compiler-from-scratch)",
        "translatedContent": "* [**Ruby**: _從零打造一個編譯器_](https://www.destroyallsoftware.com/screencasts/catalog/a-compiler-from-scratch)"
      },
      {
        "row": 29,
        "rowsha": "PwHajujanETnNMugAlYu1wmLg39CbwmVE8jnmGmMHug=",
        "originContent": "* [**Ruby**: _Markdown compiler from scratch in Ruby_](https://blog.beezwax.net/2017/07/07/writing-a-markdown-compiler/)",
        "translatedContent": "* [**Ruby**: _用 Ruby 從零打造 Markdown 編譯器_](https://blog.beezwax.net/2017/07/07/writing-a-markdown-compiler/)"
      },
      {
        "row": 30,
        "rowsha": "nzJhr4kc5kvHHA76Zo3zYmAofcqkYQiQWW2FK6Ee5VU=",
        "originContent": "* [**Rust**: _So You Want to Build a Language VM_](https://blog.subnetzero.io/post/building-language-vm-part-00/)",
        "translatedContent": "* [**Rust**: _想打造語言虛擬機器嗎_](https://blog.subnetzero.io/post/building-language-vm-part-00/)"
      },
      {
        "row": 31,
        "rowsha": "EII1Di5oTzYyPFZFjJsQjj7pUyCWofJbQ6Ejt2jF/wg=",
        "originContent": "* [**Rust**: _Learning Parser Combinators With Rust_](https://bodil.lol/parser-combinators/)",
        "translatedContent": "* [**Rust**: _用 Rust 學習解析器組合子_](https://bodil.lol/parser-combinators/)"
      },
      {
        "row": 32,
        "rowsha": "QZEsQYPn1WTlIJ2K3HIUCYE0EfWbzl5mL+avPF16jVE=",
        "originContent": "* [**Swift**: _Building a LISP from scratch with Swift_](https://www.uraimo.com/2017/02/05/building-a-lisp-from-scratch-with-swift/)",
        "translatedContent": "* [**Swift**: _用 Swift 從零打造 LISP_](https://www.uraimo.com/2017/02/05/building-a-lisp-from-scratch-with-swift/)"
      },
      {
        "row": 33,
        "rowsha": "wb2lE5SwiBlhqXTyjgurCSlo/+ufUt9Aqsxu3TR49aY=",
        "originContent": "* [**TypeScript**: _Build your own WebAssembly Compiler_](https://blog.scottlogic.com/2019/05/17/webassembly-compiler.html)",
        "translatedContent": "* [**TypeScript**: _打造你自己的 WebAssembly 編譯器_](https://blog.scottlogic.com/2019/05/17/webassembly-compiler.html)"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "jEPVpOjIdI4Ggnj1I0hiUlbEIYnVSQ/1xMhhr74s6Qg=",
        "originContent": "#### Build your own `Regex Engine`",
        "translatedContent": "#### 打造你自己的 `正規表達式引擎`"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "2hx+RVnG6n6Cq1g16qTZ1bNvvkdIrq0N7YTCpjmCGnQ=",
        "originContent": "* [**C**: _A Regular Expression Matcher_](https://www.cs.princeton.edu/courses/archive/spr09/cos333/beautiful.html)",
        "translatedContent": "* [**C**: _正規表達式匹配器_](https://www.cs.princeton.edu/courses/archive/spr09/cos333/beautiful.html)"
      },
      {
        "row": 38,
        "rowsha": "QkiKFZKprhsrOsG+u+DloD/WBvnKSPbGqpMyeDADctE=",
        "originContent": "* [**C**: _Regular Expression Matching Can Be Simple And Fast_](https://swtch.com/~rsc/regexp/regexp1.html)",
        "translatedContent": "* [**C**: _正規表達式匹配可以既簡單又快速_](https://swtch.com/~rsc/regexp/regexp1.html)"
      },
      {
        "row": 39,
        "rowsha": "4anbBHE/y0L0iA43U+9NbMgMZCPU0XH6whSjmQJI//c=",
        "originContent": "* [**Go**: _How to build a regex engine from scratch_](https://rhaeguard.github.io/posts/regex)",
        "translatedContent": "* [**Go**: _如何從零打造一個正則引擎_](https://rhaeguard.github.io/posts/regex)"
      },
      {
        "row": 40,
        "rowsha": "GFNQcmMJ/1ysPtBuq1zQKzZqOOvdMXFZlWi247mJAvg=",
        "originContent": "* [**JavaScript**: _Build a Regex Engine in Less than 40 Lines of Code_](https://nickdrane.com/build-your-own-regex/)",
        "translatedContent": "* [**JavaScript**: _用不到 40 行程式碼打造正規表達式引擎_](https://nickdrane.com/build-your-own-regex/)"
      },
      {
        "row": 41,
        "rowsha": "iU+hCq4z3EMNHPHUT9WFoG/taNw1UaSVBdO1fvXS6dI=",
        "originContent": "* [**JavaScript**: _How to implement regular expressions in functional javascript using derivatives_](http://dpk.io/dregs/toydregs)",
        "translatedContent": "* [**JavaScript**: _如何用函式式 JavaScript 使用導數實作正規表達式_](http://dpk.io/dregs/toydregs)"
      },
      {
        "row": 42,
        "rowsha": "ijtScZXVRiMhRsue0rd9NvHb67O+D06NX1+/cfyozLU=",
        "originContent": "* [**JavaScript**: _Implementing a Regular Expression Engine_](https://deniskyashif.com/2019/02/17/implementing-a-regular-expression-engine/) ",
        "translatedContent": "* [**JavaScript**: _實作一個正規表達式引擎_](https://deniskyashif.com/2019/02/17/implementing-a-regular-expression-engine/)"
      },
      {
        "row": 43,
        "rowsha": "Qq7HvFAI1b7vH4K5WtVgmoIzAkDnCOPF9M2GSrtqxNI=",
        "originContent": "* [**Perl**: _How Regexes Work_](https://perl.plover.com/Regex/article.html)",
        "translatedContent": "* [**Perl**: _正則表達式的運作原理_](https://perl.plover.com/Regex/article.html)"
      },
      {
        "row": 44,
        "rowsha": "C+dbZn+0+38KYyF9aa9WX1VyleUqm3fbk1kRVBpYKeU=",
        "originContent": "* [**Python**: _Build Your Own Regular Expression Engines: Backtracking, NFA, DFA_](https://build-your-own.org/b2a/r0_intro)",
        "translatedContent": "* [**Python**: _打造你自己的正則表達式引擎：回溯、NFA、DFA_](https://build-your-own.org/b2a/r0_intro)"
      },
      {
        "row": 45,
        "rowsha": "hTLn+XTDWej64LzQV5r7JdqIOhvpB2VGwgXorJTCR4A=",
        "originContent": "* [**Scala**: _No Magic: Regular Expressions_](https://rcoh.svbtle.com/no-magic-regular-expressions)",
        "translatedContent": "* [**Scala**: _無魔法：正規表達式_](https://rcoh.svbtle.com/no-magic-regular-expressions)"
      },
      {
        "row": 46,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 47,
        "rowsha": "e99Bz9QkmssuzhveMuvIt9sFaQFQS/rknA7LybbYhNQ=",
        "originContent": "#### Build your own `Search Engine`",
        "translatedContent": "#### 打造你自己的 `搜尋引擎`"
      },
      {
        "row": 48,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 49,
        "rowsha": "nh+J3TkG7ssh+F4wYn3TE3tXd9iD3TXcp7+MsjG2am8=",
        "originContent": "* [**CSS**: _A search engine in CSS_](https://stories.algolia.com/a-search-engine-in-css-b5ec4e902e97)",
        "translatedContent": "* [**CSS**: _用 CSS 實作的搜尋引擎_](https://stories.algolia.com/a-search-engine-in-css-b5ec4e902e97)"
      },
      {
        "row": 50,
        "rowsha": "7A1qv6FwFHn7cuhjCj9CXqr/8n4jJ2mh1YoRmLxmXlc=",
        "originContent": "* [**Python**: _Building a search engine using Redis and redis-py_](http://www.dr-josiah.com/2010/07/building-search-engine-using-redis-and.html)",
        "translatedContent": "* [**Python**: _使用 Redis 與 redis-py 建立搜尋引擎_](http://www.dr-josiah.com/2010/07/building-search-engine-using-redis-and.html)"
      },
      {
        "row": 51,
        "rowsha": "aiW5GHpOqKWQpL8SLmwuW0i2yKA5V8W2KX3Xvidy9fk=",
        "originContent": "* [**Python**: _Building a Vector Space Indexing Engine in Python_](https://boyter.org/2010/08/build-vector-space-search-engine-python/)",
        "translatedContent": "* [**Python**: _在 Python 中建立向量空間索引引擎_](https://boyter.org/2010/08/build-vector-space-search-engine-python/)"
      },
      {
        "row": 52,
        "rowsha": "H95aAyU00FA36xYZH95Pr/xuv4DUeVqc4Gr1VPFn9C4=",
        "originContent": "* [**Python**: _Building A Python-Based Search Engine_](https://www.youtube.com/watch?v=cY7pE7vX6MU) [video]",
        "translatedContent": "* [**Python**: _建立一個基於 Python 的搜尋引擎_](https://www.youtube.com/watch?v=cY7pE7vX6MU) [影片]"
      },
      {
        "row": 53,
        "rowsha": "U+mXlq1L8W5C6V9mMWOrx2unUrfPQ66ON43Vs0SSkxQ=",
        "originContent": "* [**Python**: _Making text search learn from feedback_](https://medium.com/filament-ai/making-text-search-learn-from-feedback-4fe210fd87b0)",
        "translatedContent": "* [**Python**: _讓文字搜尋從回饋中學習_](https://medium.com/filament-ai/making-text-search-learn-from-feedback-4fe210fd87b0)"
      },
      {
        "row": 54,
        "rowsha": "+lOmrw2IBW3ZooyWFNtuIaRKi8J83hOAo1rZ+xXcMNM=",
        "originContent": "* [**Python**: _Finding Important Words in Text Using TF-IDF_](https://stevenloria.com/tf-idf/)",
        "translatedContent": "* [**Python**: _使用 TF-IDF 找出文本中的重要詞彙_](https://stevenloria.com/tf-idf/)"
      },
      {
        "row": 55,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 56,
        "rowsha": "r0ToShVuH85VGJP5XQmPeXExxIQ+BApzBWoWM4I8m44=",
        "originContent": "#### Build your own `Shell`",
        "translatedContent": "#### 打造你自己的 `Shell`"
      },
      {
        "row": 57,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 58,
        "rowsha": "p0m1eebEHsNz5o5EjeqIWzqEVglRem1qvjEwI/Bt9dI=",
        "originContent": "* [**C**: _Tutorial - Write a Shell in C_](https://brennan.io/2015/01/16/write-a-shell-in-c/)",
        "translatedContent": "* [**C**: _教學 - 用 C 撰寫一個 Shell_](https://brennan.io/2015/01/16/write-a-shell-in-c/)"
      },
      {
        "row": 59,
        "rowsha": "GZLdESLgjEVN3nxgeFJWz+k3wID+Z3qxIoLjrv3x5As=",
        "originContent": "* [**C**: _Let's build a shell!_](https://github.com/kamalmarhubi/shell-workshop)",
        "translatedContent": "* [**C**: _讓我們來打造一個 shell！_](https://github.com/kamalmarhubi/shell-workshop)"
      },
      {
        "row": 60,
        "rowsha": "wPjNdBtOXSC7LAHZdF+qurGzXwcmMRtxoI3hnYqA0oQ=",
        "originContent": "* [**C**: _Writing a UNIX Shell_](https://indradhanush.github.io/blog/writing-a-unix-shell-part-1/)",
        "translatedContent": "* [**C**: _撰寫 UNIX Shell_](https://indradhanush.github.io/blog/writing-a-unix-shell-part-1/)"
      },
      {
        "row": 61,
        "rowsha": "SsbjuAyiWPfQr3oe84HZWtkYz8vgnPNquTYc2Szs9XM=",
        "originContent": "* [**C**: _Build Your Own Shell_](https://github.com/tokenrove/build-your-own-shell)",
        "translatedContent": "* [**C**: _打造你自己的 Shell_](https://github.com/tokenrove/build-your-own-shell)"
      },
      {
        "row": 62,
        "rowsha": "E3IgtaR0mOGd5pOYnwmOfi2D9goqYXKClmn35qsXxiQ=",
        "originContent": "* [**C**: Write a shell in C](https://danishpraka.sh/posts/write-a-shell/)",
        "translatedContent": "* [**C**: 用 C 撰寫一個 shell](https://danishpraka.sh/posts/write-a-shell/)"
      },
      {
        "row": 63,
        "rowsha": "EsStWmYQfY2KLtQbZGyMmg1leH7iDrAr1Eyo1HLNOz8=",
        "originContent": "* [**Go**: _Writing a simple shell in Go_](https://sj14.gitlab.io/post/2018-07-01-go-unix-shell/)",
        "translatedContent": "* [**Go**: _用 Go 撰寫簡單的 shell_](https://sj14.gitlab.io/post/2018-07-01-go-unix-shell/)"
      },
      {
        "row": 64,
        "rowsha": "zNjFUKUtbT7IMFv+b2VetM+HY2vyhQg2FvB6w6CznIo=",
        "originContent": "* [**Rust**: _Build Your Own Shell using Rust_](https://www.joshmcguigan.com/blog/build-your-own-shell-rust/)",
        "translatedContent": "* [**Rust**: _用 Rust 打造你自己的 Shell_](https://www.joshmcguigan.com/blog/build-your-own-shell-rust/)"
      },
      {
        "row": 65,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 66,
        "rowsha": "/YUV5VbnRSn2bb5QyG6YS6IbFHdtJD40D4jD5YhWTc8=",
        "originContent": "#### Build your own `Template Engine`",
        "translatedContent": "#### 打造你自己的 `模板引擎`"
      },
      {
        "row": 67,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 68,
        "rowsha": "fkLvTjwub7GQb9xNMt1jFLktTQWcTLn0xZmBQgK3gg0=",
        "originContent": "* [**JavaScript**: _JavaScript template engine in just 20 lines_](http://krasimirtsonev.com/blog/article/Javascript-template-engine-in-just-20-line)",
        "translatedContent": "* [**JavaScript**: _用不到 20 行的 JavaScript 模板引擎_](http://krasimirtsonev.com/blog/article/Javascript-template-engine-in-just-20-line)"
      },
      {
        "row": 69,
        "rowsha": "NCTxe5ztKtUF59Ew6BxRuHj+vNHPSgVrc70enqTwXDE=",
        "originContent": "* [**JavaScript**: _Understanding JavaScript Micro-Templating_](https://medium.com/wdstack/understanding-javascript-micro-templating-f37a37b3b40e)",
        "translatedContent": "* [**JavaScript**: _理解 JavaScript 微型模板化_](https://medium.com/wdstack/understanding-javascript-micro-templating-f37a37b3b40e)"
      },
      {
        "row": 70,
        "rowsha": "n2wTXhuUQemJP4cC6K8lkbCBI3KtgV+s00KAG5nCApg=",
        "originContent": "* [**Python**: _Approach: Building a toy template engine in Python_](http://alexmic.net/building-a-template-engine/)",
        "translatedContent": "* [**Python**: _方法：用 Python 打造玩具模板引擎_](http://alexmic.net/building-a-template-engine/)"
      },
      {
        "row": 71,
        "rowsha": "M/Y2dqq+j6dVahbquB+qq22aWduM/EnKLq1Yr6THJpc=",
        "originContent": "* [**Python**: _A Template Engine_](http://aosabook.org/en/500L/a-template-engine.html)",
        "translatedContent": "* [**Python**: _一個模板引擎_](http://aosabook.org/en/500L/a-template-engine.html)"
      },
      {
        "row": 72,
        "rowsha": "7hPiiN5Ia2sehkGeS/DmTLW1ZHfdRUkZFd1FuoondK4=",
        "originContent": "* [**Ruby**: _How to write a template engine in less than 30 lines of code_](http://bits.citrusbyte.com/how-to-write-a-template-library/)",
        "translatedContent": "* [**Ruby**: _如何用不到 30 行程式碼撰寫模板引擎_](http://bits.citrusbyte.com/how-to-write-a-template-library/)"
      },
      {
        "row": 73,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 74,
        "rowsha": "htdZB5tPnhRUu35L3N1pCgN7opLLRBTGYqdJXOxLbvU=",
        "originContent": "#### Build your own `Text Editor`",
        "translatedContent": "#### 打造你自己的 `文字編輯器`"
      },
      {
        "row": 75,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 76,
        "rowsha": "lf70b41Krjy0LANrb8k1zTIjQYAS6UNiLQq2tur+6kA=",
        "originContent": "* [**C**: _Build Your Own Text Editor_](https://viewsourcecode.org/snaptoken/kilo/)",
        "translatedContent": "* [**C**: _打造你自己的文字編輯器_](https://viewsourcecode.org/snaptoken/kilo/)"
      },
      {
        "row": 77,
        "rowsha": "0GAPQFpYfLIYok8SIVuO2D77+aOzakuuNUwEWl7swkE=",
        "originContent": "* [**C++**: _Designing a Simple Text Editor_](http://www.fltk.org/doc-1.1/editor.html)",
        "translatedContent": "* [**C++**: _設計一個簡單的文字編輯器_](http://www.fltk.org/doc-1.1/editor.html)"
      },
      {
        "row": 78,
        "rowsha": "4s+ogH2wt3IQcAFfBKSlomKB0X5wv+5sDWuFMuQ+Ws4=",
        "originContent": "* [**Python**: _Python Tutorial: Make Your Own Text Editor_](https://www.youtube.com/watch?v=xqDonHEYPgA) [video]",
        "translatedContent": "* [**Python**: _Python 教學：打造你自己的文字編輯器_](https://www.youtube.com/watch?v=xqDonHEYPgA) [影片]"
      },
      {
        "row": 79,
        "rowsha": "f/2LY7a6LpkPcRTA5+3MbxFT44v2UwF4KZtGKT2bXT4=",
        "originContent": "* [**Python**: _Create a Simple Python Text Editor!_](http://www.instructables.com/id/Create-a-Simple-Python-Text-Editor/)",
        "translatedContent": "* [**Python**: _建立一個簡單的 Python 文字編輯器！_](http://www.instructables.com/id/Create-a-Simple-Python-Text-Editor/)"
      },
      {
        "row": 80,
        "rowsha": "tTCQdIijIt2IxPLKGL42Ilx9YN5HMOsMbiq4LuI2Mz8=",
        "originContent": "* [**Ruby**: _Build a Collaborative Text Editor Using Rails_](https://blog.aha.io/text-editor/)",
        "translatedContent": "* [**Ruby**: _使用 Rails 建立協作文字編輯器_](https://blog.aha.io/text-editor/)"
      },
      {
        "row": 81,
        "rowsha": "bOXcw/T/9k2RsobiMJvwdZ40ZwjAgoNWTPkkPdcqMg8=",
        "originContent": "* [**Rust**: _Hecto: Build your own text editor in Rust_ ](https://www.flenker.blog/hecto/)",
        "translatedContent": "* [**Rust**: _Hecto：用 Rust 打造你自己的文字編輯器_](https://www.flenker.blog/hecto/)"
      },
      {
        "row": 82,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 83,
        "rowsha": "K/78aMpQ2ZKKqiv2mx05TJLb2CxqEJf3uL9jrUQFOwE=",
        "originContent": "#### Build your own `Visual Recognition System`",
        "translatedContent": "#### 打造你自己的 `視覺辨識系統`"
      },
      {
        "row": 84,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 85,
        "rowsha": "IAFnTIuk00faPI+aembQFhpZz1TPqU1M1LITttYkvo0=",
        "originContent": "* [**Python**: _Developing a License Plate Recognition System with Machine Learning in Python_](https://medium.com/devcenter/developing-a-license-plate-recognition-system-with-machine-learning-in-python-787833569ccd)",
        "translatedContent": "* [**Python**: _用 Python 和機器學習開發車牌辨識系統_](https://medium.com/devcenter/developing-a-license-plate-recognition-system-with-machine-learning-in-python-787833569ccd)"
      },
      {
        "row": 86,
        "rowsha": "QtSHaHqLnqfZ02H5iByNygD6gQvrdikHQr0gYknjPDI=",
        "originContent": "* [**Python**: _Building a Facial Recognition Pipeline with Deep Learning in Tensorflow_](https://hackernoon.com/building-a-facial-recognition-pipeline-with-deep-learning-in-tensorflow-66e7645015b8)",
        "translatedContent": "* [**Python**: _用 Tensorflow 深度學習打造人臉辨識流程_](https://hackernoon.com/building-a-facial-recognition-pipeline-with-deep-learning-in-tensorflow-66e7645015b8)"
      },
      {
        "row": 87,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 88,
        "rowsha": "7oF2B4K+CjphjBtDPpJ06+ROSV0TSdBOcN0xQU/k6gY=",
        "originContent": "#### Build your own `Voxel Engine`",
        "translatedContent": "#### 打造你自己的 `體素引擎`"
      },
      {
        "row": 89,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 90,
        "rowsha": "01Cnvghfp9HdkvqY6UZfS5dYTHMoffOZ+iHbniIng88=",
        "originContent": "* [**C++**: _Let's Make a Voxel Engine_](https://sites.google.com/site/letsmakeavoxelengine/home)",
        "translatedContent": "* [**C++**: _讓我們來做一個體素引擎_](https://sites.google.com/site/letsmakeavoxelengine/home)"
      },
      {
        "row": 91,
        "rowsha": "DL7dEinzpoK2zkMZTVJjKKt/ggUquh8b1kQDLyaN7Ho=",
        "originContent": "* [**Java**: _Java Voxel Engine Tutorial_](https://www.youtube.com/watch?v=QZ4Vk2PkPZk&list=PL80Zqpd23vJfyWQi-8FKDbeO_ZQamLKJL) [video]",
        "translatedContent": "* [**Java**: _Java 體素引擎教學_](https://www.youtube.com/watch?v=QZ4Vk2PkPZk&list=PL80Zqpd23vJfyWQi-8FKDbeO_ZQamLKJL) [影片]"
      },
      {
        "row": 92,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 93,
        "rowsha": "/NqoyuC2TNQfEBVAjlp+5/sfb0QQEDGRAEXZCSU6rGE=",
        "originContent": "#### Build your own `Web Browser`",
        "translatedContent": "#### 打造你自己的 `網頁瀏覽器`"
      },
      {
        "row": 94,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 95,
        "rowsha": "324p+079fhq88B2jH5JWRWHzGlR5PHjjcyd+6D64t8o=",
        "originContent": "* [**Rust**: _Let's build a browser engine_](https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html)",
        "translatedContent": "* [**Rust**: _讓我們打造一個瀏覽器引擎_](https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html)"
      },
      {
        "row": 96,
        "rowsha": "8ZySGpkOykZldQ4bg8RDpVD0SfczVPF4EBAGQWxVjZ4=",
        "originContent": "* [**Python**: _Browser Engineering_](https://browser.engineering)",
        "translatedContent": "* [**Python**: _瀏覽器工程學_](https://browser.engineering)"
      },
      {
        "row": 97,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 98,
        "rowsha": "d728GfI1Hb2/kybgJ8gNZ5olD6dQti5r0kaxGiGZO0c=",
        "originContent": "#### Build your own `Web Server`",
        "translatedContent": "#### 打造你自己的 `網頁伺服器`"
      },
      {
        "row": 99,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 100,
        "rowsha": "/6M65JWQWII5+zqwi/c8KiazxRID5gvzh6/BJIexoc4=",
        "originContent": "* [**C#**: _Writing a Web Server from Scratch_](https://www.codeproject.com/Articles/859108/Writing-a-Web-Server-from-Scratch)",
        "translatedContent": "* [**C#**: _從零開始撰寫一個網頁伺服器_](https://www.codeproject.com/Articles/859108/Writing-a-Web-Server-from-Scratch)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 5,
    "Content": "* [**Node.js**: _Build Your Own Web Server From Scratch In JavaScript_](https://build-your-own.org/webserver/)\n* [**Node.js**: _Let's code a web server from scratch with NodeJS Streams_](https://www.codementor.io/@ziad-saab/let-s-code-a-web-server-from-scratch-with-nodejs-streams-h4uc9utji)\n* [**Node.js**: _lets-build-express_](https://github.com/antoaravinth/lets-build-express)\n* [**PHP**: _Writing a webserver in pure PHP_](http://station.clancats.com/writing-a-webserver-in-pure-php/)\n* [**Python**: _A Simple Web Server_](http://aosabook.org/en/500L/a-simple-web-server.html)\n* [**Python**: _Let’s Build A Web Server._](https://ruslanspivak.com/lsbaws-part1/)\n* [**Python**: _Web application from scratch_](https://defn.io/2018/02/25/web-app-from-scratch-01/)\n* [**Python**: _Building a basic HTTP Server from scratch in Python_](http://joaoventura.net/blog/2017/python-webserver/)\n* [**Python**: _Implementing a RESTful Web API with Python & Flask_](http://blog.luisrei.com/articles/flaskrest.html)\n* [**Ruby**: _Building a simple websockets server from scratch in Ruby_](http://blog.honeybadger.io/building-a-simple-websockets-server-from-scratch-in-ruby/)\n\n#### Uncategorized\n\n* [**(any)**: _From NAND to Tetris: Building a Modern Computer From First Principles_](http://nand2tetris.org/)\n* [**Alloy**: _The Same-Origin Policy_](http://aosabook.org/en/500L/the-same-origin-policy.html)\n* [**C**: _How to Write a Video Player in Less Than 1000 Lines_](http://dranger.com/ffmpeg/ffmpeg.html)\n* [**C**: _Learn how to write a hash table in C_](https://github.com/jamesroutley/write-a-hash-table)\n* [**C**: _The very basics of a terminal emulator_](https://www.uninformativ.de/blog/postings/2018-02-24/0/POSTING-en.html)\n* [**C**: _Write a System Call_](https://brennan.io/2016/11/14/kernel-dev-ep3/)\n* [**C**: _Sol - An MQTT broker from scratch_](https://codepr.github.io/posts/sol-mqtt-broker)\n* [**C++**: _Build your own VR headset for $200_](https://github.com/relativty/Relativ)\n* [**C++**: _How X Window Managers work and how to write one_](https://seasonofcode.com/posts/how-x-window-managers-work-and-how-to-write-one-part-i.html)\n* [**C++**: _Writing a Linux Debugger_](https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/)\n* [**C++**: _How a 64k intro is made_](http://www.lofibucket.com/articles/64k_intro.html)\n* [**C++**: _Make your own Game Engine_](https://www.youtube.com/playlist?list=PLlrATfBNZ98dC-V-N3m0Go4deliWHPFwT)\n* [**C#**: _C# Networking: Create a TCP chater server, TCP games, UDP Pong and more_](https://16bpp.net/tutorials/csharp-networking)\n* [**C#**: _Loading and rendering 3D skeletal animations from scratch in C# and GLSL_](https://www.seanjoflynn.com/research/skeletal-animation.html)\n* [**Clojure**: _Building a spell-checker_](https://bernhardwenzel.com/articles/clojure-spellchecker/)\n* [**Go**: _Build A Simple Terminal Emulator In 100 Lines of Golang_](https://ishuah.com/2021/03/10/build-a-terminal-emulator-in-100-lines-of-go/)\n* [**Go**: _Let's Create a Simple Load Balancer_](https://kasvith.me/posts/lets-create-a-simple-lb-go/)\n* [**Go**: _Video Encoding from Scratch_](https://github.com/kevmo314/codec-from-scratch)\n* [**Java**: _How to Build an Android Reddit App_](https://www.youtube.com/playlist?list=PLgCYzUzKIBE9HUJU-upNvl3TRVAo9W47y) [video]\n* [**JavaScript**: _Build Your Own Module Bundler - Minipack_](https://github.com/ronami/minipack)\n* [**JavaScript**: _Learn JavaScript Promises by Building a Promise from Scratch_](https://levelup.gitconnected.com/understand-javascript-promises-by-building-a-promise-from-scratch-84c0fd855720)\n* [**JavaScript**: _Implementing promises from scratch (TDD way)_](https://www.mauriciopoppe.com/notes/computer-science/computation/promises/)\n* [**JavaScript**: _Implement your own — call(), apply() and bind() method in JavaScript_](https://blog.usejournal.com/implement-your-own-call-apply-and-bind-method-in-javascript-42cc85dba1b)\n* [**JavaScript**: _JavaScript Algorithms and Data Structures_](https://github.com/trekhleb/javascript-algorithms)\n* [**JavaScript**: _Build a ride hailing app with React Native_](https://pusher.com/tutorials/ride-hailing-react-native)\n* [**JavaScript**: _Build Your Own AdBlocker in (Literally) 10 Minutes_](https://levelup.gitconnected.com/building-your-own-adblocker-in-literally-10-minutes-1eec093b04cd)\n* [**Kotlin**: _Build Your Own Cache_](https://github.com/kezhenxu94/cache-lite)\n* [**Lua**: _Building a CDN from Scratch to Learn about CDN_](https://github.com/leandromoreira/cdn-up-and-running)\n* [**Nim**: _Writing a Redis Protocol Parser_](https://xmonader.github.io/nimdays/day12_resp.html)\n* [**Nim**: _Writing a Build system_](https://xmonader.github.io/nimdays/day11_buildsystem.html)\n* [**Nim**: _Writing a MiniTest Framework_](https://xmonader.github.io/nimdays/day08_minitest.html)\n* [**Nim**: _Writing a DMIDecode Parser_](https://xmonader.github.io/nimdays/day01_dmidecode.html)\n* [**Nim**: _Writing a INI Parser_](https://xmonader.github.io/nimdays/day05_iniparser.html)\n* [**Nim**: _Writing a Link Checker_](https://xmonader.github.io/nimdays/day04_asynclinkschecker.html)\n* [**Nim**: _Writing a URL Shortening Service_](https://xmonader.github.io/nimdays/day07_shorturl.html)\n* [**Node.js**: _Build a static site generator in 40 lines with Node.js_](https://www.webdevdrops.com/en/build-static-site-generator-nodejs-8969ebe34b22/)\n* [**Node.js**: _Building A Simple Single Sign On(SSO) Server And Solution From Scratch In Node.js._](https://codeburst.io/building-a-simple-single-sign-on-sso-server-and-solution-from-scratch-in-node-js-ea6ee5fdf340)\n* [**Node.js**: _How to create a real-world Node CLI app with Node_](https://medium.freecodecamp.org/how-to-create-a-real-world-node-cli-app-with-node-391b727bbed3)\n* [**Node.js**: _Build a DNS Server in Node.js_](https://engineerhead.github.io/dns-server/)\n* [**PHP**: _Write your own MVC from scratch in PHP_ ](https://chaitya62.github.io/2018/04/29/Writing-your-own-MVC-from-Scratch-in-PHP.html)\n* [**PHP**: _Make your own blog_](https://ilovephp.jondh.me.uk/en/tutorial/make-your-own-blog)\n* [**PHP**: _Modern PHP Without a Framework_](https://kevinsmith.io/modern-php-without-a-framework)\n* [**PHP**: _Code a Web Search Engine in PHP_](https://boyter.org/2013/01/code-for-a-search-engine-in-php-part-1/)\n* [**Python**: _Build a Deep Learning Library_](https://www.youtube.com/watch?v=o64FV-ez6Gw) [video]\n* [**Python**: _How to Build a Kick-Ass Mobile Document Scanner in Just 5 Minutes_](https://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/)\n* [**Python**: _Continuous Integration System_](http://aosabook.org/en/500L/a-continuous-integration-system.html)\n* [**Python**: _Recommender Systems in Python: Beginner Tutorial_](https://www.datacamp.com/community/tutorials/recommender-systems-python)\n* [**Python**: _Write SMS-spam detector with Scikit-learn_](https://medium.com/@kopilov.vlad/detect-sms-spam-in-kaggle-with-scikit-learn-5f6afa7a3ca2)\n* [**Python**: _A Simple Content-Based Recommendation Engine in Python_](http://blog.untrod.com/2016/06/simple-similar-products-recommendation-engine-in-python.html)\n* [**Python**: _Stock Market Predictions with LSTM in Python_](https://www.datacamp.com/community/tutorials/lstm-python-stock-market)\n* [**Python**: _Building a simple Generative Adversarial Network (GAN) using Tensorflow_](https://blog.paperspace.com/implementing-gans-in-tensorflow/)\n* [**Python**: _Learn ML Algorithms by coding: Decision Trees_](https://lethalbrains.com/learn-ml-algorithms-by-coding-decision-trees-439ac503c9a4)\n* [**Python**: _JSON Decoding Algorithm_](https://github.com/cheery/json-algorithm)\n* [**Python**: _Build your own Git plugin with python_](https://joshburns-xyz.vercel.app/posts/build-your-own-git-plugin)\n* [**Ruby**: _A Pedometer in the Real World_](http://aosabook.org/en/500L/a-pedometer-in-the-real-world.html)\n* [**Ruby**: _Creating a Linux Desktop application with Ruby_](https://iridakos.com/tutorials/2018/01/25/creating-a-gtk-todo-application-with-ruby)\n* [**Rust**: _Building a DNS server in Rust_](https://github.com/EmilHernvall/dnsguide/blob/master/README.md)\n* [**Rust**: _Writing Scalable Chat Service from Scratch_](https://nbaksalyar.github.io/2015/07/10/writing-chat-in-rust.html)\n* [**Rust**: _WebGL + Rust: Basic Water Tutorial_](https://www.chinedufn.com/3d-webgl-basic-water-tutorial/)\n* [**TypeScript**: _Tiny Package Manager: Learns how npm or Yarn works_](https://github.com/g-plane/tiny-package-manager)\n\n## Contribute \n* Submissions welcome, just send a PR, or [create an issue](https://github.com/codecrafters-io/build-your-own-x/issues/new)\n* Help us review [pending submissions](https://github.com/codecrafters-io/build-your-own-x/issues) by leaving comments and \"reactions\"\n\n## Origins & License\n\n[![CC0](https://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)\n\nThis repository is the work of [many contributors](https://github.com/codecrafters-io/build-your-own-x/graphs/contributors). It was started by [Daniel Stefanovic](https://github.com/danistefanovic), and is now maintained by [CodeCrafters, Inc.](https://codecrafters.io) To the extent possible under law, [CodeCrafters, Inc.](https://codecrafters.io) has waived all copyright and related or neighboring rights to this work.\n",
    "ContentSha": "A/qPoes/EjJ6ttVy1qTe1QEep0vYt74wmpY+PoAC9Q0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [**Node.js**: _從零開始用 JavaScript 建立自己的網頁伺服器_](https://build-your-own.org/webserver/)\n* [**Node.js**: _讓我們用 NodeJS Streams 從零開始編寫網頁伺服器_](https://www.codementor.io/@ziad-saab/let-s-code-a-web-server-from-scratch-with-nodejs-streams-h4uc9utji)\n* [**Node.js**: _lets-build-express_](https://github.com/antoaravinth/lets-build-express)\n* [**PHP**: _用純 PHP 編寫網頁伺服器_](http://station.clancats.com/writing-a-webserver-in-pure-php/)\n* [**Python**: _簡易網頁伺服器_](http://aosabook.org/en/500L/a-simple-web-server.html)\n* [**Python**: _讓我們建立一個網頁伺服器_](https://ruslanspivak.com/lsbaws-part1/)\n* [**Python**: _從零開始建立網頁應用程式_](https://defn.io/2018/02/25/web-app-from-scratch-01/)\n* [**Python**: _用 Python 從零開始建立基礎 HTTP 伺服器_](http://joaoventura.net/blog/2017/python-webserver/)\n* [**Python**: _用 Python 與 Flask 實作 RESTful 網路 API_](http://blog.luisrei.com/articles/flaskrest.html)\n* [**Ruby**: _用 Ruby 從零開始建立簡易 websockets 伺服器_](http://blog.honeybadger.io/building-a-simple-websockets-server-from-scratch-in-ruby/)\n\n#### 未分類\n\n* [**(任意語言)**: _從 NAND 到 Tetris：從基本原理建立現代電腦_](http://nand2tetris.org/)\n* [**Alloy**: _同源政策_](http://aosabook.org/en/500L/the-same-origin-policy.html)\n* [**C**: _如何用不到 1000 行寫出一個影片播放器_](http://dranger.com/ffmpeg/ffmpeg.html)\n* [**C**: _學習如何用 C 編寫雜湊表_](https://github.com/jamesroutley/write-a-hash-table)\n* [**C**: _終端模擬器的基本原理_](https://www.uninformativ.de/blog/postings/2018-02-24/0/POSTING-en.html)\n* [**C**: _編寫系統呼叫_](https://brennan.io/2016/11/14/kernel-dev-ep3/)\n* [**C**: _Sol - 從零開始的 MQTT 中介軟體_](https://codepr.github.io/posts/sol-mqtt-broker)\n* [**C++**: _用 200 美元打造自己的 VR 頭戴裝置_](https://github.com/relativty/Relativ)\n* [**C++**: _X 窗口管理器的工作原理及如何編寫_](https://seasonofcode.com/posts/how-x-window-managers-work-and-how-to-write-one-part-i.html)\n* [**C++**: _編寫 Linux 除錯器_](https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/)\n* [**C++**: _64k 介紹是如何製作的_](http://www.lofibucket.com/articles/64k_intro.html)\n* [**C++**: _打造自己的遊戲引擎_](https://www.youtube.com/playlist?list=PLlrATfBNZ98dC-V-N3m0Go4deliWHPFwT)\n* [**C#**: _C# 網路：建立 TCP 聊天伺服器、TCP 遊戲、UDP Pong 等_](https://16bpp.net/tutorials/csharp-networking)\n* [**C#**: _從零開始載入與渲染 3D 骨架動畫（C# 與 GLSL）_](https://www.seanjoflynn.com/research/skeletal-animation.html)\n* [**Clojure**: _建立拼寫檢查器_](https://bernhardwenzel.com/articles/clojure-spellchecker/)\n* [**Go**: _用 100 行 Golang 建立簡易終端模擬器_](https://ishuah.com/2021/03/10/build-a-terminal-emulator-in-100-lines-of-go/)\n* [**Go**: _讓我們建立一個簡單的負載平衡器_](https://kasvith.me/posts/lets-create-a-simple-lb-go/)\n* [**Go**: _從零開始的影片編碼_](https://github.com/kevmo314/codec-from-scratch)\n* [**Java**: _如何建立 Android Reddit 應用程式_](https://www.youtube.com/playlist?list=PLgCYzUzKIBE9HUJU-upNvl3TRVAo9W47y) [影片]\n* [**JavaScript**: _打造自己的模組打包工具 - Minipack_](https://github.com/ronami/minipack)\n* [**JavaScript**: _透過從零建立 Promise 學習 JavaScript Promise_](https://levelup.gitconnected.com/understand-javascript-promises-by-building-a-promise-from-scratch-84c0fd855720)\n* [**JavaScript**: _從零實作 promises（TDD 方式）_](https://www.mauriciopoppe.com/notes/computer-science/computation/promises/)\n* [**JavaScript**: _自己實作 call(), apply() 和 bind() 方法_](https://blog.usejournal.com/implement-your-own-call-apply-and-bind-method-in-javascript-42cc85dba1b)\n* [**JavaScript**: _JavaScript 演算法與資料結構_](https://github.com/trekhleb/javascript-algorithms)\n* [**JavaScript**: _用 React Native 建立叫車應用程式_](https://pusher.com/tutorials/ride-hailing-react-native)\n* [**JavaScript**: _用（字面上）10 分鐘打造自己的 AdBlocker_](https://levelup.gitconnected.com/building-your-own-adblocker-in-literally-10-minutes-1eec093b04cd)\n* [**Kotlin**: _建立自己的快取系統_](https://github.com/kezhenxu94/cache-lite)\n* [**Lua**: _從零開始建立 CDN 以學習 CDN_](https://github.com/leandromoreira/cdn-up-and-running)\n* [**Nim**: _編寫 Redis 協定解析器_](https://xmonader.github.io/nimdays/day12_resp.html)\n* [**Nim**: _編寫建置系統_](https://xmonader.github.io/nimdays/day11_buildsystem.html)\n* [**Nim**: _編寫 MiniTest 測試框架_](https://xmonader.github.io/nimdays/day08_minitest.html)\n* [**Nim**: _編寫 DMIDecode 解析器_](https://xmonader.github.io/nimdays/day01_dmidecode.html)\n* [**Nim**: _編寫 INI 解析器_](https://xmonader.github.io/nimdays/day05_iniparser.html)\n* [**Nim**: _編寫連結檢查器_](https://xmonader.github.io/nimdays/day04_asynclinkschecker.html)\n* [**Nim**: _編寫 URL 縮短服務_](https://xmonader.github.io/nimdays/day07_shorturl.html)\n* [**Node.js**: _用 40 行 Node.js 編寫靜態網站產生器_](https://www.webdevdrops.com/en/build-static-site-generator-nodejs-8969ebe34b22/)\n* [**Node.js**: _從零開始建立簡易單點登入(SSO)伺服器與解決方案_](https://codeburst.io/building-a-simple-single-sign-on-sso-server-and-solution-from-scratch-in-node-js-ea6ee5fdf340)\n* [**Node.js**: _如何用 Node.js 建立一個真實世界的 CLI 應用程式_](https://medium.freecodecamp.org/how-to-create-a-real-world-node-cli-app-with-node-391b727bbed3)\n* [**Node.js**: _用 Node.js 建立 DNS 伺服器_](https://engineerhead.github.io/dns-server/)\n* [**PHP**: _從零開始用 PHP 編寫自己的 MVC_](https://chaitya62.github.io/2018/04/29/Writing-your-own-MVC-from-Scratch-in-PHP.html)\n* [**PHP**: _建立自己的部落格_](https://ilovephp.jondh.me.uk/en/tutorial/make-your-own-blog)\n* [**PHP**: _不使用框架的現代 PHP_](https://kevinsmith.io/modern-php-without-a-framework)\n* [**PHP**: _用 PHP 編寫網路搜尋引擎_](https://boyter.org/2013/01/code-for-a-search-engine-in-php-part-1/)\n* [**Python**: _建立深度學習函式庫_](https://www.youtube.com/watch?v=o64FV-ez6Gw) [影片]\n* [**Python**: _如何在 5 分鐘內打造超強行動文件掃描器_](https://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/)\n* [**Python**: _持續整合系統_](http://aosabook.org/en/500L/a-continuous-integration-system.html)\n* [**Python**: _Python 推薦系統初學者教學_](https://www.datacamp.com/community/tutorials/recommender-systems-python)\n* [**Python**: _用 Scikit-learn 編寫 SMS 垃圾簡訊偵測器_](https://medium.com/@kopilov.vlad/detect-sms-spam-in-kaggle-with-scikit-learn-5f6afa7a3ca2)\n* [**Python**: _Python 簡易內容為基礎的推薦引擎_](http://blog.untrod.com/2016/06/simple-similar-products-recommendation-engine-in-python.html)\n* [**Python**: _用 LSTM 預測股市_](https://www.datacamp.com/community/tutorials/lstm-python-stock-market)\n* [**Python**: _使用 Tensorflow 建立簡易生成對抗網路（GAN）_](https://blog.paperspace.com/implementing-gans-in-tensorflow/)\n* [**Python**: _透過程式碼學習機器學習演算法：決策樹_](https://lethalbrains.com/learn-ml-algorithms-by-coding-decision-trees-439ac503c9a4)\n* [**Python**: _JSON 解碼演算法_](https://github.com/cheery/json-algorithm)\n* [**Python**: _用 Python 建立自己的 Git 外掛_](https://joshburns-xyz.vercel.app/posts/build-your-own-git-plugin)\n* [**Ruby**: _實際世界中的計步器_](http://aosabook.org/en/500L/a-pedometer-in-the-real-world.html)\n* [**Ruby**: _用 Ruby 建立 Linux 桌面應用程式_](https://iridakos.com/tutorials/2018/01/25/creating-a-gtk-todo-application-with-ruby)\n* [**Rust**: _用 Rust 建立 DNS 伺服器_](https://github.com/EmilHernvall/dnsguide/blob/master/README.md)\n* [**Rust**: _從零開始編寫可擴展聊天服務_](https://nbaksalyar.github.io/2015/07/10/writing-chat-in-rust.html)\n* [**Rust**: _WebGL + Rust：基礎水面教學_](https://www.chinedufn.com/3d-webgl-basic-water-tutorial/)\n* [**TypeScript**: _Tiny 套件管理器：學習 npm 或 Yarn 的運作方式_](https://github.com/g-plane/tiny-package-manager)\n\n## 貢獻\n* 歡迎投稿，只需送出 PR，或 [建立 issue](https://github.com/codecrafters-io/build-your-own-x/issues/new)\n* 幫助我們審核[待審稿件](https://github.com/codecrafters-io/build-your-own-x/issues)，留下評論和「反應」\n\n## 起源與授權\n\n[![CC0](https://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)\n\n此儲存庫為[眾多貢獻者](https://github.com/codecrafters-io/build-your-own-x/graphs/contributors)的成果。最初由[Daniel Stefanovic](https://github.com/danistefanovic)發起，現在由[CodeCrafters, Inc.](https://codecrafters.io)維護。依法律允許的最大範圍，[CodeCrafters, Inc.](https://codecrafters.io)已放棄本作品的所有版權及相關或鄰接權利。\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "az7OZRwmb3/mq8Yfm+K+Unlccs0bz83KiQypOqVYjdY=",
        "originContent": "* [**Node.js**: _Build Your Own Web Server From Scratch In JavaScript_](https://build-your-own.org/webserver/)",
        "translatedContent": "* [**Node.js**: _從零開始用 JavaScript 建立自己的網頁伺服器_](https://build-your-own.org/webserver/)"
      },
      {
        "row": 2,
        "rowsha": "qLsJFLQYYqH6Mtm+huasV84QZWYU2Bm8ysUIfcDntiI=",
        "originContent": "* [**Node.js**: _Let's code a web server from scratch with NodeJS Streams_](https://www.codementor.io/@ziad-saab/let-s-code-a-web-server-from-scratch-with-nodejs-streams-h4uc9utji)",
        "translatedContent": "* [**Node.js**: _讓我們用 NodeJS Streams 從零開始編寫網頁伺服器_](https://www.codementor.io/@ziad-saab/let-s-code-a-web-server-from-scratch-with-nodejs-streams-h4uc9utji)"
      },
      {
        "row": 3,
        "rowsha": "DNP9tZcv3XfNYBg8f7e/CW5GuiRVBx7EDdKrmOC7xh0=",
        "originContent": "* [**Node.js**: _lets-build-express_](https://github.com/antoaravinth/lets-build-express)",
        "translatedContent": "* [**Node.js**: _lets-build-express_](https://github.com/antoaravinth/lets-build-express)"
      },
      {
        "row": 4,
        "rowsha": "jpiLi4ySn6/oOwK53Goem6zEzmj97JSFnjLOuu3Phog=",
        "originContent": "* [**PHP**: _Writing a webserver in pure PHP_](http://station.clancats.com/writing-a-webserver-in-pure-php/)",
        "translatedContent": "* [**PHP**: _用純 PHP 編寫網頁伺服器_](http://station.clancats.com/writing-a-webserver-in-pure-php/)"
      },
      {
        "row": 5,
        "rowsha": "/Vya46S8Tfr5FFKgDhLakhDWJo7Rpvbe5bb5pl1lIVE=",
        "originContent": "* [**Python**: _A Simple Web Server_](http://aosabook.org/en/500L/a-simple-web-server.html)",
        "translatedContent": "* [**Python**: _簡易網頁伺服器_](http://aosabook.org/en/500L/a-simple-web-server.html)"
      },
      {
        "row": 6,
        "rowsha": "5K0E6fUZA3MNhO/HR/SsKuJZSvHP9mCuFPp70/H4n4c=",
        "originContent": "* [**Python**: _Let’s Build A Web Server._](https://ruslanspivak.com/lsbaws-part1/)",
        "translatedContent": "* [**Python**: _讓我們建立一個網頁伺服器_](https://ruslanspivak.com/lsbaws-part1/)"
      },
      {
        "row": 7,
        "rowsha": "HNGCPV5Zu6pHq/BsCZIbmTTpjzoi+JCIFBRGRLDAxDU=",
        "originContent": "* [**Python**: _Web application from scratch_](https://defn.io/2018/02/25/web-app-from-scratch-01/)",
        "translatedContent": "* [**Python**: _從零開始建立網頁應用程式_](https://defn.io/2018/02/25/web-app-from-scratch-01/)"
      },
      {
        "row": 8,
        "rowsha": "w55kSHssHoqkk6IRPrl9fI6q184xbvjLIIpTDzwT6Dw=",
        "originContent": "* [**Python**: _Building a basic HTTP Server from scratch in Python_](http://joaoventura.net/blog/2017/python-webserver/)",
        "translatedContent": "* [**Python**: _用 Python 從零開始建立基礎 HTTP 伺服器_](http://joaoventura.net/blog/2017/python-webserver/)"
      },
      {
        "row": 9,
        "rowsha": "zIe/VgPu3v4o9HGddD2MDvVjXXhOdyLb3/J68cOE/Tc=",
        "originContent": "* [**Python**: _Implementing a RESTful Web API with Python & Flask_](http://blog.luisrei.com/articles/flaskrest.html)",
        "translatedContent": "* [**Python**: _用 Python 與 Flask 實作 RESTful 網路 API_](http://blog.luisrei.com/articles/flaskrest.html)"
      },
      {
        "row": 10,
        "rowsha": "hCKcAoudSRtaLy/NzvonwKD0+Pkncu8zgEMsEfc56hw=",
        "originContent": "* [**Ruby**: _Building a simple websockets server from scratch in Ruby_](http://blog.honeybadger.io/building-a-simple-websockets-server-from-scratch-in-ruby/)",
        "translatedContent": "* [**Ruby**: _用 Ruby 從零開始建立簡易 websockets 伺服器_](http://blog.honeybadger.io/building-a-simple-websockets-server-from-scratch-in-ruby/)"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "3xO+MwuhEeH+t8LtCeSYvh1C6CjWj0TF3UoBWBcwnlY=",
        "originContent": "#### Uncategorized",
        "translatedContent": "#### 未分類"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "HevCG5VZzf1tylYBvuOLOUtTt2wF1+HWhHx3o9HqT+g=",
        "originContent": "* [**(any)**: _From NAND to Tetris: Building a Modern Computer From First Principles_](http://nand2tetris.org/)",
        "translatedContent": "* [**(任意語言)**: _從 NAND 到 Tetris：從基本原理建立現代電腦_](http://nand2tetris.org/)"
      },
      {
        "row": 15,
        "rowsha": "whK4sLwviWHoJbPKNG6u5a2XmJcSNx9qNDtY4wQY5tc=",
        "originContent": "* [**Alloy**: _The Same-Origin Policy_](http://aosabook.org/en/500L/the-same-origin-policy.html)",
        "translatedContent": "* [**Alloy**: _同源政策_](http://aosabook.org/en/500L/the-same-origin-policy.html)"
      },
      {
        "row": 16,
        "rowsha": "nvNVxdlWYdS/+Vo6wqe+NMa8Wqp+wqlnoHXCVeU+QvU=",
        "originContent": "* [**C**: _How to Write a Video Player in Less Than 1000 Lines_](http://dranger.com/ffmpeg/ffmpeg.html)",
        "translatedContent": "* [**C**: _如何用不到 1000 行寫出一個影片播放器_](http://dranger.com/ffmpeg/ffmpeg.html)"
      },
      {
        "row": 17,
        "rowsha": "RfctLkI3Ev6/UK52hi8uuZVEEPTi2QucHXssqpumfao=",
        "originContent": "* [**C**: _Learn how to write a hash table in C_](https://github.com/jamesroutley/write-a-hash-table)",
        "translatedContent": "* [**C**: _學習如何用 C 編寫雜湊表_](https://github.com/jamesroutley/write-a-hash-table)"
      },
      {
        "row": 18,
        "rowsha": "qN36pq4LbN3C2QtTqag2XaeYAdm+X9I22z6mPJQfbgA=",
        "originContent": "* [**C**: _The very basics of a terminal emulator_](https://www.uninformativ.de/blog/postings/2018-02-24/0/POSTING-en.html)",
        "translatedContent": "* [**C**: _終端模擬器的基本原理_](https://www.uninformativ.de/blog/postings/2018-02-24/0/POSTING-en.html)"
      },
      {
        "row": 19,
        "rowsha": "CCtwFPsc8P0du2VDtqCVbVpVh/W/ZcGKfpezIM13GP8=",
        "originContent": "* [**C**: _Write a System Call_](https://brennan.io/2016/11/14/kernel-dev-ep3/)",
        "translatedContent": "* [**C**: _編寫系統呼叫_](https://brennan.io/2016/11/14/kernel-dev-ep3/)"
      },
      {
        "row": 20,
        "rowsha": "Cg00uytyC8G+FVhKLUM/JLjpUpMDUKXx0/Mvd4J9xtY=",
        "originContent": "* [**C**: _Sol - An MQTT broker from scratch_](https://codepr.github.io/posts/sol-mqtt-broker)",
        "translatedContent": "* [**C**: _Sol - 從零開始的 MQTT 中介軟體_](https://codepr.github.io/posts/sol-mqtt-broker)"
      },
      {
        "row": 21,
        "rowsha": "dZOAP08b2BDViuE1KzpyEsiM0QyNcAbTgK4Pahrywjo=",
        "originContent": "* [**C++**: _Build your own VR headset for $200_](https://github.com/relativty/Relativ)",
        "translatedContent": "* [**C++**: _用 200 美元打造自己的 VR 頭戴裝置_](https://github.com/relativty/Relativ)"
      },
      {
        "row": 22,
        "rowsha": "s889Y25JdunuppN2iCbYAm/UzJjFv6WhyZPiN7QBLZM=",
        "originContent": "* [**C++**: _How X Window Managers work and how to write one_](https://seasonofcode.com/posts/how-x-window-managers-work-and-how-to-write-one-part-i.html)",
        "translatedContent": "* [**C++**: _X 窗口管理器的工作原理及如何編寫_](https://seasonofcode.com/posts/how-x-window-managers-work-and-how-to-write-one-part-i.html)"
      },
      {
        "row": 23,
        "rowsha": "6v6xXUm5MBsXwO9U20QWmC6tAJg4BWjeSHkQAHub9XE=",
        "originContent": "* [**C++**: _Writing a Linux Debugger_](https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/)",
        "translatedContent": "* [**C++**: _編寫 Linux 除錯器_](https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/)"
      },
      {
        "row": 24,
        "rowsha": "ds/vuL2H5kPYlWGk3WNz32E2pJeAlLwagt0wQNSISlk=",
        "originContent": "* [**C++**: _How a 64k intro is made_](http://www.lofibucket.com/articles/64k_intro.html)",
        "translatedContent": "* [**C++**: _64k 介紹是如何製作的_](http://www.lofibucket.com/articles/64k_intro.html)"
      },
      {
        "row": 25,
        "rowsha": "CqLjBLHgvrOdYDkecuJ+sex3nDl6T6wfPXqXQ+lb9+A=",
        "originContent": "* [**C++**: _Make your own Game Engine_](https://www.youtube.com/playlist?list=PLlrATfBNZ98dC-V-N3m0Go4deliWHPFwT)",
        "translatedContent": "* [**C++**: _打造自己的遊戲引擎_](https://www.youtube.com/playlist?list=PLlrATfBNZ98dC-V-N3m0Go4deliWHPFwT)"
      },
      {
        "row": 26,
        "rowsha": "0v3W6lmpxP9bdeDrmEJqDq7RwQeTdJxcTZBVsxYytK8=",
        "originContent": "* [**C#**: _C# Networking: Create a TCP chater server, TCP games, UDP Pong and more_](https://16bpp.net/tutorials/csharp-networking)",
        "translatedContent": "* [**C#**: _C# 網路：建立 TCP 聊天伺服器、TCP 遊戲、UDP Pong 等_](https://16bpp.net/tutorials/csharp-networking)"
      },
      {
        "row": 27,
        "rowsha": "7A3P9ysMA4eWrqvLVYI2cf2XoDNCS9y8ys1+bPBfpsE=",
        "originContent": "* [**C#**: _Loading and rendering 3D skeletal animations from scratch in C# and GLSL_](https://www.seanjoflynn.com/research/skeletal-animation.html)",
        "translatedContent": "* [**C#**: _從零開始載入與渲染 3D 骨架動畫（C# 與 GLSL）_](https://www.seanjoflynn.com/research/skeletal-animation.html)"
      },
      {
        "row": 28,
        "rowsha": "X9qPn7FhunbbgwqU1j/PHhPBodxtlVGUGPcubInZaqU=",
        "originContent": "* [**Clojure**: _Building a spell-checker_](https://bernhardwenzel.com/articles/clojure-spellchecker/)",
        "translatedContent": "* [**Clojure**: _建立拼寫檢查器_](https://bernhardwenzel.com/articles/clojure-spellchecker/)"
      },
      {
        "row": 29,
        "rowsha": "wprSwR0HxBCBEBbugT/4X0W6A0Rs3S1KN/KLDNWwiPo=",
        "originContent": "* [**Go**: _Build A Simple Terminal Emulator In 100 Lines of Golang_](https://ishuah.com/2021/03/10/build-a-terminal-emulator-in-100-lines-of-go/)",
        "translatedContent": "* [**Go**: _用 100 行 Golang 建立簡易終端模擬器_](https://ishuah.com/2021/03/10/build-a-terminal-emulator-in-100-lines-of-go/)"
      },
      {
        "row": 30,
        "rowsha": "xE1ITysd1Kwu3YJH9wuvVjX3VNOUZ7OCIAJfQx33jRM=",
        "originContent": "* [**Go**: _Let's Create a Simple Load Balancer_](https://kasvith.me/posts/lets-create-a-simple-lb-go/)",
        "translatedContent": "* [**Go**: _讓我們建立一個簡單的負載平衡器_](https://kasvith.me/posts/lets-create-a-simple-lb-go/)"
      },
      {
        "row": 31,
        "rowsha": "TqOvGr6Vg2DAOstsbl4sHcYsmNSK6jZ+qi40kFqOacM=",
        "originContent": "* [**Go**: _Video Encoding from Scratch_](https://github.com/kevmo314/codec-from-scratch)",
        "translatedContent": "* [**Go**: _從零開始的影片編碼_](https://github.com/kevmo314/codec-from-scratch)"
      },
      {
        "row": 32,
        "rowsha": "dKiaA1Mx2MVkNwgJ7W9JW3aZ9nM9VW3JwPsXEQBT0io=",
        "originContent": "* [**Java**: _How to Build an Android Reddit App_](https://www.youtube.com/playlist?list=PLgCYzUzKIBE9HUJU-upNvl3TRVAo9W47y) [video]",
        "translatedContent": "* [**Java**: _如何建立 Android Reddit 應用程式_](https://www.youtube.com/playlist?list=PLgCYzUzKIBE9HUJU-upNvl3TRVAo9W47y) [影片]"
      },
      {
        "row": 33,
        "rowsha": "SQHqV25V7gTfgu3gDPmHWA+TS3kItcwBkf5OZA9bTDg=",
        "originContent": "* [**JavaScript**: _Build Your Own Module Bundler - Minipack_](https://github.com/ronami/minipack)",
        "translatedContent": "* [**JavaScript**: _打造自己的模組打包工具 - Minipack_](https://github.com/ronami/minipack)"
      },
      {
        "row": 34,
        "rowsha": "8dhPOQvI1p90CVms7IqDGq9qC1RvTUmjwH/8MVDoXDA=",
        "originContent": "* [**JavaScript**: _Learn JavaScript Promises by Building a Promise from Scratch_](https://levelup.gitconnected.com/understand-javascript-promises-by-building-a-promise-from-scratch-84c0fd855720)",
        "translatedContent": "* [**JavaScript**: _透過從零建立 Promise 學習 JavaScript Promise_](https://levelup.gitconnected.com/understand-javascript-promises-by-building-a-promise-from-scratch-84c0fd855720)"
      },
      {
        "row": 35,
        "rowsha": "wpXIHxhCPmbgYWsyub0WqekY3DZOmpK6zN9GmCVI6bM=",
        "originContent": "* [**JavaScript**: _Implementing promises from scratch (TDD way)_](https://www.mauriciopoppe.com/notes/computer-science/computation/promises/)",
        "translatedContent": "* [**JavaScript**: _從零實作 promises（TDD 方式）_](https://www.mauriciopoppe.com/notes/computer-science/computation/promises/)"
      },
      {
        "row": 36,
        "rowsha": "qrLwl9hWRr4+58/PjQ8MM/qNQzhjFzHHasjZPvHr2Xw=",
        "originContent": "* [**JavaScript**: _Implement your own — call(), apply() and bind() method in JavaScript_](https://blog.usejournal.com/implement-your-own-call-apply-and-bind-method-in-javascript-42cc85dba1b)",
        "translatedContent": "* [**JavaScript**: _自己實作 call(), apply() 和 bind() 方法_](https://blog.usejournal.com/implement-your-own-call-apply-and-bind-method-in-javascript-42cc85dba1b)"
      },
      {
        "row": 37,
        "rowsha": "GpIBJyOq9OraXLdQjkLoeIuR8Ddj4MyoBwyX2yrp23k=",
        "originContent": "* [**JavaScript**: _JavaScript Algorithms and Data Structures_](https://github.com/trekhleb/javascript-algorithms)",
        "translatedContent": "* [**JavaScript**: _JavaScript 演算法與資料結構_](https://github.com/trekhleb/javascript-algorithms)"
      },
      {
        "row": 38,
        "rowsha": "xILSdSTeA87oYC2Kjrlr1BALfqopE1m842QeVBinyUk=",
        "originContent": "* [**JavaScript**: _Build a ride hailing app with React Native_](https://pusher.com/tutorials/ride-hailing-react-native)",
        "translatedContent": "* [**JavaScript**: _用 React Native 建立叫車應用程式_](https://pusher.com/tutorials/ride-hailing-react-native)"
      },
      {
        "row": 39,
        "rowsha": "t4vFjJ+RAV7F2O6GvWJiX0dCyc63hIsCpn3SiuIXRe0=",
        "originContent": "* [**JavaScript**: _Build Your Own AdBlocker in (Literally) 10 Minutes_](https://levelup.gitconnected.com/building-your-own-adblocker-in-literally-10-minutes-1eec093b04cd)",
        "translatedContent": "* [**JavaScript**: _用（字面上）10 分鐘打造自己的 AdBlocker_](https://levelup.gitconnected.com/building-your-own-adblocker-in-literally-10-minutes-1eec093b04cd)"
      },
      {
        "row": 40,
        "rowsha": "ZMT38MFJtak3mR4wX8qTCGlk8OC9UrNYS7QfRUAWRN8=",
        "originContent": "* [**Kotlin**: _Build Your Own Cache_](https://github.com/kezhenxu94/cache-lite)",
        "translatedContent": "* [**Kotlin**: _建立自己的快取系統_](https://github.com/kezhenxu94/cache-lite)"
      },
      {
        "row": 41,
        "rowsha": "Pi5IQFpezANq1HcxObKv+RbDecp9EAZgkBxgl1SIiW0=",
        "originContent": "* [**Lua**: _Building a CDN from Scratch to Learn about CDN_](https://github.com/leandromoreira/cdn-up-and-running)",
        "translatedContent": "* [**Lua**: _從零開始建立 CDN 以學習 CDN_](https://github.com/leandromoreira/cdn-up-and-running)"
      },
      {
        "row": 42,
        "rowsha": "YckF1yVsuBnKcb0ZOa0XSfaWd1AkjpjH+nT5CYUq4Rk=",
        "originContent": "* [**Nim**: _Writing a Redis Protocol Parser_](https://xmonader.github.io/nimdays/day12_resp.html)",
        "translatedContent": "* [**Nim**: _編寫 Redis 協定解析器_](https://xmonader.github.io/nimdays/day12_resp.html)"
      },
      {
        "row": 43,
        "rowsha": "qutoqTtB+jWolYhp2pt7uyCFeqMCjZtycGlD+acY43Y=",
        "originContent": "* [**Nim**: _Writing a Build system_](https://xmonader.github.io/nimdays/day11_buildsystem.html)",
        "translatedContent": "* [**Nim**: _編寫建置系統_](https://xmonader.github.io/nimdays/day11_buildsystem.html)"
      },
      {
        "row": 44,
        "rowsha": "tolbTUAtSFrRcRDd0Hjd3OCq+aYPhA3+sYUkWYmL1O0=",
        "originContent": "* [**Nim**: _Writing a MiniTest Framework_](https://xmonader.github.io/nimdays/day08_minitest.html)",
        "translatedContent": "* [**Nim**: _編寫 MiniTest 測試框架_](https://xmonader.github.io/nimdays/day08_minitest.html)"
      },
      {
        "row": 45,
        "rowsha": "/70QxMtkqkVysRonq7M5HaCEBSkRGxsdDUKYag0qAmc=",
        "originContent": "* [**Nim**: _Writing a DMIDecode Parser_](https://xmonader.github.io/nimdays/day01_dmidecode.html)",
        "translatedContent": "* [**Nim**: _編寫 DMIDecode 解析器_](https://xmonader.github.io/nimdays/day01_dmidecode.html)"
      },
      {
        "row": 46,
        "rowsha": "uM1iEyTi770Rag/qux1nGySOnBWvLxdw76Y/23WMCko=",
        "originContent": "* [**Nim**: _Writing a INI Parser_](https://xmonader.github.io/nimdays/day05_iniparser.html)",
        "translatedContent": "* [**Nim**: _編寫 INI 解析器_](https://xmonader.github.io/nimdays/day05_iniparser.html)"
      },
      {
        "row": 47,
        "rowsha": "5uDDfWuyowBjUG4n9MSxbA4NT9u1R9D3Mkq8sSolVjo=",
        "originContent": "* [**Nim**: _Writing a Link Checker_](https://xmonader.github.io/nimdays/day04_asynclinkschecker.html)",
        "translatedContent": "* [**Nim**: _編寫連結檢查器_](https://xmonader.github.io/nimdays/day04_asynclinkschecker.html)"
      },
      {
        "row": 48,
        "rowsha": "hiK+d8nM03NqVTcSnvaUQYCmeLYGRYUUofgIeAru04A=",
        "originContent": "* [**Nim**: _Writing a URL Shortening Service_](https://xmonader.github.io/nimdays/day07_shorturl.html)",
        "translatedContent": "* [**Nim**: _編寫 URL 縮短服務_](https://xmonader.github.io/nimdays/day07_shorturl.html)"
      },
      {
        "row": 49,
        "rowsha": "pNfIGmERlUXDpdK4exnqCyv0BEsRtBvO33RMGJzoF84=",
        "originContent": "* [**Node.js**: _Build a static site generator in 40 lines with Node.js_](https://www.webdevdrops.com/en/build-static-site-generator-nodejs-8969ebe34b22/)",
        "translatedContent": "* [**Node.js**: _用 40 行 Node.js 編寫靜態網站產生器_](https://www.webdevdrops.com/en/build-static-site-generator-nodejs-8969ebe34b22/)"
      },
      {
        "row": 50,
        "rowsha": "hBc4oBjklhei/76Z47UVqmFJOl/685XJQkKxNnGr0EE=",
        "originContent": "* [**Node.js**: _Building A Simple Single Sign On(SSO) Server And Solution From Scratch In Node.js._](https://codeburst.io/building-a-simple-single-sign-on-sso-server-and-solution-from-scratch-in-node-js-ea6ee5fdf340)",
        "translatedContent": "* [**Node.js**: _從零開始建立簡易單點登入(SSO)伺服器與解決方案_](https://codeburst.io/building-a-simple-single-sign-on-sso-server-and-solution-from-scratch-in-node-js-ea6ee5fdf340)"
      },
      {
        "row": 51,
        "rowsha": "JHSgPyQxvM3gjb9c7xGySGLXgMTJxsngpDb0fkdg1Z0=",
        "originContent": "* [**Node.js**: _How to create a real-world Node CLI app with Node_](https://medium.freecodecamp.org/how-to-create-a-real-world-node-cli-app-with-node-391b727bbed3)",
        "translatedContent": "* [**Node.js**: _如何用 Node.js 建立一個真實世界的 CLI 應用程式_](https://medium.freecodecamp.org/how-to-create-a-real-world-node-cli-app-with-node-391b727bbed3)"
      },
      {
        "row": 52,
        "rowsha": "PoXeGy9XxlwTKGZbQ6xx4dkOkbEYVrEYB02W76puC00=",
        "originContent": "* [**Node.js**: _Build a DNS Server in Node.js_](https://engineerhead.github.io/dns-server/)",
        "translatedContent": "* [**Node.js**: _用 Node.js 建立 DNS 伺服器_](https://engineerhead.github.io/dns-server/)"
      },
      {
        "row": 53,
        "rowsha": "l7UUdSpGswHDBE//qsFbMnNxvUsXG/9G6tD4Pwh04Zc=",
        "originContent": "* [**PHP**: _Write your own MVC from scratch in PHP_ ](https://chaitya62.github.io/2018/04/29/Writing-your-own-MVC-from-Scratch-in-PHP.html)",
        "translatedContent": "* [**PHP**: _從零開始用 PHP 編寫自己的 MVC_](https://chaitya62.github.io/2018/04/29/Writing-your-own-MVC-from-Scratch-in-PHP.html)"
      },
      {
        "row": 54,
        "rowsha": "DEMzYK5W6rCNP6QHqNTcTEZ3my8SCzypIq1fCUB4wOA=",
        "originContent": "* [**PHP**: _Make your own blog_](https://ilovephp.jondh.me.uk/en/tutorial/make-your-own-blog)",
        "translatedContent": "* [**PHP**: _建立自己的部落格_](https://ilovephp.jondh.me.uk/en/tutorial/make-your-own-blog)"
      },
      {
        "row": 55,
        "rowsha": "7rdaWV1g04pgWdP73u+nBeQzarYo1D2yHNgJPn+kgBE=",
        "originContent": "* [**PHP**: _Modern PHP Without a Framework_](https://kevinsmith.io/modern-php-without-a-framework)",
        "translatedContent": "* [**PHP**: _不使用框架的現代 PHP_](https://kevinsmith.io/modern-php-without-a-framework)"
      },
      {
        "row": 56,
        "rowsha": "fgyKXqyFQnDvXoY/pnb1oP/xnzwNZgQYThNMub9fiRY=",
        "originContent": "* [**PHP**: _Code a Web Search Engine in PHP_](https://boyter.org/2013/01/code-for-a-search-engine-in-php-part-1/)",
        "translatedContent": "* [**PHP**: _用 PHP 編寫網路搜尋引擎_](https://boyter.org/2013/01/code-for-a-search-engine-in-php-part-1/)"
      },
      {
        "row": 57,
        "rowsha": "BctfTK2pOX+Z7MkVgneJYoncM6nN5JUnyUBgqByy/oI=",
        "originContent": "* [**Python**: _Build a Deep Learning Library_](https://www.youtube.com/watch?v=o64FV-ez6Gw) [video]",
        "translatedContent": "* [**Python**: _建立深度學習函式庫_](https://www.youtube.com/watch?v=o64FV-ez6Gw) [影片]"
      },
      {
        "row": 58,
        "rowsha": "3HT7X5pnPH+uQZ5CLxEwJEwOIWLAgrxgVIYmjSLXLI4=",
        "originContent": "* [**Python**: _How to Build a Kick-Ass Mobile Document Scanner in Just 5 Minutes_](https://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/)",
        "translatedContent": "* [**Python**: _如何在 5 分鐘內打造超強行動文件掃描器_](https://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/)"
      },
      {
        "row": 59,
        "rowsha": "a+guigxWFTQtyafk606bF1bhhH1hqB1vIGA2jN/pJrY=",
        "originContent": "* [**Python**: _Continuous Integration System_](http://aosabook.org/en/500L/a-continuous-integration-system.html)",
        "translatedContent": "* [**Python**: _持續整合系統_](http://aosabook.org/en/500L/a-continuous-integration-system.html)"
      },
      {
        "row": 60,
        "rowsha": "4RI4MvqgXdlUVqqGvbl+YK6zi0emG6RCXzsnFiChzXg=",
        "originContent": "* [**Python**: _Recommender Systems in Python: Beginner Tutorial_](https://www.datacamp.com/community/tutorials/recommender-systems-python)",
        "translatedContent": "* [**Python**: _Python 推薦系統初學者教學_](https://www.datacamp.com/community/tutorials/recommender-systems-python)"
      },
      {
        "row": 61,
        "rowsha": "fnFqNNa7RaFM3XW+NRqU6cOs7eB1mJkcvCNRKXFyXPM=",
        "originContent": "* [**Python**: _Write SMS-spam detector with Scikit-learn_](https://medium.com/@kopilov.vlad/detect-sms-spam-in-kaggle-with-scikit-learn-5f6afa7a3ca2)",
        "translatedContent": "* [**Python**: _用 Scikit-learn 編寫 SMS 垃圾簡訊偵測器_](https://medium.com/@kopilov.vlad/detect-sms-spam-in-kaggle-with-scikit-learn-5f6afa7a3ca2)"
      },
      {
        "row": 62,
        "rowsha": "jhzD94GDHulR4ohZyw2spUncFUUDFx05R0L6Rd5vYfs=",
        "originContent": "* [**Python**: _A Simple Content-Based Recommendation Engine in Python_](http://blog.untrod.com/2016/06/simple-similar-products-recommendation-engine-in-python.html)",
        "translatedContent": "* [**Python**: _Python 簡易內容為基礎的推薦引擎_](http://blog.untrod.com/2016/06/simple-similar-products-recommendation-engine-in-python.html)"
      },
      {
        "row": 63,
        "rowsha": "bdvbqBntdp3MGsaeIHq5OtVle8v2gb8bLvU84IeNIc0=",
        "originContent": "* [**Python**: _Stock Market Predictions with LSTM in Python_](https://www.datacamp.com/community/tutorials/lstm-python-stock-market)",
        "translatedContent": "* [**Python**: _用 LSTM 預測股市_](https://www.datacamp.com/community/tutorials/lstm-python-stock-market)"
      },
      {
        "row": 64,
        "rowsha": "Ru35CR97zJKySfmPxWgxZ/cCV+x52tS8A8gyw2TK3Vo=",
        "originContent": "* [**Python**: _Building a simple Generative Adversarial Network (GAN) using Tensorflow_](https://blog.paperspace.com/implementing-gans-in-tensorflow/)",
        "translatedContent": "* [**Python**: _使用 Tensorflow 建立簡易生成對抗網路（GAN）_](https://blog.paperspace.com/implementing-gans-in-tensorflow/)"
      },
      {
        "row": 65,
        "rowsha": "ab6iTVV7++pgrIzOlv6cdUoY3bTNC5ZEJ/zMGfK8YvA=",
        "originContent": "* [**Python**: _Learn ML Algorithms by coding: Decision Trees_](https://lethalbrains.com/learn-ml-algorithms-by-coding-decision-trees-439ac503c9a4)",
        "translatedContent": "* [**Python**: _透過程式碼學習機器學習演算法：決策樹_](https://lethalbrains.com/learn-ml-algorithms-by-coding-decision-trees-439ac503c9a4)"
      },
      {
        "row": 66,
        "rowsha": "0waY/gDlV6bh6R/tC0i74/Dd8taI9LDw6+OeiaXMHRI=",
        "originContent": "* [**Python**: _JSON Decoding Algorithm_](https://github.com/cheery/json-algorithm)",
        "translatedContent": "* [**Python**: _JSON 解碼演算法_](https://github.com/cheery/json-algorithm)"
      },
      {
        "row": 67,
        "rowsha": "Jnbo/3gFzjaXwGo7AIMS10nZ0u6FbgI1+hs6VAlhJ38=",
        "originContent": "* [**Python**: _Build your own Git plugin with python_](https://joshburns-xyz.vercel.app/posts/build-your-own-git-plugin)",
        "translatedContent": "* [**Python**: _用 Python 建立自己的 Git 外掛_](https://joshburns-xyz.vercel.app/posts/build-your-own-git-plugin)"
      },
      {
        "row": 68,
        "rowsha": "dFrJz5MO8zV+L/lPMy8ou3R7As+C0p/kIYqFHqJfS1g=",
        "originContent": "* [**Ruby**: _A Pedometer in the Real World_](http://aosabook.org/en/500L/a-pedometer-in-the-real-world.html)",
        "translatedContent": "* [**Ruby**: _實際世界中的計步器_](http://aosabook.org/en/500L/a-pedometer-in-the-real-world.html)"
      },
      {
        "row": 69,
        "rowsha": "CmCLGs6/wtA3ZDjmWB+RMrIjMVHpOKsSUmq+7S4z5vc=",
        "originContent": "* [**Ruby**: _Creating a Linux Desktop application with Ruby_](https://iridakos.com/tutorials/2018/01/25/creating-a-gtk-todo-application-with-ruby)",
        "translatedContent": "* [**Ruby**: _用 Ruby 建立 Linux 桌面應用程式_](https://iridakos.com/tutorials/2018/01/25/creating-a-gtk-todo-application-with-ruby)"
      },
      {
        "row": 70,
        "rowsha": "rRKkr29bAQRdrYCX3gsVT2YUb3wnpQj+MxOAG6XgogY=",
        "originContent": "* [**Rust**: _Building a DNS server in Rust_](https://github.com/EmilHernvall/dnsguide/blob/master/README.md)",
        "translatedContent": "* [**Rust**: _用 Rust 建立 DNS 伺服器_](https://github.com/EmilHernvall/dnsguide/blob/master/README.md)"
      },
      {
        "row": 71,
        "rowsha": "MHXieZo6+PrcVMPEzHxyh45NtFOJ/inxXITYuF4rqgo=",
        "originContent": "* [**Rust**: _Writing Scalable Chat Service from Scratch_](https://nbaksalyar.github.io/2015/07/10/writing-chat-in-rust.html)",
        "translatedContent": "* [**Rust**: _從零開始編寫可擴展聊天服務_](https://nbaksalyar.github.io/2015/07/10/writing-chat-in-rust.html)"
      },
      {
        "row": 72,
        "rowsha": "HyVpiQRMX5fs9yays1BSI6Ca/FXksB3Bu5+AjhGEglA=",
        "originContent": "* [**Rust**: _WebGL + Rust: Basic Water Tutorial_](https://www.chinedufn.com/3d-webgl-basic-water-tutorial/)",
        "translatedContent": "* [**Rust**: _WebGL + Rust：基礎水面教學_](https://www.chinedufn.com/3d-webgl-basic-water-tutorial/)"
      },
      {
        "row": 73,
        "rowsha": "UxMgvs/PwpXEG7D7iDj2QfRTAgetRk8iLL4PsuQ3d2o=",
        "originContent": "* [**TypeScript**: _Tiny Package Manager: Learns how npm or Yarn works_](https://github.com/g-plane/tiny-package-manager)",
        "translatedContent": "* [**TypeScript**: _Tiny 套件管理器：學習 npm 或 Yarn 的運作方式_](https://github.com/g-plane/tiny-package-manager)"
      },
      {
        "row": 74,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 75,
        "rowsha": "eGNAOkMC4MZYwOzdYUxieLrxOe9KOA7xKFs6H2RFFWI=",
        "originContent": "## Contribute ",
        "translatedContent": "## 貢獻"
      },
      {
        "row": 76,
        "rowsha": "mLaF8DTYqzNPgc3+zp7ycnU+HYjWhnFthDsNWFubF6g=",
        "originContent": "* Submissions welcome, just send a PR, or [create an issue](https://github.com/codecrafters-io/build-your-own-x/issues/new)",
        "translatedContent": "* 歡迎投稿，只需送出 PR，或 [建立 issue](https://github.com/codecrafters-io/build-your-own-x/issues/new)"
      },
      {
        "row": 77,
        "rowsha": "5a3NDszozlxiDH6RgPt55y324BYta3o1WPWMO83CHAo=",
        "originContent": "* Help us review [pending submissions](https://github.com/codecrafters-io/build-your-own-x/issues) by leaving comments and \"reactions\"",
        "translatedContent": "* 幫助我們審核[待審稿件](https://github.com/codecrafters-io/build-your-own-x/issues)，留下評論和「反應」"
      },
      {
        "row": 78,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 79,
        "rowsha": "6oewgzZXac4e2gsiW2tt+w2nRZ1rEIwGqzjC9BEoGps=",
        "originContent": "## Origins & License",
        "translatedContent": "## 起源與授權"
      },
      {
        "row": 80,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 81,
        "rowsha": "yHRszTjkgLCagHSXsbp/RD5+8BTuXZmJ7LxLpqPz8Po=",
        "originContent": "[![CC0](https://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)",
        "translatedContent": "[![CC0](https://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)"
      },
      {
        "row": 82,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 83,
        "rowsha": "mrvVfb7nmPBuFCVt+5HUqmjVzB0EyD9Wd3s85s1fywE=",
        "originContent": "This repository is the work of [many contributors](https://github.com/codecrafters-io/build-your-own-x/graphs/contributors). It was started by [Daniel Stefanovic](https://github.com/danistefanovic), and is now maintained by [CodeCrafters, Inc.](https://codecrafters.io) To the extent possible under law, [CodeCrafters, Inc.](https://codecrafters.io) has waived all copyright and related or neighboring rights to this work.",
        "translatedContent": "此儲存庫為[眾多貢獻者](https://github.com/codecrafters-io/build-your-own-x/graphs/contributors)的成果。最初由[Daniel Stefanovic](https://github.com/danistefanovic)發起，現在由[CodeCrafters, Inc.](https://codecrafters.io)維護。依法律允許的最大範圍，[CodeCrafters, Inc.](https://codecrafters.io)已放棄本作品的所有版權及相關或鄰接權利。"
      },
      {
        "row": 84,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]