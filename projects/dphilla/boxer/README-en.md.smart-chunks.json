[
  {
    "Id": 1,
    "Content": "# Boxer\n\n<p align=\"center\">\n  <p align=\"center\">\n    <a href=\"https://en.wikipedia.org/wiki/Mia_St._John\" target=\"_blank\">\n      <img src=\"https://user-images.githubusercontent.com/20820229/164059786-8d082b44-59d6-431a-adf4-993116c8d492.png\" alt=\"Mia St John\" width=\"300\"             height=\"400\">\n    </a>\n  </p>\n</p>\n\n**This project is under rapid development**\n\n# Boxer\n\n## Overview\nBoxer is an open-source project designed to reimagine cloud computing by transitioning from traditional container technology to WebAssembly (Wasm) based distributions, known as \"Boxes\" or \"Wasm-Boxes\".\n\n## Motivation\nWhile containers have been a cornerstone of cloud computing, providing isolated environments for applications, they come with significant drawbacks. They often result in larger, less efficient deployments with slower startup times and rely heavily on the underlying operating system/kernel for security, which can introduce vulnerabilities and platform lock-in.\n\n## Solution: Boxer\nBoxer offers a new solution by providing tooling for converting existing containerized workloads and definitions into near-universally deployable Wasm distributions. These \"Boxes\" offer environments comparable to those provided by containers but are vastly more efficient thanks to the lightweight, sandboxed execution capabilities of WebAssembly.\n\n<p align=\"center\">\n  <p align=\"center\">\n    <a href=\"https://boxer.dev\" target=\"_blank\">\n      <img src=\"https://github.com/dphilla/wasm-vfs/assets/20820229/4b0309d8-c8ae-427a-8af3-67857a8eebf3\" alt=\"Container and Box\" width=\"400\"             height=\"400\">\n    </a>\n  </p>\n</p>\n\n\n### Key Advantages of WebAssembly:\n- **Reduced Overhead:** Wasm's compact binary instruction format ensures lightweight execution, drastically cutting down the overhead seen in traditional containers.\n- **Enhanced Performance:** The efficiency of Wasm leads to improved performance and smaller, more efficient deployments, perfectly suited for cloud computing.\n- **Superior Security:** Wasm's memory-safe, isolated execution environment provides a higher level of security, independent of the operating system.\n- **Run (almost) Everywhere** Wasm can run a anywhere there is a WebAssembly runtime, including browsers, servers, and embedded devices; existing runtimes are available on for a [wide variety of architectures.](https://github.com/appcypher/awesome-wasm-runtimes)\n\n## Example\n\n### Dockerfile ➡ (Wasm)Box\n\nFor for this file:\n",
    "ContentSha": "vz4tV+a/prqpw7ezCSGn9BPlfyAQy+g1GR/7dsGwYGo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<translate-content># Boxer\n\n<p align=\"center\">\n  <p align=\"center\">\n    <a href=\"https://en.wikipedia.org/wiki/Mia_St._John\" target=\"_blank\">\n      <img src=\"https://user-images.githubusercontent.com/20820229/164059786-8d082b44-59d6-431a-adf4-993116c8d492.png\" alt=\"Mia St John\" width=\"300\"             height=\"400\">\n    </a>\n  </p>\n</p>\n\n**This project is under rapid development**\n\n# Boxer\n\n## Overview\nBoxer is an open-source project designed to reimagine cloud computing by transitioning from traditional container technology to WebAssembly (Wasm) based distributions, known as \"Boxes\" or \"Wasm-Boxes\".\n\n## Motivation\nWhile containers have been a cornerstone of cloud computing, providing isolated environments for applications, they come with significant drawbacks. They often result in larger, less efficient deployments with slower startup times and rely heavily on the underlying operating system/kernel for security, which can introduce vulnerabilities and platform lock-in.\n\n## Solution: Boxer\nBoxer offers a new solution by providing tooling for converting existing containerized workloads and definitions into near-universally deployable Wasm distributions. These \"Boxes\" offer environments comparable to those provided by containers but are vastly more efficient thanks to the lightweight, sandboxed execution capabilities of WebAssembly.\n\n<p align=\"center\">\n  <p align=\"center\">\n    <a href=\"https://boxer.dev\" target=\"_blank\">\n      <img src=\"https://github.com/dphilla/wasm-vfs/assets/20820229/4b0309d8-c8ae-427a-8af3-67857a8eebf3\" alt=\"Container and Box\" width=\"400\"             height=\"400\">\n    </a>\n  </p>\n</p>\n\n\n### Key Advantages of WebAssembly:\n- **Reduced Overhead:** Wasm's compact binary instruction format ensures lightweight execution, drastically cutting down the overhead seen in traditional containers.\n- **Enhanced Performance:** The efficiency of Wasm leads to improved performance and smaller, more efficient deployments, perfectly suited for cloud computing.\n- **Superior Security:** Wasm's memory-safe, isolated execution environment provides a higher level of security, independent of the operating system.\n- **Run (almost) Everywhere** Wasm can run a anywhere there is a WebAssembly runtime, including browsers, servers, and embedded devices; existing runtimes are available on for a [wide variety of architectures.](https://github.com/appcypher/awesome-wasm-runtimes)\n\n## Example\n\n### Dockerfile ➡ (Wasm)Box\n\nFor for this file:\n</translate-content>",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "w7QTyJffB8Cojxj1uP7PGmJBw9GF+y8miaTfU4z0ses=",
        "originContent": "# Boxer",
        "translatedContent": "<translate-content># Boxer"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 4,
        "rowsha": "bxjJn5W5U4615UwnNH02Y8/BQYk3ChIXDUAi1KtQj40=",
        "originContent": "  <p align=\"center\">",
        "translatedContent": "  <p align=\"center\">"
      },
      {
        "row": 5,
        "rowsha": "PH0tw+8ep1hyXQsm8u+vaiQgDiLSeXx9fTGD1OtdJ68=",
        "originContent": "    <a href=\"https://en.wikipedia.org/wiki/Mia_St._John\" target=\"_blank\">",
        "translatedContent": "    <a href=\"https://en.wikipedia.org/wiki/Mia_St._John\" target=\"_blank\">"
      },
      {
        "row": 6,
        "rowsha": "aySAVdMvf4WG6bG93jZuJhIIglQC3ou7vurE4oL7X1I=",
        "originContent": "      <img src=\"https://user-images.githubusercontent.com/20820229/164059786-8d082b44-59d6-431a-adf4-993116c8d492.png\" alt=\"Mia St John\" width=\"300\"             height=\"400\">",
        "translatedContent": "      <img src=\"https://user-images.githubusercontent.com/20820229/164059786-8d082b44-59d6-431a-adf4-993116c8d492.png\" alt=\"Mia St John\" width=\"300\"             height=\"400\">"
      },
      {
        "row": 7,
        "rowsha": "r52QjIbZf1aIcwCydWRFx1LDX4Vc0bsXMVxnkEUrqHA=",
        "originContent": "    </a>",
        "translatedContent": "    </a>"
      },
      {
        "row": 8,
        "rowsha": "xekGMwR1kXr+mg5XAB6V3dYHsyhEy+YsYHHE8Tdsue4=",
        "originContent": "  </p>",
        "translatedContent": "  </p>"
      },
      {
        "row": 9,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "a5Qkp4fMd/KIfisjCXIhO0YoFZPXMXXWvpjnnKdKv60=",
        "originContent": "**This project is under rapid development**",
        "translatedContent": "**This project is under rapid development**"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "w7QTyJffB8Cojxj1uP7PGmJBw9GF+y8miaTfU4z0ses=",
        "originContent": "# Boxer",
        "translatedContent": "# Boxer"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "czfz0Kop6agrjxZQt0Opju+QeUYx+nY6MZaG5pxUaCE=",
        "originContent": "## Overview",
        "translatedContent": "## Overview"
      },
      {
        "row": 16,
        "rowsha": "qjjVdyuxcRef9z7l3Knw49q+1/GsejAvRg4/RVrwEvE=",
        "originContent": "Boxer is an open-source project designed to reimagine cloud computing by transitioning from traditional container technology to WebAssembly (Wasm) based distributions, known as \"Boxes\" or \"Wasm-Boxes\".",
        "translatedContent": "Boxer is an open-source project designed to reimagine cloud computing by transitioning from traditional container technology to WebAssembly (Wasm) based distributions, known as \"Boxes\" or \"Wasm-Boxes\"."
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "XkjmO8GZw+NPlqtsKIz94hXoCCSSximfmFKrLHYsZ2I=",
        "originContent": "## Motivation",
        "translatedContent": "## Motivation"
      },
      {
        "row": 19,
        "rowsha": "ewccjANrAfm6JRrATqp7lP9n2mEs+oXZ6WPUksu6pBQ=",
        "originContent": "While containers have been a cornerstone of cloud computing, providing isolated environments for applications, they come with significant drawbacks. They often result in larger, less efficient deployments with slower startup times and rely heavily on the underlying operating system/kernel for security, which can introduce vulnerabilities and platform lock-in.",
        "translatedContent": "While containers have been a cornerstone of cloud computing, providing isolated environments for applications, they come with significant drawbacks. They often result in larger, less efficient deployments with slower startup times and rely heavily on the underlying operating system/kernel for security, which can introduce vulnerabilities and platform lock-in."
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "6a9a1vA0FSdvEYrut9QrGumE2W1V4rA4f2rWDpBl/ug=",
        "originContent": "## Solution: Boxer",
        "translatedContent": "## Solution: Boxer"
      },
      {
        "row": 22,
        "rowsha": "W3QnQavI4lfsTNTSHl95SMVNO042GQX1DOCNjNqngmk=",
        "originContent": "Boxer offers a new solution by providing tooling for converting existing containerized workloads and definitions into near-universally deployable Wasm distributions. These \"Boxes\" offer environments comparable to those provided by containers but are vastly more efficient thanks to the lightweight, sandboxed execution capabilities of WebAssembly.",
        "translatedContent": "Boxer offers a new solution by providing tooling for converting existing containerized workloads and definitions into near-universally deployable Wasm distributions. These \"Boxes\" offer environments comparable to those provided by containers but are vastly more efficient thanks to the lightweight, sandboxed execution capabilities of WebAssembly."
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 25,
        "rowsha": "bxjJn5W5U4615UwnNH02Y8/BQYk3ChIXDUAi1KtQj40=",
        "originContent": "  <p align=\"center\">",
        "translatedContent": "  <p align=\"center\">"
      },
      {
        "row": 26,
        "rowsha": "6kghN0TpgWNWD47pOtlSDRAh2/eRGslVHjmRb+PCBUY=",
        "originContent": "    <a href=\"https://boxer.dev\" target=\"_blank\">",
        "translatedContent": "    <a href=\"https://boxer.dev\" target=\"_blank\">"
      },
      {
        "row": 27,
        "rowsha": "LHndrLIsBnzpd1exN2qRqmC0mC4TpfVgljec7ywZwjQ=",
        "originContent": "      <img src=\"https://github.com/dphilla/wasm-vfs/assets/20820229/4b0309d8-c8ae-427a-8af3-67857a8eebf3\" alt=\"Container and Box\" width=\"400\"             height=\"400\">",
        "translatedContent": "      <img src=\"https://github.com/dphilla/wasm-vfs/assets/20820229/4b0309d8-c8ae-427a-8af3-67857a8eebf3\" alt=\"Container and Box\" width=\"400\"             height=\"400\">"
      },
      {
        "row": 28,
        "rowsha": "r52QjIbZf1aIcwCydWRFx1LDX4Vc0bsXMVxnkEUrqHA=",
        "originContent": "    </a>",
        "translatedContent": "    </a>"
      },
      {
        "row": 29,
        "rowsha": "xekGMwR1kXr+mg5XAB6V3dYHsyhEy+YsYHHE8Tdsue4=",
        "originContent": "  </p>",
        "translatedContent": "  </p>"
      },
      {
        "row": 30,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "nd2BnH8CgPPyqng0TqeX0omloXhokDQJf79JMT4NA2M=",
        "originContent": "### Key Advantages of WebAssembly:",
        "translatedContent": "### Key Advantages of WebAssembly:"
      },
      {
        "row": 34,
        "rowsha": "lTr/4x2bbsMOEw2Ie87Upe/HORpfEYpjakKXxUod5pU=",
        "originContent": "- **Reduced Overhead:** Wasm's compact binary instruction format ensures lightweight execution, drastically cutting down the overhead seen in traditional containers.",
        "translatedContent": "- **Reduced Overhead:** Wasm's compact binary instruction format ensures lightweight execution, drastically cutting down the overhead seen in traditional containers."
      },
      {
        "row": 35,
        "rowsha": "rDu/S27+KBD5epX6FtWgMgsRQfeGOCmQqYxvTc0lI5o=",
        "originContent": "- **Enhanced Performance:** The efficiency of Wasm leads to improved performance and smaller, more efficient deployments, perfectly suited for cloud computing.",
        "translatedContent": "- **Enhanced Performance:** The efficiency of Wasm leads to improved performance and smaller, more efficient deployments, perfectly suited for cloud computing."
      },
      {
        "row": 36,
        "rowsha": "gDamsXNPXXHOjyTOeKay9OaBN6Jq6voQLJZQWijgHz0=",
        "originContent": "- **Superior Security:** Wasm's memory-safe, isolated execution environment provides a higher level of security, independent of the operating system.",
        "translatedContent": "- **Superior Security:** Wasm's memory-safe, isolated execution environment provides a higher level of security, independent of the operating system."
      },
      {
        "row": 37,
        "rowsha": "TSS48rp9dpCQLcUEwtpgHzTF7NV2HbufNt7x4TTSFHA=",
        "originContent": "- **Run (almost) Everywhere** Wasm can run a anywhere there is a WebAssembly runtime, including browsers, servers, and embedded devices; existing runtimes are available on for a [wide variety of architectures.](https://github.com/appcypher/awesome-wasm-runtimes)",
        "translatedContent": "- **Run (almost) Everywhere** Wasm can run a anywhere there is a WebAssembly runtime, including browsers, servers, and embedded devices; existing runtimes are available on for a [wide variety of architectures.](https://github.com/appcypher/awesome-wasm-runtimes)"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "m/NPRMnRNx9O2lad+gT/eDCv+Bz6gWRuaAzvCHcUzcE=",
        "originContent": "## Example",
        "translatedContent": "## Example"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 41,
        "rowsha": "vd20slUtq9YzSeflG7brMNCs8VNlz5c2rdzMES/spKE=",
        "originContent": "### Dockerfile ➡ (Wasm)Box",
        "translatedContent": "### Dockerfile ➡ (Wasm)Box"
      },
      {
        "row": 42,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 43,
        "rowsha": "vasQ7T5NCQKgK2VG+v7cwej/plLtVOUnhjYDMb4Aooc=",
        "originContent": "For for this file:",
        "translatedContent": "For for this file:"
      },
      {
        "row": 44,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "</translate-content>"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "```Dockerfile\nFROM scratch\nRUN mkdir -p /app\nCOPY a.out /app\nWORKDIR /app\nCMD [\"/app/a.out\"]\n```",
    "ContentSha": "1bgxiOd4ICypl3Songtli/7PzhEjlaANgzy6nvNJXEI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```Dockerfile\nFROM scratch\nRUN mkdir -p /app\nCOPY a.out /app\nWORKDIR /app\nCMD [\"/app/a.out\"]\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "gaNZYJ3r0/QiMc3vLVfXTBCjzzcS96Cs+b2lPJz720Q=",
        "originContent": "```Dockerfile",
        "translatedContent": "```Dockerfile"
      },
      {
        "row": 2,
        "rowsha": "Z8QoLGkorjgEibY5ISexS7FtjC9bpfooWpNPT5Q4e14=",
        "originContent": "FROM scratch",
        "translatedContent": "FROM scratch"
      },
      {
        "row": 3,
        "rowsha": "cdcTih9n0Xz1gTzIyKywyxeL7yBncLqftvdIABKuTHo=",
        "originContent": "RUN mkdir -p /app",
        "translatedContent": "RUN mkdir -p /app"
      },
      {
        "row": 4,
        "rowsha": "udDca8TNPKBm8KVIH1TRmgjUlfRWwhacBEQjvvlGqjI=",
        "originContent": "COPY a.out /app",
        "translatedContent": "COPY a.out /app"
      },
      {
        "row": 5,
        "rowsha": "2HNqI8wzFFFAeaSwLOdChw3b4XjPro9+tVB0dbuudas=",
        "originContent": "WORKDIR /app",
        "translatedContent": "WORKDIR /app"
      },
      {
        "row": 6,
        "rowsha": "PQGoEunF/Mm+ElwdQqnOSbsfdX6e3wgBBbzVIr8D6+4=",
        "originContent": "CMD [\"/app/a.out\"]",
        "translatedContent": "CMD [\"/app/a.out\"]"
      },
      {
        "row": 7,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 3,
    "Content": "\nrun  `box build -f Dockerfile`\n\nThis will bring in libc interaces (as imports) and create the necessary FS state, thus declaritivey creating a ready-to-run Wasm binary.\n",
    "ContentSha": "ksWSLoxWiGe9abvtSYRB65l9fZBB3I2SMUJ9OD5ZQZI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "run  `box build -f Dockerfile`\n\nThis will bring in libc interfaces (as imports) and create the necessary FS state, thus declaratively creating a ready-to-run Wasm binary.\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "run  `box build -f Dockerfile`"
      },
      {
        "row": 2,
        "rowsha": "0nzij3mQyQkkmM92avkquxqahQvC+/tk6A1s/mex66w=",
        "originContent": "run  `box build -f Dockerfile`",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "This will bring in libc interfaces (as imports) and create the necessary FS state, thus declaratively creating a ready-to-run Wasm binary."
      },
      {
        "row": 4,
        "rowsha": "PCO03SAZy/xBxdtmfOCzdU91WFF5hKaBN4PQw2z5Y4I=",
        "originContent": "This will bring in libc interaces (as imports) and create the necessary FS state, thus declaritivey creating a ready-to-run Wasm binary.",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]