[
  {
    "Id": 1,
    "Content": "# Fluid Image Web Component\n\nImages that scale intelligently to any desired size (within reasonable limits).\n\n![Fluid Images](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**Tiny!:** 7kb minified & gzipped\n\n## Usage\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\nThat's it. Scale the images as you wish, and they will just do their thing.\n\n## Demo\n\n[Demo Here](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\nA playground is also available for [experimenting with your own images](https://voicengo.github.io/fluid-img/public).\n",
    "ContentSha": "IyJuWMdGIfNG9N23uBUF+3+IxVoCK1w8zErBfdHhJvU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Fluid Image Web Component\n\n지능적으로 원하는 크기로(합리적인 한도 내에서) 크기가 조정되는 이미지입니다.\n\n![Fluid Images](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**아주 작음!:** 7kb(최소화 및 gzip 적용 시)\n\n## 사용법\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\n끝입니다. 이미지를 원하는 대로 크기 조정하면, 이미지가 알아서 처리됩니다.\n\n## 데모\n\n[데모 바로가기](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\n[직접 이미지를 실험해 볼 수 있는 플레이그라운드](https://voicengo.github.io/fluid-img/public)도 제공합니다.",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "## Installation\n\n### Client Library\n\n```sh\nnpm install fluid-img\n```\n\nThen import `fluid-img` in your project, which provides and registers the web-component:\n\n```ts\nimport 'fluid-img';\n```\n\nOr include the script from jsdelivr or unpkg:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- or -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "ContentSha": "exD9Jo7MOY0aCBa8asOKxkUIiFC9pdXuSnt9gsdQ3c0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## 설치\n\n### 클라이언트 라이브러리\n\n```sh\nnpm install fluid-img\n```\n\n그런 다음 프로젝트에서 `fluid-img`를 임포트하여 웹 컴포넌트를 제공하고 등록합니다:\n\n```ts\nimport 'fluid-img';\n```\n\n또는 jsdelivr나 unpkg에서 스크립트를 포함할 수 있습니다:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- 또는 -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "\n### Caveats\n\nThe fluid image component works best for horizontally or vertically scaling images within a range of approximately 0.5x to 1.5x their original size. While it can handle larger or smaller scales, visual quality may degrade quickly. It is not recommended for images where precise pixel integrity is critical, such as portraits, graphs, or detailed technical drawings, as seam carving introduces distortions. It is highly recommended to test your images at various sizes to ensure they meet your visual expectations.\n\n#### CORS\n\nDue to browser security restrictions, images loaded from a different origin (domain, protocol, or port) than the web page will trigger a Cross-Origin Resource Sharing (CORS) error. This component requires access to the raw pixel data of the image, which is restricted by CORS.\n\nTo use images from a different origin, the server hosting the images must be configured to send appropriate CORS headers (e.g., `Access-Control-Allow-Origin: *` or `Access-Control-Allow-Origin: your-domain.com`). Without these headers, the component will not be able to process the image.\n\n(FYI, for testing purposes, any image on imgur has the necessary CORS headers)\n\n#### Fallback\n\nIf the component fails to load or process the image, or throws an internal error, it will gracefully degrade to injecting a standard `<img>` tag into the `<fluid-img>` component, with 100% width & height, ensuring the image is still displayed.\n\n## Options\n\nUsage: `<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\nBy default, the `random` generator is used as it is the fastest.\n\n| Option                         | Values                           | Default      | Description                                                                                                            |\n| ------------------------------ | -------------------------------- | ------------ | ---------------------------------------------------------------------------------------------------------------------- |\n| `src`                          | URL                              |              | The URL of the image to be processed.                                                                                  |\n| `generator`                    | `random`, `predictive`           | `predictive` | The seam carving generator to use. `random` is faster but lower quality.                                               |\n| `scaling-axis`                 | `horizontal`, `vertical`, `auto` | `horizontal` | The axis for scaling. `auto` scales horizontally or vertically based on aspect ratio changes.                          |\n| `mask`                         | URL                              |              | The URL of a mask image. Black areas of the mask have a lower energy and are more likely to be preserved.              |\n| `carving-priority`             | Number (0-1, e.g. `0.5`)         | `1`          | The percentage of scaling to be done by seam carving vs. traditional image scaling.                                    |\n| `max-carve-up-seam-percentage` | Number (0-1, e.g. `0.5`)         | `0.6`        | The maximum percentage of seams to insert when scaling up. Limits the creation of new seams to preserve image quality. |\n| `max-carve-up-scale`           | Number (e.g. `3`)                | `3`          | The maximum enlargement factor using seam carving. Beyond this, traditional scaling is used.                           |\n| `max-carve-down-scale`         | Number (0-1, e.g. `0.7`)         | `0.7`        | The maximum percentage of the image to be removed by seam carving when downscaling.                                    |\n",
    "ContentSha": "UAfMw90yBHC0l+aDm1wHefkgwGzcdaJu+pl7eAlJYCk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 주의사항\n\n유동 이미지 컴포넌트는 원본 크기의 약 0.5배에서 1.5배 범위 내에서 수평 또는 수직으로 이미지를 확장할 때 가장 잘 작동합니다. 더 크거나 작은 비율로도 처리할 수 있지만, 시각적 품질이 빠르게 저하될 수 있습니다. 정확한 픽셀 무결성이 중요한 이미지(예: 인물 사진, 그래프, 정밀 기술 도면 등)에는 비추천하며, 이는 심 카빙 과정에서 왜곡이 발생할 수 있기 때문입니다. 다양한 크기에서 이미지를 테스트하여 시각적 기대치를 충족하는지 반드시 확인하시기 바랍니다.\n\n#### CORS\n\n브라우저 보안 제한으로 인해, 웹 페이지와 다른 출처(도메인, 프로토콜, 포트)에서 로드된 이미지는 교차 출처 리소스 공유(CORS) 오류가 발생합니다. 이 컴포넌트는 이미지의 원시 픽셀 데이터에 접근해야 하며, 이는 CORS에 의해 제한됩니다.\n\n다른 출처의 이미지를 사용하려면, 이미지를 호스팅하는 서버가 적절한 CORS 헤더(예: `Access-Control-Allow-Origin: *` 또는 `Access-Control-Allow-Origin: your-domain.com`)를 보내도록 설정되어야 합니다. 이러한 헤더가 없으면, 컴포넌트는 이미지를 처리할 수 없습니다.\n\n(참고: 테스트 목적으로 imgur에 있는 이미지는 필요한 CORS 헤더가 모두 적용되어 있습니다)\n\n#### 폴백\n\n컴포넌트가 이미지를 로드하거나 처리하지 못하거나 내부 오류가 발생하면, `<fluid-img>` 컴포넌트 내에 100% 너비와 높이로 일반 `<img>` 태그를 삽입하는 방식으로 정상적으로 폴백되어 이미지는 계속 표시됩니다.\n\n## 옵션\n\n사용 예시: `<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\n기본적으로 `random` 생성기가 가장 빠르기 때문에 사용됩니다.\n\n| 옵션                             | 값                                | 기본값        | 설명                                                                                                                     |\n| -------------------------------- | --------------------------------- | ------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| `src`                            | URL                               |               | 처리할 이미지의 URL입니다.                                                                                               |\n| `generator`                      | `random`, `predictive`            | `predictive`  | 사용할 심 카빙 생성기입니다. `random`은 더 빠르지만 품질이 낮습니다.                                                     |\n| `scaling-axis`                   | `horizontal`, `vertical`, `auto`  | `horizontal`  | 확장 축입니다. `auto`는 종횡비 변화에 따라 수평 또는 수직으로 확장합니다.                                               |\n| `mask`                           | URL                               |               | 마스크 이미지의 URL입니다. 마스크의 검은 영역은 에너지가 낮아 더 잘 보존됩니다.                                         |\n| `carving-priority`               | 숫자 (0-1, 예: `0.5`)             | `1`           | 심 카빙과 전통적 이미지 스케일링의 비율(%)입니다.                                                                        |\n| `max-carve-up-seam-percentage`   | 숫자 (0-1, 예: `0.5`)             | `0.6`         | 확장 시 삽입 가능한 심의 최대 비율입니다. 새로운 심 생성 제한을 통해 이미지 품질을 보존합니다.                           |\n| `max-carve-up-scale`             | 숫자 (예: `3`)                    | `3`           | 심 카빙으로 확대 가능한 최대 배율입니다. 이 값을 초과하면 전통적 스케일링이 사용됩니다.                                   |\n| `max-carve-down-scale`           | 숫자 (0-1, 예: `0.7`)             | `0.7`         | 축소 시 심 카빙으로 제거할 수 있는 이미지의 최대 비율입니다.                                                             |",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "### Generator specific options\n\nGenerator-specific options are added to the `<fluid-img>` component but are only valid when the corresponding\n`generator` attribute is also set\n\n#### Random & Predictive Generator Options\n\n| Option             | Values                | Default | Description                                       |\n| ------------------ | --------------------- | ------- | ------------------------------------------------- |\n| `batch-percentage` | Number (0-1, e.g 0.1) | 0.1     | The percentage of seams to generate per batch     |\n| `min-batch-size`   | Number (e.g. `10`)    | 10      | The minimum number of seams to generate per batch |\n\n## How it works\n\nSeam carving is a content-aware image resizing technique that intelligently removes or adds pixels, allowing an image to be resized without distorting important content. For more information, see the [Wikipedia article](https://en.wikipedia.org/wiki/Seam_carving) on the topic.\n\nHistorically, seam carving was too computationally intensive for real-time use in web browsers. However, this limitation can be overcome by using alternative algorithms that are less demanding and work well in many scenarios.\n\nThere are two implementations of the seam carving generator:\n",
    "ContentSha": "y0iSxYt1iINYE557v2uXrx5RR9FOwe2ROgKCRpTp110=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Generator specific options\n\nGenerator-specific options는 `<fluid-img>` 컴포넌트에 추가되며, 해당 `generator` 속성이 설정된 경우에만 유효합니다.\n\n#### Random & Predictive Generator Options\n\n| 옵션                | 값                       | 기본값 | 설명                                            |\n| ------------------- | ------------------------ | ------ | ----------------------------------------------- |\n| `batch-percentage`  | 숫자 (0-1, 예: 0.1)      | 0.1    | 배치당 생성할 이음매의 비율                    |\n| `min-batch-size`    | 숫자 (예: `10`)          | 10     | 배치당 생성할 최소 이음매 개수                 |\n\n## 작동 방식\n\nSeam carving은 이미지의 주요 내용을 왜곡하지 않고 크기를 조정할 수 있도록, 픽셀을 지능적으로 제거하거나 추가하는 콘텐츠 인식 이미지 리사이징 기술입니다. 자세한 내용은 해당 주제의 [위키피디아 문서](https://en.wikipedia.org/wiki/Seam_carving)를 참고하세요.\n\n기존에는 seam carving이 웹 브라우저에서 실시간으로 사용하기에는 연산량이 너무 많았습니다. 하지만, 더 적은 리소스를 요구하며 많은 경우에 잘 작동하는 대체 알고리즘을 사용하면 이 한계를 극복할 수 있습니다.\n\nSeam carving generator에는 두 가지 구현이 있습니다:",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "### Random Carving\n\nThe random seam carving approach abandons the traditional seam carving algorithm, which is too slow for real-time browser execution.\n\nInstead, it generates a set of random seams that provide 100% image coverage by connecting each pixel in a row to a neighboring pixel in the next. It then iterates through each seam, calculates its energy, and discards a batch of the lowest-energy seams. This process repeats until the desired number of seams is achieved. This method produces surprisingly good results for many images.\n\n### Predictive Carving\n\nSimilar to random carving, this method generates an energy map and creates seams in batches. It also generates a minimal energy map for each batch. The core idea is to create both \"good\" and \"bad\" seams. Good seams have low energy and are kept. Bad seams incorporate high-energy pixels, allowing them to be filtered out later.\n\nStarting from the first row, it connects pairs of pixels to corresponding pairs in the next row. The lower-energy seam from the running calculation is connected to the lower-energy seam from the minimal energy map.\n\nThe result is one truly optimal seam, many \"very good\" seams, many \"very bad\" seams, and a lot of mediocre ones. We select a batch of the \"good\" seams, discard the rest, and repeat the process.\n\n##\n\n## TODO\n\n### High Priority\n\n- [x] Web component\n- [x] Renderer that takes data from generators and scales to any size\n- [x] Random generator\n- [x] Vertical carving\n- [x] Predictive generator\n- [ ] Web workers for all generators\n",
    "ContentSha": "lFKRH1FeXvwLA3r9qX1uVfwp1a5E1ip3YHs3xlYaSGk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 랜덤 카빙\n\n랜덤 심 카빙 방식은 실시간 브라우저 실행에 너무 느린 기존의 심 카빙 알고리즘을 버립니다.\n\n대신, 각 행의 픽셀을 다음 행의 이웃 픽셀에 연결하여 100% 이미지 커버리지를 제공하는 일련의 랜덤 심을 생성합니다. 그런 다음 각 심을 반복하면서 에너지를 계산하고, 에너지가 가장 낮은 심들을 한 번에 버립니다. 이 과정을 원하는 심 개수가 될 때까지 반복합니다. 이 방법은 많은 이미지에서 놀랄 만큼 좋은 결과를 보여줍니다.\n\n### 예측적 카빙\n\n랜덤 카빙과 유사하게, 이 방법도 에너지 맵을 생성하고 심을 일괄적으로 만듭니다. 또한 각 배치마다 최소 에너지 맵을 생성합니다. 핵심 아이디어는 \"좋은\" 심과 \"나쁜\" 심을 모두 만드는 것입니다. 좋은 심은 에너지가 낮아 유지되고, 나쁜 심은 에너지가 높은 픽셀을 포함하여 이후에 걸러낼 수 있게 합니다.\n\n첫 번째 행부터 시작하여 픽셀 쌍을 다음 행의 해당 쌍에 연결합니다. 실행 중인 계산에서 에너지가 더 낮은 심이 최소 에너지 맵에서 에너지가 더 낮은 심과 연결됩니다.\n\n결과적으로 진정으로 최적의 심 하나, \"매우 좋은\" 심 여러 개, \"매우 나쁜\" 심 여러 개, 그리고 평범한 심이 많이 생성됩니다. 우리는 \"좋은\" 심을 한 배치 선택하고, 나머지는 버린 다음 이 과정을 반복합니다.\n\n##\n\n## TODO\n\n### 높은 우선순위\n\n- [x] 웹 컴포넌트\n- [x] 생성기에서 데이터를 받아 어떤 크기로도 스케일링되는 렌더러\n- [x] 랜덤 생성기\n- [x] 수직 카빙\n- [x] 예측적 생성기\n- [ ] 모든 생성기를 위한 웹 워커",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "### Low Priority\n\n- [x] Masking\n- [ ] Facial recognition\n\n### Pipe Dream\n\n- [ ] 2D carving\n\n## Licensing\n\nThis software is licensed under the Fluid-Img Revenue-Limited License.\n\n**Free use** for individuals and organizations with annual gross revenue under $10,000,000 USD.\n\n**Commercial license required** for organizations with $10M+ annual revenue. Contact [licensing@voice.ngo] for commercial licensing terms.\n\nSee the [LICENSE](./LICENSE) file for complete terms.\n",
    "ContentSha": "2AepqxPs3OvmpHAqAHeb0AFgw9s3Y+zxnwPkt0wavdk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 낮은 우선순위\n\n- [x] 마스킹\n- [ ] 얼굴 인식\n\n### 파이프 드림\n\n- [ ] 2D 조각\n\n## 라이선스\n\n이 소프트웨어는 Fluid-Img 수익 제한 라이선스(Revenue-Limited License)하에 라이선스됩니다.\n\n**무료 사용**: 연간 총수익이 1,000만 달러(USD) 미만인 개인 및 조직은 무료로 사용할 수 있습니다.\n\n**상업용 라이선스 필수**: 연간 총수익이 1,000만 달러(USD) 이상인 조직의 경우 상업용 라이선스가 필요합니다. 상업용 라이선스 조건은 [licensing@voice.ngo]로 문의하십시오.\n\n전체 조건은 [LICENSE](./LICENSE) 파일을 참조하십시오.",
    "Status": "ok"
  }
]