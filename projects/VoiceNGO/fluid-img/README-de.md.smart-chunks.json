[
  {
    "Id": 1,
    "Content": "# Fluid Image Web Component\n\nImages that scale intelligently to any desired size (within reasonable limits).\n\n![Fluid Images](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**Tiny!:** 7kb minified & gzipped\n\n## Usage\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\nThat's it. Scale the images as you wish, and they will just do their thing.\n\n## Demo\n\n[Demo Here](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\nA playground is also available for [experimenting with your own images](https://voicengo.github.io/fluid-img/public).\n",
    "ContentSha": "IyJuWMdGIfNG9N23uBUF+3+IxVoCK1w8zErBfdHhJvU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Fluid Image Webkomponente\n\nBilder, die sich intelligent auf jede gewünschte Größe skalieren lassen (innerhalb vernünftiger Grenzen).\n\n![Flüssige Bilder](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**Winzig!:** 7kb minifiziert & gzip-komprimiert\n\n## Verwendung\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\nDas war's. Skalieren Sie die Bilder nach Belieben, sie passen sich automatisch an.\n\n## Demo\n\n[Demo hier](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\nEin Playground ist ebenfalls verfügbar, um [mit eigenen Bildern zu experimentieren](https://voicengo.github.io/fluid-img/public).",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "## Installation\n\n### Client Library\n\n```sh\nnpm install fluid-img\n```\n\nThen import `fluid-img` in your project, which provides and registers the web-component:\n\n```ts\nimport 'fluid-img';\n```\n\nOr include the script from jsdelivr or unpkg:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- or -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "ContentSha": "exD9Jo7MOY0aCBa8asOKxkUIiFC9pdXuSnt9gsdQ3c0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## Installation\n\n### Client-Bibliothek\n\n```sh\nnpm install fluid-img\n```\n\nImportieren Sie dann `fluid-img` in Ihr Projekt, welches die Web-Komponente bereitstellt und registriert:\n\n```ts\nimport 'fluid-img';\n```\n\nOder binden Sie das Skript von jsdelivr oder unpkg ein:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- oder -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "\n### Caveats\n\nThe fluid image component works best for horizontally or vertically scaling images within a range of approximately 0.5x to 1.5x their original size. While it can handle larger or smaller scales, visual quality may degrade quickly. It is not recommended for images where precise pixel integrity is critical, such as portraits, graphs, or detailed technical drawings, as seam carving introduces distortions. It is highly recommended to test your images at various sizes to ensure they meet your visual expectations.\n\n#### CORS\n\nDue to browser security restrictions, images loaded from a different origin (domain, protocol, or port) than the web page will trigger a Cross-Origin Resource Sharing (CORS) error. This component requires access to the raw pixel data of the image, which is restricted by CORS.\n\nTo use images from a different origin, the server hosting the images must be configured to send appropriate CORS headers (e.g., `Access-Control-Allow-Origin: *` or `Access-Control-Allow-Origin: your-domain.com`). Without these headers, the component will not be able to process the image.\n\n(FYI, for testing purposes, any image on imgur has the necessary CORS headers)\n\n#### Fallback\n\nIf the component fails to load or process the image, or throws an internal error, it will gracefully degrade to injecting a standard `<img>` tag into the `<fluid-img>` component, with 100% width & height, ensuring the image is still displayed.\n\n## Options\n\nUsage: `<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\nBy default, the `random` generator is used as it is the fastest.\n\n| Option                         | Values                           | Default      | Description                                                                                                            |\n| ------------------------------ | -------------------------------- | ------------ | ---------------------------------------------------------------------------------------------------------------------- |\n| `src`                          | URL                              |              | The URL of the image to be processed.                                                                                  |\n| `generator`                    | `random`, `predictive`           | `predictive` | The seam carving generator to use. `random` is faster but lower quality.                                               |\n| `scaling-axis`                 | `horizontal`, `vertical`, `auto` | `horizontal` | The axis for scaling. `auto` scales horizontally or vertically based on aspect ratio changes.                          |\n| `mask`                         | URL                              |              | The URL of a mask image. Black areas of the mask have a lower energy and are more likely to be preserved.              |\n| `carving-priority`             | Number (0-1, e.g. `0.5`)         | `1`          | The percentage of scaling to be done by seam carving vs. traditional image scaling.                                    |\n| `max-carve-up-seam-percentage` | Number (0-1, e.g. `0.5`)         | `0.6`        | The maximum percentage of seams to insert when scaling up. Limits the creation of new seams to preserve image quality. |\n| `max-carve-up-scale`           | Number (e.g. `3`)                | `3`          | The maximum enlargement factor using seam carving. Beyond this, traditional scaling is used.                           |\n| `max-carve-down-scale`         | Number (0-1, e.g. `0.7`)         | `0.7`        | The maximum percentage of the image to be removed by seam carving when downscaling.                                    |\n",
    "ContentSha": "UAfMw90yBHC0l+aDm1wHefkgwGzcdaJu+pl7eAlJYCk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Hinweise\n\nDie Fluid-Image-Komponente eignet sich am besten für das horizontale oder vertikale Skalieren von Bildern innerhalb eines Bereichs von etwa 0,5x bis 1,5x ihrer Originalgröße. Sie kann zwar auch größere oder kleinere Skalierungen bewältigen, jedoch kann die visuelle Qualität schnell abnehmen. Sie wird nicht empfohlen für Bilder, bei denen die exakte Pixeltreue entscheidend ist, wie Porträts, Diagramme oder detaillierte technische Zeichnungen, da das Nahtschnitzen (Seam Carving) Verzerrungen einführt. Es wird dringend empfohlen, Ihre Bilder in verschiedenen Größen zu testen, um sicherzustellen, dass sie Ihren visuellen Erwartungen entsprechen.\n\n#### CORS\n\nAufgrund von Sicherheitseinschränkungen im Browser lösen Bilder, die von einer anderen Quelle (Domain, Protokoll oder Port) als die Webseite geladen werden, einen Cross-Origin Resource Sharing (CORS)-Fehler aus. Diese Komponente benötigt Zugriff auf die Rohpixel-Daten des Bildes, was durch CORS eingeschränkt wird.\n\nUm Bilder von einer anderen Quelle zu verwenden, muss der Server, der die Bilder bereitstellt, so konfiguriert sein, dass er die entsprechenden CORS-Header sendet (z. B. `Access-Control-Allow-Origin: *` oder `Access-Control-Allow-Origin: your-domain.com`). Ohne diese Header kann die Komponente das Bild nicht verarbeiten.\n\n(Zur Information: Zu Testzwecken hat jedes Bild auf imgur die erforderlichen CORS-Header.)\n\n#### Fallback\n\nWenn die Komponente das Bild nicht laden oder verarbeiten kann oder einen internen Fehler wirft, wird sie auf elegante Weise auf das Einfügen eines Standard-`<img>`-Tags in die `<fluid-img>`-Komponente mit 100% Breite und Höhe zurückfallen, sodass das Bild weiterhin angezeigt wird.\n\n## Optionen\n\nVerwendung: `<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\nStandardmäßig wird der Generator `random` verwendet, da er am schnellsten ist.\n\n| Option                         | Werte                            | Standard     | Beschreibung                                                                                                           |\n| ------------------------------ | -------------------------------- | ------------ | ---------------------------------------------------------------------------------------------------------------------- |\n| `src`                          | URL                              |              | Die URL des zu verarbeitenden Bildes.                                                                                 |\n| `generator`                    | `random`, `predictive`           | `predictive` | Der zu verwendende Seam-Carving-Generator. `random` ist schneller, aber von geringerer Qualität.                      |\n| `scaling-axis`                 | `horizontal`, `vertical`, `auto` | `horizontal` | Die Achse für die Skalierung. `auto` skaliert horizontal oder vertikal basierend auf Änderungen im Seitenverhältnis.   |\n| `mask`                         | URL                              |              | Die URL eines Maskenbildes. Schwarze Bereiche der Maske haben eine geringere Energie und werden eher erhalten.         |\n| `carving-priority`             | Zahl (0-1, z. B. `0.5`)          | `1`          | Der Prozentsatz der Skalierung, der durch Seam Carving im Vergleich zur traditionellen Bildskalierung durchgeführt wird.|\n| `max-carve-up-seam-percentage` | Zahl (0-1, z. B. `0.5`)          | `0.6`        | Der maximale Prozentsatz der beim Vergrößern einzufügenden Nähte. Begrenzt das Einfügen neuer Nähte zur Wahrung der Bildqualität.|\n| `max-carve-up-scale`           | Zahl (z. B. `3`)                 | `3`          | Der maximale Vergrößerungsfaktor mittels Seam Carving. Darüber hinaus wird eine traditionelle Skalierung verwendet.    |\n| `max-carve-down-scale`         | Zahl (0-1, z. B. `0.7`)          | `0.7`        | Der maximale Prozentsatz des Bildes, der beim Verkleinern durch Seam Carving entfernt werden darf.                     |\n",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "### Generator specific options\n\nGenerator-specific options are added to the `<fluid-img>` component but are only valid when the corresponding\n`generator` attribute is also set\n\n#### Random & Predictive Generator Options\n\n| Option             | Values                | Default | Description                                       |\n| ------------------ | --------------------- | ------- | ------------------------------------------------- |\n| `batch-percentage` | Number (0-1, e.g 0.1) | 0.1     | The percentage of seams to generate per batch     |\n| `min-batch-size`   | Number (e.g. `10`)    | 10      | The minimum number of seams to generate per batch |\n\n## How it works\n\nSeam carving is a content-aware image resizing technique that intelligently removes or adds pixels, allowing an image to be resized without distorting important content. For more information, see the [Wikipedia article](https://en.wikipedia.org/wiki/Seam_carving) on the topic.\n\nHistorically, seam carving was too computationally intensive for real-time use in web browsers. However, this limitation can be overcome by using alternative algorithms that are less demanding and work well in many scenarios.\n\nThere are two implementations of the seam carving generator:\n",
    "ContentSha": "y0iSxYt1iINYE557v2uXrx5RR9FOwe2ROgKCRpTp110=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Generator-spezifische Optionen\n\nGenerator-spezifische Optionen werden zur `<fluid-img>`-Komponente hinzugefügt, sind jedoch nur gültig, wenn das entsprechende\n`generator`-Attribut ebenfalls gesetzt ist.\n\n#### Optionen für Zufalls- & Prädiktiven Generator\n\n| Option              | Werte                  | Standard | Beschreibung                                            |\n| ------------------- | ---------------------- | -------- | ------------------------------------------------------- |\n| `batch-percentage`  | Zahl (0-1, z. B. 0.1)  | 0.1      | Der Prozentsatz der Nähte, die pro Batch generiert werden |\n| `min-batch-size`    | Zahl (z. B. `10`)      | 10       | Die Mindestanzahl an Nähten, die pro Batch generiert werden |\n\n## Funktionsweise\n\nSeam Carving ist eine inhaltsbasierte Bildgrößenanpassungstechnik, die intelligent Pixel entfernt oder hinzufügt. Dadurch kann ein Bild ohne Verzerrung wichtiger Inhalte in der Größe verändert werden. Weitere Informationen finden Sie im [Wikipedia-Artikel](https://de.wikipedia.org/wiki/Seam_Carving) zu diesem Thema.\n\nHistorisch gesehen war Seam Carving für den Echtzeiteinsatz in Webbrowsern zu rechenintensiv. Dieses Problem kann jedoch durch alternative Algorithmen überwunden werden, die weniger anspruchsvoll sind und in vielen Szenarien gut funktionieren.\n\nEs gibt zwei Implementierungen des Seam-Carving-Generators:",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "### Random Carving\n\nThe random seam carving approach abandons the traditional seam carving algorithm, which is too slow for real-time browser execution.\n\nInstead, it generates a set of random seams that provide 100% image coverage by connecting each pixel in a row to a neighboring pixel in the next. It then iterates through each seam, calculates its energy, and discards a batch of the lowest-energy seams. This process repeats until the desired number of seams is achieved. This method produces surprisingly good results for many images.\n\n### Predictive Carving\n\nSimilar to random carving, this method generates an energy map and creates seams in batches. It also generates a minimal energy map for each batch. The core idea is to create both \"good\" and \"bad\" seams. Good seams have low energy and are kept. Bad seams incorporate high-energy pixels, allowing them to be filtered out later.\n\nStarting from the first row, it connects pairs of pixels to corresponding pairs in the next row. The lower-energy seam from the running calculation is connected to the lower-energy seam from the minimal energy map.\n\nThe result is one truly optimal seam, many \"very good\" seams, many \"very bad\" seams, and a lot of mediocre ones. We select a batch of the \"good\" seams, discard the rest, and repeat the process.\n\n##\n\n## TODO\n\n### High Priority\n\n- [x] Web component\n- [x] Renderer that takes data from generators and scales to any size\n- [x] Random generator\n- [x] Vertical carving\n- [x] Predictive generator\n- [ ] Web workers for all generators\n",
    "ContentSha": "lFKRH1FeXvwLA3r9qX1uVfwp1a5E1ip3YHs3xlYaSGk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Zufälliges Carving\n\nDer Ansatz des zufälligen Seam Carving verzichtet auf den traditionellen Seam Carving Algorithmus, der für eine Ausführung in Echtzeit im Browser zu langsam ist.\n\nStattdessen wird eine Menge zufälliger Nähte erzeugt, die eine 100%ige Abdeckung des Bildes bieten, indem jeder Pixel in einer Zeile mit einem benachbarten Pixel in der nächsten Zeile verbunden wird. Anschließend wird jede Naht durchlaufen, ihre Energie berechnet und eine Charge der energieärmsten Nähte verworfen. Dieser Prozess wird wiederholt, bis die gewünschte Anzahl an Nähten erreicht ist. Diese Methode liefert für viele Bilder überraschend gute Ergebnisse.\n\n### Prädiktives Carving\n\nÄhnlich wie beim zufälligen Carving erzeugt diese Methode eine Energiekarte und erstellt Nähte in Chargen. Für jede Charge wird außerdem eine minimale Energiekarte erstellt. Die Kernidee besteht darin, sowohl „gute“ als auch „schlechte“ Nähte zu erzeugen. Gute Nähte haben eine geringe Energie und werden beibehalten. Schlechte Nähte enthalten Pixel mit hoher Energie, sodass sie später herausgefiltert werden können.\n\nAusgehend von der ersten Zeile werden Pixelpaare mit den entsprechenden Paaren in der nächsten Zeile verbunden. Die energieärmere Naht aus der laufenden Berechnung wird mit der energieärmeren Naht aus der minimalen Energiekarte verbunden.\n\nDas Ergebnis ist eine wirklich optimale Naht, viele „sehr gute“ Nähte, viele „sehr schlechte“ Nähte und zahlreiche mittelmäßige. Wir wählen eine Charge der „guten“ Nähte aus, verwerfen den Rest und wiederholen den Prozess.\n\n##\n\n## TODO\n\n### Hohe Priorität\n\n- [x] Web-Komponente\n- [x] Renderer, der Daten von Generatoren übernimmt und auf jede Größe skaliert\n- [x] Zufallsgenerator\n- [x] Vertikales Carving\n- [x] Prädiktiver Generator\n- [ ] Web Worker für alle Generatoren",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "### Low Priority\n\n- [x] Masking\n- [ ] Facial recognition\n\n### Pipe Dream\n\n- [ ] 2D carving\n\n## Licensing\n\nThis software is licensed under the Fluid-Img Revenue-Limited License.\n\n**Free use** for individuals and organizations with annual gross revenue under $10,000,000 USD.\n\n**Commercial license required** for organizations with $10M+ annual revenue. Contact [licensing@voice.ngo] for commercial licensing terms.\n\nSee the [LICENSE](./LICENSE) file for complete terms.\n",
    "ContentSha": "2AepqxPs3OvmpHAqAHeb0AFgw9s3Y+zxnwPkt0wavdk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Niedrige Priorität\n\n- [x] Maskierung\n- [ ] Gesichtserkennung\n\n### Wunschtraum\n\n- [ ] 2D-Schnitzen\n\n## Lizenzierung\n\nDiese Software ist unter der Fluid-Img Revenue-Limited License lizenziert.\n\n**Kostenlose Nutzung** für Einzelpersonen und Organisationen mit einem jährlichen Bruttoumsatz unter 10.000.000 USD.\n\n**Kommerzielle Lizenz erforderlich** für Organisationen mit einem Jahresumsatz von 10 Mio. USD oder mehr. Kontaktieren Sie [licensing@voice.ngo] für kommerzielle Lizenzbedingungen.\n\nSiehe die [LICENSE](./LICENSE)-Datei für vollständige Bedingungen.",
    "Status": "ok"
  }
]