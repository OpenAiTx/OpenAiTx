[
  {
    "Id": 1,
    "Content": "# Fluid Image Web Component\n\nImages that scale intelligently to any desired size (within reasonable limits).\n\n![Fluid Images](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**Tiny!:** 7kb minified & gzipped\n\n## Usage\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\nThat's it. Scale the images as you wish, and they will just do their thing.\n\n## Demo\n\n[Demo Here](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\nA playground is also available for [experimenting with your own images](https://voicengo.github.io/fluid-img/public).\n",
    "ContentSha": "IyJuWMdGIfNG9N23uBUF+3+IxVoCK1w8zErBfdHhJvU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# 流体图片 Web 组件\n\n图片能够智能地缩放到任何所需尺寸（在合理范围内）。\n\n![流体图片](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**超小！**：7kb（压缩与 gzip 后）\n\n## 用法\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\n就这样。随意缩放图片，它们会自动适应。\n\n## 演示\n\n[演示地址](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\n还提供了一个[实验你自己的图片的游乐场](https://voicengo.github.io/fluid-img/public)。",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "## Installation\n\n### Client Library\n\n```sh\nnpm install fluid-img\n```\n\nThen import `fluid-img` in your project, which provides and registers the web-component:\n\n```ts\nimport 'fluid-img';\n```\n\nOr include the script from jsdelivr or unpkg:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- or -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "ContentSha": "exD9Jo7MOY0aCBa8asOKxkUIiFC9pdXuSnt9gsdQ3c0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## 安装\n\n### 客户端库\n\n```sh\nnpm install fluid-img\n```\n\n然后在你的项目中导入 `fluid-img`，它将提供并注册该 web 组件：\n\n```ts\nimport 'fluid-img';\n```\n\n或者从 jsdelivr 或 unpkg 引入脚本：\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- 或者 -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "\n### Caveats\n\nThe fluid image component works best for horizontally or vertically scaling images within a range of approximately 0.5x to 1.5x their original size. While it can handle larger or smaller scales, visual quality may degrade quickly. It is not recommended for images where precise pixel integrity is critical, such as portraits, graphs, or detailed technical drawings, as seam carving introduces distortions. It is highly recommended to test your images at various sizes to ensure they meet your visual expectations.\n\n#### CORS\n\nDue to browser security restrictions, images loaded from a different origin (domain, protocol, or port) than the web page will trigger a Cross-Origin Resource Sharing (CORS) error. This component requires access to the raw pixel data of the image, which is restricted by CORS.\n\nTo use images from a different origin, the server hosting the images must be configured to send appropriate CORS headers (e.g., `Access-Control-Allow-Origin: *` or `Access-Control-Allow-Origin: your-domain.com`). Without these headers, the component will not be able to process the image.\n\n(FYI, for testing purposes, any image on imgur has the necessary CORS headers)\n\n#### Fallback\n\nIf the component fails to load or process the image, or throws an internal error, it will gracefully degrade to injecting a standard `<img>` tag into the `<fluid-img>` component, with 100% width & height, ensuring the image is still displayed.\n\n## Options\n\nUsage: `<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\nBy default, the `random` generator is used as it is the fastest.\n\n| Option                         | Values                           | Default      | Description                                                                                                            |\n| ------------------------------ | -------------------------------- | ------------ | ---------------------------------------------------------------------------------------------------------------------- |\n| `src`                          | URL                              |              | The URL of the image to be processed.                                                                                  |\n| `generator`                    | `random`, `predictive`           | `predictive` | The seam carving generator to use. `random` is faster but lower quality.                                               |\n| `scaling-axis`                 | `horizontal`, `vertical`, `auto` | `horizontal` | The axis for scaling. `auto` scales horizontally or vertically based on aspect ratio changes.                          |\n| `mask`                         | URL                              |              | The URL of a mask image. Black areas of the mask have a lower energy and are more likely to be preserved.              |\n| `carving-priority`             | Number (0-1, e.g. `0.5`)         | `1`          | The percentage of scaling to be done by seam carving vs. traditional image scaling.                                    |\n| `max-carve-up-seam-percentage` | Number (0-1, e.g. `0.5`)         | `0.6`        | The maximum percentage of seams to insert when scaling up. Limits the creation of new seams to preserve image quality. |\n| `max-carve-up-scale`           | Number (e.g. `3`)                | `3`          | The maximum enlargement factor using seam carving. Beyond this, traditional scaling is used.                           |\n| `max-carve-down-scale`         | Number (0-1, e.g. `0.7`)         | `0.7`        | The maximum percentage of the image to be removed by seam carving when downscaling.                                    |\n",
    "ContentSha": "UAfMw90yBHC0l+aDm1wHefkgwGzcdaJu+pl7eAlJYCk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 注意事项\n\n流体图片组件在图片水平方向或垂直方向缩放至原始尺寸约 0.5 倍至 1.5 倍的范围内效果最佳。虽然它可以处理更大或更小的缩放比例，但视觉质量可能会迅速下降。不建议用于对像素精度要求极高的图片，如肖像、图表或详细的技术绘图，因为缝合裁剪会引入失真。强烈建议在不同尺寸下测试您的图片，以确保它们符合您的视觉预期。\n\n#### CORS\n\n由于浏览器安全限制，从不同源（域名、协议或端口）加载的图片会触发跨源资源共享（CORS）错误。该组件需要访问图片的原始像素数据，而 CORS 会对此进行限制。\n\n要使用来自不同源的图片，托管图片的服务器必须配置相应的 CORS 响应头（例如 `Access-Control-Allow-Origin: *` 或 `Access-Control-Allow-Origin: your-domain.com`）。没有这些响应头，组件将无法处理图片。\n\n（供参考，用于测试的任何 imgur 图片都带有必要的 CORS 响应头）\n\n#### 回退\n\n如果组件无法加载或处理图片，或抛出内部错误，它将优雅地降级为在 `<fluid-img>` 组件内注入一个标准的 `<img>` 标签，宽度和高度均为 100%，确保图片仍然能够显示。\n\n## 选项\n\n用法：`<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\n默认情况下，使用 `random` 生成器，因为它速度最快。\n\n| 选项                           | 可选值                           | 默认值       | 说明                                                                                                 |\n| ------------------------------ | -------------------------------- | ------------ | ---------------------------------------------------------------------------------------------------- |\n| `src`                          | URL                              |              | 要处理的图片的 URL。                                                                                 |\n| `generator`                    | `random`, `predictive`           | `predictive` | 要使用的缝合裁剪生成器。`random` 更快但质量较低。                                                   |\n| `scaling-axis`                 | `horizontal`, `vertical`, `auto` | `horizontal` | 缩放的轴向。`auto` 根据宽高比变化选择水平或垂直缩放。                                               |\n| `mask`                         | URL                              |              | 遮罩图片的 URL。遮罩的黑色区域能量较低，更可能被保留。                                              |\n| `carving-priority`             | 数值 (0-1, 如 `0.5`)             | `1`          | 缝合裁剪与传统图片缩放的缩放比例百分比。                                                            |\n| `max-carve-up-seam-percentage` | 数值 (0-1, 如 `0.5`)             | `0.6`        | 放大时可插入的最大缝合比例。限制新缝合的创建以保持图片质量。                                        |\n| `max-carve-up-scale`           | 数值 (如 `3`)                    | `3`          | 使用缝合裁剪时的最大放大倍数。超过此倍数将使用传统缩放。                                            |\n| `max-carve-down-scale`         | 数值 (0-1, 如 `0.7`)             | `0.7`        | 缩小时可通过缝合裁剪移除的最大图片比例。                                                            |",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "### Generator specific options\n\nGenerator-specific options are added to the `<fluid-img>` component but are only valid when the corresponding\n`generator` attribute is also set\n\n#### Random & Predictive Generator Options\n\n| Option             | Values                | Default | Description                                       |\n| ------------------ | --------------------- | ------- | ------------------------------------------------- |\n| `batch-percentage` | Number (0-1, e.g 0.1) | 0.1     | The percentage of seams to generate per batch     |\n| `min-batch-size`   | Number (e.g. `10`)    | 10      | The minimum number of seams to generate per batch |\n\n## How it works\n\nSeam carving is a content-aware image resizing technique that intelligently removes or adds pixels, allowing an image to be resized without distorting important content. For more information, see the [Wikipedia article](https://en.wikipedia.org/wiki/Seam_carving) on the topic.\n\nHistorically, seam carving was too computationally intensive for real-time use in web browsers. However, this limitation can be overcome by using alternative algorithms that are less demanding and work well in many scenarios.\n\nThere are two implementations of the seam carving generator:\n",
    "ContentSha": "y0iSxYt1iINYE557v2uXrx5RR9FOwe2ROgKCRpTp110=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 特定生成器选项\n\n特定生成器选项会添加到 `<fluid-img>` 组件中，但仅在同时设置了相应的 `generator` 属性时才有效。\n\n#### 随机 & 预测生成器选项\n\n| 选项                | 可选值                    | 默认值  | 描述                                 |\n| ------------------- | ------------------------- | ------- | ------------------------------------ |\n| `batch-percentage`  | 数字 (0-1，如 0.1)        | 0.1     | 每批次要生成的缝隙百分比              |\n| `min-batch-size`    | 数字 (如 `10`)            | 10      | 每批次要生成的最小缝隙数量            |\n\n## 工作原理\n\n缝隙雕刻是一种内容感知的图像缩放技术，它能够智能地移除或添加像素，从而使图像在缩放时不会扭曲重要内容。更多信息请参阅该主题的 [维基百科文章](https://en.wikipedia.org/wiki/Seam_carving)。\n\n历史上，缝隙雕刻对于网页浏览器中的实时应用来说计算量过大。然而，这一限制可以通过使用计算量更低、在许多场景下效果良好的替代算法来克服。\n\n缝隙雕刻生成器有两种实现方式：",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "### Random Carving\n\nThe random seam carving approach abandons the traditional seam carving algorithm, which is too slow for real-time browser execution.\n\nInstead, it generates a set of random seams that provide 100% image coverage by connecting each pixel in a row to a neighboring pixel in the next. It then iterates through each seam, calculates its energy, and discards a batch of the lowest-energy seams. This process repeats until the desired number of seams is achieved. This method produces surprisingly good results for many images.\n\n### Predictive Carving\n\nSimilar to random carving, this method generates an energy map and creates seams in batches. It also generates a minimal energy map for each batch. The core idea is to create both \"good\" and \"bad\" seams. Good seams have low energy and are kept. Bad seams incorporate high-energy pixels, allowing them to be filtered out later.\n\nStarting from the first row, it connects pairs of pixels to corresponding pairs in the next row. The lower-energy seam from the running calculation is connected to the lower-energy seam from the minimal energy map.\n\nThe result is one truly optimal seam, many \"very good\" seams, many \"very bad\" seams, and a lot of mediocre ones. We select a batch of the \"good\" seams, discard the rest, and repeat the process.\n\n##\n\n## TODO\n\n### High Priority\n\n- [x] Web component\n- [x] Renderer that takes data from generators and scales to any size\n- [x] Random generator\n- [x] Vertical carving\n- [x] Predictive generator\n- [ ] Web workers for all generators\n",
    "ContentSha": "lFKRH1FeXvwLA3r9qX1uVfwp1a5E1ip3YHs3xlYaSGk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 随机裁剪\n\n随机缝合裁剪方法舍弃了传统的缝合裁剪算法，因为后者在浏览器中实时执行速度过慢。\n\n相反，它通过将每一行中的每个像素与下一行中的相邻像素相连，生成一组能够实现 100% 图像覆盖的随机缝合线。然后，它遍历每一条缝合线，计算其能量，并批量丢弃能量最低的缝合线。该过程重复进行，直到达到所需的缝合线数量。对于许多图像，这种方法能产生令人惊讶的良好效果。\n\n### 预测裁剪\n\n与随机裁剪类似，该方法生成能量图并批量创建缝合线。它还为每一批次生成一张最小能量图。其核心思想是同时创建“优质”缝合线和“劣质”缝合线。优质缝合线能量较低，予以保留。劣质缝合线包含高能量像素，便于后续筛除。\n\n从第一行开始，将像素对连接到下一行中对应的像素对。在运行计算中能量较低的缝合线与最小能量图中能量较低的缝合线相连。\n\n最终结果是一条真正最优的缝合线、许多“非常优质”的缝合线、许多“非常劣质”的缝合线，以及大量中等质量的缝合线。我们选择一批“优质”缝合线，丢弃其余缝合线，并重复该过程。\n\n##\n\n## 待办事项\n\n### 高优先级\n\n- [x] Web 组件\n- [x] 能从生成器获取数据并可缩放至任意尺寸的渲染器\n- [x] 随机生成器\n- [x] 垂直裁剪\n- [x] 预测生成器\n- [ ] 所有生成器的 Web Workers",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "### Low Priority\n\n- [x] Masking\n- [ ] Facial recognition\n\n### Pipe Dream\n\n- [ ] 2D carving\n\n## Licensing\n\nThis software is licensed under the Fluid-Img Revenue-Limited License.\n\n**Free use** for individuals and organizations with annual gross revenue under $10,000,000 USD.\n\n**Commercial license required** for organizations with $10M+ annual revenue. Contact [licensing@voice.ngo] for commercial licensing terms.\n\nSee the [LICENSE](./LICENSE) file for complete terms.\n",
    "ContentSha": "2AepqxPs3OvmpHAqAHeb0AFgw9s3Y+zxnwPkt0wavdk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 低优先级\n\n- [x] 马赛克\n- [ ] 人脸识别\n\n### 远景规划\n\n- [ ] 2D雕刻\n\n## 许可协议\n\n本软件遵循 Fluid-Img 收入限制许可协议。\n\n**个人及年总收入低于 10,000,000 美元的组织可免费使用。**\n\n**年收入超过 1,000 万美元的组织需购买商业许可。** 请联系 [licensing@voice.ngo] 获取商业许可条款。\n\n完整条款请参见 [LICENSE](./LICENSE) 文件。",
    "Status": "ok"
  }
]