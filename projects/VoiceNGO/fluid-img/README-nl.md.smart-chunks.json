[
  {
    "Id": 1,
    "Content": "# Fluid Image Web Component\n\nImages that scale intelligently to any desired size (within reasonable limits).\n\n![Fluid Images](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**Tiny!:** 7kb minified & gzipped\n\n## Usage\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\nThat's it. Scale the images as you wish, and they will just do their thing.\n\n## Demo\n\n[Demo Here](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\nA playground is also available for [experimenting with your own images](https://voicengo.github.io/fluid-img/public).\n",
    "ContentSha": "IyJuWMdGIfNG9N23uBUF+3+IxVoCK1w8zErBfdHhJvU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Fluid Image Web Component\n\nAfbeeldingen die intelligent schalen naar elke gewenste grootte (binnen redelijke grenzen).\n\n![Fluid Images](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**Klein!:** 7kb geminificeerd & ge-gzipt\n\n## Gebruik\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\nDat is alles. Schaal de afbeeldingen zoals je wilt, en ze doen gewoon hun werk.\n\n## Demo\n\n[Demo Hier](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\nEr is ook een speelomgeving beschikbaar om [te experimenteren met je eigen afbeeldingen](https://voicengo.github.io/fluid-img/public).",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "## Installation\n\n### Client Library\n\n```sh\nnpm install fluid-img\n```\n\nThen import `fluid-img` in your project, which provides and registers the web-component:\n\n```ts\nimport 'fluid-img';\n```\n\nOr include the script from jsdelivr or unpkg:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- or -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "ContentSha": "exD9Jo7MOY0aCBa8asOKxkUIiFC9pdXuSnt9gsdQ3c0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## Installatie\n\n### Clientbibliotheek\n\n```sh\nnpm install fluid-img\n```\n\nImporteer vervolgens `fluid-img` in je project, waarmee de webcomponent wordt geleverd en geregistreerd:\n\n```ts\nimport 'fluid-img';\n```\n\nOf voeg het script toe via jsdelivr of unpkg:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- of -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "\n### Caveats\n\nThe fluid image component works best for horizontally or vertically scaling images within a range of approximately 0.5x to 1.5x their original size. While it can handle larger or smaller scales, visual quality may degrade quickly. It is not recommended for images where precise pixel integrity is critical, such as portraits, graphs, or detailed technical drawings, as seam carving introduces distortions. It is highly recommended to test your images at various sizes to ensure they meet your visual expectations.\n\n#### CORS\n\nDue to browser security restrictions, images loaded from a different origin (domain, protocol, or port) than the web page will trigger a Cross-Origin Resource Sharing (CORS) error. This component requires access to the raw pixel data of the image, which is restricted by CORS.\n\nTo use images from a different origin, the server hosting the images must be configured to send appropriate CORS headers (e.g., `Access-Control-Allow-Origin: *` or `Access-Control-Allow-Origin: your-domain.com`). Without these headers, the component will not be able to process the image.\n\n(FYI, for testing purposes, any image on imgur has the necessary CORS headers)\n\n#### Fallback\n\nIf the component fails to load or process the image, or throws an internal error, it will gracefully degrade to injecting a standard `<img>` tag into the `<fluid-img>` component, with 100% width & height, ensuring the image is still displayed.\n\n## Options\n\nUsage: `<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\nBy default, the `random` generator is used as it is the fastest.\n\n| Option                         | Values                           | Default      | Description                                                                                                            |\n| ------------------------------ | -------------------------------- | ------------ | ---------------------------------------------------------------------------------------------------------------------- |\n| `src`                          | URL                              |              | The URL of the image to be processed.                                                                                  |\n| `generator`                    | `random`, `predictive`           | `predictive` | The seam carving generator to use. `random` is faster but lower quality.                                               |\n| `scaling-axis`                 | `horizontal`, `vertical`, `auto` | `horizontal` | The axis for scaling. `auto` scales horizontally or vertically based on aspect ratio changes.                          |\n| `mask`                         | URL                              |              | The URL of a mask image. Black areas of the mask have a lower energy and are more likely to be preserved.              |\n| `carving-priority`             | Number (0-1, e.g. `0.5`)         | `1`          | The percentage of scaling to be done by seam carving vs. traditional image scaling.                                    |\n| `max-carve-up-seam-percentage` | Number (0-1, e.g. `0.5`)         | `0.6`        | The maximum percentage of seams to insert when scaling up. Limits the creation of new seams to preserve image quality. |\n| `max-carve-up-scale`           | Number (e.g. `3`)                | `3`          | The maximum enlargement factor using seam carving. Beyond this, traditional scaling is used.                           |\n| `max-carve-down-scale`         | Number (0-1, e.g. `0.7`)         | `0.7`        | The maximum percentage of the image to be removed by seam carving when downscaling.                                    |\n",
    "ContentSha": "UAfMw90yBHC0l+aDm1wHefkgwGzcdaJu+pl7eAlJYCk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Kanttekeningen\n\nDe fluid image component werkt het beste voor het horizontaal of verticaal schalen van afbeeldingen binnen een bereik van ongeveer 0,5x tot 1,5x van hun oorspronkelijke grootte. Hoewel het grotere of kleinere schalen aankan, kan de visuele kwaliteit snel achteruitgaan. Het wordt niet aanbevolen voor afbeeldingen waarbij precieze pixelintegriteit cruciaal is, zoals portretten, grafieken of gedetailleerde technische tekeningen, omdat seam carving vervormingen introduceert. Het wordt sterk aanbevolen om uw afbeeldingen op verschillende groottes te testen om te garanderen dat ze aan uw visuele verwachtingen voldoen.\n\n#### CORS\n\nVanwege beveiligingsbeperkingen van de browser zullen afbeeldingen die worden geladen vanaf een andere oorsprong (domein, protocol of poort) dan de webpagina een Cross-Origin Resource Sharing (CORS)-fout veroorzaken. Deze component vereist toegang tot de ruwe pixelgegevens van de afbeelding, wat door CORS wordt beperkt.\n\nOm afbeeldingen van een andere oorsprong te gebruiken, moet de server die de afbeeldingen host, geconfigureerd zijn om de juiste CORS-headers te verzenden (bijv. `Access-Control-Allow-Origin: *` of `Access-Control-Allow-Origin: your-domain.com`). Zonder deze headers kan de component de afbeelding niet verwerken.\n\n(Ter info: voor testdoeleinden heeft elke afbeelding op imgur de benodigde CORS-headers)\n\n#### Fallback\n\nAls het component er niet in slaagt om de afbeelding te laden of te verwerken, of een interne fout geeft, degradeert het op een nette manier door een standaard `<img>`-tag in het `<fluid-img>`-component te injecteren, met 100% breedte en hoogte, zodat de afbeelding toch getoond wordt.\n\n## Opties\n\nGebruik: `<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\nStandaard wordt de `random` generator gebruikt omdat deze het snelst is.\n\n| Optie                         | Waarden                          | Standaard    | Beschrijving                                                                                                         |\n| ----------------------------- | -------------------------------- | ------------ | -------------------------------------------------------------------------------------------------------------------- |\n| `src`                         | URL                              |              | De URL van de te verwerken afbeelding.                                                                               |\n| `generator`                   | `random`, `predictive`           | `predictive` | De te gebruiken seam carving generator. `random` is sneller maar van lagere kwaliteit.                               |\n| `scaling-axis`                | `horizontal`, `vertical`, `auto` | `horizontal` | De as voor schaling. `auto` schaalt horizontaal of verticaal op basis van wijzigingen in de beeldverhouding.         |\n| `mask`                        | URL                              |              | De URL van een maskeraffbeelding. Zwarte gebieden van het masker hebben een lagere energie en worden eerder behouden.|\n| `carving-priority`            | Nummer (0-1, bijv. `0.5`)        | `1`          | Het percentage van de schaling dat door seam carving wordt uitgevoerd versus traditionele afbeeldingsschaling.       |\n| `max-carve-up-seam-percentage`| Nummer (0-1, bijv. `0.5`)        | `0.6`        | Het maximale percentage naden dat mag worden toegevoegd bij het vergroten. Beperkt het creëren van nieuwe naden om de beeldkwaliteit te behouden. |\n| `max-carve-up-scale`          | Nummer (bijv. `3`)               | `3`          | De maximale vergrotingsfactor met seam carving. Daarboven wordt traditionele schaling toegepast.                     |\n| `max-carve-down-scale`        | Nummer (0-1, bijv. `0.7`)        | `0.7`        | Het maximale percentage van de afbeelding dat bij het verkleinen door seam carving mag worden verwijderd.            |",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "### Generator specific options\n\nGenerator-specific options are added to the `<fluid-img>` component but are only valid when the corresponding\n`generator` attribute is also set\n\n#### Random & Predictive Generator Options\n\n| Option             | Values                | Default | Description                                       |\n| ------------------ | --------------------- | ------- | ------------------------------------------------- |\n| `batch-percentage` | Number (0-1, e.g 0.1) | 0.1     | The percentage of seams to generate per batch     |\n| `min-batch-size`   | Number (e.g. `10`)    | 10      | The minimum number of seams to generate per batch |\n\n## How it works\n\nSeam carving is a content-aware image resizing technique that intelligently removes or adds pixels, allowing an image to be resized without distorting important content. For more information, see the [Wikipedia article](https://en.wikipedia.org/wiki/Seam_carving) on the topic.\n\nHistorically, seam carving was too computationally intensive for real-time use in web browsers. However, this limitation can be overcome by using alternative algorithms that are less demanding and work well in many scenarios.\n\nThere are two implementations of the seam carving generator:\n",
    "ContentSha": "y0iSxYt1iINYE557v2uXrx5RR9FOwe2ROgKCRpTp110=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Generator-specifieke opties\n\nGenerator-specifieke opties worden toegevoegd aan de `<fluid-img>` component, maar zijn alleen geldig wanneer het bijbehorende\n`generator` attribuut ook is ingesteld.\n\n#### Opties voor Random & Predictive Generator\n\n| Optie              | Waarden                | Standaard | Beschrijving                                      |\n| ------------------ | ---------------------- | --------- | ------------------------------------------------- |\n| `batch-percentage` | Nummer (0-1, bv. 0.1)  | 0.1       | Het percentage naden dat per batch wordt gegenereerd |\n| `min-batch-size`   | Nummer (bv. `10`)      | 10        | Het minimum aantal naden dat per batch wordt gegenereerd |\n\n## Hoe het werkt\n\nSeam carving is een content-bewuste techniek voor het aanpassen van afbeeldingsgrootte, die intelligent pixels verwijdert of toevoegt. Hierdoor kan een afbeelding worden aangepast zonder belangrijke inhoud te vervormen. Voor meer informatie, zie het [Wikipedia-artikel](https://en.wikipedia.org/wiki/Seam_carving) over dit onderwerp.\n\nHistorisch gezien was seam carving te computationeel intensief voor gebruik in real-time in webbrowsers. Deze beperking kan echter worden overwonnen door gebruik te maken van alternatieve algoritmen die minder veeleisend zijn en in veel scenario's goed werken.\n\nEr zijn twee implementaties van de seam carving generator:",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "### Random Carving\n\nThe random seam carving approach abandons the traditional seam carving algorithm, which is too slow for real-time browser execution.\n\nInstead, it generates a set of random seams that provide 100% image coverage by connecting each pixel in a row to a neighboring pixel in the next. It then iterates through each seam, calculates its energy, and discards a batch of the lowest-energy seams. This process repeats until the desired number of seams is achieved. This method produces surprisingly good results for many images.\n\n### Predictive Carving\n\nSimilar to random carving, this method generates an energy map and creates seams in batches. It also generates a minimal energy map for each batch. The core idea is to create both \"good\" and \"bad\" seams. Good seams have low energy and are kept. Bad seams incorporate high-energy pixels, allowing them to be filtered out later.\n\nStarting from the first row, it connects pairs of pixels to corresponding pairs in the next row. The lower-energy seam from the running calculation is connected to the lower-energy seam from the minimal energy map.\n\nThe result is one truly optimal seam, many \"very good\" seams, many \"very bad\" seams, and a lot of mediocre ones. We select a batch of the \"good\" seams, discard the rest, and repeat the process.\n\n##\n\n## TODO\n\n### High Priority\n\n- [x] Web component\n- [x] Renderer that takes data from generators and scales to any size\n- [x] Random generator\n- [x] Vertical carving\n- [x] Predictive generator\n- [ ] Web workers for all generators\n",
    "ContentSha": "lFKRH1FeXvwLA3r9qX1uVfwp1a5E1ip3YHs3xlYaSGk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Willekeurig Carven\n\nDe willekeurige seam carving-benadering laat het traditionele seam carving-algoritme los, omdat dit te traag is voor realtime uitvoering in de browser.\n\nIn plaats daarvan genereert het een reeks willekeurige naden die zorgen voor 100% beelddekking door elke pixel in een rij te verbinden met een aangrenzende pixel in de volgende rij. Vervolgens wordt er door elke naad gelopen, wordt de energie berekend en wordt een batch van de naden met de laagste energie verwijderd. Dit proces wordt herhaald totdat het gewenste aantal naden is bereikt. Deze methode levert verrassend goede resultaten op voor veel afbeeldingen.\n\n### Predictief Carven\n\nNet als bij willekeurig carven genereert deze methode een energiemap en worden naden in batches gemaakt. Ook wordt er voor elke batch een minimale energiemap gegenereerd. Het kernidee is om zowel \"goede\" als \"slechte\" naden te creëren. Goede naden hebben een lage energie en worden behouden. Slechte naden bevatten pixels met hoge energie, zodat deze later gefilterd kunnen worden.\n\nVanaf de eerste rij worden pixelparen verbonden met corresponderende paren in de volgende rij. De naad met de lagere energie uit de lopende berekening wordt verbonden met de naad met de lagere energie uit de minimale energiemap.\n\nHet resultaat is één echt optimale naad, veel \"zeer goede\" naden, veel \"zeer slechte\" naden en een hoop middelmatige. We selecteren een batch van de \"goede\" naden, verwijderen de rest, en herhalen het proces.\n\n##\n\n## TODO\n\n### Hoge Prioriteit\n\n- [x] Webcomponent\n- [x] Renderer die data van generators neemt en schaalt naar elk formaat\n- [x] Willekeurige generator\n- [x] Verticale carving\n- [x] Predictieve generator\n- [ ] Web workers voor alle generators",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "### Low Priority\n\n- [x] Masking\n- [ ] Facial recognition\n\n### Pipe Dream\n\n- [ ] 2D carving\n\n## Licensing\n\nThis software is licensed under the Fluid-Img Revenue-Limited License.\n\n**Free use** for individuals and organizations with annual gross revenue under $10,000,000 USD.\n\n**Commercial license required** for organizations with $10M+ annual revenue. Contact [licensing@voice.ngo] for commercial licensing terms.\n\nSee the [LICENSE](./LICENSE) file for complete terms.\n",
    "ContentSha": "2AepqxPs3OvmpHAqAHeb0AFgw9s3Y+zxnwPkt0wavdk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Lage prioriteit\n\n- [x] Maskeren\n- [ ] Gezichtsherkenning\n\n### Droom\n\n- [ ] 2D graveren\n\n## Licentie\n\nDeze software is gelicentieerd onder de Fluid-Img Revenue-Limited License.\n\n**Gratis gebruik** voor individuen en organisaties met een jaarlijkse bruto-omzet van minder dan $10.000.000 USD.\n\n**Commerciële licentie vereist** voor organisaties met een jaarlijkse omzet van $10 miljoen of meer. Neem contact op met [licensing@voice.ngo] voor commerciële licentievoorwaarden.\n\nZie het [LICENSE](./LICENSE) bestand voor de volledige voorwaarden.",
    "Status": "ok"
  }
]