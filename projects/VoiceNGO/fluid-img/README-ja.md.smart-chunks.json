[
  {
    "Id": 1,
    "Content": "# Fluid Image Web Component\n\nImages that scale intelligently to any desired size (within reasonable limits).\n\n![Fluid Images](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**Tiny!:** 7kb minified & gzipped\n\n## Usage\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\nThat's it. Scale the images as you wish, and they will just do their thing.\n\n## Demo\n\n[Demo Here](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\nA playground is also available for [experimenting with your own images](https://voicengo.github.io/fluid-img/public).\n",
    "ContentSha": "IyJuWMdGIfNG9N23uBUF+3+IxVoCK1w8zErBfdHhJvU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Fluid Image Web Component\n\n任意のサイズ（合理的な範囲内）にインテリジェントにスケーリングできる画像。\n\n![Fluid Images](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**超軽量！:** 圧縮後で7kb（minified & gzipped）\n\n## 使い方\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\nこれだけです。画像を好きなように拡大・縮小できます。画像が自動的に対応します。\n\n## デモ\n\n[デモはこちら](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\n[ご自身の画像で試せるプレイグラウンド](https://voicengo.github.io/fluid-img/public)も用意されています。",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "## Installation\n\n### Client Library\n\n```sh\nnpm install fluid-img\n```\n\nThen import `fluid-img` in your project, which provides and registers the web-component:\n\n```ts\nimport 'fluid-img';\n```\n\nOr include the script from jsdelivr or unpkg:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- or -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "ContentSha": "exD9Jo7MOY0aCBa8asOKxkUIiFC9pdXuSnt9gsdQ3c0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## インストール\n\n### クライアントライブラリ\n\n```sh\nnpm install fluid-img\n```\n\nその後、プロジェクトに `fluid-img` をインポートします。これにより、Webコンポーネントが提供・登録されます。\n\n```ts\nimport 'fluid-img';\n```\n\nまたは、jsdelivr または unpkg からスクリプトを読み込むこともできます。\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- または -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "\n### Caveats\n\nThe fluid image component works best for horizontally or vertically scaling images within a range of approximately 0.5x to 1.5x their original size. While it can handle larger or smaller scales, visual quality may degrade quickly. It is not recommended for images where precise pixel integrity is critical, such as portraits, graphs, or detailed technical drawings, as seam carving introduces distortions. It is highly recommended to test your images at various sizes to ensure they meet your visual expectations.\n\n#### CORS\n\nDue to browser security restrictions, images loaded from a different origin (domain, protocol, or port) than the web page will trigger a Cross-Origin Resource Sharing (CORS) error. This component requires access to the raw pixel data of the image, which is restricted by CORS.\n\nTo use images from a different origin, the server hosting the images must be configured to send appropriate CORS headers (e.g., `Access-Control-Allow-Origin: *` or `Access-Control-Allow-Origin: your-domain.com`). Without these headers, the component will not be able to process the image.\n\n(FYI, for testing purposes, any image on imgur has the necessary CORS headers)\n\n#### Fallback\n\nIf the component fails to load or process the image, or throws an internal error, it will gracefully degrade to injecting a standard `<img>` tag into the `<fluid-img>` component, with 100% width & height, ensuring the image is still displayed.\n\n## Options\n\nUsage: `<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\nBy default, the `random` generator is used as it is the fastest.\n\n| Option                         | Values                           | Default      | Description                                                                                                            |\n| ------------------------------ | -------------------------------- | ------------ | ---------------------------------------------------------------------------------------------------------------------- |\n| `src`                          | URL                              |              | The URL of the image to be processed.                                                                                  |\n| `generator`                    | `random`, `predictive`           | `predictive` | The seam carving generator to use. `random` is faster but lower quality.                                               |\n| `scaling-axis`                 | `horizontal`, `vertical`, `auto` | `horizontal` | The axis for scaling. `auto` scales horizontally or vertically based on aspect ratio changes.                          |\n| `mask`                         | URL                              |              | The URL of a mask image. Black areas of the mask have a lower energy and are more likely to be preserved.              |\n| `carving-priority`             | Number (0-1, e.g. `0.5`)         | `1`          | The percentage of scaling to be done by seam carving vs. traditional image scaling.                                    |\n| `max-carve-up-seam-percentage` | Number (0-1, e.g. `0.5`)         | `0.6`        | The maximum percentage of seams to insert when scaling up. Limits the creation of new seams to preserve image quality. |\n| `max-carve-up-scale`           | Number (e.g. `3`)                | `3`          | The maximum enlargement factor using seam carving. Beyond this, traditional scaling is used.                           |\n| `max-carve-down-scale`         | Number (0-1, e.g. `0.7`)         | `0.7`        | The maximum percentage of the image to be removed by seam carving when downscaling.                                    |\n",
    "ContentSha": "UAfMw90yBHC0l+aDm1wHefkgwGzcdaJu+pl7eAlJYCk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 注意事項\n\nフルイド画像コンポーネントは、元のサイズの約0.5倍から1.5倍の範囲内で画像を水平または垂直に拡大縮小する場合に最適に動作します。これより大きいまたは小さいスケールにも対応できますが、視覚的な品質が急速に低下する可能性があります。シームカービングは歪みを引き起こすため、ポートレート、グラフ、詳細な技術図面など、ピクセルの正確さが重要な画像には推奨されません。画像が視覚的な期待に合致しているかを確認するため、さまざまなサイズでテストすることを強く推奨します。\n\n#### CORS\n\nブラウザのセキュリティ制限により、ウェブページとは異なるオリジン（ドメイン、プロトコル、またはポート）から読み込まれた画像は、クロスオリジンリソースシェアリング（CORS）エラーを引き起こします。このコンポーネントは画像の生ピクセルデータへのアクセスを必要としますが、CORSによって制限されます。\n\n異なるオリジンから画像を使用する場合、画像をホストしているサーバーが適切なCORSヘッダー（例：`Access-Control-Allow-Origin: *` または `Access-Control-Allow-Origin: your-domain.com`）を送信するように設定されている必要があります。これらのヘッダーがない場合、コンポーネントは画像を処理できません。\n\n（参考までに、テスト目的ではimgur上の画像は必要なCORSヘッダーが付与されています）\n\n#### フォールバック\n\nコンポーネントが画像の読み込みや処理に失敗した場合、または内部エラーが発生した場合でも、`<fluid-img>`コンポーネント内に標準の`<img>`タグを幅100%、高さ100%で挿入することで、画像が確実に表示されるように優雅にデグレードします。\n\n## オプション\n\n使用例: `<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\nデフォルトでは、最速で動作する `random` ジェネレーターが使用されます。\n\n| オプション                        | 値                                  | デフォルト     | 説明                                                                                                        |\n| --------------------------------- | ----------------------------------- | ------------- | ----------------------------------------------------------------------------------------------------------- |\n| `src`                            | URL                                 |               | 処理する画像のURL。                                                                                         |\n| `generator`                      | `random`, `predictive`              | `predictive`  | 使用するシームカービングジェネレーター。`random`は高速だが品質が低い。                                      |\n| `scaling-axis`                   | `horizontal`, `vertical`, `auto`    | `horizontal`  | 拡大縮小する軸。`auto`はアスペクト比の変化に基づき水平または垂直にスケーリング。                             |\n| `mask`                           | URL                                 |               | マスク画像のURL。マスクの黒い部分はエネルギーが低く、より保持されやすい。                                   |\n| `carving-priority`               | 数値 (0-1, 例: `0.5`)               | `1`           | シームカービングと従来の画像スケーリングで行う拡大縮小の割合。                                              |\n| `max-carve-up-seam-percentage`   | 数値 (0-1, 例: `0.5`)               | `0.6`         | 拡大時に挿入できるシームの最大割合。新しいシームの作成を制限し、画像品質を保持。                             |\n| `max-carve-up-scale`             | 数値 (例: `3`)                      | `3`           | シームカービングによる最大拡大係数。これを超える場合は従来のスケーリングを使用。                              |\n| `max-carve-down-scale`           | 数値 (0-1, 例: `0.7`)               | `0.7`         | ダウンスケーリング時にシームカービングで除去できる画像の最大割合。                                           |",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "### Generator specific options\n\nGenerator-specific options are added to the `<fluid-img>` component but are only valid when the corresponding\n`generator` attribute is also set\n\n#### Random & Predictive Generator Options\n\n| Option             | Values                | Default | Description                                       |\n| ------------------ | --------------------- | ------- | ------------------------------------------------- |\n| `batch-percentage` | Number (0-1, e.g 0.1) | 0.1     | The percentage of seams to generate per batch     |\n| `min-batch-size`   | Number (e.g. `10`)    | 10      | The minimum number of seams to generate per batch |\n\n## How it works\n\nSeam carving is a content-aware image resizing technique that intelligently removes or adds pixels, allowing an image to be resized without distorting important content. For more information, see the [Wikipedia article](https://en.wikipedia.org/wiki/Seam_carving) on the topic.\n\nHistorically, seam carving was too computationally intensive for real-time use in web browsers. However, this limitation can be overcome by using alternative algorithms that are less demanding and work well in many scenarios.\n\nThere are two implementations of the seam carving generator:\n",
    "ContentSha": "y0iSxYt1iINYE557v2uXrx5RR9FOwe2ROgKCRpTp110=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### ジェネレーター固有のオプション\n\nジェネレーター固有のオプションは `<fluid-img>` コンポーネントに追加されますが、対応する\n`generator` 属性が設定されている場合のみ有効です。\n\n#### ランダム＆予測ジェネレーターオプション\n\n| オプション            | 値                      | デフォルト | 説明                                                |\n| ------------------ | --------------------- | ------- | ------------------------------------------------- |\n| `batch-percentage` | 数値 (0-1, 例: 0.1)   | 0.1     | バッチごとに生成するシームの割合                       |\n| `min-batch-size`   | 数値 (例: `10`)       | 10      | バッチごとに生成するシームの最小数                      |\n\n## 仕組み\n\nシームカービングは、画像内の重要なコンテンツを歪めることなくリサイズできるように、ピクセルを知的に追加または削除するコンテンツ認識型の画像リサイズ技術です。詳細については、[Wikipediaの記事](https://en.wikipedia.org/wiki/Seam_carving)をご覧ください。\n\n従来、シームカービングはWebブラウザでリアルタイムに使用するには計算コストが高すぎました。しかし、この制限は、より負荷が少なく多くの場面でうまく機能する代替アルゴリズムを使用することで克服できます。\n\nシームカービングジェネレーターには2つの実装があります。",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "### Random Carving\n\nThe random seam carving approach abandons the traditional seam carving algorithm, which is too slow for real-time browser execution.\n\nInstead, it generates a set of random seams that provide 100% image coverage by connecting each pixel in a row to a neighboring pixel in the next. It then iterates through each seam, calculates its energy, and discards a batch of the lowest-energy seams. This process repeats until the desired number of seams is achieved. This method produces surprisingly good results for many images.\n\n### Predictive Carving\n\nSimilar to random carving, this method generates an energy map and creates seams in batches. It also generates a minimal energy map for each batch. The core idea is to create both \"good\" and \"bad\" seams. Good seams have low energy and are kept. Bad seams incorporate high-energy pixels, allowing them to be filtered out later.\n\nStarting from the first row, it connects pairs of pixels to corresponding pairs in the next row. The lower-energy seam from the running calculation is connected to the lower-energy seam from the minimal energy map.\n\nThe result is one truly optimal seam, many \"very good\" seams, many \"very bad\" seams, and a lot of mediocre ones. We select a batch of the \"good\" seams, discard the rest, and repeat the process.\n\n##\n\n## TODO\n\n### High Priority\n\n- [x] Web component\n- [x] Renderer that takes data from generators and scales to any size\n- [x] Random generator\n- [x] Vertical carving\n- [x] Predictive generator\n- [ ] Web workers for all generators\n",
    "ContentSha": "lFKRH1FeXvwLA3r9qX1uVfwp1a5E1ip3YHs3xlYaSGk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### ランダムカービング\n\nランダムシームカービング手法は、リアルタイムのブラウザ実行には遅すぎる従来のシームカービングアルゴリズムを放棄します。\n\n代わりに、各行の各ピクセルを次の行の隣接ピクセルに接続することで、画像全体を100%カバーするランダムなシームのセットを生成します。その後、各シームを順に処理し、エネルギーを計算し、エネルギーが最も低いシームをまとめて破棄します。このプロセスを、目的のシーム数に到達するまで繰り返します。この方法は、多くの画像に対して驚くほど良い結果をもたらします。\n\n### 予測的カービング\n\nランダムカービングと同様に、この手法もエネルギーマップを生成し、シームをバッチで作成します。また、各バッチごとに最小エネルギーマップも生成します。コアとなるアイデアは、「良い」シームと「悪い」シームの両方を作成することです。良いシームはエネルギーが低く、保持されます。悪いシームは高エネルギーのピクセルを組み込むことで、後から除外できるようにします。\n\n最初の行から開始し、ピクセルのペアを次の行の対応するペアに接続します。進行中の計算でエネルギーが低いシームは、最小エネルギーマップの低エネルギーシームに接続されます。\n\nその結果、真に最適なシームが1本、「非常に良い」シームが複数、「非常に悪い」シームが複数、そして多くの平凡なシームが生成されます。「良い」シームのバッチを選択し、それ以外は破棄して、このプロセスを繰り返します。\n\n##\n\n## TODO\n\n### 優先度高\n\n- [x] Webコンポーネント\n- [x] ジェネレーターからデータを受け取り、任意のサイズにスケーリングするレンダラー\n- [x] ランダムジェネレーター\n- [x] 垂直カービング\n- [x] 予測ジェネレーター\n- [ ] すべてのジェネレーター用Webワーカー",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "### Low Priority\n\n- [x] Masking\n- [ ] Facial recognition\n\n### Pipe Dream\n\n- [ ] 2D carving\n\n## Licensing\n\nThis software is licensed under the Fluid-Img Revenue-Limited License.\n\n**Free use** for individuals and organizations with annual gross revenue under $10,000,000 USD.\n\n**Commercial license required** for organizations with $10M+ annual revenue. Contact [licensing@voice.ngo] for commercial licensing terms.\n\nSee the [LICENSE](./LICENSE) file for complete terms.\n",
    "ContentSha": "2AepqxPs3OvmpHAqAHeb0AFgw9s3Y+zxnwPkt0wavdk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 低優先度\n\n- [x] マスキング\n- [ ] 顔認識\n\n### 実現困難\n\n- [ ] 2D彫刻\n\n## ライセンス\n\nこのソフトウェアはFluid-Img収益制限ライセンスの下でライセンスされています。\n\n**無料利用**：年間総収益が1,000万米ドル未満の個人および組織が対象です。\n\n**商用ライセンスが必要**：年間総収益が1,000万米ドル以上の組織が対象です。商用ライセンス条件については[licensing@voice.ngo]までご連絡ください。\n\n完全な条件については[LICENSE](./LICENSE)ファイルをご覧ください。",
    "Status": "ok"
  }
]