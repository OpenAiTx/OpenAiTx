[
  {
    "Id": 1,
    "Content": "# Fluid Image Web Component\n\nImages that scale intelligently to any desired size (within reasonable limits).\n\n![Fluid Images](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**Tiny!:** 7kb minified & gzipped\n\n## Usage\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\nThat's it. Scale the images as you wish, and they will just do their thing.\n\n## Demo\n\n[Demo Here](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\nA playground is also available for [experimenting with your own images](https://voicengo.github.io/fluid-img/public).\n",
    "ContentSha": "IyJuWMdGIfNG9N23uBUF+3+IxVoCK1w8zErBfdHhJvU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# 流動影像網頁元件\n\n能夠智慧調整至任何所需尺寸（在合理範圍內）的圖片。\n\n![流動影像](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**超小！**：7kb 已壓縮與 gzip\n\n## 用法\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\n就這樣。隨意縮放圖片，它們會自動適應。\n\n## 範例\n\n[範例在此](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\n也有一個可供[自行測試圖片的遊樂場](https://voicengo.github.io/fluid-img/public)可用。",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "## Installation\n\n### Client Library\n\n```sh\nnpm install fluid-img\n```\n\nThen import `fluid-img` in your project, which provides and registers the web-component:\n\n```ts\nimport 'fluid-img';\n```\n\nOr include the script from jsdelivr or unpkg:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- or -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "ContentSha": "exD9Jo7MOY0aCBa8asOKxkUIiFC9pdXuSnt9gsdQ3c0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## 安裝\n\n### 用戶端程式庫\n\n```sh\nnpm install fluid-img\n```\n\n然後在您的專案中導入 `fluid-img`，它會提供並註冊網頁元件：\n\n```ts\nimport 'fluid-img';\n```\n\n或者從 jsdelivr 或 unpkg 引入腳本：\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- 或 -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "\n### Caveats\n\nThe fluid image component works best for horizontally or vertically scaling images within a range of approximately 0.5x to 1.5x their original size. While it can handle larger or smaller scales, visual quality may degrade quickly. It is not recommended for images where precise pixel integrity is critical, such as portraits, graphs, or detailed technical drawings, as seam carving introduces distortions. It is highly recommended to test your images at various sizes to ensure they meet your visual expectations.\n\n#### CORS\n\nDue to browser security restrictions, images loaded from a different origin (domain, protocol, or port) than the web page will trigger a Cross-Origin Resource Sharing (CORS) error. This component requires access to the raw pixel data of the image, which is restricted by CORS.\n\nTo use images from a different origin, the server hosting the images must be configured to send appropriate CORS headers (e.g., `Access-Control-Allow-Origin: *` or `Access-Control-Allow-Origin: your-domain.com`). Without these headers, the component will not be able to process the image.\n\n(FYI, for testing purposes, any image on imgur has the necessary CORS headers)\n\n#### Fallback\n\nIf the component fails to load or process the image, or throws an internal error, it will gracefully degrade to injecting a standard `<img>` tag into the `<fluid-img>` component, with 100% width & height, ensuring the image is still displayed.\n\n## Options\n\nUsage: `<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\nBy default, the `random` generator is used as it is the fastest.\n\n| Option                         | Values                           | Default      | Description                                                                                                            |\n| ------------------------------ | -------------------------------- | ------------ | ---------------------------------------------------------------------------------------------------------------------- |\n| `src`                          | URL                              |              | The URL of the image to be processed.                                                                                  |\n| `generator`                    | `random`, `predictive`           | `predictive` | The seam carving generator to use. `random` is faster but lower quality.                                               |\n| `scaling-axis`                 | `horizontal`, `vertical`, `auto` | `horizontal` | The axis for scaling. `auto` scales horizontally or vertically based on aspect ratio changes.                          |\n| `mask`                         | URL                              |              | The URL of a mask image. Black areas of the mask have a lower energy and are more likely to be preserved.              |\n| `carving-priority`             | Number (0-1, e.g. `0.5`)         | `1`          | The percentage of scaling to be done by seam carving vs. traditional image scaling.                                    |\n| `max-carve-up-seam-percentage` | Number (0-1, e.g. `0.5`)         | `0.6`        | The maximum percentage of seams to insert when scaling up. Limits the creation of new seams to preserve image quality. |\n| `max-carve-up-scale`           | Number (e.g. `3`)                | `3`          | The maximum enlargement factor using seam carving. Beyond this, traditional scaling is used.                           |\n| `max-carve-down-scale`         | Number (0-1, e.g. `0.7`)         | `0.7`        | The maximum percentage of the image to be removed by seam carving when downscaling.                                    |\n",
    "ContentSha": "UAfMw90yBHC0l+aDm1wHefkgwGzcdaJu+pl7eAlJYCk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 注意事項\n\n流體影像元件最適用於在原始尺寸約 0.5 倍至 1.5 倍範圍內，對圖片進行水平或垂直縮放。雖然它可以處理更大或更小的縮放比例，但視覺品質可能會迅速下降。不建議用於像素精確度要求極高的圖片，例如人像、圖表或細節豐富的技術繪圖，因為接縫雕刻會造成變形。強烈建議您在不同尺寸下測試您的圖片，以確保其符合您的視覺預期。\n\n#### CORS\n\n由於瀏覽器安全性限制，從與網頁不同來源（網域、協定或埠口）載入的圖片會觸發跨來源資源共享（CORS）錯誤。此元件需要存取圖片的原始像素資料，而這會受到 CORS 的限制。\n\n若要使用來自不同來源的圖片，託管圖片的伺服器必須設定適當的 CORS 標頭（例如：`Access-Control-Allow-Origin: *` 或 `Access-Control-Allow-Origin: your-domain.com`）。沒有這些標頭，元件將無法處理圖片。\n\n（僅供參考，imgur 上的任何圖片都具備必要的 CORS 標頭，可用於測試）\n\n#### 備援機制\n\n若元件無法載入或處理圖片，或發生內部錯誤，將會自動降級為在 `<fluid-img>` 元件中插入一個標準的 `<img>` 標籤，並設為 100% 寬度與高度，確保圖片仍能顯示。\n\n## 選項\n\n用法：`<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\n預設情況下，使用 `random` 產生器，因為它最快。\n\n| 選項                           | 可用值                            | 預設值        | 說明                                                                                                              |\n| ------------------------------ | ---------------------------------- | ------------- | --------------------------------------------------------------------------------------------------------------- |\n| `src`                          | URL                                |               | 要處理的圖片 URL。                                                                                              |\n| `generator`                    | `random`、`predictive`             | `predictive`  | 要使用的接縫雕刻產生器。`random` 較快但品質較低。                                                                |\n| `scaling-axis`                 | `horizontal`、`vertical`、`auto`   | `horizontal`  | 縮放方向。`auto` 會根據長寬比的變化選擇水平或垂直縮放。                                                          |\n| `mask`                         | URL                                |               | 遮罩圖片的 URL。遮罩圖的黑色區域能量較低，更容易被保留。                                                          |\n| `carving-priority`             | 數字（0-1，例如 `0.5`）            | `1`           | 用接縫雕刻與傳統圖片縮放進行縮放的比例百分比。                                                                   |\n| `max-carve-up-seam-percentage` | 數字（0-1，例如 `0.5`）            | `0.6`         | 放大時最大可插入接縫的百分比。限制新增接縫數量以保護圖片品質。                                                    |\n| `max-carve-up-scale`           | 數字（例如 `3`）                   | `3`           | 使用接縫雕刻最大放大倍數。超過此數值後將改用傳統縮放。                                                           |\n| `max-carve-down-scale`         | 數字（0-1，例如 `0.7`）            | `0.7`         | 縮小時可用接縫雕刻移除的最大百分比。                                                                             |",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "### Generator specific options\n\nGenerator-specific options are added to the `<fluid-img>` component but are only valid when the corresponding\n`generator` attribute is also set\n\n#### Random & Predictive Generator Options\n\n| Option             | Values                | Default | Description                                       |\n| ------------------ | --------------------- | ------- | ------------------------------------------------- |\n| `batch-percentage` | Number (0-1, e.g 0.1) | 0.1     | The percentage of seams to generate per batch     |\n| `min-batch-size`   | Number (e.g. `10`)    | 10      | The minimum number of seams to generate per batch |\n\n## How it works\n\nSeam carving is a content-aware image resizing technique that intelligently removes or adds pixels, allowing an image to be resized without distorting important content. For more information, see the [Wikipedia article](https://en.wikipedia.org/wiki/Seam_carving) on the topic.\n\nHistorically, seam carving was too computationally intensive for real-time use in web browsers. However, this limitation can be overcome by using alternative algorithms that are less demanding and work well in many scenarios.\n\nThere are two implementations of the seam carving generator:\n",
    "ContentSha": "y0iSxYt1iINYE557v2uXrx5RR9FOwe2ROgKCRpTp110=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 產生器專屬選項\n\n產生器專屬選項會加到 `<fluid-img>` 元件上，但只有在同時設定對應的 `generator` 屬性時才有效。\n\n#### 隨機與預測產生器選項\n\n| 選項                | 值                        | 預設值 | 說明                                         |\n| ------------------- | ------------------------- | ------ | --------------------------------------------- |\n| `batch-percentage`  | 數值 (0-1，例如 0.1)      | 0.1    | 每批次要產生的縫線百分比                      |\n| `min-batch-size`    | 數值 (例如 `10`)          | 10     | 每批次要產生的最小縫線數量                    |\n\n## 運作原理\n\n縫線雕刻是一種內容感知的圖片調整技術，能夠智能地移除或新增像素，使圖片在調整大小時不會扭曲重要內容。欲了解更多資訊，請參見[維基百科文章](https://zh.wikipedia.org/wiki/%E7%BA%A4%E7%BA%BF%E9%9B%95%E5%88%BB)。\n\n過去，縫線雕刻對計算資源的需求過高，不適合於網頁瀏覽器中即時使用。不過，這項限制可以藉由使用運算負擔較小、且在多數情境下效果良好的替代演算法來克服。\n\n縫線雕刻產生器有兩種實作方式：",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "### Random Carving\n\nThe random seam carving approach abandons the traditional seam carving algorithm, which is too slow for real-time browser execution.\n\nInstead, it generates a set of random seams that provide 100% image coverage by connecting each pixel in a row to a neighboring pixel in the next. It then iterates through each seam, calculates its energy, and discards a batch of the lowest-energy seams. This process repeats until the desired number of seams is achieved. This method produces surprisingly good results for many images.\n\n### Predictive Carving\n\nSimilar to random carving, this method generates an energy map and creates seams in batches. It also generates a minimal energy map for each batch. The core idea is to create both \"good\" and \"bad\" seams. Good seams have low energy and are kept. Bad seams incorporate high-energy pixels, allowing them to be filtered out later.\n\nStarting from the first row, it connects pairs of pixels to corresponding pairs in the next row. The lower-energy seam from the running calculation is connected to the lower-energy seam from the minimal energy map.\n\nThe result is one truly optimal seam, many \"very good\" seams, many \"very bad\" seams, and a lot of mediocre ones. We select a batch of the \"good\" seams, discard the rest, and repeat the process.\n\n##\n\n## TODO\n\n### High Priority\n\n- [x] Web component\n- [x] Renderer that takes data from generators and scales to any size\n- [x] Random generator\n- [x] Vertical carving\n- [x] Predictive generator\n- [ ] Web workers for all generators\n",
    "ContentSha": "lFKRH1FeXvwLA3r9qX1uVfwp1a5E1ip3YHs3xlYaSGk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 隨機雕刻\n\n隨機縫線雕刻方法捨棄了傳統的縫線雕刻演算法，因為傳統方法在瀏覽器即時執行時過於緩慢。\n\n相反地，它會產生一組隨機縫線，這些縫線透過將每一列的每個像素連接到下一列的鄰近像素，從而提供 100% 的圖像覆蓋率。接著它會遍歷每一條縫線，計算其能量，並丟棄一批能量最低的縫線。這個過程會重複進行，直到達到所需的縫線數量。這種方法對於許多圖像來說，能產生出乎意料的良好結果。\n\n### 預測式雕刻\n\n與隨機雕刻類似，此方法會產生能量圖並批次生成縫線。它同時也會為每一批次產生最小能量圖。核心理念是同時建立「好」縫線與「壞」縫線。好縫線具有較低的能量，會被保留。壞縫線則包含高能量像素，方便之後被過濾掉。\n\n從第一列開始，它將像素對連接到下一列中對應的像素對。進行運算時，會將低能量縫線與最小能量圖中的低能量縫線連接起來。\n\n結果會得到一條真正最佳的縫線、許多「非常好」的縫線、許多「非常壞」的縫線，以及很多普通的縫線。我們會選擇一批「好」縫線，丟棄其餘的，並重複此過程。\n\n##\n\n## TODO\n\n### 高優先順序\n\n- [x] Web 元件\n- [x] 可從產生器取得資料並可縮放至任意尺寸的渲染器\n- [x] 隨機產生器\n- [x] 垂直雕刻\n- [x] 預測式產生器\n- [ ] 所有產生器皆支援 Web workers",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "### Low Priority\n\n- [x] Masking\n- [ ] Facial recognition\n\n### Pipe Dream\n\n- [ ] 2D carving\n\n## Licensing\n\nThis software is licensed under the Fluid-Img Revenue-Limited License.\n\n**Free use** for individuals and organizations with annual gross revenue under $10,000,000 USD.\n\n**Commercial license required** for organizations with $10M+ annual revenue. Contact [licensing@voice.ngo] for commercial licensing terms.\n\nSee the [LICENSE](./LICENSE) file for complete terms.\n",
    "ContentSha": "2AepqxPs3OvmpHAqAHeb0AFgw9s3Y+zxnwPkt0wavdk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 低優先順序\n\n- [x] 遮罩\n- [ ] 臉部辨識\n\n### 遙不可及的夢想\n\n- [ ] 2D 雕刻\n\n## 授權條款\n\n本軟體依據 Fluid-Img 限制收益授權條款授權。\n\n**免費使用**：僅限年總營收低於 10,000,000 美元的個人與組織。\n\n**需商業授權**：年營收達 1,000 萬美元以上的組織需另行申請商業授權。請聯絡 [licensing@voice.ngo] 以洽詢商業授權條款。\n\n完整條款請參閱 [LICENSE](./LICENSE) 檔案。",
    "Status": "ok"
  }
]