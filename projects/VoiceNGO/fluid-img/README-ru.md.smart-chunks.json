[
  {
    "Id": 1,
    "Content": "# Fluid Image Web Component\n\nImages that scale intelligently to any desired size (within reasonable limits).\n\n![Fluid Images](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**Tiny!:** 7kb minified & gzipped\n\n## Usage\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\nThat's it. Scale the images as you wish, and they will just do their thing.\n\n## Demo\n\n[Demo Here](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\nA playground is also available for [experimenting with your own images](https://voicengo.github.io/fluid-img/public).\n",
    "ContentSha": "IyJuWMdGIfNG9N23uBUF+3+IxVoCK1w8zErBfdHhJvU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Fluid Image Web Component\n\nИзображения, которые масштабируются интеллектуально до любого желаемого размера (в разумных пределах).\n\n![Fluid Images](https://raw.githubusercontent.com/VoiceNGO/fluid-img/refs/heads/main/resources/images/responsive-images.jpg)\n\n**Очень маленький!** 7 КБ в минифицированном и сжатом виде (gzipped)\n\n## Использование\n\n```html\n<script src=\"fluid-img.js\"></script>\n<fluid-img src=\"image.jpg\"></fluid-img>\n```\n\nВот и всё. Масштабируйте изображения как хотите, и они будут работать как надо.\n\n## Демонстрация\n\n[Демонстрация здесь](https://voicengo.github.io/fluid-img/public/fluid-demo.html)\n\nТакже доступна песочница для [экспериментов с вашими собственными изображениями](https://voicengo.github.io/fluid-img/public).",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "## Installation\n\n### Client Library\n\n```sh\nnpm install fluid-img\n```\n\nThen import `fluid-img` in your project, which provides and registers the web-component:\n\n```ts\nimport 'fluid-img';\n```\n\nOr include the script from jsdelivr or unpkg:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- or -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "ContentSha": "exD9Jo7MOY0aCBa8asOKxkUIiFC9pdXuSnt9gsdQ3c0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## Установка\n\n### Клиентская библиотека\n\n```sh\nnpm install fluid-img\n```\n\nЗатем импортируйте `fluid-img` в ваш проект, который предоставляет и регистрирует веб-компонент:\n\n```ts\nimport 'fluid-img';\n```\n\nИли подключите скрипт с jsdelivr или unpkg:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/fluid-img@latest/dist/fluid-img.js\" />\n\n<!-- или -->\n\n<script src=\"https://unpkg.com/fluid-img@latest/dist/fluid-img.js\" />\n```",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "\n### Caveats\n\nThe fluid image component works best for horizontally or vertically scaling images within a range of approximately 0.5x to 1.5x their original size. While it can handle larger or smaller scales, visual quality may degrade quickly. It is not recommended for images where precise pixel integrity is critical, such as portraits, graphs, or detailed technical drawings, as seam carving introduces distortions. It is highly recommended to test your images at various sizes to ensure they meet your visual expectations.\n\n#### CORS\n\nDue to browser security restrictions, images loaded from a different origin (domain, protocol, or port) than the web page will trigger a Cross-Origin Resource Sharing (CORS) error. This component requires access to the raw pixel data of the image, which is restricted by CORS.\n\nTo use images from a different origin, the server hosting the images must be configured to send appropriate CORS headers (e.g., `Access-Control-Allow-Origin: *` or `Access-Control-Allow-Origin: your-domain.com`). Without these headers, the component will not be able to process the image.\n\n(FYI, for testing purposes, any image on imgur has the necessary CORS headers)\n\n#### Fallback\n\nIf the component fails to load or process the image, or throws an internal error, it will gracefully degrade to injecting a standard `<img>` tag into the `<fluid-img>` component, with 100% width & height, ensuring the image is still displayed.\n\n## Options\n\nUsage: `<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\nBy default, the `random` generator is used as it is the fastest.\n\n| Option                         | Values                           | Default      | Description                                                                                                            |\n| ------------------------------ | -------------------------------- | ------------ | ---------------------------------------------------------------------------------------------------------------------- |\n| `src`                          | URL                              |              | The URL of the image to be processed.                                                                                  |\n| `generator`                    | `random`, `predictive`           | `predictive` | The seam carving generator to use. `random` is faster but lower quality.                                               |\n| `scaling-axis`                 | `horizontal`, `vertical`, `auto` | `horizontal` | The axis for scaling. `auto` scales horizontally or vertically based on aspect ratio changes.                          |\n| `mask`                         | URL                              |              | The URL of a mask image. Black areas of the mask have a lower energy and are more likely to be preserved.              |\n| `carving-priority`             | Number (0-1, e.g. `0.5`)         | `1`          | The percentage of scaling to be done by seam carving vs. traditional image scaling.                                    |\n| `max-carve-up-seam-percentage` | Number (0-1, e.g. `0.5`)         | `0.6`        | The maximum percentage of seams to insert when scaling up. Limits the creation of new seams to preserve image quality. |\n| `max-carve-up-scale`           | Number (e.g. `3`)                | `3`          | The maximum enlargement factor using seam carving. Beyond this, traditional scaling is used.                           |\n| `max-carve-down-scale`         | Number (0-1, e.g. `0.7`)         | `0.7`        | The maximum percentage of the image to be removed by seam carving when downscaling.                                    |\n",
    "ContentSha": "UAfMw90yBHC0l+aDm1wHefkgwGzcdaJu+pl7eAlJYCk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Предупреждения\n\nКомпонент fluid image лучше всего работает для горизонтального или вертикального масштабирования изображений в диапазоне примерно от 0.5x до 1.5x от их исходного размера. Хотя он способен обрабатывать более крупные или меньшие масштабы, визуальное качество может быстро ухудшаться. Не рекомендуется использовать для изображений, где критически важна точная целостность пикселей, таких как портреты, графики или детализированные технические чертежи, поскольку seam carving вносит искажения. Настоятельно рекомендуется тестировать ваши изображения в различных размерах, чтобы убедиться, что они соответствуют вашим визуальным ожиданиям.\n\n#### CORS\n\nИз-за ограничений безопасности браузера, изображения, загруженные с другого источника (домена, протокола или порта), чем веб-страница, вызовут ошибку Cross-Origin Resource Sharing (CORS). Для работы этого компонента требуется доступ к исходным пиксельным данным изображения, который ограничивается CORS.\n\nДля использования изображений с другого источника сервер, размещающий изображения, должен быть настроен на отправку соответствующих CORS-заголовков (например, `Access-Control-Allow-Origin: *` или `Access-Control-Allow-Origin: your-domain.com`). Без этих заголовков компонент не сможет обработать изображение.\n\n(Для справки: для тестирования любые изображения на imgur уже имеют необходимые CORS-заголовки)\n\n#### Резервное отображение\n\nЕсли компонент не сможет загрузить или обработать изображение, или произойдет внутренняя ошибка, произойдет плавный откат к вставке стандартного тега `<img>` в компонент `<fluid-img>`, с шириной и высотой 100%, что гарантирует отображение изображения.\n\n## Опции\n\nИспользование: `<fluid-img src=\"image.jpg\" generator=\"random\" max-carve-up-scale=\"5\"></fluid-img>`\n\nПо умолчанию используется генератор `random`, так как он самый быстрый.\n\n| Опция                          | Значения                         | По умолчанию | Описание                                                                                                               |\n| ------------------------------ | -------------------------------- | ------------ | ---------------------------------------------------------------------------------------------------------------------- |\n| `src`                          | URL                              |              | URL изображения для обработки.                                                                                        |\n| `generator`                    | `random`, `predictive`           | `predictive` | Генератор seam carving. `random` быстрее, но качество ниже.                                                            |\n| `scaling-axis`                 | `horizontal`, `vertical`, `auto` | `horizontal` | Ось масштабирования. `auto` выбирает горизонтальное или вертикальное масштабирование в зависимости от изменения соотношения сторон. |\n| `mask`                         | URL                              |              | URL маски. Черные области маски имеют меньшую энергию и с большей вероятностью будут сохранены.                        |\n| `carving-priority`             | Число (0-1, например, `0.5`)     | `1`          | Процент масштабирования, выполняемого методом seam carving, по сравнению с традиционным масштабированием.              |\n| `max-carve-up-seam-percentage` | Число (0-1, например, `0.5`)     | `0.6`        | Максимальный процент вставляемых seam при увеличении. Ограничивает создание новых seam для сохранения качества.         |\n| `max-carve-up-scale`           | Число (например, `3`)            | `3`          | Максимальный коэффициент увеличения с использованием seam carving. После этого применяется традиционное масштабирование. |\n| `max-carve-down-scale`         | Число (0-1, например, `0.7`)     | `0.7`        | Максимальный процент изображения, который может быть удален методом seam carving при уменьшении.                        |",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "### Generator specific options\n\nGenerator-specific options are added to the `<fluid-img>` component but are only valid when the corresponding\n`generator` attribute is also set\n\n#### Random & Predictive Generator Options\n\n| Option             | Values                | Default | Description                                       |\n| ------------------ | --------------------- | ------- | ------------------------------------------------- |\n| `batch-percentage` | Number (0-1, e.g 0.1) | 0.1     | The percentage of seams to generate per batch     |\n| `min-batch-size`   | Number (e.g. `10`)    | 10      | The minimum number of seams to generate per batch |\n\n## How it works\n\nSeam carving is a content-aware image resizing technique that intelligently removes or adds pixels, allowing an image to be resized without distorting important content. For more information, see the [Wikipedia article](https://en.wikipedia.org/wiki/Seam_carving) on the topic.\n\nHistorically, seam carving was too computationally intensive for real-time use in web browsers. However, this limitation can be overcome by using alternative algorithms that are less demanding and work well in many scenarios.\n\nThere are two implementations of the seam carving generator:\n",
    "ContentSha": "y0iSxYt1iINYE557v2uXrx5RR9FOwe2ROgKCRpTp110=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Специфические опции генератора\n\nСпецифические опции генератора добавляются к компоненту `<fluid-img>`, но действительны только тогда, когда также установлен соответствующий атрибут `generator`.\n\n#### Опции случайного и предсказательного генераторов\n\n| Опция              | Значения              | По умолчанию | Описание                                           |\n| ------------------ | --------------------- | ------------ | -------------------------------------------------- |\n| `batch-percentage` | Число (0-1, напр. 0.1)| 0.1          | Процент швов для генерации за одну партию          |\n| `min-batch-size`   | Число (напр. `10`)    | 10           | Минимальное количество швов для генерации за партию |\n\n## Как это работает\n\nSeam carving — это технология изменения размера изображений с учетом содержимого, которая интеллектуально удаляет или добавляет пиксели, позволяя изменять размер изображения без искажения важного контента. Для получения дополнительной информации смотрите [статью в Википедии](https://en.wikipedia.org/wiki/Seam_carving) по этой теме.\n\nИсторически seam carving был слишком ресурсоёмким для использования в реальном времени в веб-браузерах. Однако эту проблему можно решить с помощью альтернативных алгоритмов, которые менее требовательны и хорошо работают во многих сценариях.\n\nСуществует две реализации генератора seam carving:",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "### Random Carving\n\nThe random seam carving approach abandons the traditional seam carving algorithm, which is too slow for real-time browser execution.\n\nInstead, it generates a set of random seams that provide 100% image coverage by connecting each pixel in a row to a neighboring pixel in the next. It then iterates through each seam, calculates its energy, and discards a batch of the lowest-energy seams. This process repeats until the desired number of seams is achieved. This method produces surprisingly good results for many images.\n\n### Predictive Carving\n\nSimilar to random carving, this method generates an energy map and creates seams in batches. It also generates a minimal energy map for each batch. The core idea is to create both \"good\" and \"bad\" seams. Good seams have low energy and are kept. Bad seams incorporate high-energy pixels, allowing them to be filtered out later.\n\nStarting from the first row, it connects pairs of pixels to corresponding pairs in the next row. The lower-energy seam from the running calculation is connected to the lower-energy seam from the minimal energy map.\n\nThe result is one truly optimal seam, many \"very good\" seams, many \"very bad\" seams, and a lot of mediocre ones. We select a batch of the \"good\" seams, discard the rest, and repeat the process.\n\n##\n\n## TODO\n\n### High Priority\n\n- [x] Web component\n- [x] Renderer that takes data from generators and scales to any size\n- [x] Random generator\n- [x] Vertical carving\n- [x] Predictive generator\n- [ ] Web workers for all generators\n",
    "ContentSha": "lFKRH1FeXvwLA3r9qX1uVfwp1a5E1ip3YHs3xlYaSGk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Случайное вырезание\n\nМетод случайного вырезания швов отказывается от традиционного алгоритма вырезания швов, который слишком медленный для выполнения в реальном времени в браузере.\n\nВместо этого он генерирует набор случайных швов, которые обеспечивают 100% покрытие изображения, соединяя каждый пиксель в строке с соседним пикселем в следующей. Затем он проходит по каждому шву, вычисляет его энергию и отбрасывает группу швов с наименьшей энергией. Этот процесс повторяется до тех пор, пока не будет достигнуто нужное количество швов. Этот метод дает удивительно хорошие результаты для многих изображений.\n\n### Предиктивное вырезание\n\nАналогично случайному вырезанию, этот метод создает карту энергии и формирует швы пакетами. Также для каждого пакета генерируется карта минимальной энергии. Основная идея заключается в создании как «хороших», так и «плохих» швов. Хорошие швы имеют низкую энергию и сохраняются. Плохие швы включают пиксели с высокой энергией, что позволяет их отфильтровать позже.\n\nНачиная с первой строки, он соединяет пары пикселей с соответствующими парами в следующей строке. Шов с меньшей энергией из текущего расчета соединяется с швом с меньшей энергией из карты минимальной энергии.\n\nРезультатом является один действительно оптимальный шов, много «очень хороших» швов, много «очень плохих» швов и большое количество посредственных. Мы выбираем партию «хороших» швов, отбрасываем остальные и повторяем процесс.\n\n##\n\n## TODO\n\n### Высокий приоритет\n\n- [x] Веб-компонент\n- [x] Рендерер, который принимает данные от генераторов и масштабируется до любого размера\n- [x] Случайный генератор\n- [x] Вертикальное вырезание\n- [x] Предиктивный генератор\n- [ ] Веб-воркеры для всех генераторов",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "### Low Priority\n\n- [x] Masking\n- [ ] Facial recognition\n\n### Pipe Dream\n\n- [ ] 2D carving\n\n## Licensing\n\nThis software is licensed under the Fluid-Img Revenue-Limited License.\n\n**Free use** for individuals and organizations with annual gross revenue under $10,000,000 USD.\n\n**Commercial license required** for organizations with $10M+ annual revenue. Contact [licensing@voice.ngo] for commercial licensing terms.\n\nSee the [LICENSE](./LICENSE) file for complete terms.\n",
    "ContentSha": "2AepqxPs3OvmpHAqAHeb0AFgw9s3Y+zxnwPkt0wavdk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Низкий приоритет\n\n- [x] Маскирование\n- [ ] Распознавание лиц\n\n### Мечта\n\n- [ ] 2D-гравировка\n\n## Лицензирование\n\nЭто программное обеспечение лицензировано по лицензии Fluid-Img Revenue-Limited License.\n\n**Бесплатное использование** для частных лиц и организаций с годовым валовым доходом менее $10,000,000 USD.\n\n**Требуется коммерческая лицензия** для организаций с годовыми доходами $10M+.\nСвяжитесь с [licensing@voice.ngo] для получения условий коммерческого лицензирования.\n\nСм. файл [LICENSE](./LICENSE) для полного текста условий.",
    "Status": "ok"
  }
]