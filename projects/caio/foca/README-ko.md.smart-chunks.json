[
  {
    "Id": 1,
    "Content": "# Foca: Cluster membership discovery on your terms\n\nFoca is a building block for your gossip-based cluster discovery. It's\na small `no_std` + `alloc` crate that implements the SWIM protocol along\nwith its useful extensions (`SWIM+Inf.+Susp.`).\n\nProject:\n\n* Git Repository: https://caio.co/de/foca/\n* Issue tracker: https://github.com/caio/foca/issues\n* CI: https://github.com/caio/foca/actions/workflows/ci.yml\n* Packages: https://crates.io/crates/foca\n* Documentation: https://docs.rs/foca\n\n\n# Introduction\n\nThe most notable thing about Foca is the fact that it does almost\nnothing. Out of the box, all it gives is a reliable and efficient\nimplementation of the [SWIM protocol][1] that's transport and\nidentity agnostic.\n\nKnowledge of how SWIM works is helpful but not necessary to make use\nof this library. Reading the documentation for the `Message` enum\nshould give you an idea of how the protocol works, but the paper is\na very accessible read.\n\nFoca is designed to fit into any sort of transport: If your network\nallows peers to talk to each other you can deploy Foca on it.\nNot only the general bandwidth requirements are low, but you also\nhave full control of how members identify each other (see\n`./examples/identity_golf.rs`) and how messages are encoded.\n\n\n# Usage\n\nPlease take a look at `./examples/foca_insecure_udp_agent.rs`. It\nshowcases how a simple tokio-based agent could look like and lets\nyou actually run and see Foca swimming.\n",
    "ContentSha": "xoBzQol77Elkse8xPTXclKm0117ZYo/tNsC/8QLvO90=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Foca: 원하는 방식의 클러스터 멤버십 발견\n\nFoca는 당신의 가십 기반 클러스터 발견을 위한 빌딩 블록입니다.  \n이는 SWIM 프로토콜과 유용한 확장(`SWIM+Inf.+Susp.`)을 구현한  \n작고 `no_std` + `alloc` 크레이트입니다.\n\n프로젝트:\n\n* Git 저장소: https://caio.co/de/foca/  \n* 이슈 트래커: https://github.com/caio/foca/issues  \n* CI: https://github.com/caio/foca/actions/workflows/ci.yml  \n* 패키지: https://crates.io/crates/foca  \n* 문서: https://docs.rs/foca  \n\n\n# 소개\n\nFoca의 가장 주목할 만한 점은 거의 아무 것도 하지 않는다는 사실입니다.  \n기본적으로 제공하는 것은 신뢰할 수 있고 효율적인  \n[SWIM 프로토콜][1] 구현뿐이며, 이는 전송 방식과  \n식별 방식에 구애받지 않습니다.\n\nSWIM이 어떻게 작동하는지 아는 것은 도움이 되지만 이 라이브러리를  \n사용하는 데 반드시 필요하지는 않습니다. `Message` 열거형에 대한 문서를  \n읽으면 프로토콜이 어떻게 작동하는지 대략 알 수 있지만, 논문은  \n매우 접근하기 쉬운 읽을거리입니다.\n\nFoca는 모든 종류의 전송에 맞게 설계되었습니다: 네트워크가  \n피어들이 서로 통신할 수 있다면 Foca를 배포할 수 있습니다.  \n일반적인 대역폭 요구사항이 낮을 뿐만 아니라, 멤버들이  \n서로를 식별하는 방법(`./examples/identity_golf.rs` 참조)과  \n메시지 인코딩 방식을 완전히 제어할 수 있습니다.\n\n\n# 사용법\n\n`./examples/foca_insecure_udp_agent.rs`를 살펴보세요.  \n이는 간단한 tokio 기반 에이전트가 어떻게 생겼는지 보여주고  \n실제로 Foca가 작동하는 모습을 실행하여 확인할 수 있습니다.\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "XNE8OtE4sG33bCwRuUwTSFY7JbnVqGSqNy4OsCfD3o4=",
        "originContent": "# Foca: Cluster membership discovery on your terms",
        "translatedContent": "# Foca: 원하는 방식의 클러스터 멤버십 발견"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "3m1N2n6qErIUoORnML5tbZumqvfZtfo7wX4UwePmeP4=",
        "originContent": "Foca is a building block for your gossip-based cluster discovery. It's",
        "translatedContent": "Foca는 당신의 가십 기반 클러스터 발견을 위한 빌딩 블록입니다.  "
      },
      {
        "row": 4,
        "rowsha": "rJA4ytZ/C2JRmMXcHJkbH49Yyy5Z9tGM1+rVEfW/Gvs=",
        "originContent": "a small `no_std` + `alloc` crate that implements the SWIM protocol along",
        "translatedContent": "이는 SWIM 프로토콜과 유용한 확장(`SWIM+Inf.+Susp.`)을 구현한  "
      },
      {
        "row": 5,
        "rowsha": "8p2OTN3ywhgE/eHvA6z84FvFHC/js2KmG7VnlgAk+hU=",
        "originContent": "with its useful extensions (`SWIM+Inf.+Susp.`).",
        "translatedContent": "작고 `no_std` + `alloc` 크레이트입니다."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "WRfzIxH9TKMWoaeSK/xCrfi6zufzbz0TU1VEiLQFPGc=",
        "originContent": "Project:",
        "translatedContent": "프로젝트:"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "tekdkAZfUjLL2AYbmflu3h68TZmJOWqr1hmZVhv9IcU=",
        "originContent": "* Git Repository: https://caio.co/de/foca/",
        "translatedContent": "* Git 저장소: https://caio.co/de/foca/  "
      },
      {
        "row": 10,
        "rowsha": "9mYCXjbmkd3RXtep5vLWKoCYmaaJNUfVDKB78mSQgeM=",
        "originContent": "* Issue tracker: https://github.com/caio/foca/issues",
        "translatedContent": "* 이슈 트래커: https://github.com/caio/foca/issues  "
      },
      {
        "row": 11,
        "rowsha": "SMVQjtJ2RYbqDzjGoD6JFtOopR/9/Wmdk+mpWeVnVh0=",
        "originContent": "* CI: https://github.com/caio/foca/actions/workflows/ci.yml",
        "translatedContent": "* CI: https://github.com/caio/foca/actions/workflows/ci.yml  "
      },
      {
        "row": 12,
        "rowsha": "J1pJzov864nTriMhQvO3arSALy0Sv6ZH7Z8OGscK0+g=",
        "originContent": "* Packages: https://crates.io/crates/foca",
        "translatedContent": "* 패키지: https://crates.io/crates/foca  "
      },
      {
        "row": 13,
        "rowsha": "ne1nCyb20QxVz8GrycJatkvQDgwf9wgOVg9z2dFc7RE=",
        "originContent": "* Documentation: https://docs.rs/foca",
        "translatedContent": "* 문서: https://docs.rs/foca  "
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "HPq7n79kJyIQ9GDdoug4SfyHFTzXjyqYNQf8jDMuGf0=",
        "originContent": "# Introduction",
        "translatedContent": "# 소개"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "EyjCQ4wwMf9GTyHwvSEZKeCJJ+YLknEKdN3rvJISOGg=",
        "originContent": "The most notable thing about Foca is the fact that it does almost",
        "translatedContent": "Foca의 가장 주목할 만한 점은 거의 아무 것도 하지 않는다는 사실입니다.  "
      },
      {
        "row": 19,
        "rowsha": "uoCNFIebJCH7UdBV5eIG2MuY6Pnhy3g9i9pOYURt5VM=",
        "originContent": "nothing. Out of the box, all it gives is a reliable and efficient",
        "translatedContent": "기본적으로 제공하는 것은 신뢰할 수 있고 효율적인  "
      },
      {
        "row": 20,
        "rowsha": "IJB+ofWtQHEpAaY6nNavTZVUWLqxhdwD9wHPk8uurMA=",
        "originContent": "implementation of the [SWIM protocol][1] that's transport and",
        "translatedContent": "[SWIM 프로토콜][1] 구현뿐이며, 이는 전송 방식과  "
      },
      {
        "row": 21,
        "rowsha": "UQboJYVOg0cfzlKrWsQMhoPf0NhX97ay4FEjea7rxe8=",
        "originContent": "identity agnostic.",
        "translatedContent": "식별 방식에 구애받지 않습니다."
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "vcd1fFlppyPhCeEKllHCmLbvf7kUfeNvwMqt7hK/YD0=",
        "originContent": "Knowledge of how SWIM works is helpful but not necessary to make use",
        "translatedContent": "SWIM이 어떻게 작동하는지 아는 것은 도움이 되지만 이 라이브러리를  "
      },
      {
        "row": 24,
        "rowsha": "AAUXI7T+PisGnjNJIBEizCwn5wcy9cMSdFxqtFbdVr4=",
        "originContent": "of this library. Reading the documentation for the `Message` enum",
        "translatedContent": "사용하는 데 반드시 필요하지는 않습니다. `Message` 열거형에 대한 문서를  "
      },
      {
        "row": 25,
        "rowsha": "ms71iaTlFm0SYIcq3QsThfT26K1FqP4m56ZaeWcr5YQ=",
        "originContent": "should give you an idea of how the protocol works, but the paper is",
        "translatedContent": "읽으면 프로토콜이 어떻게 작동하는지 대략 알 수 있지만, 논문은  "
      },
      {
        "row": 26,
        "rowsha": "d1TxOgrbJKyEmH4Xmrg+5gKQoslOsD9vfOBsnso1qAU=",
        "originContent": "a very accessible read.",
        "translatedContent": "매우 접근하기 쉬운 읽을거리입니다."
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "xZNvsNx+GhmAYVYeBTW0i86RAqelj6qdNxQFxjfn6NM=",
        "originContent": "Foca is designed to fit into any sort of transport: If your network",
        "translatedContent": "Foca는 모든 종류의 전송에 맞게 설계되었습니다: 네트워크가  "
      },
      {
        "row": 29,
        "rowsha": "VHKU7SD629bLSGMmuR2lLOk9QzyestjvqGnOWZApWww=",
        "originContent": "allows peers to talk to each other you can deploy Foca on it.",
        "translatedContent": "피어들이 서로 통신할 수 있다면 Foca를 배포할 수 있습니다.  "
      },
      {
        "row": 30,
        "rowsha": "+ykeZ7124PMN9my18Sts/4lReNz8nHB6NYM1NfuwNnQ=",
        "originContent": "Not only the general bandwidth requirements are low, but you also",
        "translatedContent": "일반적인 대역폭 요구사항이 낮을 뿐만 아니라, 멤버들이  "
      },
      {
        "row": 31,
        "rowsha": "vltWH3NKw3rYVAoZjS2icwPxj+IpDoLBb4qRankWCA8=",
        "originContent": "have full control of how members identify each other (see",
        "translatedContent": "서로를 식별하는 방법(`./examples/identity_golf.rs` 참조)과  "
      },
      {
        "row": 32,
        "rowsha": "FLZIMTENG1dPhm3tXd1EeYmx9sBM98qSbp2BCazd54M=",
        "originContent": "`./examples/identity_golf.rs`) and how messages are encoded.",
        "translatedContent": "메시지 인코딩 방식을 완전히 제어할 수 있습니다."
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "VQl64phXBjjplyWiGKNjjWZLPM0chOlnOxoC73zDU/k=",
        "originContent": "# Usage",
        "translatedContent": "# 사용법"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "aKpuzJxVMsAIDeLtSucfElr+vbnjZwvd1FvTa4JyovQ=",
        "originContent": "Please take a look at `./examples/foca_insecure_udp_agent.rs`. It",
        "translatedContent": "`./examples/foca_insecure_udp_agent.rs`를 살펴보세요.  "
      },
      {
        "row": 38,
        "rowsha": "XntCY5lxQCfZYGunhDcXRi7YE0OxVmtI4+EKOJpC7Jw=",
        "originContent": "showcases how a simple tokio-based agent could look like and lets",
        "translatedContent": "이는 간단한 tokio 기반 에이전트가 어떻게 생겼는지 보여주고  "
      },
      {
        "row": 39,
        "rowsha": "MCKjDhRsUlgqlx3pcprkpA+PctRTyodZEoVTBr1q0L8=",
        "originContent": "you actually run and see Foca swimming.",
        "translatedContent": "실제로 Foca가 작동하는 모습을 실행하여 확인할 수 있습니다."
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "~~~\n$ cargo run --features std,tracing,bincode-codec --example foca_insecure_udp_agent -- --help\nfoca_insecure_udp_agent \n\nUSAGE:\n    foca_insecure_udp_agent [OPTIONS] <BIND_ADDR>\n\nFLAGS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nOPTIONS:\n    -a, --announce <announce>    Address to another Foca instance to join with\n    -f, --filename <filename>    Name of the file that will contain all active members\n    -i, --identity <identity>    The address cluster members will use to talk to you.\n                                 Defaults to BIND_ADDR\n\nARGS:\n    <BIND_ADDR>    Socket address to bind to. Example: 127.0.0.1:8080\n~~~\n\nSo you can start the agent in one terminal with\n`./foca_insecure_udp_agent 127.0.0.1:8000` and join it with as many others\nas you want with using a different `BIND_ADDR` and `--announce` to a\nrunning instance. Example:\n`./foca_insecure_udp_agent 127.0.0.1:8001 -a 127.0.0.1:8000`.\n\nThe agent outputs some information to the console via [tracing][]'s\nsubscriber. It defaults to the `INFO` log level and can be customized\nvia the `RUST_LOG` environment variable using [tracing_subscriber's\nEnvFilter directives][dir].\n\n\n## Cargo Features\n\nEvery feature is optional. The `default` set will always be empty.\n\n* `std`: Implements `foca::Identity` for `std::net::SocketAddr*` and\n  exposes `Config::new_lan` and `Config::new_wan`\n* `tracing`: Instruments Foca using the [tracing][] crate. High-level",
    "ContentSha": "zeE0gvWN5issJ/O4HpoRH9t/4jo/RoOhcq/lr9XaQHM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "~~~\n$ cargo run --features std,tracing,bincode-codec --example foca_insecure_udp_agent -- --help\nfoca_insecure_udp_agent \n\nUSAGE:\n    foca_insecure_udp_agent [OPTIONS] <BIND_ADDR>\n\nFLAGS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nOPTIONS:\n    -a, --announce <announce>    Address to another Foca instance to join with\n    -f, --filename <filename>    Name of the file that will contain all active members\n    -i, --identity <identity>    The address cluster members will use to talk to you.\n                                 Defaults to BIND_ADDR\n\nARGS:\n    <BIND_ADDR>    Socket address to bind to. Example: 127.0.0.1:8080\n~~~\n\n따라서 한 터미널에서 에이전트를 시작하려면\n`./foca_insecure_udp_agent 127.0.0.1:8000`를 실행하고, 다른 여러 인스턴스들과\n연결하려면 다른 `BIND_ADDR`과 실행 중인 인스턴스를 가리키는 `--announce`를 사용하면 됩니다.\n예시:\n`./foca_insecure_udp_agent 127.0.0.1:8001 -a 127.0.0.1:8000`.\n\n에이전트는 [tracing][]의 서브스크라이버를 통해 콘솔에 일부 정보를 출력합니다.\n기본 로그 레벨은 `INFO`이며, `RUST_LOG` 환경 변수를 통해\n[tracing_subscriber의 EnvFilter 지시문][dir]으로 커스터마이즈할 수 있습니다.\n\n\n## Cargo Features\n\n모든 기능은 선택 사항입니다. `default` 세트는 항상 비어 있습니다.\n\n* `std`: `std::net::SocketAddr*`에 대해 `foca::Identity`를 구현하며,\n  `Config::new_lan` 및 `Config::new_wan`을 노출합니다.\n* `tracing`: [tracing][] 크레이트를 사용하여 Foca에 계측을 추가합니다. 고수준\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "oD8v1jE3AzSVLF20h86BDmr3R95yDtegVUOkwSBNOZg=",
        "originContent": "~~~",
        "translatedContent": "~~~"
      },
      {
        "row": 2,
        "rowsha": "JVBrsfkl31v1HeTHHbtp6c8Wi9y2wH6wR/6bBzZHJrM=",
        "originContent": "$ cargo run --features std,tracing,bincode-codec --example foca_insecure_udp_agent -- --help",
        "translatedContent": "$ cargo run --features std,tracing,bincode-codec --example foca_insecure_udp_agent -- --help"
      },
      {
        "row": 3,
        "rowsha": "Bi8eEXyq3E8xCYbUZNrgpCpexrc9yMF+As0wnppS9hg=",
        "originContent": "foca_insecure_udp_agent ",
        "translatedContent": "foca_insecure_udp_agent "
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "FX2rt7e3sZQpnamO13ps+P824YRrLBfv0Ayi1CP3Dy8=",
        "originContent": "USAGE:",
        "translatedContent": "USAGE:"
      },
      {
        "row": 6,
        "rowsha": "r4rle0Uky4JvUReVylEmUsldULbCnOtRpkHYoTUYqws=",
        "originContent": "    foca_insecure_udp_agent [OPTIONS] <BIND_ADDR>",
        "translatedContent": "    foca_insecure_udp_agent [OPTIONS] <BIND_ADDR>"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "mVv3soZIYaUjHQ6EDmG86TQyBs8PU0CsvNVVzzxyjdc=",
        "originContent": "FLAGS:",
        "translatedContent": "FLAGS:"
      },
      {
        "row": 9,
        "rowsha": "dceqhBzskPT1oJTCtWf5qkyTepzwH2DQ8KA1MJklJik=",
        "originContent": "    -h, --help       Prints help information",
        "translatedContent": "    -h, --help       Prints help information"
      },
      {
        "row": 10,
        "rowsha": "r0N34OXHSlHLDumEYLDl7oGC5pRbpxDEDWdowD6sTvQ=",
        "originContent": "    -V, --version    Prints version information",
        "translatedContent": "    -V, --version    Prints version information"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "ZToZw7VpqEoNLo+3aftdLvI3s7QaAF2tIZD0MKv3qNg=",
        "originContent": "OPTIONS:",
        "translatedContent": "OPTIONS:"
      },
      {
        "row": 13,
        "rowsha": "r0Yp2Z5d9LvQXw7P/WksSyAC/pkkInFx35LHRcZGQJ8=",
        "originContent": "    -a, --announce <announce>    Address to another Foca instance to join with",
        "translatedContent": "    -a, --announce <announce>    Address to another Foca instance to join with"
      },
      {
        "row": 14,
        "rowsha": "W5a4DG5YnBuLQK4urBvBSZGsTYhPWfenLGtnRw0827A=",
        "originContent": "    -f, --filename <filename>    Name of the file that will contain all active members",
        "translatedContent": "    -f, --filename <filename>    Name of the file that will contain all active members"
      },
      {
        "row": 15,
        "rowsha": "EHUNy9IcA1CgPR6sBSfZRMDtp+pDLUWpgDy6rBpmAuM=",
        "originContent": "    -i, --identity <identity>    The address cluster members will use to talk to you.",
        "translatedContent": "    -i, --identity <identity>    The address cluster members will use to talk to you."
      },
      {
        "row": 16,
        "rowsha": "JrJvY7QzFBg66ws48F/rD1PIyEIVDnt05ViOFghDf/0=",
        "originContent": "                                 Defaults to BIND_ADDR",
        "translatedContent": "                                 Defaults to BIND_ADDR"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "AgaMjux0EhChPR+12DCKyZgdquEk7e1tAPG6BxaNIp8=",
        "originContent": "ARGS:",
        "translatedContent": "ARGS:"
      },
      {
        "row": 19,
        "rowsha": "jeDVDwLiCqVYJlxaqP80rJdxTDqro39ZXyi2lyH+bdw=",
        "originContent": "    <BIND_ADDR>    Socket address to bind to. Example: 127.0.0.1:8080",
        "translatedContent": "    <BIND_ADDR>    Socket address to bind to. Example: 127.0.0.1:8080"
      },
      {
        "row": 20,
        "rowsha": "oD8v1jE3AzSVLF20h86BDmr3R95yDtegVUOkwSBNOZg=",
        "originContent": "~~~",
        "translatedContent": "~~~"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "/1ZqLdWKV+gBh5BYI5WZnci6qLuAlOEmhtwRps61DRI=",
        "originContent": "So you can start the agent in one terminal with",
        "translatedContent": "따라서 한 터미널에서 에이전트를 시작하려면"
      },
      {
        "row": 23,
        "rowsha": "dFHrRjTu9myXXY+cNa2KtQGSc4TTxAJuNDxeRGFIR2I=",
        "originContent": "`./foca_insecure_udp_agent 127.0.0.1:8000` and join it with as many others",
        "translatedContent": "`./foca_insecure_udp_agent 127.0.0.1:8000`를 실행하고, 다른 여러 인스턴스들과"
      },
      {
        "row": 24,
        "rowsha": "nuNgdvLjLRS8rDkTpLyjcGvyexuR4PWJIipPZEiVq1M=",
        "originContent": "as you want with using a different `BIND_ADDR` and `--announce` to a",
        "translatedContent": "연결하려면 다른 `BIND_ADDR`과 실행 중인 인스턴스를 가리키는 `--announce`를 사용하면 됩니다."
      },
      {
        "row": 25,
        "rowsha": "aXeYQFKeyrjmdiOhF5LGeP5e3ggGhR5ClFA5JSbdh9E=",
        "originContent": "running instance. Example:",
        "translatedContent": "예시:"
      },
      {
        "row": 26,
        "rowsha": "rLl9RqVMacntuHUiArwnA1FzjtjbJ6blb870SlgcvDw=",
        "originContent": "`./foca_insecure_udp_agent 127.0.0.1:8001 -a 127.0.0.1:8000`.",
        "translatedContent": "`./foca_insecure_udp_agent 127.0.0.1:8001 -a 127.0.0.1:8000`."
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "tNqWJqYXpHyfvG63dlWQAdBlV5HpN7ds5ox7+vL5utg=",
        "originContent": "The agent outputs some information to the console via [tracing][]'s",
        "translatedContent": "에이전트는 [tracing][]의 서브스크라이버를 통해 콘솔에 일부 정보를 출력합니다."
      },
      {
        "row": 29,
        "rowsha": "uoekutztVSLxitzh2g2IlgxEIYN/EsSCWZuQzpcjd4M=",
        "originContent": "subscriber. It defaults to the `INFO` log level and can be customized",
        "translatedContent": "기본 로그 레벨은 `INFO`이며, `RUST_LOG` 환경 변수를 통해"
      },
      {
        "row": 30,
        "rowsha": "UQLH6PtcjYpfx41cHKXdrHCx7Tu2qmDQzsmiEf8UDSg=",
        "originContent": "via the `RUST_LOG` environment variable using [tracing_subscriber's",
        "translatedContent": "[tracing_subscriber의 EnvFilter 지시문][dir]으로 커스터마이즈할 수 있습니다."
      },
      {
        "row": 31,
        "rowsha": "ydJOTglSuQgadcoDItJacntNQSJ9A13ErE8G9FRsWVU=",
        "originContent": "EnvFilter directives][dir].",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## Cargo Features"
      },
      {
        "row": 34,
        "rowsha": "4lqD2XLm8Di63FCwmjJIRQo+BW+b4MWRU7fkV+p9j8Y=",
        "originContent": "## Cargo Features",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "모든 기능은 선택 사항입니다. `default` 세트는 항상 비어 있습니다."
      },
      {
        "row": 36,
        "rowsha": "cqs0fzCJBdaAeo8mfkpZTFEF3eVIRauue/rLDikTfv8=",
        "originContent": "Every feature is optional. The `default` set will always be empty.",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* `std`: `std::net::SocketAddr*`에 대해 `foca::Identity`를 구현하며,"
      },
      {
        "row": 38,
        "rowsha": "trkXNJz12FKCvnxKpnq7cUNRHiMN+ImnR+My8PiPGIY=",
        "originContent": "* `std`: Implements `foca::Identity` for `std::net::SocketAddr*` and",
        "translatedContent": "  `Config::new_lan` 및 `Config::new_wan`을 노출합니다."
      },
      {
        "row": 39,
        "rowsha": "Eq+keWMKEz88xEh5UBiGBqSx6I0MLjjn93LOITZ9rj8=",
        "originContent": "  exposes `Config::new_lan` and `Config::new_wan`",
        "translatedContent": "* `tracing`: [tracing][] 크레이트를 사용하여 Foca에 계측을 추가합니다. 고수준"
      },
      {
        "row": 40,
        "rowsha": "ilkMi/VXVjrfc6OyjX6VefcsLXQAhD13SaMPzd51tRU=",
        "originContent": "* `tracing`: Instruments Foca using the [tracing][] crate. High-level",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 3,
    "Content": "  protocol interactions are emited as `DEBUG` traces, more details can\n  be exposed with the `TRACE` level. No other levels are emitted.\n* `serde`: Derives `Serialize` and `Deserialize` for Foca's public\n  types.\n* `bincode-codec`: Provides `BincodeCodec`, a serde-based codec type\n  that uses [bincode][] under the hood.\n* `postcard-codec`: Provides `PostcardCodec` a serde-based, `no_std`\n  friendly codec that uses [postcard][] under the hood.\n* `unstable-notifications`: Provides new notifications that allow\n  inspecting messages being sent and received\n\n\n# Notes\n\nWhen writing this library, the main goal was having a simple and small\ncore that's easy to test, simulate and reason about; It was mostly\nabout getting a better understanding of the protocol after reading\nthe paper.\n\nSticking to these goals naturally led to an implementation that doesn't\nrely on many operating system features like a hardware clock, atomics\nand threads, so becoming a `no_std` crate (albeit still requiring heap\nallocations) was kind of a nice accidental feature that I decided to\ncommit to.\n\n\n## Comparison to memberlist\n\nI avoided looking at [memberlist][2] until I was satisfied with my\nown implementation. Since then I did take a non-thorough look at it:\n\n* memberlist supports custom broadcasts, which is a very cool feature\n  for complex service discovery scenarios, so now Foca has support\n  for disseminating user data too (see `BroadcastHandler`\n  documentation) :-)\n\n* It has a stream-based synchronization mechanism (push-pull) that's\n  used for joining and periodic merging state between members: It's\n  way beyond Foca's responsibilities, but it's a very interesting idea,\n  so I've exposed the `Foca::apply_many` method which enables code",
    "ContentSha": "peSWUyqWuqZIydIycerC/HLhPmeT05nZu2tZWoRoCy0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "  프로토콜 상호작용은 `DEBUG` 추적으로 출력되며, 더 자세한 내용은 `TRACE` 레벨에서 노출될 수 있습니다. 다른 레벨은 출력되지 않습니다.\n* `serde`: Foca의 공개 타입에 대해 `Serialize` 및 `Deserialize`를 파생합니다.\n* `bincode-codec`: [bincode][]를 내부적으로 사용하는 serde 기반 코덱 타입 `BincodeCodec`을 제공합니다.\n* `postcard-codec`: [postcard][]를 내부적으로 사용하는 serde 기반의 `no_std` 친화적 코덱 `PostcardCodec`을 제공합니다.\n* `unstable-notifications`: 전송 및 수신되는 메시지를 검사할 수 있는 새로운 알림을 제공합니다.\n\n\n# 노트\n\n이 라이브러리를 작성할 때 주요 목표는 테스트, 시뮬레이션 및 이해하기 쉬운 간단하고 작은 코어를 갖는 것이었습니다; 주로 논문을 읽은 후 프로토콜을 더 잘 이해하는 데 초점이 맞춰져 있었습니다.\n\n이 목표를 고수하다 보니 하드웨어 시계, 원자성, 스레드 같은 많은 운영 체제 기능에 의존하지 않는 구현이 자연스럽게 되었고, 그래서 힙 할당이 필요하긴 하지만 `no_std` 크레이트가 된 것은 우연한 좋은 부가 기능으로 받아들여 Commit 하기로 했습니다.\n\n\n## memberlist와의 비교\n\n내 구현에 만족할 때까지 [memberlist][2]를 보지 않으려 했습니다. 그 이후에 비철저하게 살펴보았습니다:\n\n* memberlist는 복잡한 서비스 탐색 시나리오에 매우 유용한 사용자 정의 방송을 지원하므로, 이제 Foca도 사용자 데이터 전파를 지원합니다(`BroadcastHandler` 문서 참조) :-)\n\n* 멤버 간 가입과 주기적 상태 병합에 사용되는 스트림 기반 동기화 메커니즘(push-pull)을 갖고 있습니다: 이는 Foca의 책임 범위를 훨씬 벗어나지만 매우 흥미로운 아이디어여서, 이를 활용할 수 있도록 `Foca::apply_many` 메서드를 노출했습니다.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "507sSnsTijLIbcDW+kMLQYiIRL1XPB7gwXRHHRYzZk4=",
        "originContent": "  protocol interactions are emited as `DEBUG` traces, more details can",
        "translatedContent": "  프로토콜 상호작용은 `DEBUG` 추적으로 출력되며, 더 자세한 내용은 `TRACE` 레벨에서 노출될 수 있습니다. 다른 레벨은 출력되지 않습니다."
      },
      {
        "row": 2,
        "rowsha": "3X6Qizi2RGPT91S+Tem85g6nVBxaKMkag6O8eLfnIrs=",
        "originContent": "  be exposed with the `TRACE` level. No other levels are emitted.",
        "translatedContent": "* `serde`: Foca의 공개 타입에 대해 `Serialize` 및 `Deserialize`를 파생합니다."
      },
      {
        "row": 3,
        "rowsha": "YLb7NlDOtp5ddSHlUZ932GklooCNH6sMLajbI3toaDU=",
        "originContent": "* `serde`: Derives `Serialize` and `Deserialize` for Foca's public",
        "translatedContent": "* `bincode-codec`: [bincode][]를 내부적으로 사용하는 serde 기반 코덱 타입 `BincodeCodec`을 제공합니다."
      },
      {
        "row": 4,
        "rowsha": "tVxYfVabdmW33xgex0VaZ2ww4sAZJ2CQbX657BKWV70=",
        "originContent": "  types.",
        "translatedContent": "* `postcard-codec`: [postcard][]를 내부적으로 사용하는 serde 기반의 `no_std` 친화적 코덱 `PostcardCodec`을 제공합니다."
      },
      {
        "row": 5,
        "rowsha": "LuhoXqt1TgwEBSVK6gmG/kCn9F6HWBiy7/Frhh6KLx0=",
        "originContent": "* `bincode-codec`: Provides `BincodeCodec`, a serde-based codec type",
        "translatedContent": "* `unstable-notifications`: 전송 및 수신되는 메시지를 검사할 수 있는 새로운 알림을 제공합니다."
      },
      {
        "row": 6,
        "rowsha": "Koc4EdQxEW42In3FpTT+H+2sn6yv0Sbsz17Mc9VCMbw=",
        "originContent": "  that uses [bincode][] under the hood.",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "MZ6w1OwyKXPYCdbOE2+ukEFraBBnjDc9IQsbec3Ip3c=",
        "originContent": "* `postcard-codec`: Provides `PostcardCodec` a serde-based, `no_std`",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "IuO7NM36N1Djv2WRQCVPiqr/sH0UOwPg0mcHL9ORSfM=",
        "originContent": "  friendly codec that uses [postcard][] under the hood.",
        "translatedContent": "# 노트"
      },
      {
        "row": 9,
        "rowsha": "gob2TjDkfgsu8PQmo4vjazVhyOD9RgYWHFCcARS4/G0=",
        "originContent": "* `unstable-notifications`: Provides new notifications that allow",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "SSy3tRyMliafzrlhv5ADIax2kZIqWggrzcbQC5y0TS8=",
        "originContent": "  inspecting messages being sent and received",
        "translatedContent": "이 라이브러리를 작성할 때 주요 목표는 테스트, 시뮬레이션 및 이해하기 쉬운 간단하고 작은 코어를 갖는 것이었습니다; 주로 논문을 읽은 후 프로토콜을 더 잘 이해하는 데 초점이 맞춰져 있었습니다."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "이 목표를 고수하다 보니 하드웨어 시계, 원자성, 스레드 같은 많은 운영 체제 기능에 의존하지 않는 구현이 자연스럽게 되었고, 그래서 힙 할당이 필요하긴 하지만 `no_std` 크레이트가 된 것은 우연한 좋은 부가 기능으로 받아들여 Commit 하기로 했습니다."
      },
      {
        "row": 13,
        "rowsha": "Ngql6/oY79GfYOskMsEdU+IVhv86OSyiRpgJcN4V8MQ=",
        "originContent": "# Notes",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "pxpbsSOprPyHBQjSkHoKJIrCurNCs8sQZn5eoKCH+18=",
        "originContent": "When writing this library, the main goal was having a simple and small",
        "translatedContent": "## memberlist와의 비교"
      },
      {
        "row": 16,
        "rowsha": "G1t39NFts11HRM9RHAFKZYoPEX9dYfSg/BVpNgni2r8=",
        "originContent": "core that's easy to test, simulate and reason about; It was mostly",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "gZbRoT0lxunLlXabuKoFoCVKaoxAIA76jzjg4vzVIa0=",
        "originContent": "about getting a better understanding of the protocol after reading",
        "translatedContent": "내 구현에 만족할 때까지 [memberlist][2]를 보지 않으려 했습니다. 그 이후에 비철저하게 살펴보았습니다:"
      },
      {
        "row": 18,
        "rowsha": "XnzEvyd3hsM8U0tr3cxUs8MgkaEUpxvKn3tU2lV6TI8=",
        "originContent": "the paper.",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* memberlist는 복잡한 서비스 탐색 시나리오에 매우 유용한 사용자 정의 방송을 지원하므로, 이제 Foca도 사용자 데이터 전파를 지원합니다(`BroadcastHandler` 문서 참조) :-)"
      },
      {
        "row": 20,
        "rowsha": "3HKQDXrlTSsCKKaic1G1iil7HdHbh5PYL7TOjPxWXa8=",
        "originContent": "Sticking to these goals naturally led to an implementation that doesn't",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "sLLhtSXZgIp99yX3jiXdHsLQz/Cq3iMXSZ4vfGifLcM=",
        "originContent": "rely on many operating system features like a hardware clock, atomics",
        "translatedContent": "* 멤버 간 가입과 주기적 상태 병합에 사용되는 스트림 기반 동기화 메커니즘(push-pull)을 갖고 있습니다: 이는 Foca의 책임 범위를 훨씬 벗어나지만 매우 흥미로운 아이디어여서, 이를 활용할 수 있도록 `Foca::apply_many` 메서드를 노출했습니다."
      },
      {
        "row": 22,
        "rowsha": "dvOk+ieV9CE5ZH1NJBgnjoXUTbEt6VrVp2lnoz86z9k=",
        "originContent": "and threads, so becoming a `no_std` crate (albeit still requiring heap",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "N4i+rFHnK78OaSoyiHl1tpMgZFo/hpHzxHNXotvJX8g=",
        "originContent": "allocations) was kind of a nice accidental feature that I decided to",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "QBZK7SADPiZWgjTjoPhKyJVnB0e5BtkYQK+8O9/zuBU=",
        "originContent": "commit to.",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "VR4JmSIWLAb80FOzH2z2Ah51c6CIzMIeZgYDSf3D3Ac=",
        "originContent": "## Comparison to memberlist",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "78N0PiPI+0ZHldxr0R8qtTCnggrXRP3KuDx9xIqtDWI=",
        "originContent": "I avoided looking at [memberlist][2] until I was satisfied with my",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "CV9VtqDDzw/JBmjyrFFlAb1bDexDr5txGPNeQHg4G1I=",
        "originContent": "own implementation. Since then I did take a non-thorough look at it:",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "beWX7fds04bV85qlEfo5i2Xx2fvk9lNLqRT0jcLWrfY=",
        "originContent": "* memberlist supports custom broadcasts, which is a very cool feature",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "K4oxntH9XReX20y0NiJ0NatSy5nLJ7lzQxKCzeauEsY=",
        "originContent": "  for complex service discovery scenarios, so now Foca has support",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "DnrQO3BjXQo8MGEXJA145/fnu0jINq8PTadxtSm7zUk=",
        "originContent": "  for disseminating user data too (see `BroadcastHandler`",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "vvzXZ6iXGy32PI/aMIIvYIySEfZ1c0PmVn+WzBCm6zI=",
        "originContent": "  documentation) :-)",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "J8Ljr5AlnvkWUq3Y82ZkT/ZayiLx9hmn725z750XpZs=",
        "originContent": "* It has a stream-based synchronization mechanism (push-pull) that's",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "ajx0UlHYHqABwXv3IFcHDl/8LWD9Ob60rcWqDZ+J49I=",
        "originContent": "  used for joining and periodic merging state between members: It's",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "6GPCTamrH28um8IIAeEpLVexJnbFXlNL1SD6ztDcLTE=",
        "originContent": "  way beyond Foca's responsibilities, but it's a very interesting idea,",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "hQ0yjHkwsPFSgugedSytUJun2BciUSCJSo5bfMPmL70=",
        "originContent": "  so I've exposed the `Foca::apply_many` method which enables code",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "  using Foca to do a similar thing if desired.\n\n* Its configuration parameters change based on (current) cluster\n  size. Users can make use of `Config::new_{lan,wan}` along with\n  `Foca::set_config` to achieve the same\n\n# References\n\n* The paper [SWIM: Scalable Weakly-consistent Infection-style Process Group Membership\nProtocol][1]\n* HashiCorp's [memberlist][2]\n\n[1]: https://www.cs.cornell.edu/projects/Quicksilver/public_pdfs/SWIM.pdf\n[2]: https://github.com/hashicorp/memberlist\n[bincode]: https://github.com/bincode-org/bincode\n[postcard]: https://github.com/jamesmunns/postcard\n[tracing]: https://docs.rs/tracing/latest/tracing/\n[dir]: https://docs.rs/tracing-subscriber/0.3.17/tracing_subscriber/filter/struct.EnvFilter.html#directives\n\n# License\n\nUnless explicitly stated otherwise, all work is subject to the terms\nof the Mozilla Public License, version 2.0.\n\nFiles inside the `examples/` directory are dedicated to the Public\nDomain.\n",
    "ContentSha": "jbPGLkBbsJGG8sWkECGarMk3rFA3pX+u+hXXBgnRUyM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "  원하는 경우 Foca를 사용하여 유사한 작업을 수행할 수 있습니다.\n\n* 구성 매개변수는 (현재) 클러스터 크기에 따라 변경됩니다.\n  사용자는 `Config::new_{lan,wan}`과 함께\n  `Foca::set_config`를 사용하여 동일한 작업을 수행할 수 있습니다.\n\n# 참고 문헌\n\n* 논문 [SWIM: Scalable Weakly-consistent Infection-style Process Group Membership\nProtocol][1]\n* HashiCorp의 [memberlist][2]\n\n[1]: https://www.cs.cornell.edu/projects/Quicksilver/public_pdfs/SWIM.pdf\n[2]: https://github.com/hashicorp/memberlist\n[bincode]: https://github.com/bincode-org/bincode\n[postcard]: https://github.com/jamesmunns/postcard\n[tracing]: https://docs.rs/tracing/latest/tracing/\n[dir]: https://docs.rs/tracing-subscriber/0.3.17/tracing_subscriber/filter/struct.EnvFilter.html#directives\n\n# 라이선스\n\n명시적으로 달리 명시되지 않는 한, 모든 작업은\nMozilla Public License 버전 2.0의 조건을 따릅니다.\n\n`examples/` 디렉터리 내의 파일은 퍼블릭 도메인에 속합니다.\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "B3KOuRNKIi/CPLgX/y4cawe47/vw6GSqlKrZ+DjjLx0=",
        "originContent": "  using Foca to do a similar thing if desired.",
        "translatedContent": "  원하는 경우 Foca를 사용하여 유사한 작업을 수행할 수 있습니다."
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "PzeC52Z2KY1VVHPiqO0LR/eK+y9MeYxpGR+qReRqy4o=",
        "originContent": "* Its configuration parameters change based on (current) cluster",
        "translatedContent": "* 구성 매개변수는 (현재) 클러스터 크기에 따라 변경됩니다."
      },
      {
        "row": 4,
        "rowsha": "gkO5NMT6Sxhj61Qkq0mxJPr7IoxQOT+mXMK9e88yPt8=",
        "originContent": "  size. Users can make use of `Config::new_{lan,wan}` along with",
        "translatedContent": "  사용자는 `Config::new_{lan,wan}`과 함께"
      },
      {
        "row": 5,
        "rowsha": "lDpH4K7Hs7jGH5viqk1TVBTjD+IoPVM+N0paev+3Ihg=",
        "originContent": "  `Foca::set_config` to achieve the same",
        "translatedContent": "  `Foca::set_config`를 사용하여 동일한 작업을 수행할 수 있습니다."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "qqeNqFl8bX8V8FRsr3DWoSY6UcRkyD/D0ebbNa6tY8Y=",
        "originContent": "# References",
        "translatedContent": "# 참고 문헌"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "Z7RljqDHh9awLkaSwUc9oeGHZ6mHo5wAv7IQ49ye7/Y=",
        "originContent": "* The paper [SWIM: Scalable Weakly-consistent Infection-style Process Group Membership",
        "translatedContent": "* 논문 [SWIM: Scalable Weakly-consistent Infection-style Process Group Membership"
      },
      {
        "row": 10,
        "rowsha": "HCRw0EaSco+2dCuk/Q1+4uFnAshthBx+biLAV7C0urE=",
        "originContent": "Protocol][1]",
        "translatedContent": "Protocol][1]"
      },
      {
        "row": 11,
        "rowsha": "9kAenZG62hOmPswrGLzzFdHAdMx+oAdAjySOetxdhKQ=",
        "originContent": "* HashiCorp's [memberlist][2]",
        "translatedContent": "* HashiCorp의 [memberlist][2]"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "rmivwoNTOZ8zqLDcnG9rteFjDBSAf02hXOLuvmejVow=",
        "originContent": "[1]: https://www.cs.cornell.edu/projects/Quicksilver/public_pdfs/SWIM.pdf",
        "translatedContent": "[1]: https://www.cs.cornell.edu/projects/Quicksilver/public_pdfs/SWIM.pdf"
      },
      {
        "row": 14,
        "rowsha": "q+NehWAPK+tZE06FxwbHvKN1lyX3UOF0Ufz3dlXIWXE=",
        "originContent": "[2]: https://github.com/hashicorp/memberlist",
        "translatedContent": "[2]: https://github.com/hashicorp/memberlist"
      },
      {
        "row": 15,
        "rowsha": "ITauWklbBt1N938pZR2ruYN7454nlmnim4dDSsJRcds=",
        "originContent": "[bincode]: https://github.com/bincode-org/bincode",
        "translatedContent": "[bincode]: https://github.com/bincode-org/bincode"
      },
      {
        "row": 16,
        "rowsha": "uPHBknymkzy2U0NAmu9L58n20ZdUlv29OdjgkvAJFyA=",
        "originContent": "[postcard]: https://github.com/jamesmunns/postcard",
        "translatedContent": "[postcard]: https://github.com/jamesmunns/postcard"
      },
      {
        "row": 17,
        "rowsha": "0tTx6+edUs6N/rMkQBBW5/S5CPuj7ZD/l0hpUIH3Ayw=",
        "originContent": "[tracing]: https://docs.rs/tracing/latest/tracing/",
        "translatedContent": "[tracing]: https://docs.rs/tracing/latest/tracing/"
      },
      {
        "row": 18,
        "rowsha": "g/qGZNzbz2myhQU9gsA5YH3Qk8sadOhF1YpoIolLZpA=",
        "originContent": "[dir]: https://docs.rs/tracing-subscriber/0.3.17/tracing_subscriber/filter/struct.EnvFilter.html#directives",
        "translatedContent": "[dir]: https://docs.rs/tracing-subscriber/0.3.17/tracing_subscriber/filter/struct.EnvFilter.html#directives"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "7Qo8+NblMV+ve9U8YJCAOSzx5hR1PsQgmN0TGjFj2ls=",
        "originContent": "# License",
        "translatedContent": "# 라이선스"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "zkNUWT2Y5dsDDHpYI15xTvx43WTOj8jsMT1164sVUbE=",
        "originContent": "Unless explicitly stated otherwise, all work is subject to the terms",
        "translatedContent": "명시적으로 달리 명시되지 않는 한, 모든 작업은"
      },
      {
        "row": 23,
        "rowsha": "vugU72V3OZyrYrcAAfYwrVf2sgkpLkd/99nvK48GPlg=",
        "originContent": "of the Mozilla Public License, version 2.0.",
        "translatedContent": "Mozilla Public License 버전 2.0의 조건을 따릅니다."
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "1nyMsunQ7Isfqi1aDH5udhEX2tvuS2KlV2h5vI/X3jQ=",
        "originContent": "Files inside the `examples/` directory are dedicated to the Public",
        "translatedContent": "`examples/` 디렉터리 내의 파일은 퍼블릭 도메인에 속합니다."
      },
      {
        "row": 26,
        "rowsha": "yB1EHfzwty8OsqolPI0yIQ/USNXy6E7U9PbUSzeLc8Q=",
        "originContent": "Domain.",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]