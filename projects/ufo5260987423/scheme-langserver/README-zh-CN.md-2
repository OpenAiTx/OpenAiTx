{
  "id": 2,
  "origin": "}\n```\n### Recurring with Log \nWith above [output log](#output-log), you may use `tests/log-debug.sps` recurring bugs:\n1. Rename `{path-to-log}`(usually `~/scheme-langserver.log`) as `~/ready-for-analyse.log`;\n2. run `scheme --script tests/log-debug.sps`. If you want to re-produce the multi-thread environment, it would also be available to run `scheme --script tests/log-debug.sps`.\n\n## Test\nAlmost all key procedures and APIs are tested. My work is just so rough but useful, maybe you would like to find what I've done in `tests` directory or just run following command in `{scheme-langserver-root-directory}`\n``` bash\nbash test.sh\n```\n>NOTE\nIt's hard to do test with threaded environment. So, current tests focus on single thread.\n\n## Use Scheme-langserver for Other Purpose\n### Script-Fu in GIMP\nScript-Fu is based on an interpreted language called Scheme, and works by using functions that interact with GIMP's internal functions. Taking [this page](https://dalelane.co.uk/blog/?p=628)'s script as an example, you can apply scheme-langserver with script file with \"SCM\" extension.\n\n### Others\n\nWell, I'm also interested in [OMN (Opusmodus Notation)](https://opusmodus.com/) and AutoLisp. But I still have many things to do.\n\n## Code Count\n```bash\nfind . -name \"*.sls\" ! -path \"./.akku/*\" |xargs wc -l\n```\n## Detailed Document\n1. [Scheme-langserver: Treat Scheme Code Editing as the First-Class Concern](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/paper.pdf).\n2. [Catching identifier bindings](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/identifier.md)\n3. [Synchronizing](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/util/synchronize.md)\n4. [Type inference](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/type-inference.md),~~[类型推断](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/type-inference.cn.md)~~(Deprecated, and I'm writing a Chinese book for it)\n5. [API Analysis](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/protocol/analysis.md)\n6. [Deepwiki](https://deepwiki.com/ufo5260987423/scheme-langserver)\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=ufo5260987423/scheme-langserver&type=Date)](https://star-history.com/#ufo5260987423/scheme-langserver)\n\n## Contributors\n\n![Contributors](https://contrib.rocks/image?repo=ufo5260987423/scheme-langserver)",
  "origin_sha": "i8bdxDkredZSYF30cehi08nt4c/wbKSSDdwbhUH7Ti4=",
  "translate": "```\n```\n### 使用日志进行复现\n通过上述的[输出日志](#output-log)，你可以使用 `tests/log-debug.sps` 来复现 bug：\n1. 将 `{path-to-log}`（通常为 `~/scheme-langserver.log`）重命名为 `~/ready-for-analyse.log`；\n2. 运行 `scheme --script tests/log-debug.sps`。如果你想复现多线程环境，也可以运行 `scheme --script tests/log-debug.sps`。\n\n## 测试\n几乎所有关键过程和 API 都经过了测试。我的工作虽然粗糙但很有用，也许你会想在 `tests` 目录下找到我完成的内容，或者直接在 `{scheme-langserver-root-directory}` 下运行如下命令：\n``` bash\nbash test.sh\n```\n>注意\n在多线程环境下进行测试很难。因此，目前的测试主要集中在单线程环境下。\n\n## 将 Scheme-langserver 用于其他目的\n### GIMP 中的 Script-Fu\nScript-Fu 基于一种解释型语言 Scheme，可以通过使用与 GIMP 内部函数交互的函数来工作。以[此页面](https://dalelane.co.uk/blog/?p=628)的脚本为例，你可以将 scheme-langserver 应用于扩展名为 \"SCM\" 的脚本文件。\n\n### 其他\n\n嗯，我对 [OMN (Opusmodus Notation)](https://opusmodus.com/) 和 AutoLisp 也很感兴趣。但我还有许多事情要做。\n\n## 代码统计\n```bash\nfind . -name \"*.sls\" ! -path \"./.akku/*\" |xargs wc -l\n```\n## 详细文档\n1. [Scheme-langserver: 将 Scheme 代码编辑作为首要关注点](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/paper.pdf)。\n2. [捕获标识符绑定](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/identifier.md)\n3. [同步机制](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/util/synchronize.md)\n4. [类型推断](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/type-inference.md)，~~[类型推断（中文）](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/type-inference.cn.md)~~（已废弃，正在为其编写中文书籍）\n5. [API 分析](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/protocol/analysis.md)\n6. [Deepwiki](https://deepwiki.com/ufo5260987423/scheme-langserver)\n\n## Star 历史\n\n[![Star History Chart](https://api.star-history.com/svg?repos=ufo5260987423/scheme-langserver&type=Date)](https://star-history.com/#ufo5260987423/scheme-langserver)\n\n## 贡献者\n\n![Contributors](https://contrib.rocks/image?repo=ufo5260987423/scheme-langserver)\n```",
  "status": "ok"
}