{
  "id": 1,
  "origin": "\n<div align=\"right\">\n  <details>\n    <summary >üåê Language</summary>\n    <div>\n      <div align=\"right\">\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=en\">English</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ja\">Êó•Êú¨Ë™û</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ko\">ÌïúÍµ≠Ïñ¥</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=th\">‡πÑ‡∏ó‡∏¢</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=fr\">Fran√ßais</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=de\">Deutsch</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=es\">Espa√±ol</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=it\">Itapano</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ru\">–†—É—Å—Å–∫–∏–π</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=pt\">Portugu√™s</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=nl\">Nederlands</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=pl\">Polski</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=tr\">T√ºrk√ße</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=vi\">Ti·∫øng Vi·ªát</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=id\">Bahasa Indonesia</a></p>\n      </div>\n    </div>\n  </details>\n</div>\n\n![](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/logo-no-background.png)\n# Scheme-langserver\n[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/ufo5260987423/scheme-langserver)\n\nYou may read my [paper](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/paper.pdf) and cite like this \n> WANG, Z. (2025, May 12). Scheme-langserver: Treat Scheme Code Editing as the First-Class Concern. The 18th European Lisp Symposium (ELS`25), Zurich. https://doi.org/10.5281/zenodo.15384882\n\nDue to GitHub may block Chinese IP addresses, I have to copy this repository to [here](https://codeberg.org/ufo5260987423/scheme-langserver) and [here](https://gitee.com/ufo5260987423/scheme-langserver). I will continually update all repositories but I can't guarrentee. I now also collaborate with [XmacsLabs](https://github.com/XmacsLabs), you may also find a fork [here](https://github.com/XmacsLabs/scheme-langserver).\n\n<video src=\"https://github.com/user-attachments/assets/893bba98-6709-4fac-a4d3-dc7b6aab46fb\" controls=\"controls\" width=\"500\" height=\"300\"></video>\n\n**Now, VSCode can use scheme-langserver!** Please refere [HERE](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/startup.md).\n\n>NOTE: There're many many bugs in scheme-langserver. I'm just fixing and appealing help from the community. Please be patient.\n\n>NOTE: you can find the auto generated type information [here](https://ufo5260987423.github.io/scheme-langserver/doc/analysis/type-inference-result). It's now mainly used for next-stage-development (maybe include AKKU) and debugging.\n\nImplementing support like autocomplete, goto definition, or documentation on hover is a significant effort for programming. However, comparing to other language like java, python, javascript and c, language server protocol implementation for lisp language are just made in a vacuum. [Geiser](https://gitlab.com/emacs-geiser), [racket langserver](https://github.com/jeapostrophe/racket-langserver) and [swish-lint](https://github.com/becls/swish-lint) etc., their works are all based on `repl`(Read-Eval-Print Loop) or keyword tokenizer instead of programming. For example, if a programmer was coding on an unaccomplished project, in which the codes were not fully executable, [Geiser](https://gitlab.com/emacs-geiser) or any others would only complete top-level binding identifiers listed by `environment-symbols` procedure (for [Chez](https://cisco.github.io/ChezScheme/)), or complete symbols instead of identifiers. Which means for local bindings and unaccomplished codes, though making effort for programming is supposed of the importance mostly, [Geiser](https://gitlab.com/emacs-geiser) and its counterparts help nothing on recognizing identifier's valid scope. Familiar cases occur with goto definition and many other functionalities.\n\nA primary cause is, for scheme and other lisp dialects, their abundant data sets and flexible control structures raise program analysis a big challenge. Especially the macro, it seems like that scheme is mainly used for genius and meta/macro programming. But I say no. Scheme can make many interesting things if a better programming environment is provided. And now you may [**STARTUP HERE**](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/startup.md).\n\nThis package is a language server protocol implementation helping scheme programming. It provides completion, definition and type inference. These functionalities are established on static code analysis with [r6rs standard](http://www.r6rs.org/) and some obvious rules for unaccomplished codes. This package itself and related libraries are published or going to be published with [Akku](https://akkuscm.org/), which is a package manager for Scheme. \n\nThis package also has been tested with [Chez Scheme](https://cisco.github.io/ChezScheme/) versions 9.4 and 9.5. A detailed test on version 10.0.0 will be done after upgrading my laptop OS to a newer version.\n\nI do this open source work just in my spare time and I can contribute many splendid ideas to the community like embedding data flow analysis into scheme-langserver or many other things. And I'm continuously asking for much more donation or funding. You can donate with [this patreon page](https://www.patreon.com/PoorProgrammer/membership) or [Áà±ÂèëÁîµ](https://afdian.com/a/ufo5260987423).\n\n\n## Compilation , Intallation & Configuration is [HERE](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/startup.md)\n\n## Recent Status\nI'll keep fixing bugs, profiling the code, and collecting information for my giant book on homemade type inference system. This will take me about 1 years. Further developments including a [VScode](https://code.visualstudio.com/) plugin and data flow analysis. But actually, I'm now setting this open source work a part-time job, and I can not guarantee a schedule.\n\n## Release \n1.2.9 Now, enjoy type inference!\n\nPrevious releases please refer to [this file](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/release-log.md).\n\n### Features\n1. Top-level and local identifiers binding completion.\n![Top-level and local identifiers binding](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/auto-completion.png \"Top-level and local identifiers binding\")\n2. Goto definition.\n![Goto definition with telescope.nvim](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/definition.png \"Goto Definition with telescope.nvim\")\n3. Compatible with package manager: Akku.\n4. File changes synchronizing and corresponding index changing.\n5. Hover.\n6. References and document highlight (document-scoped references).\n![Find references with telescope.nvim](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/find-references.png \"Find references with telescope.nvim\")\n7. Document symbol.\n![Find document symbols with telescope.nvim](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/document-symbol.png \"find document symbols with telescope.nvim\")\n8. Catching *-syntax(define-syntax, let-syntax, etc.) based local identifier binding. \n9. Cross-platform parallel indexing.\n10. Self-made source code annotator to be compatible with .sps files.\n11. Peephole optimization for API requests with suspendable task.\n12. Type inference with a homemade DSL interpreter(I'm very proud of it!). And now it has been embedded into the auto-completion. As the following figure indicated, the \"length-b\" and \"length-a\" having \"integer?\" type are in the front of those recommended options because they can match the parameter type requiring from \"<=\". \n![Autocompletion with type inference](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/auto-completion-with-type-inference.png \"Autocompletion with type inference\")\nA test in can prove this result, just run `scheme --script tests/protocol/apis/test-completion.sps` and the log file `scheme-langserver.log` would contain results like this:\n```bash\nsend-message\n2023 11 21 11 26 41 967266866\n{\"jsonrpc\":\"2.0\",\"id\":\"3\",\"result\":[{\"label\":\"length-a\"},{\"label\":\"length-b\"},{\"label\":\"lambda\"},{\"label\":\"latin-1-codec\"},{\"label\":\"lcm\"},{\"label\":\"least-fixnum\"},{\"label\":\"length\"},{\"label\":\"let\"},{\"label\":\"let*\"},{\"label\":\"let*-values\"},{\"label\":\"let-syntax\"},{\"label\":\"let-values\"},{\"label\":\"letrec\"},{\"label\":\"letrec*\"},{\"label\":\"letrec-syntax\"},{\"label\":\"lexical-violation?\"},{\"label\":\"list\"},{\"label\":\"list->string\"},{\"label\":\"list->vector\"},{\"label\":\"list-ref\"},{\"label\":\"list-sort\"},{\"label\":\"list-tail\"},{\"label\":\"list?\"},{\"label\":\"log\"},{\"label\":\"lookahead-char\"},{\"label\":\"lookahead-u8\"}]}\n```\n13. Abstract interpreter for identifier catching among different file extensions like scm, ss, sps, sls and sld.\n\n### TODOs\n14. Renaming. \n15. Fully compatible with [r6rs standard](http://www.r6rs.org/).\n16. Step-by-step macro expander: well, I actually have implemented one and I wanted to make it a key step catching identifier binding in self-defined macros. Now, I find this catching is much harder than I thought, and the expander I don't know where it could work.\n17. Code eval.",
  "origin_sha": "EUEvRAM1Xn8cCqrPvuBQ0V6xXYO3O33rxE42JkAjX+s=",
  "translate": "<div align=\"right\">\n  <details>\n    <summary >üåê Ë™ûË®Ä</summary>\n    <div>\n      <div align=\"right\">\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=en\">English</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ja\">Êó•Êú¨Ë™û</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ko\">ÌïúÍµ≠Ïñ¥</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=th\">‡πÑ‡∏ó‡∏¢</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=fr\">Fran√ßais</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=de\">Deutsch</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=es\">Espa√±ol</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=it\">Itapano</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ru\">–†—É—Å—Å–∫–∏–π</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=pt\">Portugu√™s</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=nl\">Nederlands</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=pl\">Polski</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=tr\">T√ºrk√ße</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=vi\">Ti·∫øng Vi·ªát</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=id\">Bahasa Indonesia</a></p>\n      </div>\n    </div>\n  </details>\n</div>\n\n![](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/logo-no-background.png)\n# Scheme-langserver\n[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/ufo5260987423/scheme-langserver)\n\n‰Ω†ÂèØ‰ª•Èñ±ËÆÄÊàëÁöÑ[Ë´ñÊñá](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/paper.pdf)ÔºåÂºïÁî®ÊñπÂºèÂ¶Ç‰∏ã\n> WANG, Z. (2025, May 12). Scheme-langserver: Treat Scheme Code Editing as the First-Class Concern. The 18th European Lisp Symposium (ELS`25), Zurich. https://doi.org/10.5281/zenodo.15384882\n\nÁî±Êñº GitHub ÂèØËÉΩÊúÉÂ∞ÅÈéñ‰∏≠Âúã IP Âú∞ÂùÄÔºåÊàëÂøÖÈ†àÂ∞áÊ≠§ÂÄâÂ∫´Ë§áË£ΩÂà∞[ÈÄôË£°](https://codeberg.org/ufo5260987423/scheme-langserver)Âíå[ÈÄôË£°](https://gitee.com/ufo5260987423/scheme-langserver)„ÄÇÊàëÊúÉÊåÅÁ∫åÂêåÊ≠•Êõ¥Êñ∞ÊâÄÊúâÂÄâÂ∫´Ôºå‰ΩÜÁÑ°Ê≥ï‰øùË≠â„ÄÇÁèæÂú®Êàë‰πüËàá[XmacsLabs](https://github.com/XmacsLabs)Âêà‰ΩúÔºå‰Ω†‰πüÂèØ‰ª•Âú®[ÈÄôË£°](https://github.com/XmacsLabs/scheme-langserver)ÊâæÂà∞ÂàÜÊîØ„ÄÇ\n\n<video src=\"https://github.com/user-attachments/assets/893bba98-6709-4fac-a4d3-dc7b6aab46fb\" controls=\"controls\" width=\"500\" height=\"300\"></video>\n\n**ÁèæÂú®ÔºåVSCode ÂèØ‰ª•‰ΩøÁî® scheme-langserverÔºÅ** Ë´ãÂèÉË¶ã[ÈÄôË£°](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/startup.md)„ÄÇ\n\n>Ê≥®ÊÑèÔºöscheme-langserver ÈÇÑÊúâÂæàÂ§öÂæàÂ§ö bug„ÄÇÊàëÊ≠£Âú®‰øÆÂæ©‰∏¶ÂëºÁ±≤Á§æÁæ§ÂçîÂä©„ÄÇË´ãËÄêÂøÉÁ≠âÂæÖ„ÄÇ\n\n>Ê≥®ÊÑèÔºö‰Ω†ÂèØ‰ª•Âú®[ÈÄôË£°](https://ufo5260987423.github.io/scheme-langserver/doc/analysis/type-inference-result)ÊâæÂà∞Ëá™ÂãïÁîüÊàêÁöÑÂûãÂà•Ë≥áË®ä„ÄÇÂÆÉÁõÆÂâç‰∏ªË¶ÅÁî®Êñº‰∏ã‰∏ÄÈöéÊÆµÈñãÁôºÔºàÂèØËÉΩÂåÖÂê´ AKKUÔºâÂíåÈô§ÈåØ„ÄÇ\n\nÂØ¶ÁèæËá™ÂãïË£úÂÖ®„ÄÅË∑≥ËΩâÂÆöÁæ©ÊàñÊá∏ÂÅúÈ°ØÁ§∫Êñá‰ª∂Á≠âÊîØÊè¥ÂäüËÉΩÂ∞çÊñºÁ®ãÂºèË®≠Ë®à‰æÜË™™ÊòØ‰∏ÄÈ†ÖÈáçÂ§ßÂ∑•‰Ωú„ÄÇÁÑ∂ËÄåÔºåËàá java„ÄÅpython„ÄÅjavascript Âíå c Á≠âÂÖ∂‰ªñË™ûË®ÄÁõ∏ÊØîÔºålisp Ë™ûË®ÄÁöÑ language server protocol ÂØ¶ÁèæÂπæ‰πéÊòØ‰∏ÄÁâáÁ©∫ÁôΩ„ÄÇ[Geiser](https://gitlab.com/emacs-geiser)„ÄÅ[racket langserver](https://github.com/jeapostrophe/racket-langserver) Âíå [swish-lint](https://github.com/becls/swish-lint) Á≠âÔºåÂÆÉÂÄëÁöÑÂ∑•‰ΩúÈÉΩÂü∫Êñº `repl`ÔºàRead-Eval-Print LoopÔºâÊàñÈóúÈçµË©ûÂàÜË©ûÂô®ÔºåËÄå‰∏çÊòØÂü∫ÊñºÁ®ãÂºèÂàÜÊûê„ÄÇ‰æãÂ¶ÇÔºåÂ¶ÇÊûúÈñãÁôºËÄÖÂú®‰∏ÄÂÄãÂ∞öÊú™ÂÆåÊàêÁöÑÂ∞àÊ°à‰∏≠Á∑®Á¢ºÔºå‰ª£Á¢ºÁÑ°Ê≥ïÂÆåÂÖ®Âü∑Ë°åÔºå[Geiser](https://gitlab.com/emacs-geiser) ÊàñÂÖ∂‰ªñÂ∑•ÂÖ∑ÂÉÖËÉΩË£úÂÖ®Áî± `environment-symbols` Á®ãÂ∫èÔºàÈáùÂ∞ç [Chez](https://cisco.github.io/ChezScheme/)ÔºâÂàóÂá∫ÁöÑÈ†ÇÂ±§Á∂ÅÂÆöË≠òÂà•Á¨¶ÔºåÊàñÂè™Ë£úÂÖ®Á¨¶ËôüËÄåÈùûË≠òÂà•Á¨¶„ÄÇÈÄôÊÑèÂë≥ËëóÂ∞çÊñºÂçÄÂüüÁ∂ÅÂÆöÂíåÊú™ÂÆåÊàêÁöÑ‰ª£Á¢ºÔºåÂÑòÁÆ°Á®ãÂºèÂàÜÊûêÊú¨Ë©≤ÊúÄÈáçË¶ÅÔºå[Geiser](https://gitlab.com/emacs-geiser) ÂèäÂÖ∂ÂêåÈ°ûÂ∑•ÂÖ∑Â∞çË≠òÂà•Á¨¶‰ΩúÁî®ÂüüÁöÑËæ®Ë≠òÊØ´ÁÑ°Âπ´Âä©„ÄÇÈ°û‰ººÊÉÖÊ≥Å‰πüÁôºÁîüÂú®Ë∑≥ËΩâÂÆöÁæ©ÂíåÂÖ∂‰ªñË®±Â§öÂäüËÉΩ‰∏ä„ÄÇ\n\n‰∏ªË¶ÅÂéüÂõ†Âú®ÊñºÔºåÂ∞çÊñº scheme ÂíåÂÖ∂‰ªñ lisp ÊñπË®Ä‰æÜË™™ÔºåÂÖ∂Ë±êÂØåÁöÑË≥áÊñôÈõÜÂíåÈùàÊ¥ªÁöÑÊéßÂà∂ÁµêÊßã‰ΩøÂæóÁ®ãÂºèÂàÜÊûêÊàêÁÇ∫‰∏ÄÂ§ßÊåëÊà∞„ÄÇÂ∞§ÂÖ∂ÊòØÂ∑®ÈõÜÔºå‰ºº‰πé scheme ‰∏ªË¶ÅÁî®ÊñºÂ§©ÊâçÂíåÂÖÉ/Â∑®ÈõÜÁ®ãÂºèË®≠Ë®à„ÄÇ‰ΩÜÊàë‰∏¶‰∏çÈÄôÈ∫ºË™çÁÇ∫„ÄÇÂ¶ÇÊûúÊúâÊõ¥Â•ΩÁöÑÁ®ãÂºèÈñãÁôºÁí∞Â¢ÉÔºåScheme ÂèØ‰ª•ÂÅöÂá∫ÂæàÂ§öÊúâË∂£ÁöÑ‰∫ãÊÉÖ„ÄÇÁèæÂú®‰Ω†ÂèØ‰ª•[**ÂæûÈÄôË£°ÈñãÂßã**](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/startup.md)„ÄÇ\n\nÈÄôÂÄãÂ•ó‰ª∂ÊòØ‰∏ÄÂÄãÂçîÂä© Scheme Á®ãÂºèË®≠Ë®àÁöÑ Language Server Protocol ÂØ¶Áèæ„ÄÇÂÆÉÊèê‰æõË£úÂÖ®„ÄÅÂÆöÁæ©ÂèäÂûãÂà•Êé®Êñ∑ÂäüËÉΩ„ÄÇÈÄô‰∫õÂäüËÉΩÂª∫Á´ãÂú®ÈùúÊÖãÁ®ãÂºèÁ¢ºÂàÜÊûêÂü∫Á§é‰∏äÔºå‰æùÊìö [r6rs Ê®ôÊ∫ñ](http://www.r6rs.org/)ÂèäÈÉ®ÂàÜÂ∞çÊú™ÂÆåÊàê‰ª£Á¢ºÁöÑÈ°ØÁÑ∂Ë¶èÂâá„ÄÇÊ≠§Â•ó‰ª∂Êú¨Ë∫´ÂèäÁõ∏ÈóúÂáΩÂºèÂ∫´Â∑≤Á∂ìÊàñÂ∞áÈÄöÈÅé [Akku](https://akkuscm.org/) Áôº‰ΩàÔºåAkku ÊòØ Scheme ÁöÑÂ•ó‰ª∂ÁÆ°ÁêÜÂô®„ÄÇ\n\nÊú¨Â•ó‰ª∂‰πüÂ∑≤Á∂ìÂú® [Chez Scheme](https://cisco.github.io/ChezScheme/) 9.4 Âíå 9.5 ÁâàÊú¨‰∏äÊ∏¨Ë©¶ÈÅé„ÄÇÂ∞ç 10.0.0 ÁâàÊú¨ÁöÑË©≥Á¥∞Ê∏¨Ë©¶Â∞áÂú®ÊàëÂçáÁ¥öÁ≠ÜË®òÂûãÈõªËÖ¶‰ΩúÊ•≠Á≥ªÁµ±ÂæåÈÄ≤Ë°å„ÄÇ\n\nÊàëÂÉÖÂú®Ê•≠È§òÊôÇÈñìÂÅöÈÄôÂÄãÈñãÊ∫êÈ†ÖÁõÆÔºå‰πüÂèØ‰ª•ÁÇ∫Á§æÁæ§Ë≤¢ÁçªÂæàÂ§öÁ≤æÂΩ©ÁöÑÊÉ≥Ê≥ïÔºåÊØîÂ¶ÇÂ∞áË≥áÊñôÊµÅÂàÜÊûêÂµåÂÖ• scheme-langserver Á≠â„ÄÇÊàë‰πüÊåÅÁ∫åÂ∞ãÊ±ÇÊõ¥Â§öÁöÑÊçêË¥àÊàñË≥áÂä©„ÄÇ‰Ω†ÂèØ‰ª•ÈÄöÈÅé[ÈÄôÂÄã patreon È†ÅÈù¢](https://www.patreon.com/PoorProgrammer/membership)Êàñ[ÊÑõÁôºÈõª](https://afdian.com/a/ufo5260987423)ÈÄ≤Ë°åÊçêË¥à„ÄÇ\n\n## Á∑®Ë≠Ø„ÄÅÂÆâË£ùËàáÈÖçÁΩÆË´ãÂèÉË¶ã[ÈÄôË£°](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/startup.md)\n\n## ÊúÄÊñ∞ÈÄ≤Â±ï\nÊàëÊúÉÁπºÁ∫å‰øÆ bug„ÄÅÂàÜÊûêÊïàËÉΩ„ÄÅ‰∏¶Êî∂ÈõÜËá™Ë£ΩÂûãÂà•Êé®Êñ∑Á≥ªÁµ±Â∑®ËëóÁöÑË≥áÊñô„ÄÇÈÄôÂ§ßÁ¥ÑÊúÉËä±Êàë‰∏ÄÂπ¥ÁöÑÊôÇÈñì„ÄÇÊú™‰æÜÈñãÁôºÈÇÑÂåÖÊã¨ [VScode](https://code.visualstudio.com/) Â§ñÊéõÂíåË≥áÊñôÊµÅÂàÜÊûê„ÄÇ‰ΩÜÂØ¶Èöõ‰∏äÔºåÁèæÂú®ÈÄôÂÄãÈñãÊ∫êÈ†ÖÁõÆË¢´ÊàëË®≠ÂÆöÁÇ∫ÂÖºËÅ∑ÔºåÁÑ°Ê≥ï‰øùË≠âÊéíÁ®ã„ÄÇ\n\n## Áôº‰Ωà\n1.2.9 ÁèæÂú®Ôºå‰∫´ÂèóÂûãÂà•Êé®Êñ∑ÂêßÔºÅ\n\nÈÅéÂæÄÁâàÊú¨Ë´ãÂèÉË¶ã[ÈÄôÂÄãÊ™îÊ°à](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/release-log.md)„ÄÇ\n\n### ÂäüËÉΩÁâπÈªû\n1. È†ÇÂ±§ÂíåÂçÄÂüüË≠òÂà•Á¨¶Á∂ÅÂÆöËá™ÂãïË£úÂÖ®„ÄÇ\n![Top-level and local identifiers binding](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/auto-completion.png \"Top-level and local identifiers binding\")\n2. Ë∑≥ËΩâÂÆöÁæ©„ÄÇ\n![Goto definition with telescope.nvim](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/definition.png \"Goto Definition with telescope.nvim\")\n3. Áõ∏ÂÆπÂ•ó‰ª∂ÁÆ°ÁêÜÂô®ÔºöAkku„ÄÇ\n4. Ê™îÊ°àËÆäÂãïÂêåÊ≠•ÂèäÂ∞çÊáâÁ¥¢ÂºïÊõ¥Êñ∞„ÄÇ\n5. Êá∏ÂÅúÈ°ØÁ§∫„ÄÇ\n6. ÂèÉËÄÉÊêúÂ∞ãÂèäÊñá‰ª∂Á™ÅÈ°ØÔºàÊñá‰ª∂ÁØÑÂúçÂÖßÁöÑÂèÉËÄÉÔºâ„ÄÇ\n![Find references with telescope.nvim](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/find-references.png \"Find references with telescope.nvim\")\n7. Êñá‰ª∂Á¨¶Ëôü„ÄÇ\n![Find document symbols with telescope.nvim](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/document-symbol.png \"find document symbols with telescope.nvim\")\n8. ÊçïÊçâ *-syntaxÔºàdefine-syntax„ÄÅlet-syntax Á≠âÔºâÁÇ∫Âü∫Á§éÁöÑÂçÄÂüüË≠òÂà•Á¨¶Á∂ÅÂÆö„ÄÇ\n9. Ë∑®Âπ≥Âè∞Âπ≥Ë°åÁ¥¢Âºï„ÄÇ\n10. Ëá™Ë£ΩÂéüÂßãÁ¢ºË®ªÈáãÂô®ÔºåÊîØÊè¥ .sps Ê™îÊ°à„ÄÇ\n11. API Ë´ãÊ±ÇÁöÑË¶ñÁ™óÊúÄ‰Ω≥ÂåñÔºàÂèØÊéõËµ∑ÁöÑ‰ªªÂãôÔºâ„ÄÇ\n12. ‰ª•Ëá™Ë£Ω DSL Áõ¥Ë≠ØÂô®ÈÄ≤Ë°åÂûãÂà•Êé®Êñ∑ÔºàÊàëÂ∞çÊ≠§ÈùûÂ∏∏Ëá™Ë±™ÔºÅÔºâ„ÄÇÁèæÂú®Â∑≤Á∂ìÂµåÂÖ•Ëá™ÂãïË£úÂÖ®„ÄÇÂ¶Ç‰∏ãÈù¢ÂúñÁ§∫Ôºå„Äålength-b„ÄçÂíå„Äålength-a„ÄçÂÖ∑Êúâ„Äåinteger?„ÄçÂûãÂà•ÔºåÊúÉÂõ†ÁÇ∫ÂåπÈÖç‰∫Ü„Äå<=„ÄçÊâÄÈúÄÁöÑÂèÉÊï∏ÂûãÂà•ËÄåÊéíÂú®Êé®Ëñ¶ÈÅ∏È†ÖÂâçÂàó„ÄÇ\n![Autocompletion with type inference](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/auto-completion-with-type-inference.png \"Autocompletion with type inference\")\n‰∏ÄÂÄãÊ∏¨Ë©¶ÂèØ‰ª•Ë≠âÊòéÈÄôÂÄãÁµêÊûúÔºåÂè™ÈúÄÂü∑Ë°å `scheme --script tests/protocol/apis/test-completion.sps`ÔºåÊó•Ë™åÊ™îÊ°à `scheme-langserver.log` ÊúÉÂåÖÂê´Â¶Ç‰∏ãÁµêÊûúÔºö\n```bash\nsend-message\n2023 11 21 11 26 41 967266866\n{\"jsonrpc\":\"2.0\",\"id\":\"3\",\"result\":[{\"label\":\"length-a\"},{\"label\":\"length-b\"},{\"label\":\"lambda\"},{\"label\":\"latin-1-codec\"},{\"label\":\"lcm\"},{\"label\":\"least-fixnum\"},{\"label\":\"length\"},{\"label\":\"let\"},{\"label\":\"let*\"},{\"label\":\"let*-values\"},{\"label\":\"let-syntax\"},{\"label\":\"let-values\"},{\"label\":\"letrec\"},{\"label\":\"letrec*\"},{\"label\":\"letrec-syntax\"},{\"label\":\"lexical-violation?\"},{\"label\":\"list\"},{\"label\":\"list->string\"},{\"label\":\"list->vector\"},{\"label\":\"list-ref\"},{\"label\":\"list-sort\"},{\"label\":\"list-tail\"},{\"label\":\"list?\"},{\"label\":\"log\"},{\"label\":\"lookahead-char\"},{\"label\":\"lookahead-u8\"}]}\n```\n13. ÊäΩË±°Áõ¥Ë≠ØÂô®ÊîØÊè¥ scm„ÄÅss„ÄÅsps„ÄÅsls„ÄÅsld Á≠â‰∏çÂêåÂâØÊ™îÂêçÈñìÁöÑË≠òÂà•Á¨¶ÊçïÊçâ„ÄÇ\n\n### ÂæÖËæ¶‰∫ãÈ†Ö\n14. ÈáçÊñ∞ÂëΩÂêç„ÄÇ\n15. ÂÆåÂÖ®Áõ∏ÂÆπ [r6rs Ê®ôÊ∫ñ](http://www.r6rs.org/)„ÄÇ\n16. Ê≠•ÈÄ≤ÂºèÂ∑®ÈõÜÂ±ïÈñãÂô®ÔºöÂÖ∂ÂØ¶ÊàëÂ∑≤Á∂ìÂØ¶‰Ωú‰∫Ü‰∏ÄÂÄãÔºåÊÉ≥ËÆìÂÆÉÊàêÁÇ∫ÊçïÊçâËá™ÂÆöÁæ©Â∑®ÈõÜÂÖßË≠òÂà•Á¨¶Á∂ÅÂÆöÁöÑÈóúÈçµÊ≠•È©ü„ÄÇÁèæÂú®ÁôºÁèæÈÄôÂÄãÊçïÊçâÊØîÊàëÊÉ≥ÂÉèÁöÑÈÇÑÈõ£ÔºåÈÄôÂÄãÂ±ïÈñãÂô®ÊàëÈÇÑ‰∏çÁü•ÈÅìË©≤ÊÄéÈ∫ºÁî®„ÄÇ\n17. Á®ãÂºèÁ¢ºÂü∑Ë°å„ÄÇ",
  "status": "ok"
}