{
  "id": 2,
  "origin": "}\n```\n### Recurring with Log \nWith above [output log](#output-log), you may use `tests/log-debug.sps` recurring bugs:\n1. Rename `{path-to-log}`(usually `~/scheme-langserver.log`) as `~/ready-for-analyse.log`;\n2. run `scheme --script tests/log-debug.sps`. If you want to re-produce the multi-thread environment, it would also be available to run `scheme --script tests/log-debug.sps`.\n\n## Test\nAlmost all key procedures and APIs are tested. My work is just so rough but useful, maybe you would like to find what I've done in `tests` directory or just run following command in `{scheme-langserver-root-directory}`\n``` bash\nbash test.sh\n```\n>NOTE\nIt's hard to do test with threaded environment. So, current tests focus on single thread.\n\n## Use Scheme-langserver for Other Purpose\n### Script-Fu in GIMP\nScript-Fu is based on an interpreted language called Scheme, and works by using functions that interact with GIMP's internal functions. Taking [this page](https://dalelane.co.uk/blog/?p=628)'s script as an example, you can apply scheme-langserver with script file with \"SCM\" extension.\n\n### Others\n\nWell, I'm also interested in [OMN (Opusmodus Notation)](https://opusmodus.com/) and AutoLisp. But I still have many things to do.\n\n## Code Count\n```bash\nfind . -name \"*.sls\" ! -path \"./.akku/*\" |xargs wc -l\n```\n## Detailed Document\n1. [Scheme-langserver: Treat Scheme Code Editing as the First-Class Concern](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/paper.pdf).\n2. [Catching identifier bindings](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/identifier.md)\n3. [Synchronizing](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/util/synchronize.md)\n4. [Type inference](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/type-inference.md),~~[类型推断](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/type-inference.cn.md)~~(Deprecated, and I'm writing a Chinese book for it)\n5. [API Analysis](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/protocol/analysis.md)\n6. [Deepwiki](https://deepwiki.com/ufo5260987423/scheme-langserver)\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=ufo5260987423/scheme-langserver&type=Date)](https://star-history.com/#ufo5260987423/scheme-langserver)\n\n## Contributors\n\n![Contributors](https://contrib.rocks/image?repo=ufo5260987423/scheme-langserver)",
  "origin_sha": "i8bdxDkredZSYF30cehi08nt4c/wbKSSDdwbhUH7Ti4=",
  "translate": "```\n}\n```\n### التكرار مع السجل (Log)\nمع [سجل الإخراج](#output-log) أعلاه، يمكنك استخدام `tests/log-debug.sps` لتكرار الأخطاء:\n1. أعد تسمية `{path-to-log}` (عادةً `~/scheme-langserver.log`) إلى `~/ready-for-analyse.log`;\n2. شغّل `scheme --script tests/log-debug.sps`. إذا كنت ترغب في إعادة إنتاج بيئة متعددة الخيوط (multi-thread)، سيكون متاحاً أيضاً تشغيل `scheme --script tests/log-debug.sps`.\n\n## الاختبار\nتم اختبار جميع الإجراءات الرئيسية وواجهات برمجة التطبيقات تقريبًا. عملي يعتبر بدائياً ولكنه مفيد، ربما تود معرفة ما أنجزته في مجلد `tests` أو ببساطة شغّل الأمر التالي في `{scheme-langserver-root-directory}`\n``` bash\nbash test.sh\n```\n>ملاحظة\nمن الصعب إجراء اختبارات في بيئة متعددة الخيوط. لذا، تركز الاختبارات الحالية على الخيط الواحد فقط.\n\n## استخدام Scheme-langserver لأغراض أخرى\n### Script-Fu في GIMP\nScript-Fu مبني على لغة مفسرة تسمى Scheme، ويعمل باستخدام دوال تتفاعل مع الدوال الداخلية لـ GIMP. باستخدام [هذا المثال](https://dalelane.co.uk/blog/?p=628) من السكريبت، يمكنك تطبيق scheme-langserver مع ملفات السكريبت ذات الامتداد \"SCM\".\n\n### أخرى\n\nحسنًا، أنا مهتم أيضًا بـ [OMN (Opusmodus Notation)](https://opusmodus.com/) وAutoLisp. لكن لا يزال لدي الكثير لأفعله.\n\n## عدّ الشيفرة\n```bash\nfind . -name \"*.sls\" ! -path \"./.akku/*\" |xargs wc -l\n```\n## وثائق مفصلة\n1. [Scheme-langserver: التعامل مع تحرير كود Scheme كأولوية قصوى](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/paper.pdf).\n2. [التقاط ربط المعرفات](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/identifier.md)\n3. [المزامنة](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/util/synchronize.md)\n4. [استنتاج النوع](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/type-inference.md)،~~[类型推断](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/type-inference.cn.md)~~(مهمل، وأنا أكتب كتابًا باللغة الصينية حوله)\n5. [تحليل API](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/protocol/analysis.md)\n6. [Deepwiki](https://deepwiki.com/ufo5260987423/scheme-langserver)\n\n## تاريخ النجوم\n\n[![Star History Chart](https://api.star-history.com/svg?repos=ufo5260987423/scheme-langserver&type=Date)](https://star-history.com/#ufo5260987423/scheme-langserver)\n\n## المساهمون\n\n![Contributors](https://contrib.rocks/image?repo=ufo5260987423/scheme-langserver)\n```",
  "status": "ok"
}