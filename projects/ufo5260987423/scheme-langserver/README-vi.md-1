{
  "id": 1,
  "origin": "\n<div align=\"right\">\n  <details>\n    <summary >üåê Language</summary>\n    <div>\n      <div align=\"right\">\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=en\">English</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ja\">Êó•Êú¨Ë™û</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ko\">ÌïúÍµ≠Ïñ¥</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=th\">‡πÑ‡∏ó‡∏¢</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=fr\">Fran√ßais</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=de\">Deutsch</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=es\">Espa√±ol</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=it\">Itapano</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ru\">–†—É—Å—Å–∫–∏–π</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=pt\">Portugu√™s</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=nl\">Nederlands</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=pl\">Polski</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=tr\">T√ºrk√ße</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=vi\">Ti·∫øng Vi·ªát</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=id\">Bahasa Indonesia</a></p>\n      </div>\n    </div>\n  </details>\n</div>\n\n![](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/logo-no-background.png)\n# Scheme-langserver\n[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/ufo5260987423/scheme-langserver)\n\nYou may read my [paper](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/paper.pdf) and cite like this \n> WANG, Z. (2025, May 12). Scheme-langserver: Treat Scheme Code Editing as the First-Class Concern. The 18th European Lisp Symposium (ELS`25), Zurich. https://doi.org/10.5281/zenodo.15384882\n\nDue to GitHub may block Chinese IP addresses, I have to copy this repository to [here](https://codeberg.org/ufo5260987423/scheme-langserver) and [here](https://gitee.com/ufo5260987423/scheme-langserver). I will continually update all repositories but I can't guarrentee. I now also collaborate with [XmacsLabs](https://github.com/XmacsLabs), you may also find a fork [here](https://github.com/XmacsLabs/scheme-langserver).\n\n<video src=\"https://github.com/user-attachments/assets/893bba98-6709-4fac-a4d3-dc7b6aab46fb\" controls=\"controls\" width=\"500\" height=\"300\"></video>\n\n**Now, VSCode can use scheme-langserver!** Please refere [HERE](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/startup.md).\n\n>NOTE: There're many many bugs in scheme-langserver. I'm just fixing and appealing help from the community. Please be patient.\n\n>NOTE: you can find the auto generated type information [here](https://ufo5260987423.github.io/scheme-langserver/doc/analysis/type-inference-result). It's now mainly used for next-stage-development (maybe include AKKU) and debugging.\n\nImplementing support like autocomplete, goto definition, or documentation on hover is a significant effort for programming. However, comparing to other language like java, python, javascript and c, language server protocol implementation for lisp language are just made in a vacuum. [Geiser](https://gitlab.com/emacs-geiser), [racket langserver](https://github.com/jeapostrophe/racket-langserver) and [swish-lint](https://github.com/becls/swish-lint) etc., their works are all based on `repl`(Read-Eval-Print Loop) or keyword tokenizer instead of programming. For example, if a programmer was coding on an unaccomplished project, in which the codes were not fully executable, [Geiser](https://gitlab.com/emacs-geiser) or any others would only complete top-level binding identifiers listed by `environment-symbols` procedure (for [Chez](https://cisco.github.io/ChezScheme/)), or complete symbols instead of identifiers. Which means for local bindings and unaccomplished codes, though making effort for programming is supposed of the importance mostly, [Geiser](https://gitlab.com/emacs-geiser) and its counterparts help nothing on recognizing identifier's valid scope. Familiar cases occur with goto definition and many other functionalities.\n\nA primary cause is, for scheme and other lisp dialects, their abundant data sets and flexible control structures raise program analysis a big challenge. Especially the macro, it seems like that scheme is mainly used for genius and meta/macro programming. But I say no. Scheme can make many interesting things if a better programming environment is provided. And now you may [**STARTUP HERE**](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/startup.md).\n\nThis package is a language server protocol implementation helping scheme programming. It provides completion, definition and type inference. These functionalities are established on static code analysis with [r6rs standard](http://www.r6rs.org/) and some obvious rules for unaccomplished codes. This package itself and related libraries are published or going to be published with [Akku](https://akkuscm.org/), which is a package manager for Scheme. \n\nThis package also has been tested with [Chez Scheme](https://cisco.github.io/ChezScheme/) versions 9.4 and 9.5. A detailed test on version 10.0.0 will be done after upgrading my laptop OS to a newer version.\n\nI do this open source work just in my spare time and I can contribute many splendid ideas to the community like embedding data flow analysis into scheme-langserver or many other things. And I'm continuously asking for much more donation or funding. You can donate with [this patreon page](https://www.patreon.com/PoorProgrammer/membership) or [Áà±ÂèëÁîµ](https://afdian.com/a/ufo5260987423).\n\n\n## Compilation , Intallation & Configuration is [HERE](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/startup.md)\n\n## Recent Status\nI'll keep fixing bugs, profiling the code, and collecting information for my giant book on homemade type inference system. This will take me about 1 years. Further developments including a [VScode](https://code.visualstudio.com/) plugin and data flow analysis. But actually, I'm now setting this open source work a part-time job, and I can not guarantee a schedule.\n\n## Release \n1.2.9 Now, enjoy type inference!\n\nPrevious releases please refer to [this file](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/release-log.md).\n\n### Features\n1. Top-level and local identifiers binding completion.\n![Top-level and local identifiers binding](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/auto-completion.png \"Top-level and local identifiers binding\")\n2. Goto definition.\n![Goto definition with telescope.nvim](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/definition.png \"Goto Definition with telescope.nvim\")\n3. Compatible with package manager: Akku.\n4. File changes synchronizing and corresponding index changing.\n5. Hover.\n6. References and document highlight (document-scoped references).\n![Find references with telescope.nvim](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/find-references.png \"Find references with telescope.nvim\")\n7. Document symbol.\n![Find document symbols with telescope.nvim](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/document-symbol.png \"find document symbols with telescope.nvim\")\n8. Catching *-syntax(define-syntax, let-syntax, etc.) based local identifier binding. \n9. Cross-platform parallel indexing.\n10. Self-made source code annotator to be compatible with .sps files.\n11. Peephole optimization for API requests with suspendable task.\n12. Type inference with a homemade DSL interpreter(I'm very proud of it!). And now it has been embedded into the auto-completion. As the following figure indicated, the \"length-b\" and \"length-a\" having \"integer?\" type are in the front of those recommended options because they can match the parameter type requiring from \"<=\". \n![Autocompletion with type inference](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/auto-completion-with-type-inference.png \"Autocompletion with type inference\")\nA test in can prove this result, just run `scheme --script tests/protocol/apis/test-completion.sps` and the log file `scheme-langserver.log` would contain results like this:\n```bash\nsend-message\n2023 11 21 11 26 41 967266866\n{\"jsonrpc\":\"2.0\",\"id\":\"3\",\"result\":[{\"label\":\"length-a\"},{\"label\":\"length-b\"},{\"label\":\"lambda\"},{\"label\":\"latin-1-codec\"},{\"label\":\"lcm\"},{\"label\":\"least-fixnum\"},{\"label\":\"length\"},{\"label\":\"let\"},{\"label\":\"let*\"},{\"label\":\"let*-values\"},{\"label\":\"let-syntax\"},{\"label\":\"let-values\"},{\"label\":\"letrec\"},{\"label\":\"letrec*\"},{\"label\":\"letrec-syntax\"},{\"label\":\"lexical-violation?\"},{\"label\":\"list\"},{\"label\":\"list->string\"},{\"label\":\"list->vector\"},{\"label\":\"list-ref\"},{\"label\":\"list-sort\"},{\"label\":\"list-tail\"},{\"label\":\"list?\"},{\"label\":\"log\"},{\"label\":\"lookahead-char\"},{\"label\":\"lookahead-u8\"}]}\n```\n13. Abstract interpreter for identifier catching among different file extensions like scm, ss, sps, sls and sld.\n\n### TODOs\n14. Renaming. \n15. Fully compatible with [r6rs standard](http://www.r6rs.org/).\n16. Step-by-step macro expander: well, I actually have implemented one and I wanted to make it a key step catching identifier binding in self-defined macros. Now, I find this catching is much harder than I thought, and the expander I don't know where it could work.\n17. Code eval.",
  "origin_sha": "EUEvRAM1Xn8cCqrPvuBQ0V6xXYO3O33rxE42JkAjX+s=",
  "translate": "<div align=\"right\">\n  <details>\n    <summary >üåê Ng√¥n ng·ªØ</summary>\n    <div>\n      <div align=\"right\">\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=en\">English</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ja\">Êó•Êú¨Ë™û</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ko\">ÌïúÍµ≠Ïñ¥</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=th\">‡πÑ‡∏ó‡∏¢</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=fr\">Fran√ßais</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=de\">Deutsch</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=es\">Espa√±ol</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=it\">Itapano</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ru\">–†—É—Å—Å–∫–∏–π</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=pt\">Portugu√™s</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=nl\">Nederlands</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=pl\">Polski</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=tr\">T√ºrk√ße</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=vi\">Ti·∫øng Vi·ªát</a></p>\n        <p><a href=\"https://openaitx.github.io/view.html?user=ufo5260987423&project=scheme-langserver&lang=id\">Bahasa Indonesia</a></p>\n      </div>\n    </div>\n  </details>\n</div>\n\n![](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/logo-no-background.png)\n# Scheme-langserver\n[![Ask DeepWiki](https://deepwiki.com/badge.svg)](https://deepwiki.com/ufo5260987423/scheme-langserver)\n\nB·∫°n c√≥ th·ªÉ ƒë·ªçc [b√†i b√°o](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/paper.pdf) c·ªßa t√¥i v√† tr√≠ch d·∫´n nh∆∞ sau\n> WANG, Z. (2025, May 12). Scheme-langserver: Treat Scheme Code Editing as the First-Class Concern. The 18th European Lisp Symposium (ELS`25), Zurich. https://doi.org/10.5281/zenodo.15384882\n\nDo GitHub c√≥ th·ªÉ ch·∫∑n c√°c ƒë·ªãa ch·ªâ IP Trung Qu·ªëc, t√¥i ph·∫£i sao ch√©p kho l∆∞u tr·ªØ n√†y sang [ƒë√¢y](https://codeberg.org/ufo5260987423/scheme-langserver) v√† [ƒë√¢y](https://gitee.com/ufo5260987423/scheme-langserver). T√¥i s·∫Ω ti·∫øp t·ª•c c·∫≠p nh·∫≠t t·∫•t c·∫£ c√°c kho l∆∞u tr·ªØ nh∆∞ng kh√¥ng th·ªÉ ƒë·∫£m b·∫£o. Hi·ªán t·∫°i t√¥i c≈©ng h·ª£p t√°c v·ªõi [XmacsLabs](https://github.com/XmacsLabs), b·∫°n c≈©ng c√≥ th·ªÉ t√¨m th·∫•y m·ªôt nh√°nh [t·∫°i ƒë√¢y](https://github.com/XmacsLabs/scheme-langserver).\n\n<video src=\"https://github.com/user-attachments/assets/893bba98-6709-4fac-a4d3-dc7b6aab46fb\" controls=\"controls\" width=\"500\" height=\"300\"></video>\n\n**Hi·ªán t·∫°i, VSCode ƒë√£ c√≥ th·ªÉ s·ª≠ d·ª•ng scheme-langserver!** Vui l√≤ng tham kh·∫£o [T·∫†I ƒê√ÇY](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/startup.md).\n\n>L∆ØU √ù: C√≥ r·∫•t nhi·ªÅu l·ªói trong scheme-langserver. T√¥i ƒëang s·ª≠a v√† k√™u g·ªçi s·ª± gi√∫p ƒë·ª° t·ª´ c·ªông ƒë·ªìng. Vui l√≤ng ki√™n nh·∫´n.\n\n>L∆ØU √ù: b·∫°n c√≥ th·ªÉ t√¨m th√¥ng tin ki·ªÉu d·ªØ li·ªáu ƒë∆∞·ª£c t·∫°o t·ª± ƒë·ªông [t·∫°i ƒë√¢y](https://ufo5260987423.github.io/scheme-langserver/doc/analysis/type-inference-result). Hi·ªán t·∫°i n√≥ ch·ªß y·∫øu ph·ª•c v·ª• cho ph√°t tri·ªÉn giai ƒëo·∫°n ti·∫øp theo (c√≥ th·ªÉ bao g·ªìm AKKU) v√† g·ª° l·ªói.\n\nVi·ªác hi·ªán th·ª±c c√°c h·ªó tr·ª£ nh∆∞ t·ª± ƒë·ªông ho√†n th√†nh, ƒëi ƒë·∫øn ƒë·ªãnh nghƒ©a, ho·∫∑c hi·ªÉn th·ªã t√†i li·ªáu khi r√™ chu·ªôt l√† m·ªôt n·ªó l·ª±c l·ªõn ƒë·ªëi v·ªõi l·∫≠p tr√¨nh. Tuy nhi√™n, so v·ªõi c√°c ng√¥n ng·ªØ kh√°c nh∆∞ java, python, javascript v√† c, vi·ªác tri·ªÉn khai ng√¥n ng·ªØ server protocol cho c√°c ng√¥n ng·ªØ lisp ch·ªâ ƒë∆∞·ª£c th·ª±c hi·ªán trong m√¥i tr∆∞·ªùng thi·∫øu th·ªën. [Geiser](https://gitlab.com/emacs-geiser), [racket langserver](https://github.com/jeapostrophe/racket-langserver) v√† [swish-lint](https://github.com/becls/swish-lint) v.v..., t·∫•t c·∫£ ƒë·ªÅu d·ª±a tr√™n `repl` (Read-Eval-Print Loop) ho·∫∑c b·ªô t√°ch t·ª´ kh√≥a thay v√¨ l·∫≠p tr√¨nh th·ª±c th·ª•. V√≠ d·ª•, n·∫øu m·ªôt l·∫≠p tr√¨nh vi√™n ƒëang vi·∫øt tr√™n m·ªôt d·ª± √°n ch∆∞a ho√†n th√†nh, trong ƒë√≥ m√£ ngu·ªìn ch∆∞a ho√†n to√†n c√≥ th·ªÉ th·ª±c thi, [Geiser](https://gitlab.com/emacs-geiser) ho·∫∑c b·∫•t k·ª≥ c√¥ng c·ª• n√†o kh√°c ch·ªâ c√≥ th·ªÉ ho√†n th√†nh c√°c ƒë·ªãnh danh li√™n k·∫øt ·ªü c·∫•p cao nh·∫•t ƒë∆∞·ª£c li·ªát k√™ b·ªüi th·ªß t·ª•c `environment-symbols` (d√†nh cho [Chez](https://cisco.github.io/ChezScheme/)), ho·∫∑c ho√†n th√†nh k√Ω hi·ªáu thay v√¨ ƒë·ªãnh danh. ƒêi·ªÅu n√†y c√≥ nghƒ©a l√† ƒë·ªëi v·ªõi c√°c li√™n k·∫øt c·ª•c b·ªô v√† m√£ ch∆∞a ho√†n th√†nh, m·∫∑c d√π vi·ªác h·ªó tr·ª£ l·∫≠p tr√¨nh l√† r·∫•t quan tr·ªçng, [Geiser](https://gitlab.com/emacs-geiser) v√† c√°c c√¥ng c·ª• t∆∞∆°ng t·ª± ho√†n to√†n kh√¥ng gi√∫p √≠ch g√¨ trong vi·ªác nh·∫≠n di·ªán ph·∫°m vi h·ª£p l·ªá c·ªßa ƒë·ªãnh danh. C√°c tr∆∞·ªùng h·ª£p t∆∞∆°ng t·ª± c≈©ng x·∫£y ra v·ªõi ch·ª©c nƒÉng ƒëi ƒë·∫øn ƒë·ªãnh nghƒ©a v√† nhi·ªÅu ch·ª©c nƒÉng kh√°c.\n\nM·ªôt nguy√™n nh√¢n ch√≠nh l√† ƒë·ªëi v·ªõi scheme v√† c√°c bi·∫øn th·ªÉ lisp kh√°c, b·ªô d·ªØ li·ªáu phong ph√∫ v√† c·∫•u tr√∫c ƒëi·ªÅu khi·ªÉn linh ho·∫°t khi·∫øn ph√¢n t√≠ch ch∆∞∆°ng tr√¨nh tr·ªü n√™n ƒë·∫ßy th√°ch th·ª©c. ƒê·∫∑c bi·ªát l√† macro, d∆∞·ªùng nh∆∞ scheme ch·ªß y·∫øu ƒë∆∞·ª£c s·ª≠ d·ª•ng cho c√°c thi√™n t√†i v√† l·∫≠p tr√¨nh meta/macro. Nh∆∞ng t√¥i kh√¥ng nghƒ© v·∫≠y. Scheme c√≥ th·ªÉ l√†m ƒë∆∞·ª£c nhi·ªÅu ƒëi·ªÅu th√∫ v·ªã n·∫øu c√≥ m·ªôt m√¥i tr∆∞·ªùng l·∫≠p tr√¨nh t·ªët h∆°n. V√† b√¢y gi·ªù b·∫°n c√≥ th·ªÉ [**B·∫ÆT ƒê·∫¶U T·∫†I ƒê√ÇY**](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/startup.md).\n\nG√≥i n√†y l√† m·ªôt hi·ªán th·ª±c language server protocol gi√∫p l·∫≠p tr√¨nh scheme. N√≥ cung c·∫•p t·ª± ƒë·ªông ho√†n th√†nh, ƒëi ƒë·∫øn ƒë·ªãnh nghƒ©a v√† suy lu·∫≠n ki·ªÉu d·ªØ li·ªáu. C√°c ch·ª©c nƒÉng n√†y ƒë∆∞·ª£c x√¢y d·ª±ng d·ª±a tr√™n ph√¢n t√≠ch m√£ tƒ©nh theo [chu·∫©n r6rs](http://www.r6rs.org/) v√† m·ªôt s·ªë quy t·∫Øc r√µ r√†ng cho m√£ ch∆∞a ho√†n thi·ªán. G√≥i n√†y c√πng c√°c th∆∞ vi·ªán li√™n quan ƒë∆∞·ª£c ph√°t h√†nh ho·∫∑c s·∫Ω ph√°t h√†nh v·ªõi [Akku](https://akkuscm.org/), tr√¨nh qu·∫£n l√Ω g√≥i cho Scheme.\n\nG√≥i n√†y c≈©ng ƒë√£ ƒë∆∞·ª£c ki·ªÉm th·ª≠ v·ªõi [Chez Scheme](https://cisco.github.io/ChezScheme/) phi√™n b·∫£n 9.4 v√† 9.5. M·ªôt b√†i ki·ªÉm th·ª≠ chi ti·∫øt tr√™n phi√™n b·∫£n 10.0.0 s·∫Ω ƒë∆∞·ª£c th·ª±c hi·ªán sau khi t√¥i n√¢ng c·∫•p h·ªá ƒëi·ªÅu h√†nh laptop l√™n phi√™n b·∫£n m·ªõi h∆°n.\n\nT√¥i th·ª±c hi·ªán c√¥ng vi·ªác m√£ ngu·ªìn m·ªü n√†y ch·ªâ v√†o th·ªùi gian r·∫£nh v√† t√¥i c√≥ th·ªÉ ƒë√≥ng g√≥p nhi·ªÅu √Ω t∆∞·ªüng tuy·ªát v·ªùi cho c·ªông ƒë·ªìng nh∆∞ t√≠ch h·ª£p ph√¢n t√≠ch lu·ªìng d·ªØ li·ªáu v√†o scheme-langserver ho·∫∑c nhi·ªÅu th·ª© kh√°c. V√† t√¥i li√™n t·ª•c k√™u g·ªçi nhi·ªÅu ƒë√≥ng g√≥p ho·∫∑c t√†i tr·ª£ h∆°n. B·∫°n c√≥ th·ªÉ ·ªßng h·ªô qua [trang patreon n√†y](https://www.patreon.com/PoorProgrammer/membership) ho·∫∑c [Áà±ÂèëÁîµ](https://afdian.com/a/ufo5260987423).\n\n\n## Bi√™n d·ªãch, C√†i ƒë·∫∑t & C·∫•u h√¨nh ·ªü [ƒê√ÇY](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/startup.md)\n\n## Tr·∫°ng th√°i g·∫ßn ƒë√¢y\nT√¥i s·∫Ω ti·∫øp t·ª•c s·ª≠a l·ªói, t·ªëi ∆∞u m√£ ngu·ªìn, v√† thu th·∫≠p th√¥ng tin cho cu·ªën s√°ch l·ªõn v·ªÅ h·ªá th·ªëng suy lu·∫≠n ki·ªÉu t·ª± ch·∫ø. Vi·ªác n√†y s·∫Ω m·∫•t kho·∫£ng 1 nƒÉm. C√°c ph√°t tri·ªÉn ti·∫øp theo bao g·ªìm m·ªôt plugin [VScode](https://code.visualstudio.com/) v√† ph√¢n t√≠ch lu·ªìng d·ªØ li·ªáu. Nh∆∞ng th·∫≠t ra, hi·ªán t·∫°i t√¥i ƒëang coi c√¥ng vi·ªác m√£ ngu·ªìn m·ªü n√†y l√† b√°n th·ªùi gian, v√† t√¥i kh√¥ng th·ªÉ ƒë·∫£m b·∫£o ti·∫øn ƒë·ªô.\n\n## Ph√°t h√†nh\n1.2.9 Hi·ªán t·∫°i, h√£y tr·∫£i nghi·ªám suy lu·∫≠n ki·ªÉu d·ªØ li·ªáu!\n\nC√°c b·∫£n ph√°t h√†nh tr∆∞·ªõc vui l√≤ng tham kh·∫£o [t·ªáp n√†y](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/release-log.md).\n\n### T√≠nh nƒÉng\n1. Ho√†n th√†nh li√™n k·∫øt ƒë·ªãnh danh ·ªü c·∫£ c·∫•p cao nh·∫•t v√† c·ª•c b·ªô.\n![Top-level and local identifiers binding](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/auto-completion.png \"Top-level and local identifiers binding\")\n2. ƒêi ƒë·∫øn ƒë·ªãnh nghƒ©a.\n![Goto definition with telescope.nvim](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/definition.png \"Goto Definition with telescope.nvim\")\n3. T∆∞∆°ng th√≠ch v·ªõi tr√¨nh qu·∫£n l√Ω g√≥i: Akku.\n4. ƒê·ªìng b·ªô h√≥a thay ƒë·ªïi t·ªáp v√† c·∫≠p nh·∫≠t ch·ªâ m·ª•c t∆∞∆°ng ·ª©ng.\n5. Hi·ªÉn th·ªã t√†i li·ªáu khi r√™ chu·ªôt.\n6. T√¨m tham chi·∫øu v√† t√¥ s√°ng t√†i li·ªáu (tham chi·∫øu trong ph·∫°m vi t√†i li·ªáu).\n![Find references with telescope.nvim](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/find-references.png \"Find references with telescope.nvim\")\n7. K√Ω hi·ªáu t√†i li·ªáu.\n![Find document symbols with telescope.nvim](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/document-symbol.png \"find document symbols with telescope.nvim\")\n8. B·∫Øt c√°c ƒë·ªãnh danh c·ª•c b·ªô d·ª±a tr√™n *-syntax (define-syntax, let-syntax, v.v.).\n9. Ch·ªâ m·ª•c song song ƒëa n·ªÅn t·∫£ng.\n10. C√¥ng c·ª• ch√∫ th√≠ch m√£ ngu·ªìn t·ª± ph√°t tri·ªÉn ƒë·ªÉ t∆∞∆°ng th√≠ch v·ªõi t·ªáp .sps.\n11. T·ªëi ∆∞u peephole cho c√°c y√™u c·∫ßu API v·ªõi t√°c v·ª• c√≥ th·ªÉ t·∫°m d·ª´ng.\n12. Suy lu·∫≠n ki·ªÉu d·ªØ li·ªáu v·ªõi th√¥ng d·ªãch DSL t·ª± ch·∫ø (t√¥i r·∫•t t·ª± h√†o v·ªÅ n√≥!). V√† hi·ªán t·∫°i n√≥ ƒë√£ ƒë∆∞·ª£c t√≠ch h·ª£p v√†o t√≠nh nƒÉng t·ª± ƒë·ªông ho√†n th√†nh. Nh∆∞ minh h·ªça ·ªü h√¨nh d∆∞·ªõi, \"length-b\" v√† \"length-a\" c√≥ ki·ªÉu \"integer?\" ƒë∆∞·ª£c ƒë∆∞a l√™n ƒë·∫ßu c√°c ƒë·ªÅ xu·∫•t v√¨ ch√∫ng ph√π h·ª£p v·ªõi ki·ªÉu tham s·ªë m√† \"<=\" y√™u c·∫ßu.\n![Autocompletion with type inference](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/figure/auto-completion-with-type-inference.png \"Autocompletion with type inference\")\nM·ªôt b√†i ki·ªÉm th·ª≠ c√≥ th·ªÉ ch·ª©ng minh k·∫øt qu·∫£ n√†y, ch·ªâ c·∫ßn ch·∫°y `scheme --script tests/protocol/apis/test-completion.sps` v√† t·ªáp log `scheme-langserver.log` s·∫Ω ch·ª©a k·∫øt qu·∫£ nh∆∞ sau:\n```bash\nsend-message\n2023 11 21 11 26 41 967266866\n{\"jsonrpc\":\"2.0\",\"id\":\"3\",\"result\":[{\"label\":\"length-a\"},{\"label\":\"length-b\"},{\"label\":\"lambda\"},{\"label\":\"latin-1-codec\"},{\"label\":\"lcm\"},{\"label\":\"least-fixnum\"},{\"label\":\"length\"},{\"label\":\"let\"},{\"label\":\"let*\"},{\"label\":\"let*-values\"},{\"label\":\"let-syntax\"},{\"label\":\"let-values\"},{\"label\":\"letrec\"},{\"label\":\"letrec*\"},{\"label\":\"letrec-syntax\"},{\"label\":\"lexical-violation?\"},{\"label\":\"list\"},{\"label\":\"list->string\"},{\"label\":\"list->vector\"},{\"label\":\"list-ref\"},{\"label\":\"list-sort\"},{\"label\":\"list-tail\"},{\"label\":\"list?\"},{\"label\":\"log\"},{\"label\":\"lookahead-char\"},{\"label\":\"lookahead-u8\"}]}\n```\n13. Th√¥ng d·ªãch tr·ª´u t∆∞·ª£ng ƒë·ªÉ b·∫Øt ƒë·ªãnh danh gi·ªØa c√°c ƒëu√¥i t·ªáp kh√°c nhau nh∆∞ scm, ss, sps, sls v√† sld.\n\n### C·∫¶N L√ÄM (TODOs)\n14. ƒê·ªïi t√™n.\n15. T∆∞∆°ng th√≠ch ho√†n to√†n v·ªõi [chu·∫©n r6rs](http://www.r6rs.org/).\n16. B·ªô m·ªü r·ªông macro t·ª´ng b∆∞·ªõc: th·ª±c ra t√¥i ƒë√£ hi·ªán th·ª±c m·ªôt c√°i v√† t√¥i mu·ªën bi·∫øn n√≥ th√†nh b∆∞·ªõc then ch·ªët ƒë·ªÉ b·∫Øt li√™n k·∫øt ƒë·ªãnh danh trong macro t·ª± ƒë·ªãnh nghƒ©a. Hi·ªán t·∫°i t√¥i th·∫•y vi·ªác n√†y kh√≥ h∆°n nhi·ªÅu so v·ªõi t√¥i nghƒ©, v√† b·ªô m·ªü r·ªông n√†y t√¥i ch∆∞a bi·∫øt n√™n d√πng ·ªü ƒë√¢u.\n17. Th·ª±c thi m√£.",
  "status": "ok"
}