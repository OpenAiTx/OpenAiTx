{
  "id": 2,
  "origin": "}\n```\n### Recurring with Log \nWith above [output log](#output-log), you may use `tests/log-debug.sps` recurring bugs:\n1. Rename `{path-to-log}`(usually `~/scheme-langserver.log`) as `~/ready-for-analyse.log`;\n2. run `scheme --script tests/log-debug.sps`. If you want to re-produce the multi-thread environment, it would also be available to run `scheme --script tests/log-debug.sps`.\n\n## Test\nAlmost all key procedures and APIs are tested. My work is just so rough but useful, maybe you would like to find what I've done in `tests` directory or just run following command in `{scheme-langserver-root-directory}`\n``` bash\nbash test.sh\n```\n>NOTE\nIt's hard to do test with threaded environment. So, current tests focus on single thread.\n\n## Use Scheme-langserver for Other Purpose\n### Script-Fu in GIMP\nScript-Fu is based on an interpreted language called Scheme, and works by using functions that interact with GIMP's internal functions. Taking [this page](https://dalelane.co.uk/blog/?p=628)'s script as an example, you can apply scheme-langserver with script file with \"SCM\" extension.\n\n### Others\n\nWell, I'm also interested in [OMN (Opusmodus Notation)](https://opusmodus.com/) and AutoLisp. But I still have many things to do.\n\n## Code Count\n```bash\nfind . -name \"*.sls\" ! -path \"./.akku/*\" |xargs wc -l\n```\n## Detailed Document\n1. [Scheme-langserver: Treat Scheme Code Editing as the First-Class Concern](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/paper.pdf).\n2. [Catching identifier bindings](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/identifier.md)\n3. [Synchronizing](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/util/synchronize.md)\n4. [Type inference](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/type-inference.md),~~[类型推断](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/type-inference.cn.md)~~(Deprecated, and I'm writing a Chinese book for it)\n5. [API Analysis](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/protocol/analysis.md)\n6. [Deepwiki](https://deepwiki.com/ufo5260987423/scheme-langserver)\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=ufo5260987423/scheme-langserver&type=Date)](https://star-history.com/#ufo5260987423/scheme-langserver)\n\n## Contributors\n\n![Contributors](https://contrib.rocks/image?repo=ufo5260987423/scheme-langserver)",
  "origin_sha": "i8bdxDkredZSYF30cehi08nt4c/wbKSSDdwbhUH7Ti4=",
  "translate": "}\n```\n### ログを使った再現\n上記の[出力ログ](#output-log)を使用して、`tests/log-debug.sps`でバグを再現できます。\n1. `{path-to-log}`（通常は `~/scheme-langserver.log`）を `~/ready-for-analyse.log` にリネームします。\n2. `scheme --script tests/log-debug.sps` を実行します。マルチスレッド環境を再現したい場合も、`scheme --script tests/log-debug.sps` を実行することで可能です。\n\n## テスト\nほとんど全ての主要な手続きとAPIはテストされています。私の作業は粗いですが役立つものです。`tests`ディレクトリで私が行ったことを見つけるか、もしくは `{scheme-langserver-root-directory}` で以下のコマンドを実行してみてください。\n``` bash\nbash test.sh\n```\n>注意  \nスレッド環境でのテストは難しいです。そのため、現在のテストはシングルスレッドに焦点を当てています。\n\n## 他の用途でのScheme-langserverの利用\n### GIMPでのScript-Fu\nScript-FuはSchemeというインタプリタ言語に基づいており、GIMPの内部関数とやり取りする関数を使って動作します。[このページ](https://dalelane.co.uk/blog/?p=628)のスクリプトを例に取ると、拡張子「SCM」のスクリプトファイルに対してscheme-langserverを適用できます。\n\n### その他\n\n私は[OMN (Opusmodus Notation)](https://opusmodus.com/)やAutoLispにも興味があります。しかし、まだやるべきことがたくさんあります。\n\n## コード行数のカウント\n```bash\nfind . -name \"*.sls\" ! -path \"./.akku/*\" |xargs wc -l\n```\n## 詳細ドキュメント\n1. [Scheme-langserver: Schemeコード編集を第一級の関心事として扱う](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/paper.pdf)\n2. [識別子バインディングの捕捉](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/identifier.md)\n3. [同期処理](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/util/synchronize.md)\n4. [型推論](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/type-inference.md)、~~[类型推断](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/analysis/type-inference.cn.md)~~（非推奨、現在中国語の書籍を執筆中）\n5. [API解析](https://raw.githubusercontent.com/ufo5260987423/scheme-langserver/main/./doc/protocol/analysis.md)\n6. [Deepwiki](https://deepwiki.com/ufo5260987423/scheme-langserver)\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=ufo5260987423/scheme-langserver&type=Date)](https://star-history.com/#ufo5260987423/scheme-langserver)\n\n## コントリビューター\n\n![Contributors](https://contrib.rocks/image?repo=ufo5260987423/scheme-langserver)",
  "status": "ok"
}