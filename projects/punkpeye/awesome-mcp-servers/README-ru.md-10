{
  "id": 10,
  "origin": "- [Seym0n/tiktok-mcp](https://github.com/Seym0n/tiktok-mcp) üìá ‚òÅÔ∏è - Interact with TikTok videos\n- [Shopify/dev-mcp](https://github.com/Shopify/dev-mcp) üìá ‚òÅÔ∏è - Model Context Protocol (MCP) server that interacts with Shopify Dev.\n- [sirmews/apple-notes-mcp](https://github.com/sirmews/apple-notes-mcp) üêç üè† - Allows the AI to read from your local Apple Notes database (macOS only)\n- [sooperset/mcp-atlassian](https://github.com/sooperset/mcp-atlassian) üêç ‚òÅÔ∏è - MCP server for Atlassian products (Confluence and Jira). Supports Confluence Cloud, Jira Cloud, and Jira Server/Data Center. Provides comprehensive tools for searching, reading, creating, and managing content across Atlassian workspaces.\n- [suekou/mcp-notion-server](https://github.com/suekou/mcp-notion-server) üìá üè† - Interacting with Notion API\n- [tacticlaunch/mcp-linear](https://github.com/tacticlaunch/mcp-linear) üìá ‚òÅÔ∏è üçé ü™ü üêß - Integrates with Linear project management system\n- [tanigami/mcp-server-perplexity](https://github.com/tanigami/mcp-server-perplexity) üêç ‚òÅÔ∏è - Interacting with Perplexity API.\n- [tevonsb/homeassistant-mcp](https://github.com/tevonsb/homeassistant-mcp) üìá üè† - Access Home Assistant data and control devices (lights, switches, thermostats, etc).\n- [tomekkorbak/oura-mcp-server](https://github.com/tomekkorbak/oura-mcp-server) üêç ‚òÅÔ∏è - An MCP server for Oura, an app for tracking sleep\n- [UnitVectorY-Labs/mcp-graphql-forge](https://github.com/UnitVectorY-Labs/mcp-graphql-forge) üèéÔ∏è ‚òÅÔ∏è üçé ü™ü üêß - A lightweight, configuration-driven MCP server that exposes curated GraphQL queries as modular tools, enabling intentional API interactions from your agents.\n- [kw510/strava-mcp](https://github.com/kw510/strava-mcp) üìá ‚òÅÔ∏è - An MCP server for Strava, an app for tracking physical exercise\n- [wanaku-ai/wanaku](https://github.com/wanaku-ai/wanaku) - ‚òÅÔ∏è üè† The Wanaku MCP Router is a SSE-based MCP server that provides an extensible routing engine that allows integrating your enterprise systems with AI agents.\n- [wong2/mcp-cli](https://github.com/wong2/mcp-cli) üìá üè† - CLI tool for testing MCP servers\n- [ws-mcp](https://github.com/nick1udwig/ws-mcp) - Wrap MCP servers with a WebSocket (for use with [kitbitz](https://github.com/nick1udwig/kibitz))\n- [yuna0x0/hackmd-mcp](https://github.com/yuna0x0/hackmd-mcp) üìá ‚òÅÔ∏è - Allows AI models to interact with [HackMD](https://hackmd.io)\n- [ZeparHyfar/mcp-datetime](https://github.com/ZeparHyfar/mcp-datetime) - MCP server providing date and time functions in various formats\n- [zueai/mcp-manager](https://github.com/zueai/mcp-manager) üìá ‚òÅÔ∏è - Simple Web UI to install and manage MCP servers for Claude Desktop App.\n- [HenryHaoson/Yuque-MCP-Server](https://github.com/HenryHaoson/Yuque-MCP-Server) - üìá ‚òÅÔ∏è A Model-Context-Protocol (MCP) server for integrating with Yuque API, allowing AI models to manage documents, interact with knowledge bases, search content, and access analytics data from the Yuque platform.\n- [Mtehabsim/ScreenPilot](https://github.com/Mtehabsim/ScreenPilot) üêç üè† - enables AI to fully control and access GUI interactions by providing tools for mouse and keyboard, ideal for general automation, education, and experimentation.\n- [tumf/web3-mcp](https://github.com/tumf/web3-mcp) üêç ‚òÅÔ∏è - An MCP server implementation wrapping Ankr Advanced API. Access to NFT, token, and blockchain data across multiple chains including Ethereum, BSC, Polygon, Avalanche, and more.\n- [danielkennedy1/pdf-tools-mcp](https://github.com/danielkennedy1/pdf-tools-mcp) üêç - PDF download, view & manipulation utilities.\n- [dotemacs/domain-lookup-mcp](https://github.com/dotemacs/domain-lookup-mcp) üèéÔ∏è - Domain name lookup service, first via [RDAP](https://en.wikipedia.org/wiki/Registration_Data_Access_Protocol) and then as a fallback via [WHOIS](https://en.wikipedia.org/wiki/WHOIS)\n- [Klavis-AI/YouTube](https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube) üêç üìá - Extract and convert YouTube video information.\n- [ttommyth/interactive-mcp](https://github.com/ttommyth/interactive-mcp) üìá üè† üçé ü™ü üêß - Enables interactive LLM workflows by adding local user prompts and chat capabilities directly into the MCP loop.\n- [olalonde/mcp-human](https://github.com/olalonde/mcp-human) üìá ‚òÅÔ∏è - When your LLM needs human assistance (through AWS Mechanical Turk)\n- [gwbischof/free-will-mcp](https://github.com/gwbischof/free-will-mcp) üêç üè† - Give your AI free will tools. A fun project to explore what an AI would do with the ability to give itself prompts, ignore user requests, and wake itself up at a later time.\n- [caol64/wenyan-mcp](https://github.com/caol64/wenyan-mcp) üìá üè† üçé ü™ü üêß - Wenyan MCP Server, which lets AI automatically format Markdown articles and publish them to WeChat GZH.\n\n## Frameworks\n\n> [!NOTE]\n> More frameworks, utilities, and other developer tools are available at https://github.com/punkpeye/awesome-mcp-devtools\n\n- [FastMCP](https://github.com/jlowin/fastmcp) üêç - A high-level framework for building MCP servers in Python\n- [FastMCP](https://github.com/punkpeye/fastmcp) üìá - A high-level framework for building MCP servers in TypeScript\n\n## Tips and Tricks\n\n### Official prompt to inform LLMs how to use MCP\n\nWant to ask Claude about Model Context Protocol?\n\nCreate a Project, then add this file to it:\n\nhttps://modelcontextprotocol.io/llms-full.txt\n\nNow Claude can answer questions about writing MCP servers and how they work\n\n- https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/\n\n## Star History\n\n<a href=\"https://star-history.com/#punkpeye/awesome-mcp-servers&Date\">\n <picture>\n   <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date&theme=dark\" />\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n   <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n </picture>\n</a>\n",
  "translate": "- [Seym0n/tiktok-mcp](https://github.com/Seym0n/tiktok-mcp) üìá ‚òÅÔ∏è - –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –≤–∏–¥–µ–æ TikTok\n- [Shopify/dev-mcp](https://github.com/Shopify/dev-mcp) üìá ‚òÅÔ∏è - –°–µ—Ä–≤–µ—Ä Model Context Protocol (MCP), –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—â–∏–π —Å Shopify Dev.\n- [sirmews/apple-notes-mcp](https://github.com/sirmews/apple-notes-mcp) üêç üè† - –ü–æ–∑–≤–æ–ª—è–µ—Ç –ò–ò —á–∏—Ç–∞—Ç—å –≤–∞—à—É –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Apple Notes (—Ç–æ–ª—å–∫–æ macOS)\n- [sooperset/mcp-atlassian](https://github.com/sooperset/mcp-atlassian) üêç ‚òÅÔ∏è - MCP —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ Atlassian (Confluence –∏ Jira). –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Confluence Cloud, Jira Cloud –∏ Jira Server/Data Center. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —à–∏—Ä–æ–∫–∏–π –Ω–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞, —á—Ç–µ–Ω–∏—è, —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –≤ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞—Ö Atlassian.\n- [suekou/mcp-notion-server](https://github.com/suekou/mcp-notion-server) üìá üè† - –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å Notion API\n- [tacticlaunch/mcp-linear](https://github.com/tacticlaunch/mcp-linear) üìá ‚òÅÔ∏è üçé ü™ü üêß - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏ Linear\n- [tanigami/mcp-server-perplexity](https://github.com/tanigami/mcp-server-perplexity) üêç ‚òÅÔ∏è - –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å Perplexity API.\n- [tevonsb/homeassistant-mcp](https://github.com/tevonsb/homeassistant-mcp) üìá üè† - –î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º Home Assistant –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏ (–æ—Å–≤–µ—â–µ–Ω–∏–µ, –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–∏, —Ç–µ—Ä–º–æ—Å—Ç–∞—Ç—ã –∏ –¥—Ä.).\n- [tomekkorbak/oura-mcp-server](https://github.com/tomekkorbak/oura-mcp-server) üêç ‚òÅÔ∏è - MCP —Å–µ—Ä–≤–µ—Ä –¥–ª—è Oura, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–Ω–∞\n- [UnitVectorY-Labs/mcp-graphql-forge](https://github.com/UnitVectorY-Labs/mcp-graphql-forge) üèéÔ∏è ‚òÅÔ∏è üçé ü™ü üêß - –õ–µ–≥–∫–æ–≤–µ—Å–Ω—ã–π, —É–ø—Ä–∞–≤–ª—è–µ–º—ã–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π MCP —Å–µ—Ä–≤–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã GraphQL –∫–∞–∫ –º–æ–¥—É–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è —Ü–µ–ª–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å API –¥–ª—è –≤–∞—à–∏—Ö –∞–≥–µ–Ω—Ç–æ–≤.\n- [kw510/strava-mcp](https://github.com/kw510/strava-mcp) üìá ‚òÅÔ∏è - MCP —Å–µ—Ä–≤–µ—Ä –¥–ª—è Strava, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n- [wanaku-ai/wanaku](https://github.com/wanaku-ai/wanaku) - ‚òÅÔ∏è üè† Wanaku MCP Router ‚Äî MCP —Å–µ—Ä–≤–µ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ SSE, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–∏–π —Ä–∞—Å—à–∏—Ä—è–µ–º—ã–π –º–µ—Ö–∞–Ω–∏–∑–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —Å –ò–ò-–∞–≥–µ–Ω—Ç–∞–º–∏.\n- [wong2/mcp-cli](https://github.com/wong2/mcp-cli) üìá üè† - CLI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è MCP —Å–µ—Ä–≤–µ—Ä–æ–≤\n- [ws-mcp](https://github.com/nick1udwig/ws-mcp) - –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º WebSocket (–¥–ª—è —Ä–∞–±–æ—Ç—ã —Å [kitbitz](https://github.com/nick1udwig/kibitz))\n- [yuna0x0/hackmd-mcp](https://github.com/yuna0x0/hackmd-mcp) üìá ‚òÅÔ∏è - –ü–æ–∑–≤–æ–ª—è–µ—Ç –ò–ò-–º–æ–¥–µ–ª—è–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å [HackMD](https://hackmd.io)\n- [ZeparHyfar/mcp-datetime](https://github.com/ZeparHyfar/mcp-datetime) - MCP —Å–µ—Ä–≤–µ—Ä, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏–∏ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö\n- [zueai/mcp-manager](https://github.com/zueai/mcp-manager) üìá ‚òÅÔ∏è - –ü—Ä–æ—Å—Ç–æ–π Web-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è MCP —Å–µ—Ä–≤–µ—Ä–∞–º–∏ –¥–ª—è Claude Desktop App.\n- [HenryHaoson/Yuque-MCP-Server](https://github.com/HenryHaoson/Yuque-MCP-Server) - üìá ‚òÅÔ∏è –°–µ—Ä–≤–µ—Ä Model-Context-Protocol (MCP) –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Yuque API, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –ò–ò-–º–æ–¥–µ–ª—è–º —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏, —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–∞–∑–∞–º–∏ –∑–Ω–∞–Ω–∏–π, –∏—Å–∫–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Yuque.\n- [Mtehabsim/ScreenPilot](https://github.com/Mtehabsim/ScreenPilot) üêç üè† - –ü–æ–∑–≤–æ–ª—è–µ—Ç –ò–ò –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–ø—Ä–∞–≤–ª—è—Ç—å –∏ –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é —Å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –º—ã—à–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã; –∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏, –æ–±—É—á–µ–Ω–∏—è –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤.\n- [tumf/web3-mcp](https://github.com/tumf/web3-mcp) üêç ‚òÅÔ∏è - –†–µ–∞–ª–∏–∑–∞—Ü–∏—è MCP —Å–µ—Ä–≤–µ—Ä–∞, –æ–±–æ—Ä–∞—á–∏–≤–∞—é—â–∞—è Ankr Advanced API. –î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º NFT, —Ç–æ–∫–µ–Ω–æ–≤ –∏ –±–ª–æ–∫—á–µ–π–Ω–∞ –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–µ—Ç—è—Ö, –≤–∫–ª—é—á–∞—è Ethereum, BSC, Polygon, Avalanche –∏ –¥—Ä.\n- [danielkennedy1/pdf-tools-mcp](https://github.com/danielkennedy1/pdf-tools-mcp) üêç - –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏, –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ PDF.\n- [dotemacs/domain-lookup-mcp](https://github.com/dotemacs/domain-lookup-mcp) üèéÔ∏è - –°–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞ –¥–æ–º–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω: —Å–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ [RDAP](https://en.wikipedia.org/wiki/Registration_Data_Access_Protocol), –∑–∞—Ç–µ–º, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, —á–µ—Ä–µ–∑ [WHOIS](https://en.wikipedia.org/wiki/WHOIS)\n- [Klavis-AI/YouTube](https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube) üêç üìá - –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ YouTube-–≤–∏–¥–µ–æ.\n- [ttommyth/interactive-mcp](https://github.com/ttommyth/interactive-mcp) üìá üè† üçé ü™ü üêß - –î–æ–±–∞–≤–ª—è–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∏ —á–∞—Ç –ø—Ä—è–º–æ –≤ —Ü–∏–∫–ª MCP, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ LLM-–ø—Ä–æ—Ü–µ—Å—Å—ã.\n- [olalonde/mcp-human](https://github.com/olalonde/mcp-human) üìá ‚òÅÔ∏è - –ö–æ–≥–¥–∞ –≤–∞—à–µ–π LLM —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–º–æ—â—å —á–µ–ª–æ–≤–µ–∫–∞ (—á–µ—Ä–µ–∑ AWS Mechanical Turk)\n- [gwbischof/free-will-mcp](https://github.com/gwbischof/free-will-mcp) üêç üè† - –î–∞–µ—Ç –≤–∞—à–µ–º—É –ò–ò –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å–≤–æ–±–æ–¥–Ω–æ–π –≤–æ–ª–∏. –ó–∞–±–∞–≤–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –ò–ò —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏, –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –±—É–¥–∏—Ç—å —Å–µ–±—è –ø–æ–∑–∂–µ.\n- [caol64/wenyan-mcp](https://github.com/caol64/wenyan-mcp) üìá üè† üçé ü™ü üêß - Wenyan MCP Server –ø–æ–∑–≤–æ–ª—è–µ—Ç –ò–ò –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å Markdown-—Å—Ç–∞—Ç—å–∏ –∏ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∏—Ö –≤ WeChat GZH.\n\n## –§—Ä–µ–π–º–≤–æ—Ä–∫–∏\n\n> [!NOTE]\n> –ë–æ–ª—å—à–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤, —É—Ç–∏–ª–∏—Ç –∏ –¥—Ä—É–≥–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É https://github.com/punkpeye/awesome-mcp-devtools\n\n- [FastMCP](https://github.com/jlowin/fastmcp) üêç - –í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ Python\n- [FastMCP](https://github.com/punkpeye/fastmcp) üìá - –í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ TypeScript\n\n## –°–æ–≤–µ—Ç—ã –∏ —Ö–∏—Ç—Ä–æ—Å—Ç–∏\n\n### –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è LLM –æ —Ç–æ–º, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å MCP\n\n–•–æ—Ç–∏—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å Claude –æ Model Context Protocol?\n\n–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç, –∑–∞—Ç–µ–º –¥–æ–±–∞–≤—å—Ç–µ –≤ –Ω–µ–≥–æ —ç—Ç–æ—Ç —Ñ–∞–π–ª:\n\nhttps://modelcontextprotocol.io/llms-full.txt\n\n–¢–µ–ø–µ—Ä—å Claude —Å–º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏ –∏—Ö —Ä–∞–±–æ—Ç–µ\n\n- https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/\n\n## –ò—Å—Ç–æ—Ä–∏—è –∑–≤—ë–∑–¥\n\n<a href=\"https://star-history.com/#punkpeye/awesome-mcp-servers&Date\">\n <picture>\n   <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date&theme=dark\" />\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n   <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n </picture>\n</a>\n",
  "status": "ok"
}