{
  "id": 1,
  "origin": "# Awesome MCP Servers [![Awesome](https://awesome.re/badge.svg)](https://awesome.re)\n\n[![ไทย](https://img.shields.io/badge/Thai-Click-blue)](README-th.md)\n[![English](https://img.shields.io/badge/English-Click-yellow)](README.md)\n[![繁體中文](https://img.shields.io/badge/繁體中文-點擊查看-orange)](README-zh_TW.md)\n[![简体中文](https://img.shields.io/badge/简体中文-点击查看-orange)](README-zh.md)\n[![日本語](https://img.shields.io/badge/日本語-クリック-青)](README-ja.md)\n[![한국어](https://img.shields.io/badge/한국어-클릭-yellow)](README-ko.md)\n[![Português Brasileiro](https://img.shields.io/badge/Português_Brasileiro-Clique-green)](README-pt_BR.md)\n[![Discord](https://img.shields.io/discord/1312302100125843476?logo=discord&label=discord)](https://glama.ai/mcp/discord)\n[![Subreddit subscribers](https://img.shields.io/reddit/subreddit-subscribers/mcp?style=flat&logo=reddit&label=subreddit)](https://www.reddit.com/r/mcp/)\n\nA curated list of awesome Model Context Protocol (MCP) servers.\n\n* [What is MCP?](#what-is-mcp)\n* [Clients](#clients)\n* [Tutorials](#tutorials)\n* [Community](#community)\n* [Legend](#legend)\n* [Server Implementations](#server-implementations)\n* [Frameworks](#frameworks)\n* [Tips & Tricks](#tips-and-tricks)\n\n## What is MCP?\n\n[MCP](https://modelcontextprotocol.io/) is an open protocol that enables AI models to securely interact with local and remote resources through standardized server implementations. This list focuses on production-ready and experimental MCP servers that extend AI capabilities through file access, database connections, API integrations, and other contextual services.\n\n## Clients\n\nCheckout [awesome-mcp-clients](https://github.com/punkpeye/awesome-mcp-clients/) and [glama.ai/mcp/clients](https://glama.ai/mcp/clients).\n\n> [!TIP]\n> [Glama Chat](https://glama.ai/chat) is a multi-modal AI client with MCP support & [AI gateway](https://glama.ai/gateway).\n\n## Tutorials\n\n* [Model Context Protocol (MCP) Quickstart](https://glama.ai/blog/2024-11-25-model-context-protocol-quickstart)\n* [Setup Claude Desktop App to Use a SQLite Database](https://youtu.be/wxCCzo9dGj0)\n\n## Community\n\n* [r/mcp Reddit](https://www.reddit.com/r/mcp)\n* [Discord Server](https://glama.ai/mcp/discord)\n\n## Legend\n\n* 🎖️ – official implementation\n* programming language\n  * 🐍 – Python codebase\n  * 📇 – TypeScript (or JavaScript) codebase\n  * 🏎️ – Go codebase\n  * 🦀 – Rust codebase\n  * #️⃣ - C# Codebase\n  * ☕ - Java codebase\n  * 🌊 – C/C++ codebase\n* scope\n  * ☁️ - Cloud Service\n  * 🏠 - Local Service\n  * 📟 - Embedded Systems\n* operating system\n  * 🍎 – For macOS\n  * 🪟 – For Windows\n  * 🐧 - For Linux\n\n> [!NOTE]\n> Confused about Local 🏠 vs Cloud ☁️?\n> * Use local when MCP server is talking to a locally installed software, e.g. taking control over Chrome browser.\n> * Use network when MCP server is talking to remote APIs, e.g. weather API.\n\n## Server Implementations\n\n> [!NOTE]\n> We now have a [web-based directory](https://glama.ai/mcp/servers) that is synced with the repository.\n\n* 🔗 - [Aggregators](#aggregators)\n* 🎨 - [Art & Culture](#art-and-culture)\n* 📂 - [Browser Automation](#browser-automation)\n* ☁️ - [Cloud Platforms](#cloud-platforms)\n* 👨‍💻 - [Code Execution](#code-execution)\n* 🤖 - [Coding Agents](#coding-agents)\n* 🖥️ - [Command Line](#command-line)\n* 💬 - [Communication](#communication)\n* 👤 - [Customer Data Platforms](#customer-data-platforms)\n* 🗄️ - [Databases](#databases)\n* 📊 - [Data Platforms](#data-platforms)\n* 🚚 - [Delivery](#delivery)\n* 🛠️ - [Developer Tools](#developer-tools)\n* 🧮 - [Data Science Tools](#data-science-tools)\n* 📟 - [Embedded system](#embedded-system)\n* 📂 - [File Systems](#file-systems)\n* 💰 - [Finance & Fintech](#finance--fintech)\n* 🎮 - [Gaming](#gaming)\n* 🧠 - [Knowledge & Memory](#knowledge--memory)\n* 🗺️ - [Location Services](#location-services)\n* 🎯 - [Marketing](#marketing)\n* 📊 - [Monitoring](#monitoring)\n* 🎥 - [Multimedia Process](#multimedia-process)\n* 🔎 - [Search & Data Extraction](#search)\n* 🔒 - [Security](#security)\n* 🌐 - [Social Media](#social-media)",
  "translate": "# Awesome MCP Servers [![Awesome](https://awesome.re/badge.svg)](https://awesome.re)\n\n[![ไทย](https://img.shields.io/badge/Thai-Click-blue)](README-th.md)\n[![English](https://img.shields.io/badge/English-Click-yellow)](README.md)\n[![繁體中文](https://img.shields.io/badge/繁體中文-點擊查看-orange)](README-zh_TW.md)\n[![简体中文](https://img.shields.io/badge/简体中文-点击查看-orange)](README-zh.md)\n[![日本語](https://img.shields.io/badge/日本語-クリック-青)](README-ja.md)\n[![한국어](https://img.shields.io/badge/한국어-클릭-yellow)](README-ko.md)\n[![Português Brasileiro](https://img.shields.io/badge/Português_Brasileiro-Clique-green)](README-pt_BR.md)\n[![Discord](https://img.shields.io/discord/1312302100125843476?logo=discord&label=discord)](https://glama.ai/mcp/discord)\n[![Subreddit subscribers](https://img.shields.io/reddit/subreddit-subscribers/mcp?style=flat&logo=reddit&label=subreddit)](https://www.reddit.com/r/mcp/)\n\n엄선된 Model Context Protocol (MCP) 서버 모음입니다.\n\n* [MCP란?](#what-is-mcp)\n* [클라이언트](#clients)\n* [튜토리얼](#tutorials)\n* [커뮤니티](#community)\n* [범례](#legend)\n* [서버 구현체](#server-implementations)\n* [프레임워크](#frameworks)\n* [팁 & 트릭](#tips-and-tricks)\n\n## MCP란?\n\n[MCP](https://modelcontextprotocol.io/)는 AI 모델이 표준화된 서버 구현을 통해 로컬 및 원격 리소스와 안전하게 상호작용할 수 있게 해주는 오픈 프로토콜입니다. 이 목록은 파일 접근, 데이터베이스 연결, API 통합, 기타 컨텍스트 서비스 등 AI 기능을 확장하는 프로덕션 및 실험적 MCP 서버에 초점을 맞추고 있습니다.\n\n## 클라이언트\n\n[awesome-mcp-clients](https://github.com/punkpeye/awesome-mcp-clients/)와 [glama.ai/mcp/clients](https://glama.ai/mcp/clients)를 확인해 보세요.\n\n> [!TIP]\n> [Glama Chat](https://glama.ai/chat)은 MCP를 지원하는 멀티모달 AI 클라이언트이자 [AI 게이트웨이](https://glama.ai/gateway)입니다.\n\n## 튜토리얼\n\n* [Model Context Protocol (MCP) 빠른 시작](https://glama.ai/blog/2024-11-25-model-context-protocol-quickstart)\n* [Claude 데스크톱 앱에서 SQLite 데이터베이스 사용 설정하기](https://youtu.be/wxCCzo9dGj0)\n\n## 커뮤니티\n\n* [r/mcp Reddit](https://www.reddit.com/r/mcp)\n* [디스코드 서버](https://glama.ai/mcp/discord)\n\n## 범례\n\n* 🎖️ – 공식 구현체\n* 프로그래밍 언어\n  * 🐍 – Python 코드베이스\n  * 📇 – TypeScript(또는 JavaScript) 코드베이스\n  * 🏎️ – Go 코드베이스\n  * 🦀 – Rust 코드베이스\n  * #️⃣ - C# 코드베이스\n  * ☕ - Java 코드베이스\n  * 🌊 – C/C++ 코드베이스\n* 범위\n  * ☁️ - 클라우드 서비스\n  * 🏠 - 로컬 서비스\n  * 📟 - 임베디드 시스템\n* 운영체제\n  * 🍎 – macOS용\n  * 🪟 – Windows용\n  * 🐧 - Linux용\n\n> [!NOTE]\n> 로컬 🏠 과 클라우드 ☁️ 의 차이가 궁금하신가요?\n> * MCP 서버가 로컬에 설치된 소프트웨어와 통신할 때는 로컬을 사용하세요. 예: Chrome 브라우저 제어\n> * MCP 서버가 원격 API와 통신할 때는 네트워크(클라우드)를 사용하세요. 예: 날씨 API\n\n## 서버 구현체\n\n> [!NOTE]\n> 현재 저장소와 동기화되는 [웹 기반 디렉터리](https://glama.ai/mcp/servers)가 있습니다.\n\n* 🔗 - [집계기](#aggregators)\n* 🎨 - [예술 & 문화](#art-and-culture)\n* 📂 - [브라우저 자동화](#browser-automation)\n* ☁️ - [클라우드 플랫폼](#cloud-platforms)\n* 👨‍💻 - [코드 실행](#code-execution)\n* 🤖 - [코딩 에이전트](#coding-agents)\n* 🖥️ - [커맨드 라인](#command-line)\n* 💬 - [커뮤니케이션](#communication)\n* 👤 - [고객 데이터 플랫폼](#customer-data-platforms)\n* 🗄️ - [데이터베이스](#databases)\n* 📊 - [데이터 플랫폼](#data-platforms)\n* 🚚 - [딜리버리](#delivery)\n* 🛠️ - [개발자 도구](#developer-tools)\n* 🧮 - [데이터 과학 도구](#data-science-tools)\n* 📟 - [임베디드 시스템](#embedded-system)\n* 📂 - [파일 시스템](#file-systems)\n* 💰 - [금융 & 핀테크](#finance--fintech)\n* 🎮 - [게임](#gaming)\n* 🧠 - [지식 & 메모리](#knowledge--memory)\n* 🗺️ - [위치 서비스](#location-services)\n* 🎯 - [마케팅](#marketing)\n* 📊 - [모니터링](#monitoring)\n* 🎥 - [멀티미디어 처리](#multimedia-process)\n* 🔎 - [검색 & 데이터 추출](#search)\n* 🔒 - [보안](#security)\n* 🌐 - [소셜 미디어](#social-media)",
  "status": "ok"
}