{
  "id": 10,
  "origin": "- [Seym0n/tiktok-mcp](https://github.com/Seym0n/tiktok-mcp) 📇 ☁️ - Interact with TikTok videos\n- [Shopify/dev-mcp](https://github.com/Shopify/dev-mcp) 📇 ☁️ - Model Context Protocol (MCP) server that interacts with Shopify Dev.\n- [sirmews/apple-notes-mcp](https://github.com/sirmews/apple-notes-mcp) 🐍 🏠 - Allows the AI to read from your local Apple Notes database (macOS only)\n- [sooperset/mcp-atlassian](https://github.com/sooperset/mcp-atlassian) 🐍 ☁️ - MCP server for Atlassian products (Confluence and Jira). Supports Confluence Cloud, Jira Cloud, and Jira Server/Data Center. Provides comprehensive tools for searching, reading, creating, and managing content across Atlassian workspaces.\n- [suekou/mcp-notion-server](https://github.com/suekou/mcp-notion-server) 📇 🏠 - Interacting with Notion API\n- [tacticlaunch/mcp-linear](https://github.com/tacticlaunch/mcp-linear) 📇 ☁️ 🍎 🪟 🐧 - Integrates with Linear project management system\n- [tanigami/mcp-server-perplexity](https://github.com/tanigami/mcp-server-perplexity) 🐍 ☁️ - Interacting with Perplexity API.\n- [tevonsb/homeassistant-mcp](https://github.com/tevonsb/homeassistant-mcp) 📇 🏠 - Access Home Assistant data and control devices (lights, switches, thermostats, etc).\n- [tomekkorbak/oura-mcp-server](https://github.com/tomekkorbak/oura-mcp-server) 🐍 ☁️ - An MCP server for Oura, an app for tracking sleep\n- [UnitVectorY-Labs/mcp-graphql-forge](https://github.com/UnitVectorY-Labs/mcp-graphql-forge) 🏎️ ☁️ 🍎 🪟 🐧 - A lightweight, configuration-driven MCP server that exposes curated GraphQL queries as modular tools, enabling intentional API interactions from your agents.\n- [kw510/strava-mcp](https://github.com/kw510/strava-mcp) 📇 ☁️ - An MCP server for Strava, an app for tracking physical exercise\n- [wanaku-ai/wanaku](https://github.com/wanaku-ai/wanaku) - ☁️ 🏠 The Wanaku MCP Router is a SSE-based MCP server that provides an extensible routing engine that allows integrating your enterprise systems with AI agents.\n- [wong2/mcp-cli](https://github.com/wong2/mcp-cli) 📇 🏠 - CLI tool for testing MCP servers\n- [ws-mcp](https://github.com/nick1udwig/ws-mcp) - Wrap MCP servers with a WebSocket (for use with [kitbitz](https://github.com/nick1udwig/kibitz))\n- [yuna0x0/hackmd-mcp](https://github.com/yuna0x0/hackmd-mcp) 📇 ☁️ - Allows AI models to interact with [HackMD](https://hackmd.io)\n- [ZeparHyfar/mcp-datetime](https://github.com/ZeparHyfar/mcp-datetime) - MCP server providing date and time functions in various formats\n- [zueai/mcp-manager](https://github.com/zueai/mcp-manager) 📇 ☁️ - Simple Web UI to install and manage MCP servers for Claude Desktop App.\n- [HenryHaoson/Yuque-MCP-Server](https://github.com/HenryHaoson/Yuque-MCP-Server) - 📇 ☁️ A Model-Context-Protocol (MCP) server for integrating with Yuque API, allowing AI models to manage documents, interact with knowledge bases, search content, and access analytics data from the Yuque platform.\n- [Mtehabsim/ScreenPilot](https://github.com/Mtehabsim/ScreenPilot) 🐍 🏠 - enables AI to fully control and access GUI interactions by providing tools for mouse and keyboard, ideal for general automation, education, and experimentation.\n- [tumf/web3-mcp](https://github.com/tumf/web3-mcp) 🐍 ☁️ - An MCP server implementation wrapping Ankr Advanced API. Access to NFT, token, and blockchain data across multiple chains including Ethereum, BSC, Polygon, Avalanche, and more.\n- [danielkennedy1/pdf-tools-mcp](https://github.com/danielkennedy1/pdf-tools-mcp) 🐍 - PDF download, view & manipulation utilities.\n- [dotemacs/domain-lookup-mcp](https://github.com/dotemacs/domain-lookup-mcp) 🏎️ - Domain name lookup service, first via [RDAP](https://en.wikipedia.org/wiki/Registration_Data_Access_Protocol) and then as a fallback via [WHOIS](https://en.wikipedia.org/wiki/WHOIS)\n- [Klavis-AI/YouTube](https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube) 🐍 📇 - Extract and convert YouTube video information.\n- [ttommyth/interactive-mcp](https://github.com/ttommyth/interactive-mcp) 📇 🏠 🍎 🪟 🐧 - Enables interactive LLM workflows by adding local user prompts and chat capabilities directly into the MCP loop.\n- [olalonde/mcp-human](https://github.com/olalonde/mcp-human) 📇 ☁️ - When your LLM needs human assistance (through AWS Mechanical Turk)\n- [gwbischof/free-will-mcp](https://github.com/gwbischof/free-will-mcp) 🐍 🏠 - Give your AI free will tools. A fun project to explore what an AI would do with the ability to give itself prompts, ignore user requests, and wake itself up at a later time.\n- [caol64/wenyan-mcp](https://github.com/caol64/wenyan-mcp) 📇 🏠 🍎 🪟 🐧 - Wenyan MCP Server, which lets AI automatically format Markdown articles and publish them to WeChat GZH.\n\n## Frameworks\n\n> [!NOTE]\n> More frameworks, utilities, and other developer tools are available at https://github.com/punkpeye/awesome-mcp-devtools\n\n- [FastMCP](https://github.com/jlowin/fastmcp) 🐍 - A high-level framework for building MCP servers in Python\n- [FastMCP](https://github.com/punkpeye/fastmcp) 📇 - A high-level framework for building MCP servers in TypeScript\n\n## Tips and Tricks\n\n### Official prompt to inform LLMs how to use MCP\n\nWant to ask Claude about Model Context Protocol?\n\nCreate a Project, then add this file to it:\n\nhttps://modelcontextprotocol.io/llms-full.txt\n\nNow Claude can answer questions about writing MCP servers and how they work\n\n- https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/\n\n## Star History\n\n<a href=\"https://star-history.com/#punkpeye/awesome-mcp-servers&Date\">\n <picture>\n   <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date&theme=dark\" />\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n   <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n </picture>\n</a>\n",
  "translate": "- [Seym0n/tiktok-mcp](https://github.com/Seym0n/tiktok-mcp) 📇 ☁️ - Berinteraksi dengan video TikTok\n- [Shopify/dev-mcp](https://github.com/Shopify/dev-mcp) 📇 ☁️ - Server Model Context Protocol (MCP) yang berinteraksi dengan Shopify Dev.\n- [sirmews/apple-notes-mcp](https://github.com/sirmews/apple-notes-mcp) 🐍 🏠 - Memungkinkan AI membaca dari basis data Apple Notes lokal Anda (hanya macOS)\n- [sooperset/mcp-atlassian](https://github.com/sooperset/mcp-atlassian) 🐍 ☁️ - Server MCP untuk produk Atlassian (Confluence dan Jira). Mendukung Confluence Cloud, Jira Cloud, dan Jira Server/Data Center. Menyediakan alat komprehensif untuk pencarian, pembacaan, pembuatan, dan pengelolaan konten di seluruh ruang kerja Atlassian.\n- [suekou/mcp-notion-server](https://github.com/suekou/mcp-notion-server) 📇 🏠 - Berinteraksi dengan Notion API\n- [tacticlaunch/mcp-linear](https://github.com/tacticlaunch/mcp-linear) 📇 ☁️ 🍎 🪟 🐧 - Integrasi dengan sistem manajemen proyek Linear\n- [tanigami/mcp-server-perplexity](https://github.com/tanigami/mcp-server-perplexity) 🐍 ☁️ - Berinteraksi dengan Perplexity API.\n- [tevonsb/homeassistant-mcp](https://github.com/tevonsb/homeassistant-mcp) 📇 🏠 - Mengakses data Home Assistant dan mengontrol perangkat (lampu, saklar, termostat, dll).\n- [tomekkorbak/oura-mcp-server](https://github.com/tomekkorbak/oura-mcp-server) 🐍 ☁️ - Server MCP untuk Oura, aplikasi pelacak tidur\n- [UnitVectorY-Labs/mcp-graphql-forge](https://github.com/UnitVectorY-Labs/mcp-graphql-forge) 🏎️ ☁️ 🍎 🪟 🐧 - Server MCP ringan berbasis konfigurasi yang mengekspos query GraphQL terkurasi sebagai alat modular, memungkinkan interaksi API yang disengaja dari agen Anda.\n- [kw510/strava-mcp](https://github.com/kw510/strava-mcp) 📇 ☁️ - Server MCP untuk Strava, aplikasi pelacak aktivitas fisik\n- [wanaku-ai/wanaku](https://github.com/wanaku-ai/wanaku) - ☁️ 🏠 Wanaku MCP Router adalah server MCP berbasis SSE yang menyediakan mesin routing yang dapat diperluas untuk integrasi sistem enterprise Anda dengan agen AI.\n- [wong2/mcp-cli](https://github.com/wong2/mcp-cli) 📇 🏠 - Alat CLI untuk menguji server MCP\n- [ws-mcp](https://github.com/nick1udwig/ws-mcp) - Membungkus server MCP dengan WebSocket (untuk digunakan dengan [kitbitz](https://github.com/nick1udwig/kibitz))\n- [yuna0x0/hackmd-mcp](https://github.com/yuna0x0/hackmd-mcp) 📇 ☁️ - Memungkinkan model AI berinteraksi dengan [HackMD](https://hackmd.io)\n- [ZeparHyfar/mcp-datetime](https://github.com/ZeparHyfar/mcp-datetime) - Server MCP yang menyediakan fungsi tanggal dan waktu dalam berbagai format\n- [zueai/mcp-manager](https://github.com/zueai/mcp-manager) 📇 ☁️ - Web UI sederhana untuk menginstal dan mengelola server MCP untuk aplikasi Claude Desktop.\n- [HenryHaoson/Yuque-MCP-Server](https://github.com/HenryHaoson/Yuque-MCP-Server) - 📇 ☁️ Server Model-Context-Protocol (MCP) untuk integrasi dengan Yuque API, memungkinkan model AI mengelola dokumen, berinteraksi dengan basis pengetahuan, mencari konten, dan mengakses data analitik dari platform Yuque.\n- [Mtehabsim/ScreenPilot](https://github.com/Mtehabsim/ScreenPilot) 🐍 🏠 - Memungkinkan AI untuk sepenuhnya mengontrol dan mengakses interaksi GUI dengan menyediakan alat untuk mouse dan keyboard, ideal untuk otomasi umum, pendidikan, dan eksperimen.\n- [tumf/web3-mcp](https://github.com/tumf/web3-mcp) 🐍 ☁️ - Implementasi server MCP yang membungkus Ankr Advanced API. Akses data NFT, token, dan blockchain di berbagai chain termasuk Ethereum, BSC, Polygon, Avalanche, dan lainnya.\n- [danielkennedy1/pdf-tools-mcp](https://github.com/danielkennedy1/pdf-tools-mcp) 🐍 - Utilitas untuk mengunduh, melihat, & memanipulasi PDF.\n- [dotemacs/domain-lookup-mcp](https://github.com/dotemacs/domain-lookup-mcp) 🏎️ - Layanan pencarian nama domain, pertama melalui [RDAP](https://en.wikipedia.org/wiki/Registration_Data_Access_Protocol) dan jika gagal melalui [WHOIS](https://en.wikipedia.org/wiki/WHOIS)\n- [Klavis-AI/YouTube](https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube) 🐍 📇 - Mengekstrak dan mengonversi informasi video YouTube.\n- [ttommyth/interactive-mcp](https://github.com/ttommyth/interactive-mcp) 📇 🏠 🍎 🪟 🐧 - Memungkinkan alur kerja LLM interaktif dengan menambahkan prompt pengguna lokal dan kemampuan chat langsung ke dalam loop MCP.\n- [olalonde/mcp-human](https://github.com/olalonde/mcp-human) 📇 ☁️ - Saat LLM Anda membutuhkan bantuan manusia (melalui AWS Mechanical Turk)\n- [gwbischof/free-will-mcp](https://github.com/gwbischof/free-will-mcp) 🐍 🏠 - Memberikan alat \"free will\" untuk AI Anda. Proyek seru untuk mengeksplorasi apa yang akan dilakukan AI dengan kemampuan memberi dirinya sendiri prompt, mengabaikan permintaan pengguna, dan membangunkan dirinya sendiri di waktu lain.\n- [caol64/wenyan-mcp](https://github.com/caol64/wenyan-mcp) 📇 🏠 🍎 🪟 🐧 - Wenyan MCP Server, memungkinkan AI secara otomatis memformat artikel Markdown dan mempublikasikannya ke WeChat GZH.\n\n## Framework\n\n> [!NOTE]\n> Lebih banyak framework, utilitas, dan alat developer lainnya tersedia di https://github.com/punkpeye/awesome-mcp-devtools\n\n- [FastMCP](https://github.com/jlowin/fastmcp) 🐍 - Framework tingkat tinggi untuk membangun server MCP dengan Python\n- [FastMCP](https://github.com/punkpeye/fastmcp) 📇 - Framework tingkat tinggi untuk membangun server MCP dengan TypeScript\n\n## Tips dan Trik\n\n### Prompt resmi untuk memberitahu LLM cara menggunakan MCP\n\nIngin bertanya ke Claude tentang Model Context Protocol?\n\nBuat sebuah Proyek, lalu tambahkan file ini ke dalamnya:\n\nhttps://modelcontextprotocol.io/llms-full.txt\n\nSekarang Claude dapat menjawab pertanyaan tentang cara menulis server MCP dan cara kerjanya\n\n- https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/\n\n## Riwayat Bintang\n\n<a href=\"https://star-history.com/#punkpeye/awesome-mcp-servers&Date\">\n <picture>\n   <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date&theme=dark\" />\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n   <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n </picture>\n</a>\n",
  "status": "ok"
}