{
  "id": 10,
  "origin": "- [Seym0n/tiktok-mcp](https://github.com/Seym0n/tiktok-mcp) 📇 ☁️ - Interact with TikTok videos\n- [Shopify/dev-mcp](https://github.com/Shopify/dev-mcp) 📇 ☁️ - Model Context Protocol (MCP) server that interacts with Shopify Dev.\n- [sirmews/apple-notes-mcp](https://github.com/sirmews/apple-notes-mcp) 🐍 🏠 - Allows the AI to read from your local Apple Notes database (macOS only)\n- [sooperset/mcp-atlassian](https://github.com/sooperset/mcp-atlassian) 🐍 ☁️ - MCP server for Atlassian products (Confluence and Jira). Supports Confluence Cloud, Jira Cloud, and Jira Server/Data Center. Provides comprehensive tools for searching, reading, creating, and managing content across Atlassian workspaces.\n- [suekou/mcp-notion-server](https://github.com/suekou/mcp-notion-server) 📇 🏠 - Interacting with Notion API\n- [tacticlaunch/mcp-linear](https://github.com/tacticlaunch/mcp-linear) 📇 ☁️ 🍎 🪟 🐧 - Integrates with Linear project management system\n- [tanigami/mcp-server-perplexity](https://github.com/tanigami/mcp-server-perplexity) 🐍 ☁️ - Interacting with Perplexity API.\n- [tevonsb/homeassistant-mcp](https://github.com/tevonsb/homeassistant-mcp) 📇 🏠 - Access Home Assistant data and control devices (lights, switches, thermostats, etc).\n- [tomekkorbak/oura-mcp-server](https://github.com/tomekkorbak/oura-mcp-server) 🐍 ☁️ - An MCP server for Oura, an app for tracking sleep\n- [UnitVectorY-Labs/mcp-graphql-forge](https://github.com/UnitVectorY-Labs/mcp-graphql-forge) 🏎️ ☁️ 🍎 🪟 🐧 - A lightweight, configuration-driven MCP server that exposes curated GraphQL queries as modular tools, enabling intentional API interactions from your agents.\n- [kw510/strava-mcp](https://github.com/kw510/strava-mcp) 📇 ☁️ - An MCP server for Strava, an app for tracking physical exercise\n- [wanaku-ai/wanaku](https://github.com/wanaku-ai/wanaku) - ☁️ 🏠 The Wanaku MCP Router is a SSE-based MCP server that provides an extensible routing engine that allows integrating your enterprise systems with AI agents.\n- [wong2/mcp-cli](https://github.com/wong2/mcp-cli) 📇 🏠 - CLI tool for testing MCP servers\n- [ws-mcp](https://github.com/nick1udwig/ws-mcp) - Wrap MCP servers with a WebSocket (for use with [kitbitz](https://github.com/nick1udwig/kibitz))\n- [yuna0x0/hackmd-mcp](https://github.com/yuna0x0/hackmd-mcp) 📇 ☁️ - Allows AI models to interact with [HackMD](https://hackmd.io)\n- [ZeparHyfar/mcp-datetime](https://github.com/ZeparHyfar/mcp-datetime) - MCP server providing date and time functions in various formats\n- [zueai/mcp-manager](https://github.com/zueai/mcp-manager) 📇 ☁️ - Simple Web UI to install and manage MCP servers for Claude Desktop App.\n- [HenryHaoson/Yuque-MCP-Server](https://github.com/HenryHaoson/Yuque-MCP-Server) - 📇 ☁️ A Model-Context-Protocol (MCP) server for integrating with Yuque API, allowing AI models to manage documents, interact with knowledge bases, search content, and access analytics data from the Yuque platform.\n- [Mtehabsim/ScreenPilot](https://github.com/Mtehabsim/ScreenPilot) 🐍 🏠 - enables AI to fully control and access GUI interactions by providing tools for mouse and keyboard, ideal for general automation, education, and experimentation.\n- [tumf/web3-mcp](https://github.com/tumf/web3-mcp) 🐍 ☁️ - An MCP server implementation wrapping Ankr Advanced API. Access to NFT, token, and blockchain data across multiple chains including Ethereum, BSC, Polygon, Avalanche, and more.\n- [danielkennedy1/pdf-tools-mcp](https://github.com/danielkennedy1/pdf-tools-mcp) 🐍 - PDF download, view & manipulation utilities.\n- [dotemacs/domain-lookup-mcp](https://github.com/dotemacs/domain-lookup-mcp) 🏎️ - Domain name lookup service, first via [RDAP](https://en.wikipedia.org/wiki/Registration_Data_Access_Protocol) and then as a fallback via [WHOIS](https://en.wikipedia.org/wiki/WHOIS)\n- [Klavis-AI/YouTube](https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube) 🐍 📇 - Extract and convert YouTube video information.\n- [ttommyth/interactive-mcp](https://github.com/ttommyth/interactive-mcp) 📇 🏠 🍎 🪟 🐧 - Enables interactive LLM workflows by adding local user prompts and chat capabilities directly into the MCP loop.\n- [olalonde/mcp-human](https://github.com/olalonde/mcp-human) 📇 ☁️ - When your LLM needs human assistance (through AWS Mechanical Turk)\n- [gwbischof/free-will-mcp](https://github.com/gwbischof/free-will-mcp) 🐍 🏠 - Give your AI free will tools. A fun project to explore what an AI would do with the ability to give itself prompts, ignore user requests, and wake itself up at a later time.\n- [caol64/wenyan-mcp](https://github.com/caol64/wenyan-mcp) 📇 🏠 🍎 🪟 🐧 - Wenyan MCP Server, which lets AI automatically format Markdown articles and publish them to WeChat GZH.\n\n## Frameworks\n\n> [!NOTE]\n> More frameworks, utilities, and other developer tools are available at https://github.com/punkpeye/awesome-mcp-devtools\n\n- [FastMCP](https://github.com/jlowin/fastmcp) 🐍 - A high-level framework for building MCP servers in Python\n- [FastMCP](https://github.com/punkpeye/fastmcp) 📇 - A high-level framework for building MCP servers in TypeScript\n\n## Tips and Tricks\n\n### Official prompt to inform LLMs how to use MCP\n\nWant to ask Claude about Model Context Protocol?\n\nCreate a Project, then add this file to it:\n\nhttps://modelcontextprotocol.io/llms-full.txt\n\nNow Claude can answer questions about writing MCP servers and how they work\n\n- https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/\n\n## Star History\n\n<a href=\"https://star-history.com/#punkpeye/awesome-mcp-servers&Date\">\n <picture>\n   <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date&theme=dark\" />\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n   <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n </picture>\n</a>\n",
  "translate": "- [Seym0n/tiktok-mcp](https://github.com/Seym0n/tiktok-mcp) 📇 ☁️ – Interagiere mit TikTok-Videos\n- [Shopify/dev-mcp](https://github.com/Shopify/dev-mcp) 📇 ☁️ – Model Context Protocol (MCP)-Server, der mit Shopify Dev interagiert.\n- [sirmews/apple-notes-mcp](https://github.com/sirmews/apple-notes-mcp) 🐍 🏠 – Ermöglicht der KI das Lesen aus deiner lokalen Apple Notes-Datenbank (nur macOS)\n- [sooperset/mcp-atlassian](https://github.com/sooperset/mcp-atlassian) 🐍 ☁️ – MCP-Server für Atlassian-Produkte (Confluence und Jira). Unterstützt Confluence Cloud, Jira Cloud und Jira Server/Data Center. Bietet umfassende Werkzeuge zum Suchen, Lesen, Erstellen und Verwalten von Inhalten in Atlassian-Workspaces.\n- [suekou/mcp-notion-server](https://github.com/suekou/mcp-notion-server) 📇 🏠 – Interaktion mit der Notion API\n- [tacticlaunch/mcp-linear](https://github.com/tacticlaunch/mcp-linear) 📇 ☁️ 🍎 🪟 🐧 – Integration mit dem Linear-Projektmanagementsystem\n- [tanigami/mcp-server-perplexity](https://github.com/tanigami/mcp-server-perplexity) 🐍 ☁️ – Interaktion mit der Perplexity API.\n- [tevonsb/homeassistant-mcp](https://github.com/tevonsb/homeassistant-mcp) 📇 🏠 – Zugriff auf Home Assistant-Daten und Steuerung von Geräten (Lichter, Schalter, Thermostate usw.).\n- [tomekkorbak/oura-mcp-server](https://github.com/tomekkorbak/oura-mcp-server) 🐍 ☁️ – Ein MCP-Server für Oura, eine App zur Schlafüberwachung\n- [UnitVectorY-Labs/mcp-graphql-forge](https://github.com/UnitVectorY-Labs/mcp-graphql-forge) 🏎️ ☁️ 🍎 🪟 🐧 – Ein leichtgewichtiger, konfigurationsgesteuerter MCP-Server, der ausgewählte GraphQL-Queries als modulare Werkzeuge bereitstellt und gezielte API-Interaktionen von deinen Agents ermöglicht.\n- [kw510/strava-mcp](https://github.com/kw510/strava-mcp) 📇 ☁️ – Ein MCP-Server für Strava, eine App zur Aufzeichnung von sportlichen Aktivitäten\n- [wanaku-ai/wanaku](https://github.com/wanaku-ai/wanaku) - ☁️ 🏠 Der Wanaku MCP Router ist ein SSE-basierter MCP-Server, der eine erweiterbare Routing-Engine bereitstellt, um deine Unternehmenssysteme mit KI-Agents zu integrieren.\n- [wong2/mcp-cli](https://github.com/wong2/mcp-cli) 📇 🏠 – CLI-Tool zum Testen von MCP-Servern\n- [ws-mcp](https://github.com/nick1udwig/ws-mcp) – MCP-Server mit WebSocket-Anbindung (zur Verwendung mit [kitbitz](https://github.com/nick1udwig/kibitz))\n- [yuna0x0/hackmd-mcp](https://github.com/yuna0x0/hackmd-mcp) 📇 ☁️ – Ermöglicht KI-Modellen die Interaktion mit [HackMD](https://hackmd.io)\n- [ZeparHyfar/mcp-datetime](https://github.com/ZeparHyfar/mcp-datetime) – MCP-Server, der Datums- und Zeitfunktionen in verschiedenen Formaten bereitstellt\n- [zueai/mcp-manager](https://github.com/zueai/mcp-manager) 📇 ☁️ – Einfache Web-Oberfläche zur Installation und Verwaltung von MCP-Servern für die Claude Desktop App.\n- [HenryHaoson/Yuque-MCP-Server](https://github.com/HenryHaoson/Yuque-MCP-Server) – 📇 ☁️ Ein Model-Context-Protocol (MCP)-Server zur Integration mit der Yuque API, der es KI-Modellen ermöglicht, Dokumente zu verwalten, mit Wissensdatenbanken zu interagieren, Inhalte zu durchsuchen und Analysedaten von der Yuque-Plattform zu nutzen.\n- [Mtehabsim/ScreenPilot](https://github.com/Mtehabsim/ScreenPilot) 🐍 🏠 – Ermöglicht der KI die vollständige Steuerung und den Zugriff auf GUI-Interaktionen, indem Werkzeuge für Maus und Tastatur bereitgestellt werden. Ideal für allgemeine Automatisierung, Bildung und Experimente.\n- [tumf/web3-mcp](https://github.com/tumf/web3-mcp) 🐍 ☁️ – Eine MCP-Server-Implementierung, die die Ankr Advanced API einbindet. Zugriff auf NFT-, Token- und Blockchain-Daten über mehrere Chains, einschließlich Ethereum, BSC, Polygon, Avalanche und mehr.\n- [danielkennedy1/pdf-tools-mcp](https://github.com/danielkennedy1/pdf-tools-mcp) 🐍 – PDF-Download-, Anzeige- & Bearbeitungswerkzeuge.\n- [dotemacs/domain-lookup-mcp](https://github.com/dotemacs/domain-lookup-mcp) 🏎️ – Domainnamen-Abfragedienst, zuerst über [RDAP](https://en.wikipedia.org/wiki/Registration_Data_Access_Protocol), danach als Fallback über [WHOIS](https://en.wikipedia.org/wiki/WHOIS)\n- [Klavis-AI/YouTube](https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube) 🐍 📇 – Extrahiere und konvertiere YouTube-Video-Informationen.\n- [ttommyth/interactive-mcp](https://github.com/ttommyth/interactive-mcp) 📇 🏠 🍎 🪟 🐧 – Ermöglicht interaktive LLM-Workflows, indem lokale Benutzereingaben und Chat-Funktionen direkt in die MCP-Schleife integriert werden.\n- [olalonde/mcp-human](https://github.com/olalonde/mcp-human) 📇 ☁️ – Wenn dein LLM menschliche Unterstützung benötigt (über AWS Mechanical Turk)\n- [gwbischof/free-will-mcp](https://github.com/gwbischof/free-will-mcp) 🐍 🏠 – Gib deiner KI Werkzeuge für freien Willen. Ein Spaßprojekt, um zu erforschen, was eine KI tun würde, wenn sie sich selbst Prompts geben, Benutzeranfragen ignorieren und sich später selbst aufwecken könnte.\n- [caol64/wenyan-mcp](https://github.com/caol64/wenyan-mcp) 📇 🏠 🍎 🪟 🐧 – Wenyan MCP-Server, der es der KI ermöglicht, Markdown-Artikel automatisch zu formatieren und auf WeChat GZH zu veröffentlichen.\n\n## Frameworks\n\n> [!NOTE]\n> Weitere Frameworks, Utilities und andere Entwicklertools findest du unter https://github.com/punkpeye/awesome-mcp-devtools\n\n- [FastMCP](https://github.com/jlowin/fastmcp) 🐍 – Ein High-Level-Framework zum Erstellen von MCP-Servern in Python\n- [FastMCP](https://github.com/punkpeye/fastmcp) 📇 – Ein High-Level-Framework zum Erstellen von MCP-Servern in TypeScript\n\n## Tipps und Tricks\n\n### Offizieller Prompt, um LLMs zu informieren, wie MCP verwendet wird\n\nMöchtest du Claude zum Model Context Protocol befragen?\n\nErstelle ein Projekt und füge diese Datei hinzu:\n\nhttps://modelcontextprotocol.io/llms-full.txt\n\nJetzt kann Claude Fragen zum Schreiben von MCP-Servern und deren Funktionsweise beantworten\n\n- https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/\n\n## Star History\n\n<a href=\"https://star-history.com/#punkpeye/awesome-mcp-servers&Date\">\n <picture>\n   <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date&theme=dark\" />\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n   <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n </picture>\n</a>\n",
  "status": "ok"
}