{
  "id": 10,
  "origin": "- [Seym0n/tiktok-mcp](https://github.com/Seym0n/tiktok-mcp) 📇 ☁️ - Interact with TikTok videos\n- [Shopify/dev-mcp](https://github.com/Shopify/dev-mcp) 📇 ☁️ - Model Context Protocol (MCP) server that interacts with Shopify Dev.\n- [sirmews/apple-notes-mcp](https://github.com/sirmews/apple-notes-mcp) 🐍 🏠 - Allows the AI to read from your local Apple Notes database (macOS only)\n- [sooperset/mcp-atlassian](https://github.com/sooperset/mcp-atlassian) 🐍 ☁️ - MCP server for Atlassian products (Confluence and Jira). Supports Confluence Cloud, Jira Cloud, and Jira Server/Data Center. Provides comprehensive tools for searching, reading, creating, and managing content across Atlassian workspaces.\n- [suekou/mcp-notion-server](https://github.com/suekou/mcp-notion-server) 📇 🏠 - Interacting with Notion API\n- [tacticlaunch/mcp-linear](https://github.com/tacticlaunch/mcp-linear) 📇 ☁️ 🍎 🪟 🐧 - Integrates with Linear project management system\n- [tanigami/mcp-server-perplexity](https://github.com/tanigami/mcp-server-perplexity) 🐍 ☁️ - Interacting with Perplexity API.\n- [tevonsb/homeassistant-mcp](https://github.com/tevonsb/homeassistant-mcp) 📇 🏠 - Access Home Assistant data and control devices (lights, switches, thermostats, etc).\n- [tomekkorbak/oura-mcp-server](https://github.com/tomekkorbak/oura-mcp-server) 🐍 ☁️ - An MCP server for Oura, an app for tracking sleep\n- [UnitVectorY-Labs/mcp-graphql-forge](https://github.com/UnitVectorY-Labs/mcp-graphql-forge) 🏎️ ☁️ 🍎 🪟 🐧 - A lightweight, configuration-driven MCP server that exposes curated GraphQL queries as modular tools, enabling intentional API interactions from your agents.\n- [kw510/strava-mcp](https://github.com/kw510/strava-mcp) 📇 ☁️ - An MCP server for Strava, an app for tracking physical exercise\n- [wanaku-ai/wanaku](https://github.com/wanaku-ai/wanaku) - ☁️ 🏠 The Wanaku MCP Router is a SSE-based MCP server that provides an extensible routing engine that allows integrating your enterprise systems with AI agents.\n- [wong2/mcp-cli](https://github.com/wong2/mcp-cli) 📇 🏠 - CLI tool for testing MCP servers\n- [ws-mcp](https://github.com/nick1udwig/ws-mcp) - Wrap MCP servers with a WebSocket (for use with [kitbitz](https://github.com/nick1udwig/kibitz))\n- [yuna0x0/hackmd-mcp](https://github.com/yuna0x0/hackmd-mcp) 📇 ☁️ - Allows AI models to interact with [HackMD](https://hackmd.io)\n- [ZeparHyfar/mcp-datetime](https://github.com/ZeparHyfar/mcp-datetime) - MCP server providing date and time functions in various formats\n- [zueai/mcp-manager](https://github.com/zueai/mcp-manager) 📇 ☁️ - Simple Web UI to install and manage MCP servers for Claude Desktop App.\n- [HenryHaoson/Yuque-MCP-Server](https://github.com/HenryHaoson/Yuque-MCP-Server) - 📇 ☁️ A Model-Context-Protocol (MCP) server for integrating with Yuque API, allowing AI models to manage documents, interact with knowledge bases, search content, and access analytics data from the Yuque platform.\n- [Mtehabsim/ScreenPilot](https://github.com/Mtehabsim/ScreenPilot) 🐍 🏠 - enables AI to fully control and access GUI interactions by providing tools for mouse and keyboard, ideal for general automation, education, and experimentation.\n- [tumf/web3-mcp](https://github.com/tumf/web3-mcp) 🐍 ☁️ - An MCP server implementation wrapping Ankr Advanced API. Access to NFT, token, and blockchain data across multiple chains including Ethereum, BSC, Polygon, Avalanche, and more.\n- [danielkennedy1/pdf-tools-mcp](https://github.com/danielkennedy1/pdf-tools-mcp) 🐍 - PDF download, view & manipulation utilities.\n- [dotemacs/domain-lookup-mcp](https://github.com/dotemacs/domain-lookup-mcp) 🏎️ - Domain name lookup service, first via [RDAP](https://en.wikipedia.org/wiki/Registration_Data_Access_Protocol) and then as a fallback via [WHOIS](https://en.wikipedia.org/wiki/WHOIS)\n- [Klavis-AI/YouTube](https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube) 🐍 📇 - Extract and convert YouTube video information.\n- [ttommyth/interactive-mcp](https://github.com/ttommyth/interactive-mcp) 📇 🏠 🍎 🪟 🐧 - Enables interactive LLM workflows by adding local user prompts and chat capabilities directly into the MCP loop.\n- [olalonde/mcp-human](https://github.com/olalonde/mcp-human) 📇 ☁️ - When your LLM needs human assistance (through AWS Mechanical Turk)\n- [gwbischof/free-will-mcp](https://github.com/gwbischof/free-will-mcp) 🐍 🏠 - Give your AI free will tools. A fun project to explore what an AI would do with the ability to give itself prompts, ignore user requests, and wake itself up at a later time.\n- [caol64/wenyan-mcp](https://github.com/caol64/wenyan-mcp) 📇 🏠 🍎 🪟 🐧 - Wenyan MCP Server, which lets AI automatically format Markdown articles and publish them to WeChat GZH.\n\n## Frameworks\n\n> [!NOTE]\n> More frameworks, utilities, and other developer tools are available at https://github.com/punkpeye/awesome-mcp-devtools\n\n- [FastMCP](https://github.com/jlowin/fastmcp) 🐍 - A high-level framework for building MCP servers in Python\n- [FastMCP](https://github.com/punkpeye/fastmcp) 📇 - A high-level framework for building MCP servers in TypeScript\n\n## Tips and Tricks\n\n### Official prompt to inform LLMs how to use MCP\n\nWant to ask Claude about Model Context Protocol?\n\nCreate a Project, then add this file to it:\n\nhttps://modelcontextprotocol.io/llms-full.txt\n\nNow Claude can answer questions about writing MCP servers and how they work\n\n- https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/\n\n## Star History\n\n<a href=\"https://star-history.com/#punkpeye/awesome-mcp-servers&Date\">\n <picture>\n   <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date&theme=dark\" />\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n   <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n </picture>\n</a>\n",
  "translate": "- [Seym0n/tiktok-mcp](https://github.com/Seym0n/tiktok-mcp) 📇 ☁️ - 与 TikTok 视频交互\n- [Shopify/dev-mcp](https://github.com/Shopify/dev-mcp) 📇 ☁️ - 与 Shopify Dev 交互的模型上下文协议（MCP）服务器。\n- [sirmews/apple-notes-mcp](https://github.com/sirmews/apple-notes-mcp) 🐍 🏠 - 允许 AI 从本地 Apple Notes 数据库读取内容（仅限 macOS）\n- [sooperset/mcp-atlassian](https://github.com/sooperset/mcp-atlassian) 🐍 ☁️ - 用于 Atlassian 产品（Confluence 和 Jira）的 MCP 服务器。支持 Confluence Cloud、Jira Cloud 及 Jira Server/Data Center。为在 Atlassian 工作区内搜索、读取、创建和管理内容提供全面工具。\n- [suekou/mcp-notion-server](https://github.com/suekou/mcp-notion-server) 📇 🏠 - 与 Notion API 交互\n- [tacticlaunch/mcp-linear](https://github.com/tacticlaunch/mcp-linear) 📇 ☁️ 🍎 🪟 🐧 - 集成 Linear 项目管理系统\n- [tanigami/mcp-server-perplexity](https://github.com/tanigami/mcp-server-perplexity) 🐍 ☁️ - 与 Perplexity API 交互。\n- [tevonsb/homeassistant-mcp](https://github.com/tevonsb/homeassistant-mcp) 📇 🏠 - 访问 Home Assistant 数据并控制设备（灯光、开关、温控器等）。\n- [tomekkorbak/oura-mcp-server](https://github.com/tomekkorbak/oura-mcp-server) 🐍 ☁️ - 用于 Oura（睡眠追踪应用）的 MCP 服务器\n- [UnitVectorY-Labs/mcp-graphql-forge](https://github.com/UnitVectorY-Labs/mcp-graphql-forge) 🏎️ ☁️ 🍎 🪟 🐧 - 轻量级、配置驱动的 MCP 服务器，将精选 GraphQL 查询作为模块化工具暴露，实现代理的有目的 API 交互。\n- [kw510/strava-mcp](https://github.com/kw510/strava-mcp) 📇 ☁️ - 用于 Strava（运动追踪应用）的 MCP 服务器\n- [wanaku-ai/wanaku](https://github.com/wanaku-ai/wanaku) - ☁️ 🏠 Wanaku MCP 路由器是基于 SSE 的 MCP 服务器，提供可扩展路由引擎，支持将企业系统与 AI 代理集成。\n- [wong2/mcp-cli](https://github.com/wong2/mcp-cli) 📇 🏠 - MCP 服务器测试用 CLI 工具\n- [ws-mcp](https://github.com/nick1udwig/ws-mcp) - 用 WebSocket 包装 MCP 服务器（可与 [kitbitz](https://github.com/nick1udwig/kibitz) 配合使用）\n- [yuna0x0/hackmd-mcp](https://github.com/yuna0x0/hackmd-mcp) 📇 ☁️ - 允许 AI 模型与 [HackMD](https://hackmd.io) 交互\n- [ZeparHyfar/mcp-datetime](https://github.com/ZeparHyfar/mcp-datetime) - 提供多种格式日期和时间功能的 MCP 服务器\n- [zueai/mcp-manager](https://github.com/zueai/mcp-manager) 📇 ☁️ - 用于 Claude 桌面应用的 MCP 服务器安装和管理的简单 Web UI。\n- [HenryHaoson/Yuque-MCP-Server](https://github.com/HenryHaoson/Yuque-MCP-Server) - 📇 ☁️ 与语雀 API 集成的模型上下文协议（MCP）服务器，使 AI 模型能管理文档、与知识库交互、搜索内容并访问语雀平台分析数据。\n- [Mtehabsim/ScreenPilot](https://github.com/Mtehabsim/ScreenPilot) 🐍 🏠 - 通过提供鼠标与键盘工具，使 AI 能完全控制并访问 GUI 交互，适用于通用自动化、教育和实验。\n- [tumf/web3-mcp](https://github.com/tumf/web3-mcp) 🐍 ☁️ - 封装 Ankr 高级 API 的 MCP 服务器实现。支持访问包括以太坊、BSC、Polygon、Avalanche 等多链的 NFT、代币和区块链数据。\n- [danielkennedy1/pdf-tools-mcp](https://github.com/danielkennedy1/pdf-tools-mcp) 🐍 - PDF 下载、查看及操作工具。\n- [dotemacs/domain-lookup-mcp](https://github.com/dotemacs/domain-lookup-mcp) 🏎️ - 域名查询服务，首先通过 [RDAP](https://en.wikipedia.org/wiki/Registration_Data_Access_Protocol) 查询，无法获得再使用 [WHOIS](https://en.wikipedia.org/wiki/WHOIS)。\n- [Klavis-AI/YouTube](https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube) 🐍 📇 - 提取并转换 YouTube 视频信息。\n- [ttommyth/interactive-mcp](https://github.com/ttommyth/interactive-mcp) 📇 🏠 🍎 🪟 🐧 - 通过将本地用户提示和聊天功能直接加入 MCP 循环，使 LLM 支持交互式工作流。\n- [olalonde/mcp-human](https://github.com/olalonde/mcp-human) 📇 ☁️ - 当你的 LLM 需要人工协助时（通过 AWS Mechanical Turk）\n- [gwbischof/free-will-mcp](https://github.com/gwbischof/free-will-mcp) 🐍 🏠 - 为 AI 提供自由意志工具。该项目旨在探索 AI 如果能为自己生成提示、忽略用户请求并自我唤醒会做什么。\n- [caol64/wenyan-mcp](https://github.com/caol64/wenyan-mcp) 📇 🏠 🍎 🪟 🐧 - 文言 MCP 服务器，让 AI 自动排版 Markdown 文章并发布到微信公众号。\n\n## 框架\n\n> [!NOTE]\n> 更多框架、工具及开发者工具请见 https://github.com/punkpeye/awesome-mcp-devtools\n\n- [FastMCP](https://github.com/jlowin/fastmcp) 🐍 - 用于 Python 的高级 MCP 服务器框架\n- [FastMCP](https://github.com/punkpeye/fastmcp) 📇 - 用于 TypeScript 的高级 MCP 服务器框架\n\n## 技巧与建议\n\n### 官方提示词，告知 LLM 如何使用 MCP\n\n想向 Claude 询问 Model Context Protocol 吗？\n\n创建一个项目，然后添加此文件：\n\nhttps://modelcontextprotocol.io/llms-full.txt\n\n现在 Claude 就可以回答关于编写 MCP 服务器及其工作方式的问题了\n\n- https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/\n\n## Star 历史\n\n<a href=\"https://star-history.com/#punkpeye/awesome-mcp-servers&Date\">\n <picture>\n   <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date&theme=dark\" />\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n   <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n </picture>\n</a>\n",
  "status": "ok"
}