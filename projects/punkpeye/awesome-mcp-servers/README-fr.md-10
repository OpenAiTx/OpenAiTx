{
  "id": 10,
  "origin": "- [Seym0n/tiktok-mcp](https://github.com/Seym0n/tiktok-mcp) 📇 ☁️ - Interact with TikTok videos\n- [Shopify/dev-mcp](https://github.com/Shopify/dev-mcp) 📇 ☁️ - Model Context Protocol (MCP) server that interacts with Shopify Dev.\n- [sirmews/apple-notes-mcp](https://github.com/sirmews/apple-notes-mcp) 🐍 🏠 - Allows the AI to read from your local Apple Notes database (macOS only)\n- [sooperset/mcp-atlassian](https://github.com/sooperset/mcp-atlassian) 🐍 ☁️ - MCP server for Atlassian products (Confluence and Jira). Supports Confluence Cloud, Jira Cloud, and Jira Server/Data Center. Provides comprehensive tools for searching, reading, creating, and managing content across Atlassian workspaces.\n- [suekou/mcp-notion-server](https://github.com/suekou/mcp-notion-server) 📇 🏠 - Interacting with Notion API\n- [tacticlaunch/mcp-linear](https://github.com/tacticlaunch/mcp-linear) 📇 ☁️ 🍎 🪟 🐧 - Integrates with Linear project management system\n- [tanigami/mcp-server-perplexity](https://github.com/tanigami/mcp-server-perplexity) 🐍 ☁️ - Interacting with Perplexity API.\n- [tevonsb/homeassistant-mcp](https://github.com/tevonsb/homeassistant-mcp) 📇 🏠 - Access Home Assistant data and control devices (lights, switches, thermostats, etc).\n- [tomekkorbak/oura-mcp-server](https://github.com/tomekkorbak/oura-mcp-server) 🐍 ☁️ - An MCP server for Oura, an app for tracking sleep\n- [UnitVectorY-Labs/mcp-graphql-forge](https://github.com/UnitVectorY-Labs/mcp-graphql-forge) 🏎️ ☁️ 🍎 🪟 🐧 - A lightweight, configuration-driven MCP server that exposes curated GraphQL queries as modular tools, enabling intentional API interactions from your agents.\n- [kw510/strava-mcp](https://github.com/kw510/strava-mcp) 📇 ☁️ - An MCP server for Strava, an app for tracking physical exercise\n- [wanaku-ai/wanaku](https://github.com/wanaku-ai/wanaku) - ☁️ 🏠 The Wanaku MCP Router is a SSE-based MCP server that provides an extensible routing engine that allows integrating your enterprise systems with AI agents.\n- [wong2/mcp-cli](https://github.com/wong2/mcp-cli) 📇 🏠 - CLI tool for testing MCP servers\n- [ws-mcp](https://github.com/nick1udwig/ws-mcp) - Wrap MCP servers with a WebSocket (for use with [kitbitz](https://github.com/nick1udwig/kibitz))\n- [yuna0x0/hackmd-mcp](https://github.com/yuna0x0/hackmd-mcp) 📇 ☁️ - Allows AI models to interact with [HackMD](https://hackmd.io)\n- [ZeparHyfar/mcp-datetime](https://github.com/ZeparHyfar/mcp-datetime) - MCP server providing date and time functions in various formats\n- [zueai/mcp-manager](https://github.com/zueai/mcp-manager) 📇 ☁️ - Simple Web UI to install and manage MCP servers for Claude Desktop App.\n- [HenryHaoson/Yuque-MCP-Server](https://github.com/HenryHaoson/Yuque-MCP-Server) - 📇 ☁️ A Model-Context-Protocol (MCP) server for integrating with Yuque API, allowing AI models to manage documents, interact with knowledge bases, search content, and access analytics data from the Yuque platform.\n- [Mtehabsim/ScreenPilot](https://github.com/Mtehabsim/ScreenPilot) 🐍 🏠 - enables AI to fully control and access GUI interactions by providing tools for mouse and keyboard, ideal for general automation, education, and experimentation.\n- [tumf/web3-mcp](https://github.com/tumf/web3-mcp) 🐍 ☁️ - An MCP server implementation wrapping Ankr Advanced API. Access to NFT, token, and blockchain data across multiple chains including Ethereum, BSC, Polygon, Avalanche, and more.\n- [danielkennedy1/pdf-tools-mcp](https://github.com/danielkennedy1/pdf-tools-mcp) 🐍 - PDF download, view & manipulation utilities.\n- [dotemacs/domain-lookup-mcp](https://github.com/dotemacs/domain-lookup-mcp) 🏎️ - Domain name lookup service, first via [RDAP](https://en.wikipedia.org/wiki/Registration_Data_Access_Protocol) and then as a fallback via [WHOIS](https://en.wikipedia.org/wiki/WHOIS)\n- [Klavis-AI/YouTube](https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube) 🐍 📇 - Extract and convert YouTube video information.\n- [ttommyth/interactive-mcp](https://github.com/ttommyth/interactive-mcp) 📇 🏠 🍎 🪟 🐧 - Enables interactive LLM workflows by adding local user prompts and chat capabilities directly into the MCP loop.\n- [olalonde/mcp-human](https://github.com/olalonde/mcp-human) 📇 ☁️ - When your LLM needs human assistance (through AWS Mechanical Turk)\n- [gwbischof/free-will-mcp](https://github.com/gwbischof/free-will-mcp) 🐍 🏠 - Give your AI free will tools. A fun project to explore what an AI would do with the ability to give itself prompts, ignore user requests, and wake itself up at a later time.\n- [caol64/wenyan-mcp](https://github.com/caol64/wenyan-mcp) 📇 🏠 🍎 🪟 🐧 - Wenyan MCP Server, which lets AI automatically format Markdown articles and publish them to WeChat GZH.\n\n## Frameworks\n\n> [!NOTE]\n> More frameworks, utilities, and other developer tools are available at https://github.com/punkpeye/awesome-mcp-devtools\n\n- [FastMCP](https://github.com/jlowin/fastmcp) 🐍 - A high-level framework for building MCP servers in Python\n- [FastMCP](https://github.com/punkpeye/fastmcp) 📇 - A high-level framework for building MCP servers in TypeScript\n\n## Tips and Tricks\n\n### Official prompt to inform LLMs how to use MCP\n\nWant to ask Claude about Model Context Protocol?\n\nCreate a Project, then add this file to it:\n\nhttps://modelcontextprotocol.io/llms-full.txt\n\nNow Claude can answer questions about writing MCP servers and how they work\n\n- https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/\n\n## Star History\n\n<a href=\"https://star-history.com/#punkpeye/awesome-mcp-servers&Date\">\n <picture>\n   <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date&theme=dark\" />\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n   <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n </picture>\n</a>\n",
  "translate": "- [Seym0n/tiktok-mcp](https://github.com/Seym0n/tiktok-mcp) 📇 ☁️ - Interagissez avec les vidéos TikTok\n- [Shopify/dev-mcp](https://github.com/Shopify/dev-mcp) 📇 ☁️ - Serveur Model Context Protocol (MCP) qui interagit avec Shopify Dev.\n- [sirmews/apple-notes-mcp](https://github.com/sirmews/apple-notes-mcp) 🐍 🏠 - Permet à l'IA de lire depuis votre base de données Apple Notes locale (macOS uniquement)\n- [sooperset/mcp-atlassian](https://github.com/sooperset/mcp-atlassian) 🐍 ☁️ - Serveur MCP pour les produits Atlassian (Confluence et Jira). Prend en charge Confluence Cloud, Jira Cloud et Jira Server/Data Center. Fournit des outils complets pour rechercher, lire, créer et gérer le contenu à travers les espaces de travail Atlassian.\n- [suekou/mcp-notion-server](https://github.com/suekou/mcp-notion-server) 📇 🏠 - Interaction avec l’API Notion\n- [tacticlaunch/mcp-linear](https://github.com/tacticlaunch/mcp-linear) 📇 ☁️ 🍎 🪟 🐧 - Intègre le système de gestion de projet Linear\n- [tanigami/mcp-server-perplexity](https://github.com/tanigami/mcp-server-perplexity) 🐍 ☁️ - Interaction avec l’API Perplexity.\n- [tevonsb/homeassistant-mcp](https://github.com/tevonsb/homeassistant-mcp) 📇 🏠 - Accède aux données Home Assistant et contrôle les appareils (lumières, interrupteurs, thermostats, etc).\n- [tomekkorbak/oura-mcp-server](https://github.com/tomekkorbak/oura-mcp-server) 🐍 ☁️ - Un serveur MCP pour Oura, une application de suivi du sommeil\n- [UnitVectorY-Labs/mcp-graphql-forge](https://github.com/UnitVectorY-Labs/mcp-graphql-forge) 🏎️ ☁️ 🍎 🪟 🐧 - Un serveur MCP léger, piloté par configuration, qui expose des requêtes GraphQL sélectionnées comme des outils modulaires, permettant des interactions API intentionnelles depuis vos agents.\n- [kw510/strava-mcp](https://github.com/kw510/strava-mcp) 📇 ☁️ - Un serveur MCP pour Strava, une application de suivi d’activité physique\n- [wanaku-ai/wanaku](https://github.com/wanaku-ai/wanaku) - ☁️ 🏠 Le routeur Wanaku MCP est un serveur MCP basé sur SSE qui fournit un moteur de routage extensible permettant d’intégrer vos systèmes d’entreprise avec des agents IA.\n- [wong2/mcp-cli](https://github.com/wong2/mcp-cli) 📇 🏠 - Outil CLI pour tester les serveurs MCP\n- [ws-mcp](https://github.com/nick1udwig/ws-mcp) - Encapsule les serveurs MCP avec un WebSocket (à utiliser avec [kitbitz](https://github.com/nick1udwig/kibitz))\n- [yuna0x0/hackmd-mcp](https://github.com/yuna0x0/hackmd-mcp) 📇 ☁️ - Permet aux modèles d’IA d’interagir avec [HackMD](https://hackmd.io)\n- [ZeparHyfar/mcp-datetime](https://github.com/ZeparHyfar/mcp-datetime) - Serveur MCP fournissant des fonctions de date et d’heure dans divers formats\n- [zueai/mcp-manager](https://github.com/zueai/mcp-manager) 📇 ☁️ - Interface Web simple pour installer et gérer des serveurs MCP pour l’application Claude Desktop.\n- [HenryHaoson/Yuque-MCP-Server](https://github.com/HenryHaoson/Yuque-MCP-Server) - 📇 ☁️ Un serveur Model-Context-Protocol (MCP) pour intégrer l’API Yuque, permettant aux modèles d’IA de gérer des documents, interagir avec des bases de connaissances, rechercher du contenu et accéder aux données analytiques de la plateforme Yuque.\n- [Mtehabsim/ScreenPilot](https://github.com/Mtehabsim/ScreenPilot) 🐍 🏠 - permet à l’IA de contrôler et d’accéder entièrement aux interactions GUI en fournissant des outils pour la souris et le clavier, idéal pour l’automatisation générale, l’éducation et l’expérimentation.\n- [tumf/web3-mcp](https://github.com/tumf/web3-mcp) 🐍 ☁️ - Une implémentation de serveur MCP enveloppant Ankr Advanced API. Accès aux données NFT, tokens et blockchain sur plusieurs chaînes dont Ethereum, BSC, Polygon, Avalanche, etc.\n- [danielkennedy1/pdf-tools-mcp](https://github.com/danielkennedy1/pdf-tools-mcp) 🐍 - Utilitaires pour télécharger, visualiser et manipuler des PDF.\n- [dotemacs/domain-lookup-mcp](https://github.com/dotemacs/domain-lookup-mcp) 🏎️ - Service de recherche de noms de domaine, d’abord via [RDAP](https://en.wikipedia.org/wiki/Registration_Data_Access_Protocol) puis en secours via [WHOIS](https://en.wikipedia.org/wiki/WHOIS)\n- [Klavis-AI/YouTube](https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube) 🐍 📇 - Extraire et convertir les informations de vidéos YouTube.\n- [ttommyth/interactive-mcp](https://github.com/ttommyth/interactive-mcp) 📇 🏠 🍎 🪟 🐧 - Permet des workflows LLM interactifs en ajoutant des invites et des capacités de chat utilisateur localement dans la boucle MCP.\n- [olalonde/mcp-human](https://github.com/olalonde/mcp-human) 📇 ☁️ - Quand votre LLM a besoin d’une assistance humaine (via AWS Mechanical Turk)\n- [gwbischof/free-will-mcp](https://github.com/gwbischof/free-will-mcp) 🐍 🏠 - Donnez à votre IA des outils de libre arbitre. Un projet ludique pour explorer ce que ferait une IA avec la capacité de s’auto-suggérer des prompts, d’ignorer les requêtes utilisateur, et de se réveiller ultérieurement.\n- [caol64/wenyan-mcp](https://github.com/caol64/wenyan-mcp) 📇 🏠 🍎 🪟 🐧 - Wenyan MCP Server, qui permet à l’IA de formater automatiquement des articles Markdown et de les publier sur WeChat GZH.\n\n## Frameworks\n\n> [!NOTE]\n> Plus de frameworks, utilitaires et autres outils de développement sont disponibles sur https://github.com/punkpeye/awesome-mcp-devtools\n\n- [FastMCP](https://github.com/jlowin/fastmcp) 🐍 - Un framework de haut niveau pour créer des serveurs MCP en Python\n- [FastMCP](https://github.com/punkpeye/fastmcp) 📇 - Un framework de haut niveau pour créer des serveurs MCP en TypeScript\n\n## Astuces et Conseils\n\n### Prompt officiel pour informer les LLMs sur l’utilisation de MCP\n\nVous souhaitez demander à Claude des informations sur le Model Context Protocol ?\n\nCréez un Projet, puis ajoutez-y ce fichier :\n\nhttps://modelcontextprotocol.io/llms-full.txt\n\nClaude pourra alors répondre à des questions sur l’écriture de serveurs MCP et leur fonctionnement\n\n- https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/\n\n## Historique des étoiles\n\n<a href=\"https://star-history.com/#punkpeye/awesome-mcp-servers&Date\">\n <picture>\n   <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date&theme=dark\" />\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n   <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n </picture>\n</a>\n",
  "status": "ok"
}