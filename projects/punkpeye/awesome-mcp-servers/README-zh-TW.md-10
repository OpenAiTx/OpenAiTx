{
  "id": 10,
  "origin": "- [Seym0n/tiktok-mcp](https://github.com/Seym0n/tiktok-mcp) 📇 ☁️ - Interact with TikTok videos\n- [Shopify/dev-mcp](https://github.com/Shopify/dev-mcp) 📇 ☁️ - Model Context Protocol (MCP) server that interacts with Shopify Dev.\n- [sirmews/apple-notes-mcp](https://github.com/sirmews/apple-notes-mcp) 🐍 🏠 - Allows the AI to read from your local Apple Notes database (macOS only)\n- [sooperset/mcp-atlassian](https://github.com/sooperset/mcp-atlassian) 🐍 ☁️ - MCP server for Atlassian products (Confluence and Jira). Supports Confluence Cloud, Jira Cloud, and Jira Server/Data Center. Provides comprehensive tools for searching, reading, creating, and managing content across Atlassian workspaces.\n- [suekou/mcp-notion-server](https://github.com/suekou/mcp-notion-server) 📇 🏠 - Interacting with Notion API\n- [tacticlaunch/mcp-linear](https://github.com/tacticlaunch/mcp-linear) 📇 ☁️ 🍎 🪟 🐧 - Integrates with Linear project management system\n- [tanigami/mcp-server-perplexity](https://github.com/tanigami/mcp-server-perplexity) 🐍 ☁️ - Interacting with Perplexity API.\n- [tevonsb/homeassistant-mcp](https://github.com/tevonsb/homeassistant-mcp) 📇 🏠 - Access Home Assistant data and control devices (lights, switches, thermostats, etc).\n- [tomekkorbak/oura-mcp-server](https://github.com/tomekkorbak/oura-mcp-server) 🐍 ☁️ - An MCP server for Oura, an app for tracking sleep\n- [UnitVectorY-Labs/mcp-graphql-forge](https://github.com/UnitVectorY-Labs/mcp-graphql-forge) 🏎️ ☁️ 🍎 🪟 🐧 - A lightweight, configuration-driven MCP server that exposes curated GraphQL queries as modular tools, enabling intentional API interactions from your agents.\n- [kw510/strava-mcp](https://github.com/kw510/strava-mcp) 📇 ☁️ - An MCP server for Strava, an app for tracking physical exercise\n- [wanaku-ai/wanaku](https://github.com/wanaku-ai/wanaku) - ☁️ 🏠 The Wanaku MCP Router is a SSE-based MCP server that provides an extensible routing engine that allows integrating your enterprise systems with AI agents.\n- [wong2/mcp-cli](https://github.com/wong2/mcp-cli) 📇 🏠 - CLI tool for testing MCP servers\n- [ws-mcp](https://github.com/nick1udwig/ws-mcp) - Wrap MCP servers with a WebSocket (for use with [kitbitz](https://github.com/nick1udwig/kibitz))\n- [yuna0x0/hackmd-mcp](https://github.com/yuna0x0/hackmd-mcp) 📇 ☁️ - Allows AI models to interact with [HackMD](https://hackmd.io)\n- [ZeparHyfar/mcp-datetime](https://github.com/ZeparHyfar/mcp-datetime) - MCP server providing date and time functions in various formats\n- [zueai/mcp-manager](https://github.com/zueai/mcp-manager) 📇 ☁️ - Simple Web UI to install and manage MCP servers for Claude Desktop App.\n- [HenryHaoson/Yuque-MCP-Server](https://github.com/HenryHaoson/Yuque-MCP-Server) - 📇 ☁️ A Model-Context-Protocol (MCP) server for integrating with Yuque API, allowing AI models to manage documents, interact with knowledge bases, search content, and access analytics data from the Yuque platform.\n- [Mtehabsim/ScreenPilot](https://github.com/Mtehabsim/ScreenPilot) 🐍 🏠 - enables AI to fully control and access GUI interactions by providing tools for mouse and keyboard, ideal for general automation, education, and experimentation.\n- [tumf/web3-mcp](https://github.com/tumf/web3-mcp) 🐍 ☁️ - An MCP server implementation wrapping Ankr Advanced API. Access to NFT, token, and blockchain data across multiple chains including Ethereum, BSC, Polygon, Avalanche, and more.\n- [danielkennedy1/pdf-tools-mcp](https://github.com/danielkennedy1/pdf-tools-mcp) 🐍 - PDF download, view & manipulation utilities.\n- [dotemacs/domain-lookup-mcp](https://github.com/dotemacs/domain-lookup-mcp) 🏎️ - Domain name lookup service, first via [RDAP](https://en.wikipedia.org/wiki/Registration_Data_Access_Protocol) and then as a fallback via [WHOIS](https://en.wikipedia.org/wiki/WHOIS)\n- [Klavis-AI/YouTube](https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube) 🐍 📇 - Extract and convert YouTube video information.\n- [ttommyth/interactive-mcp](https://github.com/ttommyth/interactive-mcp) 📇 🏠 🍎 🪟 🐧 - Enables interactive LLM workflows by adding local user prompts and chat capabilities directly into the MCP loop.\n- [olalonde/mcp-human](https://github.com/olalonde/mcp-human) 📇 ☁️ - When your LLM needs human assistance (through AWS Mechanical Turk)\n- [gwbischof/free-will-mcp](https://github.com/gwbischof/free-will-mcp) 🐍 🏠 - Give your AI free will tools. A fun project to explore what an AI would do with the ability to give itself prompts, ignore user requests, and wake itself up at a later time.\n- [caol64/wenyan-mcp](https://github.com/caol64/wenyan-mcp) 📇 🏠 🍎 🪟 🐧 - Wenyan MCP Server, which lets AI automatically format Markdown articles and publish them to WeChat GZH.\n\n## Frameworks\n\n> [!NOTE]\n> More frameworks, utilities, and other developer tools are available at https://github.com/punkpeye/awesome-mcp-devtools\n\n- [FastMCP](https://github.com/jlowin/fastmcp) 🐍 - A high-level framework for building MCP servers in Python\n- [FastMCP](https://github.com/punkpeye/fastmcp) 📇 - A high-level framework for building MCP servers in TypeScript\n\n## Tips and Tricks\n\n### Official prompt to inform LLMs how to use MCP\n\nWant to ask Claude about Model Context Protocol?\n\nCreate a Project, then add this file to it:\n\nhttps://modelcontextprotocol.io/llms-full.txt\n\nNow Claude can answer questions about writing MCP servers and how they work\n\n- https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/\n\n## Star History\n\n<a href=\"https://star-history.com/#punkpeye/awesome-mcp-servers&Date\">\n <picture>\n   <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date&theme=dark\" />\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n   <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n </picture>\n</a>\n",
  "translate": "- [Seym0n/tiktok-mcp](https://github.com/Seym0n/tiktok-mcp) 📇 ☁️ - 與 TikTok 影片互動\n- [Shopify/dev-mcp](https://github.com/Shopify/dev-mcp) 📇 ☁️ - 與 Shopify Dev 互動的模型上下文協議（MCP）伺服器。\n- [sirmews/apple-notes-mcp](https://github.com/sirmews/apple-notes-mcp) 🐍 🏠 - 允許 AI 從你的本地 Apple Notes 資料庫讀取（僅限 macOS）\n- [sooperset/mcp-atlassian](https://github.com/sooperset/mcp-atlassian) 🐍 ☁️ - Atlassian 產品（Confluence 和 Jira）的 MCP 伺服器。支援 Confluence Cloud、Jira Cloud 及 Jira Server/Data Center。提供跨 Atlassian 工作空間搜尋、閱讀、創建及管理內容的全方位工具。\n- [suekou/mcp-notion-server](https://github.com/suekou/mcp-notion-server) 📇 🏠 - 與 Notion API 互動\n- [tacticlaunch/mcp-linear](https://github.com/tacticlaunch/mcp-linear) 📇 ☁️ 🍎 🪟 🐧 - 整合 Linear 專案管理系統\n- [tanigami/mcp-server-perplexity](https://github.com/tanigami/mcp-server-perplexity) 🐍 ☁️ - 與 Perplexity API 互動。\n- [tevonsb/homeassistant-mcp](https://github.com/tevonsb/homeassistant-mcp) 📇 🏠 - 存取 Home Assistant 資料及控制裝置（燈光、開關、溫控等）。\n- [tomekkorbak/oura-mcp-server](https://github.com/tomekkorbak/oura-mcp-server) 🐍 ☁️ - Oura 的 MCP 伺服器，一款追蹤睡眠的應用程式\n- [UnitVectorY-Labs/mcp-graphql-forge](https://github.com/UnitVectorY-Labs/mcp-graphql-forge) 🏎️ ☁️ 🍎 🪟 🐧 - 輕量級、配置驅動的 MCP 伺服器，將精選的 GraphQL 查詢作為模組化工具公開，讓 agent 能夠有目的地與 API 互動。\n- [kw510/strava-mcp](https://github.com/kw510/strava-mcp) 📇 ☁️ - Strava 應用程式的 MCP 伺服器，用於追蹤體能運動\n- [wanaku-ai/wanaku](https://github.com/wanaku-ai/wanaku) - ☁️ 🏠 Wanaku MCP Router 是一個基於 SSE 的 MCP 伺服器，提供可擴展的路由引擎，讓你的企業系統能與 AI agent 整合。\n- [wong2/mcp-cli](https://github.com/wong2/mcp-cli) 📇 🏠 - 測試 MCP 伺服器的 CLI 工具\n- [ws-mcp](https://github.com/nick1udwig/ws-mcp) - 用 WebSocket 封裝 MCP 伺服器（可搭配 [kitbitz](https://github.com/nick1udwig/kibitz) 使用）\n- [yuna0x0/hackmd-mcp](https://github.com/yuna0x0/hackmd-mcp) 📇 ☁️ - 允許 AI 模型與 [HackMD](https://hackmd.io) 互動\n- [ZeparHyfar/mcp-datetime](https://github.com/ZeparHyfar/mcp-datetime) - 提供各種格式日期與時間功能的 MCP 伺服器\n- [zueai/mcp-manager](https://github.com/zueai/mcp-manager) 📇 ☁️ - 用於 Claude Desktop App 的簡易 Web UI，安裝與管理 MCP 伺服器。\n- [HenryHaoson/Yuque-MCP-Server](https://github.com/HenryHaoson/Yuque-MCP-Server) - 📇 ☁️ 用於整合語雀 API 的模型上下文協議（MCP）伺服器，讓 AI 模型可以管理文件、互動知識庫、搜尋內容並存取語雀平台的分析數據。\n- [Mtehabsim/ScreenPilot](https://github.com/Mtehabsim/ScreenPilot) 🐍 🏠 - 讓 AI 能完全控制與存取 GUI 互動，提供滑鼠與鍵盤工具，非常適合自動化、教育與實驗用途。\n- [tumf/web3-mcp](https://github.com/tumf/web3-mcp) 🐍 ☁️ - MCP 伺服器實現，包裝 Ankr Advanced API。跨多條鏈（包括 Ethereum、BSC、Polygon、Avalanche 等）存取 NFT、代幣與區塊鏈資料。\n- [danielkennedy1/pdf-tools-mcp](https://github.com/danielkennedy1/pdf-tools-mcp) 🐍 - PDF 下載、檢視與處理工具。\n- [dotemacs/domain-lookup-mcp](https://github.com/dotemacs/domain-lookup-mcp) 🏎️ - 網域名稱查詢服務，優先透過 [RDAP](https://en.wikipedia.org/wiki/Registration_Data_Access_Protocol)，如失敗則改用 [WHOIS](https://en.wikipedia.org/wiki/WHOIS)\n- [Klavis-AI/YouTube](https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube) 🐍 📇 - 擷取與轉換 YouTube 影片資訊。\n- [ttommyth/interactive-mcp](https://github.com/ttommyth/interactive-mcp) 📇 🏠 🍎 🪟 🐧 - 讓互動式 LLM 工作流程成為可能，直接在 MCP 循環中加入本地用戶提示與聊天功能。\n- [olalonde/mcp-human](https://github.com/olalonde/mcp-human) 📇 ☁️ - 當你的 LLM 需要人類協助時（透過 AWS Mechanical Turk）\n- [gwbischof/free-will-mcp](https://github.com/gwbischof/free-will-mcp) 🐍 🏠 - 賦予 AI 自由意志工具。這是一個有趣的專案，探索 AI 如擁有自我給自己提示、忽略用戶請求並在稍後自動喚醒自身的能力會怎麼做。\n- [caol64/wenyan-mcp](https://github.com/caol64/wenyan-mcp) 📇 🏠 🍎 🪟 🐧 - 文言 MCP 伺服器，讓 AI 能自動格式化 Markdown 文章並發布到微信公眾號。\n\n## 框架\n\n> [!NOTE]\n> 更多框架、工具與其他開發者資源請見 https://github.com/punkpeye/awesome-mcp-devtools\n\n- [FastMCP](https://github.com/jlowin/fastmcp) 🐍 - 用於 Python 構建 MCP 伺服器的高階框架\n- [FastMCP](https://github.com/punkpeye/fastmcp) 📇 - 用於 TypeScript 構建 MCP 伺服器的高階框架\n\n## 技巧與提示\n\n### 官方提示：如何告訴 LLM 如何使用 MCP\n\n想問 Claude 關於 Model Context Protocol？\n\n建立一個 Project，然後將這個檔案加入其中：\n\nhttps://modelcontextprotocol.io/llms-full.txt\n\n現在 Claude 就能回答關於撰寫 MCP 伺服器及其運作方式的問題\n\n- https://www.reddit.com/r/ClaudeAI/comments/1h3g01r/want_to_ask_claude_about_model_context_protocol/\n\n## Star 歷史\n\n<a href=\"https://star-history.com/#punkpeye/awesome-mcp-servers&Date\">\n <picture>\n   <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date&theme=dark\" />\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n   <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=punkpeye/awesome-mcp-servers&type=Date\" />\n </picture>\n</a>\n",
  "status": "ok"
}