[
  {
    "Id": 1,
    "Content": "# GPT-Load\n\n中文文档 | [English](https://raw.githubusercontent.com/tbphp/gpt-load/main/README_EN.md)\n\n[![Release](https://img.shields.io/github/v/release/tbphp/gpt-load)](https://github.com/tbphp/gpt-load/releases)\n![Go Version](https://img.shields.io/badge/Go-1.23+-blue.svg)\n![License](https://img.shields.io/badge/license-MIT-green.svg)\n\n一个高性能、企业级的 AI 接口透明代理服务，专门为需要集成多种 AI 服务的企业和开发者设计。采用 Go 语言开发，具备智能密钥管理、负载均衡和完善的监控功能，专为高并发生产环境而设计。\n\n详细请查看[官方文档](https://www.gpt-load.com/docs)\n\n<a href=\"https://hellogithub.com/repository/tbphp/gpt-load\" target=\"_blank\"><img src=\"https://api.hellogithub.com/v1/widgets/recommend.svg?rid=554dc4c46eb14092b9b0c56f1eb9021c&claim_uid=Qlh8vzrWJ0HCneG\" alt=\"Featured｜HelloGitHub\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" /></a>\n\n## 功能特性\n\n- **透明代理**: 完全保留原生 API 格式，支持 OpenAI、Google Gemini 和 Anthropic Claude 等多种格式\n- **智能密钥管理**: 高性能密钥池，支持分组管理、自动轮换和故障恢复\n- **负载均衡**: 支持多上游端点的加权负载均衡，提升服务可用性\n- **智能故障处理**: 自动密钥黑名单管理和恢复机制，确保服务连续性\n- **动态配置**: 系统设置和分组配置支持热重载，无需重启即可生效\n- **企业级架构**: 分布式主从部署，支持水平扩展和高可用\n- **现代化管理**: 基于 Vue 3 的 Web 管理界面，直观易用\n- **全面监控**: 实时统计、健康检查、详细请求日志\n- **高性能设计**: 零拷贝流式传输、连接池复用、原子操作\n- **生产就绪**: 优雅关闭、错误恢复、完善的安全机制\n- **双重认证体系**: 管理端与代理端认证分离，代理认证支持全局和分组级别密钥\n\n## 支持的 AI 服务\n\nGPT-Load 作为透明代理服务，完整保留各 AI 服务商的原生 API 格式：\n\n- **OpenAI 格式**: 官方 OpenAI API、Azure OpenAI、以及其他 OpenAI 兼容服务\n- **Google Gemini 格式**: Gemini Pro、Gemini Pro Vision 等模型的原生 API\n- **Anthropic Claude 格式**: Claude 系列模型，支持高质量的对话和文本生成\n\n## 快速开始\n\n### 环境要求\n",
    "ContentSha": "kxoTECTCj7e1PidkGAM79UjA6IAoAShCgbHaqZfX35M=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# GPT-Load\n\nChinese Document | [English](https://raw.githubusercontent.com/tbphp/gpt-load/main/README_EN.md)\n\n[![Release](https://img.shields.io/github/v/release/tbphp/gpt-load)](https://github.com/tbphp/gpt-load/releases)\n![Go Version](https://img.shields.io/badge/Go-1.23+-blue.svg)\n![License](https://img.shields.io/badge/license-MIT-green.svg)\n\nA high-performance, enterprise-grade AI interface transparent proxy service, specially designed for enterprises and developers who need to integrate multiple AI services. Developed in Go, it features intelligent key management, load balancing, and comprehensive monitoring, specifically designed for high-concurrency production environments.\n\nFor details, please refer to the [official documentation](https://www.gpt-load.com/docs)\n\n<a href=\"https://hellogithub.com/repository/tbphp/gpt-load\" target=\"_blank\"><img src=\"https://api.hellogithub.com/v1/widgets/recommend.svg?rid=554dc4c46eb14092b9b0c56f1eb9021c&claim_uid=Qlh8vzrWJ0HCneG\" alt=\"Featured｜HelloGitHub\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" /></a>\n\n## Features\n\n- **Transparent Proxy**: Fully retains the native API format, supporting multiple formats such as OpenAI, Google Gemini, and Anthropic Claude\n- **Intelligent Key Management**: High-performance key pool, supporting group management, automatic rotation, and fault recovery\n- **Load Balancing**: Supports weighted load balancing across multiple upstream endpoints to improve service availability\n- **Intelligent Fault Handling**: Automatic key blacklist management and recovery mechanism to ensure service continuity\n- **Dynamic Configuration**: System settings and group configurations support hot reloads, effective without restarting\n- **Enterprise-grade Architecture**: Distributed master-slave deployment, supporting horizontal scaling and high availability\n- **Modern Management**: Web management interface based on Vue 3, intuitive and user-friendly\n- **Comprehensive Monitoring**: Real-time statistics, health checks, detailed request logs\n- **High-performance Design**: Zero-copy streaming transmission, connection pool reuse, atomic operations\n- **Production Ready**: Graceful shutdown, error recovery, complete security mechanisms\n- **Dual Authentication System**: Separate authentication for management and proxy ends; proxy authentication supports global and group-level keys\n\n## Supported AI Services\n\nAs a transparent proxy service, GPT-Load fully retains the native API formats of various AI providers:\n\n- **OpenAI Format**: Official OpenAI API, Azure OpenAI, and other OpenAI-compatible services\n- **Google Gemini Format**: Native APIs for models like Gemini Pro, Gemini Pro Vision, etc.\n- **Anthropic Claude Format**: Claude series models, supporting high-quality dialogue and text generation\n\n## Quick Start\n\n### Environment Requirements\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "RjOLcLkO7+fvPkq4aQh5H7CPq0qnLheFyagljzXpynk=",
        "originContent": "# GPT-Load",
        "translatedContent": "# GPT-Load"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "JZjvyo0iHFNfqPpgF2rQ8RsoBgFtk7blgomQog0W1CQ=",
        "originContent": "中文文档 | [English](https://raw.githubusercontent.com/tbphp/gpt-load/main/README_EN.md)",
        "translatedContent": "Chinese Document | [English](https://raw.githubusercontent.com/tbphp/gpt-load/main/README_EN.md)"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "kEDsE/E6+va97Ob2qiNX4Xv49dR8YXxj7UWxdU/gIPE=",
        "originContent": "[![Release](https://img.shields.io/github/v/release/tbphp/gpt-load)](https://github.com/tbphp/gpt-load/releases)",
        "translatedContent": "[![Release](https://img.shields.io/github/v/release/tbphp/gpt-load)](https://github.com/tbphp/gpt-load/releases)"
      },
      {
        "row": 6,
        "rowsha": "/G4+FGJjboAveSkZm2cYlAI56Af35DHPZSIwfsSli2c=",
        "originContent": "![Go Version](https://img.shields.io/badge/Go-1.23+-blue.svg)",
        "translatedContent": "![Go Version](https://img.shields.io/badge/Go-1.23+-blue.svg)"
      },
      {
        "row": 7,
        "rowsha": "dPwh7/zmXLYQA/Vp3ajZE1tjWTO8euValiNDGZm300w=",
        "originContent": "![License](https://img.shields.io/badge/license-MIT-green.svg)",
        "translatedContent": "![License](https://img.shields.io/badge/license-MIT-green.svg)"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "q/2IxfiY1Ce0ePtJi+z8ppKVs7PXC4lfRXigL81QsAs=",
        "originContent": "一个高性能、企业级的 AI 接口透明代理服务，专门为需要集成多种 AI 服务的企业和开发者设计。采用 Go 语言开发，具备智能密钥管理、负载均衡和完善的监控功能，专为高并发生产环境而设计。",
        "translatedContent": "A high-performance, enterprise-grade AI interface transparent proxy service, specially designed for enterprises and developers who need to integrate multiple AI services. Developed in Go, it features intelligent key management, load balancing, and comprehensive monitoring, specifically designed for high-concurrency production environments."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "dU80+mZTSv59O6uG8vnZRqc4kAvgq9NvIJDX27+9F7A=",
        "originContent": "详细请查看[官方文档](https://www.gpt-load.com/docs)",
        "translatedContent": "For details, please refer to the [official documentation](https://www.gpt-load.com/docs)"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "BsTSLwOuCScZnHg1Kqgx03QdtuCP7fJ40mAbMAWHYnI=",
        "originContent": "<a href=\"https://hellogithub.com/repository/tbphp/gpt-load\" target=\"_blank\"><img src=\"https://api.hellogithub.com/v1/widgets/recommend.svg?rid=554dc4c46eb14092b9b0c56f1eb9021c&claim_uid=Qlh8vzrWJ0HCneG\" alt=\"Featured｜HelloGitHub\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" /></a>",
        "translatedContent": "<a href=\"https://hellogithub.com/repository/tbphp/gpt-load\" target=\"_blank\"><img src=\"https://api.hellogithub.com/v1/widgets/recommend.svg?rid=554dc4c46eb14092b9b0c56f1eb9021c&claim_uid=Qlh8vzrWJ0HCneG\" alt=\"Featured｜HelloGitHub\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" /></a>"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "hcZsKlpSPkTFpH/QegoKHGVWmJDSH48IDfZVw6T3YEk=",
        "originContent": "## 功能特性",
        "translatedContent": "## Features"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "hlIyiXlxX3nzLvO++OscbX2M4QJ4DBxKYI9hkbxydSU=",
        "originContent": "- **透明代理**: 完全保留原生 API 格式，支持 OpenAI、Google Gemini 和 Anthropic Claude 等多种格式",
        "translatedContent": "- **Transparent Proxy**: Fully retains the native API format, supporting multiple formats such as OpenAI, Google Gemini, and Anthropic Claude"
      },
      {
        "row": 18,
        "rowsha": "qU3WAqqfZ4+ixP6vHmosqSNmz+ZkeNeatruXs4kRiTQ=",
        "originContent": "- **智能密钥管理**: 高性能密钥池，支持分组管理、自动轮换和故障恢复",
        "translatedContent": "- **Intelligent Key Management**: High-performance key pool, supporting group management, automatic rotation, and fault recovery"
      },
      {
        "row": 19,
        "rowsha": "tLln96le0SKjk+Ti9rAKuhQZcDvNX1TVFtz00beiEEs=",
        "originContent": "- **负载均衡**: 支持多上游端点的加权负载均衡，提升服务可用性",
        "translatedContent": "- **Load Balancing**: Supports weighted load balancing across multiple upstream endpoints to improve service availability"
      },
      {
        "row": 20,
        "rowsha": "ljjtSiMwIPmE6vY0FxYebDxqI0E4X7onX7wFX5WRDk4=",
        "originContent": "- **智能故障处理**: 自动密钥黑名单管理和恢复机制，确保服务连续性",
        "translatedContent": "- **Intelligent Fault Handling**: Automatic key blacklist management and recovery mechanism to ensure service continuity"
      },
      {
        "row": 21,
        "rowsha": "dKTGO4cfnLMYbDUno3vIzcraMEAHdVDrIzJZyAf/E+8=",
        "originContent": "- **动态配置**: 系统设置和分组配置支持热重载，无需重启即可生效",
        "translatedContent": "- **Dynamic Configuration**: System settings and group configurations support hot reloads, effective without restarting"
      },
      {
        "row": 22,
        "rowsha": "yk+wdG2EM3g7feF/ciPDZ/he+GtQoLsQ9D1gzu8mPtA=",
        "originContent": "- **企业级架构**: 分布式主从部署，支持水平扩展和高可用",
        "translatedContent": "- **Enterprise-grade Architecture**: Distributed master-slave deployment, supporting horizontal scaling and high availability"
      },
      {
        "row": 23,
        "rowsha": "WrtkVpHwOfwk6UqpPDR5yQQpkjBQ8DEBWaqA8V01Ok8=",
        "originContent": "- **现代化管理**: 基于 Vue 3 的 Web 管理界面，直观易用",
        "translatedContent": "- **Modern Management**: Web management interface based on Vue 3, intuitive and user-friendly"
      },
      {
        "row": 24,
        "rowsha": "D7W8xCcS3fxCpIUu5zOn8d/aAbgQ6z536Bg7XRCPTt0=",
        "originContent": "- **全面监控**: 实时统计、健康检查、详细请求日志",
        "translatedContent": "- **Comprehensive Monitoring**: Real-time statistics, health checks, detailed request logs"
      },
      {
        "row": 25,
        "rowsha": "vPGXnb0TGK8G6PSR06q/4ERkSPcA5aCa4cvRYNRErMo=",
        "originContent": "- **高性能设计**: 零拷贝流式传输、连接池复用、原子操作",
        "translatedContent": "- **High-performance Design**: Zero-copy streaming transmission, connection pool reuse, atomic operations"
      },
      {
        "row": 26,
        "rowsha": "Gk6l0VG0wUt6Ywx1dBSqsto4jNTDOiwKlVO4RAxlhdU=",
        "originContent": "- **生产就绪**: 优雅关闭、错误恢复、完善的安全机制",
        "translatedContent": "- **Production Ready**: Graceful shutdown, error recovery, complete security mechanisms"
      },
      {
        "row": 27,
        "rowsha": "fgxR0lhBgA9Zku+gphDYWS90aM9Zj2cWQpdF6d17lUM=",
        "originContent": "- **双重认证体系**: 管理端与代理端认证分离，代理认证支持全局和分组级别密钥",
        "translatedContent": "- **Dual Authentication System**: Separate authentication for management and proxy ends; proxy authentication supports global and group-level keys"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "bs7palGENFJhYME3IIHhLMEwTgoZm6Puvpm/dYjmYB0=",
        "originContent": "## 支持的 AI 服务",
        "translatedContent": "## Supported AI Services"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "h1BlEqCsHzw5/cdrgKShJxfxXW6Un1n3UYdRr5QhghE=",
        "originContent": "GPT-Load 作为透明代理服务，完整保留各 AI 服务商的原生 API 格式：",
        "translatedContent": "As a transparent proxy service, GPT-Load fully retains the native API formats of various AI providers:"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "j0tzSoUKe2UpgRE6P0TnxGaK0D9eTHXbj9MEqp79ajw=",
        "originContent": "- **OpenAI 格式**: 官方 OpenAI API、Azure OpenAI、以及其他 OpenAI 兼容服务",
        "translatedContent": "- **OpenAI Format**: Official OpenAI API, Azure OpenAI, and other OpenAI-compatible services"
      },
      {
        "row": 34,
        "rowsha": "5oSdd1/kTerkcr9nk9LP/cqrYs2HCaZtiqoZkZYsM48=",
        "originContent": "- **Google Gemini 格式**: Gemini Pro、Gemini Pro Vision 等模型的原生 API",
        "translatedContent": "- **Google Gemini Format**: Native APIs for models like Gemini Pro, Gemini Pro Vision, etc."
      },
      {
        "row": 35,
        "rowsha": "sWmKdTCLP/iHkvNxzvDz/IThvBmHUQqPjxyWOQTKwe4=",
        "originContent": "- **Anthropic Claude 格式**: Claude 系列模型，支持高质量的对话和文本生成",
        "translatedContent": "- **Anthropic Claude Format**: Claude series models, supporting high-quality dialogue and text generation"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "N2Zf5IM5tBDMC3F8L/jU1lr90aB/iqj31z3WwRXmQTU=",
        "originContent": "## 快速开始",
        "translatedContent": "## Quick Start"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "+r2y2uXVS4A9gUZOoxSZy1nkMpyD7saUQ4rPpon3Ucw=",
        "originContent": "### 环境要求",
        "translatedContent": "### Environment Requirements"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "- Go 1.23+ (源码构建)\n- Docker (容器化部署)\n- MySQL, PostgreSQL, 或 SQLite (数据库存储)\n- Redis (缓存和分布式协调，可选)\n\n### 方式一：Docker 快速开始\n",
    "ContentSha": "EJR9A9OU+VfdNE267wV+ekVHVvzyYMLkzimdyhX0pnQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "- Go 1.23+ (Source Code Build)\n- Docker (Containerized Deployment)\n- MySQL, PostgreSQL, or SQLite (Database Storage)\n- Redis (Caching and Distributed Coordination, Optional)\n\n### Method 1: Docker Quick Start\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "y1cF8PkB6HlNQEEYysfO3j+LLZ/N982wt3mxSxDnwxs=",
        "originContent": "- Go 1.23+ (源码构建)",
        "translatedContent": "- Go 1.23+ (Source Code Build)"
      },
      {
        "row": 2,
        "rowsha": "EolXRSY729gErJyibHRpGu+B98CAvn9RATZ3mkgwjcs=",
        "originContent": "- Docker (容器化部署)",
        "translatedContent": "- Docker (Containerized Deployment)"
      },
      {
        "row": 3,
        "rowsha": "j3nwWeqiGX9dqiv0Bsms1CyZ9HYbmGVcqyIX7gXrcgY=",
        "originContent": "- MySQL, PostgreSQL, 或 SQLite (数据库存储)",
        "translatedContent": "- MySQL, PostgreSQL, or SQLite (Database Storage)"
      },
      {
        "row": 4,
        "rowsha": "zZ91gYp69jxdoB5I9XxWXFXcS34jFiJOD2aSGfKpiv8=",
        "originContent": "- Redis (缓存和分布式协调，可选)",
        "translatedContent": "- Redis (Caching and Distributed Coordination, Optional)"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "Xj6I19PTIZvPwAwRJ2u5uRPPxO8HSo8lN3H8KTLstlI=",
        "originContent": "### 方式一：Docker 快速开始",
        "translatedContent": "### Method 1: Docker Quick Start"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 3,
    "Content": "```bash\ndocker run -d --name gpt-load \\\n    -p 3001:3001 \\\n    -e AUTH_KEY=sk-123456 \\\n    -v \"$(pwd)/data\":/app/data \\\n    ghcr.io/tbphp/gpt-load:latest\n```",
    "ContentSha": "ZY+bBDc7i6mOOvaTKKRHqQFRKD6R6Yft80T9zz4vEUc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ndocker run -d --name gpt-load \\\n    -p 3001:3001 \\\n    -e AUTH_KEY=sk-123456 \\\n    -v \"$(pwd)/data\":/app/data \\\n    ghcr.io/tbphp/gpt-load:latest\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "Daap3XENd09BoDHhSwesfgu1UQTP7kSCSOwcUpxLSFk=",
        "originContent": "docker run -d --name gpt-load \\",
        "translatedContent": "docker run -d --name gpt-load \\"
      },
      {
        "row": 3,
        "rowsha": "kpxgG+/+yQTJHLBwbuAJJU6WYitlp/ksLSzmneNA/Qg=",
        "originContent": "    -p 3001:3001 \\",
        "translatedContent": "    -p 3001:3001 \\"
      },
      {
        "row": 4,
        "rowsha": "3d7nNPYESNv28E1UfQt0gmVoVgNahuhDmS8jWZUbyeo=",
        "originContent": "    -e AUTH_KEY=sk-123456 \\",
        "translatedContent": "    -e AUTH_KEY=sk-123456 \\"
      },
      {
        "row": 5,
        "rowsha": "KPyuPQXgz+0EJvh8dfUzE9nflZX9icAPSc0T3oq3xWE=",
        "originContent": "    -v \"$(pwd)/data\":/app/data \\",
        "translatedContent": "    -v \"$(pwd)/data\":/app/data \\"
      },
      {
        "row": 6,
        "rowsha": "BleTvokf8KPCChDWkECDfed9G1ByOlxC+7776DhqPRE=",
        "originContent": "    ghcr.io/tbphp/gpt-load:latest",
        "translatedContent": "    ghcr.io/tbphp/gpt-load:latest"
      },
      {
        "row": 7,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 4,
    "Content": "\n> 使用 `sk-123456` 登录管理界面：<http://localhost:3001>\n\n### 方式二：使用 Docker Compose（推荐）\n\n**安装命令：**\n",
    "ContentSha": "AAUcGNRTgiRUaLkwa5826ej7VHulmcLUfEboMr3ooa4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n> Log in to the management interface using `sk-123456`: <http://localhost:3001>\n\n### Method 2: Using Docker Compose (Recommended)\n\n**Installation command:**\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "sbrpHhx5suq1vNAf3CEaDH1zJPGEYrgAYAIDqrivEFM=",
        "originContent": "> 使用 `sk-123456` 登录管理界面：<http://localhost:3001>",
        "translatedContent": "> Log in to the management interface using `sk-123456`: <http://localhost:3001>"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "g+MloDchNv1pVwADyHL3U3CNnoZhHWPe8ceZPcm7ge4=",
        "originContent": "### 方式二：使用 Docker Compose（推荐）",
        "translatedContent": "### Method 2: Using Docker Compose (Recommended)"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "6dyr4RQplt/G7IL1AroW7HN/TfH+66NaR9alKS4w6MU=",
        "originContent": "**安装命令：**",
        "translatedContent": "**Installation command:**"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 5,
    "Content": "```bash\n# 创建目录\nmkdir -p gpt-load && cd gpt-load\n\n# 下载配置文件\nwget https://raw.githubusercontent.com/tbphp/gpt-load/refs/heads/main/docker-compose.yml\nwget -O .env https://raw.githubusercontent.com/tbphp/gpt-load/refs/heads/main/.env.example\n\n# 启动服务\ndocker compose up -d\n```",
    "ContentSha": "0YR2G5BLP9n1OKpf4Oc8LOH8AmEaWduJZLU4u7cNsPo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n# 创建目录\nmkdir -p gpt-load && cd gpt-load\n\n# 下载配置文件\nwget https://raw.githubusercontent.com/tbphp/gpt-load/refs/heads/main/docker-compose.yml\nwget -O .env https://raw.githubusercontent.com/tbphp/gpt-load/refs/heads/main/.env.example\n\n# 启动服务\ndocker compose up -d\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "WQP1b3wVqy/rTM+IUJI3UspD6AkNmaKt9pYCIFiCosI=",
        "originContent": "# 创建目录",
        "translatedContent": "# 创建目录"
      },
      {
        "row": 3,
        "rowsha": "WLi6W/UjnwzHP9UoeCxGzaax4iZMMQWLlPF/0XIbxqo=",
        "originContent": "mkdir -p gpt-load && cd gpt-load",
        "translatedContent": "mkdir -p gpt-load && cd gpt-load"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "2peOCyD6pcFRgxQcOHdGVm0LKJK3DZcYIUWdoy2Rmes=",
        "originContent": "# 下载配置文件",
        "translatedContent": "# 下载配置文件"
      },
      {
        "row": 6,
        "rowsha": "pczT63yGJla9tSu9FSMhpM7+Jj146EdhR32uYP7ityM=",
        "originContent": "wget https://raw.githubusercontent.com/tbphp/gpt-load/refs/heads/main/docker-compose.yml",
        "translatedContent": "wget https://raw.githubusercontent.com/tbphp/gpt-load/refs/heads/main/docker-compose.yml"
      },
      {
        "row": 7,
        "rowsha": "BKV0cJZZSZgWAnNROhrelrTJpj6elMTW89z9+cK7ZdE=",
        "originContent": "wget -O .env https://raw.githubusercontent.com/tbphp/gpt-load/refs/heads/main/.env.example",
        "translatedContent": "wget -O .env https://raw.githubusercontent.com/tbphp/gpt-load/refs/heads/main/.env.example"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "Hm40Mmhtc4qEy5WArx2AWjmNL9ILQhzyXl0t/t+ylZs=",
        "originContent": "# 启动服务",
        "translatedContent": "# 启动服务"
      },
      {
        "row": 10,
        "rowsha": "Mx5NzM1SvqjT2/8dFmacWsyf3foddC+jxQH2dABZqZk=",
        "originContent": "docker compose up -d",
        "translatedContent": "docker compose up -d"
      },
      {
        "row": 11,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 6,
    "Content": "\n默认安装的是 SQLite 版本，适合轻量单机应用。\n\n如需安装 MySQL, PostgreSQL 及 Redis，请在 `docker-compose.yml` 文件中取消所需服务的注释，并配置好对应的环境配置重启即可。\n\n**其他命令：**\n",
    "ContentSha": "+ZjGKnPJZld56XFV4FpVaTNFJaX6PCoT067JgxlPv6w=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nThe default installation is the SQLite version, suitable for lightweight standalone applications.\n\nIf you need to install MySQL, PostgreSQL, and Redis, please uncomment the required services in the `docker-compose.yml` file and configure the corresponding environment settings before restarting.\n\n**Other commands:**\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "m4v+n8I+WNVN9BBH1v/Whjup3/r+6FZsQ7fmE9z5m5E=",
        "originContent": "默认安装的是 SQLite 版本，适合轻量单机应用。",
        "translatedContent": "The default installation is the SQLite version, suitable for lightweight standalone applications."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "2Ze7i+5MOkr6gafYP3g+/MGfq7Tib8NBp0vO4zmH1mw=",
        "originContent": "如需安装 MySQL, PostgreSQL 及 Redis，请在 `docker-compose.yml` 文件中取消所需服务的注释，并配置好对应的环境配置重启即可。",
        "translatedContent": "If you need to install MySQL, PostgreSQL, and Redis, please uncomment the required services in the `docker-compose.yml` file and configure the corresponding environment settings before restarting."
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "6dTpOcEUpAZO1DmUt67euKdGxuwtXnl7LqCzixEn46c=",
        "originContent": "**其他命令：**",
        "translatedContent": "**Other commands:**"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 7,
    "Content": "```bash\n# 查看服务状态\ndocker compose ps\n\n# 查看日志\ndocker compose logs -f\n\n# 重启服务\ndocker compose down && docker compose up -d\n\n# 更新到最新版本\ndocker compose pull && docker compose down && docker compose up -d\n```",
    "ContentSha": "8yKn9VZ/63FqtwNwKIG0LtmOcjmcH5OL+xyqhGN5cJo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n# 查看服务状态\ndocker compose ps\n\n# 查看日志\ndocker compose logs -f\n\n# 重启服务\ndocker compose down && docker compose up -d\n\n# 更新到最新版本\ndocker compose pull && docker compose down && docker compose up -d\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "yVBmGnAnYuaZT2DGQo0FoVKMpgurLhyziZy19M4WlbU=",
        "originContent": "# 查看服务状态",
        "translatedContent": "# 查看服务状态"
      },
      {
        "row": 3,
        "rowsha": "GemOW/IvTuLsOmrB718/3WRt2K4q3CNEmfbyFtAZlhg=",
        "originContent": "docker compose ps",
        "translatedContent": "docker compose ps"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "/LDIaJrKLoosLe3q/9Fllnc+lvaWKYcIQn3ukWeVcqU=",
        "originContent": "# 查看日志",
        "translatedContent": "# 查看日志"
      },
      {
        "row": 6,
        "rowsha": "aBu9qnlWKG/ydQGCAyT5CVKK/iKnaNmA6tRtfAUkQUA=",
        "originContent": "docker compose logs -f",
        "translatedContent": "docker compose logs -f"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "1UaepUwIKh0Ndc4k+jI1PHTu1CzrcKUKsOWI2eybzzU=",
        "originContent": "# 重启服务",
        "translatedContent": "# 重启服务"
      },
      {
        "row": 9,
        "rowsha": "Ijl3QTOoKJEqZI+MVfT9HXpEChYiPz0NBwzHni8Fqt8=",
        "originContent": "docker compose down && docker compose up -d",
        "translatedContent": "docker compose down && docker compose up -d"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "YR03UPYxHYfgtOVZLVViQs1R5sinfZLKjBIYS9fQNX8=",
        "originContent": "# 更新到最新版本",
        "translatedContent": "# 更新到最新版本"
      },
      {
        "row": 12,
        "rowsha": "relrJpYLgc0vfLYLVpm91jDp0ns/fLi/ykntNM+rP4Q=",
        "originContent": "docker compose pull && docker compose down && docker compose up -d",
        "translatedContent": "docker compose pull && docker compose down && docker compose up -d"
      },
      {
        "row": 13,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 8,
    "Content": "\n部署完成后：\n\n- 访问 Web 管理界面：<http://localhost:3001>\n- API 代理地址：<http://localhost:3001/proxy>\n\n> 使用默认的认证 Key `sk-123456` 登录管理端，认证 Key 可以在 .env 中修改 AUTH_KEY。\n\n### 方式三：源码构建\n\n源码构建需要本地已安装数据库（SQLite、MySQL 或 PostgreSQL）和 Redis（可选）。\n",
    "ContentSha": "Ku2xLUa2ONoKZEZUfmWlH6yjm02tLOOWs7Sfk6bOTMw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nAfter deployment:\n\n- Access the Web management interface: <http://localhost:3001>\n- API proxy address: <http://localhost:3001/proxy>\n\n> Use the default authentication Key `sk-123456` to log in to the management console, the authentication Key can be modified in the .env file under AUTH_KEY.\n\n### Method 3: Source Code Build\n\nSource code build requires a locally installed database (SQLite, MySQL, or PostgreSQL) and Redis (optional).\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "iLv0AeciJW2DFuZkrrbQnL4L2MYA/IsmRRNMp1UYI+o=",
        "originContent": "部署完成后：",
        "translatedContent": "After deployment:"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "uEPdFG5NbnR6FnK32cn631Zk3bKwKbqyQB1MLNMuS0o=",
        "originContent": "- 访问 Web 管理界面：<http://localhost:3001>",
        "translatedContent": "- Access the Web management interface: <http://localhost:3001>"
      },
      {
        "row": 5,
        "rowsha": "X+O0xHY8GtScohDxKQtvQguErTKxEbGqzhLE2yEfLBc=",
        "originContent": "- API 代理地址：<http://localhost:3001/proxy>",
        "translatedContent": "- API proxy address: <http://localhost:3001/proxy>"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "QtyE7h056O2b4uk5DxSKScvCwTrSIUHiBZPpNkPcvAE=",
        "originContent": "> 使用默认的认证 Key `sk-123456` 登录管理端，认证 Key 可以在 .env 中修改 AUTH_KEY。",
        "translatedContent": "> Use the default authentication Key `sk-123456` to log in to the management console, the authentication Key can be modified in the .env file under AUTH_KEY."
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "AlMCHjfl5Z5CjDuqR/UiRtR7AfJNfOzS0cF2NHnKVlk=",
        "originContent": "### 方式三：源码构建",
        "translatedContent": "### Method 3: Source Code Build"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "xMFUcf0LBl89jWaxghaxLHziew+2eYi96SAJ0HvjkCA=",
        "originContent": "源码构建需要本地已安装数据库（SQLite、MySQL 或 PostgreSQL）和 Redis（可选）。",
        "translatedContent": "Source code build requires a locally installed database (SQLite, MySQL, or PostgreSQL) and Redis (optional)."
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 9,
    "Content": "```bash\n# 克隆并构建\ngit clone https://github.com/tbphp/gpt-load.git\ncd gpt-load\ngo mod tidy\n\n# 创建配置\ncp .env.example .env\n\n# 修改 .env 中 DATABASE_DSN 和 REDIS_DSN 配置\n# REDIS_DSN 为可选，如果不配置则启用内存存储\n\n# 运行\nmake run\n```",
    "ContentSha": "msISggz6NolXgtIUw6fUgmhdt4C/mElpc/KuRvIpqLk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n# 克隆并构建\ngit clone https://github.com/tbphp/gpt-load.git\ncd gpt-load\ngo mod tidy\n\n# 创建配置\ncp .env.example .env\n\n# 修改 .env 中 DATABASE_DSN 和 REDIS_DSN 配置\n# REDIS_DSN 为可选，如果不配置则启用内存存储\n\n# 运行\nmake run\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "NNPKP/LaJNfc14o8fbEFcZuTveq0RW+qB3gX9Ot6nws=",
        "originContent": "# 克隆并构建",
        "translatedContent": "# 克隆并构建"
      },
      {
        "row": 3,
        "rowsha": "HnninpgbstprVM9MTidiKdOI+3vBZcUw0jHN/3TEqvQ=",
        "originContent": "git clone https://github.com/tbphp/gpt-load.git",
        "translatedContent": "git clone https://github.com/tbphp/gpt-load.git"
      },
      {
        "row": 4,
        "rowsha": "1yVP1hDYCUIW+xfyMstUexZ8WqRYHILh6uU8MdeopmQ=",
        "originContent": "cd gpt-load",
        "translatedContent": "cd gpt-load"
      },
      {
        "row": 5,
        "rowsha": "WuvfdEbrypnxPKK0VYgNXVUjOi2DSYzwl5ItoCgosC8=",
        "originContent": "go mod tidy",
        "translatedContent": "go mod tidy"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "cm+3lbR8pU9pp3A+D8QHe8gF4G5hT45S8Hos23EXEMM=",
        "originContent": "# 创建配置",
        "translatedContent": "# 创建配置"
      },
      {
        "row": 8,
        "rowsha": "pFxdvPKVWlcbGNfSybU7jLc6h2jjaF/ey8hGKiBArIw=",
        "originContent": "cp .env.example .env",
        "translatedContent": "cp .env.example .env"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "4Su3gKSnalnrWlgT0sRCueANmpCTuROQzzGF8tZAO3Y=",
        "originContent": "# 修改 .env 中 DATABASE_DSN 和 REDIS_DSN 配置",
        "translatedContent": "# 修改 .env 中 DATABASE_DSN 和 REDIS_DSN 配置"
      },
      {
        "row": 11,
        "rowsha": "XF62pQM4yFc5gB4z41gdwxI9tT+cygXGRdyKT9a23sQ=",
        "originContent": "# REDIS_DSN 为可选，如果不配置则启用内存存储",
        "translatedContent": "# REDIS_DSN 为可选，如果不配置则启用内存存储"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "B5rgJXe+XnXDjM6BocLF4mo5LVWoIe4shGD8Hox2m7g=",
        "originContent": "# 运行",
        "translatedContent": "# 运行"
      },
      {
        "row": 14,
        "rowsha": "d7zrxt/5QhHZYNJLt0GBN6vSgW+YlyBSIBripzmxzcQ=",
        "originContent": "make run",
        "translatedContent": "make run"
      },
      {
        "row": 15,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 10,
    "Content": "\n部署完成后：\n\n- 访问 Web 管理界面：<http://localhost:3001>\n- API 代理地址：<http://localhost:3001/proxy>\n\n> 使用默认的认证 Key `sk-123456` 登录管理端，认证 Key 可以在 .env 中修改 AUTH_KEY。\n\n### 方式四：集群部署\n\n集群部署需要所有节点都连接同一个 MySQL（或者 PostgreSQL） 和 Redis，并且 Redis 是必须要求。建议使用统一的分布式 MySQL 和 Redis 集群。\n\n**部署要求：**\n\n- 所有节点必须配置相同的 `AUTH_KEY`、`DATABASE_DSN`、`REDIS_DSN`\n- 一主多从架构，从节点必须配置环境变量：`IS_SLAVE=true`\n\n详细请参考[集群部署文档](https://www.gpt-load.com/docs/cluster)\n\n## 配置系统\n\n### 配置架构概述\n\nGPT-Load 采用双层配置架构：\n\n#### 1. 静态配置（环境变量）\n\n- **特点**：应用启动时读取，运行期间不可修改，需重启应用生效\n- **用途**：基础设施配置，如数据库连接、服务器端口、认证密钥等\n- **管理方式**：通过 `.env` 文件或系统环境变量设置\n\n#### 2. 动态配置（热重载）\n\n- **系统设置**：存储在数据库中，为整个应用提供统一的行为基准\n- **分组配置**：为特定分组定制的行为参数，可覆盖系统设置\n- **配置优先级**：分组配置 > 系统设置 > 环境配置\n- **特点**：支持热重载，修改后立即生效，无需重启应用\n\n<details>\n<summary>静态配置（环境变量）</summary>",
    "ContentSha": "gEwgnfBQH87XO+VzDIF540Pib95qsgSk6r8emjpzrM4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "After deployment:\n\n- Access the Web management interface: <http://localhost:3001>\n- API proxy address: <http://localhost:3001/proxy>\n\n> Use the default authentication Key `sk-123456` to log in to the management end, the authentication Key can be modified in the .env file under AUTH_KEY.\n\n### Method 4: Cluster Deployment\n\nCluster deployment requires all nodes to connect to the same MySQL (or PostgreSQL) and Redis, and Redis is mandatory. It is recommended to use unified distributed MySQL and Redis clusters.\n\n**Deployment requirements:**\n\n- All nodes must configure the same `AUTH_KEY`, `DATABASE_DSN`, `REDIS_DSN`\n- Master-slave architecture, slave nodes must configure the environment variable: `IS_SLAVE=true`\n\nFor details, please refer to the [Cluster Deployment Documentation](https://www.gpt-load.com/docs/cluster)\n\n## Configure the System\n\n### Configuration Architecture Overview\n\nGPT-Load adopts a two-layer configuration architecture:\n\n#### 1. Static Configuration (Environment Variables)\n\n- **Features**: Read at application startup, cannot be modified during runtime, requires application restart to take effect\n- **Purpose**: Infrastructure configuration such as database connection, server port, authentication keys, etc.\n- **Management method**: Set via `.env` file or system environment variables\n\n#### 2. Dynamic Configuration (Hot Reload)\n\n- **System settings**: Stored in the database, providing a unified behavioral baseline for the entire application\n- **Group configuration**: Customized behavioral parameters for specific groups, can override system settings\n- **Configuration priority**: Group configuration > System settings > Environment configuration\n- **Features**: Supports hot reload, takes effect immediately after modification, no need to restart the application\n\n<details>\n<summary>Static Configuration (Environment Variables)</summary>\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "After deployment:"
      },
      {
        "row": 2,
        "rowsha": "iLv0AeciJW2DFuZkrrbQnL4L2MYA/IsmRRNMp1UYI+o=",
        "originContent": "部署完成后：",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "- Access the Web management interface: <http://localhost:3001>"
      },
      {
        "row": 4,
        "rowsha": "uEPdFG5NbnR6FnK32cn631Zk3bKwKbqyQB1MLNMuS0o=",
        "originContent": "- 访问 Web 管理界面：<http://localhost:3001>",
        "translatedContent": "- API proxy address: <http://localhost:3001/proxy>"
      },
      {
        "row": 5,
        "rowsha": "X+O0xHY8GtScohDxKQtvQguErTKxEbGqzhLE2yEfLBc=",
        "originContent": "- API 代理地址：<http://localhost:3001/proxy>",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "> Use the default authentication Key `sk-123456` to log in to the management end, the authentication Key can be modified in the .env file under AUTH_KEY."
      },
      {
        "row": 7,
        "rowsha": "QtyE7h056O2b4uk5DxSKScvCwTrSIUHiBZPpNkPcvAE=",
        "originContent": "> 使用默认的认证 Key `sk-123456` 登录管理端，认证 Key 可以在 .env 中修改 AUTH_KEY。",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Method 4: Cluster Deployment"
      },
      {
        "row": 9,
        "rowsha": "DdpaMvZVu6zZSgwx0rFH++6tRMaIAttxOLycSwHbpV4=",
        "originContent": "### 方式四：集群部署",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Cluster deployment requires all nodes to connect to the same MySQL (or PostgreSQL) and Redis, and Redis is mandatory. It is recommended to use unified distributed MySQL and Redis clusters."
      },
      {
        "row": 11,
        "rowsha": "8Q2F+b66WEl/4P/BYWymJtG5sW4yBgysbEK+fjHCh7A=",
        "originContent": "集群部署需要所有节点都连接同一个 MySQL（或者 PostgreSQL） 和 Redis，并且 Redis 是必须要求。建议使用统一的分布式 MySQL 和 Redis 集群。",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "**Deployment requirements:**"
      },
      {
        "row": 13,
        "rowsha": "Rxuf5IBnlcPoMbfrQi0px48ng3Ihr0rXnx6c3y/BloU=",
        "originContent": "**部署要求：**",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "- All nodes must configure the same `AUTH_KEY`, `DATABASE_DSN`, `REDIS_DSN`"
      },
      {
        "row": 15,
        "rowsha": "CVlxxYiLMpNdAktTN7d3KM62WPA1EoaYJRMDOB2r398=",
        "originContent": "- 所有节点必须配置相同的 `AUTH_KEY`、`DATABASE_DSN`、`REDIS_DSN`",
        "translatedContent": "- Master-slave architecture, slave nodes must configure the environment variable: `IS_SLAVE=true`"
      },
      {
        "row": 16,
        "rowsha": "KrYrwv3bpXlI7PSxW0u1n3TqQRBUt5Goevf4N8tkoCo=",
        "originContent": "- 一主多从架构，从节点必须配置环境变量：`IS_SLAVE=true`",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "For details, please refer to the [Cluster Deployment Documentation](https://www.gpt-load.com/docs/cluster)"
      },
      {
        "row": 18,
        "rowsha": "6oRQWrciipjkq9naPkAUjUAzTzJky1p9p4fXbkHB4Qo=",
        "originContent": "详细请参考[集群部署文档](https://www.gpt-load.com/docs/cluster)",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## Configure the System"
      },
      {
        "row": 20,
        "rowsha": "LPkn7Aomzqc9WV09vv2BJVoIO8RBo8ttmZaFfyyF0fs=",
        "originContent": "## 配置系统",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Configuration Architecture Overview"
      },
      {
        "row": 22,
        "rowsha": "4CHMI2wdVixwD74VVj8/GIkSVcPmMRyiM1Ju4kUpg9w=",
        "originContent": "### 配置架构概述",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "GPT-Load adopts a two-layer configuration architecture:"
      },
      {
        "row": 24,
        "rowsha": "cR4xivmOpyGX2XeTA9vBhTJ3nXS3ISWqUVlLyjTq8+E=",
        "originContent": "GPT-Load 采用双层配置架构：",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### 1. Static Configuration (Environment Variables)"
      },
      {
        "row": 26,
        "rowsha": "Dih52theewX0tYNSBCQSdYbUqGcguTP9Nbyev6bFxFA=",
        "originContent": "#### 1. 静态配置（环境变量）",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "- **Features**: Read at application startup, cannot be modified during runtime, requires application restart to take effect"
      },
      {
        "row": 28,
        "rowsha": "MaDw7eQwBkZVG7rDe3U6LId4x87Uuf82PvXsakbiZaY=",
        "originContent": "- **特点**：应用启动时读取，运行期间不可修改，需重启应用生效",
        "translatedContent": "- **Purpose**: Infrastructure configuration such as database connection, server port, authentication keys, etc."
      },
      {
        "row": 29,
        "rowsha": "5QHBu7boqpQSXccUAjCiEQd2pKboYEssoqar2jr3G5E=",
        "originContent": "- **用途**：基础设施配置，如数据库连接、服务器端口、认证密钥等",
        "translatedContent": "- **Management method**: Set via `.env` file or system environment variables"
      },
      {
        "row": 30,
        "rowsha": "hHV4/MfIjslIEputnA6EC+OizSUWCKjuRhnAy96DnBc=",
        "originContent": "- **管理方式**：通过 `.env` 文件或系统环境变量设置",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### 2. Dynamic Configuration (Hot Reload)"
      },
      {
        "row": 32,
        "rowsha": "x9DwXrPIAe8bpjANMNPe0R71rqhvHuUWNdm/GSnK8yU=",
        "originContent": "#### 2. 动态配置（热重载）",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "- **System settings**: Stored in the database, providing a unified behavioral baseline for the entire application"
      },
      {
        "row": 34,
        "rowsha": "DSmXqP0JejdyU5m0Ya2d7YjNoMgJSp9EBZ3Q9GMIHV8=",
        "originContent": "- **系统设置**：存储在数据库中，为整个应用提供统一的行为基准",
        "translatedContent": "- **Group configuration**: Customized behavioral parameters for specific groups, can override system settings"
      },
      {
        "row": 35,
        "rowsha": "BW9NU9kjGGDltd9zhdYUtUyH+gLpTn6zO2UPXiYQa4U=",
        "originContent": "- **分组配置**：为特定分组定制的行为参数，可覆盖系统设置",
        "translatedContent": "- **Configuration priority**: Group configuration > System settings > Environment configuration"
      },
      {
        "row": 36,
        "rowsha": "DW9VZY/V9IKrddkdT2N9AnuoOEsXrOlzotzYuXaVUis=",
        "originContent": "- **配置优先级**：分组配置 > 系统设置 > 环境配置",
        "translatedContent": "- **Features**: Supports hot reload, takes effect immediately after modification, no need to restart the application"
      },
      {
        "row": 37,
        "rowsha": "wOSj+uxTMBcN6G8ygMrbe3KuqOqbpoYzGd1h2klvERQ=",
        "originContent": "- **特点**：支持热重载，修改后立即生效，无需重启应用",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<details>"
      },
      {
        "row": 39,
        "rowsha": "U8eO5ZMev1PH3G030/YyNbNyaS1S4k9n5Of/5MkmvMU=",
        "originContent": "<details>",
        "translatedContent": "<summary>Static Configuration (Environment Variables)</summary>"
      },
      {
        "row": 40,
        "rowsha": "LmYf7T6mJvLUusAt4L39XxT3lzaXuhec6Ur7MPdhAaw=",
        "originContent": "<summary>静态配置（环境变量）</summary>",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 11,
    "Content": "\n**服务器配置：**\n\n| 配置项       | 环境变量                           | 默认值          | 说明                       |\n| ------------ | ---------------------------------- | --------------- | -------------------------- |\n| 服务端口     | `PORT`                             | 3001            | HTTP 服务器监听端口        |\n| 服务地址     | `HOST`                             | 0.0.0.0         | HTTP 服务器绑定地址        |\n| 读取超时     | `SERVER_READ_TIMEOUT`              | 60              | HTTP 服务器读取超时（秒）  |\n| 写入超时     | `SERVER_WRITE_TIMEOUT`             | 600             | HTTP 服务器写入超时（秒）  |\n| 空闲超时     | `SERVER_IDLE_TIMEOUT`              | 120             | HTTP 连接空闲超时（秒）    |\n| 优雅关闭超时 | `SERVER_GRACEFUL_SHUTDOWN_TIMEOUT` | 10              | 服务优雅关闭等待时间（秒） |\n| 从节点模式   | `IS_SLAVE`                         | false           | 集群部署时从节点标识       |\n| 时区         | `TZ`                               | `Asia/Shanghai` | 指定时区                   |\n\n**认证与数据库配置：**\n\n| 配置项     | 环境变量       | 默认值             | 说明                                 |\n| ---------- | -------------- | ------------------ | ------------------------------------ |\n| 管理密钥   | `AUTH_KEY`     | `sk-123456`        | **管理端**的访问认证密钥             |\n| 数据库连接 | `DATABASE_DSN` | ./data/gpt-load.db | 数据库连接字符串 (DSN) 或文件路径    |\n| Redis 连接 | `REDIS_DSN`    | -                  | Redis 连接字符串，为空时使用内存存储 |\n\n**性能与跨域配置：**\n\n| 配置项       | 环境变量                  | 默认值                        | 说明                     |\n| ------------ | ------------------------- | ----------------------------- | ------------------------ |\n| 最大并发请求 | `MAX_CONCURRENT_REQUESTS` | 100                           | 系统允许的最大并发请求数 |\n| 启用 CORS    | `ENABLE_CORS`             | true                          | 是否启用跨域资源共享     |\n| 允许的来源   | `ALLOWED_ORIGINS`         | `*`                           | 允许的来源，逗号分隔     |\n| 允许的方法   | `ALLOWED_METHODS`         | `GET,POST,PUT,DELETE,OPTIONS` | 允许的 HTTP 方法         |\n| 允许的头部   | `ALLOWED_HEADERS`         | `*`                           | 允许的请求头，逗号分隔   |\n| 允许凭据     | `ALLOW_CREDENTIALS`       | false                         | 是否允许发送凭据         |\n\n**日志配置：**\n\n| 配置项       | 环境变量          | 默认值                | 说明                               |\n| ------------ | ----------------- | --------------------- | ---------------------------------- |\n| 日志级别     | `LOG_LEVEL`       | `info`                | 日志级别：debug, info, warn, error |\n| 日志格式     | `LOG_FORMAT`      | `text`                | 日志格式：text, json               |\n| 启用文件日志 | `LOG_ENABLE_FILE` | false                 | 是否启用文件日志输出               |",
    "ContentSha": "5B8oLJC7t0MdRzc3GdZzX4+xaz4jgKGzpuKqbeMiP3s=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**Server Configuration:**\n\n| Configuration Item | Environment Variable               | Default Value   | Description                 |\n| ------------------ | -------------------------------- | --------------- | --------------------------- |\n| Server Port        | `PORT`                           | 3001            | HTTP server listening port  |\n| Server Address     | `HOST`                           | 0.0.0.0         | HTTP server bind address    |\n| Read Timeout       | `SERVER_READ_TIMEOUT`            | 60              | HTTP server read timeout (seconds)  |\n| Write Timeout      | `SERVER_WRITE_TIMEOUT`           | 600             | HTTP server write timeout (seconds) |\n| Idle Timeout       | `SERVER_IDLE_TIMEOUT`            | 120             | HTTP connection idle timeout (seconds) |\n| Graceful Shutdown Timeout | `SERVER_GRACEFUL_SHUTDOWN_TIMEOUT` | 10              | Service graceful shutdown wait time (seconds) |\n| Slave Mode         | `IS_SLAVE`                      | false           | Slave node identifier in cluster deployment |\n| Time Zone          | `TZ`                             | `Asia/Shanghai` | Specified time zone         |\n\n**Authentication and Database Configuration:**\n\n| Configuration Item | Environment Variable | Default Value      | Description                        |\n| ------------------ | --------------------| ------------------ | --------------------------------- |\n| Admin Key          | `AUTH_KEY`          | `sk-123456`       | Access authentication key for **admin** |\n| Database Connection| `DATABASE_DSN`      | ./data/gpt-load.db | Database connection string (DSN) or file path |\n| Redis Connection   | `REDIS_DSN`         | -                  | Redis connection string, uses in-memory storage if empty |\n\n**Performance and CORS Configuration:**\n\n| Configuration Item    | Environment Variable       | Default Value                 | Description               |\n| --------------------- | --------------------------| -----------------------------| ------------------------- |\n| Max Concurrent Requests| `MAX_CONCURRENT_REQUESTS` | 100                          | Maximum concurrent requests allowed by the system |\n| Enable CORS           | `ENABLE_CORS`             | true                         | Whether to enable Cross-Origin Resource Sharing |\n| Allowed Origins       | `ALLOWED_ORIGINS`         | `*`                          | Allowed origins, comma-separated |\n| Allowed Methods       | `ALLOWED_METHODS`         | `GET,POST,PUT,DELETE,OPTIONS`| Allowed HTTP methods        |\n| Allowed Headers       | `ALLOWED_HEADERS`         | `*`                          | Allowed request headers, comma-separated |\n| Allow Credentials     | `ALLOW_CREDENTIALS`       | false                        | Whether to allow sending credentials |\n\n**Logging Configuration:**\n\n| Configuration Item | Environment Variable    | Default Value | Description                         |\n| ------------------ | -----------------------| ------------- | ---------------------------------- |\n| Log Level          | `LOG_LEVEL`            | `info`       | Log level: debug, info, warn, error |\n| Log Format         | `LOG_FORMAT`           | `text`       | Log format: text, json              |\n| Enable File Logging| `LOG_ENABLE_FILE`      | false        | Whether to enable file log output  |",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "ZjxJBbWkG4Z9c8MYrHwnN//WgPvw0f5C/LnRqvP3yqA=",
        "originContent": "**服务器配置：**",
        "translatedContent": "**Server Configuration:**"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "EQ6fYUxi/hAfnDbt5q5BPUwrMBQVPBZAewOVRHXjxBQ=",
        "originContent": "| 配置项       | 环境变量                           | 默认值          | 说明                       |",
        "translatedContent": "| Configuration Item | Environment Variable               | Default Value   | Description                 |"
      },
      {
        "row": 5,
        "rowsha": "2xbNcJpGTeuYlYpStwZ5GqpOHaKoUAnHhAaQoKwwAWI=",
        "originContent": "| ------------ | ---------------------------------- | --------------- | -------------------------- |",
        "translatedContent": "| ------------------ | -------------------------------- | --------------- | --------------------------- |"
      },
      {
        "row": 6,
        "rowsha": "hh0M42HEXp66P/d1TlsFzYjl5W3WtLXx5bdQkcPTkF0=",
        "originContent": "| 服务端口     | `PORT`                             | 3001            | HTTP 服务器监听端口        |",
        "translatedContent": "| Server Port        | `PORT`                           | 3001            | HTTP server listening port  |"
      },
      {
        "row": 7,
        "rowsha": "PQncLKFmwTVhr+UtIEmqldtqo8tpQQWfZAHgV33Z4vI=",
        "originContent": "| 服务地址     | `HOST`                             | 0.0.0.0         | HTTP 服务器绑定地址        |",
        "translatedContent": "| Server Address     | `HOST`                           | 0.0.0.0         | HTTP server bind address    |"
      },
      {
        "row": 8,
        "rowsha": "/KjMHtKvcyqafXrboO+vhbwcW/P3TuN7QqlPpGp4fJI=",
        "originContent": "| 读取超时     | `SERVER_READ_TIMEOUT`              | 60              | HTTP 服务器读取超时（秒）  |",
        "translatedContent": "| Read Timeout       | `SERVER_READ_TIMEOUT`            | 60              | HTTP server read timeout (seconds)  |"
      },
      {
        "row": 9,
        "rowsha": "iiNlbnQRysji+b2dTSkmDQbxYZ05g/bNCSiM3dAzchI=",
        "originContent": "| 写入超时     | `SERVER_WRITE_TIMEOUT`             | 600             | HTTP 服务器写入超时（秒）  |",
        "translatedContent": "| Write Timeout      | `SERVER_WRITE_TIMEOUT`           | 600             | HTTP server write timeout (seconds) |"
      },
      {
        "row": 10,
        "rowsha": "qJ3sC+XGycfD8McJBjsZ0WljXM4ZbGX+61Zw+7K94YU=",
        "originContent": "| 空闲超时     | `SERVER_IDLE_TIMEOUT`              | 120             | HTTP 连接空闲超时（秒）    |",
        "translatedContent": "| Idle Timeout       | `SERVER_IDLE_TIMEOUT`            | 120             | HTTP connection idle timeout (seconds) |"
      },
      {
        "row": 11,
        "rowsha": "uCl+2Q+oiCBP2B4iui0GGKRcDHcRkRMUV0l3Pg+pXBE=",
        "originContent": "| 优雅关闭超时 | `SERVER_GRACEFUL_SHUTDOWN_TIMEOUT` | 10              | 服务优雅关闭等待时间（秒） |",
        "translatedContent": "| Graceful Shutdown Timeout | `SERVER_GRACEFUL_SHUTDOWN_TIMEOUT` | 10              | Service graceful shutdown wait time (seconds) |"
      },
      {
        "row": 12,
        "rowsha": "ZYUZdlfVXwmi0LBeMRFkrwZH98K5CbgxJIheRNCZ9Xo=",
        "originContent": "| 从节点模式   | `IS_SLAVE`                         | false           | 集群部署时从节点标识       |",
        "translatedContent": "| Slave Mode         | `IS_SLAVE`                      | false           | Slave node identifier in cluster deployment |"
      },
      {
        "row": 13,
        "rowsha": "VzHeTY4qmrHiAfL82qe3bv97zd6tDGiXbWiwubfLyMw=",
        "originContent": "| 时区         | `TZ`                               | `Asia/Shanghai` | 指定时区                   |",
        "translatedContent": "| Time Zone          | `TZ`                             | `Asia/Shanghai` | Specified time zone         |"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "pZnM1YOQtOqorxqd6KR/tFmQ9m2MqKF83D8w53UTZyc=",
        "originContent": "**认证与数据库配置：**",
        "translatedContent": "**Authentication and Database Configuration:**"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "YXVdTXumn4CZ9u/UZtPCTHa+mJqrijMXXNMQQwtOF3M=",
        "originContent": "| 配置项     | 环境变量       | 默认值             | 说明                                 |",
        "translatedContent": "| Configuration Item | Environment Variable | Default Value      | Description                        |"
      },
      {
        "row": 18,
        "rowsha": "zPqlo5HXuuIsXsgfIEUjykYrE1nvmniRmLdguZsLAYs=",
        "originContent": "| ---------- | -------------- | ------------------ | ------------------------------------ |",
        "translatedContent": "| ------------------ | --------------------| ------------------ | --------------------------------- |"
      },
      {
        "row": 19,
        "rowsha": "CteStPlLGu3V2Vo+DmYZ+OAuQZM3O413BDs1fXNBZQw=",
        "originContent": "| 管理密钥   | `AUTH_KEY`     | `sk-123456`        | **管理端**的访问认证密钥             |",
        "translatedContent": "| Admin Key          | `AUTH_KEY`          | `sk-123456`       | Access authentication key for **admin** |"
      },
      {
        "row": 20,
        "rowsha": "/nw3E75rwNPm8lb3BT+0onZRcYfpvNwNluFXNWtZEMU=",
        "originContent": "| 数据库连接 | `DATABASE_DSN` | ./data/gpt-load.db | 数据库连接字符串 (DSN) 或文件路径    |",
        "translatedContent": "| Database Connection| `DATABASE_DSN`      | ./data/gpt-load.db | Database connection string (DSN) or file path |"
      },
      {
        "row": 21,
        "rowsha": "/zngcd4zT0i3nUp/zFsZZJwjMDmNKmf+Kw9YcbM4fAw=",
        "originContent": "| Redis 连接 | `REDIS_DSN`    | -                  | Redis 连接字符串，为空时使用内存存储 |",
        "translatedContent": "| Redis Connection   | `REDIS_DSN`         | -                  | Redis connection string, uses in-memory storage if empty |"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "GZIVAGsjYaZ9xHFD56kuVW0+MZ0KEqATZJLFyBS0qnA=",
        "originContent": "**性能与跨域配置：**",
        "translatedContent": "**Performance and CORS Configuration:**"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "j77/DHvYx9HbBUUSAmwcSNSuiboPB3CG2th5vIHc4Zk=",
        "originContent": "| 配置项       | 环境变量                  | 默认值                        | 说明                     |",
        "translatedContent": "| Configuration Item    | Environment Variable       | Default Value                 | Description               |"
      },
      {
        "row": 26,
        "rowsha": "ubQG1S/o0xfqWWq0gFVjVpV9QFflSBGQxlPSHVMz2Fg=",
        "originContent": "| ------------ | ------------------------- | ----------------------------- | ------------------------ |",
        "translatedContent": "| --------------------- | --------------------------| -----------------------------| ------------------------- |"
      },
      {
        "row": 27,
        "rowsha": "iNXge5k3UoWQzJFaNoXj3vPJyHXcIJxLDn45ONopfjw=",
        "originContent": "| 最大并发请求 | `MAX_CONCURRENT_REQUESTS` | 100                           | 系统允许的最大并发请求数 |",
        "translatedContent": "| Max Concurrent Requests| `MAX_CONCURRENT_REQUESTS` | 100                          | Maximum concurrent requests allowed by the system |"
      },
      {
        "row": 28,
        "rowsha": "gzoH+EC5JLqLvP/zwPNoXkRmarqAgpIae2mGF4lhBVY=",
        "originContent": "| 启用 CORS    | `ENABLE_CORS`             | true                          | 是否启用跨域资源共享     |",
        "translatedContent": "| Enable CORS           | `ENABLE_CORS`             | true                         | Whether to enable Cross-Origin Resource Sharing |"
      },
      {
        "row": 29,
        "rowsha": "d6rcpWCEyA08nA3lUIcnNW9TL5/QLDDcnUGUWeIwGeI=",
        "originContent": "| 允许的来源   | `ALLOWED_ORIGINS`         | `*`                           | 允许的来源，逗号分隔     |",
        "translatedContent": "| Allowed Origins       | `ALLOWED_ORIGINS`         | `*`                          | Allowed origins, comma-separated |"
      },
      {
        "row": 30,
        "rowsha": "QJ9JX7WJpLRBmzK34HyK8l8hU6F5Zyk88Y/aQZ5qvak=",
        "originContent": "| 允许的方法   | `ALLOWED_METHODS`         | `GET,POST,PUT,DELETE,OPTIONS` | 允许的 HTTP 方法         |",
        "translatedContent": "| Allowed Methods       | `ALLOWED_METHODS`         | `GET,POST,PUT,DELETE,OPTIONS`| Allowed HTTP methods        |"
      },
      {
        "row": 31,
        "rowsha": "FT+Zff0j1OzjSOv8W7PsJANaPVT1H0OiScpEriBIJJk=",
        "originContent": "| 允许的头部   | `ALLOWED_HEADERS`         | `*`                           | 允许的请求头，逗号分隔   |",
        "translatedContent": "| Allowed Headers       | `ALLOWED_HEADERS`         | `*`                          | Allowed request headers, comma-separated |"
      },
      {
        "row": 32,
        "rowsha": "lo6VCrjig5L0pGXYAChPMdVpH7Ex9Mj/x56+Agohgn8=",
        "originContent": "| 允许凭据     | `ALLOW_CREDENTIALS`       | false                         | 是否允许发送凭据         |",
        "translatedContent": "| Allow Credentials     | `ALLOW_CREDENTIALS`       | false                        | Whether to allow sending credentials |"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "b9d1Cnlrxg7r8OZyuwILxjmtlxCuVCBhYU9NvvarX08=",
        "originContent": "**日志配置：**",
        "translatedContent": "**Logging Configuration:**"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "8b/SHDDYvl61PVJOn9TzznV7DlRGCWfI1vXX4AiukGE=",
        "originContent": "| 配置项       | 环境变量          | 默认值                | 说明                               |",
        "translatedContent": "| Configuration Item | Environment Variable    | Default Value | Description                         |"
      },
      {
        "row": 37,
        "rowsha": "tc18TNaJRE1GsK1w6W5zYEEQtXP6hpXQJObHLlwuBIs=",
        "originContent": "| ------------ | ----------------- | --------------------- | ---------------------------------- |",
        "translatedContent": "| ------------------ | -----------------------| ------------- | ---------------------------------- |"
      },
      {
        "row": 38,
        "rowsha": "Gdxbd3bN6o9nScqScA2Y7tw7hsA3Q1ZvZ9eBfB2S1mQ=",
        "originContent": "| 日志级别     | `LOG_LEVEL`       | `info`                | 日志级别：debug, info, warn, error |",
        "translatedContent": "| Log Level          | `LOG_LEVEL`            | `info`       | Log level: debug, info, warn, error |"
      },
      {
        "row": 39,
        "rowsha": "KgbQwDdFIsWoFhwRDEOIU/yIjB9oftg5DEipaKmpOzw=",
        "originContent": "| 日志格式     | `LOG_FORMAT`      | `text`                | 日志格式：text, json               |",
        "translatedContent": "| Log Format         | `LOG_FORMAT`           | `text`       | Log format: text, json              |"
      },
      {
        "row": 40,
        "rowsha": "3XklnMNuW+Ni/r7w3FolPiCPRkxE7ZTILSCPREHttkA=",
        "originContent": "| 启用文件日志 | `LOG_ENABLE_FILE` | false                 | 是否启用文件日志输出               |",
        "translatedContent": "| Enable File Logging| `LOG_ENABLE_FILE`      | false        | Whether to enable file log output  |"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 12,
    "Content": "| 日志文件路径 | `LOG_FILE_PATH`   | `./data/logs/app.log` | 日志文件存储路径                   |\n\n**代理配置：**\n\nGPT-Load 会自动从环境变量中读取代理设置，用于向上游 AI 服务商发起请求。\n\n| 配置项     | 环境变量      | 默认值 | 说明                                     |\n| ---------- | ------------- | ------ | ---------------------------------------- |\n| HTTP 代理  | `HTTP_PROXY`  | -      | 用于 HTTP 请求的代理服务器地址           |\n| HTTPS 代理 | `HTTPS_PROXY` | -      | 用于 HTTPS 请求的代理服务器地址          |\n| 无代理     | `NO_PROXY`    | -      | 不需要通过代理访问的主机或域名，逗号分隔 |\n\n支持的代理协议格式：\n\n- **HTTP**: `http://user:pass@host:port`\n- **HTTPS**: `https://user:pass@host:port`\n- **SOCKS5**: `socks5://user:pass@host:port`\n</details>\n\n<details>\n<summary>动态配置（热重载）</summary>\n\n**基础设置：**\n\n| 配置项       | 字段名                               | 默认值                      | 分组可覆盖 | 说明                                   |\n| ------------ | ------------------------------------ | --------------------------- | ---------- | -------------------------------------- |\n| 项目地址     | `app_url`                            | `http://localhost:3001`     | ❌         | 项目基础 URL                           |\n| 日志保留天数 | `request_log_retention_days`         | 7                           | ❌         | 请求日志保留天数，0 为不清理           |\n| 日志写入间隔 | `request_log_write_interval_minutes` | 1                           | ❌         | 日志写入数据库周期（分钟）             |\n| 全局代理密钥 | `proxy_keys`                         | 初始值为环境配置的 AUTH_KEY | ❌         | 全局生效的代理认证密钥，多个用逗号分隔 |\n\n**请求设置：**\n\n| 配置项               | 字段名                    | 默认值 | 分组可覆盖 | 说明                           |\n| -------------------- | ------------------------- | ------ | ---------- | ------------------------------ |\n| 请求超时             | `request_timeout`         | 600    | ✅         | 转发请求完整生命周期超时（秒） |\n| 连接超时             | `connect_timeout`         | 15     | ✅         | 与上游服务建立连接超时（秒）   |\n| 空闲连接超时         | `idle_conn_timeout`       | 120    | ✅         | HTTP 客户端空闲连接超时（秒）  |\n| 响应头超时           | `response_header_timeout` | 600    | ✅         | 等待上游响应头超时（秒）       |\n| 最大空闲连接数       | `max_idle_conns`          | 100    | ✅         | 连接池最大空闲连接总数         |",
    "ContentSha": "mnZsFfaZ1qkAVhhteiErl14dlxHmkcClKHgPSVWDKtY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "| Log File Path | `LOG_FILE_PATH`   | `./data/logs/app.log` | Log file storage path                   |\n\n**Proxy Configuration:**\n\nGPT-Load will automatically read proxy settings from environment variables for requests to upstream AI providers.\n\n| Config Item   | Environment Variable | Default | Description                              |\n| ------------- | -------------------- | ------- | -------------------------------------- |\n| HTTP Proxy    | `HTTP_PROXY`         | -       | Proxy server address for HTTP requests |\n| HTTPS Proxy   | `HTTPS_PROXY`        | -       | Proxy server address for HTTPS requests|\n| No Proxy      | `NO_PROXY`           | -       | Hosts or domains not accessed via proxy, comma-separated |\n\nSupported proxy protocol formats:\n\n- **HTTP**: `http://user:pass@host:port`\n- **HTTPS**: `https://user:pass@host:port`\n- **SOCKS5**: `socks5://user:pass@host:port`\n</details>\n\n<details>\n<summary>Dynamic Configuration (Hot Reload)</summary>\n\n**Basic Settings:**\n\n| Config Item          | Field Name                        | Default                      | Group Overridable | Description                            |\n| -------------------- | -------------------------------- | ----------------------------| ----------------- | -------------------------------------|\n| Project URL          | `app_url`                        | `http://localhost:3001`      | ❌                | Base URL of the project               |\n| Log Retention Days   | `request_log_retention_days`      | 7                            | ❌                | Request log retention days, 0 means no cleanup |\n| Log Write Interval   | `request_log_write_interval_minutes` | 1                           | ❌                | Log write interval to database (minutes) |\n| Global Proxy Keys    | `proxy_keys`                     | Initially from environment AUTH_KEY | ❌         | Globally effective proxy authentication keys, separated by commas |\n\n**Request Settings:**\n\n| Config Item           | Field Name                  | Default | Group Overridable | Description                        |\n| --------------------- | --------------------------- | ------- | ----------------- | ---------------------------------|\n| Request Timeout       | `request_timeout`           | 600     | ✅                | Full lifecycle timeout for forwarded requests (seconds) |\n| Connect Timeout       | `connect_timeout`           | 15      | ✅                | Timeout for establishing connection with upstream service (seconds) |\n| Idle Connection Timeout | `idle_conn_timeout`        | 120     | ✅                | HTTP client idle connection timeout (seconds) |\n| Response Header Timeout | `response_header_timeout`  | 600     | ✅                | Timeout waiting for upstream response headers (seconds) |\n| Max Idle Connections  | `max_idle_conns`            | 100     | ✅                | Maximum total idle connections in the connection pool |",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "ScliLpUHKM3S6yXyXJhvm1Dj5NtBGGeYXxHmmGHlHgk=",
        "originContent": "| 日志文件路径 | `LOG_FILE_PATH`   | `./data/logs/app.log` | 日志文件存储路径                   |",
        "translatedContent": "| Log File Path | `LOG_FILE_PATH`   | `./data/logs/app.log` | Log file storage path                   |"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "L8X8paZ01ZFE4Mo76lomhZ7FLvKxgrSWOiZSR74j2p4=",
        "originContent": "**代理配置：**",
        "translatedContent": "**Proxy Configuration:**"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "be0HPjsRZRMCSehkFkWkbLdWNnkxqrfDXTXcL8hiTRc=",
        "originContent": "GPT-Load 会自动从环境变量中读取代理设置，用于向上游 AI 服务商发起请求。",
        "translatedContent": "GPT-Load will automatically read proxy settings from environment variables for requests to upstream AI providers."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "LjJxBpLd7M9xq7c20BGuYubrgEMeqI/RnJ8JHUgcbXk=",
        "originContent": "| 配置项     | 环境变量      | 默认值 | 说明                                     |",
        "translatedContent": "| Config Item   | Environment Variable | Default | Description                              |"
      },
      {
        "row": 8,
        "rowsha": "wL6FOmyDuIOX9xiuFYokyBEO7Juf+6F4VTxpMmzSN08=",
        "originContent": "| ---------- | ------------- | ------ | ---------------------------------------- |",
        "translatedContent": "| ------------- | -------------------- | ------- | -------------------------------------- |"
      },
      {
        "row": 9,
        "rowsha": "/FIPjOyhiqVcW6QAuwPdyi7Uh37pA78NKHFTNqhHplQ=",
        "originContent": "| HTTP 代理  | `HTTP_PROXY`  | -      | 用于 HTTP 请求的代理服务器地址           |",
        "translatedContent": "| HTTP Proxy    | `HTTP_PROXY`         | -       | Proxy server address for HTTP requests |"
      },
      {
        "row": 10,
        "rowsha": "BFS56VUMrWZYyKblQ69rSdcRJpWujZ1Y8gfuWOQTRHA=",
        "originContent": "| HTTPS 代理 | `HTTPS_PROXY` | -      | 用于 HTTPS 请求的代理服务器地址          |",
        "translatedContent": "| HTTPS Proxy   | `HTTPS_PROXY`        | -       | Proxy server address for HTTPS requests|"
      },
      {
        "row": 11,
        "rowsha": "gKwu1laruOL/mmp0MPhIKe4gjB0EXdh+QGhF3j5bH+4=",
        "originContent": "| 无代理     | `NO_PROXY`    | -      | 不需要通过代理访问的主机或域名，逗号分隔 |",
        "translatedContent": "| No Proxy      | `NO_PROXY`           | -       | Hosts or domains not accessed via proxy, comma-separated |"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "MmLam3K0escVWg710HeRYTkvDSvp9IOTk5NxrWUaeEU=",
        "originContent": "支持的代理协议格式：",
        "translatedContent": "Supported proxy protocol formats:"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "tNXxQ2zaQ5vj0kiRrrif2JjWsTMbG2SxAKrgFmvGsqM=",
        "originContent": "- **HTTP**: `http://user:pass@host:port`",
        "translatedContent": "- **HTTP**: `http://user:pass@host:port`"
      },
      {
        "row": 16,
        "rowsha": "zJM951oLU7TmoejnXG2kxNeQzonyt2sx/c1M2RbzX4k=",
        "originContent": "- **HTTPS**: `https://user:pass@host:port`",
        "translatedContent": "- **HTTPS**: `https://user:pass@host:port`"
      },
      {
        "row": 17,
        "rowsha": "wtK6nhn0oN9QvNTcKw0XqPbDEpEozM2jbu6U9qqjErs=",
        "originContent": "- **SOCKS5**: `socks5://user:pass@host:port`",
        "translatedContent": "- **SOCKS5**: `socks5://user:pass@host:port`"
      },
      {
        "row": 18,
        "rowsha": "iKxEwaqPw8IiEEWQ6czEzAvKi1nrFO/wqlPbG+tChcM=",
        "originContent": "</details>",
        "translatedContent": "</details>"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "U8eO5ZMev1PH3G030/YyNbNyaS1S4k9n5Of/5MkmvMU=",
        "originContent": "<details>",
        "translatedContent": "<details>"
      },
      {
        "row": 21,
        "rowsha": "TBZiMgbugd3Gnts4Kx4baLZfudzjahVa7o91IY7IGXY=",
        "originContent": "<summary>动态配置（热重载）</summary>",
        "translatedContent": "<summary>Dynamic Configuration (Hot Reload)</summary>"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "sZ89vLnGtSWJzAgg+52FQ3u/pVVO9yExu/ME+IiPDM8=",
        "originContent": "**基础设置：**",
        "translatedContent": "**Basic Settings:**"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "R6VvpAyzHSqQuWrE8lcbPz2cYK3VMU41mtUHxr/raTo=",
        "originContent": "| 配置项       | 字段名                               | 默认值                      | 分组可覆盖 | 说明                                   |",
        "translatedContent": "| Config Item          | Field Name                        | Default                      | Group Overridable | Description                            |"
      },
      {
        "row": 26,
        "rowsha": "Et5m0daosH+OrdVmwtR25L9q4fT4Ag1L/jtCQSNSQ5k=",
        "originContent": "| ------------ | ------------------------------------ | --------------------------- | ---------- | -------------------------------------- |",
        "translatedContent": "| -------------------- | -------------------------------- | ----------------------------| ----------------- | -------------------------------------|"
      },
      {
        "row": 27,
        "rowsha": "4gXCduuKBdN7H9TCt8gjHrEBsKth6xbXh0bY537a5sI=",
        "originContent": "| 项目地址     | `app_url`                            | `http://localhost:3001`     | ❌         | 项目基础 URL                           |",
        "translatedContent": "| Project URL          | `app_url`                        | `http://localhost:3001`      | ❌                | Base URL of the project               |"
      },
      {
        "row": 28,
        "rowsha": "48Yc1PFgtIUHBWoCYrN7Cb3C/RcATWJAwuDZ2AA6a8c=",
        "originContent": "| 日志保留天数 | `request_log_retention_days`         | 7                           | ❌         | 请求日志保留天数，0 为不清理           |",
        "translatedContent": "| Log Retention Days   | `request_log_retention_days`      | 7                            | ❌                | Request log retention days, 0 means no cleanup |"
      },
      {
        "row": 29,
        "rowsha": "9JLrBoBQZ9d5uihYUMCt5O9E7WzOnkdM9jbrj7QTgu8=",
        "originContent": "| 日志写入间隔 | `request_log_write_interval_minutes` | 1                           | ❌         | 日志写入数据库周期（分钟）             |",
        "translatedContent": "| Log Write Interval   | `request_log_write_interval_minutes` | 1                           | ❌                | Log write interval to database (minutes) |"
      },
      {
        "row": 30,
        "rowsha": "XahFFv7tIW0x6ap0rLDstKjzhKhixYG0CLTlBsfWutM=",
        "originContent": "| 全局代理密钥 | `proxy_keys`                         | 初始值为环境配置的 AUTH_KEY | ❌         | 全局生效的代理认证密钥，多个用逗号分隔 |",
        "translatedContent": "| Global Proxy Keys    | `proxy_keys`                     | Initially from environment AUTH_KEY | ❌         | Globally effective proxy authentication keys, separated by commas |"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "2E8zc4CXTUvKQ/D+9sbe1p7XuAFK6jTQE0GkxSWZFwM=",
        "originContent": "**请求设置：**",
        "translatedContent": "**Request Settings:**"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "rZXDEE1l23pH1tNDiC7wcbFbeX6+nzsVhEA3m/Sfktk=",
        "originContent": "| 配置项               | 字段名                    | 默认值 | 分组可覆盖 | 说明                           |",
        "translatedContent": "| Config Item           | Field Name                  | Default | Group Overridable | Description                        |"
      },
      {
        "row": 35,
        "rowsha": "faoNp7wwKWH6Yp3voQt8Z2imX3RIOOZDF9liRkxouSQ=",
        "originContent": "| -------------------- | ------------------------- | ------ | ---------- | ------------------------------ |",
        "translatedContent": "| --------------------- | --------------------------- | ------- | ----------------- | ---------------------------------|"
      },
      {
        "row": 36,
        "rowsha": "HRXlEADijyJ1RGtAKVZwFXDhbt6/pWUn8rUsnMYvgD0=",
        "originContent": "| 请求超时             | `request_timeout`         | 600    | ✅         | 转发请求完整生命周期超时（秒） |",
        "translatedContent": "| Request Timeout       | `request_timeout`           | 600     | ✅                | Full lifecycle timeout for forwarded requests (seconds) |"
      },
      {
        "row": 37,
        "rowsha": "bTHMdmCTV2+z7WRwaV1M7N1Vjj3DcapMTZuPlReQTFw=",
        "originContent": "| 连接超时             | `connect_timeout`         | 15     | ✅         | 与上游服务建立连接超时（秒）   |",
        "translatedContent": "| Connect Timeout       | `connect_timeout`           | 15      | ✅                | Timeout for establishing connection with upstream service (seconds) |"
      },
      {
        "row": 38,
        "rowsha": "0nvg9TTb50V/T/1zOK/skz0zagXhilKzSN5HAJI27Zc=",
        "originContent": "| 空闲连接超时         | `idle_conn_timeout`       | 120    | ✅         | HTTP 客户端空闲连接超时（秒）  |",
        "translatedContent": "| Idle Connection Timeout | `idle_conn_timeout`        | 120     | ✅                | HTTP client idle connection timeout (seconds) |"
      },
      {
        "row": 39,
        "rowsha": "/mLVp0/m/XmyDHRpwWsDz0WRMdw6u+urR888bx7h2VA=",
        "originContent": "| 响应头超时           | `response_header_timeout` | 600    | ✅         | 等待上游响应头超时（秒）       |",
        "translatedContent": "| Response Header Timeout | `response_header_timeout`  | 600     | ✅                | Timeout waiting for upstream response headers (seconds) |"
      },
      {
        "row": 40,
        "rowsha": "/pGxPx6u2krteEA9HqPYD+15ZQZxr9wJhsuq0ewKv9c=",
        "originContent": "| 最大空闲连接数       | `max_idle_conns`          | 100    | ✅         | 连接池最大空闲连接总数         |",
        "translatedContent": "| Max Idle Connections  | `max_idle_conns`            | 100     | ✅                | Maximum total idle connections in the connection pool |"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 13,
    "Content": "| 每主机最大空闲连接数 | `max_idle_conns_per_host` | 50     | ✅         | 每个上游主机最大空闲连接数     |\n| 代理服务器地址       | `proxy_url`               | -      | ✅         | 用于转发请求的 HTTP/HTTPS 代理，为空则使用环境配置 |\n\n**密钥配置：**\n\n| 配置项         | 字段名                            | 默认值 | 分组可覆盖 | 说明                                             |\n| -------------- | --------------------------------- | ------ | ---------- | ------------------------------------------------ |\n| 最大重试次数   | `max_retries`                     | 3      | ✅         | 单个请求使用不同密钥的最大重试次数               |\n| 黑名单阈值     | `blacklist_threshold`             | 3      | ✅         | 密钥连续失败多少次后进入黑名单                   |\n| 密钥验证间隔   | `key_validation_interval_minutes` | 60     | ✅         | 后台定时验证密钥周期（分钟）                     |\n| 密钥验证并发数 | `key_validation_concurrency`      | 10     | ✅         | 后台定时验证无效 Key 时的并发数                  |\n| 密钥验证超时   | `key_validation_timeout_seconds`  | 20     | ✅         | 后台定时验证单个 Key 时的 API 请求超时时间（秒） |\n\n</details>\n\n## Web 管理界面\n\n访问管理控制台：<http://localhost:3001>（默认地址）\n\n### 界面展示\n\n<img src=\"https://raw.githubusercontent.com/tbphp/gpt-load/main/screenshot/dashboard.png\" alt=\"仪表盘\" width=\"600\" />\n\n<br/>\n\n<img src=\"https://raw.githubusercontent.com/tbphp/gpt-load/main/screenshot/keys.png\" alt=\"密钥管理\" width=\"600\" />\n\n<br/>\n\nWeb 管理界面提供以下功能：\n\n- **仪表盘**: 实时统计信息和系统状态概览\n- **密钥管理**: 创建和配置 AI 服务商分组，添加、删除和监控 API 密钥\n- **请求日志**: 详细的请求历史记录和调试信息\n- **系统设置**: 全局配置管理和热重载\n\n## API 使用说明\n\n<details>\n<summary>代理接口调用方式</summary>",
    "ContentSha": "JRfO3Kvc1CegldKAPii5n6/dr+HMdjP7QehHEzCrTZI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "| Max Idle Connections Per Host | `max_idle_conns_per_host` | 50     | ✅         | Maximum idle connections per upstream host     |\n| Proxy Server Address           | `proxy_url`               | -      | ✅         | HTTP/HTTPS proxy for forwarding requests, empty to use environment settings |\n\n**Key Configuration:**\n\n| Item                     | Field Name                         | Default | Group Override | Description                                             |\n| ------------------------ | --------------------------------- | ------- | -------------- | ------------------------------------------------------- |\n| Max Retry Count          | `max_retries`                     | 3       | ✅             | Maximum retry count using different keys per request   |\n| Blacklist Threshold      | `blacklist_threshold`             | 3       | ✅             | Number of consecutive failures before a key is blacklisted |\n| Key Validation Interval  | `key_validation_interval_minutes`| 60      | ✅             | Background periodic key validation interval (minutes)  |\n| Key Validation Concurrency | `key_validation_concurrency`    | 10      | ✅             | Concurrency for background invalid key validation       |\n| Key Validation Timeout   | `key_validation_timeout_seconds` | 20      | ✅             | API request timeout for single key validation (seconds) |\n\n</details>\n\n## Web Management Interface\n\nAccess the management console: <http://localhost:3001> (default address)\n\n### Interface Display\n\n<img src=\"https://raw.githubusercontent.com/tbphp/gpt-load/main/screenshot/dashboard.png\" alt=\"Dashboard\" width=\"600\" />\n\n<br/>\n\n<img src=\"https://raw.githubusercontent.com/tbphp/gpt-load/main/screenshot/keys.png\" alt=\"Key Management\" width=\"600\" />\n\n<br/>\n\nThe web management interface provides the following features:\n\n- **Dashboard**: Real-time statistics and system status overview\n- **Key Management**: Create and configure AI provider groups, add, delete, and monitor API keys\n- **Request Logs**: Detailed request history and debugging information\n- **System Settings**: Global configuration management and hot reload\n\n## API Usage Instructions\n\n<details>\n<summary>Proxy Interface Call Method</summary>",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "jTuAX9oG/xqXdeKlm+sjgj2Ie4XbqLNoqff0JLjR1d4=",
        "originContent": "| 每主机最大空闲连接数 | `max_idle_conns_per_host` | 50     | ✅         | 每个上游主机最大空闲连接数     |",
        "translatedContent": "| Max Idle Connections Per Host | `max_idle_conns_per_host` | 50     | ✅         | Maximum idle connections per upstream host     |"
      },
      {
        "row": 2,
        "rowsha": "xJRkMPXwT4xViQvI+IFIoO6r+cCXm87S3Shl8efKGao=",
        "originContent": "| 代理服务器地址       | `proxy_url`               | -      | ✅         | 用于转发请求的 HTTP/HTTPS 代理，为空则使用环境配置 |",
        "translatedContent": "| Proxy Server Address           | `proxy_url`               | -      | ✅         | HTTP/HTTPS proxy for forwarding requests, empty to use environment settings |"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "Aqq1ERsoC8m2oEolWCf6TnPggd1HlBXZX4PDguVY/D4=",
        "originContent": "**密钥配置：**",
        "translatedContent": "**Key Configuration:**"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "ZCzrDu7R1GZxtzuVCMfhW0I3hi6TtvnJh7qN4TBy0Po=",
        "originContent": "| 配置项         | 字段名                            | 默认值 | 分组可覆盖 | 说明                                             |",
        "translatedContent": "| Item                     | Field Name                         | Default | Group Override | Description                                             |"
      },
      {
        "row": 7,
        "rowsha": "d9h6KjFjZEQ40s4aR4ZVj7EKAGrA6bTAj/0Lx9eNso8=",
        "originContent": "| -------------- | --------------------------------- | ------ | ---------- | ------------------------------------------------ |",
        "translatedContent": "| ------------------------ | --------------------------------- | ------- | -------------- | ------------------------------------------------------- |"
      },
      {
        "row": 8,
        "rowsha": "WqgsWsFcHbZysLXZnA1Fv7KCHYPqnCytUN2z/HDXx5w=",
        "originContent": "| 最大重试次数   | `max_retries`                     | 3      | ✅         | 单个请求使用不同密钥的最大重试次数               |",
        "translatedContent": "| Max Retry Count          | `max_retries`                     | 3       | ✅             | Maximum retry count using different keys per request   |"
      },
      {
        "row": 9,
        "rowsha": "aejZ3WrlQSgAQrKUeb+FaCZXxDduYwxMuLAnS7gso9A=",
        "originContent": "| 黑名单阈值     | `blacklist_threshold`             | 3      | ✅         | 密钥连续失败多少次后进入黑名单                   |",
        "translatedContent": "| Blacklist Threshold      | `blacklist_threshold`             | 3       | ✅             | Number of consecutive failures before a key is blacklisted |"
      },
      {
        "row": 10,
        "rowsha": "ru5Ri6wRWom1El9gIHjsci/ZpUM1fuhwt1T78g/n20Y=",
        "originContent": "| 密钥验证间隔   | `key_validation_interval_minutes` | 60     | ✅         | 后台定时验证密钥周期（分钟）                     |",
        "translatedContent": "| Key Validation Interval  | `key_validation_interval_minutes`| 60      | ✅             | Background periodic key validation interval (minutes)  |"
      },
      {
        "row": 11,
        "rowsha": "Y5iai88UYQma9nQcPyYcp+fq2NJ+QibXGyBqRqMjGhc=",
        "originContent": "| 密钥验证并发数 | `key_validation_concurrency`      | 10     | ✅         | 后台定时验证无效 Key 时的并发数                  |",
        "translatedContent": "| Key Validation Concurrency | `key_validation_concurrency`    | 10      | ✅             | Concurrency for background invalid key validation       |"
      },
      {
        "row": 12,
        "rowsha": "94SM8t4GP3kKbMCL/Cdpjh7wuVy77m+xlzpvPupYv+o=",
        "originContent": "| 密钥验证超时   | `key_validation_timeout_seconds`  | 20     | ✅         | 后台定时验证单个 Key 时的 API 请求超时时间（秒） |",
        "translatedContent": "| Key Validation Timeout   | `key_validation_timeout_seconds` | 20      | ✅             | API request timeout for single key validation (seconds) |"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "iKxEwaqPw8IiEEWQ6czEzAvKi1nrFO/wqlPbG+tChcM=",
        "originContent": "</details>",
        "translatedContent": "</details>"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "gcauHcvYPqNy4l+PcZ9mq23YA1hXAwyFpK/VifOQvNo=",
        "originContent": "## Web 管理界面",
        "translatedContent": "## Web Management Interface"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "4saMZAEigPTRo1Oc/MWMzm6JyIsCcQRl+YyyPxRo5JQ=",
        "originContent": "访问管理控制台：<http://localhost:3001>（默认地址）",
        "translatedContent": "Access the management console: <http://localhost:3001> (default address)"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "/BU+mH/kunCh9rnIGt2fbI99IztRGk58lUcbeMYzkzc=",
        "originContent": "### 界面展示",
        "translatedContent": "### Interface Display"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "gD2xnOiHKtMg/VC28882RlNCrlc3C1aGPhX9KLfhnkw=",
        "originContent": "<img src=\"https://raw.githubusercontent.com/tbphp/gpt-load/main/screenshot/dashboard.png\" alt=\"仪表盘\" width=\"600\" />",
        "translatedContent": "<img src=\"https://raw.githubusercontent.com/tbphp/gpt-load/main/screenshot/dashboard.png\" alt=\"Dashboard\" width=\"600\" />"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "2rsZ7qzBqCZkVdavEUav8jPXiPncgk9RRdPOExXG04Y=",
        "originContent": "<br/>",
        "translatedContent": "<br/>"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "XE4ECaPrmb55/Mo+c65VDDe2F0/p4/6ZkBtpwnJKc1M=",
        "originContent": "<img src=\"https://raw.githubusercontent.com/tbphp/gpt-load/main/screenshot/keys.png\" alt=\"密钥管理\" width=\"600\" />",
        "translatedContent": "<img src=\"https://raw.githubusercontent.com/tbphp/gpt-load/main/screenshot/keys.png\" alt=\"Key Management\" width=\"600\" />"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "2rsZ7qzBqCZkVdavEUav8jPXiPncgk9RRdPOExXG04Y=",
        "originContent": "<br/>",
        "translatedContent": "<br/>"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "VhcIfy1Z80vT/FpelloExsvVvpWk5E2guGd/FOC9yrQ=",
        "originContent": "Web 管理界面提供以下功能：",
        "translatedContent": "The web management interface provides the following features:"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "WhPMo9Y2BGmdr36hAnSJA8+N5Qio5BzImvXJ7mBdYCc=",
        "originContent": "- **仪表盘**: 实时统计信息和系统状态概览",
        "translatedContent": "- **Dashboard**: Real-time statistics and system status overview"
      },
      {
        "row": 33,
        "rowsha": "uHqlfv69lETarKSUKV4MlBGmDo1jySZqI9+vjoapPu0=",
        "originContent": "- **密钥管理**: 创建和配置 AI 服务商分组，添加、删除和监控 API 密钥",
        "translatedContent": "- **Key Management**: Create and configure AI provider groups, add, delete, and monitor API keys"
      },
      {
        "row": 34,
        "rowsha": "lvjYTKnJ9xo8DEfRoii3AZPh/H+FaDt0X5znhoPOalE=",
        "originContent": "- **请求日志**: 详细的请求历史记录和调试信息",
        "translatedContent": "- **Request Logs**: Detailed request history and debugging information"
      },
      {
        "row": 35,
        "rowsha": "ISl/vuy8dxPfkMzatX1bJLojroYpQ92HmqifWIFbyPA=",
        "originContent": "- **系统设置**: 全局配置管理和热重载",
        "translatedContent": "- **System Settings**: Global configuration management and hot reload"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "RaQl4W+GX+37NqFTb6Wc1Epc6193u5XDMnWjLfYvI3A=",
        "originContent": "## API 使用说明",
        "translatedContent": "## API Usage Instructions"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "U8eO5ZMev1PH3G030/YyNbNyaS1S4k9n5Of/5MkmvMU=",
        "originContent": "<details>",
        "translatedContent": "<details>"
      },
      {
        "row": 40,
        "rowsha": "hcCFwcWKQuCPTT7ak8F5ffsQs3Ndl3FznqwpAlBoucw=",
        "originContent": "<summary>代理接口调用方式</summary>",
        "translatedContent": "<summary>Proxy Interface Call Method</summary>"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 14,
    "Content": "\nGPT-Load 通过分组名称路由请求到不同的 AI 服务。使用方式如下：\n\n#### 1. 代理端点格式\n",
    "ContentSha": "4SleZ59aEkvobGyDB3hsqQno2FfqDc88sqF1ngpflIY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nGPT-Load routes requests to different AI services through group names. Usage is as follows:\n\n#### 1. Proxy Endpoint Format\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "aWmTmrMUYx1/gYF6ZharQNPnlPlfgSm9J3XlCdD6/w8=",
        "originContent": "GPT-Load 通过分组名称路由请求到不同的 AI 服务。使用方式如下：",
        "translatedContent": "GPT-Load routes requests to different AI services through group names. Usage is as follows:"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "NpWhKZcXisWmHROj5sqrVGXYxUtwvn5ozAcjUC4kF+c=",
        "originContent": "#### 1. 代理端点格式",
        "translatedContent": "#### 1. Proxy Endpoint Format"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 15,
    "Content": "```text\nhttp://localhost:3001/proxy/{group_name}/{原始API路径}\n```",
    "ContentSha": "3mp8l5Ri9V3xjlTqYF7YqHCXB5Hbsx38SneV9SISyzc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```text\nhttp://localhost:3001/proxy/{group_name}/{原始API路径}\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "tKMTeRwfvKLBQQ0dWxGQr0CHcj7BtsHEundimNbdYig=",
        "originContent": "```text",
        "translatedContent": "```text"
      },
      {
        "row": 2,
        "rowsha": "JGBG6FqX/iD202TpsJTpasce8l7T+v9dWOdZzW4Q/Zs=",
        "originContent": "http://localhost:3001/proxy/{group_name}/{原始API路径}",
        "translatedContent": "http://localhost:3001/proxy/{group_name}/{原始API路径}"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 16,
    "Content": "\n- `{group_name}`: 在管理界面创建的分组名称\n- `{原始API路径}`: 保持与原始 AI 服务完全一致的路径\n\n#### 2. 认证方式\n\n在 Web 管理界面中配置**代理密钥** (`Proxy Keys`)，可设置系统级别和分组级别的代理密钥。\n\n- **认证方式**: 与原生 API 一致，但需将原始密钥替换为配置的代理密钥。\n- **密钥作用域**: 在系统设置配置的 **全局代理密钥** 可以在所有分组使用，在分组配置的 **分组代理密钥** 仅在当前分组有效。\n- **格式**: 多个密钥使用半角英文逗号分隔。\n\n#### 3. OpenAI 接口调用示例\n\n假设创建了名为 `openai` 的分组：\n\n**原始调用方式：**\n",
    "ContentSha": "w4k+rfTca5TOSwsgzVjHm07pCXYPVdDmnn8Ll1V5TFE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n- `{group_name}`: The group name created in the management interface  \n- `{original API path}`: The path exactly consistent with the original AI service  \n\n#### 2. Authentication Method  \n\nConfigure **Proxy Keys** in the Web management interface, allowing system-level and group-level proxy keys.  \n\n- **Authentication method**: Same as the native API, but the original key must be replaced with the configured proxy key.  \n- **Key scope**: The **global proxy key** configured in system settings can be used in all groups, while the **group proxy key** configured in the group is only valid in the current group.  \n- **Format**: Multiple keys are separated by half-width English commas.  \n\n#### 3. OpenAI API Call Example  \n\nAssuming a group named `openai` is created:  \n\n**Original call method:**\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "G/axrEjz/R1peJ4rSyBTlTe03jAvIvYe/3Wav0DqHbI=",
        "originContent": "- `{group_name}`: 在管理界面创建的分组名称",
        "translatedContent": "- `{group_name}`: The group name created in the management interface  "
      },
      {
        "row": 3,
        "rowsha": "ju1wzMQH47v0evL295jFsRFA9ad4NDZEMl9IrnFfWOU=",
        "originContent": "- `{原始API路径}`: 保持与原始 AI 服务完全一致的路径",
        "translatedContent": "- `{original API path}`: The path exactly consistent with the original AI service  "
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "VQ5z7iViURFdLhtWWG6YG4pNOkN/45BtFgOY3F5BC/c=",
        "originContent": "#### 2. 认证方式",
        "translatedContent": "#### 2. Authentication Method  "
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "FgYR/dSyuO7XdhlPrF9Be/vMSOpdfjYq6rdOt7fZHZA=",
        "originContent": "在 Web 管理界面中配置**代理密钥** (`Proxy Keys`)，可设置系统级别和分组级别的代理密钥。",
        "translatedContent": "Configure **Proxy Keys** in the Web management interface, allowing system-level and group-level proxy keys.  "
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "rDieD67XoQ6KZ9F9b9vbI89ILBfgEGkJmdaVGOeSq9I=",
        "originContent": "- **认证方式**: 与原生 API 一致，但需将原始密钥替换为配置的代理密钥。",
        "translatedContent": "- **Authentication method**: Same as the native API, but the original key must be replaced with the configured proxy key.  "
      },
      {
        "row": 10,
        "rowsha": "5n9dFhqzMZG0Th4+4U3xkN5zDms9ZY3F6nbp5OtGmGY=",
        "originContent": "- **密钥作用域**: 在系统设置配置的 **全局代理密钥** 可以在所有分组使用，在分组配置的 **分组代理密钥** 仅在当前分组有效。",
        "translatedContent": "- **Key scope**: The **global proxy key** configured in system settings can be used in all groups, while the **group proxy key** configured in the group is only valid in the current group.  "
      },
      {
        "row": 11,
        "rowsha": "75zUBouyEfKHMdWH6L8Sv63nlwQUt9fcnIhKMG4EB34=",
        "originContent": "- **格式**: 多个密钥使用半角英文逗号分隔。",
        "translatedContent": "- **Format**: Multiple keys are separated by half-width English commas.  "
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "uiHTuVoE94KmbH5aNv5bvKLVingSE9fhKT0D065a6mc=",
        "originContent": "#### 3. OpenAI 接口调用示例",
        "translatedContent": "#### 3. OpenAI API Call Example  "
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "TaSIw86B4d0F6NCx+3GzItQ3JGY73RfdKeYyKNkovQQ=",
        "originContent": "假设创建了名为 `openai` 的分组：",
        "translatedContent": "Assuming a group named `openai` is created:  "
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "ra1x+fTH6imbJJEiaLt4L7eYylVUMcYaSZ7KPQE1cTE=",
        "originContent": "**原始调用方式：**",
        "translatedContent": "**Original call method:**"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 17,
    "Content": "```bash\ncurl -X POST https://api.openai.com/v1/chat/completions \\\n  -H \"Authorization: Bearer sk-your-openai-key\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"model\": \"gpt-4.1-mini\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'\n```",
    "ContentSha": "q31rihhXMzgvxzdybC9Hitc7wUC7N5jnqSPGysrrpPo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ncurl -X POST https://api.openai.com/v1/chat/completions \\\n  -H \"Authorization: Bearer sk-your-openai-key\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"model\": \"gpt-4.1-mini\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "+q8be91QI+ExzU/wMNDIOEILzr+vx4Mlqby0rCMnGcE=",
        "originContent": "curl -X POST https://api.openai.com/v1/chat/completions \\",
        "translatedContent": "curl -X POST https://api.openai.com/v1/chat/completions \\"
      },
      {
        "row": 3,
        "rowsha": "kjAE1dvB6H62AEnM+wQI2LyA3HsHAV55Arbi8yF9XZ4=",
        "originContent": "  -H \"Authorization: Bearer sk-your-openai-key\" \\",
        "translatedContent": "  -H \"Authorization: Bearer sk-your-openai-key\" \\"
      },
      {
        "row": 4,
        "rowsha": "b/EnLoKnKw0IEllQXHamEafmzM3fWpNT+oSnVk0G9WA=",
        "originContent": "  -H \"Content-Type: application/json\" \\",
        "translatedContent": "  -H \"Content-Type: application/json\" \\"
      },
      {
        "row": 5,
        "rowsha": "6EkoXYvkQ6VxMf97ZocNjX07YIM8s79tNPCMob+40mA=",
        "originContent": "  -d '{\"model\": \"gpt-4.1-mini\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'",
        "translatedContent": "  -d '{\"model\": \"gpt-4.1-mini\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'"
      },
      {
        "row": 6,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 18,
    "Content": "\n**代理调用方式：**\n",
    "ContentSha": "QR4zHAc/OyjMzokRGCSgrUdb5RDWknggdlOh1e/p4bM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**Proxy Invocation Method:**\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "hnzoyyfcla70ZLTwcZqk4krL+ma52dAR7863Sw3+F44=",
        "originContent": "**代理调用方式：**",
        "translatedContent": "**Proxy Invocation Method:**"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 19,
    "Content": "```bash\ncurl -X POST http://localhost:3001/proxy/openai/v1/chat/completions \\\n  -H \"Authorization: Bearer your-proxy-key\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"model\": \"gpt-4.1-mini\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'\n```",
    "ContentSha": "PGy5XZoScocgUqD+IYnCzsddSQbGqY+kbegbrQVDXdA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ncurl -X POST http://localhost:3001/proxy/openai/v1/chat/completions \\\n  -H \"Authorization: Bearer your-proxy-key\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"model\": \"gpt-4.1-mini\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "MCC8hjuzMQ/mgA1Z6P2XHgdI7TZKC0p3eYyJj3UMXiM=",
        "originContent": "curl -X POST http://localhost:3001/proxy/openai/v1/chat/completions \\",
        "translatedContent": "curl -X POST http://localhost:3001/proxy/openai/v1/chat/completions \\"
      },
      {
        "row": 3,
        "rowsha": "KOq4fcH837AkH1ElEU4fVGawx/ll9Iiyq8dmK2rEKgA=",
        "originContent": "  -H \"Authorization: Bearer your-proxy-key\" \\",
        "translatedContent": "  -H \"Authorization: Bearer your-proxy-key\" \\"
      },
      {
        "row": 4,
        "rowsha": "b/EnLoKnKw0IEllQXHamEafmzM3fWpNT+oSnVk0G9WA=",
        "originContent": "  -H \"Content-Type: application/json\" \\",
        "translatedContent": "  -H \"Content-Type: application/json\" \\"
      },
      {
        "row": 5,
        "rowsha": "6EkoXYvkQ6VxMf97ZocNjX07YIM8s79tNPCMob+40mA=",
        "originContent": "  -d '{\"model\": \"gpt-4.1-mini\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'",
        "translatedContent": "  -d '{\"model\": \"gpt-4.1-mini\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'"
      },
      {
        "row": 6,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 20,
    "Content": "\n**变更说明：**\n\n- 将 `https://api.openai.com` 替换为 `http://localhost:3001/proxy/openai`\n- 将原始 API Key 替换为**代理密钥**\n\n#### 4. Gemini 接口调用示例\n\n假设创建了名为 `gemini` 的分组：\n\n**原始调用方式：**\n",
    "ContentSha": "c/Jr+DO4qPeinGRpB+Q/i3dosvyb420tD1iIBnpzbiA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**Change Description:**\n\n- Replace `https://api.openai.com` with `http://localhost:3001/proxy/openai`\n- Replace the original API Key with the **proxy key**\n\n#### 4. Gemini Interface Call Example\n\nAssuming a group named `gemini` has been created:\n\n**Original call method:**\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "de5FRbG9oYf++F3L0yF4oFMXSBBIvvMwbxRj+40CD9s=",
        "originContent": "**变更说明：**",
        "translatedContent": "**Change Description:**"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "escW7vx+y+XiNP5pRCwqFG+8P998fXk3ZZH2gypJLtc=",
        "originContent": "- 将 `https://api.openai.com` 替换为 `http://localhost:3001/proxy/openai`",
        "translatedContent": "- Replace `https://api.openai.com` with `http://localhost:3001/proxy/openai`"
      },
      {
        "row": 5,
        "rowsha": "ET9fcLl3KzO2pQOwMTcOdm2OPrQU28+NpoBGUjMfPmU=",
        "originContent": "- 将原始 API Key 替换为**代理密钥**",
        "translatedContent": "- Replace the original API Key with the **proxy key**"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "P21sC/bphp5oi/KO/IENlZw/jOct0PStR73OXX1k5DI=",
        "originContent": "#### 4. Gemini 接口调用示例",
        "translatedContent": "#### 4. Gemini Interface Call Example"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "OCun6XGGlfIpG/8zBTNqYuGpK+m9kUyr+a0on3URcJY=",
        "originContent": "假设创建了名为 `gemini` 的分组：",
        "translatedContent": "Assuming a group named `gemini` has been created:"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "ra1x+fTH6imbJJEiaLt4L7eYylVUMcYaSZ7KPQE1cTE=",
        "originContent": "**原始调用方式：**",
        "translatedContent": "**Original call method:**"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 21,
    "Content": "```bash\ncurl -X POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent?key=your-gemini-key \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"contents\": [{\"parts\": [{\"text\": \"Hello\"}]}]}'\n```",
    "ContentSha": "bFlpJBFVGGWn2/BH/OUqGdbMycW4SagDww1vPlY5bOM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ncurl -X POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent?key=your-gemini-key \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"contents\": [{\"parts\": [{\"text\": \"Hello\"}]}]}'\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "dhIjrrVPfygO1UTiWmPnHQVYazFrLg1svUoxl2g/cLI=",
        "originContent": "curl -X POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent?key=your-gemini-key \\",
        "translatedContent": "curl -X POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent?key=your-gemini-key \\"
      },
      {
        "row": 3,
        "rowsha": "b/EnLoKnKw0IEllQXHamEafmzM3fWpNT+oSnVk0G9WA=",
        "originContent": "  -H \"Content-Type: application/json\" \\",
        "translatedContent": "  -H \"Content-Type: application/json\" \\"
      },
      {
        "row": 4,
        "rowsha": "rU53x9ES0t2UaAL1ieiuVwmFrr+AZfx16ins8GcR9t4=",
        "originContent": "  -d '{\"contents\": [{\"parts\": [{\"text\": \"Hello\"}]}]}'",
        "translatedContent": "  -d '{\"contents\": [{\"parts\": [{\"text\": \"Hello\"}]}]}'"
      },
      {
        "row": 5,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 22,
    "Content": "\n**代理调用方式：**\n",
    "ContentSha": "QR4zHAc/OyjMzokRGCSgrUdb5RDWknggdlOh1e/p4bM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**Proxy invocation method:**\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "hnzoyyfcla70ZLTwcZqk4krL+ma52dAR7863Sw3+F44=",
        "originContent": "**代理调用方式：**",
        "translatedContent": "**Proxy invocation method:**"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 23,
    "Content": "```bash\ncurl -X POST http://localhost:3001/proxy/gemini/v1beta/models/gemini-2.5-pro:generateContent?key=your-proxy-key \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"contents\": [{\"parts\": [{\"text\": \"Hello\"}]}]}'\n```",
    "ContentSha": "+s8C8u5BoSsC2zMl5r5W4OKkm1yGIJNBf3CtpsxH9rU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ncurl -X POST http://localhost:3001/proxy/gemini/v1beta/models/gemini-2.5-pro:generateContent?key=your-proxy-key \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"contents\": [{\"parts\": [{\"text\": \"Hello\"}]}]}'\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "tnWMniqSiGscMU3FGaS//qASNJVB+pRjufuy5AQ8KLM=",
        "originContent": "curl -X POST http://localhost:3001/proxy/gemini/v1beta/models/gemini-2.5-pro:generateContent?key=your-proxy-key \\",
        "translatedContent": "curl -X POST http://localhost:3001/proxy/gemini/v1beta/models/gemini-2.5-pro:generateContent?key=your-proxy-key \\"
      },
      {
        "row": 3,
        "rowsha": "b/EnLoKnKw0IEllQXHamEafmzM3fWpNT+oSnVk0G9WA=",
        "originContent": "  -H \"Content-Type: application/json\" \\",
        "translatedContent": "  -H \"Content-Type: application/json\" \\"
      },
      {
        "row": 4,
        "rowsha": "rU53x9ES0t2UaAL1ieiuVwmFrr+AZfx16ins8GcR9t4=",
        "originContent": "  -d '{\"contents\": [{\"parts\": [{\"text\": \"Hello\"}]}]}'",
        "translatedContent": "  -d '{\"contents\": [{\"parts\": [{\"text\": \"Hello\"}]}]}'"
      },
      {
        "row": 5,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 24,
    "Content": "\n**变更说明：**\n\n- 将 `https://generativelanguage.googleapis.com` 替换为 `http://localhost:3001/proxy/gemini`\n- 将 URL 参数中的 `key=your-gemini-key` 替换为**代理密钥**\n\n#### 5. Anthropic 接口调用示例\n\n假设创建了名为 `anthropic` 的分组：\n\n**原始调用方式：**\n",
    "ContentSha": "Hz66Kn6XC1UZLqSioL+iEsjFkVqvxnSZo0ds2T8Zhv8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**Change Description:**\n\n- Replace `https://generativelanguage.googleapis.com` with `http://localhost:3001/proxy/gemini`\n- Replace `key=your-gemini-key` in the URL parameters with **proxy key**\n\n#### 5. Anthropic API Call Example\n\nAssuming a group named `anthropic` has been created:\n\n**Original call method:**\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "de5FRbG9oYf++F3L0yF4oFMXSBBIvvMwbxRj+40CD9s=",
        "originContent": "**变更说明：**",
        "translatedContent": "**Change Description:**"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "QfY5L0ofWiKMft/y3VEHeyPIdlJ9NLT8Xx/gHTrrVv0=",
        "originContent": "- 将 `https://generativelanguage.googleapis.com` 替换为 `http://localhost:3001/proxy/gemini`",
        "translatedContent": "- Replace `https://generativelanguage.googleapis.com` with `http://localhost:3001/proxy/gemini`"
      },
      {
        "row": 5,
        "rowsha": "bBAKpTfq3hatun8s5nCqquBp2QdnoIG662kgD+mpyLY=",
        "originContent": "- 将 URL 参数中的 `key=your-gemini-key` 替换为**代理密钥**",
        "translatedContent": "- Replace `key=your-gemini-key` in the URL parameters with **proxy key**"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "MItiljblt8aK8e9DDGrUom0VjnBa4u2BksU+jnec7Gg=",
        "originContent": "#### 5. Anthropic 接口调用示例",
        "translatedContent": "#### 5. Anthropic API Call Example"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "Icx7tc8THahulZMwv2CmzP/ayD3M3hh4Gr0YV78SjWQ=",
        "originContent": "假设创建了名为 `anthropic` 的分组：",
        "translatedContent": "Assuming a group named `anthropic` has been created:"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "ra1x+fTH6imbJJEiaLt4L7eYylVUMcYaSZ7KPQE1cTE=",
        "originContent": "**原始调用方式：**",
        "translatedContent": "**Original call method:**"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 25,
    "Content": "```bash\ncurl -X POST https://api.anthropic.com/v1/messages \\\n  -H \"x-api-key: sk-ant-api03-your-anthropic-key\" \\\n  -H \"anthropic-version: 2023-06-01\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"model\": \"claude-sonnet-4-20250514\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'\n```",
    "ContentSha": "BN+dp2UHjZkyC3KXyz4d743LE5NL2gu2kUIRMnJOPmA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ncurl -X POST https://api.anthropic.com/v1/messages \\\n  -H \"x-api-key: sk-ant-api03-your-anthropic-key\" \\\n  -H \"anthropic-version: 2023-06-01\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"model\": \"claude-sonnet-4-20250514\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "O53MXfwxdNr/+xqfRgSqMC+Hs36XdlytTsAdJgb1IG8=",
        "originContent": "curl -X POST https://api.anthropic.com/v1/messages \\",
        "translatedContent": "curl -X POST https://api.anthropic.com/v1/messages \\"
      },
      {
        "row": 3,
        "rowsha": "MtBR8XJkURmZ3T9ZaGjAa9QgvZjo0ATFrjGz8P/STIQ=",
        "originContent": "  -H \"x-api-key: sk-ant-api03-your-anthropic-key\" \\",
        "translatedContent": "  -H \"x-api-key: sk-ant-api03-your-anthropic-key\" \\"
      },
      {
        "row": 4,
        "rowsha": "2/L4RGTBfsvGwPvIFSicBkWGEd7wCcJwJRD3kwa0aHg=",
        "originContent": "  -H \"anthropic-version: 2023-06-01\" \\",
        "translatedContent": "  -H \"anthropic-version: 2023-06-01\" \\"
      },
      {
        "row": 5,
        "rowsha": "b/EnLoKnKw0IEllQXHamEafmzM3fWpNT+oSnVk0G9WA=",
        "originContent": "  -H \"Content-Type: application/json\" \\",
        "translatedContent": "  -H \"Content-Type: application/json\" \\"
      },
      {
        "row": 6,
        "rowsha": "SbI5xJsKBsiOeK2Va0bDlLJfbsDQOrusFWmljBhJsTg=",
        "originContent": "  -d '{\"model\": \"claude-sonnet-4-20250514\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'",
        "translatedContent": "  -d '{\"model\": \"claude-sonnet-4-20250514\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'"
      },
      {
        "row": 7,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 26,
    "Content": "\n**代理调用方式：**\n",
    "ContentSha": "QR4zHAc/OyjMzokRGCSgrUdb5RDWknggdlOh1e/p4bM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**Proxy Invocation Method:**\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "hnzoyyfcla70ZLTwcZqk4krL+ma52dAR7863Sw3+F44=",
        "originContent": "**代理调用方式：**",
        "translatedContent": "**Proxy Invocation Method:**"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 27,
    "Content": "```bash\ncurl -X POST http://localhost:3001/proxy/anthropic/v1/messages \\\n  -H \"x-api-key: your-proxy-key\" \\\n  -H \"anthropic-version: 2023-06-01\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"model\": \"claude-sonnet-4-20250514\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'\n```",
    "ContentSha": "unUpFBnqLjUOIuK0GsiLsWiHXxd2Z74Kaj+BGbW2t2M=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ncurl -X POST http://localhost:3001/proxy/anthropic/v1/messages \\\n  -H \"x-api-key: your-proxy-key\" \\\n  -H \"anthropic-version: 2023-06-01\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"model\": \"claude-sonnet-4-20250514\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "hdjnNV2JVCsPmyRFbJeeASMRzbClEm0Tybi2LzPbXVA=",
        "originContent": "curl -X POST http://localhost:3001/proxy/anthropic/v1/messages \\",
        "translatedContent": "curl -X POST http://localhost:3001/proxy/anthropic/v1/messages \\"
      },
      {
        "row": 3,
        "rowsha": "ZxJyPqwbTCTeZ1u7Vpu79WADXlsBhZEKHp2PcKq4FNY=",
        "originContent": "  -H \"x-api-key: your-proxy-key\" \\",
        "translatedContent": "  -H \"x-api-key: your-proxy-key\" \\"
      },
      {
        "row": 4,
        "rowsha": "2/L4RGTBfsvGwPvIFSicBkWGEd7wCcJwJRD3kwa0aHg=",
        "originContent": "  -H \"anthropic-version: 2023-06-01\" \\",
        "translatedContent": "  -H \"anthropic-version: 2023-06-01\" \\"
      },
      {
        "row": 5,
        "rowsha": "b/EnLoKnKw0IEllQXHamEafmzM3fWpNT+oSnVk0G9WA=",
        "originContent": "  -H \"Content-Type: application/json\" \\",
        "translatedContent": "  -H \"Content-Type: application/json\" \\"
      },
      {
        "row": 6,
        "rowsha": "SbI5xJsKBsiOeK2Va0bDlLJfbsDQOrusFWmljBhJsTg=",
        "originContent": "  -d '{\"model\": \"claude-sonnet-4-20250514\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'",
        "translatedContent": "  -d '{\"model\": \"claude-sonnet-4-20250514\", \"messages\": [{\"role\": \"user\", \"content\": \"Hello\"}]}'"
      },
      {
        "row": 7,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 28,
    "Content": "\n**变更说明：**\n\n- 将 `https://api.anthropic.com` 替换为 `http://localhost:3001/proxy/anthropic`\n- 将 `x-api-key` 头部中的原始 API Key 替换为**代理密钥**\n\n#### 6. 支持的接口\n\n**OpenAI 格式：**\n\n- `/v1/chat/completions` - 聊天对话\n- `/v1/completions` - 文本补全\n- `/v1/embeddings` - 文本嵌入\n- `/v1/models` - 模型列表\n- 以及其他所有 OpenAI 兼容接口\n\n**Gemini 格式：**\n\n- `/v1beta/models/*/generateContent` - 内容生成\n- `/v1beta/models` - 模型列表\n- 以及其他所有 Gemini 原生接口\n\n**Anthropic 格式：**\n\n- `/v1/messages` - 消息对话\n- `/v1/models` - 模型列表（如果可用）\n- 以及其他所有 Anthropic 原生接口\n\n#### 7. 客户端 SDK 配置\n\n**OpenAI Python SDK：**\n",
    "ContentSha": "C7SqJKpI9ETIEYf6sR4yD+rCbBYgtM5KHH5Y6ohlxkY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**Change Description:**\n\n- Replace `https://api.anthropic.com` with `http://localhost:3001/proxy/anthropic`\n- Replace the original API Key in the `x-api-key` header with the **proxy key**\n\n#### 6. Supported Interfaces\n\n**OpenAI Format:**\n\n- `/v1/chat/completions` - Chat conversations\n- `/v1/completions` - Text completions\n- `/v1/embeddings` - Text embeddings\n- `/v1/models` - Model list\n- And all other OpenAI-compatible interfaces\n\n**Gemini Format:**\n\n- `/v1beta/models/*/generateContent` - Content generation\n- `/v1beta/models` - Model list\n- And all other native Gemini interfaces\n\n**Anthropic Format:**\n\n- `/v1/messages` - Message conversations\n- `/v1/models` - Model list (if available)\n- And all other native Anthropic interfaces\n\n#### 7. Client SDK Configuration\n\n**OpenAI Python SDK：**\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "de5FRbG9oYf++F3L0yF4oFMXSBBIvvMwbxRj+40CD9s=",
        "originContent": "**变更说明：**",
        "translatedContent": "**Change Description:**"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "bFp4NiCiiOLo8zZJQbr4nOUQGA1EMe05z5AqIBXjNZU=",
        "originContent": "- 将 `https://api.anthropic.com` 替换为 `http://localhost:3001/proxy/anthropic`",
        "translatedContent": "- Replace `https://api.anthropic.com` with `http://localhost:3001/proxy/anthropic`"
      },
      {
        "row": 5,
        "rowsha": "s/+mn7IFaEMGlLNEQ2JGF8+rRY8dZomsYuSnTKvX1H4=",
        "originContent": "- 将 `x-api-key` 头部中的原始 API Key 替换为**代理密钥**",
        "translatedContent": "- Replace the original API Key in the `x-api-key` header with the **proxy key**"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "bBwBhP2nctiE/p8ZW1AW9Fo/RmhYMP0C6jiYJ8ZHYC8=",
        "originContent": "#### 6. 支持的接口",
        "translatedContent": "#### 6. Supported Interfaces"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "ATeiBjmaRZlsRP3v8x1c63fynw/+9xovX4nmvNUDecA=",
        "originContent": "**OpenAI 格式：**",
        "translatedContent": "**OpenAI Format:**"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "tQ9CWf8ohIh7GMyP2QizK+YZi1uoUA9OzkQWr/atQOQ=",
        "originContent": "- `/v1/chat/completions` - 聊天对话",
        "translatedContent": "- `/v1/chat/completions` - Chat conversations"
      },
      {
        "row": 12,
        "rowsha": "i5aghAfFfxB3XQ9+3lg2N4mKqWCYZNf2EiKf72LyAkM=",
        "originContent": "- `/v1/completions` - 文本补全",
        "translatedContent": "- `/v1/completions` - Text completions"
      },
      {
        "row": 13,
        "rowsha": "rK14H7j6osJAq/CoigtnAbUalC0c1X00/yZzzYObhTM=",
        "originContent": "- `/v1/embeddings` - 文本嵌入",
        "translatedContent": "- `/v1/embeddings` - Text embeddings"
      },
      {
        "row": 14,
        "rowsha": "SIrzkhfjRGMuryN63EfV3NKOCA8Q/nwYvTdp0jzmipw=",
        "originContent": "- `/v1/models` - 模型列表",
        "translatedContent": "- `/v1/models` - Model list"
      },
      {
        "row": 15,
        "rowsha": "r9VeuOZAfjNAJClxhILc/AdlsK0RCsU62MunRs9AK4U=",
        "originContent": "- 以及其他所有 OpenAI 兼容接口",
        "translatedContent": "- And all other OpenAI-compatible interfaces"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "Unk9ISXm2wQqkixo3NqEs4K3uBSV2moVxOo3tJmTymM=",
        "originContent": "**Gemini 格式：**",
        "translatedContent": "**Gemini Format:**"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "Tpu9saQL6h0hJHQnStGUREaJU/WF0UGi4UDzX+FIAwI=",
        "originContent": "- `/v1beta/models/*/generateContent` - 内容生成",
        "translatedContent": "- `/v1beta/models/*/generateContent` - Content generation"
      },
      {
        "row": 20,
        "rowsha": "iX+/I9OA9SjVKPEnAmHGGjmceAW8wdR89dEf5780rME=",
        "originContent": "- `/v1beta/models` - 模型列表",
        "translatedContent": "- `/v1beta/models` - Model list"
      },
      {
        "row": 21,
        "rowsha": "Grz7t9Rz9ygECOvvHqd1uRCjW49KSR8mIGuW/K8h1bk=",
        "originContent": "- 以及其他所有 Gemini 原生接口",
        "translatedContent": "- And all other native Gemini interfaces"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "3uSjL/8m0JaR4soYPJuVsL/fgzvzLkC9r0GmO/GwqA8=",
        "originContent": "**Anthropic 格式：**",
        "translatedContent": "**Anthropic Format:**"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "lrGwPvNk/IaD7KawFlSH16CJfbGMh+1TwDzRyCnGdHg=",
        "originContent": "- `/v1/messages` - 消息对话",
        "translatedContent": "- `/v1/messages` - Message conversations"
      },
      {
        "row": 26,
        "rowsha": "gMGXuugwCsYJBztsCO+Q+zzAhCp6fbgIDma4+Pmwrqw=",
        "originContent": "- `/v1/models` - 模型列表（如果可用）",
        "translatedContent": "- `/v1/models` - Model list (if available)"
      },
      {
        "row": 27,
        "rowsha": "5LBDrcSrBYT+0uv0Hee79XAljH/hfQVIePy84urJWw0=",
        "originContent": "- 以及其他所有 Anthropic 原生接口",
        "translatedContent": "- And all other native Anthropic interfaces"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "MPS5eN7IE3pClDTrAkwaMUt30k6mdZmyyJc70D5CHyc=",
        "originContent": "#### 7. 客户端 SDK 配置",
        "translatedContent": "#### 7. Client SDK Configuration"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "34oSp0EoMRLnK3nEUX5VphhN9CD0V76p4/ariEkAUIU=",
        "originContent": "**OpenAI Python SDK：**",
        "translatedContent": "**OpenAI Python SDK：**"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 29,
    "Content": "```python\nfrom openai import OpenAI\n\nclient = OpenAI(\n    api_key=\"your-proxy-key\",  # 使用密钥\n    base_url=\"http://localhost:3001/proxy/openai\"  # 使用代理端点\n)\n\nresponse = client.chat.completions.create(\n    model=\"gpt-4.1-mini\",\n    messages=[{\"role\": \"user\", \"content\": \"Hello\"}]\n)\n```",
    "ContentSha": "EbFxc5jbVDNkHThSznqg1obWiGJvSx2teWEg5WuZ9uM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```python\nfrom openai import OpenAI\n\nclient = OpenAI(\n    api_key=\"your-proxy-key\",  # 使用密钥\n    base_url=\"http://localhost:3001/proxy/openai\"  # 使用代理端点\n)\n\nresponse = client.chat.completions.create(\n    model=\"gpt-4.1-mini\",\n    messages=[{\"role\": \"user\", \"content\": \"Hello\"}]\n)\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
        "originContent": "```python",
        "translatedContent": "```python"
      },
      {
        "row": 2,
        "rowsha": "5ynWUamFcFcIL7QCBBEEkEw2rLs0lJ3Nac/uHVS2ykk=",
        "originContent": "from openai import OpenAI",
        "translatedContent": "from openai import OpenAI"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "2h+AjuzTJ+7HTW3XqQN8XNfGmjtAGPYvkpAHG8UXlFQ=",
        "originContent": "client = OpenAI(",
        "translatedContent": "client = OpenAI("
      },
      {
        "row": 5,
        "rowsha": "zn0e3S5E5nx8HWr3Xe7i9549Ji3AeUaiRUx+p7XE2uI=",
        "originContent": "    api_key=\"your-proxy-key\",  # 使用密钥",
        "translatedContent": "    api_key=\"your-proxy-key\",  # 使用密钥"
      },
      {
        "row": 6,
        "rowsha": "noL8p/JALZebwrknsR6mrYq8jyZlCALPOO2Gm7ZcT+E=",
        "originContent": "    base_url=\"http://localhost:3001/proxy/openai\"  # 使用代理端点",
        "translatedContent": "    base_url=\"http://localhost:3001/proxy/openai\"  # 使用代理端点"
      },
      {
        "row": 7,
        "rowsha": "ul7FHQekrA6VFghwRDHVmgKyGk6VGswQUFqNxAfFAe4=",
        "originContent": ")",
        "translatedContent": ")"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "ceKlwK8258s/Oa+oBm5uArnUt8+y9ubdvMdU+PdJafE=",
        "originContent": "response = client.chat.completions.create(",
        "translatedContent": "response = client.chat.completions.create("
      },
      {
        "row": 10,
        "rowsha": "bvHWgyKN0bZ+F0RghwYWmRVDVyBRk/LwMTpH/pibxNg=",
        "originContent": "    model=\"gpt-4.1-mini\",",
        "translatedContent": "    model=\"gpt-4.1-mini\","
      },
      {
        "row": 11,
        "rowsha": "XHXmINQRVSf11HtG1ojGWQKMVuFzQckbqvZ/QUBdNnA=",
        "originContent": "    messages=[{\"role\": \"user\", \"content\": \"Hello\"}]",
        "translatedContent": "    messages=[{\"role\": \"user\", \"content\": \"Hello\"}]"
      },
      {
        "row": 12,
        "rowsha": "ul7FHQekrA6VFghwRDHVmgKyGk6VGswQUFqNxAfFAe4=",
        "originContent": ")",
        "translatedContent": ")"
      },
      {
        "row": 13,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 30,
    "Content": "\n**Google Gemini SDK (Python)：**\n",
    "ContentSha": "pPq54XMPjvZQS+Q3an6ZpXFifwhyo6oslOJlZHJ3T7w=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**Google Gemini SDK (Python):**\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "wGUFi+y6D7dOzK6z07HO/nSWth9Z9CkjMFjOuqNG5i4=",
        "originContent": "**Google Gemini SDK (Python)：**",
        "translatedContent": "**Google Gemini SDK (Python):**"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 31,
    "Content": "```python\nimport google.generativeai as genai\n\n# 配置 API 密钥和基础 URL\ngenai.configure(\n    api_key=\"your-proxy-key\",  # 使用代理密钥\n    client_options={\"api_endpoint\": \"http://localhost:3001/proxy/gemini\"}\n)\n\nmodel = genai.GenerativeModel('gemini-2.5-pro')\nresponse = model.generate_content(\"Hello\")\n```",
    "ContentSha": "i3zBJmVVRbtDfhSG9UtzDT4tEfLlj0kp7zXvr/JZNR8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```python\nimport google.generativeai as genai\n\n# 配置 API 密钥和基础 URL\ngenai.configure(\n    api_key=\"your-proxy-key\",  # 使用代理密钥\n    client_options={\"api_endpoint\": \"http://localhost:3001/proxy/gemini\"}\n)\n\nmodel = genai.GenerativeModel('gemini-2.5-pro')\nresponse = model.generate_content(\"Hello\")\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
        "originContent": "```python",
        "translatedContent": "```python"
      },
      {
        "row": 2,
        "rowsha": "x/HdM44ChC6dAUaW7VqAkAtZe0rLr/QQmXx6ahN/R3M=",
        "originContent": "import google.generativeai as genai",
        "translatedContent": "import google.generativeai as genai"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "JkCx//RmXJcBBpEGcv6xzDEyukJj/czQ0+7Gv7RbMkc=",
        "originContent": "# 配置 API 密钥和基础 URL",
        "translatedContent": "# 配置 API 密钥和基础 URL"
      },
      {
        "row": 5,
        "rowsha": "8e/X9jOX6W48nB2VhnO3XxYKj9Wz2uGmLSKmeWcq0zo=",
        "originContent": "genai.configure(",
        "translatedContent": "genai.configure("
      },
      {
        "row": 6,
        "rowsha": "Bbmu/GG3iSbY+KVNlN3Iap5kQsR0inUKD6m0V7JkMJU=",
        "originContent": "    api_key=\"your-proxy-key\",  # 使用代理密钥",
        "translatedContent": "    api_key=\"your-proxy-key\",  # 使用代理密钥"
      },
      {
        "row": 7,
        "rowsha": "Sc9XEFDsrFvRDEBlOBlLKysO98N6XBHshkZewlRV9Gg=",
        "originContent": "    client_options={\"api_endpoint\": \"http://localhost:3001/proxy/gemini\"}",
        "translatedContent": "    client_options={\"api_endpoint\": \"http://localhost:3001/proxy/gemini\"}"
      },
      {
        "row": 8,
        "rowsha": "ul7FHQekrA6VFghwRDHVmgKyGk6VGswQUFqNxAfFAe4=",
        "originContent": ")",
        "translatedContent": ")"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "NCcWsWF6uCpuG2LfIeULf8q2bjd4vrOowb6sfBGo2A4=",
        "originContent": "model = genai.GenerativeModel('gemini-2.5-pro')",
        "translatedContent": "model = genai.GenerativeModel('gemini-2.5-pro')"
      },
      {
        "row": 11,
        "rowsha": "qsc/5q3wXimzKsKZ6YxCEeF51zaFAKVtOou8TF1e+JQ=",
        "originContent": "response = model.generate_content(\"Hello\")",
        "translatedContent": "response = model.generate_content(\"Hello\")"
      },
      {
        "row": 12,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 32,
    "Content": "\n**Anthropic SDK (Python)：**\n",
    "ContentSha": "bgTe8fH24dKNze/rDl7icQ/RqrIQLEIbknMyqudc4iA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**Anthropic SDK (Python):**\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "3BvhvmYmf209UMY43DSJUGL/Fu5oVBrS4ahke27gAmA=",
        "originContent": "**Anthropic SDK (Python)：**",
        "translatedContent": "**Anthropic SDK (Python):**"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 33,
    "Content": "```python\nfrom anthropic import Anthropic\n\nclient = Anthropic(\n    api_key=\"your-proxy-key\",  # 使用代理密钥\n    base_url=\"http://localhost:3001/proxy/anthropic\"  # 使用代理端点\n)\n\nresponse = client.messages.create(\n    model=\"claude-sonnet-4-20250514\",\n    messages=[{\"role\": \"user\", \"content\": \"Hello\"}]\n)\n```",
    "ContentSha": "7+5ZEgedUC/I+UGEWqS279MRMIC9iLkdIazznwu6d/8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```python\nfrom anthropic import Anthropic\n\nclient = Anthropic(\n    api_key=\"your-proxy-key\",  # 使用代理密钥\n    base_url=\"http://localhost:3001/proxy/anthropic\"  # 使用代理端点\n)\n\nresponse = client.messages.create(\n    model=\"claude-sonnet-4-20250514\",\n    messages=[{\"role\": \"user\", \"content\": \"Hello\"}]\n)\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
        "originContent": "```python",
        "translatedContent": "```python"
      },
      {
        "row": 2,
        "rowsha": "nQd7EeK7es8eoEi/9r9vizNoJQzXpYQUddeaiPX2fxw=",
        "originContent": "from anthropic import Anthropic",
        "translatedContent": "from anthropic import Anthropic"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "yVgCqydYiInzs10jpM6JnIRDPAm3cbHY9pllb++naPw=",
        "originContent": "client = Anthropic(",
        "translatedContent": "client = Anthropic("
      },
      {
        "row": 5,
        "rowsha": "Bbmu/GG3iSbY+KVNlN3Iap5kQsR0inUKD6m0V7JkMJU=",
        "originContent": "    api_key=\"your-proxy-key\",  # 使用代理密钥",
        "translatedContent": "    api_key=\"your-proxy-key\",  # 使用代理密钥"
      },
      {
        "row": 6,
        "rowsha": "eOjLALo0avYjbW76zAw99TxABopyJdzskQQm5QYB+Wo=",
        "originContent": "    base_url=\"http://localhost:3001/proxy/anthropic\"  # 使用代理端点",
        "translatedContent": "    base_url=\"http://localhost:3001/proxy/anthropic\"  # 使用代理端点"
      },
      {
        "row": 7,
        "rowsha": "ul7FHQekrA6VFghwRDHVmgKyGk6VGswQUFqNxAfFAe4=",
        "originContent": ")",
        "translatedContent": ")"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "DG0HMYAHbqlf1HCftXNJWjNTXbLOFIhw2dUdVA5++b4=",
        "originContent": "response = client.messages.create(",
        "translatedContent": "response = client.messages.create("
      },
      {
        "row": 10,
        "rowsha": "aGGqsCJPOAXsJ6D4uqmeNpeglJGLs5dJHV5dIeJO4FY=",
        "originContent": "    model=\"claude-sonnet-4-20250514\",",
        "translatedContent": "    model=\"claude-sonnet-4-20250514\","
      },
      {
        "row": 11,
        "rowsha": "XHXmINQRVSf11HtG1ojGWQKMVuFzQckbqvZ/QUBdNnA=",
        "originContent": "    messages=[{\"role\": \"user\", \"content\": \"Hello\"}]",
        "translatedContent": "    messages=[{\"role\": \"user\", \"content\": \"Hello\"}]"
      },
      {
        "row": 12,
        "rowsha": "ul7FHQekrA6VFghwRDHVmgKyGk6VGswQUFqNxAfFAe4=",
        "originContent": ")",
        "translatedContent": ")"
      },
      {
        "row": 13,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 34,
    "Content": "\n> **重要提示**：作为透明代理服务，GPT-Load 完全保留各 AI 服务的原生 API 格式和认证方式，仅需要替换端点地址并使用在管理端配置的**代理密钥**即可无缝迁移。\n\n</details>\n\n## 许可证\n\nMIT 许可证 - 详情请参阅 [LICENSE](LICENSE) 文件。\n\n## Star History\n\n[![Stargazers over time](https://starchart.cc/tbphp/gpt-load.svg?variant=adaptive)](https://starchart.cc/tbphp/gpt-load)\n",
    "ContentSha": "g0P+jSLBT/UqWBIp5GA1HjW6d4BsVqnaB/MCNxE2xCY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n> **Important Note**: As a transparent proxy service, GPT-Load fully preserves the native API format and authentication methods of each AI service, requiring only the replacement of the endpoint address and the use of the **proxy key** configured in the management console for seamless migration.\n\n</details>\n\n## License\n\nMIT License - For details, please refer to the [LICENSE](LICENSE) file.\n\n## Star History\n\n[![Stargazers over time](https://starchart.cc/tbphp/gpt-load.svg?variant=adaptive)](https://starchart.cc/tbphp/gpt-load)\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "F8nFeIU8hnJZNxCErl/iD0vEyI4LcASMHn6BA+25s90=",
        "originContent": "> **重要提示**：作为透明代理服务，GPT-Load 完全保留各 AI 服务的原生 API 格式和认证方式，仅需要替换端点地址并使用在管理端配置的**代理密钥**即可无缝迁移。",
        "translatedContent": "> **Important Note**: As a transparent proxy service, GPT-Load fully preserves the native API format and authentication methods of each AI service, requiring only the replacement of the endpoint address and the use of the **proxy key** configured in the management console for seamless migration."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "iKxEwaqPw8IiEEWQ6czEzAvKi1nrFO/wqlPbG+tChcM=",
        "originContent": "</details>",
        "translatedContent": "</details>"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "l9mHJhM0bkQldVQ8sqfWeieeIFtAwhD/P/KiVcLUJww=",
        "originContent": "## 许可证",
        "translatedContent": "## License"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "WEgkh9eB+hPEu3D2pPa5YuWxdDTHFFJIYMW6bKoaj5g=",
        "originContent": "MIT 许可证 - 详情请参阅 [LICENSE](LICENSE) 文件。",
        "translatedContent": "MIT License - For details, please refer to the [LICENSE](LICENSE) file."
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "HLlFkIOChBL2XK+/4offEec901rMTtlU760d5hKrZbw=",
        "originContent": "## Star History",
        "translatedContent": "## Star History"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "FIopI3/UMZErymBCFz972XQdPh+FMWdFOkcvIameInQ=",
        "originContent": "[![Stargazers over time](https://starchart.cc/tbphp/gpt-load.svg?variant=adaptive)](https://starchart.cc/tbphp/gpt-load)",
        "translatedContent": "[![Stargazers over time](https://starchart.cc/tbphp/gpt-load.svg?variant=adaptive)](https://starchart.cc/tbphp/gpt-load)"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]