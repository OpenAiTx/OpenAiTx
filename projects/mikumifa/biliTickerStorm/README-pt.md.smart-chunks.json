[
  {
    "Id": 1,
    "Content": "\n# 🎫 BiliTickerStorm\n\n\n## ⚙️ 服务说明\n\n| 服务名             | 说明              | 备注    |\n| --------------- | --------------- | ----- |\n| `ticket-master` | 主控服务，负责调度任务     | 单实例部署 |\n| `ticket-worker` | 抢票 worker，可横向扩展 | 支持多实例 |\n| `gt-python`     | 图形验证码处理服务       | 单实例部署 |\n\n---\n\n## 🚀 快速部署步骤\n\n> 集群搭建可以参考 [集群搭建指南](https://raw.githubusercontent.com/mikumifa/biliTickerStorm/main/docs/集群搭建参考.md)。\n\n<details> <summary><strong>📦 远程仓库安装（推荐）</strong></summary>\n\n```bash\nhelm repo add bili-ticker-storm https://mikumifa.github.io/biliTickerStorm/\nhelm repo update\n```",
    "ContentSha": "OldZGYK15A366a5ixuZ2VdGPt5cgmrHXFFnh4CYVgZk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# 🎫 BiliTickerStorm\n\n## ⚙️ Descrição do Serviço\n\n| Nome do Serviço       | Descrição                     | Observações   |\n| --------------------- | ---------------------------- | ------------- |\n| `ticket-master`       | Serviço principal, responsável pelo agendamento de tarefas | Implantação em instância única |\n| `ticket-worker`       | Worker de compra de ingressos, pode ser escalado horizontalmente | Suporta múltiplas instâncias |\n| `gt-python`           | Serviço de processamento de captcha gráfico | Implantação em instância única |\n\n---\n\n## 🚀 Passos para Implantação Rápida\n\n> Para a configuração do cluster, consulte o [Guia de Configuração de Cluster](https://raw.githubusercontent.com/mikumifa/biliTickerStorm/main/docs/集群搭建参考.md).\n\n<details> <summary><strong>📦 Instalação via Repositório Remoto (Recomendado)</strong></summary>\n\n```bash\nhelm repo add bili-ticker-storm https://mikumifa.github.io/biliTickerStorm/\nhelm repo update\n```",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "\n### 2. 安装 Chart\n\n```bash\nhelm install bili-ticker-storm bili-ticker-storm/bili-ticker-storm \\\n  --set ticketMaster.hostDataPath=/your/host/data/path \\\n  --set ticketWorker.pushplusToken=\"your_token\" \\\n  --set ticketWorker.ticketInterval=\"300\" \\\n  --set ticketWorker.ticketTimeStart=\"2025-05-20T13:14\"\n  \n```\n\n> - `hostDataPath` 是抢票配置文件目录，挂载给 `ticket-master` 容器用。抢票配置文件生成使用 https://github.com/mikumifa/biliTickerBuy\n> - `ticketWorker.pushplusToken` 是plusplus 推送配置，设置后可以接收抢票结果通知。\n> - `ticketWorker.ticketInterval` 是抢票间隔秒数，默认 300 毫秒。\n> - `ticketWorker.ticketTimeStart` 是定时启动时间，格式为 `2025-05-20T13:14`，不填默认打开容器直接开始抢票。\n\n### 3. 升级 Chart\n\n```bash\nhelm upgrade bili-ticker-storm bili-ticker-storm/bili-ticker-storm --reuse-values \\\n  --set ticketWorker.ticketInterval=\"600\"\n```",
    "ContentSha": "bRX4Z1xqYGvwRzRrtzD8fIDYSWhh1YUxY5T1+aHGojM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 2. Instalar o Chart\n\n```bash\nhelm install bili-ticker-storm bili-ticker-storm/bili-ticker-storm \\\n  --set ticketMaster.hostDataPath=/your/host/data/path \\\n  --set ticketWorker.pushplusToken=\"your_token\" \\\n  --set ticketWorker.ticketInterval=\"300\" \\\n  --set ticketWorker.ticketTimeStart=\"2025-05-20T13:14\"\n  \n```\n\n> - `hostDataPath` é o diretório do arquivo de configuração de compra de ingressos, montado para uso pelo contêiner `ticket-master`. Para gerar o arquivo de configuração de compra de ingressos, utilize https://github.com/mikumifa/biliTickerBuy\n> - `ticketWorker.pushplusToken` é a configuração de push do pushplus, permitindo receber notificações do resultado da compra de ingressos após definido.\n> - `ticketWorker.ticketInterval` é o intervalo em segundos entre tentativas de compra de ingressos, padrão de 300 milissegundos.\n> - `ticketWorker.ticketTimeStart` é o horário de início agendado, no formato `2025-05-20T13:14`. Se não preenchido, ao iniciar o contêiner, a compra de ingressos será iniciada imediatamente.\n\n### 3. Atualizar o Chart\n\n```bash\nhelm upgrade bili-ticker-storm bili-ticker-storm/bili-ticker-storm --reuse-values \\\n  --set ticketWorker.ticketInterval=\"600\"\n```",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "---\n</details> \n<details> <summary><strong>📦 本地 Chart 安装</strong></summary>\n\n\n### 1. 安装 Chart\n\n```bash\n# 克隆仓库\ngit clone https://github.com/mikumifa/biliTickerStorm\n# 使用本地 Chart 包\nhelm install bili-ticker-storm ./helm \\\n  --set ticketMaster.hostDataPath=/your/host/data/path \\\n  --set ticketWorker.pushplusToken=\"your_token\" \\\n  --set ticketWorker.ticketInterval=\"300\" \\\n  --set ticketWorker.ticketTimeStart=\"2025-05-20T13:14\"\n```\n### 2. 升级 Chart\n\n```bash\nhelm upgrade bili-ticker-storm ./helm --reuse-values\n```",
    "ContentSha": "pM8qGhCS+O0ExpFvJ7CXb9BMDD72Qk4iKw2KU4EXibI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "</details> \n<details> <summary><strong>📦 Instalação de Chart Local</strong></summary>\n\n\n### 1. Instalar o Chart\n\n```bash\n# Clonar o repositório\ngit clone https://github.com/mikumifa/biliTickerStorm\n# Usar o pacote Chart local\nhelm install bili-ticker-storm ./helm \\\n  --set ticketMaster.hostDataPath=/seu/caminho/de/dados/host \\\n  --set ticketWorker.pushplusToken=\"seu_token\" \\\n  --set ticketWorker.ticketInterval=\"300\" \\\n  --set ticketWorker.ticketTimeStart=\"2025-05-20T13:14\"\n```\n### 2. Atualizar o Chart\n\n```bash\nhelm upgrade bili-ticker-storm ./helm --reuse-values\n```",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "</details>\n<details>\n<summary><strong>📌 通用命令</strong></summary>\n\n### ⏹ 卸载\n```bash\nhelm uninstall bili-ticker-storm\n```\n</details>\n\n\n## 📩 免责声明\n\n本项目遵循 MIT License 许可协议，仅供个人学习与研究使用。请勿将本项目用于任何商业牟利行为，亦严禁用于任何形式的代抢、违法行为或违反相关平台规则的用途。由此产生的一切后果均由使用者自行承担，与本人无关。\n\n若您 fork 或使用本项目，请务必遵守相关法律法规与目标平台规则。\n\n## 💡 关于访问频率与并发控制\n本项目在设计时严格遵循「非侵入式」原则，避免对目标服务器（如 Bilibili）造成任何干扰。\n\n所有网络请求的时间间隔均由用户自行配置，默认值模拟正常用户的手动操作速度。程序默认单线程运行，无并发任务。遇到请求失败时，程序会进行有限次数的重试，并在重试之间加入适当的延时，避免形成高频打点。项目完全依赖平台公开接口及网页结构，不含风控规避、API劫持等破坏性手段。\n",
    "ContentSha": "c35GLp7Z8gLnZYAh8qiJxC3tPLz6iTepT9qYd1IaduM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "</details>\n<details>\n<summary><strong>📌 Comandos Gerais</strong></summary>\n\n### ⏹ Desinstalar\n```bash\nhelm uninstall bili-ticker-storm\n```\n</details>\n\n\n## 📩 Aviso Legal\n\nEste projeto segue o acordo de licença MIT License, sendo destinado apenas para aprendizado e pesquisa pessoal. Não utilize este projeto para qualquer atividade comercial lucrativa, sendo também estritamente proibido o uso para qualquer forma de compra automatizada, atividades ilegais ou para fins que violem as regras das plataformas relacionadas. Todas as consequências decorrentes do uso são de responsabilidade exclusiva do usuário, não tendo relação com o autor.\n\nSe você fizer fork ou utilizar este projeto, por favor, cumpra rigorosamente as leis, regulamentos e regras das plataformas-alvo.\n\n## 💡 Sobre Frequência de Acesso e Controle de Concorrência\nEste projeto foi projetado seguindo estritamente o princípio de \"não intrusivo\", evitando qualquer tipo de interferência nos servidores de destino (como o Bilibili).\n\nTodos os intervalos de requisições de rede são configuráveis pelo usuário, sendo o valor padrão simulado para corresponder à velocidade de operação manual de um usuário comum. O programa executa por padrão em modo single-thread, sem tarefas concorrentes. Em caso de falha na requisição, o programa tentará novamente um número limitado de vezes, inserindo atrasos adequados entre as tentativas para evitar solicitações em alta frequência. O projeto depende integralmente de interfaces públicas e estruturas de página da plataforma, não incluindo métodos destrutivos como evasão de controle de risco ou sequestro de API.",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "## 🛡️ 平台尊重声明\n\n本程序设计时已尽可能控制请求频率，避免对 Bilibili 服务器造成任何明显负载或影响。项目仅作为学习用途，不具备大规模、高并发的能力，亦无任何恶意行为或干扰服务的企图。\n\n如本项目中存在侵犯 Bilibili 公司合法权益的内容，请通过邮箱 [1055069518@qq.com](https://raw.githubusercontent.com/mikumifa/biliTickerStorm/main/mailto:1055069518@qq.com) 与我联系，我将第一时间下架相关内容并删除本仓库。对此造成的不便，我深表歉意，感谢您的理解与包容。\n\n## 📄 License\n\n[MIT License](LICENSE)\n\n",
    "ContentSha": "jXwxdwRuyMfpVqKoo054exNU0SNLLLoad1BMCQyz+OU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## 🛡️ Declaração de Respeito à Plataforma\n\nEste programa foi projetado para controlar a frequência de requisições tanto quanto possível, evitando causar qualquer carga ou impacto significativo nos servidores da Bilibili. O projeto é apenas para fins de aprendizado, não possui capacidade para operações em grande escala ou alta concorrência, e não tem qualquer intenção maliciosa ou de interferência nos serviços.\n\nCaso este projeto contenha conteúdo que infrinja os direitos legais da empresa Bilibili, por favor entre em contato comigo pelo e-mail [1055069518@qq.com](https://raw.githubusercontent.com/mikumifa/biliTickerStorm/main/mailto:1055069518@qq.com). Removerei imediatamente o conteúdo relevante e excluirei este repositório. Peço desculpas por qualquer inconveniente causado e agradeço pela sua compreensão e tolerância.\n\n## 📄 Licença\n\n[Licença MIT](LICENSE)\n",
    "Status": "ok"
  }
]