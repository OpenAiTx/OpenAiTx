[
  {
    "Id": 1,
    "Content": "# Meilisearch Plugin for Jellyfin\n\nA plugin for Jellyfin that try to improves search speed and result by utilize Meilisearch as search engine.\n\nThis plugin offload search logic to Meilisearch, and modifies response from Jellyfin.\n\nAs long as your client uses `/Items` endpoint for search, it should be supported seamlessly I guess.\n\nInspired by [JellySearch](https://gitlab.com/DomiStyle/jellysearch).\n\n---\n\n### Usage\n\n1. Setup a Meilisearch instance (maybe a hosted one in the cloud will also work, but I don't recommend).\n2. Add following repository and install the Meilisearch plugin.",
    "ContentSha": "1FbyMhWWKlMS3dvXVri8X/FgO4aP/4Qi8c5UBm8e080=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Plugin Meilisearch pour Jellyfin\n\nUn plugin pour Jellyfin qui tente d'améliorer la vitesse de recherche et les résultats en utilisant Meilisearch comme moteur de recherche.\n\nCe plugin décharge la logique de recherche vers Meilisearch, et modifie la réponse de Jellyfin.\n\nTant que votre client utilise le point de terminaison `/Items` pour la recherche, il devrait être pris en charge de manière transparente, je suppose.\n\nInspiré par [JellySearch](https://gitlab.com/DomiStyle/jellysearch).\n\n---\n\n### Utilisation\n\n1. Configurez une instance Meilisearch (peut-être qu’une instance hébergée dans le cloud fonctionnera aussi, mais je ne recommande pas).\n2. Ajoutez le dépôt suivant et installez le plugin Meilisearch.",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "Csbn0mUe/5Zb+FZ+eBnRf3S7gt/2DBIlR9Fd7YlK3Iw=",
        "originContent": "# Meilisearch Plugin for Jellyfin",
        "translatedContent": "# Plugin Meilisearch pour Jellyfin"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "TGCmrN5rDYfUiI7ChshPHTADb9PCGKuUzSejFvEcHeo=",
        "originContent": "A plugin for Jellyfin that try to improves search speed and result by utilize Meilisearch as search engine.",
        "translatedContent": "Un plugin pour Jellyfin qui tente d'améliorer la vitesse de recherche et les résultats en utilisant Meilisearch comme moteur de recherche."
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "1dcmT07SuJ+HPA60MSiz5+c7qVuB3thYWzunGVv/gnQ=",
        "originContent": "This plugin offload search logic to Meilisearch, and modifies response from Jellyfin.",
        "translatedContent": "Ce plugin décharge la logique de recherche vers Meilisearch, et modifie la réponse de Jellyfin."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "QYfF1T1MMzb1ZJv6E4Sod7WzbZGM173gQSwap4cB8Hc=",
        "originContent": "As long as your client uses `/Items` endpoint for search, it should be supported seamlessly I guess.",
        "translatedContent": "Tant que votre client utilise le point de terminaison `/Items` pour la recherche, il devrait être pris en charge de manière transparente, je suppose."
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "mcN0UZyapKmtL6j31AIAwEkO+p41iMqd0QkFES1LmOs=",
        "originContent": "Inspired by [JellySearch](https://gitlab.com/DomiStyle/jellysearch).",
        "translatedContent": "Inspiré par [JellySearch](https://gitlab.com/DomiStyle/jellysearch)."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": "---"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "elsthwRCF+vtpOBxqAWFEGuucFIX2nKj7DKSYQAuFv8=",
        "originContent": "### Usage",
        "translatedContent": "### Utilisation"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "UAGQq7PVZL5Zk1WCC+p/ocSLlXZ31hX6nf1myYU2TPQ=",
        "originContent": "1. Setup a Meilisearch instance (maybe a hosted one in the cloud will also work, but I don't recommend).",
        "translatedContent": "1. Configurez une instance Meilisearch (peut-être qu’une instance hébergée dans le cloud fonctionnera aussi, mais je ne recommande pas)."
      },
      {
        "row": 16,
        "rowsha": "fzY7gzEqwqIeC4gaRtWxFVekTgWWljglvYLaM55WT9o=",
        "originContent": "2. Add following repository and install the Meilisearch plugin.",
        "translatedContent": "2. Ajoutez le dépôt suivant et installez le plugin Meilisearch."
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "    ```\n    https://raw.githubusercontent.com/arnesacnussem/jellyfin-plugin-meilisearch/refs/heads/master/manifest.json\n    ```",
    "ContentSha": "QndVby7sWLQpRY6DH8/KuAv8aNPYdarBa2Miu8BKyWc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "    ```\n    https://raw.githubusercontent.com/arnesacnussem/jellyfin-plugin-meilisearch/refs/heads/master/manifest.json\n    ```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "7em5kHTNO1cPWnaxB4H1GFdKMaKdWtteFc09etZSl0o=",
        "originContent": "    ```",
        "translatedContent": "    ```"
      },
      {
        "row": 2,
        "rowsha": "cRsqyDwRHlX/X92RwAQT6f0MtBKR7f7sJOrZ8iZrCwg=",
        "originContent": "    https://raw.githubusercontent.com/arnesacnussem/jellyfin-plugin-meilisearch/refs/heads/master/manifest.json",
        "translatedContent": "    https://raw.githubusercontent.com/arnesacnussem/jellyfin-plugin-meilisearch/refs/heads/master/manifest.json"
      },
      {
        "row": 3,
        "rowsha": "7em5kHTNO1cPWnaxB4H1GFdKMaKdWtteFc09etZSl0o=",
        "originContent": "    ```",
        "translatedContent": "    ```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 3,
    "Content": "3. Fill url to your Meilisearch instance in plugin settings, and maybe api key also required according to your Meilisearch setup.\n4. If you want share one Meilisearch instance across multiple Jellyfin instance, you can fill the `Meilisearch Index Name`, if leaving empty, it will use the server name.\n5. Remember click `Save` and make sure the status reports `ok`.\n6. Try typing something in search page.\n\n    ---\n\nIndex will update on following events:\n- Server start\n- Configuration change\n- Library scan complete\n- Update index task being triggered\n\n---\n\n### How it works\n\nThe core feature, which is to mutate the search request, is done by injecting an [`ActionFilter`](https://learn.microsoft.com/en-us/aspnet/core/mvc/controllers/filters?view=aspnetcore-8.0#action-filters).\nSo it may only support a few versions of Jellyfin. At the moment I'm using `Jellyfin 10.10.0`,\nbut it should work on other versions as long as the required parameter name of `/Items` endpoint doesn't change.\n\n---\n###\n\nI've seen JellySearch, which is a wonderful project, but I don't really like setting up a reverse proxy or any of that hassle.\n\nSo I am writing this, but it still requires a Meilisearch instance.\n\nAt this moment, only the `/Items` endpoint is affected by this plugin, but it still improves a lot on my 200k items library.\n\n",
    "ContentSha": "J53itaEMtwhmuzlNlwaTBhq87UdTHunpVGX5V6s8KAY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "3. Remplissez l'URL de votre instance Meilisearch dans les paramètres du plugin, et peut-être que la clé API est également requise selon la configuration de votre Meilisearch.  \n4. Si vous souhaitez partager une instance Meilisearch entre plusieurs instances Jellyfin, vous pouvez remplir le `Nom de l'Index Meilisearch`, si laissé vide, il utilisera le nom du serveur.  \n5. N'oubliez pas de cliquer sur `Enregistrer` et assurez-vous que le statut indique `ok`.  \n6. Essayez de taper quelque chose dans la page de recherche.  \n\n    ---  \n\nL'index sera mis à jour lors des événements suivants :  \n- Démarrage du serveur  \n- Changement de configuration  \n- Fin de l'analyse de la bibliothèque  \n- Tâche de mise à jour de l'index déclenchée  \n\n---  \n\n### Comment ça fonctionne  \n\nLa fonctionnalité principale, qui consiste à modifier la requête de recherche, est réalisée en injectant un [`ActionFilter`](https://learn.microsoft.com/en-us/aspnet/core/mvc/controllers/filters?view=aspnetcore-8.0#action-filters).  \nDonc, cela peut ne supporter que quelques versions de Jellyfin. Actuellement, j'utilise `Jellyfin 10.10.0`,  \nmais cela devrait fonctionner sur d'autres versions tant que le nom du paramètre requis de l'endpoint `/Items` ne change pas.  \n\n---  \n###  \n\nJ'ai vu JellySearch, qui est un projet merveilleux, mais je n'aime pas vraiment configurer un proxy inverse ou toute cette complication.  \n\nDonc j'écris ceci, mais cela nécessite toujours une instance Meilisearch.  \n\nÀ ce jour, seul l'endpoint `/Items` est affecté par ce plugin, mais cela améliore beaucoup ma bibliothèque de 200k éléments.\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "cP0oaTLo8DAAqRQWO5SP4IUP/1v4qOb7jmgnO0rnPts=",
        "originContent": "3. Fill url to your Meilisearch instance in plugin settings, and maybe api key also required according to your Meilisearch setup.",
        "translatedContent": "3. Remplissez l'URL de votre instance Meilisearch dans les paramètres du plugin, et peut-être que la clé API est également requise selon la configuration de votre Meilisearch.  "
      },
      {
        "row": 2,
        "rowsha": "jXAOVMqR2LuZR9XfMD5RXZ61r07AnVwU0Dr9wt7Rxqc=",
        "originContent": "4. If you want share one Meilisearch instance across multiple Jellyfin instance, you can fill the `Meilisearch Index Name`, if leaving empty, it will use the server name.",
        "translatedContent": "4. Si vous souhaitez partager une instance Meilisearch entre plusieurs instances Jellyfin, vous pouvez remplir le `Nom de l'Index Meilisearch`, si laissé vide, il utilisera le nom du serveur.  "
      },
      {
        "row": 3,
        "rowsha": "+q7o8RDdIpE8MBKYJttWE7D07REf6z0MLy54tGHj4rQ=",
        "originContent": "5. Remember click `Save` and make sure the status reports `ok`.",
        "translatedContent": "5. N'oubliez pas de cliquer sur `Enregistrer` et assurez-vous que le statut indique `ok`.  "
      },
      {
        "row": 4,
        "rowsha": "iR7kaIzpKfGhfkSe7FvrpQ3BGxldn6WjsDvK7lHiUKo=",
        "originContent": "6. Try typing something in search page.",
        "translatedContent": "6. Essayez de taper quelque chose dans la page de recherche.  "
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "TJyStMPH+nr/okPtOveDH0mLXFadF+GGPHkODS/1Aww=",
        "originContent": "    ---",
        "translatedContent": "    ---  "
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "LH1hyZeiQY1a+xD6CPjmvhJ5AuTJtyh8RVYi90LDb8I=",
        "originContent": "Index will update on following events:",
        "translatedContent": "L'index sera mis à jour lors des événements suivants :  "
      },
      {
        "row": 9,
        "rowsha": "P8XFijUQRKIWxTD8d7nU7UvCeMQaz2L4tE1mZcBPASc=",
        "originContent": "- Server start",
        "translatedContent": "- Démarrage du serveur  "
      },
      {
        "row": 10,
        "rowsha": "8Vsv/yOci6OLna8HInaHXRA1bciRo6qDx9T6Ui11PHE=",
        "originContent": "- Configuration change",
        "translatedContent": "- Changement de configuration  "
      },
      {
        "row": 11,
        "rowsha": "3pAIberxeRSrlwuosrdU575Jrzc8CR1yzZjp43ySKRM=",
        "originContent": "- Library scan complete",
        "translatedContent": "- Fin de l'analyse de la bibliothèque  "
      },
      {
        "row": 12,
        "rowsha": "8eoD/VZdVrkgbuzCKMDM7/vuBbc4T4wA/x9QmwKar18=",
        "originContent": "- Update index task being triggered",
        "translatedContent": "- Tâche de mise à jour de l'index déclenchée  "
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": "---  "
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "FLUdG6q+Y9dSDbuA0a513hsEGBMcpbQ+dgUneBfVnEQ=",
        "originContent": "### How it works",
        "translatedContent": "### Comment ça fonctionne  "
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "DEYab7WVlpvHt++lWEMhjGgyYEbdq0RyLQKybH+jPxc=",
        "originContent": "The core feature, which is to mutate the search request, is done by injecting an [`ActionFilter`](https://learn.microsoft.com/en-us/aspnet/core/mvc/controllers/filters?view=aspnetcore-8.0#action-filters).",
        "translatedContent": "La fonctionnalité principale, qui consiste à modifier la requête de recherche, est réalisée en injectant un [`ActionFilter`](https://learn.microsoft.com/en-us/aspnet/core/mvc/controllers/filters?view=aspnetcore-8.0#action-filters).  "
      },
      {
        "row": 19,
        "rowsha": "7MtMGSuNr+hv3eJ9J9WSisXFEAOivVrEW8jfoSarFD4=",
        "originContent": "So it may only support a few versions of Jellyfin. At the moment I'm using `Jellyfin 10.10.0`,",
        "translatedContent": "Donc, cela peut ne supporter que quelques versions de Jellyfin. Actuellement, j'utilise `Jellyfin 10.10.0`,  "
      },
      {
        "row": 20,
        "rowsha": "/7mfuudzdfvtVvsrQCzA3WEjQ8B2wyFXNDmuIHGUCWM=",
        "originContent": "but it should work on other versions as long as the required parameter name of `/Items` endpoint doesn't change.",
        "translatedContent": "mais cela devrait fonctionner sur d'autres versions tant que le nom du paramètre requis de l'endpoint `/Items` ne change pas.  "
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": "---  "
      },
      {
        "row": 23,
        "rowsha": "VtxtR3N9FVr93v2hryDEDJATU8Ii0B5wt7TgIfLk9Ug=",
        "originContent": "###",
        "translatedContent": "###  "
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "wG5qh4LmaE6xnAvkmbMbOi/8vYHroh93gj1YALDDvyY=",
        "originContent": "I've seen JellySearch, which is a wonderful project, but I don't really like setting up a reverse proxy or any of that hassle.",
        "translatedContent": "J'ai vu JellySearch, qui est un projet merveilleux, mais je n'aime pas vraiment configurer un proxy inverse ou toute cette complication.  "
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "4zRJL5uXY+QejGAuitCWII7JVaih62ZC/NEcJ/kjIIU=",
        "originContent": "So I am writing this, but it still requires a Meilisearch instance.",
        "translatedContent": "Donc j'écris ceci, mais cela nécessite toujours une instance Meilisearch.  "
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "G4Rs6lOsOd9xrL2iq6WH3hwJQQIBk5HILn7+22SVSZc=",
        "originContent": "At this moment, only the `/Items` endpoint is affected by this plugin, but it still improves a lot on my 200k items library.",
        "translatedContent": "À ce jour, seul l'endpoint `/Items` est affecté par ce plugin, mais cela améliore beaucoup ma bibliothèque de 200k éléments."
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]