[
  {
    "row": 1,
    "rowsha": "NV5If+n4caPL9367nN6NPHEHX2NVMyxh97QjgslLVk8=",
    "originContent": "*[English](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README.md) ∙ [日本語](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-ja.md) ∙ [简体中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-Hans.md) ∙ [繁體中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-TW.md) | [العَرَبِيَّة‎](https://github.com/donnemartin/system-design-primer/issues/170) ∙ [বাংলা](https://github.com/donnemartin/system-design-primer/issues/220) ∙ [Português do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) ∙ [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) ∙ [ελληνικά](https://github.com/donnemartin/system-design-primer/issues/130) ∙ [עברית](https://github.com/donnemartin/system-design-primer/issues/272) ∙ [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) ∙ [한국어](https://github.com/donnemartin/system-design-primer/issues/102) ∙ [فارسی](https://github.com/donnemartin/system-design-primer/issues/110) ∙ [Polski](https://github.com/donnemartin/system-design-primer/issues/68) ∙ [русский язык](https://github.com/donnemartin/system-design-primer/issues/87) ∙ [Español](https://github.com/donnemartin/system-design-primer/issues/136) ∙ [ภาษาไทย](https://github.com/donnemartin/system-design-primer/issues/187) ∙ [Türkçe](https://github.com/donnemartin/system-design-primer/issues/39) ∙ [tiếng Việt](https://github.com/donnemartin/system-design-primer/issues/127) ∙ [Français](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*",
    "translatedContent": "*[English](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README.md) ∙ [日本語](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-ja.md) ∙ [简体中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-Hans.md) ∙ [繁體中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-TW.md) | [العَرَبِيَّة‎](https://github.com/donnemartin/system-design-primer/issues/170) ∙ [বাংলা](https://github.com/donnemartin/system-design-primer/issues/220) ∙ [Português do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) ∙ [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) ∙ [ελληνικά](https://github.com/donnemartin/system-design-primer/issues/130) ∙ [עברית](https://github.com/donnemartin/system-design-primer/issues/272) ∙ [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) ∙ [한국어](https://github.com/donnemartin/system-design-primer/issues/102) ∙ [فارسی](https://github.com/donnemartin/system-design-primer/issues/110) ∙ [Polski](https://github.com/donnemartin/system-design-primer/issues/68) ∙ [русский язык](https://github.com/donnemartin/system-design-primer/issues/87) ∙ [Español](https://github.com/donnemartin/system-design-primer/issues/136) ∙ [ภาษาไทย](https://github.com/donnemartin/system-design-primer/issues/187) ∙ [Türkçe](https://github.com/donnemartin/system-design-primer/issues/39) ∙ [tiếng Việt](https://github.com/donnemartin/system-design-primer/issues/127) ∙ [Français](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*"
  },
  {
    "row": 2,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "**इस गाइड को [अनुवाद](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/TRANSLATIONS.md) करने में मदद करें!**"
  },
  {
    "row": 3,
    "rowsha": "OJMxkU+m/5fT0FnnYIq6z/lk5hTUjf/v0nWk2r8vD+8=",
    "originContent": "**Help [translate](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/TRANSLATIONS.md) this guide!**",
    "translatedContent": ""
  },
  {
    "row": 4,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "# सिस्टम डिज़ाइन प्राइमर"
  },
  {
    "row": 5,
    "rowsha": "RmL3BQqAshnV9VkVoMoDYoTy2qWwOTw2UmULe+/8x8Y=",
    "originContent": "# The System Design Primer",
    "translatedContent": ""
  },
  {
    "row": 6,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 7,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png\">"
  },
  {
    "row": 8,
    "rowsha": "FPF5eTlg54aCMqTVvser3Pca0/aXnS3JFpQbR6BsbC8=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png\">",
    "translatedContent": "  <br/>"
  },
  {
    "row": 9,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "</p>"
  },
  {
    "row": 10,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": ""
  },
  {
    "row": 11,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## प्रेरणा"
  },
  {
    "row": 12,
    "rowsha": "XkjmO8GZw+NPlqtsKIz94hXoCCSSximfmFKrLHYsZ2I=",
    "originContent": "## Motivation",
    "translatedContent": ""
  },
  {
    "row": 13,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "> जानें कि बड़े पैमाने की प्रणालियों को कैसे डिज़ाइन करें।"
  },
  {
    "row": 14,
    "rowsha": "2GYmP6NIECPJvyW0n7BItMi31jLUPuKlslDWan9HQlE=",
    "originContent": "> Learn how to design large-scale systems.",
    "translatedContent": ">"
  },
  {
    "row": 15,
    "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
    "originContent": ">",
    "translatedContent": "> सिस्टम डिज़ाइन साक्षात्कार की तैयारी करें।"
  },
  {
    "row": 16,
    "rowsha": "lOl4OhOLgOSefbhaM1VSu1jtsTlIm2iCxniUZWtnyGs=",
    "originContent": "> Prep for the system design interview.",
    "translatedContent": ""
  },
  {
    "row": 17,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### जानें कि बड़े पैमाने की प्रणालियों को कैसे डिज़ाइन करें"
  },
  {
    "row": 18,
    "rowsha": "vHXrMcDBcG7o5YyZNsje/JbHGk+EjPhpbWV8Gzly7CA=",
    "originContent": "### Learn how to design large-scale systems",
    "translatedContent": ""
  },
  {
    "row": 19,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "स्केलेबल सिस्टम डिज़ाइन करना सीखना आपको बेहतर इंजीनियर बनने में मदद करेगा।"
  },
  {
    "row": 20,
    "rowsha": "PWbylZXLwlQcEV2M9rtMk6xA3iKlyMhvOfXqZvhx/O4=",
    "originContent": "Learning how to design scalable systems will help you become a better engineer.",
    "translatedContent": ""
  },
  {
    "row": 21,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "सिस्टम डिज़ाइन एक व्यापक विषय है। सिस्टम डिज़ाइन सिद्धांतों पर **इंटरनेट पर बड़ी मात्रा में संसाधन फैले हुए हैं**।"
  },
  {
    "row": 22,
    "rowsha": "IKYU9P8xET+s9UmMBuxQNxd3wXq0snCFQfvIPKob15U=",
    "originContent": "System design is a broad topic.  There is a **vast amount of resources scattered throughout the web** on system design principles.",
    "translatedContent": ""
  },
  {
    "row": 23,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "यह रिपॉजिटरी आपको बड़े पैमाने पर सिस्टम बनाने में मदद करने के लिए संसाधनों का एक **संगठित संग्रह** है।"
  },
  {
    "row": 24,
    "rowsha": "pgxH1xp3gAK9+xsJypLHdXiYDaemv+fKPR26cm9Im7k=",
    "originContent": "This repo is an **organized collection** of resources to help you learn how to build systems at scale.",
    "translatedContent": ""
  },
  {
    "row": 25,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### ओपन सोर्स समुदाय से सीखें"
  },
  {
    "row": 26,
    "rowsha": "MMP95zm3a71oK2zP47EqMxb2J/GJcG879fLKN8a6Oi4=",
    "originContent": "### Learn from the open source community",
    "translatedContent": ""
  },
  {
    "row": 27,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "यह निरंतर अपडेट होने वाला, ओपन सोर्स प्रोजेक्ट है।"
  },
  {
    "row": 28,
    "rowsha": "640Z4MLeOAsYzLjTMZYIOskGISTh4Uq3YbyDvTJMGUE=",
    "originContent": "This is a continually updated, open source project.",
    "translatedContent": ""
  },
  {
    "row": 29,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "[योगदान](#contributing) स्वागत योग्य हैं!"
  },
  {
    "row": 30,
    "rowsha": "6WBZYR+VSGC3aknGU1MJjEeOgM48ZjhtyUu7IvQ4lm8=",
    "originContent": "[Contributions](#contributing) are welcome!",
    "translatedContent": ""
  },
  {
    "row": 31,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### सिस्टम डिज़ाइन साक्षात्कार की तैयारी करें"
  },
  {
    "row": 32,
    "rowsha": "Fsw2Splnb+cd2/xdxz/OTb37zXBJxw7zbQcx42rk33o=",
    "originContent": "### Prep for the system design interview",
    "translatedContent": ""
  },
  {
    "row": 33,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "कोडिंग साक्षात्कार के अलावा, सिस्टम डिज़ाइन कई टेक कंपनियों में **तकनीकी साक्षात्कार प्रक्रिया का एक अनिवार्य हिस्सा** है।"
  },
  {
    "row": 34,
    "rowsha": "eo9ctz34cQhO+4yDhHKCh9K5bd4Pbc44n7hhTt0VhMQ=",
    "originContent": "In addition to coding interviews, system design is a **required component** of the **technical interview process** at many tech companies.",
    "translatedContent": ""
  },
  {
    "row": 35,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "**आम सिस्टम डिज़ाइन साक्षात्कार प्रश्नों का अभ्यास करें** और अपने परिणामों की **नमूना समाधानों** के साथ **तुलना करें**: चर्चाएँ, कोड और आरेख।"
  },
  {
    "row": 36,
    "rowsha": "LSyRLqZPK5hrVm87LAXhVI7U9vHbWeYNnhRHLizaBds=",
    "originContent": "**Practice common system design interview questions** and **compare** your results with **sample solutions**: discussions, code, and diagrams.",
    "translatedContent": ""
  },
  {
    "row": 37,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "साक्षात्कार तैयारी के लिए अतिरिक्त विषय:"
  },
  {
    "row": 38,
    "rowsha": "HcjqOhjWeDEqRUbJGhq8E5QgFU+bX28kl7j1XB9Pl1k=",
    "originContent": "Additional topics for interview prep:",
    "translatedContent": ""
  },
  {
    "row": 39,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* [अध्ययन गाइड](#study-guide)"
  },
  {
    "row": 40,
    "rowsha": "v4yYDQA33HmkJabIfy2wQXtEJnfXydVDYJqKO2z1XSw=",
    "originContent": "* [Study guide](#study-guide)",
    "translatedContent": "* [सिस्टम डिज़ाइन साक्षात्कार प्रश्न का दृष्टिकोण कैसे बनाएं](#how-to-approach-a-system-design-interview-question)"
  },
  {
    "row": 41,
    "rowsha": "X+q8Gc3m4EOWkV9rnHfPaUXzg7dHUXx3EYIFol17RV8=",
    "originContent": "* [How to approach a system design interview question](#how-to-approach-a-system-design-interview-question)",
    "translatedContent": ""
  },
  {
    "row": 42,
    "rowsha": "Mt2HxSYjFkc9uMdXwaq+OlP/W/gyF74VX3BSfO98hn0=",
    "originContent": "* [System design interview questions, **with solutions**](#system-design-interview-questions-with-solutions)",
    "translatedContent": "* [सिस्टम डिज़ाइन इंटरव्यू प्रश्न, **समाधान सहित**](#system-design-interview-questions-with-solutions)"
  },
  {
    "row": 43,
    "rowsha": "Wir9bkulqEXFUOlAjhcOOF7WrGFz2fBUontFrp3p8W4=",
    "originContent": "* [Object-oriented design interview questions, **with solutions**](#object-oriented-design-interview-questions-with-solutions)",
    "translatedContent": "* [ऑब्जेक्ट-ओरिएंटेड डिज़ाइन इंटरव्यू प्रश्न, **समाधान सहित**](#object-oriented-design-interview-questions-with-solutions)"
  },
  {
    "row": 44,
    "rowsha": "XGKgnr/824vT6dM9jyrdrXO2K5MmiSyRqNS35VDUIPg=",
    "originContent": "* [Additional system design interview questions](#additional-system-design-interview-questions)",
    "translatedContent": "* [अतिरिक्त सिस्टम डिज़ाइन इंटरव्यू प्रश्न](#additional-system-design-interview-questions)"
  },
  {
    "row": 45,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 46,
    "rowsha": "jAhCy8VM8S4HEk/LADeB7EbsOBvqZ0IvgMlwlVEKfu4=",
    "originContent": "## Anki flashcards",
    "translatedContent": "## Anki फ्लैशकार्ड्स"
  },
  {
    "row": 47,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 48,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 49,
    "rowsha": "BPzFMaBD+IXGJD8mCNtQdt2Fq3yGI8hrbdh1PitUt1c=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/zdCAkB3.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/zdCAkB3.png\">"
  },
  {
    "row": 50,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 51,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 52,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 53,
    "rowsha": "K5DuCHSzg2P7YtiP+baqJaP62aUjBaz0mb4mYziF4oo=",
    "originContent": "The provided [Anki flashcard decks](https://apps.ankiweb.net/) use spaced repetition to help you retain key system design concepts.",
    "translatedContent": "दिए गए [Anki फ्लैशकार्ड डेक्स](https://apps.ankiweb.net/) स्पेस्ड रिपीटीशन का उपयोग करते हैं ताकि आप प्रमुख सिस्टम डिज़ाइन अवधारणाओं को याद रख सकें।"
  },
  {
    "row": 54,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 55,
    "rowsha": "crW/WKlK5TjEYXwDp1G9/1ic+JPr4f1yktu027rZCR4=",
    "originContent": "* [System design deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg)",
    "translatedContent": "* [सिस्टम डिज़ाइन डेक](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg)"
  },
  {
    "row": 56,
    "rowsha": "OfAUha/5gfRKRGfOM84APZ/5JyHS9P+64L1tSvdVP8w=",
    "originContent": "* [System design exercises deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg)",
    "translatedContent": "* [सिस्टम डिज़ाइन एक्सरसाइज डेक](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg)"
  },
  {
    "row": 57,
    "rowsha": "wg08CsJYh0SwgkIQkRxS95j9SzIiB4pFnzkYECItNsA=",
    "originContent": "* [Object oriented design exercises deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg)",
    "translatedContent": "* [ऑब्जेक्ट ओरिएंटेड डिज़ाइन एक्सरसाइज डेक](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg)"
  },
  {
    "row": 58,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 59,
    "rowsha": "lkxjikTF7Ep+6Isk/CGGBY7cmFnupWpV0Qf00hsrkF8=",
    "originContent": "Great for use while on-the-go.",
    "translatedContent": "चलते-फिरते उपयोग के लिए शानदार।"
  },
  {
    "row": 60,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 61,
    "rowsha": "Ym+2jTY3QP64SUY9yYzEp//cTOISVSsFCRxHUzNZzag=",
    "originContent": "### Coding Resource: Interactive Coding Challenges",
    "translatedContent": "### कोडिंग संसाधन: इंटरएक्टिव कोडिंग चुनौतियाँ"
  },
  {
    "row": 62,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 63,
    "rowsha": "/qAkhkRHLUIOESCrNYlEJpejk0JLhSusLW0Sk4NwtfE=",
    "originContent": "Looking for resources to help you prep for the [**Coding Interview**](https://github.com/donnemartin/interactive-coding-challenges)?",
    "translatedContent": "क्या आप [**कोडिंग इंटरव्यू**](https://github.com/donnemartin/interactive-coding-challenges) की तैयारी के लिए संसाधन ढूंढ रहे हैं?"
  },
  {
    "row": 64,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 65,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 66,
    "rowsha": "MdSv9h1g1w6EflbjMKJ5/I0xwZPvHBplhFjX3vv06G0=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/b4YtAEN.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/b4YtAEN.png\">"
  },
  {
    "row": 67,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 68,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 69,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 70,
    "rowsha": "dW/Qoril3MLw69OIyFrrQ4xSErGMxw8eylmxqz43bkU=",
    "originContent": "Check out the sister repo [**Interactive Coding Challenges**](https://github.com/donnemartin/interactive-coding-challenges), which contains an additional Anki deck:",
    "translatedContent": "सिस्टर रिपॉजिटरी देखें [**इंटरएक्टिव कोडिंग चुनौतियाँ**](https://github.com/donnemartin/interactive-coding-challenges), जिसमें एक अतिरिक्त Anki डेक शामिल है:"
  },
  {
    "row": 71,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 72,
    "rowsha": "JoarM4WtXWxKxXt+3p/7fW0lgC1Sd83kcvPmcS+QBo0=",
    "originContent": "* [Coding deck](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)",
    "translatedContent": "* [कोडिंग डेक](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)"
  },
  {
    "row": 73,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 74,
    "rowsha": "R5ZPLZ4vkE9tjX5qe8QB7AkTfWZsuNTGFLFKMp2KUzM=",
    "originContent": "## Contributing",
    "translatedContent": "## सहयोग"
  },
  {
    "row": 75,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 76,
    "rowsha": "n+VWB2c1fi5U1I/HAqwDzesEXJieDpt99Ve3Pudxcnk=",
    "originContent": "> Learn from the community.",
    "translatedContent": "> समुदाय से सीखें।"
  },
  {
    "row": 77,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 78,
    "rowsha": "Tm5+a/IDPzyOTOP0wgk3ULKDs3fMylMngrEuvccOs9k=",
    "originContent": "Feel free to submit pull requests to help:",
    "translatedContent": "सहायता के लिए स्वतंत्र रूप से पुल रिक्वेस्ट सबमिट करें:"
  },
  {
    "row": 79,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 80,
    "rowsha": "BGOOPe+VNHRBhUS0Jx4Pjh6ty6SB6QxyQm0PrtV0V90=",
    "originContent": "* Fix errors",
    "translatedContent": "* त्रुटियाँ सुधारें"
  },
  {
    "row": 81,
    "rowsha": "H22DGM0Rl/JMuVz1PhYuLI5tYblM/ipRxxCgehM+MlU=",
    "originContent": "* Improve sections",
    "translatedContent": "* सेक्शन बेहतर बनाएं"
  },
  {
    "row": 82,
    "rowsha": "SsCtFlRr/vp/eIxy/AyEzj8HX0cy86MGCQv0qG8BEJ8=",
    "originContent": "* Add new sections",
    "translatedContent": "* नई अनुभाग जोड़ें"
  },
  {
    "row": 83,
    "rowsha": "MgbTAOtFzyIz4BNeWpBJDVGUaPy03OwWW/NDniv8iKw=",
    "originContent": "* [Translate](https://github.com/donnemartin/system-design-primer/issues/28)",
    "translatedContent": "* [अनुवाद करें](https://github.com/donnemartin/system-design-primer/issues/28)"
  },
  {
    "row": 84,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 85,
    "rowsha": "PAhTbZo1MIyFgr19zZb0QBFu5jXzCKuVXgsjvN9v43A=",
    "originContent": "Content that needs some polishing is placed [under development](#under-development).",
    "translatedContent": "जिस सामग्री को थोड़ा सुधारने की आवश्यकता है, उसे [विकासाधीन](#under-development) में रखा गया है।"
  },
  {
    "row": 86,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 87,
    "rowsha": "MTipwkXdKqZVs4vSj9UbfT3bzAd9kyVp1MlT1yTZIwg=",
    "originContent": "Review the [Contributing Guidelines](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/CONTRIBUTING.md).",
    "translatedContent": "[योगदान दिशा-निर्देश](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/CONTRIBUTING.md) की समीक्षा करें।"
  },
  {
    "row": 88,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 89,
    "rowsha": "l+eVTiaTEanah8q3SHdeQsdOipjWL1al1oGriL/pV10=",
    "originContent": "## Index of system design topics",
    "translatedContent": "## सिस्टम डिज़ाइन विषयों की सूची"
  },
  {
    "row": 90,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 91,
    "rowsha": "vszC2rRgz04c3FQVk3KKmkzMbBkQUF+isXl9SPFLJDs=",
    "originContent": "> Summaries of various system design topics, including pros and cons.  **Everything is a trade-off**.",
    "translatedContent": "> विभिन्न सिस्टम डिज़ाइन विषयों का सारांश, जिसमें फायदे और नुकसान शामिल हैं।  **हर चीज़ में समझौता है**।"
  },
  {
    "row": 92,
    "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
    "originContent": ">",
    "translatedContent": ">"
  },
  {
    "row": 93,
    "rowsha": "N+lMsyK9eBW2WQyNd4PSYBFiVDgk9aawUGSamgefd9I=",
    "originContent": "> Each section contains links to more in-depth resources.",
    "translatedContent": "> प्रत्येक अनुभाग में अधिक गहन संसाधनों के लिंक हैं।"
  },
  {
    "row": 94,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 95,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 96,
    "rowsha": "pNNmfFbsAp/MXo7RZEmE5XC27HubONv1ewXy+wQ3em0=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png\">"
  },
  {
    "row": 97,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 98,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 99,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 100,
    "rowsha": "NAm+Yh5bEIUi2ReUdcW2qlyoKQRSlyq3bvUrU6es1ok=",
    "originContent": "* [System design topics: start here](#system-design-topics-start-here)",
    "translatedContent": "* [सिस्टम डिज़ाइन विषय: यहाँ से शुरू करें](#system-design-topics-start-here)"
  },
  {
    "row": 101,
    "rowsha": "cGfo4uafv6Y1N0Z7NfSWYY26ptn5LTyUymM1g+9uUgY=",
    "originContent": "    * [Step 1: Review the scalability video lecture](#step-1-review-the-scalability-video-lecture)",
    "translatedContent": "    * [चरण 1: स्केलेबिलिटी वीडियो व्याख्यान की समीक्षा करें](#step-1-review-the-scalability-video-lecture)"
  },
  {
    "row": 102,
    "rowsha": "b7hZ1PHTm+Pr9IbYhdTuWiLYomBJNAYJKkNP234ROgg=",
    "originContent": "    * [Step 2: Review the scalability article](#step-2-review-the-scalability-article)",
    "translatedContent": "    * [चरण 2: स्केलेबिलिटी लेख की समीक्षा करें](#step-2-review-the-scalability-article)"
  },
  {
    "row": 103,
    "rowsha": "1kjZ/tN6i17LZI8anxYhRkGobWb6WdNWthBllU8kmTM=",
    "originContent": "    * [Next steps](#next-steps)",
    "translatedContent": "    * [अगले कदम](#next-steps)"
  },
  {
    "row": 104,
    "rowsha": "NA1iYeDmHywFkHC/T5DsHPkbAoJVsmqJkCAWr14Ra3k=",
    "originContent": "* [Performance vs scalability](#performance-vs-scalability)",
    "translatedContent": "* [प्रदर्शन बनाम स्केलेबिलिटी](#performance-vs-scalability)"
  },
  {
    "row": 105,
    "rowsha": "YkSB9feIkHCH732cHw6vhgOAAiCMO+ck+mLnkD1XwUI=",
    "originContent": "* [Latency vs throughput](#latency-vs-throughput)",
    "translatedContent": "* [विलंबता बनाम थ्रूपुट](#latency-vs-throughput)"
  },
  {
    "row": 106,
    "rowsha": "ooFGAHxINIA30greyD+eGMO2baag/4mWiz+oGof8sxU=",
    "originContent": "* [Availability vs consistency](#availability-vs-consistency)",
    "translatedContent": "* [उपलब्धता बनाम स्थिरता](#availability-vs-consistency)"
  },
  {
    "row": 107,
    "rowsha": "Q+3JWKgafhH32bAmblunuupZ0PV+eEYdBxcOAq6tatk=",
    "originContent": "    * [CAP theorem](#cap-theorem)",
    "translatedContent": "    * [CAP प्रमेय](#cap-theorem)"
  },
  {
    "row": 108,
    "rowsha": "7XzV7oxhHIvLznuiyhFn9DfJd2mCzrvGbgI0sVyMLlg=",
    "originContent": "        * [CP - consistency and partition tolerance](#cp---consistency-and-partition-tolerance)",
    "translatedContent": "        * [CP - स्थिरता और विभाजन सहिष्णुता](#cp---consistency-and-partition-tolerance)"
  },
  {
    "row": 109,
    "rowsha": "fGZJpa15rj/a5SxHqkD8YazLYvd/uYi2DDLVrZr4y3M=",
    "originContent": "        * [AP - availability and partition tolerance](#ap---availability-and-partition-tolerance)",
    "translatedContent": "        * [AP - उपलब्धता और विभाजन सहिष्णुता](#ap---availability-and-partition-tolerance)"
  },
  {
    "row": 110,
    "rowsha": "/VMr/QdcBd0Bf5E1itt0waHGjDlIO3wo9ZMgmifIYeI=",
    "originContent": "* [Consistency patterns](#consistency-patterns)",
    "translatedContent": "* [स्थिरता पैटर्न](#consistency-patterns)"
  },
  {
    "row": 111,
    "rowsha": "BvQFkODCRjD1GaWWXV3Dk/0/je0BJFOXQhHk9cAho0A=",
    "originContent": "    * [Weak consistency](#weak-consistency)",
    "translatedContent": "    * [कमजोर स्थिरता](#weak-consistency)"
  },
  {
    "row": 112,
    "rowsha": "mJntUp6dLJuoE8xVVmMUSMYFSJHMVhrX6cC3kEWOSw4=",
    "originContent": "    * [Eventual consistency](#eventual-consistency)",
    "translatedContent": "    * [अंततः स्थिरता](#eventual-consistency)"
  },
  {
    "row": 113,
    "rowsha": "NiS/FVcXfunIwRDvtKurhGLWDI8X6gmQLMuxKvP5FO8=",
    "originContent": "    * [Strong consistency](#strong-consistency)",
    "translatedContent": "    * [मजबूत स्थिरता](#strong-consistency)"
  },
  {
    "row": 114,
    "rowsha": "NfF9k3//Tw0Ey52SttqFFrybbt4Uqh8ltKx1sLGuXk0=",
    "originContent": "* [Availability patterns](#availability-patterns)",
    "translatedContent": "* [उपलब्धता पैटर्न](#availability-patterns)"
  },
  {
    "row": 115,
    "rowsha": "F1JGTV8gU1mi/kH8pjmDkFySAWi4WQoH4QDapqvnc3Y=",
    "originContent": "    * [Fail-over](#fail-over)",
    "translatedContent": "    * [फेल-ओवर](#fail-over)"
  },
  {
    "row": 116,
    "rowsha": "2tozvSOPmWuYrEr8TPzY5zYwvhIhbRhnb0TSyfKEFU8=",
    "originContent": "    * [Replication](#replication)",
    "translatedContent": "    * [प्रतिकृति](#replication)"
  },
  {
    "row": 117,
    "rowsha": "6s5ScT5WxbHJHT5FFhY5EPLGztEOKXtsAoE8uQzZIZc=",
    "originContent": "    * [Availability in numbers](#availability-in-numbers)",
    "translatedContent": "    * [संख्याओं में उपलब्धता](#availability-in-numbers)"
  },
  {
    "row": 118,
    "rowsha": "BiaxRDxU2Kxbx7BsRWzEk/zo1HeVnY9Mf5sYNYl7HTI=",
    "originContent": "* [Domain name system](#domain-name-system)",
    "translatedContent": "* [डोमेन नाम प्रणाली](#domain-name-system)"
  },
  {
    "row": 119,
    "rowsha": "1/CF0whL3trksUPc+ysqc/ctxo/a3yzgXeYJ7pzakpk=",
    "originContent": "* [Content delivery network](#content-delivery-network)",
    "translatedContent": "* [सामग्री वितरण नेटवर्क](#content-delivery-network)"
  },
  {
    "row": 120,
    "rowsha": "yvr9NAZhz+gNdEjqg2tyssQEJXIxXjFP1sHCr1YkWMY=",
    "originContent": "    * [Push CDNs](#push-cdns)",
    "translatedContent": "    * [पुश CDN](#push-cdns)"
  },
  {
    "row": 121,
    "rowsha": "jL4KowX/zvhAUGtmljHsn6UkIqRqfoP1VBmTrZFU3JU=",
    "originContent": "    * [Pull CDNs](#pull-cdns)",
    "translatedContent": "    * [पुल CDN](#pull-cdns)"
  },
  {
    "row": 122,
    "rowsha": "h4PaRYGBSsT8meOlIuNoX8Wbd5CzE/GhZl0r+cKGMSs=",
    "originContent": "* [Load balancer](#load-balancer)",
    "translatedContent": "* [लोड बैलेंसर](#load-balancer)"
  },
  {
    "row": 123,
    "rowsha": "+SevMRb7w3cZvaWqfHPv7p2NvBglbLiZzNUs8lfXTnU=",
    "originContent": "    * [Active-passive](#active-passive)",
    "translatedContent": "    * [सक्रिय-निष्क्रिय](#active-passive)"
  },
  {
    "row": 124,
    "rowsha": "7tF73nPerlzwU8S7LjTC/L60UtInotqIx6cPZRmdBtk=",
    "originContent": "    * [Active-active](#active-active)",
    "translatedContent": "    * [सक्रिय-सक्रिय](#active-active)"
  },
  {
    "row": 125,
    "rowsha": "5yu5hG4jzivgG60akLqWDseYTDQJgL9UD21Jo9IpZoQ=",
    "originContent": "    * [Layer 4 load balancing](#layer-4-load-balancing)",
    "translatedContent": "    * [लेयर 4 लोड बैलेंसिंग](#layer-4-load-balancing)"
  },
  {
    "row": 126,
    "rowsha": "8fapUdLm8nxXa6BOpkJJ+JXd3LEFlQ1eFYWbTF4d2fY=",
    "originContent": "    * [Layer 7 load balancing](#layer-7-load-balancing)",
    "translatedContent": "    * [लेयर 7 लोड बैलेंसिंग](#layer-7-load-balancing)"
  },
  {
    "row": 127,
    "rowsha": "w1ZAwXkT6fhv726mwTGEnMydMKmLPalZ0CJUOWftwNI=",
    "originContent": "    * [Horizontal scaling](#horizontal-scaling)",
    "translatedContent": "    * [क्षैतिज स्केलिंग](#horizontal-scaling)"
  },
  {
    "row": 128,
    "rowsha": "xCJYMbivh6vFtHRTQoGIvfMUukV063SI0DsJyzwB3Q8=",
    "originContent": "* [Reverse proxy (web server)](#reverse-proxy-web-server)",
    "translatedContent": "* [रिवर्स प्रॉक्सी (वेब सर्वर)](#reverse-proxy-web-server)"
  },
  {
    "row": 129,
    "rowsha": "I7J14g5xS6GsffDPwkGwahx+faUg5QPSYIrk+vt9u20=",
    "originContent": "    * [Load balancer vs reverse proxy](#load-balancer-vs-reverse-proxy)",
    "translatedContent": "    * [लोड बैलेंसर बनाम रिवर्स प्रॉक्सी](#load-balancer-vs-reverse-proxy)"
  },
  {
    "row": 130,
    "rowsha": "8mMWGVXBx3lHTsOuc6gKrz4YEOu1aqmIo01A+bpGcRw=",
    "originContent": "* [Application layer](#application-layer)",
    "translatedContent": "* [एप्लिकेशन लेयर](#application-layer)"
  },
  {
    "row": 131,
    "rowsha": "5psy0oT4gwDQ5RN4aCrev6Orwxq0OAn6t5SkO7XVYGo=",
    "originContent": "    * [Microservices](#microservices)",
    "translatedContent": "    * [माइक्रोसर्विसेस](#microservices)"
  },
  {
    "row": 132,
    "rowsha": "TjwXaicvw8HbjJT6H6LfhnOVGMryolqqifhRy+0M4n0=",
    "originContent": "    * [Service discovery](#service-discovery)",
    "translatedContent": "    * [सर्विस डिस्कवरी](#service-discovery)"
  },
  {
    "row": 133,
    "rowsha": "Lfh6Z2jhFps37PV/hUbb+WzAZNZ1dwcCks1tCMb8MN0=",
    "originContent": "* [Database](#database)",
    "translatedContent": "* [डाटाबेस](#database)"
  },
  {
    "row": 134,
    "rowsha": "hF52lb4igNaoA/PAsTVafWk3LTScOc7THSKwjUxnhHs=",
    "originContent": "    * [Relational database management system (RDBMS)](#relational-database-management-system-rdbms)",
    "translatedContent": "    * [रिलेशनल डाटाबेस मैनेजमेंट सिस्टम (RDBMS)](#relational-database-management-system-rdbms)"
  },
  {
    "row": 135,
    "rowsha": "rSnnXzDdS9ntZrIKTFsksr4/kERyfNvh/6XEuzIILAc=",
    "originContent": "        * [Master-slave replication](#master-slave-replication)",
    "translatedContent": "        * [मास्टर-स्ले रिप्लिकेशन](#master-slave-replication)"
  },
  {
    "row": 136,
    "rowsha": "zA8jBiusKopDjLCL9hYjKiHQHU3ryiaz2PpEk1Lc0Ag=",
    "originContent": "        * [Master-master replication](#master-master-replication)",
    "translatedContent": "        * [मास्टर-मास्टर रिप्लिकेशन](#master-master-replication)"
  },
  {
    "row": 137,
    "rowsha": "Jf0YXoTUgL80zEAHtntOVj/O8Us8sCsPduCUZE/T1/s=",
    "originContent": "        * [Federation](#federation)",
    "translatedContent": "        * [फेडरेशन](#federation)"
  },
  {
    "row": 138,
    "rowsha": "MDtqFiyoo0+WuihrLP2kDMOt5+/Z5EYLps1TsAulHP8=",
    "originContent": "        * [Sharding](#sharding)",
    "translatedContent": "        * [शार्डिंग](#sharding)"
  },
  {
    "row": 139,
    "rowsha": "oy4mtQy7Gjs28d4nInWJcCImDbf5DjMUNMWZYv1bgaM=",
    "originContent": "        * [Denormalization](#denormalization)",
    "translatedContent": "        * [डिनॉर्मलाइजेशन](#denormalization)"
  },
  {
    "row": 140,
    "rowsha": "goccNEeqpVP3w5GZdJNs9Xm0cdgs4rcfeOzrIsB0/nU=",
    "originContent": "        * [SQL tuning](#sql-tuning)",
    "translatedContent": "        * [SQL ट्यूनिंग](#sql-tuning)"
  },
  {
    "row": 141,
    "rowsha": "47aybAiLhEpV9iqFw8Ic9+GM/IdFFOM7F/XmZn9kYtg=",
    "originContent": "    * [NoSQL](#nosql)",
    "translatedContent": "    * [NoSQL](#nosql)"
  },
  {
    "row": 142,
    "rowsha": "j5iSbdulQSoYnvxDS7OsLHLZClSnw479K8YIirNMG1Y=",
    "originContent": "        * [Key-value store](#key-value-store)",
    "translatedContent": "        * [की-वैल्यू स्टोर](#key-value-store)"
  },
  {
    "row": 143,
    "rowsha": "pGqiU7KuKgkyw/tV92znudH6ZI1C4VFk3e393f/sD0E=",
    "originContent": "        * [Document store](#document-store)",
    "translatedContent": "        * [डॉक्यूमेंट स्टोर](#document-store)"
  },
  {
    "row": 144,
    "rowsha": "lfwnBi0qMofxek43EEvqfYhFYFCRcGfTsQAQt1I2Qd4=",
    "originContent": "        * [Wide column store](#wide-column-store)",
    "translatedContent": "        * [वाइड कॉलम स्टोर](#wide-column-store)"
  },
  {
    "row": 145,
    "rowsha": "NJqE5BFiqBHD0SPLX1auP7/BruL0LDThaFImmxxPOd8=",
    "originContent": "        * [Graph Database](#graph-database)",
    "translatedContent": "        * [ग्राफ डाटाबेस](#graph-database)"
  },
  {
    "row": 146,
    "rowsha": "wA02P+LM/69V5LkLytWi+11kFXaVK2OGxFYnKO/bqgE=",
    "originContent": "    * [SQL or NoSQL](#sql-or-nosql)",
    "translatedContent": "    * [SQL या NoSQL](#sql-or-nosql)"
  },
  {
    "row": 147,
    "rowsha": "ZKJiW5ZRYlUKyV+E4QAa2PHj5+Z6sHOx+qtFigmDrHo=",
    "originContent": "* [Cache](#cache)",
    "translatedContent": "* [कैश](#cache)"
  },
  {
    "row": 148,
    "rowsha": "1QPzZSw7wrI93fNTYYbBCCTAB14RlAr1QGe3+Qf5TD4=",
    "originContent": "    * [Client caching](#client-caching)",
    "translatedContent": "    * [क्लाइंट कैशिंग](#client-caching)"
  },
  {
    "row": 149,
    "rowsha": "st60rn6urYVlOs42sWWjhpP15+Zln+cfJ1aiHU6Akj0=",
    "originContent": "    * [CDN caching](#cdn-caching)",
    "translatedContent": "    * [CDN कैशिंग](#cdn-caching)"
  },
  {
    "row": 150,
    "rowsha": "HfIacaIFl6tDsYeuwcoT55L12QQhpWBCNWvcIy48SsA=",
    "originContent": "    * [Web server caching](#web-server-caching)",
    "translatedContent": "    * [वेब सर्वर कैशिंग](#web-server-caching)"
  },
  {
    "row": 151,
    "rowsha": "Ozq+0s9PEpS+iCCY335toasf7KjhXODV4C86e5gEkrM=",
    "originContent": "    * [Database caching](#database-caching)",
    "translatedContent": "    * [डाटाबेस कैशिंग](#database-caching)"
  },
  {
    "row": 152,
    "rowsha": "pySXRtIe5AUAvWKe9H65D3fulHVNCSI7Nfo6u7JmLts=",
    "originContent": "    * [Application caching](#application-caching)",
    "translatedContent": "    * [एप्लिकेशन कैशिंग](#application-caching)"
  },
  {
    "row": 153,
    "rowsha": "um6/V9vSyAVdYrqQIbSfx4haMfAIYh61/D5Z0560QoM=",
    "originContent": "    * [Caching at the database query level](#caching-at-the-database-query-level)",
    "translatedContent": "    * [डाटाबेस क्वेरी स्तर पर कैशिंग](#caching-at-the-database-query-level)"
  },
  {
    "row": 154,
    "rowsha": "8wuvIZ5j5seKmPi37JcfbScYnCQ5VJwMpRi7CiWnGYQ=",
    "originContent": "    * [Caching at the object level](#caching-at-the-object-level)",
    "translatedContent": "    * [ऑब्जेक्ट स्तर पर कैशिंग](#caching-at-the-object-level)"
  },
  {
    "row": 155,
    "rowsha": "vGl/Qi61KJeoEkOEMotuZ0u9d0VSkRoU9AM4zmfMvQw=",
    "originContent": "    * [When to update the cache](#when-to-update-the-cache)",
    "translatedContent": "    * [कैश कब अपडेट करें](#when-to-update-the-cache)"
  },
  {
    "row": 156,
    "rowsha": "ITsFPznfYyxpbeRcoO482yWsaW+YN5YvR1vJPZRLI2c=",
    "originContent": "        * [Cache-aside](#cache-aside)",
    "translatedContent": "        * [कैश-असाइड](#cache-aside)"
  },
  {
    "row": 157,
    "rowsha": "z7zVU3t05MK7T8O6XYHjbUMB7vXzFwERe2PYvyKUDE4=",
    "originContent": "        * [Write-through](#write-through)",
    "translatedContent": "        * [राइट-थ्रू](#write-through)"
  },
  {
    "row": 158,
    "rowsha": "kNZqKN+WUwHb1zBqFraj47wKZOY9WLhnt7b1MTgng/0=",
    "originContent": "        * [Write-behind (write-back)](#write-behind-write-back)",
    "translatedContent": "        * [राइट-बिहाइंड (राइट-बैक)](#write-behind-write-back)"
  },
  {
    "row": 159,
    "rowsha": "/eB/o65GSkl+AEwb/HVpLsDrbY+jogBd5YDUbK8yMMs=",
    "originContent": "        * [Refresh-ahead](#refresh-ahead)",
    "translatedContent": "        * [रिफ्रेश-अहेड](#refresh-ahead)"
  },
  {
    "row": 160,
    "rowsha": "zr1RycAvrfVcaAqj8l97VrQ6BIPurojyr3SGsxs2hvs=",
    "originContent": "* [Asynchronism](#asynchronism)",
    "translatedContent": "* [असिंक्रोनस](#asynchronism)"
  },
  {
    "row": 161,
    "rowsha": "ngYSKeGfsWtFoPyuKBLbi0kQWznAYU5siwvzycdqVU4=",
    "originContent": "    * [Message queues](#message-queues)",
    "translatedContent": "    * [मैसेज क्यूज़](#message-queues)"
  },
  {
    "row": 162,
    "rowsha": "O6TBBxTsu3yRea+KD1G4fld0434dM8LRo/xgTlthayc=",
    "originContent": "    * [Task queues](#task-queues)",
    "translatedContent": "    * [टास्क कतारें](#task-queues)"
  },
  {
    "row": 163,
    "rowsha": "UrCvT4TYDFM+wTrDkf2ZRw0jR/5ELcsNaHGuacem2gQ=",
    "originContent": "    * [Back pressure](#back-pressure)",
    "translatedContent": "    * [बैक प्रेशर](#back-pressure)"
  },
  {
    "row": 164,
    "rowsha": "UUd37MwuOeEo9lc7r34dQ7IJVLBzjeT8a2xlsOw0Ix4=",
    "originContent": "* [Communication](#communication)",
    "translatedContent": "* [संचार](#communication)"
  },
  {
    "row": 165,
    "rowsha": "io62RFhf0tjvdSFLhMHVT2x3q9n1r9TDZME9Ndj5O+U=",
    "originContent": "    * [Transmission control protocol (TCP)](#transmission-control-protocol-tcp)",
    "translatedContent": "    * [ट्रांसमिशन कंट्रोल प्रोटोकॉल (TCP)](#transmission-control-protocol-tcp)"
  },
  {
    "row": 166,
    "rowsha": "R1NkIb/fntCNQpKX0IoKqXukYjxw99w2QlqBaya1fqg=",
    "originContent": "    * [User datagram protocol (UDP)](#user-datagram-protocol-udp)",
    "translatedContent": "    * [यूज़र डेटाग्राम प्रोटोकॉल (UDP)](#user-datagram-protocol-udp)"
  },
  {
    "row": 167,
    "rowsha": "I2t/fHZ28vdN/2ND7hDJZbu2QPELe9UstISo3dL6LV0=",
    "originContent": "    * [Remote procedure call (RPC)](#remote-procedure-call-rpc)",
    "translatedContent": "    * [रिमोट प्रोसीजर कॉल (RPC)](#remote-procedure-call-rpc)"
  },
  {
    "row": 168,
    "rowsha": "Ba8C1OKWxXEo4fBLiKU/mP3ajlM2m9BeD0n2y73g0UU=",
    "originContent": "    * [Representational state transfer (REST)](#representational-state-transfer-rest)",
    "translatedContent": "    * [रिप्रेजेंटेशनल स्टेट ट्रांसफर (REST)](#representational-state-transfer-rest)"
  },
  {
    "row": 169,
    "rowsha": "oq278APmo1WDG0a5/vZcIyBMqNT8pDqxOS4Ke6sAbHE=",
    "originContent": "* [Security](#security)",
    "translatedContent": "* [सुरक्षा](#security)"
  },
  {
    "row": 170,
    "rowsha": "ff/6f0MtGHzmKEB+lY9ekx2HPxp0Qg/O7ANiXOo2kSw=",
    "originContent": "* [Appendix](#appendix)",
    "translatedContent": "* [परिशिष्ट](#appendix)"
  },
  {
    "row": 171,
    "rowsha": "AwfW+Wqxu32D+DBal/PNaY9F96/dVARQ1nObwFrJWCU=",
    "originContent": "    * [Powers of two table](#powers-of-two-table)",
    "translatedContent": "    * [दो के घातों की तालिका](#powers-of-two-table)"
  },
  {
    "row": 172,
    "rowsha": "C/pqTblctNi9RCuIC3u1t0N2vg4eEjh1k/3siW05KQY=",
    "originContent": "    * [Latency numbers every programmer should know](#latency-numbers-every-programmer-should-know)",
    "translatedContent": "    * [हर प्रोग्रामर को ज्ञात होने वाली विलंब संख्याएँ](#latency-numbers-every-programmer-should-know)"
  },
  {
    "row": 173,
    "rowsha": "WtwxC6ASWbl1bkZGpyWq/zx2mACBAXg1duymuhroZyE=",
    "originContent": "    * [Additional system design interview questions](#additional-system-design-interview-questions)",
    "translatedContent": "    * [अतिरिक्त सिस्टम डिज़ाइन साक्षात्कार प्रश्न](#additional-system-design-interview-questions)"
  },
  {
    "row": 174,
    "rowsha": "7/ATFxcicSoIcmNw0DAArF3OJc0pQnWwu5B/iL4F/FY=",
    "originContent": "    * [Real world architectures](#real-world-architectures)",
    "translatedContent": "    * [वास्तविक दुनिया की वास्तुकलाएँ](#real-world-architectures)"
  },
  {
    "row": 175,
    "rowsha": "1eSLWlu9SYGwGW0AaaTzCSNqQ8p03y4UxuwWxQJNcCg=",
    "originContent": "    * [Company architectures](#company-architectures)",
    "translatedContent": "    * [कंपनी वास्तुकलाएँ](#company-architectures)"
  },
  {
    "row": 176,
    "rowsha": "1bI/gLnWRhVsqogNuH3g+AwCB3hvrTmSX4xquwtPBFs=",
    "originContent": "    * [Company engineering blogs](#company-engineering-blogs)",
    "translatedContent": "    * [कंपनी इंजीनियरिंग ब्लॉग्स](#company-engineering-blogs)"
  },
  {
    "row": 177,
    "rowsha": "dTOO2RtvdkGmX2HXQH1DoKsL14wdsZJzSXaPXYGKcrM=",
    "originContent": "* [Under development](#under-development)",
    "translatedContent": "* [विकासाधीन](#under-development)"
  },
  {
    "row": 178,
    "rowsha": "YUXtm7kEjiRCwkV06yM8SYdamuU7Z5IdpxADiVeAfIg=",
    "originContent": "* [Credits](#credits)",
    "translatedContent": "* [श्रेय](#credits)"
  },
  {
    "row": 179,
    "rowsha": "J4G0+7NptorR63ExXbXrIyRMBnY5VmIay4XGYhpFXyg=",
    "originContent": "* [Contact info](#contact-info)",
    "translatedContent": "* [संपर्क जानकारी](#contact-info)"
  },
  {
    "row": 180,
    "rowsha": "9gXKKKb5FUd9fO2TD3aeraF4h1bOfl2toIPXJSxUxlw=",
    "originContent": "* [License](#license)",
    "translatedContent": "* [लाइसेंस](#license)"
  },
  {
    "row": 181,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 182,
    "rowsha": "pkA29PuoVCQYq4GoB2nRj+0O3rox4V+hbAii1lgeS+A=",
    "originContent": "## Study guide",
    "translatedContent": "## अध्ययन मार्गदर्शिका"
  },
  {
    "row": 183,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 184,
    "rowsha": "Q78kczp0KdJN6QQTqgSg/ROsm+L2ETHNTlBUI13TbwI=",
    "originContent": "> Suggested topics to review based on your interview timeline (short, medium, long).",
    "translatedContent": "> आपके साक्षात्कार समयरेखा (संक्षिप्त, मध्यम, लंबी) के आधार पर समीक्षा के लिए सुझाए गए विषय।"
  },
  {
    "row": 185,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 186,
    "rowsha": "w/WdknbLjXs44iZhY7FdPLN1IV5zaVcCSV7W/Bl3L1M=",
    "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/OfVllex.png)",
    "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/OfVllex.png)"
  },
  {
    "row": 187,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 188,
    "rowsha": "/cmnXl2Jxz0I2rB2LZxPGjII65j+L433/ejs+afLIIw=",
    "originContent": "**Q: For interviews, do I need to know everything here?**",
    "translatedContent": "**प्र: क्या इंटरव्यू के लिए मुझे यहाँ सब कुछ जानना आवश्यक है?**"
  },
  {
    "row": 189,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 190,
    "rowsha": "KiIfXE+Ejcpuax4zdrNsjjvlP+x+3g3+3g/BRZ+cuUE=",
    "originContent": "**A: No, you don't need to know everything here to prepare for the interview**.",
    "translatedContent": "**उ: नहीं, इंटरव्यू की तैयारी के लिए आपको यहाँ सब कुछ जानना आवश्यक नहीं है**।"
  },
  {
    "row": 191,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 192,
    "rowsha": "SEgrI4VTYzTth28Bo7zrD2L6iulYNtlYKOzDbX1hNVk=",
    "originContent": "What you are asked in an interview depends on variables such as:",
    "translatedContent": "इंटरव्यू में आपसे क्या पूछा जाएगा, यह इन कारकों पर निर्भर करता है:"
  },
  {
    "row": 193,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 194,
    "rowsha": "DyOrEhJ4UB8J7BvfLZD1jgDifNI81bUuQxbel5zSXOc=",
    "originContent": "* How much experience you have",
    "translatedContent": "* आपके पास कितना अनुभव है"
  },
  {
    "row": 195,
    "rowsha": "uVZgAo6EsfEaAGXSN/yrAEJY9oQ8sapayEDid9Z1VkU=",
    "originContent": "* What your technical background is",
    "translatedContent": "* आपका तकनीकी पृष्ठभूमि क्या है"
  },
  {
    "row": 196,
    "rowsha": "0uNitbVaITxnPuiMkEPHrnS6k2ERQgluU9XvO/WpRDM=",
    "originContent": "* What positions you are interviewing for",
    "translatedContent": "* आप किस पद के लिए इंटरव्यू दे रहे हैं"
  },
  {
    "row": 197,
    "rowsha": "uGoBghIUM+lnf4dp6dRE+KdoTaao3ICICYQ3ekv33VY=",
    "originContent": "* Which companies you are interviewing with",
    "translatedContent": "* आप किन कंपनियों में इंटरव्यू दे रहे हैं"
  },
  {
    "row": 198,
    "rowsha": "VkiuZxZEumFuqlmHNADyzkijscMW3TgNFUWGb3HUvYM=",
    "originContent": "* Luck",
    "translatedContent": "* भाग्य"
  },
  {
    "row": 199,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 200,
    "rowsha": "NlZ76DoNuWHLZ56TrHW+8Jop5zRsIi5eVNw0tKfWwXM=",
    "originContent": "More experienced candidates are generally expected to know more about system design.  Architects or team leads might be expected to know more than individual contributors.  Top tech companies are likely to have one or more design interview rounds.",
    "translatedContent": "अधिक अनुभवी उम्मीदवारों से आमतौर पर सिस्टम डिज़ाइन के बारे में अधिक जानकारी अपेक्षित होती है।  आर्किटेक्ट्स या टीम लीड्स से व्यक्तिगत योगदानकर्ताओं की तुलना में अधिक जानने की अपेक्षा की जाती है।  शीर्ष तकनीकी कंपनियों में एक या अधिक डिज़ाइन इंटरव्यू राउंड होने की संभावना है।"
  },
  {
    "row": 201,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 202,
    "rowsha": "SNIA3o4Zdm0GipnTURRr6LLC5xntTaBp1rDZU9eR0dg=",
    "originContent": "Start broad and go deeper in a few areas.  It helps to know a little about various key system design topics.  Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.",
    "translatedContent": "चौड़ा शुरू करें और कुछ क्षेत्रों में गहराई में जाएँ। विभिन्न प्रमुख सिस्टम डिज़ाइन विषयों के बारे में थोड़ा जानना मददगार होता है। निम्नलिखित मार्गदर्शिका को अपनी समयसीमा, अनुभव, जिन पदों के लिए आप इंटरव्यू दे रहे हैं, और जिन कंपनियों के लिए आप इंटरव्यू दे रहे हैं, के अनुसार समायोजित करें।"
  },
  {
    "row": 203,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 204,
    "rowsha": "APprvXVZXhoF3eG3JK9VPbp0/iBscnCVVtS2tsFOgg8=",
    "originContent": "* **Short timeline** - Aim for **breadth** with system design topics.  Practice by solving **some** interview questions.",
    "translatedContent": "* **कम समयसीमा** - सिस्टम डिज़ाइन विषयों में **चौड़ाई** का लक्ष्य रखें। **कुछ** इंटरव्यू प्रश्नों को हल करके अभ्यास करें।"
  },
  {
    "row": 205,
    "rowsha": "ADXWP0iSVhOOvWH3xlFzTarvxFCgR8nGMIlVcLkCgrE=",
    "originContent": "* **Medium timeline** - Aim for **breadth** and **some depth** with system design topics.  Practice by solving **many** interview questions.",
    "translatedContent": "* **मध्यम समयसीमा** - सिस्टम डिज़ाइन विषयों में **चौड़ाई** और **कुछ गहराई** का लक्ष्य रखें। **कई** इंटरव्यू प्रश्नों को हल करके अभ्यास करें।"
  },
  {
    "row": 206,
    "rowsha": "7SYTlgZLwo5IszPycuCkSwiIgIeG4MoFB4OUmGHNq9E=",
    "originContent": "* **Long timeline** - Aim for **breadth** and **more depth** with system design topics.  Practice by solving **most** interview questions.",
    "translatedContent": "* **लंबी समयसीमा** - सिस्टम डिज़ाइन विषयों में **चौड़ाई** और **अधिक गहराई** का लक्ष्य रखें। **अधिकांश** इंटरव्यू प्रश्नों को हल करके अभ्यास करें।"
  },
  {
    "row": 207,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 208,
    "rowsha": "9ubyW9Q8WZyzbbpxkOGzpyAgn+ErJRiPxoAf3B1+npI=",
    "originContent": "| | Short | Medium | Long |",
    "translatedContent": "| | कम | मध्यम | लंबा |"
  },
  {
    "row": 209,
    "rowsha": "TaHsb0d4IJAQLcFr2peO+1ZV+/Ldzg+E7PH695qTDy0=",
    "originContent": "|---|---|---|---|",
    "translatedContent": "|---|---|---|---|"
  },
  {
    "row": 210,
    "rowsha": "iSwmLEDPCeVIpT4oqn8Da9T805AcRJWbIPhLuv3TFDQ=",
    "originContent": "| Read through the [System design topics](#index-of-system-design-topics) to get a broad understanding of how systems work | :+1: | :+1: | :+1: |",
    "translatedContent": "| [सिस्टम डिज़ाइन विषयों](#index-of-system-design-topics) को पढ़ें ताकि यह समझ सकें कि सिस्टम कैसे काम करते हैं | :+1: | :+1: | :+1: |"
  },
  {
    "row": 211,
    "rowsha": "/U1scGwmSquckFPkDMstzK594t9Yh9z+UF1v3T3o8dg=",
    "originContent": "| Read through a few articles in the [Company engineering blogs](#company-engineering-blogs) for the companies you are interviewing with | :+1: | :+1: | :+1: |",
    "translatedContent": "| इंटरव्यू वाली कंपनियों के [कंपनी इंजीनियरिंग ब्लॉग्स](#company-engineering-blogs) में कुछ लेख पढ़ें | :+1: | :+1: | :+1: |"
  },
  {
    "row": 212,
    "rowsha": "uvAtVAF9aYtpwaZ2xWi796KENLUKG609T9b/ShsgTgI=",
    "originContent": "| Read through a few [Real world architectures](#real-world-architectures) | :+1: | :+1: | :+1: |",
    "translatedContent": "| कुछ [वास्तविक दुनिया की आर्किटेक्चर्स](#real-world-architectures) को पढ़ें | :+1: | :+1: | :+1: |"
  },
  {
    "row": 213,
    "rowsha": "bks/6OaX0tTDUOx+I44XG55gMbEUWylOT9UWWHm1F8Y=",
    "originContent": "| Review [How to approach a system design interview question](#how-to-approach-a-system-design-interview-question) | :+1: | :+1: | :+1: |",
    "translatedContent": "| [सिस्टम डिज़ाइन इंटरव्यू प्रश्न को कैसे हल करें](#how-to-approach-a-system-design-interview-question) पढ़ें | :+1: | :+1: | :+1: |"
  },
  {
    "row": 214,
    "rowsha": "fc+sbOekuddiU1ZTlyY+2ndV0/T5foQKhmEPsOl92QA=",
    "originContent": "| Work through [System design interview questions with solutions](#system-design-interview-questions-with-solutions) | Some | Many | Most |",
    "translatedContent": "| [सिस्टम डिज़ाइन इंटरव्यू प्रश्नों के समाधान](#system-design-interview-questions-with-solutions) पर काम करें | कुछ | कई | अधिकांश |"
  },
  {
    "row": 215,
    "rowsha": "eiunWCO/vn1yPsHkE92DdPpJr9ejQPdQ6OX5byfJE04=",
    "originContent": "| Work through [Object-oriented design interview questions with solutions](#object-oriented-design-interview-questions-with-solutions) | Some | Many | Most |",
    "translatedContent": "| [ऑब्जेक्ट-ओरिएंटेड डिज़ाइन इंटरव्यू प्रश्नों के समाधान](#object-oriented-design-interview-questions-with-solutions) पर काम करें | कुछ | कई | अधिकांश |"
  },
  {
    "row": 216,
    "rowsha": "imyixE9xkYCw9ldxREhHRKkugeOG/JoDZeHgmKWNi20=",
    "originContent": "| Review [Additional system design interview questions](#additional-system-design-interview-questions) | Some | Many | Most |",
    "translatedContent": "| [अतिरिक्त सिस्टम डिज़ाइन इंटरव्यू प्रश्नों](#additional-system-design-interview-questions) की समीक्षा करें | कुछ | कई | अधिकांश |"
  },
  {
    "row": 217,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 218,
    "rowsha": "SEFZnoLgKX5GYcZzfMMx2UcVa/rW0PgfJJPN8Oyigmw=",
    "originContent": "## How to approach a system design interview question",
    "translatedContent": "## सिस्टम डिज़ाइन इंटरव्यू प्रश्न को कैसे हल करें"
  },
  {
    "row": 219,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 220,
    "rowsha": "EBmqGSUbcyaunIhTpF2rm9E/QQTzqZqKWcuyhWFWViw=",
    "originContent": "> How to tackle a system design interview question.",
    "translatedContent": "> सिस्टम डिज़ाइन इंटरव्यू प्रश्न को कैसे हल करें।"
  },
  {
    "row": 221,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 222,
    "rowsha": "62lKeIabpcx9OyC0tfG/7xBhY/S6My8Jia+GHrX7RDw=",
    "originContent": "The system design interview is an **open-ended conversation**.  You are expected to lead it.",
    "translatedContent": "सिस्टम डिज़ाइन इंटरव्यू एक **खुली बातचीत** है। आपसे अपेक्षा की जाती है कि आप इसका नेतृत्व करेंगे।"
  },
  {
    "row": 223,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 224,
    "rowsha": "ssirbcWvt6KNXQZ9Qn+cZnHwff8sveAOuamap6GdDW4=",
    "originContent": "You can use the following steps to guide the discussion.  To help solidify this process, work through the [System design interview questions with solutions](#system-design-interview-questions-with-solutions) section using the following steps.",
    "translatedContent": "आप चर्चा को मार्गदर्शित करने के लिए निम्नलिखित चरणों का उपयोग कर सकते हैं। इस प्रक्रिया को मजबूत करने के लिए, [सिस्टम डिज़ाइन इंटरव्यू प्रश्नों के समाधान](#system-design-interview-questions-with-solutions) अनुभाग पर इन चरणों के साथ काम करें।"
  },
  {
    "row": 225,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 226,
    "rowsha": "g/AAuZkvyL/kmKACkaQdEDyPBRjvsIKtPGBhDecoBt0=",
    "originContent": "### Step 1: Outline use cases, constraints, and assumptions",
    "translatedContent": "### चरण 1: उपयोग के मामले, बाधाएँ, और मान्यताओं की रूपरेखा बनाएं"
  },
  {
    "row": 227,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 228,
    "rowsha": "u426oQIllXU3QBYctTrH5fZsvBd/FnxOIzVcRmGjM4c=",
    "originContent": "Gather requirements and scope the problem.  Ask questions to clarify use cases and constraints.  Discuss assumptions.",
    "translatedContent": "आवश्यकताएँ एकत्र करें और समस्या का दायरा तय करें। उपयोग के मामले और बाधाओं को स्पष्ट करने के लिए प्रश्न पूछें। मान्यताओं पर चर्चा करें।"
  },
  {
    "row": 229,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 230,
    "rowsha": "ZYB7Vgm75fttaAWBi4OXuzYlmy2Rqs9I94b4uw3M+98=",
    "originContent": "* Who is going to use it?",
    "translatedContent": "* कौन इसका उपयोग करेगा?"
  },
  {
    "row": 231,
    "rowsha": "ZVFCVHGlD9Tg5LQyoHb7YRtW/AEv36v6L1zKTiB9P0Y=",
    "originContent": "* How are they going to use it?",
    "translatedContent": "* वे इसका उपयोग कैसे करेंगे?"
  },
  {
    "row": 232,
    "rowsha": "NNJIWR0UaiI4xQTFPpNRTh8dWErgWLTwetr/vYaeUDk=",
    "originContent": "* How many users are there?",
    "translatedContent": "* कितने उपयोगकर्ता हैं?"
  },
  {
    "row": 233,
    "rowsha": "WpsuKkJ3vG0G6WpKbH7swYHJCe3FeZGz6DX51dwgprE=",
    "originContent": "* What does the system do?",
    "translatedContent": "* सिस्टम क्या करता है?"
  },
  {
    "row": 234,
    "rowsha": "zyUvqreHsTuM5upvOBdEYLO18OEo1j5JZvwsW26xRcM=",
    "originContent": "* What are the inputs and outputs of the system?",
    "translatedContent": "* सिस्टम के इनपुट और आउटपुट क्या हैं?"
  },
  {
    "row": 235,
    "rowsha": "M+/skSeqc+Kr0oZURcbgKzA8lFVLTBa8ZkkezW5xYe8=",
    "originContent": "* How much data do we expect to handle?",
    "translatedContent": "* हमें कितने डेटा की उम्मीद है?"
  },
  {
    "row": 236,
    "rowsha": "wWQUtkw7SSXqT0xZeorBHJb4jM/9nMeQNd1nM0xP+i4=",
    "originContent": "* How many requests per second do we expect?",
    "translatedContent": "* हमें प्रति सेकंड कितनी अनुरोधों की उम्मीद है?"
  },
  {
    "row": 237,
    "rowsha": "awh+n8TFHHMyLHIDXahUBuhPUv2kyDmGPLsN8jHlBa4=",
    "originContent": "* What is the expected read to write ratio?",
    "translatedContent": "* अपेक्षित पढ़ने और लिखने का अनुपात क्या है?"
  },
  {
    "row": 238,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 239,
    "rowsha": "2y98k60lgFqEObXP9Evv+4U7hADGpthi9IKwC9GdX7U=",
    "originContent": "### Step 2: Create a high level design",
    "translatedContent": "### चरण 2: उच्च स्तरीय डिज़ाइन बनाएं"
  },
  {
    "row": 240,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 241,
    "rowsha": "ShMefyWY9vD8sZojhWGQTcpi5IknT20fWYnS5qOH40k=",
    "originContent": "Outline a high level design with all important components.",
    "translatedContent": "सभी महत्वपूर्ण घटकों के साथ एक उच्च स्तरीय डिज़ाइन की रूपरेखा बनाएं।"
  },
  {
    "row": 242,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* मुख्य घटकों और कनेक्शनों का स्केच बनाएं  "
  },
  {
    "row": 243,
    "rowsha": "U27CMtCga11B+lhjY/Gfa6kyyajXoMr9mJ2rHTimlc8=",
    "originContent": "* Sketch the main components and connections",
    "translatedContent": "* अपने विचारों का औचित्य सिद्ध करें  "
  },
  {
    "row": 244,
    "rowsha": "bNwx3GZvsDBhNsC3kREcodXP7Il7SB7K49qytDkWeCY=",
    "originContent": "* Justify your ideas",
    "translatedContent": ""
  },
  {
    "row": 245,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### चरण 3: मुख्य घटकों का डिज़ाइन करें  "
  },
  {
    "row": 246,
    "rowsha": "LcrIuJbweDykbrtYihaAOMSR/DEWfrO6HmvZJRktK48=",
    "originContent": "### Step 3: Design core components",
    "translatedContent": ""
  },
  {
    "row": 247,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "प्रत्येक मुख्य घटक के लिए विवरण में जाएं। उदाहरण के लिए, यदि आपसे [एक URL शॉर्टनिंग सेवा डिज़ाइन करने के लिए कहा जाए](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md), तो चर्चा करें:  "
  },
  {
    "row": 248,
    "rowsha": "XmQinwyPHiJWAOeoKvrtbJNfPPpRvP/332oZ0AxnFIs=",
    "originContent": "Dive into details for each core component.  For example, if you were asked to [design a url shortening service](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md), discuss:",
    "translatedContent": ""
  },
  {
    "row": 249,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* पूर्ण URL का हैश जनरेट करना और स्टोर करना  "
  },
  {
    "row": 250,
    "rowsha": "eUNlQzq7tAqTf1e6qYbSNPis8YbTKSrLfy7DtLodTAo=",
    "originContent": "* Generating and storing a hash of the full url",
    "translatedContent": "    * [MD5](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) और [Base62](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)  "
  },
  {
    "row": 251,
    "rowsha": "jGcHvLTPBxpJtqfRcku9M/Se24yoG2e6zWM6ykZNGH0=",
    "originContent": "    * [MD5](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) and [Base62](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)",
    "translatedContent": "    * हैश टकराव  "
  },
  {
    "row": 252,
    "rowsha": "/Lg06Hv6vd+VihWbM3xNVinte1JZX1ZmWfL7sau6OTU=",
    "originContent": "    * Hash collisions",
    "translatedContent": "    * SQL या NoSQL  "
  },
  {
    "row": 253,
    "rowsha": "CpfFFdAOO914zjF8AnWcCiRp/dFxSfhBu4xqD4JKQLs=",
    "originContent": "    * SQL or NoSQL",
    "translatedContent": "    * डेटाबेस स्कीमा  "
  },
  {
    "row": 254,
    "rowsha": "QZ4fmpKQ53P5ic20X8K10tQ8MNbNV7Bqq+z3quSwWX4=",
    "originContent": "    * Database schema",
    "translatedContent": "* हैश किए गए URL को पूर्ण URL में ट्रांसलेट करना  "
  },
  {
    "row": 255,
    "rowsha": "fCFo/wGYaDJUSva0xz1uDUaphw0ay9iHB1lP9GImAPM=",
    "originContent": "* Translating a hashed url to the full url",
    "translatedContent": "    * डेटाबेस लुकअप  "
  },
  {
    "row": 256,
    "rowsha": "sTSUDYlnS2yNoPTIw5WpAquWW7q5qVdh8cU5hGsAoAU=",
    "originContent": "    * Database lookup",
    "translatedContent": "* API और ऑब्जेक्ट-ओरिएंटेड डिज़ाइन  "
  },
  {
    "row": 257,
    "rowsha": "RFEuA4sZ3xOJYAUMGGdsIFC22p4mKfqiVUs5k0CDlUM=",
    "originContent": "* API and object-oriented design",
    "translatedContent": ""
  },
  {
    "row": 258,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### चरण 4: डिज़ाइन को स्केल करें  "
  },
  {
    "row": 259,
    "rowsha": "oEnBtR+2UQj/a2ntVw4si8hESUAkA7pQDiXs+JS2i7A=",
    "originContent": "### Step 4: Scale the design",
    "translatedContent": ""
  },
  {
    "row": 260,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "बॉटलनेक्स की पहचान करें और सीमाओं को ध्यान में रखते हुए उनका समाधान करें। उदाहरण के लिए, क्या आपको स्केलेबिलिटी समस्याओं के समाधान के लिए निम्नलिखित की आवश्यकता है?  "
  },
  {
    "row": 261,
    "rowsha": "/S0/1A+ljnuBHmZ1BrciwM7aZgV6VjqyOXrmyF8NEtc=",
    "originContent": "Identify and address bottlenecks, given the constraints.  For example, do you need the following to address scalability issues?",
    "translatedContent": ""
  },
  {
    "row": 262,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* लोड बैलेंसर  "
  },
  {
    "row": 263,
    "rowsha": "WHX53gtEKOGGmNumFoFgZdDBItuO8RGaS4y0YR6DzHU=",
    "originContent": "* Load balancer",
    "translatedContent": "* क्षैतिज स्केलिंग  "
  },
  {
    "row": 264,
    "rowsha": "8WMxYHS7bcb9ujutc5oNdciUky0lpTe1OWwf0aQLPtY=",
    "originContent": "* Horizontal scaling",
    "translatedContent": "* कैशिंग  "
  },
  {
    "row": 265,
    "rowsha": "KwFOX2+m+5jw+o1TS7IAfPEjVtO8acfjUoASy/7hzV4=",
    "originContent": "* Caching",
    "translatedContent": "* डेटाबेस शार्डिंग  "
  },
  {
    "row": 266,
    "rowsha": "Qhp9XMPjmJxweEazgKatdafXI0F4kBAj20eMCty2Z6U=",
    "originContent": "* Database sharding",
    "translatedContent": ""
  },
  {
    "row": 267,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "संभावित समाधानों और उनके ट्रेड-ऑफ पर चर्चा करें। हर चीज़ में समझौता होता है। [स्केलेबल सिस्टम डिज़ाइन के सिद्धांतों](#index-of-system-design-topics) का उपयोग करके बॉटलनेक्स का समाधान करें।  "
  },
  {
    "row": 268,
    "rowsha": "+C2wS9CYBXEcil8inp5fzfeS6ihDXA46KjkAglCk/UM=",
    "originContent": "Discuss potential solutions and trade-offs.  Everything is a trade-off.  Address bottlenecks using [principles of scalable system design](#index-of-system-design-topics).",
    "translatedContent": ""
  },
  {
    "row": 269,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### अनुमानित गणनाएँ (Back-of-the-envelope calculations)  "
  },
  {
    "row": 270,
    "rowsha": "65fg+RfTRxsiQ8Lb+bdR+4kGz9EA7OARQTqASHFZhQA=",
    "originContent": "### Back-of-the-envelope calculations",
    "translatedContent": ""
  },
  {
    "row": 271,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "आपसे हाथ से कुछ अनुमान लगाने के लिए कहा जा सकता है। निम्नलिखित संसाधनों के लिए [परिशिष्ट](#appendix) देखें:  "
  },
  {
    "row": 272,
    "rowsha": "DjmbBNFtax26TU0ZuQz7vD1aQYMiyBvXZyY1+z5xJlE=",
    "originContent": "You might be asked to do some estimates by hand.  Refer to the [Appendix](#appendix) for the following resources:",
    "translatedContent": ""
  },
  {
    "row": 273,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* [Back-of-the-envelope गणनाओं का उपयोग करें](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)  "
  },
  {
    "row": 274,
    "rowsha": "Ps8ZZyaG1tgfwlYTr1UYAuIsUHLMLpnRN+Xy/+yCOGw=",
    "originContent": "* [Use back of the envelope calculations](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)",
    "translatedContent": "* [दो की घातों की तालिका](#powers-of-two-table)  "
  },
  {
    "row": 275,
    "rowsha": "k+wFt6Jdc9eBgcfSFqxuP7joVvfg2wCvXiMRTQZe/Qs=",
    "originContent": "* [Powers of two table](#powers-of-two-table)",
    "translatedContent": "* [प्रत्येक प्रोग्रामर को ज्ञात लेटेंसी संख्याएँ](#latency-numbers-every-programmer-should-know)  "
  },
  {
    "row": 276,
    "rowsha": "VVfu5aP/E47faRiVqcZZ1SbeLy6MmMKzGXLkMNcKFZ8=",
    "originContent": "* [Latency numbers every programmer should know](#latency-numbers-every-programmer-should-know)",
    "translatedContent": ""
  },
  {
    "row": 277,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### स्रोत और आगे पढ़ाई  "
  },
  {
    "row": 278,
    "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
    "originContent": "### Source(s) and further reading",
    "translatedContent": ""
  },
  {
    "row": 279,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "अधिक अच्छे से समझने के लिए निम्नलिखित लिंक देखें:  "
  },
  {
    "row": 280,
    "rowsha": "nYzECrLKxvEiF5sIfAJr/QCX0pvtPH8NiVC7VkfAYPA=",
    "originContent": "Check out the following links to get a better idea of what to expect:",
    "translatedContent": ""
  },
  {
    "row": 281,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 282,
    "rowsha": "JZq01FMZ7R3Ugi6/9OGB59UgMoIhdLWL3o1YUqT3JeA=",
    "originContent": "* [How to ace a systems design interview](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)",
    "translatedContent": "* [सिस्टम डिज़ाइन इंटरव्यू में कैसे सफल हों](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)"
  },
  {
    "row": 283,
    "rowsha": "vT0KOyNKYP7aARQ+UVu1d8DA5r8brjZMPgnNCdgLOnE=",
    "originContent": "* [The system design interview](http://www.hiredintech.com/system-design)",
    "translatedContent": "* [सिस्टम डिज़ाइन इंटरव्यू](http://www.hiredintech.com/system-design)"
  },
  {
    "row": 284,
    "rowsha": "JdeppIgnkeI5NAIAVuhPX5MnQmcpsEHkbOaKUktOTDs=",
    "originContent": "* [Intro to Architecture and Systems Design Interviews](https://www.youtube.com/watch?v=ZgdS0EUmn70)",
    "translatedContent": "* [आर्किटेक्चर और सिस्टम डिज़ाइन इंटरव्यू का परिचय](https://www.youtube.com/watch?v=ZgdS0EUmn70)"
  },
  {
    "row": 285,
    "rowsha": "My4lyUxXdCQfPaerGVV1echlO4+ad0vsLUdKDOAclS4=",
    "originContent": "* [System design template](https://leetcode.com/discuss/career/229177/My-System-Design-Template)",
    "translatedContent": "* [सिस्टम डिज़ाइन टेम्पलेट](https://leetcode.com/discuss/career/229177/My-System-Design-Template)"
  },
  {
    "row": 286,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 287,
    "rowsha": "Wm0HclDfbvVAjGfZ/34OYjH4SX0sZcp1TSJ/0X+bOB8=",
    "originContent": "## System design interview questions with solutions",
    "translatedContent": "## सिस्टम डिज़ाइन इंटरव्यू प्रश्न और उनके समाधान"
  },
  {
    "row": 288,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 289,
    "rowsha": "x0b9VxHLB05SuXQs4/HOOO+Yit7Vfqcy4T5e3vxvCxU=",
    "originContent": "> Common system design interview questions with sample discussions, code, and diagrams.",
    "translatedContent": "> सामान्य सिस्टम डिज़ाइन इंटरव्यू प्रश्नों के लिए नमूना चर्चा, कोड, और चित्र।"
  },
  {
    "row": 290,
    "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
    "originContent": ">",
    "translatedContent": ">"
  },
  {
    "row": 291,
    "rowsha": "UIYFxoHN2Dw+rs8eSRF3XAnGJg4Qh/X19PdV8ctDSws=",
    "originContent": "> Solutions linked to content in the `solutions/` folder.",
    "translatedContent": "> समाधान `solutions/` फ़ोल्डर में दिए गए कंटेंट से जुड़े हैं।"
  },
  {
    "row": 292,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 293,
    "rowsha": "fL6dVdOyhJWflSfPRLCV16KaGdqzm694OpjPV8IcgO4=",
    "originContent": "| Question | |",
    "translatedContent": "| प्रश्न | |"
  },
  {
    "row": 294,
    "rowsha": "QZm6RU1tOug2VxIMK7a9Z07vwN19PNTMhEFx3GclE1s=",
    "originContent": "|---|---|",
    "translatedContent": "|---|---|"
  },
  {
    "row": 295,
    "rowsha": "2ePVBCIO2j42UPrbl5IRtcOKI/QHhZK87NbMU1UwEG8=",
    "originContent": "| Design Pastebin.com (or Bit.ly) | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) |",
    "translatedContent": "| Pastebin.com (या Bit.ly) डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) |"
  },
  {
    "row": 296,
    "rowsha": "SjBQjlRPHhEDyUjsMWmZ9RCP/AVE7OURIG878hbb83c=",
    "originContent": "| Design the Twitter timeline and search (or Facebook feed and search) | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md) |",
    "translatedContent": "| ट्विटर टाइमलाइन और सर्च (या फेसबुक फीड और सर्च) डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md) |"
  },
  {
    "row": 297,
    "rowsha": "W/S+LhKK8/zee7Nc93d7c38Oy4o26u8CA1MiqnsgfcA=",
    "originContent": "| Design a web crawler | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md) |",
    "translatedContent": "| वेब क्रॉलर डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md) |"
  },
  {
    "row": 298,
    "rowsha": "13x0MJi2Wd5HdX4O5r+AyIUeajf5OEqAgG+yAZjTG3I=",
    "originContent": "| Design Mint.com | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md) |",
    "translatedContent": "| Mint.com डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md) |"
  },
  {
    "row": 299,
    "rowsha": "UBU8QBY0lWgEcb96V6lnhfkNic0fauJdQBuCURs0Y10=",
    "originContent": "| Design the data structures for a social network | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md) |",
    "translatedContent": "| सोशल नेटवर्क के लिए डेटा संरचना डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md) |"
  },
  {
    "row": 300,
    "rowsha": "SSpyp3aQ9GVNS2G0dKmLwor4UmXnIjBxxN1g+ejUHcw=",
    "originContent": "| Design a key-value store for a search engine | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md) |",
    "translatedContent": "| सर्च इंजन के लिए की-वैल्यू स्टोर डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md) |"
  },
  {
    "row": 301,
    "rowsha": "TXmWqp3bFaa1WLo4Rk7nTXsciVXWegUnDOIQoc1naT8=",
    "originContent": "| Design Amazon's sales ranking by category feature | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md) |",
    "translatedContent": "| अमेज़न के सेल्स रैंकिंग बाय कैटेगरी फीचर को डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md) |"
  },
  {
    "row": 302,
    "rowsha": "BEyLN0lmG0HdpY1rP86XnVyFvrAaeoYPov7Su3Zv0eA=",
    "originContent": "| Design a system that scales to millions of users on AWS | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md) |",
    "translatedContent": "| AWS पर लाखों यूज़र्स को स्केल करने वाली प्रणाली डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md) |"
  },
  {
    "row": 303,
    "rowsha": "rxZ/1ZcyqiWhJo83Zu2JZADx1pvrsk1TTCEtxi+B8tg=",
    "originContent": "| Add a system design question | [Contribute](#contributing) |",
    "translatedContent": "| एक सिस्टम डिज़ाइन प्रश्न जोड़ें | [योगदान करें](#contributing) |"
  },
  {
    "row": 304,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 305,
    "rowsha": "AyFUnZUQuFRxhqUdGSvBhXkOvM6HJsY7TJKU9g88eM8=",
    "originContent": "### Design Pastebin.com (or Bit.ly)",
    "translatedContent": "### Pastebin.com (या Bit.ly) डिज़ाइन करें"
  },
  {
    "row": 306,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 307,
    "rowsha": "TwBCQr1u0cwTgeKsXvI89s/9ZvvPL1SMjf0E+iIAF2o=",
    "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)",
    "translatedContent": "[अभ्यास और समाधान देखें](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)"
  },
  {
    "row": 308,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 309,
    "rowsha": "L4TdGLmd94A8zT+dng4pdeIuDEBxyB9bv6DCXFY+YIo=",
    "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4edXG0T.png)",
    "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4edXG0T.png)"
  },
  {
    "row": 310,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 311,
    "rowsha": "QQw7BOpizsv7c05rVC55faErxy3Oi9OGV0atdtJ5Ivk=",
    "originContent": "### Design the Twitter timeline and search (or Facebook feed and search)",
    "translatedContent": "### ट्विटर टाइमलाइन और सर्च (या फेसबुक फीड और सर्च) डिज़ाइन करें"
  },
  {
    "row": 312,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 313,
    "rowsha": "nqYzQZvIbefn8sWT6PZ4P23+9kIXX5M27R0zvhZ4sfE=",
    "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md)",
    "translatedContent": "[अभ्यास और समाधान देखें](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md)"
  },
  {
    "row": 314,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 315,
    "rowsha": "KI7sS2pfc93vBt6T0SCIl4yGZYqnqPwEoK6HQ7UnHFk=",
    "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png)",
    "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png)"
  },
  {
    "row": 316,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 317,
    "rowsha": "RIHPI9tK8yPnkh3BYkrRNAIfaIqtJbkl9reHz9DvlFk=",
    "originContent": "### Design a web crawler",
    "translatedContent": "### वेब क्रॉलर डिज़ाइन करें"
  },
  {
    "row": 318,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 319,
    "rowsha": "tr3611asvPDSMwY78/NysccFuuF4Hwfud4fnfch8L5Q=",
    "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md)",
    "translatedContent": "[अभ्यास और समाधान देखें](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md)"
  },
  {
    "row": 320,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 321,
    "rowsha": "LsWHuTLmDVHI9pPDc379T6Wr3HnA6wKsIWWiOyC37Gw=",
    "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bWxPtQA.png)",
    "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bWxPtQA.png)"
  },
  {
    "row": 322,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 323,
    "rowsha": "Z70n1c0z611YlpFC3cbdBkm2uAdhpiapPfCLkrsodt8=",
    "originContent": "### Design Mint.com",
    "translatedContent": "### Design Mint.com"
  },
  {
    "row": 324,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 325,
    "rowsha": "m2sKrx6ciHia1U6xLgdz+36L/1uQBgwSKYIL0IILu0k=",
    "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md)",
    "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md)"
  },
  {
    "row": 326,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 327,
    "rowsha": "row6BSJ3dm10Zf9SJGYFcwTF0nNSngS96+2ksRu4+xM=",
    "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/V5q57vU.png)",
    "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/V5q57vU.png)"
  },
  {
    "row": 328,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 329,
    "rowsha": "Zh0JZFuHPsfD2ELWz55xBw9p2XgwYBDT6YJPmEf8peA=",
    "originContent": "### Design the data structures for a social network",
    "translatedContent": "### Design the data structures for a social network"
  },
  {
    "row": 330,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 331,
    "rowsha": "XR9bVutKIjD6NzcMuHURs04GWLd1GXFsCguk0p8A+R8=",
    "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md)",
    "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md)"
  },
  {
    "row": 332,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 333,
    "rowsha": "rQXHpQ4THUMtAB3E6yZCt1WchGmDogbHwC9KOSQyqe4=",
    "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/cdCv5g7.png)",
    "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/cdCv5g7.png)"
  },
  {
    "row": 334,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 335,
    "rowsha": "APqd5Nl4LjEmEpwjDT3FpQTAGp1MyRAzhGJTV1joCBU=",
    "originContent": "### Design a key-value store for a search engine",
    "translatedContent": "### Design a key-value store for a search engine"
  },
  {
    "row": 336,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 337,
    "rowsha": "GPMYLZTxFEn6DfcHc5gWor8cAoJH0cRt+DqA4zvhv40=",
    "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md)",
    "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md)"
  },
  {
    "row": 338,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 339,
    "rowsha": "KUcHqu8H0iGtpvHVM/Zg/o79TeFcnhZdksTPXRwiBd0=",
    "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4j99mhe.png)",
    "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4j99mhe.png)"
  },
  {
    "row": 340,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 341,
    "rowsha": "CCycVwc5+7egryiA3USoK3P2853OEDaXVS+RjT8WuXs=",
    "originContent": "### Design Amazon's sales ranking by category feature",
    "translatedContent": "### Design Amazon's sales ranking by category feature"
  },
  {
    "row": 342,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 343,
    "rowsha": "UBz7wstVm2yG896uPlRd5n0TqxpNpK0jBGzLzReX9Ok=",
    "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md)",
    "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md)"
  },
  {
    "row": 344,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 345,
    "rowsha": "pT/hFkcmu4ShOM0RUwFdDjlFbexfY+nIJrZvLWKqqRA=",
    "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/MzExP06.png)",
    "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/MzExP06.png)"
  },
  {
    "row": 346,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 347,
    "rowsha": "B8BNlQlT2br97d0uMqCR/qzkT9M5ZAiIXk8YRi5qeEw=",
    "originContent": "### Design a system that scales to millions of users on AWS",
    "translatedContent": "### Design a system that scales to millions of users on AWS"
  },
  {
    "row": 348,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 349,
    "rowsha": "s93+WkpF9jFO0b66NLcdz7uW5iEt+f+ptGtO3apyQVY=",
    "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md)",
    "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md)"
  },
  {
    "row": 350,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 351,
    "rowsha": "dZMrgCGx97CQFQkfN8XHhnusO1qCvdu6nlw5Q2/G4L8=",
    "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png)",
    "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png)"
  },
  {
    "row": 352,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 353,
    "rowsha": "Q+kNWMOzdwBD1PoA7dz8gMlukagyIprLzVlXt0OshNI=",
    "originContent": "## Object-oriented design interview questions with solutions",
    "translatedContent": "## Object-oriented design interview questions with solutions"
  },
  {
    "row": 354,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 355,
    "rowsha": "CgwVtP87mnERjRiCIfjhgg+CJeMyE8OR0kHe0JnR7mg=",
    "originContent": "> Common object-oriented design interview questions with sample discussions, code, and diagrams.",
    "translatedContent": "> Common object-oriented design interview questions with sample discussions, code, and diagrams."
  },
  {
    "row": 356,
    "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
    "originContent": ">",
    "translatedContent": ">"
  },
  {
    "row": 357,
    "rowsha": "UIYFxoHN2Dw+rs8eSRF3XAnGJg4Qh/X19PdV8ctDSws=",
    "originContent": "> Solutions linked to content in the `solutions/` folder.",
    "translatedContent": "> Solutions linked to content in the `solutions/` folder."
  },
  {
    "row": 358,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 359,
    "rowsha": "OPbO4oAHMZaRZyRPUSGO/P8ICXTL/JZHlCogsaJ1+HM=",
    "originContent": ">**Note: This section is under development**",
    "translatedContent": ">**Note: This section is under development**"
  },
  {
    "row": 360,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 361,
    "rowsha": "fL6dVdOyhJWflSfPRLCV16KaGdqzm694OpjPV8IcgO4=",
    "originContent": "| Question | |",
    "translatedContent": "| Question | |"
  },
  {
    "row": 362,
    "rowsha": "QZm6RU1tOug2VxIMK7a9Z07vwN19PNTMhEFx3GclE1s=",
    "originContent": "|---|---|",
    "translatedContent": "|---|---|"
  },
  {
    "row": 363,
    "rowsha": "2QdA3ToO4pyxt/k4Rsdq1Awxu0imsAsbDhz4PPkJF4U=",
    "originContent": "| Design a hash map | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/hash_map.ipynb)  |",
    "translatedContent": "| हैश मैप डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/hash_map.ipynb)  |"
  },
  {
    "row": 364,
    "rowsha": "lrvDo/ah5N+BTKS5SlE7jTgjeY4cfIOz/dbiDOiGtjc=",
    "originContent": "| Design a least recently used cache | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/lru_cache.ipynb)  |",
    "translatedContent": "| कम से कम हाल ही में उपयोग की गई कैश डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/lru_cache.ipynb)  |"
  },
  {
    "row": 365,
    "rowsha": "pxzMT7UkKJRMnrEb8eDjG+i7QfYBmZJjyBZT3cbWBbk=",
    "originContent": "| Design a call center | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/call_center.ipynb)  |",
    "translatedContent": "| कॉल सेंटर डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/call_center.ipynb)  |"
  },
  {
    "row": 366,
    "rowsha": "ypj/Vm97p0gDoz0fCuLVQ/ACJNGHDd9yyD5s+gFDjlE=",
    "originContent": "| Design a deck of cards | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb)  |",
    "translatedContent": "| कार्ड्स की गड्डी डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb)  |"
  },
  {
    "row": 367,
    "rowsha": "EmLapRk7TPIZxVJtZyj3zRbh5ToKVyf0H8z2hbDaCSc=",
    "originContent": "| Design a parking lot | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/parking_lot.ipynb)  |",
    "translatedContent": "| पार्किंग लॉट डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/parking_lot.ipynb)  |"
  },
  {
    "row": 368,
    "rowsha": "QNkYLz7qR9e7SvPlsneEJicEyVWeRQw6oHpVpeLDais=",
    "originContent": "| Design a chat server | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/online_chat.ipynb)  |",
    "translatedContent": "| चैट सर्वर डिज़ाइन करें | [समाधान](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/online_chat.ipynb)  |"
  },
  {
    "row": 369,
    "rowsha": "mOdLv2EWN9Lf+NNdJ/eEBId3d3E+cKoo1QRAF2+99J0=",
    "originContent": "| Design a circular array | [Contribute](#contributing)  |",
    "translatedContent": "| सर्कुलर एरे डिज़ाइन करें | [योगदान करें](#contributing)  |"
  },
  {
    "row": 370,
    "rowsha": "nB2uFn5GaCVTh8i6Af3EaXpxUiROqDfEQiLobOWPsP8=",
    "originContent": "| Add an object-oriented design question | [Contribute](#contributing) |",
    "translatedContent": "| एक ऑब्जेक्ट-ओरिएंटेड डिज़ाइन प्रश्न जोड़ें | [योगदान करें](#contributing) |"
  },
  {
    "row": 371,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 372,
    "rowsha": "arhOWm58Vc+xFI/cfG7V/R9cIHjm4Qug8hYYoFZeSJM=",
    "originContent": "## System design topics: start here",
    "translatedContent": "## सिस्टम डिज़ाइन विषय: यहाँ से शुरू करें"
  },
  {
    "row": 373,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 374,
    "rowsha": "CHDyvxilPe7RXBI9jMcIpXBk9me7DOGrOeYdC+uNRzY=",
    "originContent": "New to system design?",
    "translatedContent": "सिस्टम डिज़ाइन में नए हैं?"
  },
  {
    "row": 375,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 376,
    "rowsha": "c2tA63dXRIB/yW0GbTS2uOdAvgMUZbWtk1JGrt+qtDQ=",
    "originContent": "First, you'll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.",
    "translatedContent": "सबसे पहले, आपको सामान्य सिद्धांतों की मूल समझ की आवश्यकता होगी, जानें कि वे क्या हैं, उनका उपयोग कैसे किया जाता है, और उनके फायदे और नुकसान क्या हैं।"
  },
  {
    "row": 377,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 378,
    "rowsha": "D3WxUh7/m2uYtMsEsSnjStbvhi0Wn2XeuCb2o68xh/A=",
    "originContent": "### Step 1: Review the scalability video lecture",
    "translatedContent": "### चरण 1: स्केलेबिलिटी वीडियो व्याख्यान की समीक्षा करें"
  },
  {
    "row": 379,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 380,
    "rowsha": "ulaQKhoMVOKNtoitlnCbWFzSjLiY+5eaamEvyJUUIwg=",
    "originContent": "[Scalability Lecture at Harvard](https://www.youtube.com/watch?v=-W9F__D3oY4)",
    "translatedContent": "[हार्वर्ड में स्केलेबिलिटी व्याख्यान](https://www.youtube.com/watch?v=-W9F__D3oY4)"
  },
  {
    "row": 381,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 382,
    "rowsha": "PmcGFaviQjBOTD9h802f01HLHZnipOMGGyGuQYgZzWo=",
    "originContent": "* Topics covered:",
    "translatedContent": "* शामिल विषय:"
  },
  {
    "row": 383,
    "rowsha": "+NE0o6JdfvsRP1kadSKrkQqzLsJCIzB4TunjG4sR7xI=",
    "originContent": "    * Vertical scaling",
    "translatedContent": "    * वर्टिकल स्केलिंग"
  },
  {
    "row": 384,
    "rowsha": "EFSiVOYxQOK6mFbxYxtQFlI6tBgMtOmAO6BGXWwSMxQ=",
    "originContent": "    * Horizontal scaling",
    "translatedContent": "    * हॉरिजॉन्टल स्केलिंग"
  },
  {
    "row": 385,
    "rowsha": "k+uphKPYtGN7Zv8xw56Qf7aan81aVyYclpJen/6joAQ=",
    "originContent": "    * Caching",
    "translatedContent": "    * कैशिंग"
  },
  {
    "row": 386,
    "rowsha": "407c0kbfPUL5XRnljnX1eQU0iO23sEkOW1v9g9GgLc4=",
    "originContent": "    * Load balancing",
    "translatedContent": "    * लोड बैलेंसिंग"
  },
  {
    "row": 387,
    "rowsha": "bGH4DDiXVueqa6Sb001uMTcRzYqOKc60sR2/OQh/KQk=",
    "originContent": "    * Database replication",
    "translatedContent": "    * डेटाबेस प्रतिकृति"
  },
  {
    "row": 388,
    "rowsha": "NajI8TNJiGszx1I4uXW4FknYHaYu2zANs5msZE9YqVI=",
    "originContent": "    * Database partitioning",
    "translatedContent": "    * डेटाबेस विभाजन"
  },
  {
    "row": 389,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 390,
    "rowsha": "m7luAJjdrWUmT7f3B7GInMgCd51cjwj6y7JzIJ59D1M=",
    "originContent": "### Step 2: Review the scalability article",
    "translatedContent": "### चरण 2: स्केलेबिलिटी लेख की समीक्षा करें"
  },
  {
    "row": 391,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 392,
    "rowsha": "COsWTWKNpduFy26W7EALBCq8NJhP/aKZ19PMRF+7QEw=",
    "originContent": "[Scalability](https://web.archive.org/web/20221030091841/http://www.lecloud.net/tagged/scalability/chrono)",
    "translatedContent": "[स्केलेबिलिटी](https://web.archive.org/web/20221030091841/http://www.lecloud.net/tagged/scalability/chrono)"
  },
  {
    "row": 393,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 394,
    "rowsha": "PmcGFaviQjBOTD9h802f01HLHZnipOMGGyGuQYgZzWo=",
    "originContent": "* Topics covered:",
    "translatedContent": "* शामिल विषय:"
  },
  {
    "row": 395,
    "rowsha": "YIurhpqysBrCWripZpbCypmaT1be8EbECETaTJsR92Y=",
    "originContent": "    * [Clones](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)",
    "translatedContent": "    * [क्लोन्स](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)"
  },
  {
    "row": 396,
    "rowsha": "0retISbnsAzQ7BSwPmGKO9LgJue1jDVN7lH2FDu5UYY=",
    "originContent": "    * [Databases](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)",
    "translatedContent": "    * [डेटाबेस](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)"
  },
  {
    "row": 397,
    "rowsha": "PQhhAW6YOeFz76/F+8aY8npUJgee+WO85EKx+nEz1Fw=",
    "originContent": "    * [Caches](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)",
    "translatedContent": "    * [कैशेज़](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)"
  },
  {
    "row": 398,
    "rowsha": "9eYB6eVCDukkMl3A9M6grq+RmlkMJEw5RRGKWMpmi/A=",
    "originContent": "    * [Asynchronism](https://web.archive.org/web/20220926171507/https://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)",
    "translatedContent": "    * [असिंक्रोनिज़्म](https://web.archive.org/web/20220926171507/https://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)"
  },
  {
    "row": 399,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 400,
    "rowsha": "eWO1dBlvofnKonHt7aPex1kVvTYRVQ3hKIUgwLpAd4U=",
    "originContent": "### Next steps",
    "translatedContent": "### अगले कदम"
  },
  {
    "row": 401,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 402,
    "rowsha": "w5ale8hz4+kzLxu7uiLtVoxNGptZYMZHSlXiDlswaV4=",
    "originContent": "Next, we'll look at high-level trade-offs:",
    "translatedContent": "अब हम उच्च-स्तरीय ट्रेड-ऑफ़्स देखेंगे:"
  },
  {
    "row": 403,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 404,
    "rowsha": "qjQR69Oqu/Ppx/QEUCXOVf8HSq3hdrKRXN/K0v151UI=",
    "originContent": "* **Performance** vs **scalability**",
    "translatedContent": "* **प्रदर्शन (Performance)** बनाम **स्केलेबिलिटी (scalability)**"
  },
  {
    "row": 405,
    "rowsha": "r3x4pHAC13jllWyYMHWjaKkPKk5eM1+gx4X/TaFyVZ4=",
    "originContent": "* **Latency** vs **throughput**",
    "translatedContent": "* **विलंबता (Latency)** बनाम **थ्रूपुट (throughput)**"
  },
  {
    "row": 406,
    "rowsha": "CKMTr1nwKiaF4FBVBp66Dd8DM4OFjqws2rra99rZBeU=",
    "originContent": "* **Availability** vs **consistency**",
    "translatedContent": "* **उपलब्धता (Availability)** बनाम **स्थिरता (consistency)**"
  },
  {
    "row": 407,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 408,
    "rowsha": "BOXdYl9vca02Z3PZ2pO8gNPE3LLFbmA+uVjOXAuhCO8=",
    "originContent": "Keep in mind that **everything is a trade-off**.",
    "translatedContent": "ध्यान रखें कि **हर चीज़ एक ट्रेड-ऑफ़ है**।"
  },
  {
    "row": 409,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 410,
    "rowsha": "2sU/n2/WW3n3LLjJf3daj3gcusdL91FrhECkSwsNJgY=",
    "originContent": "Then we'll dive into more specific topics such as DNS, CDNs, and load balancers.",
    "translatedContent": "फिर हम DNS, CDN और लोड बैलेंसर जैसे विशिष्ट विषयों में गहराई से जाएंगे।"
  },
  {
    "row": 411,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 412,
    "rowsha": "n4v15WZxT30GmzQrN9CJC0XxUj4ETeGuVkj09xC62wI=",
    "originContent": "## Performance vs scalability",
    "translatedContent": "## प्रदर्शन बनाम स्केलेबिलिटी"
  },
  {
    "row": 413,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 414,
    "rowsha": "s35a9eckE4u5exNg0801iQzscZvMCQh5pGhf9evcMgQ=",
    "originContent": "A service is **scalable** if it results in increased **performance** in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.<sup><a href=http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html>1</a></sup>",
    "translatedContent": "कोई सेवा **स्केलेबल** है अगर वह जोड़े गए संसाधनों के अनुपात में **प्रदर्शन** बढ़ाती है। सामान्यतः, प्रदर्शन बढ़ाना मतलब और अधिक कार्य इकाइयों को सेवा देना है, लेकिन यह बड़े कार्य इकाइयों को संभालने के लिए भी हो सकता है, जैसे कि डेटासेट का आकार बढ़ना।<sup><a href=http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html>1</a></sup>"
  },
  {
    "row": 415,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 416,
    "rowsha": "HydEOXM0gkztwS0PDpMrgRBaBb/yk8phPtxtjAVyY0Y=",
    "originContent": "Another way to look at performance vs scalability:",
    "translatedContent": "प्रदर्शन बनाम स्केलेबिलिटी को देखने का एक और तरीका:"
  },
  {
    "row": 417,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 418,
    "rowsha": "btMHSVZTmJ5UzfgLgm6bftc5h3AJT1Q7WHQEpAJa8ec=",
    "originContent": "* If you have a **performance** problem, your system is slow for a single user.",
    "translatedContent": "* अगर आपके पास **प्रदर्शन** की समस्या है, तो आपका सिस्टम एकल उपयोगकर्ता के लिए धीमा है।"
  },
  {
    "row": 419,
    "rowsha": "CHPqEu2pDW0TkoRc4PkM1QsO5rMSROI479UtM7RqFa8=",
    "originContent": "* If you have a **scalability** problem, your system is fast for a single user but slow under heavy load.",
    "translatedContent": "* अगर आपके पास **स्केलेबिलिटी** की समस्या है, तो आपका सिस्टम एकल उपयोगकर्ता के लिए तेज है लेकिन भारी लोड में धीमा हो जाता है।"
  },
  {
    "row": 420,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 421,
    "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
    "originContent": "### Source(s) and further reading",
    "translatedContent": "### स्रोत और आगे पढ़ें"
  },
  {
    "row": 422,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 423,
    "rowsha": "dKS13QqkW+Ee0EVYJziJLDbdGEeKaG4MhHpvPhu4NBY=",
    "originContent": "* [A word on scalability](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)",
    "translatedContent": "* [स्केलेबिलिटी पर एक शब्द](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)"
  },
  {
    "row": 424,
    "rowsha": "UVMSE1BpfAJjZtNGckenaHDWkkWMyRCmwx5PRWNWv7Q=",
    "originContent": "* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)",
    "translatedContent": "* [स्केलेबिलिटी, उपलब्धता, स्थिरता, पैटर्न्स](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)"
  },
  {
    "row": 425,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 426,
    "rowsha": "pIcmd9Ok4wS7SK2kGjcasX6gCZt9Iyr/ONy7tV8RBhA=",
    "originContent": "## Latency vs throughput",
    "translatedContent": "## विलंबता बनाम थ्रूपुट"
  },
  {
    "row": 427,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 428,
    "rowsha": "uAyLmcNrOnxEO9RvTH4Tf/lPBawSOz/tXkmVf4fvQwg=",
    "originContent": "**Latency** is the time to perform some action or to produce some result.",
    "translatedContent": "**विलंबता (Latency)** वह समय है जो कोई कार्य करने या कोई परिणाम उत्पन्न करने में लगता है।"
  },
  {
    "row": 429,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 430,
    "rowsha": "UXYkFqk5HnCl9VP+s6Q8J3qML8wZPfBH6SKgvNExDJY=",
    "originContent": "**Throughput** is the number of such actions or results per unit of time.",
    "translatedContent": "**थ्रूपुट (Throughput)** एक निश्चित समय में किए गए ऐसे कार्यों या परिणामों की संख्या है।"
  },
  {
    "row": 431,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 432,
    "rowsha": "ddvH5bSPUrL82qxnSSyRVDfheIpLurqnmcPqY6Fkoaw=",
    "originContent": "Generally, you should aim for **maximal throughput** with **acceptable latency**.",
    "translatedContent": "सामान्यतः, आपको **अधिकतम थ्रूपुट** के साथ **स्वीकार्य विलंबता** का लक्ष्य रखना चाहिए।"
  },
  {
    "row": 433,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 434,
    "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
    "originContent": "### Source(s) and further reading",
    "translatedContent": "### स्रोत और आगे पढ़ें"
  },
  {
    "row": 435,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 436,
    "rowsha": "1Mg+XGLcrADURPRAwJDF1FedcQn0eLdImMGtq7Aqk+o=",
    "originContent": "* [Understanding latency vs throughput](https://community.cadence.com/cadence_blogs_8/b/fv/posts/understanding-latency-vs-throughput)",
    "translatedContent": "* [विलंबता बनाम थ्रूपुट को समझना](https://community.cadence.com/cadence_blogs_8/b/fv/posts/understanding-latency-vs-throughput)"
  },
  {
    "row": 437,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 438,
    "rowsha": "u6u1s0A21U4gZ3z8N1KkPOoHCuCwd9eMuyqjlTDX6pI=",
    "originContent": "## Availability vs consistency",
    "translatedContent": "## उपलब्धता बनाम स्थिरता"
  },
  {
    "row": 439,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 440,
    "rowsha": "97t+nC0PgzkOTtQkgr6wHX3tstyuYoxvUco0kEP/bCI=",
    "originContent": "### CAP theorem",
    "translatedContent": "### CAP प्रमेय"
  },
  {
    "row": 441,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 442,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 443,
    "rowsha": "jgmIqgvDNG0HkCp5oQZz/iT86R/pkHxAeSzmaNcZxVQ=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bgLMI2u.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bgLMI2u.png\">"
  },
  {
    "row": 444,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 445,
    "rowsha": "3mZNt6MqcNn59CWaPOMoi80BHG/vsKxSIM8NxQhBFy0=",
    "originContent": "  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>Source: CAP theorem revisited</a></i>",
    "translatedContent": "  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>स्रोत: CAP प्रमेय पुनः विचार</a></i>"
  },
  {
    "row": 446,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 447,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 448,
    "rowsha": "IUMlHVhfX48rYJ/eyAKcFR60Q5UjNwbsQIrBWlm5CY0=",
    "originContent": "In a distributed computer system, you can only support two of the following guarantees:",
    "translatedContent": "एक वितरित कंप्यूटर प्रणाली में, आप केवल निम्नलिखित में से दो गारंटी ही समर्थन कर सकते हैं:"
  },
  {
    "row": 449,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 450,
    "rowsha": "4YITw6Yuz+YdKMpwQXjeVICm0gpuIDn+670bEw2eplY=",
    "originContent": "* **Consistency** - Every read receives the most recent write or an error",
    "translatedContent": "* **संगति (Consistency)** - हर रीड को सबसे हाल की राइट या एक त्रुटि प्राप्त होती है"
  },
  {
    "row": 451,
    "rowsha": "10D71q/vlDxfFvH3hmZeoYoOwmdp1DEh4AlCXMQWc1I=",
    "originContent": "* **Availability** - Every request receives a response, without guarantee that it contains the most recent version of the information",
    "translatedContent": "* **उपलब्धता (Availability)** - हर अनुरोध को एक प्रतिक्रिया मिलती है, बिना यह गारंटी कि इसमें जानकारी का सबसे हालिया संस्करण है"
  },
  {
    "row": 452,
    "rowsha": "YUbXFE9OYJbxAD3eBiqSPLjeLEqWyqBoDWeBtiJ8mtc=",
    "originContent": "* **Partition Tolerance** - The system continues to operate despite arbitrary partitioning due to network failures",
    "translatedContent": "* **विभाजन सहिष्णुता (Partition Tolerance)** - प्रणाली नेटवर्क विफलताओं के कारण मनमाने विभाजन के बावजूद संचालन जारी रखती है"
  },
  {
    "row": 453,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 454,
    "rowsha": "vnEv/Z/uqxD0L/zPXD/bCEouBXiT1NPNbGmFoAQVjWU=",
    "originContent": "*Networks aren't reliable, so you'll need to support partition tolerance.  You'll need to make a software tradeoff between consistency and availability.*",
    "translatedContent": "*नेटवर्क विश्वसनीय नहीं हैं, इसलिए आपको विभाजन सहिष्णुता का समर्थन करना होगा। आपको संगति और उपलब्धता के बीच सॉफ़्टवेयर व्यापारिक निर्णय लेना होगा।*"
  },
  {
    "row": 455,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 456,
    "rowsha": "uIlYGxCSVIcgyiDm+Vd3tc0JXkzQUs9VbyUnliQAWuA=",
    "originContent": "#### CP - consistency and partition tolerance",
    "translatedContent": "#### CP - संगति और विभाजन सहिष्णुता"
  },
  {
    "row": 457,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 458,
    "rowsha": "Wsm26i8x7ANgoLe/zCnR37/Ob3iojdAMAgKqrnblG14=",
    "originContent": "Waiting for a response from the partitioned node might result in a timeout error.  CP is a good choice if your business needs require atomic reads and writes.",
    "translatedContent": "विभाजित नोड से प्रतिक्रिया का इंतजार करना एक टाइमआउट त्रुटि का कारण बन सकता है। यदि आपके व्यापारिक आवश्यकताओं को परमाणु रीड और राइट की आवश्यकता है तो CP एक अच्छा विकल्प है।"
  },
  {
    "row": 459,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 460,
    "rowsha": "yllXZdNZSLqE7v6J1Y6482RWpgtGblEX58oa3k0eQNE=",
    "originContent": "#### AP - availability and partition tolerance",
    "translatedContent": "#### AP - उपलब्धता और विभाजन सहिष्णुता"
  },
  {
    "row": 461,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 462,
    "rowsha": "L7LPkdcITCSx/6gVeoX43CcXkc359oOep+Xd4kjzmXw=",
    "originContent": "Responses return the most readily available version of the data available on any node, which might not be the latest.  Writes might take some time to propagate when the partition is resolved.",
    "translatedContent": "प्रतिक्रियाएँ किसी भी नोड पर उपलब्ध डेटा का सबसे आसानी से उपलब्ध संस्करण लौटाती हैं, जो सबसे नया नहीं भी हो सकता है। जब विभाजन हल हो जाता है तो राइट्स के प्रचार में कुछ समय लग सकता है।"
  },
  {
    "row": 463,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 464,
    "rowsha": "Mln5JY9vdCX6s3ovkGnUqLRk6lI9+mTbPMWiqsLr7xA=",
    "originContent": "AP is a good choice if the business needs to allow for [eventual consistency](#eventual-consistency) or when the system needs to continue working despite external errors.",
    "translatedContent": "AP एक अच्छा विकल्प है यदि व्यापारिक आवश्यकताएँ [अंततः संगति](#eventual-consistency) की अनुमति देती हैं या जब प्रणाली को बाहरी त्रुटियों के बावजूद काम करना जारी रखना होता है।"
  },
  {
    "row": 465,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 466,
    "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
    "originContent": "### Source(s) and further reading",
    "translatedContent": "### स्रोत और आगे पढ़ाई"
  },
  {
    "row": 467,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 468,
    "rowsha": "bKtnRMt0x3UQXR6bFUlZ4Zjnkr+AaCv9r8Ou7/kXxx4=",
    "originContent": "* [CAP theorem revisited](http://robertgreiner.com/2014/08/cap-theorem-revisited/)",
    "translatedContent": "* [CAP प्रमेय पुनः विचार](http://robertgreiner.com/2014/08/cap-theorem-revisited/)"
  },
  {
    "row": 469,
    "rowsha": "QTokrC7zed86easKJX11/v1yiJruKlTTNm2aJxJqq88=",
    "originContent": "* [A plain english introduction to CAP theorem](http://ksat.me/a-plain-english-introduction-to-cap-theorem)",
    "translatedContent": "* [CAP प्रमेय का आसान अंग्रेजी परिचय](http://ksat.me/a-plain-english-introduction-to-cap-theorem)"
  },
  {
    "row": 470,
    "rowsha": "YJQ7Yvi1cB/F6/Vg3ZZHQC/I3rfVpxuDW2q6zmzAvTs=",
    "originContent": "* [CAP FAQ](https://github.com/henryr/cap-faq)",
    "translatedContent": "* [CAP FAQ](https://github.com/henryr/cap-faq)"
  },
  {
    "row": 471,
    "rowsha": "x0HWHwt6C3/aojIbES6hmVMqFF4OD9i/dgpZSjmo+Ts=",
    "originContent": "* [The CAP theorem](https://www.youtube.com/watch?v=k-Yaq8AHlFA)",
    "translatedContent": "* [CAP प्रमेय](https://www.youtube.com/watch?v=k-Yaq8AHlFA)"
  },
  {
    "row": 472,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 473,
    "rowsha": "g21rEtmBOHdt+MTQCrZQZVM2biDUGo45l2NssZ/ldVs=",
    "originContent": "## Consistency patterns",
    "translatedContent": "## संगति पैटर्न"
  },
  {
    "row": 474,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 475,
    "rowsha": "wp4Nz+J+6m1VKyrRrXtoHDB5VHblNuyNnmnHCgzvJHI=",
    "originContent": "With multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data.  Recall the definition of consistency from the [CAP theorem](#cap-theorem) - Every read receives the most recent write or an error.",
    "translatedContent": "एक ही डेटा की कई प्रतियों के साथ, हमारे पास विकल्प होते हैं कि उन्हें कैसे सिंक्रोनाइज़ करें ताकि क्लाइंट्स को डेटा का संगत दृश्य मिले। [CAP प्रमेय](#cap-theorem) से संगति की परिभाषा याद रखें - हर रीड को सबसे हाल की राइट या एक त्रुटि प्राप्त होती है।"
  },
  {
    "row": 476,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 477,
    "rowsha": "mQHbbEHqLiJ19yb2RHsbf9aa9Du0lnYYlq5BBzttXh4=",
    "originContent": "### Weak consistency",
    "translatedContent": "### कमजोर संगति"
  },
  {
    "row": 478,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 479,
    "rowsha": "0YCMm2EUA58zDONPNWaCCFsUz1WYFU4jQgxv1w5s8Ew=",
    "originContent": "After a write, reads may or may not see it.  A best effort approach is taken.",
    "translatedContent": "एक राइट के बाद, रीड्स उसे देख सकते हैं या नहीं भी देख सकते हैं। इसमें सर्वश्रेष्ठ प्रयास किया जाता है।"
  },
  {
    "row": 480,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 481,
    "rowsha": "H2gyDIKlIlBb2Ta4tN25gjUiCq814kY/i+1lcIXtmdI=",
    "originContent": "This approach is seen in systems such as memcached.  Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games.  For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.",
    "translatedContent": "यह दृष्टिकोण ऐसे सिस्टम्स में देखा जाता है जैसे मेमकैश्ड। कमजोर संगति वास्तविक समय के उपयोग के मामलों में अच्छी तरह काम करती है जैसे VoIP, वीडियो चैट, और रीयलटाइम मल्टीप्लेयर गेम्स। उदाहरण के लिए, यदि आप फोन कॉल पर हैं और कुछ सेकंड के लिए सिग्नल खो देते हैं, जब आप फिर से कनेक्शन प्राप्त करते हैं तो आप वह नहीं सुनते जो कनेक्शन के दौरान कहा गया था।"
  },
  {
    "row": 482,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### इवैंचुअल कंसिस्टेंसी"
  },
  {
    "row": 483,
    "rowsha": "fzWLGScmBqM9wB0hT7CvU4rZKDZBLKpoDdbx7j7LfZA=",
    "originContent": "### Eventual consistency",
    "translatedContent": ""
  },
  {
    "row": 484,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "एक लिखने (write) के बाद, पढ़ने (read) में वह अंततः दिखाई देगा (आमतौर पर मिलीसेकंड्स में)। डेटा को असिंक्रोनस रूप से दोहराया जाता है।"
  },
  {
    "row": 485,
    "rowsha": "yW8GOPM+/YqSlTSkhDuizttI6PQuWYuDvrXC1lYTGbk=",
    "originContent": "After a write, reads will eventually see it (typically within milliseconds).  Data is replicated asynchronously.",
    "translatedContent": ""
  },
  {
    "row": 486,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "यह दृष्टिकोण DNS और ईमेल जैसी प्रणालियों में देखा जाता है। इवैंचुअल कंसिस्टेंसी उच्च उपलब्धता वाली प्रणालियों में अच्छी तरह काम करती है।"
  },
  {
    "row": 487,
    "rowsha": "O4vKK25rQgniSTeaE3xOqV2OAsBimVdMLXXAO6PEJ8M=",
    "originContent": "This approach is seen in systems such as DNS and email.  Eventual consistency works well in highly available systems.",
    "translatedContent": ""
  },
  {
    "row": 488,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### स्ट्रॉन्ग कंसिस्टेंसी"
  },
  {
    "row": 489,
    "rowsha": "7EGR06HbKmQeQKXBQlQDAklNjEvD1t9htWKMJHDa7HE=",
    "originContent": "### Strong consistency",
    "translatedContent": ""
  },
  {
    "row": 490,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "एक लिखने के बाद, पढ़ने में वह दिखाई देगा। डेटा को सिंक्रोनस रूप से दोहराया जाता है।"
  },
  {
    "row": 491,
    "rowsha": "Ws8TjZacSVHsFMdg3xbZJn0k20kTCNn8mhkD9dqLoXI=",
    "originContent": "After a write, reads will see it.  Data is replicated synchronously.",
    "translatedContent": ""
  },
  {
    "row": 492,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "यह दृष्टिकोण फाइल सिस्टम और RDBMS में देखा जाता है। स्ट्रॉन्ग कंसिस्टेंसी उन प्रणालियों में अच्छी तरह काम करती है जिन्हें ट्रांजैक्शन्स की आवश्यकता होती है।"
  },
  {
    "row": 493,
    "rowsha": "x3hEsG+pr3l5I68fcG+HHPdnUxfljYdogX6hXYhutxE=",
    "originContent": "This approach is seen in file systems and RDBMSes.  Strong consistency works well in systems that need transactions.",
    "translatedContent": ""
  },
  {
    "row": 494,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### स्रोत और आगे पढ़ें"
  },
  {
    "row": 495,
    "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
    "originContent": "### Source(s) and further reading",
    "translatedContent": ""
  },
  {
    "row": 496,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* [डेटा सेंटर्स में ट्रांजैक्शन्स](http://snarfed.org/transactions_across_datacenters_io.html)"
  },
  {
    "row": 497,
    "rowsha": "32vF4B1SjjeoG7B+GNuO+NRikiz25/Vf+F71/ZqQh2s=",
    "originContent": "* [Transactions across data centers](http://snarfed.org/transactions_across_datacenters_io.html)",
    "translatedContent": ""
  },
  {
    "row": 498,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## उपलब्धता पैटर्न्स"
  },
  {
    "row": 499,
    "rowsha": "j7+7CA8jUmk4jYZ0E5futxtzO0GG0wexr61V+kwnDlo=",
    "originContent": "## Availability patterns",
    "translatedContent": ""
  },
  {
    "row": 500,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "उच्च उपलब्धता को समर्थन देने के लिए दो पूरक पैटर्न्स हैं: **फेल-ओवर** और **रिप्लिकेशन**।"
  },
  {
    "row": 501,
    "rowsha": "oKl9q1hfWZxeIEYaWU74Tk2omlmcOjUb8hfb0RMpq6o=",
    "originContent": "There are two complementary patterns to support high availability: **fail-over** and **replication**.",
    "translatedContent": ""
  },
  {
    "row": 502,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### फेल-ओवर"
  },
  {
    "row": 503,
    "rowsha": "zwpUQRugriEEZ455A69maz0G/11aeFh/9iaYoj3DsJc=",
    "originContent": "### Fail-over",
    "translatedContent": ""
  },
  {
    "row": 504,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### एक्टिव-पैसिव"
  },
  {
    "row": 505,
    "rowsha": "zE3LvlgviFo+XBZAZAqjKSLk7MfN4jmwoumi1UlyIa0=",
    "originContent": "#### Active-passive",
    "translatedContent": ""
  },
  {
    "row": 506,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "एक्टिव-पैसिव फेल-ओवर में, एक्टिव और स्टैंडबाय पर मौजूद पैसिव सर्वर के बीच हार्टबीट भेजी जाती है। यदि हार्टबीट बाधित हो जाती है, तो पैसिव सर्वर एक्टिव का आईपी पता ले लेता है और सेवा फिर से शुरू कर देता है।"
  },
  {
    "row": 507,
    "rowsha": "//sOLPwoYJI8jgHSbsAsOUF9gzxIFEIei6IS0GWBfZ0=",
    "originContent": "With active-passive fail-over, heartbeats are sent between the active and the passive server on standby.  If the heartbeat is interrupted, the passive server takes over the active's IP address and resumes service.",
    "translatedContent": ""
  },
  {
    "row": 508,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "डाउनटाइम की अवधि इस बात पर निर्भर करती है कि पैसिव सर्वर पहले से 'हॉट' स्टैंडबाय में चल रहा है या 'कोल्ड' स्टैंडबाय से स्टार्ट होना है। केवल एक्टिव सर्वर ही ट्रैफिक को संभालता है।"
  },
  {
    "row": 509,
    "rowsha": "Z2h13M2s42WWdrw6RJxNKTHsPDklH4Fx5eTWjuFV5Bo=",
    "originContent": "The length of downtime is determined by whether the passive server is already running in 'hot' standby or whether it needs to start up from 'cold' standby.  Only the active server handles traffic.",
    "translatedContent": ""
  },
  {
    "row": 510,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "एक्टिव-पैसिव फेल-ओवर को मास्टर-स्लेव फेल-ओवर भी कहा जा सकता है।"
  },
  {
    "row": 511,
    "rowsha": "0qoq8w7ykvY04YVXf36ZuA34YfapuItNmEB3ol+8l2o=",
    "originContent": "Active-passive failover can also be referred to as master-slave failover.",
    "translatedContent": ""
  },
  {
    "row": 512,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### एक्टिव-एक्टिव"
  },
  {
    "row": 513,
    "rowsha": "K5pPe/DWSECNKm/vr2APrIh+FQBpXl5wCTq5GfFI0nc=",
    "originContent": "#### Active-active",
    "translatedContent": ""
  },
  {
    "row": 514,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "एक्टिव-एक्टिव में, दोनों सर्वर ट्रैफिक को संभाल रहे होते हैं, और लोड को आपस में बांटते हैं।"
  },
  {
    "row": 515,
    "rowsha": "ueX7Dtxa+tFk3JS2osj1y4rQ8v6tNL3jYtk74TPZYQw=",
    "originContent": "In active-active, both servers are managing traffic, spreading the load between them.",
    "translatedContent": ""
  },
  {
    "row": 516,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "यदि सर्वर सार्वजनिक हैं, तो DNS को दोनों सर्वरों के सार्वजनिक आईपी के बारे में पता होना चाहिए। यदि सर्वर आंतरिक हैं, तो एप्लिकेशन लॉजिक को दोनों सर्वरों की जानकारी होनी चाहिए।"
  },
  {
    "row": 517,
    "rowsha": "Z2+DcHoSHBy7EwRU0PxECoKfN73rdN4LlzYN18oUNC4=",
    "originContent": "If the servers are public-facing, the DNS would need to know about the public IPs of both servers.  If the servers are internal-facing, application logic would need to know about both servers.",
    "translatedContent": ""
  },
  {
    "row": 518,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "एक्टिव-एक्टिव फेल-ओवर को मास्टर-मास्टर फेल-ओवर भी कहा जा सकता है।"
  },
  {
    "row": 519,
    "rowsha": "HZeAIhcdCZV5uNs5qKLp+uGpV5bJaLx0oTMfaP4SY6A=",
    "originContent": "Active-active failover can also be referred to as master-master failover.",
    "translatedContent": ""
  },
  {
    "row": 520,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### नुकसान: फेल-ओवर"
  },
  {
    "row": 521,
    "rowsha": "RWOekJmT9YbEvwdNPTswoki1IsKTYJsDCifIo6/YkRo=",
    "originContent": "### Disadvantage(s): failover",
    "translatedContent": ""
  },
  {
    "row": 522,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* फेल-ओवर अतिरिक्त हार्डवेयर और अतिरिक्त जटिलता जोड़ता है।"
  },
  {
    "row": 523,
    "rowsha": "CqXi6vzg9j59CHyL4xe27TEVhTRrc7cbxfpUzOHpWYw=",
    "originContent": "* Fail-over adds more hardware and additional complexity.",
    "translatedContent": "* यदि सक्रिय सिस्टम विफल हो जाता है तो डेटा की हानि की संभावना होती है, खासकर जब कोई नया डेटा निष्क्रिय सिस्टम में दोहराया नहीं गया हो।"
  },
  {
    "row": 524,
    "rowsha": "eGTsRaJOuHmTWdjNeBa2CHLtmWLaSh5BnevPfBmOeJM=",
    "originContent": "* There is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.",
    "translatedContent": ""
  },
  {
    "row": 525,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### प्रतिकृति (Replication)"
  },
  {
    "row": 526,
    "rowsha": "4K5dwxkOA5wbk7sYlTLb2yj4mVqhb/pvixuIjBDstIQ=",
    "originContent": "### Replication",
    "translatedContent": ""
  },
  {
    "row": 527,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### मास्टर-स्लेव और मास्टर-मास्टर"
  },
  {
    "row": 528,
    "rowsha": "fZEStNfIoL9uMNDUbzk47uD67gGF+8vm9BXvyfbjZbw=",
    "originContent": "#### Master-slave and master-master",
    "translatedContent": ""
  },
  {
    "row": 529,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "इस विषय पर [डेटाबेस](#database) अनुभाग में विस्तार से चर्चा की गई है:"
  },
  {
    "row": 530,
    "rowsha": "Av7q+EkMsj599unhnzolG9jvpsUe0YsdlCznVgjwo0s=",
    "originContent": "This topic is further discussed in the [Database](#database) section:",
    "translatedContent": ""
  },
  {
    "row": 531,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* [मास्टर-स्लेव प्रतिकृति](#master-slave-replication)"
  },
  {
    "row": 532,
    "rowsha": "SA3nlUBsaWhuYXnyYlWDZbLK+51HD2tbupezRC7X2hI=",
    "originContent": "* [Master-slave replication](#master-slave-replication)",
    "translatedContent": "* [मास्टर-मास्टर प्रतिकृति](#master-master-replication)"
  },
  {
    "row": 533,
    "rowsha": "W2fFMZ82YalJ0easRaSk/To8mGSonyvxYNWaFcfX6V0=",
    "originContent": "* [Master-master replication](#master-master-replication)",
    "translatedContent": ""
  },
  {
    "row": 534,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### उपलब्धता संख्याओं में"
  },
  {
    "row": 535,
    "rowsha": "atVZb+BfI7TM1RhOEfzMxNS+ZdZ4+NImuBUCcCBqCG4=",
    "originContent": "### Availability in numbers",
    "translatedContent": ""
  },
  {
    "row": 536,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "उपलब्धता को अक्सर अपटाइम (या डाउनटाइम) के प्रतिशत के रूप में मापा जाता है कि सेवा कितने समय तक उपलब्ध है। उपलब्धता को आमतौर पर 9 की संख्या में मापा जाता है—99.99% उपलब्धता वाली सेवा को चार 9 वाली सेवा कहा जाता है।"
  },
  {
    "row": 537,
    "rowsha": "Am0f64EGQkWXK+ft673uELRD3uwOLbqfoe14w7nKkZ4=",
    "originContent": "Availability is often quantified by uptime (or downtime) as a percentage of time the service is available.  Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.",
    "translatedContent": ""
  },
  {
    "row": 538,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### 99.9% उपलब्धता - तीन 9"
  },
  {
    "row": 539,
    "rowsha": "I3yIi2rYdyymyC5foh4MJFlGximHnF9E1NppPl7AgYk=",
    "originContent": "#### 99.9% availability - three 9s",
    "translatedContent": ""
  },
  {
    "row": 540,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "| अवधि                 | स्वीकार्य डाउनटाइम|"
  },
  {
    "row": 541,
    "rowsha": "WtpvnLjcMkNnN2EE2b3LI08oDneHj2KbzQSCbgXo6Hg=",
    "originContent": "| Duration            | Acceptable downtime|",
    "translatedContent": "|---------------------|--------------------|"
  },
  {
    "row": 542,
    "rowsha": "dNHX42cgUDO29VoFw6hieeObZ7C+S6t5B5f9tekwjmc=",
    "originContent": "|---------------------|--------------------|",
    "translatedContent": "| सालाना डाउनटाइम     | 8घंटा 45मिनट 57सेकंड|"
  },
  {
    "row": 543,
    "rowsha": "5MDGDdfbHznP7KIJhmO2QAb2NzjkNZ0T/gNrbLRbL9o=",
    "originContent": "| Downtime per year   | 8h 45min 57s       |",
    "translatedContent": "| मासिक डाउनटाइम      | 43मिनट 49.7सेकंड    |"
  },
  {
    "row": 544,
    "rowsha": "04BUDzQ37NhJQUU65gxgjPmdnS8HaXuLhiI2EkTLLd4=",
    "originContent": "| Downtime per month  | 43m 49.7s          |",
    "translatedContent": "| साप्ताहिक डाउनटाइम  | 10मिनट 4.8सेकंड     |"
  },
  {
    "row": 545,
    "rowsha": "GFTVysJcBOB9soeZpXAIpyR9pLbghp3VppIpy3EWrTs=",
    "originContent": "| Downtime per week   | 10m 4.8s           |",
    "translatedContent": "| दैनिक डाउनटाइम      | 1मिनट 26.4सेकंड     |"
  },
  {
    "row": 546,
    "rowsha": "J0YocIstb2J6pSDKtUDNQHW0icPpnMHt/vioNxOwxlE=",
    "originContent": "| Downtime per day    | 1m 26.4s           |",
    "translatedContent": ""
  },
  {
    "row": 547,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### 99.99% उपलब्धता - चार 9"
  },
  {
    "row": 548,
    "rowsha": "3rrv1Js1yLQjioaOahOLWwXiJs7ka/w5gyWkFgffq34=",
    "originContent": "#### 99.99% availability - four 9s",
    "translatedContent": ""
  },
  {
    "row": 549,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "| अवधि                 | स्वीकार्य डाउनटाइम|"
  },
  {
    "row": 550,
    "rowsha": "WtpvnLjcMkNnN2EE2b3LI08oDneHj2KbzQSCbgXo6Hg=",
    "originContent": "| Duration            | Acceptable downtime|",
    "translatedContent": "|---------------------|--------------------|"
  },
  {
    "row": 551,
    "rowsha": "dNHX42cgUDO29VoFw6hieeObZ7C+S6t5B5f9tekwjmc=",
    "originContent": "|---------------------|--------------------|",
    "translatedContent": "| सालाना डाउनटाइम     | 52मिनट 35.7सेकंड    |"
  },
  {
    "row": 552,
    "rowsha": "+lzPnt4t6YVMkw+14dcMepWXtyKwQA+KT8slwXqdlw8=",
    "originContent": "| Downtime per year   | 52min 35.7s        |",
    "translatedContent": "| मासिक डाउनटाइम      | 4मिनट 23सेकंड       |"
  },
  {
    "row": 553,
    "rowsha": "cyIXC9j4x5CIkyJm+FJhwCE9yJhQG4FZIDB+3sQGr88=",
    "originContent": "| Downtime per month  | 4m 23s             |",
    "translatedContent": "| साप्ताहिक डाउनटाइम  | 1मिनट 5सेकंड        |"
  },
  {
    "row": 554,
    "rowsha": "s2V+GE82uucvBDH8c5v8jWNv6h5mT6bvPyxOP85fFls=",
    "originContent": "| Downtime per week   | 1m 5s              |",
    "translatedContent": "| दैनिक डाउनटाइम      | 8.6सेकंड            |"
  },
  {
    "row": 555,
    "rowsha": "n36aeJpcdhikvDDEMXRpmhf1u0M0mjhd6sdHfuRNeX0=",
    "originContent": "| Downtime per day    | 8.6s               |",
    "translatedContent": ""
  },
  {
    "row": 556,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### समानांतर बनाम अनुक्रम में उपलब्धता"
  },
  {
    "row": 557,
    "rowsha": "1lBPemP1eX9L7+SxFKkGrb/Hq6633g7fsEkDgd36mAk=",
    "originContent": "#### Availability in parallel vs in sequence",
    "translatedContent": ""
  },
  {
    "row": 558,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "यदि किसी सेवा में कई घटक होते हैं जो विफल हो सकते हैं, तो सेवा की कुल उपलब्धता इस बात पर निर्भर करती है कि घटक अनुक्रम में हैं या समानांतर में।"
  },
  {
    "row": 559,
    "rowsha": "/VxXhtl3F6SXgtrPj9Kzl2H/+XrS0Sqeu03gzyr6wDE=",
    "originContent": "If a service consists of multiple components prone to failure, the service's overall availability depends on whether the components are in sequence or in parallel.",
    "translatedContent": ""
  },
  {
    "row": 560,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "###### अनुक्रम में"
  },
  {
    "row": 561,
    "rowsha": "HVfQgp4NNWDL/4e4EVnj8OD/aGrYSMIlsj8F1jgCfi4=",
    "originContent": "###### In sequence",
    "translatedContent": ""
  },
  {
    "row": 562,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "जब दो घटक जिनकी उपलब्धता < 100% है, अनुक्रम में होते हैं तो समग्र उपलब्धता कम हो जाती है:"
  },
  {
    "row": 563,
    "rowsha": "sAu1j1dmf0qL9TE2b1uG7pg1al1cDmHdRW96gsk8xPg=",
    "originContent": "Overall availability decreases when two components with availability < 100% are in sequence:",
    "translatedContent": ""
  },
  {
    "row": 564,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 565,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 566,
    "rowsha": "ujn1b+AHDyswPbA7zS8UmPllNJM4sOawWcrGYJ4rZ0A=",
    "originContent": "Availability (Total) = Availability (Foo) * Availability (Bar)",
    "translatedContent": "Availability (Total) = Availability (Foo) * Availability (Bar)"
  },
  {
    "row": 567,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 568,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 569,
    "rowsha": "ZQn0BZzlJ+UR+I1y3I6cKEeMD1zD7iiuU8/3fLb4K3w=",
    "originContent": "If both `Foo` and `Bar` each had 99.9% availability, their total availability in sequence would be 99.8%.",
    "translatedContent": "यदि `Foo` और `Bar` दोनों की उपलब्धता 99.9% है, तो अनुक्रम में उनकी कुल उपलब्धता 99.8% होगी।"
  },
  {
    "row": 570,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 571,
    "rowsha": "9hcGr5rXFEwBAbYXZ7c8V5UAPMJii8tZnd7JMK7PowU=",
    "originContent": "###### In parallel",
    "translatedContent": "###### समानांतर में"
  },
  {
    "row": 572,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 573,
    "rowsha": "hh78B11N/veJv3y1/p+NOj4bRGWwYJVLPH6NJ5Dp5Ao=",
    "originContent": "Overall availability increases when two components with availability < 100% are in parallel:",
    "translatedContent": "जब दो घटक जिनकी उपलब्धता < 100% है, समानांतर में होते हैं तो कुल उपलब्धता बढ़ जाती है:"
  },
  {
    "row": 574,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 575,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 576,
    "rowsha": "OAzcShtWVHCVepnZrS+WxSpftaJ7IoW7YnmDfRwUs4w=",
    "originContent": "Availability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))",
    "translatedContent": "Availability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))"
  },
  {
    "row": 577,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 578,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "यदि दोनों `Foo` और `Bar` की उपलब्धता 99.9% हो, तो उनकी कुल उपलब्धता पैरेलल में 99.9999% होगी।"
  },
  {
    "row": 579,
    "rowsha": "wEjBbUe0Tw7vSUDMwpwueoCi2fzQBeD1YRy3BNYCPAw=",
    "originContent": "If both `Foo` and `Bar` each had 99.9% availability, their total availability in parallel would be 99.9999%.",
    "translatedContent": ""
  },
  {
    "row": 580,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## डोमेन नाम प्रणाली"
  },
  {
    "row": 581,
    "rowsha": "Cx+spnnlT0zDhHJXINRwtDBG3hDsFeU9IVBvJdgafbw=",
    "originContent": "## Domain name system",
    "translatedContent": ""
  },
  {
    "row": 582,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 583,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/IOyLj4i.jpg\">"
  },
  {
    "row": 584,
    "rowsha": "khQ8Xi6IZA/4nZ9NdWqbAoLb6BDXur2KZ7Gz9esREjc=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/IOyLj4i.jpg\">",
    "translatedContent": "  <br/>"
  },
  {
    "row": 585,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>स्रोत: DNS सुरक्षा प्रस्तुति</a></i>"
  },
  {
    "row": 586,
    "rowsha": "XOuXqRofYk954ZXtnfuXu1IYf0iz3a0CbYw4UaF2oRI=",
    "originContent": "  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>Source: DNS security presentation</a></i>",
    "translatedContent": "</p>"
  },
  {
    "row": 587,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": ""
  },
  {
    "row": 588,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "डोमेन नाम प्रणाली (DNS) एक डोमेन नाम जैसे www.example.com को IP पता में बदलती है।"
  },
  {
    "row": 589,
    "rowsha": "xOzNN1uYrR3gW6N/f994r2OaY+WGigANgTblFfo6/eQ=",
    "originContent": "A Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.",
    "translatedContent": ""
  },
  {
    "row": 590,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "DNS पदानुक्रमिक है, जिसके शीर्ष स्तर पर कुछ अधिकृत सर्वर होते हैं। आपका राउटर या ISP यह जानकारी देता है कि खोज के समय किस DNS सर्वर(सर्वरों) से संपर्क करना है। निम्न स्तर के DNS सर्वर मैपिंग को कैश करते हैं, जो DNS प्रचार विलंब के कारण पुराना हो सकता है। DNS परिणाम आपके ब्राउज़र या OS द्वारा भी एक निश्चित समय के लिए कैश किए जा सकते हैं, जो [टाइम टू लाइव (TTL)](https://en.wikipedia.org/wiki/Time_to_live) द्वारा निर्धारित होता है।"
  },
  {
    "row": 591,
    "rowsha": "9J3zqU+zpPRpz4vKc9lf2QHcvP2IwE0rlm6Uwa7GnrY=",
    "originContent": "DNS is hierarchical, with a few authoritative servers at the top level.  Your router or ISP provides information about which DNS server(s) to contact when doing a lookup.  Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays.  DNS results can also be cached by your browser or OS for a certain period of time, determined by the [time to live (TTL)](https://en.wikipedia.org/wiki/Time_to_live).",
    "translatedContent": ""
  },
  {
    "row": 592,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* **NS रिकॉर्ड (नेम सर्वर)** - आपके डोमेन/सबडोमेन के लिए DNS सर्वरों को निर्दिष्ट करता है।"
  },
  {
    "row": 593,
    "rowsha": "Br0DkfzyjGkzSi8akOKSXazpXUF3LVY4zL9wkK7gBgk=",
    "originContent": "* **NS record (name server)** - Specifies the DNS servers for your domain/subdomain.",
    "translatedContent": "* **MX रिकॉर्ड (मेल एक्सचेंज)** - संदेश स्वीकार करने के लिए मेल सर्वरों को निर्दिष्ट करता है।"
  },
  {
    "row": 594,
    "rowsha": "CX76Bn4rID1Y8BBFXOXFb6ekY6mlxUYNcCi+CKhNa0s=",
    "originContent": "* **MX record (mail exchange)** - Specifies the mail servers for accepting messages.",
    "translatedContent": "* **A रिकॉर्ड (पता)** - नाम को IP पते से जोड़ता है।"
  },
  {
    "row": 595,
    "rowsha": "d/he/sZ62q7m2wjCaov8wwtaX53pioHSPSNd1w9ANmU=",
    "originContent": "* **A record (address)** - Points a name to an IP address.",
    "translatedContent": "* **CNAME (कैनोनिकल)** - नाम को दूसरे नाम या `CNAME` (example.com से www.example.com) या किसी `A` रिकॉर्ड से जोड़ता है।"
  },
  {
    "row": 596,
    "rowsha": "6OC2ZT8D6FLEFTOkwKnqT5UOejeAoGs5l05q+4jXmpc=",
    "originContent": "* **CNAME (canonical)** - Points a name to another name or `CNAME` (example.com to www.example.com) or to an `A` record.",
    "translatedContent": ""
  },
  {
    "row": 597,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "[CloudFlare](https://www.cloudflare.com/dns/) और [Route 53](https://aws.amazon.com/route53/) जैसी सेवाएं प्रबंधित DNS सेवाएं प्रदान करती हैं। कुछ DNS सेवाएं विभिन्न तरीकों से ट्रैफ़िक रूट कर सकती हैं:"
  },
  {
    "row": 598,
    "rowsha": "l4f3FoQaKwMWBZa+tTdRV1n7X/wSp1wfMG+NKowv+MA=",
    "originContent": "Services such as [CloudFlare](https://www.cloudflare.com/dns/) and [Route 53](https://aws.amazon.com/route53/) provide managed DNS services.  Some DNS services can route traffic through various methods:",
    "translatedContent": ""
  },
  {
    "row": 599,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* [वेटेड राउंड रॉबिन](https://www.jscape.com/blog/load-balancing-algorithms)"
  },
  {
    "row": 600,
    "rowsha": "3O5SyVIA03wkwtzQV1Yvf5CWn7Wu0wveSkQniwAr9iI=",
    "originContent": "* [Weighted round robin](https://www.jscape.com/blog/load-balancing-algorithms)",
    "translatedContent": "    * रखरखाव में चल रहे सर्वरों को ट्रैफ़िक जाने से रोकना"
  },
  {
    "row": 601,
    "rowsha": "sJWpY/yHNL4vWsYngx0qmNb+qxax5uSjNfUCOqOE5lU=",
    "originContent": "    * Prevent traffic from going to servers under maintenance",
    "translatedContent": "    * विभिन्न क्लस्टर आकारों के बीच संतुलन"
  },
  {
    "row": 602,
    "rowsha": "aZ1fZAKjjMQZnK0SM78pQGfIy5Ji83U/70lZmZxXnvU=",
    "originContent": "    * Balance between varying cluster sizes",
    "translatedContent": "    * A/B परीक्षण"
  },
  {
    "row": 603,
    "rowsha": "Dm+B5ng2i+Y+vVp3floYlwo/4xywDQMiYaYFNgxt6oE=",
    "originContent": "    * A/B testing",
    "translatedContent": "* [लेटेंसी आधारित](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-latency.html)"
  },
  {
    "row": 604,
    "rowsha": "s0wgllkGZ8Vytg35SPbVMDAa0szgXKMJaA4SBc64Xps=",
    "originContent": "* [Latency-based](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-latency.html)",
    "translatedContent": "* [जियोलोकेशन आधारित](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html)"
  },
  {
    "row": 605,
    "rowsha": "CWZwm8/avAyJWuHCVKGEkgryk///eLTSSag71l4AOUc=",
    "originContent": "* [Geolocation-based](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html)",
    "translatedContent": ""
  },
  {
    "row": 606,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### नुकसान: DNS"
  },
  {
    "row": 607,
    "rowsha": "8Iw7my67UAJA2fhwTvzxZOJpRfsJVMOV13mbygxEwWQ=",
    "originContent": "### Disadvantage(s): DNS",
    "translatedContent": ""
  },
  {
    "row": 608,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* DNS सर्वर तक पहुँचने में थोड़ा विलंब होता है, जिसे ऊपर वर्णित कैशिंग द्वारा कम किया जा सकता है।"
  },
  {
    "row": 609,
    "rowsha": "nT+xRWbm49UnjIb4nmPOJCHinYF6gUS6FJe0hu4U1H0=",
    "originContent": "* Accessing a DNS server introduces a slight delay, although mitigated by caching described above.",
    "translatedContent": "* DNS सर्वर प्रबंधन जटिल हो सकता है और आमतौर पर [सरकारों, ISP और बड़ी कंपनियों](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729) द्वारा प्रबंधित किया जाता है।"
  },
  {
    "row": 610,
    "rowsha": "Lm1EuZ2VZ+/wXYMNNySEZcZip/oihpL8YSsnmzn657A=",
    "originContent": "* DNS server management could be complex and is generally managed by [governments, ISPs, and large companies](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729).",
    "translatedContent": "* हाल ही में DNS सेवाओं पर [DDoS हमला](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/) हुआ है, जिससे उपयोगकर्ता Twitter जैसी वेबसाइटों तक नहीं पहुँच पाए, जब तक कि उन्हें Twitter के IP पते न पता हों।"
  },
  {
    "row": 611,
    "rowsha": "0JaShHu4q5yi3GVpo06kijQ/uoe+sfyN9EcUWHnzgB0=",
    "originContent": "* DNS services have recently come under [DDoS attack](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/), preventing users from accessing websites such as Twitter without knowing Twitter's IP address(es).",
    "translatedContent": ""
  },
  {
    "row": 612,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### स्रोत एवं आगे पढ़ें"
  },
  {
    "row": 613,
    "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
    "originContent": "### Source(s) and further reading",
    "translatedContent": ""
  },
  {
    "row": 614,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* [DNS वास्तुकला](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)"
  },
  {
    "row": 615,
    "rowsha": "+ML0oXJw4+WTRYkvmcmCQC1DOMIjL6u8YZT2EjFqImg=",
    "originContent": "* [DNS architecture](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)",
    "translatedContent": "* [विकिपीडिया](https://en.wikipedia.org/wiki/Domain_Name_System)"
  },
  {
    "row": 616,
    "rowsha": "8tdw+ABrJXO6H/klqRgsAXpZQ+Nh5d7f8pvTam1Qg8E=",
    "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Domain_Name_System)",
    "translatedContent": "* [DNS लेख](https://support.dnsimple.com/categories/dns/)"
  },
  {
    "row": 617,
    "rowsha": "Ch1/V6QuJ6pG8HrCFX9gUwEagBr1U4WO1gWanHN+sKk=",
    "originContent": "* [DNS articles](https://support.dnsimple.com/categories/dns/)",
    "translatedContent": ""
  },
  {
    "row": 618,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## कंटेंट डिलीवरी नेटवर्क"
  },
  {
    "row": 619,
    "rowsha": "5lKlmSan5gCRz0WvVAvW++KQV+W6+zLCMJITTKQwtiI=",
    "originContent": "## Content delivery network",
    "translatedContent": ""
  },
  {
    "row": 620,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 621,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h9TAuGI.jpg\">"
  },
  {
    "row": 622,
    "rowsha": "QPrVyAutZM7eFWLgnkbLJPwGIcbIUBhGZcP7JNSYz+4=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h9TAuGI.jpg\">",
    "translatedContent": "  <br/>"
  },
  {
    "row": 623,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>स्रोत: CDN का उपयोग क्यों करें</a></i>"
  },
  {
    "row": 624,
    "rowsha": "75nxwalyvA6d9E1q9P3BKUFN4nOCeHiml3BhCEoEKXc=",
    "originContent": "  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>Source: Why use a CDN</a></i>",
    "translatedContent": "</p>"
  },
  {
    "row": 625,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": ""
  },
  {
    "row": 626,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "एक कंटेंट डिलीवरी नेटवर्क (CDN) प्रॉक्सी सर्वरों का वैश्विक रूप से वितरित नेटवर्क है, जो उपयोगकर्ता के करीब स्थानों से कंटेंट प्रदान करता है। आमतौर पर, स्थैतिक फाइलें जैसे HTML/CSS/JS, फोटो और वीडियो CDN से सर्व होती हैं, हालांकि कुछ CDN जैसे अमेज़न का CloudFront डायनामिक कंटेंट को भी सपोर्ट करते हैं। साइट का DNS रेज़ॉल्यूशन क्लाइंट्स को बताएगा कि किस सर्वर से संपर्क करें।"
  },
  {
    "row": 627,
    "rowsha": "1wQ2Wo5vQd3vgQ8MaldgFj9KGucbPwxgiK4md+hIsug=",
    "originContent": "A content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user.  Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content.  The site's DNS resolution will tell clients which server to contact.",
    "translatedContent": ""
  },
  {
    "row": 628,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "CDN से कंटेंट सर्व करने से प्रदर्शन दो तरीकों से काफी बेहतर हो सकता है:"
  },
  {
    "row": 629,
    "rowsha": "am4LgQWzQnt20ZLrmCjs+WWtVFIS0s4mcH7YNNZ5rnw=",
    "originContent": "Serving content from CDNs can significantly improve performance in two ways:",
    "translatedContent": ""
  },
  {
    "row": 630,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* उपयोगकर्ता को डेटा सेंटर से कंटेंट मिलता है जो उनके करीब होता है"
  },
  {
    "row": 631,
    "rowsha": "+0MrXq5c0J3VnUanm3+XDiisSVHg6pxz8NZU6DeHcc4=",
    "originContent": "* Users receive content from data centers close to them",
    "translatedContent": "* आपके सर्वरों को उन रिक्वेस्ट्स को सर्व नहीं करना पड़ता जिन्हें CDN पूरा करता है"
  },
  {
    "row": 632,
    "rowsha": "vhcY3e5KeVANXXomwmhdI2LOP3GssyCCk2h1REQKEI4=",
    "originContent": "* Your servers do not have to serve requests that the CDN fulfills",
    "translatedContent": ""
  },
  {
    "row": 633,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### पुश CDN"
  },
  {
    "row": 634,
    "rowsha": "d05gEhAo1g83hyIfrjshKeKehC5TdcwQrD1mB1VKutU=",
    "originContent": "### Push CDNs",
    "translatedContent": ""
  },
  {
    "row": 635,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "पुश CDN आपके सर्वर पर बदलाव होते ही नया कंटेंट प्राप्त करता है। आप कंटेंट प्रदान करने की पूरी जिम्मेदारी लेते हैं, सीधे CDN पर अपलोड करते हैं और URL को CDN की ओर इंगित करने के लिए री-राइट करते हैं। आप नियंत्रित कर सकते हैं कि कंटेंट कब एक्सपायर हो और कब अपडेट हो। कंटेंट केवल तब अपलोड होता है जब वह नया या बदला हुआ हो, जिससे ट्रैफिक कम होता है, लेकिन स्टोरेज अधिकतम होती है।"
  },
  {
    "row": 636,
    "rowsha": "o6zabJRTy3eEsUXkTknbbPspI+/JD004vUVhB/GrmvU=",
    "originContent": "Push CDNs receive new content whenever changes occur on your server.  You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.  You can configure when content expires and when it is updated.  Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.",
    "translatedContent": ""
  },
  {
    "row": 637,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "कम ट्रैफिक वाली साइट्स या ऐसी साइट्स जिनका कंटेंट अक्सर अपडेट नहीं होता, पुश CDN के साथ अच्छी तरह काम करती हैं। कंटेंट एक बार CDN पर रखा जाता है, बजाय इसके कि नियमित अंतराल पर बार-बार खींचा जाए।"
  },
  {
    "row": 638,
    "rowsha": "9HPOA+/D7F7Zml3fiMZFn0RX/J5spBp+TBz0yOWX+eU=",
    "originContent": "Sites with a small amount of traffic or sites with content that isn't often updated work well with push CDNs.  Content is placed on the CDNs once, instead of being re-pulled at regular intervals.",
    "translatedContent": ""
  },
  {
    "row": 639,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### पुल CDN"
  },
  {
    "row": 640,
    "rowsha": "rlKkUhBfyXtU6L8ngGRgLos/XW4En94v4hW8fAVxlM8=",
    "originContent": "### Pull CDNs",
    "translatedContent": ""
  },
  {
    "row": 641,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "पुल CDN आपके सर्वर से नया कंटेंट तब प्राप्त करता है जब पहला उपयोगकर्ता उस कंटेंट की मांग करता है। आप कंटेंट अपने सर्वर पर ही रखते हैं और URLs को CDN की ओर इंगित करने के लिए री-राइट करते हैं। इससे पहली बार अनुरोध थोड़ा धीमा होता है जब तक कि कंटेंट CDN पर कैश नहीं हो जाता।"
  },
  {
    "row": 642,
    "rowsha": "f5nDh+mtRk18xVC+AkX5YGskThI7zZH0RAc3cUWAIIU=",
    "originContent": "Pull CDNs grab new content from your server when the first user requests the content.  You leave the content on your server and rewrite URLs to point to the CDN.  This results in a slower request until the content is cached on the CDN.",
    "translatedContent": ""
  },
  {
    "row": 643,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "एक [टाइम-टू-लिव (TTL)](https://en.wikipedia.org/wiki/Time_to_live) यह निर्धारित करता है कि कंटेंट कितने समय तक कैश रहेगा। पुल CDN CDN पर स्टोरेज स्पेस को कम करता है, लेकिन यदि फाइलें एक्सपायर हो जाती हैं और वे वास्तव में बदलने से पहले पुनः खींच ली जाती हैं तो यह अनावश्यक ट्रैफिक उत्पन्न कर सकता है।"
  },
  {
    "row": 644,
    "rowsha": "sw7RyG/aVRLAF5q2GDfO4iYkNO4GQVZWMHlN4wQjrPA=",
    "originContent": "A [time-to-live (TTL)](https://en.wikipedia.org/wiki/Time_to_live) determines how long content is cached.  Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.",
    "translatedContent": ""
  },
  {
    "row": 645,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "भारी ट्रैफिक वाली साइट्स पुल CDN के साथ अच्छी तरह काम करती हैं, क्योंकि ट्रैफिक अधिक समान रूप से फैल जाता है और केवल हाल ही में अनुरोधित कंटेंट ही CDN पर रहता है।"
  },
  {
    "row": 646,
    "rowsha": "6tiL8DieeTn9STiFOYH1IgBezFTTgAQr1AG0+UPFCmM=",
    "originContent": "Sites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.",
    "translatedContent": ""
  },
  {
    "row": 647,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### नुकसान: CDN"
  },
  {
    "row": 648,
    "rowsha": "JjS5m8aFMZixw6364EVTGRj86cBb3SuygVv1OeD3KFQ=",
    "originContent": "### Disadvantage(s): CDN",
    "translatedContent": ""
  },
  {
    "row": 649,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* ट्रैफिक के अनुसार CDN लागत महत्वपूर्ण हो सकती है, हालांकि इसकी तुलना उस अतिरिक्त लागत से करनी चाहिए जो CDN का उपयोग न करने पर आती।"
  },
  {
    "row": 650,
    "rowsha": "YjphV6UFHlF8QZd6H7IwSok8B0pA/6JZvHyDB/U31t8=",
    "originContent": "* CDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.",
    "translatedContent": "* यदि कंटेंट TTL समाप्त होने से पहले अपडेट किया जाता है तो वह पुराना हो सकता है।"
  },
  {
    "row": 651,
    "rowsha": "8fkn9dVag9tyFFWpkP62SVa5GuTYSjBGAG9rC6UXths=",
    "originContent": "* Content might be stale if it is updated before the TTL expires it.",
    "translatedContent": "* CDN के लिए स्थैतिक कंटेंट के URLs को बदलकर CDN की ओर इंगित करना आवश्यक होता है।"
  },
  {
    "row": 652,
    "rowsha": "HVbfoV5USwswHOrPu5Je4OTd3oaidZeYbZX9244kJyE=",
    "originContent": "* CDNs require changing URLs for static content to point to the CDN.",
    "translatedContent": ""
  },
  {
    "row": 653,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### स्रोत और आगे पढ़ें"
  },
  {
    "row": 654,
    "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
    "originContent": "### Source(s) and further reading",
    "translatedContent": ""
  },
  {
    "row": 655,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* [वैश्विक रूप से वितरित कंटेंट डिलीवरी](https://figshare.com/articles/Globally_distributed_content_delivery/6605972)"
  },
  {
    "row": 656,
    "rowsha": "X0rskJNLdEMrWBtQJzbArsb0yLoO9UcDzoTOEXo5PD4=",
    "originContent": "* [Globally distributed content delivery](https://figshare.com/articles/Globally_distributed_content_delivery/6605972)",
    "translatedContent": "* [पुश और पुल CDN के बीच अंतर](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)"
  },
  {
    "row": 657,
    "rowsha": "AeTCbEPfR2cA81qlODS3FH5+DaxyKyZ8cYBRiPicnVI=",
    "originContent": "* [The differences between push and pull CDNs](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)",
    "translatedContent": ""
  },
  {
    "row": 658,
    "rowsha": "YfknGSt3mgSC2vQS7D9984LpAs7P+O8aGp1oUfhwAhg=",
    "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Content_delivery_network)",
    "translatedContent": "* [विकिपीडिया](https://en.wikipedia.org/wiki/Content_delivery_network)"
  },
  {
    "row": 659,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 660,
    "rowsha": "Ao8ZomKw0HBRDMy/0qZhvnrS6gMQiupr1bhlarWiu7M=",
    "originContent": "## Load balancer",
    "translatedContent": "## लोड बैलेंसर"
  },
  {
    "row": 661,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 662,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 663,
    "rowsha": "h6sQMelc9THWWcHWU5a9DF4mpg0v6IKfT59CZt5U3ao=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h81n9iK.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h81n9iK.png\">"
  },
  {
    "row": 664,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 665,
    "rowsha": "BlGpJr1aaS7U1ovkxsSc1S7ZO+WxTq/Ry9MM5AGpY3s=",
    "originContent": "  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>",
    "translatedContent": "  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>स्रोत: स्केलेबल सिस्टम डिजाइन पैटर्न</a></i>"
  },
  {
    "row": 666,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 667,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 668,
    "rowsha": "4k2a9uM1Fgg2SDoDZRQklRig6D0IRvnHt1LXSDoeXUk=",
    "originContent": "Load balancers distribute incoming client requests to computing resources such as application servers and databases.  In each case, the load balancer returns the response from the computing resource to the appropriate client.  Load balancers are effective at:",
    "translatedContent": "लोड बैलेंसर इनकमिंग क्लाइंट अनुरोधों को कंप्यूटिंग संसाधनों जैसे एप्लीकेशन सर्वर और डेटाबेस में वितरित करते हैं। प्रत्येक मामले में, लोड बैलेंसर कंप्यूटिंग संसाधन से प्रतिक्रिया को उपयुक्त क्लाइंट को लौटाता है। लोड बैलेंसर इन कार्यों में प्रभावी होते हैं:"
  },
  {
    "row": 669,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 670,
    "rowsha": "6wYnNMCx45ENEX5Xq0qxtujLl6pJ9PH0XNJAjbXW2V4=",
    "originContent": "* Preventing requests from going to unhealthy servers",
    "translatedContent": "* अस्वस्थ सर्वर को अनुरोध भेजने से रोकना"
  },
  {
    "row": 671,
    "rowsha": "5mQXmG2xH4bDVhp+sj/zBTo9+1ivS0QaaWxdwhsXLRo=",
    "originContent": "* Preventing overloading resources",
    "translatedContent": "* संसाधनों के ओवरलोडिंग को रोकना"
  },
  {
    "row": 672,
    "rowsha": "FJ8a/F9gy2R3aMx8bKEHvifAete5J+GBMEqLf5YXWaM=",
    "originContent": "* Helping to eliminate a single point of failure",
    "translatedContent": "* एकल बिंदु विफलता को खत्म करने में मदद करना"
  },
  {
    "row": 673,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 674,
    "rowsha": "DNdzJResTG1iZiLksD2NGBsVbr4AwvFed3pPrBYhow0=",
    "originContent": "Load balancers can be implemented with hardware (expensive) or with software such as HAProxy.",
    "translatedContent": "लोड बैलेंसर हार्डवेयर (महंगा) या सॉफ़्टवेयर जैसे HAProxy के साथ लागू किए जा सकते हैं।"
  },
  {
    "row": 675,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 676,
    "rowsha": "+CFxebREyKkgHc/8UD4FiQpt1wm+8buX83sw3i7tiUI=",
    "originContent": "Additional benefits include:",
    "translatedContent": "अतिरिक्त लाभों में शामिल हैं:"
  },
  {
    "row": 677,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 678,
    "rowsha": "xSrFzA8yBTDjWDjJbMNZn9LK/pBq5GDwgUONNdWpSUY=",
    "originContent": "* **SSL termination** - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations",
    "translatedContent": "* **SSL समाप्ति** - इनकमिंग अनुरोधों को डिक्रिप्ट करना और सर्वर प्रतिक्रियाओं को एन्क्रिप्ट करना ताकि बैकएंड सर्वरों को ये संभावित रूप से महंगे ऑपरेशन न करने पड़ें"
  },
  {
    "row": 679,
    "rowsha": "QWIxyqIlp3o4sF+0KwvMv8ok25amcfNP9fJLlh3bfY8=",
    "originContent": "    * Removes the need to install [X.509 certificates](https://en.wikipedia.org/wiki/X.509) on each server",
    "translatedContent": "    * प्रत्येक सर्वर पर [X.509 प्रमाणपत्र](https://en.wikipedia.org/wiki/X.509) स्थापित करने की आवश्यकता को समाप्त करता है"
  },
  {
    "row": 680,
    "rowsha": "vk1X20SI2qy/YSCC7GrOM1v5flvy6RUv8ciMsolcoGo=",
    "originContent": "* **Session persistence** - Issue cookies and route a specific client's requests to same instance if the web apps do not keep track of sessions",
    "translatedContent": "* **सत्र स्थायित्व** - कुकीज जारी करना और यदि वेब ऐप्स सत्र ट्रैक नहीं रखते हैं तो विशिष्ट क्लाइंट के अनुरोधों को उसी इंस्टेंस पर रूट करना"
  },
  {
    "row": 681,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 682,
    "rowsha": "T4syA6MGOLjnUeVf2OWfiBKLdQ1JazDX02nc1xuIAk8=",
    "originContent": "To protect against failures, it's common to set up multiple load balancers, either in [active-passive](#active-passive) or [active-active](#active-active) mode.",
    "translatedContent": "विफलताओं से सुरक्षा के लिए, अक्सर कई लोड बैलेंसर सेटअप करना आम है, या तो [सक्रिय-निष्क्रिय](#active-passive) या [सक्रिय-सक्रिय](#active-active) मोड में।"
  },
  {
    "row": 683,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 684,
    "rowsha": "FrEIOzNFrfNBUDqFIfCwXk0X9fllvhYyiGr0bDioroc=",
    "originContent": "Load balancers can route traffic based on various metrics, including:",
    "translatedContent": "लोड बैलेंसर विभिन्न मापदंडों के आधार पर ट्रैफिक को रूट कर सकते हैं, जिनमें शामिल हैं:"
  },
  {
    "row": 685,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 686,
    "rowsha": "OAkIAkhhnJ5O+09DoibHAHkWnSwYYryr62/BXWmOgyQ=",
    "originContent": "* Random",
    "translatedContent": "* रैंडम"
  },
  {
    "row": 687,
    "rowsha": "NKVEnR5Hou/TUVRfSREUWsNgJR+HD/IzDpHpowQ1000=",
    "originContent": "* Least loaded",
    "translatedContent": "* सबसे कम लोडेड"
  },
  {
    "row": 688,
    "rowsha": "bgpAMm3N/nLo+MaMyB8ZAVmB3WpZ3s79uPxHSu2O9RU=",
    "originContent": "* Session/cookies",
    "translatedContent": "* सत्र/कुकीज"
  },
  {
    "row": 689,
    "rowsha": "PxjaNHNHE3DkepJUpn3eiTdsNI2Cng5yhZpKWba9QTk=",
    "originContent": "* [Round robin or weighted round robin](https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb)",
    "translatedContent": "* [राउंड रोबिन या वेटेड राउंड रोबिन](https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb)"
  },
  {
    "row": 690,
    "rowsha": "L7VnumepgunJZ0MiMduI35k/le+iXLpZ6QfWjzfzxBY=",
    "originContent": "* [Layer 4](#layer-4-load-balancing)",
    "translatedContent": "* [लेयर 4](#layer-4-load-balancing)"
  },
  {
    "row": 691,
    "rowsha": "VokpaOXBw5YcX1NAfYl6CmQPZhQ0TaVJsYGoei16lWY=",
    "originContent": "* [Layer 7](#layer-7-load-balancing)",
    "translatedContent": "* [लेयर 7](#layer-7-load-balancing)"
  },
  {
    "row": 692,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 693,
    "rowsha": "8BsY9UHoujca9pbk+ZHhpu+vymfvLa+UgrJ/x1arCz4=",
    "originContent": "### Layer 4 load balancing",
    "translatedContent": "### लेयर 4 लोड बैलेंसिंग"
  },
  {
    "row": 694,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 695,
    "rowsha": "3stJb/JLj/KFQbtq6QrEMn8ngL/VHxzgCq0E9po4D58=",
    "originContent": "Layer 4 load balancers look at info at the [transport layer](#communication) to decide how to distribute requests.  Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet.  Layer 4 load balancers forward network packets to and from the upstream server, performing [Network Address Translation (NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/).",
    "translatedContent": "लेयर 4 लोड बैलेंसर [ट्रांसपोर्ट लेयर](#communication) पर जानकारी देखकर तय करते हैं कि अनुरोधों को कैसे वितरित किया जाए। आमतौर पर इसमें हेडर में स्रोत, गंतव्य IP एड्रेस और पोर्ट शामिल होते हैं, लेकिन पैकेट की सामग्री नहीं। लेयर 4 लोड बैलेंसर नेटवर्क पैकेट्स को अपस्ट्रीम सर्वर तक फॉरवर्ड करते हैं, [नेटवर्क एड्रेस ट्रांसलेशन (NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/) करते हैं।"
  },
  {
    "row": 696,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 697,
    "rowsha": "bVLVCjekkNVRGyijkGzoJmucD9UDL3Yf5p1kRLQi4As=",
    "originContent": "### Layer 7 load balancing",
    "translatedContent": "### लेयर 7 लोड बैलेंसिंग"
  },
  {
    "row": 698,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "लेयर 7 लोड बैलेंसर [एप्लिकेशन लेयर](#communication) को देखता है ताकि यह तय कर सके कि अनुरोधों को कैसे वितरित किया जाए। इसमें हेडर, संदेश और कुकीज़ की सामग्री शामिल हो सकती है। लेयर 7 लोड बैलेंसर नेटवर्क ट्रैफिक को समाप्त करता है, संदेश पढ़ता है, लोड-बैलेंसिंग का निर्णय लेता है, फिर चयनित सर्वर के लिए एक कनेक्शन खोलता है। उदाहरण के लिए, एक लेयर 7 लोड बैलेंसर वीडियो ट्रैफिक को उन सर्वरों पर निर्देशित कर सकता है जो वीडियो होस्ट करते हैं, जबकि अधिक संवेदनशील उपयोगकर्ता बिलिंग ट्रैफिक को सुरक्षा-सुदृढ़ सर्वरों पर भेजता है।"
  },
  {
    "row": 699,
    "rowsha": "hNinjintYzj6BMJTufo596jyxYVs6Wzx5q0qpPz65Tc=",
    "originContent": "Layer 7 load balancers look at the [application layer](#communication) to decide how to distribute requests.  This can involve contents of the header, message, and cookies.  Layer 7 load balancers terminate network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server.  For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.",
    "translatedContent": ""
  },
  {
    "row": 700,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "लचीलापन की कीमत पर, लेयर 4 लोड बैलेंसिंग लेयर 7 की तुलना में कम समय और कंप्यूटिंग संसाधनों की आवश्यकता होती है, हालांकि आधुनिक सामान्य हार्डवेयर पर प्रदर्शन प्रभाव न्यूनतम हो सकता है।"
  },
  {
    "row": 701,
    "rowsha": "eq1iV0OSDazAO/ff1N3OCDTkIh5l3M8RACiInJ9E/f4=",
    "originContent": "At the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.",
    "translatedContent": ""
  },
  {
    "row": 702,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### क्षैतिज स्केलिंग"
  },
  {
    "row": 703,
    "rowsha": "HujpPLjyGfjrm090FYcsRg+jeM37pmrFlfXBr0ojysE=",
    "originContent": "### Horizontal scaling",
    "translatedContent": ""
  },
  {
    "row": 704,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "लोड बैलेंसर क्षैतिज स्केलिंग में भी सहायता कर सकते हैं, जिससे प्रदर्शन और उपलब्धता बेहतर होती है। सामान्य मशीनों का उपयोग करके स्केल आउट करना अधिक लागत प्रभावी है और महंगे हार्डवेयर पर एकल सर्वर को स्केल अप करने की तुलना में अधिक उपलब्धता मिलती है, जिसे **वर्टिकल स्केलिंग** कहा जाता है। सामान्य हार्डवेयर पर काम करने वाली प्रतिभा को नियुक्त करना भी विशेष एंटरप्राइज सिस्टम की तुलना में आसान है।"
  },
  {
    "row": 705,
    "rowsha": "mwC43eiaPybUHX/F7Xi46vAG1Eg19+SWMWU53uCkCeA=",
    "originContent": "Load balancers can also help with horizontal scaling, improving performance and availability.  Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called **Vertical Scaling**.  It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.",
    "translatedContent": ""
  },
  {
    "row": 706,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### नुकसान: क्षैतिज स्केलिंग"
  },
  {
    "row": 707,
    "rowsha": "DxYbLmgaDjx6y14iKkzkIPyOsLlh/lPJKG5SlED5zY8=",
    "originContent": "#### Disadvantage(s): horizontal scaling",
    "translatedContent": ""
  },
  {
    "row": 708,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* क्षैतिज रूप से स्केलिंग करने से जटिलता आती है और सर्वरों को क्लोन करना शामिल होता है"
  },
  {
    "row": 709,
    "rowsha": "GTauaAyaFN/WZrsWFaNLJr1jNvonApRcifzAA6bj4lM=",
    "originContent": "* Scaling horizontally introduces complexity and involves cloning servers",
    "translatedContent": "    * सर्वरों को स्टेटलेस होना चाहिए: उनमें कोई उपयोगकर्ता-संबंधित डेटा जैसे सत्र या प्रोफाइल चित्र नहीं होने चाहिए"
  },
  {
    "row": 710,
    "rowsha": "ZVM+ophRkm47wnBiCd4vTlZEDBMhrDMYstTuS8sm+vo=",
    "originContent": "    * Servers should be stateless: they should not contain any user-related data like sessions or profile pictures",
    "translatedContent": "    * सत्र को केंद्रीकृत डेटा स्टोर जैसे [डेटाबेस](#database) (SQL, NoSQL) या स्थायी [कैश](#cache) (Redis, Memcached) में संग्रहीत किया जा सकता है"
  },
  {
    "row": 711,
    "rowsha": "D/f10jXG6zDz1v4jf/JYCVs2yLAKUM4v+skNjxc8fVM=",
    "originContent": "    * Sessions can be stored in a centralized data store such as a [database](#database) (SQL, NoSQL) or a persistent [cache](#cache) (Redis, Memcached)",
    "translatedContent": "* डाउनस्ट्रीम सर्वरों जैसे कैश और डेटाबेस को अधिक समकालिक कनेक्शन संभालने होंगे जब अपस्ट्रीम सर्वर स्केल आउट होते हैं"
  },
  {
    "row": 712,
    "rowsha": "wSXmadVwkmeMPof0OaYB4MCKgWEjWx3fjP5BUSRnUSk=",
    "originContent": "* Downstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out",
    "translatedContent": ""
  },
  {
    "row": 713,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### नुकसान: लोड बैलेंसर"
  },
  {
    "row": 714,
    "rowsha": "XP5laNx7aLA4Bd3VTZW6LOV2pjfeYFA9B3CjiSQbK1M=",
    "originContent": "### Disadvantage(s): load balancer",
    "translatedContent": ""
  },
  {
    "row": 715,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* यदि लोड बैलेंसर के पास पर्याप्त संसाधन नहीं हैं या इसे ठीक से कॉन्फ़िगर नहीं किया गया है, तो यह प्रदर्शन की बाधा बन सकता है।"
  },
  {
    "row": 716,
    "rowsha": "N3Un9PJNf4zd/XonGVt5HOrF3B8is7cdD0rIz/pgLDQ=",
    "originContent": "* The load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.",
    "translatedContent": "* एकल विफलता बिंदु को समाप्त करने के लिए लोड बैलेंसर को पेश करने से जटिलता बढ़ जाती है।"
  },
  {
    "row": 717,
    "rowsha": "ug0SGnEU8aIX22VAmpUUamTBrXXdaAfWdzqbOm5fh0M=",
    "originContent": "* Introducing a load balancer to help eliminate a single point of failure results in increased complexity.",
    "translatedContent": "* एकल लोड बैलेंसर एकल विफलता बिंदु है, कई लोड बैलेंसर को कॉन्फ़िगर करना जटिलता को और बढ़ाता है।"
  },
  {
    "row": 718,
    "rowsha": "YU6dvlgVxtjIRADDUTlIKCmASEQ2nOvlMfspkGNBcSk=",
    "originContent": "* A single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.",
    "translatedContent": ""
  },
  {
    "row": 719,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### स्रोत एवं आगे पढ़ें"
  },
  {
    "row": 720,
    "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
    "originContent": "### Source(s) and further reading",
    "translatedContent": ""
  },
  {
    "row": 721,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* [NGINX वास्तुकला](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)"
  },
  {
    "row": 722,
    "rowsha": "u7t9RSOsBLbDQOOlZAMiu/Ky/JVnirRtRxeU3T5rEdg=",
    "originContent": "* [NGINX architecture](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)",
    "translatedContent": "* [HAProxy वास्तुकला गाइड](http://www.haproxy.org/download/1.2/doc/architecture.txt)"
  },
  {
    "row": 723,
    "rowsha": "I6F2p40wC4iALCteQwB8aXq7Y+CfqPOq9z2Yqh4mtwc=",
    "originContent": "* [HAProxy architecture guide](http://www.haproxy.org/download/1.2/doc/architecture.txt)",
    "translatedContent": "* [स्केलेबिलिटी](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)"
  },
  {
    "row": 724,
    "rowsha": "ptcD1852UW7xlGx34pDmC+AgFtFzFO6+yrEToGnsgxI=",
    "originContent": "* [Scalability](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)",
    "translatedContent": "* [विकिपीडिया](https://en.wikipedia.org/wiki/Load_balancing_(computing))"
  },
  {
    "row": 725,
    "rowsha": "pPYUxxnt3BBBqjS8iMnTEKeYv357KowYlTqWPjcmlU4=",
    "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Load_balancing_(computing))",
    "translatedContent": "* [लेयर 4 लोड बैलेंसिंग](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)"
  },
  {
    "row": 726,
    "rowsha": "WPFYggBkI6JT2HYtwFKa34s4qW4btdUZSrtIFj5Mqcs=",
    "originContent": "* [Layer 4 load balancing](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)",
    "translatedContent": "* [लेयर 7 लोड बैलेंसिंग](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)"
  },
  {
    "row": 727,
    "rowsha": "LZ2k/ISO0P/DDSJCxGZsWhg62ow4Kf7P7XrgeTUn/+M=",
    "originContent": "* [Layer 7 load balancing](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)",
    "translatedContent": "* [ELB लिसनर कॉन्फ़िगरेशन](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)"
  },
  {
    "row": 728,
    "rowsha": "soSCQpzIs3UpclHUlmpTt0czKhkftOeXX4r1d+b/Ha4=",
    "originContent": "* [ELB listener config](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)",
    "translatedContent": ""
  },
  {
    "row": 729,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## रिवर्स प्रॉक्सी (वेब सर्वर)"
  },
  {
    "row": 730,
    "rowsha": "57oBVkplD9msiWgbKa+osPNwyddtjB1Cpm1KEABE3Hg=",
    "originContent": "## Reverse proxy (web server)",
    "translatedContent": ""
  },
  {
    "row": 731,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 732,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n41Azff.png\">"
  },
  {
    "row": 733,
    "rowsha": "MrN3YHgIbz1VRZyteJkzaUvekCIgJyT62IwmaKrxDQ4=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n41Azff.png\">",
    "translatedContent": "  <br/>"
  },
  {
    "row": 734,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>स्रोत: विकिपीडिया</a></i>"
  },
  {
    "row": 735,
    "rowsha": "F+qmb/XXOId8oNBkUx9olLj2eiHNE+sH3pIQgZO1JDg=",
    "originContent": "  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>Source: Wikipedia</a></i>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 736,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "</p>"
  },
  {
    "row": 737,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": ""
  },
  {
    "row": 738,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "रिवर्स प्रॉक्सी एक वेब सर्वर है जो आंतरिक सेवाओं को केंद्रीकृत करता है और सार्वजनिक रूप से एकीकृत इंटरफेस प्रदान करता है। क्लाइंट से अनुरोध उस सर्वर को अग्रेषित किया जाता है जो उसे पूरा कर सकता है, इसके बाद रिवर्स प्रॉक्सी सर्वर की प्रतिक्रिया क्लाइंट को लौटाता है।"
  },
  {
    "row": 739,
    "rowsha": "pqBNY+Vd+IvBY3McnLIyARCVdV5BFhQ9kiXciiPUuWg=",
    "originContent": "A reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public.  Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.",
    "translatedContent": ""
  },
  {
    "row": 740,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "अतिरिक्त लाभों में शामिल हैं:"
  },
  {
    "row": 741,
    "rowsha": "+CFxebREyKkgHc/8UD4FiQpt1wm+8buX83sw3i7tiUI=",
    "originContent": "Additional benefits include:",
    "translatedContent": ""
  },
  {
    "row": 742,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* **सुरक्षा में वृद्धि** - बैकएंड सर्वरों की जानकारी छुपाएँ, IP को ब्लैकलिस्ट करें, प्रति क्लाइंट कनेक्शन की संख्या सीमित करें"
  },
  {
    "row": 743,
    "rowsha": "kg4TPAki/rcr3kuuwvteneL22m/4V8yp3exHEm1WmfA=",
    "originContent": "* **Increased security** - Hide information about backend servers, blacklist IPs, limit number of connections per client",
    "translatedContent": "* **स्केलेबिलिटी और लचीलापन में वृद्धि** - क्लाइंट केवल रिवर्स प्रॉक्सी का IP देखते हैं, जिससे आप सर्वरों को स्केल या उनकी कॉन्फ़िगरेशन बदल सकते हैं"
  },
  {
    "row": 744,
    "rowsha": "w0DZU3NdQ8715Tsp7qDSirEnUpVAHxQJ9nhz2o3Pt/I=",
    "originContent": "* **Increased scalability and flexibility** - Clients only see the reverse proxy's IP, allowing you to scale servers or change their configuration",
    "translatedContent": "* **SSL टर्मिनेशन** - इनकमिंग अनुरोधों को डिक्रिप्ट करें और सर्वर प्रतिक्रियाओं को एन्क्रिप्ट करें ताकि बैकएंड सर्वरों को ये महंगे ऑपरेशन करने की आवश्यकता न हो"
  },
  {
    "row": 745,
    "rowsha": "xSrFzA8yBTDjWDjJbMNZn9LK/pBq5GDwgUONNdWpSUY=",
    "originContent": "* **SSL termination** - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations",
    "translatedContent": "    * प्रत्येक सर्वर पर [X.509 प्रमाणपत्र](https://en.wikipedia.org/wiki/X.509) स्थापित करने की आवश्यकता समाप्त करता है"
  },
  {
    "row": 746,
    "rowsha": "QWIxyqIlp3o4sF+0KwvMv8ok25amcfNP9fJLlh3bfY8=",
    "originContent": "    * Removes the need to install [X.509 certificates](https://en.wikipedia.org/wiki/X.509) on each server",
    "translatedContent": "* **कम्प्रेशन** - सर्वर प्रतिक्रियाओं को कम्प्रेस करें"
  },
  {
    "row": 747,
    "rowsha": "SqynvWcZzUNhlDwGO++H/2mxvPeT4O7ZelHcr2PcQK8=",
    "originContent": "* **Compression** - Compress server responses",
    "translatedContent": "* **कैशिंग** - कैश किए गए अनुरोधों के लिए प्रतिक्रिया लौटाएँ"
  },
  {
    "row": 748,
    "rowsha": "/paZJTVqfJF7IsPLBA3GcTjtIlchV+UWi8hzvXIcDfg=",
    "originContent": "* **Caching** - Return the response for cached requests",
    "translatedContent": "* **स्टैटिक कंटेंट** - स्टैटिक कंटेंट सीधे प्रदान करें"
  },
  {
    "row": 749,
    "rowsha": "g98/MjxP0+D8KtUPBY+kkgk5ffZlWTc05yV+iKpSQvI=",
    "originContent": "* **Static content** - Serve static content directly",
    "translatedContent": "    * HTML/CSS/JS"
  },
  {
    "row": 750,
    "rowsha": "iAmBVmr8kX4KuXdPFHYHZAhVgyw94ki9uIvawdeyNeg=",
    "originContent": "    * HTML/CSS/JS",
    "translatedContent": "    * फोटो"
  },
  {
    "row": 751,
    "rowsha": "2L4m+QKkj1bSExoWNAIjYZaIBXYJDNOmiUdmIYNBKig=",
    "originContent": "    * Photos",
    "translatedContent": "    * वीडियो"
  },
  {
    "row": 752,
    "rowsha": "iz9sb0EwQ6wE95PBrBa9Di1XjuFyCAJry2vaAj3mjcs=",
    "originContent": "    * Videos",
    "translatedContent": "    * आदि"
  },
  {
    "row": 753,
    "rowsha": "J226Cb5De6+BN2Z3axGAaOWOzysDPjsEqSZuJdWdEH4=",
    "originContent": "    * Etc",
    "translatedContent": ""
  },
  {
    "row": 754,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### लोड बैलेंसर बनाम रिवर्स प्रॉक्सी"
  },
  {
    "row": 755,
    "rowsha": "ehHoUaR7ClxjMCiSJy4nTwWaTdSTI9CywbZmPeiMFDw=",
    "originContent": "### Load balancer vs reverse proxy",
    "translatedContent": ""
  },
  {
    "row": 756,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* जब आपके पास कई सर्वर होते हैं तो लोड बैलेंसर को डिप्लॉय करना उपयोगी होता है। अक्सर, लोड बैलेंसर ट्रैफिक को एक सेट सर्वरों तक रूट करते हैं जो समान कार्य करते हैं।"
  },
  {
    "row": 757,
    "rowsha": "WZcxbbJyyYX+NaQ2HI6vmmpAgPxiuIxc1vkrw7yhkiQ=",
    "originContent": "* Deploying a load balancer is useful when you have multiple servers.  Often, load balancers  route traffic to a set of servers serving the same function.",
    "translatedContent": "* रिवर्स प्रॉक्सी एक वेब सर्वर या एप्लिकेशन सर्वर के साथ भी उपयोगी हो सकता है, जिससे पिछले सेक्शन में बताए गए लाभ मिलते हैं।"
  },
  {
    "row": 758,
    "rowsha": "7RFYhUz3wMfiF2hxsNPIOyT0RCT5aoOx0MQtMS+WSmg=",
    "originContent": "* Reverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.",
    "translatedContent": "* NGINX और HAProxy जैसी सॉल्यूशंस दोनों लेयर 7 रिवर्स प्रॉक्सीइंग और लोड बैलेंसिंग को सपोर्ट कर सकती हैं।"
  },
  {
    "row": 759,
    "rowsha": "6Wvr2j7KrYAYKNJLx1qzT0iHZgXiPw75WygpxA2ai5Y=",
    "originContent": "* Solutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.",
    "translatedContent": ""
  },
  {
    "row": 760,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### नुकसान(न): रिवर्स प्रॉक्सी"
  },
  {
    "row": 761,
    "rowsha": "ic7OidJCC5YCuEroahp2bhGpmoY5raPm61Kp5Cve8ls=",
    "originContent": "### Disadvantage(s): reverse proxy",
    "translatedContent": ""
  },
  {
    "row": 762,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* रिवर्स प्रॉक्सी को लागू करने से जटिलता बढ़ जाती है।"
  },
  {
    "row": 763,
    "rowsha": "vBlekFF9US7hmLqGU1wIhkgE4b6OkFl/lDtbVIveltk=",
    "originContent": "* Introducing a reverse proxy results in increased complexity.",
    "translatedContent": "* एक सिंगल रिवर्स प्रॉक्सी एक सिंगल पॉइंट ऑफ फेल्योर है, कई रिवर्स प्रॉक्सी (जैसे [फेलओवर](https://en.wikipedia.org/wiki/Failover)) को कॉन्फ़िगर करने से जटिलता और बढ़ जाती है।"
  },
  {
    "row": 764,
    "rowsha": "8XtRJSNj3OsLgbLoG+ae0RiYkm8tpPEU5r72Vgub9fQ=",
    "originContent": "* A single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a [failover](https://en.wikipedia.org/wiki/Failover)) further increases complexity.",
    "translatedContent": ""
  },
  {
    "row": 765,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### स्रोत(स) और आगे पढ़ने के लिए"
  },
  {
    "row": 766,
    "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
    "originContent": "### Source(s) and further reading",
    "translatedContent": ""
  },
  {
    "row": 767,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* [रिवर्स प्रॉक्सी बनाम लोड बैलेंसर](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)"
  },
  {
    "row": 768,
    "rowsha": "dwTS+CUwpBYuPVKdkXAGeQNSO2sDfoQXt8O3+5/2puc=",
    "originContent": "* [Reverse proxy vs load balancer](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)",
    "translatedContent": "* [NGINX आर्किटेक्चर](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)"
  },
  {
    "row": 769,
    "rowsha": "u7t9RSOsBLbDQOOlZAMiu/Ky/JVnirRtRxeU3T5rEdg=",
    "originContent": "* [NGINX architecture](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)",
    "translatedContent": "* [HAProxy आर्किटेक्चर गाइड](http://www.haproxy.org/download/1.2/doc/architecture.txt)"
  },
  {
    "row": 770,
    "rowsha": "I6F2p40wC4iALCteQwB8aXq7Y+CfqPOq9z2Yqh4mtwc=",
    "originContent": "* [HAProxy architecture guide](http://www.haproxy.org/download/1.2/doc/architecture.txt)",
    "translatedContent": "* [विकिपीडिया](https://en.wikipedia.org/wiki/Reverse_proxy)"
  },
  {
    "row": 771,
    "rowsha": "T1iq0loFSY7nsxMMPzZ8z0I8/jxVU1QGdf6vmtWe+nk=",
    "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Reverse_proxy)",
    "translatedContent": ""
  },
  {
    "row": 772,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## एप्लिकेशन लेयर"
  },
  {
    "row": 773,
    "rowsha": "6NabscnPk8ymcpOMLJ5upxB+wi1ip0RGcIu4XBRXEUo=",
    "originContent": "## Application layer",
    "translatedContent": ""
  },
  {
    "row": 774,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 775,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yB5SYwm.png\">"
  },
  {
    "row": 776,
    "rowsha": "2DDgvJNfz35KH7Xl7Y7Q+m7siI4rwo+uwWAru4THF3g=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yB5SYwm.png\">",
    "translatedContent": "  <br/>"
  },
  {
    "row": 777,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": ""
  },
  {
    "row": 778,
    "rowsha": "XKyWblIAaLweFNdYR7DY6+BG5VKu0ZN+qyUPrZFPuGw=",
    "originContent": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>",
    "translatedContent": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>स्रोत: स्केल के लिए सिस्टम आर्किटेक्टिंग का परिचय</a></i>"
  },
  {
    "row": 779,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 780,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 781,
    "rowsha": "UM6js3Ubp+TOmUSIgFpnXR9xCK7AtXtk0LJjFo/1CGg=",
    "originContent": "Separating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently.  Adding a new API results in adding application servers without necessarily adding additional web servers.  The **single responsibility principle** advocates for small and autonomous services that work together.  Small teams with small services can plan more aggressively for rapid growth.",
    "translatedContent": "वेब लेयर को एप्लिकेशन लेयर (जिसे प्लेटफॉर्म लेयर भी कहा जाता है) से अलग करना आपको दोनों लेयर को स्वतंत्र रूप से स्केल और कॉन्फ़िगर करने की अनुमति देता है। एक नया API जोड़ने से एप्लिकेशन सर्वर जोड़ने पड़ते हैं, जरूरी नहीं कि अतिरिक्त वेब सर्वर भी जोड़ने पड़ें। **सिंगल रेस्पॉन्सिबिलिटी प्रिंसिपल** छोटे और स्वायत्त सेवाओं के पक्ष में है जो एक साथ काम करती हैं। छोटी टीमें छोटी सेवाओं के साथ तेजी से वृद्धि की योजना बना सकती हैं।"
  },
  {
    "row": 782,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 783,
    "rowsha": "xkBQu5uzAzx79If8PRrc69tBn2jQA3JGZxWrPbl8AIo=",
    "originContent": "Workers in the application layer also help enable [asynchronism](#asynchronism).",
    "translatedContent": "एप्लिकेशन लेयर में वर्कर्स [एसिंक्रोनिज़्म](#asynchronism) को सक्षम करने में भी मदद करते हैं।"
  },
  {
    "row": 784,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 785,
    "rowsha": "QALyAWhGHiAiI7zj0n8mHQbz2MPeC/7GQsXm6lETWbE=",
    "originContent": "### Microservices",
    "translatedContent": "### माइक्रोसर्विसेज"
  },
  {
    "row": 786,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 787,
    "rowsha": "JEKJi5S2MoUg4dgNOGjYfPuWuY6w9wlVy6+hVUuUb1E=",
    "originContent": "Related to this discussion are [microservices](https://en.wikipedia.org/wiki/Microservices), which can be described as a suite of independently deployable, small, modular services.  Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. <sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>",
    "translatedContent": "इस चर्चा से संबंधित हैं [माइक्रोसर्विसेज](https://en.wikipedia.org/wiki/Microservices), जिन्हें स्वतंत्र रूप से डिप्लॉय करने योग्य, छोटी, मॉड्यूलर सेवाओं का एक सूट कहा जा सकता है। प्रत्येक सेवा एक विशिष्ट प्रक्रिया चलाती है और व्यापारिक उद्देश्य को पूरा करने के लिए एक अच्छी तरह से परिभाषित, हल्के मैकेनिज्म के माध्यम से संचार करती है। <sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>"
  },
  {
    "row": 788,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 789,
    "rowsha": "JAJfKIWTPa+k536relRM4Sa2S8jQNzSHtVinCyQ9Vt8=",
    "originContent": "Pinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.",
    "translatedContent": "Pinterest, उदाहरण के लिए, निम्नलिखित माइक्रोसर्विसेज हो सकती हैं: यूजर प्रोफाइल, फॉलोवर, फीड, सर्च, फोटो अपलोड, आदि।"
  },
  {
    "row": 790,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 791,
    "rowsha": "NEEVX03dzMHiPstGq2XH0Y+KiOGKCVpjLe8ODMPCZbE=",
    "originContent": "### Service Discovery",
    "translatedContent": "### सेवा खोज (Service Discovery)"
  },
  {
    "row": 792,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 793,
    "rowsha": "V7wR9veeJevfojORQpyvoS+6BuwA+1o4NRx1gphUdsk=",
    "originContent": "Systems such as [Consul](https://www.consul.io/docs/index.html), [Etcd](https://coreos.com/etcd/docs/latest), and [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) can help services find each other by keeping track of registered names, addresses, and ports.  [Health checks](https://www.consul.io/intro/getting-started/checks.html) help verify service integrity and are often done using an [HTTP](#hypertext-transfer-protocol-http) endpoint.  Both Consul and Etcd have a built in [key-value store](#key-value-store) that can be useful for storing config values and other shared data.",
    "translatedContent": "[Consul](https://www.consul.io/docs/index.html), [Etcd](https://coreos.com/etcd/docs/latest), और [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) जैसे सिस्टम सेवाओं को एक-दूसरे को ढूंढने में मदद करते हैं, पंजीकृत नाम, पता, और पोर्ट का ट्रैक रखते हैं। [हेल्थ चेक्स](https://www.consul.io/intro/getting-started/checks.html) सेवा की अखंडता की पुष्टि करने में मदद करते हैं और अक्सर [HTTP](#hypertext-transfer-protocol-http) एंडपॉइंट का उपयोग करके किए जाते हैं। Consul और Etcd दोनों में एक इन-बिल्ट [की-वैल्यू स्टोर](#key-value-store) होता है, जो कॉन्फ़िगरेशन वैल्यू और अन्य साझा डेटा को स्टोर करने के लिए उपयोगी हो सकता है।"
  },
  {
    "row": 794,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 795,
    "rowsha": "up0iITXICUefSMFhfCjq2tdobQwafQ/AhpdoxRBfGrw=",
    "originContent": "### Disadvantage(s): application layer",
    "translatedContent": "### नुकसान: एप्लिकेशन लेयर"
  },
  {
    "row": 796,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 797,
    "rowsha": "d04JcXi8PzarOJ7w+Cmi0v2VrznvXZgozwpsCls2Mrc=",
    "originContent": "* Adding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).",
    "translatedContent": "* लूजली कपल्ड सेवाओं के साथ एप्लिकेशन लेयर जोड़ना आर्किटेक्चर, ऑपरेशन्स और प्रक्रिया के दृष्टिकोण से एक अलग अप्रोच की आवश्यकता होती है (मोनोलिथिक सिस्टम की तुलना में)।"
  },
  {
    "row": 798,
    "rowsha": "8Vv874DXS2kAIxFt2INdkt/FMU8EN8AfPLZRsYhhClg=",
    "originContent": "* Microservices can add complexity in terms of deployments and operations.",
    "translatedContent": "* माइक्रोसर्विसेज डिप्लॉयमेंट और ऑपरेशन्स के मामले में जटिलता जोड़ सकती हैं।"
  },
  {
    "row": 799,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 800,
    "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
    "originContent": "### Source(s) and further reading",
    "translatedContent": "### स्रोत और आगे पढ़ें"
  },
  {
    "row": 801,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 802,
    "rowsha": "P6UDnzaJUP638ZrRxWoBt/rKGUVjFeJGWiw98IRGjjg=",
    "originContent": "* [Intro to architecting systems for scale](http://lethain.com/introduction-to-architecting-systems-for-scale)",
    "translatedContent": "* [स्केल के लिए सिस्टम आर्किटेक्टिंग का परिचय](http://lethain.com/introduction-to-architecting-systems-for-scale)"
  },
  {
    "row": 803,
    "rowsha": "E8CKVfW4DaDVQHo21CF4Vsv7vGZieZXs0+mOiMdXKn0=",
    "originContent": "* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)",
    "translatedContent": "* [सिस्टम डिजाइन इंटरव्यू कैसे क्रैक करें](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)"
  },
  {
    "row": 804,
    "rowsha": "9ZF2oHsuUqabjRWA5mzsUZIR7gofXAjxF3jLd9LgL9w=",
    "originContent": "* [Service oriented architecture](https://en.wikipedia.org/wiki/Service-oriented_architecture)",
    "translatedContent": "* [सर्विस ओरिएंटेड आर्किटेक्चर](https://en.wikipedia.org/wiki/Service-oriented_architecture)"
  },
  {
    "row": 805,
    "rowsha": "Isg85bcp/QVt2nmGdbkLcO/MBcUP4Rdgxgp43hUW5hk=",
    "originContent": "* [Introduction to Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)",
    "translatedContent": "* [Zookeeper का परिचय](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)"
  },
  {
    "row": 806,
    "rowsha": "fLRwXUKIQIrgOpXD6j165zGOA1vJjI2tvSK3uJziO0w=",
    "originContent": "* [Here's what you need to know about building microservices](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)",
    "translatedContent": "* [माइक्रोसर्विसेज बनाने के बारे में आपको क्या जानना चाहिए](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)"
  },
  {
    "row": 807,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 808,
    "rowsha": "vMbgZh4T+X8OZjW57nT1HM2z1j6HVK3J2VqmT4oLlKA=",
    "originContent": "## Database",
    "translatedContent": "## डेटाबेस"
  },
  {
    "row": 809,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 810,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 811,
    "rowsha": "tXTOz4PsX5hfHVhFSOgkK7vpXDt/hMGSgWGuVk6lWag=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Xkm5CXz.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Xkm5CXz.png\">"
  },
  {
    "row": 812,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 813,
    "rowsha": "QZ9VelS8CnFWMWB2KzGmKZDoOJgPrHoFrfhL6M+2Tv0=",
    "originContent": "  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Source: Scaling up to your first 10 million users</a></i>",
    "translatedContent": "  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>स्रोत: पहले 10 मिलियन उपयोगकर्ताओं तक स्केलिंग</a></i>"
  },
  {
    "row": 814,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 815,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 816,
    "rowsha": "6RssMtdpk7vEildBf6je9NR7SzfXWiF5HBYi0iebSA4=",
    "originContent": "### Relational database management system (RDBMS)",
    "translatedContent": "### रिलेशनल डेटाबेस मैनेजमेंट सिस्टम (RDBMS)"
  },
  {
    "row": 817,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 818,
    "rowsha": "TVj++70eISoGO+iBto4OFzaI6XKAL6e/E+uDS6ZaXOk=",
    "originContent": "A relational database like SQL is a collection of data items organized in tables.",
    "translatedContent": "SQL जैसी रिलेशनल डेटाबेस डेटा आइटम्स का संग्रह है जो तालिकाओं में व्यवस्थित होती है।"
  },
  {
    "row": 819,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 820,
    "rowsha": "ugt+GAK9djNkt9rCr5Lt81CTBlxYR/rhBGd51QIWaxw=",
    "originContent": "**ACID** is a set of properties of relational database [transactions](https://en.wikipedia.org/wiki/Database_transaction).",
    "translatedContent": "**ACID** रिलेशनल डेटाबेस [लेन-देन](https://en.wikipedia.org/wiki/Database_transaction) की गुणधर्मों का एक समूह है।"
  },
  {
    "row": 821,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 822,
    "rowsha": "t7PNhuoBI+XkGQDP/Orx/tC1G9tD45Np/C9khLpfx00=",
    "originContent": "* **Atomicity** - Each transaction is all or nothing",
    "translatedContent": "* **परमाणुता** - प्रत्येक लेन-देन सब कुछ या कुछ भी नहीं है"
  },
  {
    "row": 823,
    "rowsha": "ArIcuDjmee6P1HP0YvxD0rnt49fFDYT5JSlNqdOXrVk=",
    "originContent": "* **Consistency** - Any transaction will bring the database from one valid state to another",
    "translatedContent": "* **संगतता** - कोई भी लेन-देन डेटाबेस को एक मान्य स्थिति से दूसरी मान्य स्थिति में लाएगा"
  },
  {
    "row": 824,
    "rowsha": "S3c99UuvMQkH1xDNRKwjl6SGiUxyptHlRO+WtxsKaqQ=",
    "originContent": "* **Isolation** - Executing transactions concurrently has the same results as if the transactions were executed serially",
    "translatedContent": "* **पृथक्करण** - लेन-देन को एक साथ निष्पादित करने के परिणाम वही हैं, जैसे कि उन्हें क्रमशः निष्पादित किया गया हो"
  },
  {
    "row": 825,
    "rowsha": "wMfYZINyEc131EdqAI5sHJxLmLMEtQJO35CGgwuyGbY=",
    "originContent": "* **Durability** - Once a transaction has been committed, it will remain so",
    "translatedContent": "* **स्थायित्व** - एक बार लेन-देन प्रतिबद्ध हो जाने के बाद, वह वैसा ही रहेगा"
  },
  {
    "row": 826,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 827,
    "rowsha": "x5XCTJ5HadM7xfMUY7+c5Rov3gzYdUOXDPtj+k6PdK8=",
    "originContent": "There are many techniques to scale a relational database: **master-slave replication**, **master-master replication**, **federation**, **sharding**, **denormalization**, and **SQL tuning**.",
    "translatedContent": "रिलेशनल डेटाबेस को स्केल करने के कई तरीके हैं: **मास्टर-स्लेव प्रतिकृति**, **मास्टर-मास्टर प्रतिकृति**, **संघ**, **शार्डिंग**, **डीनॉर्मलाइजेशन**, और **SQL ट्यूनिंग**।"
  },
  {
    "row": 828,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 829,
    "rowsha": "/BkO8ChKxpGKYpsoTC9wtB+fSCGMZ4yuZmiRQruqpqk=",
    "originContent": "#### Master-slave replication",
    "translatedContent": "#### मास्टर-स्लेव प्रतिकृति"
  },
  {
    "row": 830,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 831,
    "rowsha": "zLPuS3WrvJwrT1Pnds4IvmZthSpy5G+QXrf9z57FBPw=",
    "originContent": "The master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.",
    "translatedContent": "मास्टर रीड और राइट दोनों सर्व करता है, और राइट्स को एक या अधिक स्लेव्स में प्रतिकृत करता है, जो केवल रीड सर्व करते हैं। स्लेव्स अतिरिक्त स्लेव्स को भी वृक्ष के रूप में प्रतिकृत कर सकते हैं। यदि मास्टर ऑफलाइन हो जाता है, तो सिस्टम केवल पढ़ने की स्थिति में चल सकता है जब तक कि किसी स्लेव को मास्टर में प्रोमोट नहीं किया जाता या नया मास्टर प्रोविजन नहीं किया जाता।"
  },
  {
    "row": 832,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 833,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 834,
    "rowsha": "r54yp6VDJewyA/cs96laUlgpn+v7t5VM5wtvztBWn5s=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/C9ioGtn.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/C9ioGtn.png\">"
  },
  {
    "row": 835,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 836,
    "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
    "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
    "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>स्रोत: स्केलेबिलिटी, उपलब्धता, स्थिरता, पैटर्न्स</a></i>"
  },
  {
    "row": 837,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 838,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 839,
    "rowsha": "9J/uYg6e5S8WlPRmrqls9thA/KxvsgIYiuz0U80L0WI=",
    "originContent": "##### Disadvantage(s): master-slave replication",
    "translatedContent": "##### नुकसानों: मास्टर-स्लेव प्रतिकृति"
  },
  {
    "row": 840,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 841,
    "rowsha": "6RUOW7o6Hw1FEnxacP0l0H//QbClgocx4sjn0VFaJOw=",
    "originContent": "* Additional logic is needed to promote a slave to a master.",
    "translatedContent": "* स्लेव को मास्टर में प्रोमोट करने के लिए अतिरिक्त लॉजिक की आवश्यकता होती है।"
  },
  {
    "row": 842,
    "rowsha": "WFJYIaOi13ZmznrgUwyUgoatnczXbGeKZyx/gFNc/P0=",
    "originContent": "* See [Disadvantage(s): replication](#disadvantages-replication) for points related to **both** master-slave and master-master.",
    "translatedContent": "* [नुकसानों: प्रतिकृति](#disadvantages-replication) देखें, जो **दोनों** मास्टर-स्लेव और मास्टर-मास्टर से संबंधित बिंदुओं के लिए है।"
  },
  {
    "row": 843,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 844,
    "rowsha": "UXpwNBOaObxsPB0JW11vuvOjyXxn11TkvQpXFM5dMqw=",
    "originContent": "#### Master-master replication",
    "translatedContent": "#### मास्टर-मास्टर प्रतिकृति"
  },
  {
    "row": 845,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 846,
    "rowsha": "/pDnmtrEr1+RCAIeEvNfvshtAgXfHuYIOHlp+XeZ5L4=",
    "originContent": "Both masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.",
    "translatedContent": "दोनों मास्टर रीड और राइट सर्व करते हैं और राइट्स पर एक-दूसरे के साथ समन्वय करते हैं। अगर कोई मास्टर डाउन हो जाए, तो सिस्टम रीड और राइट दोनों के साथ कार्य करना जारी रख सकता है।"
  },
  {
    "row": 847,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 848,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 849,
    "rowsha": "nM56Sep5KDPhkejsb5RlEcFrJTGSEtCLIO6auMKh+Zg=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/krAHLGg.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/krAHLGg.png\">"
  },
  {
    "row": 850,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 851,
    "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
    "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
    "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>स्रोत: स्केलेबिलिटी, उपलब्धता, स्थिरता, पैटर्न्स</a></i>"
  },
  {
    "row": 852,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 853,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 854,
    "rowsha": "CMvauOacK4orcgzEPb/RxTbU59mcKlnXIfxjJNUAr20=",
    "originContent": "##### Disadvantage(s): master-master replication",
    "translatedContent": "##### नुकसानों: मास्टर-मास्टर प्रतिकृति"
  },
  {
    "row": 855,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 856,
    "rowsha": "nfjSQmWmi/Qhioo4bcbtjADRHb3rAcBsdr0NluJOYGo=",
    "originContent": "* You'll need a load balancer or you'll need to make changes to your application logic to determine where to write.",
    "translatedContent": "* आपको एक लोड बैलेंसर की आवश्यकता होगी या आपको अपने एप्लीकेशन लॉजिक में बदलाव करने होंगे ताकि यह निर्धारित किया जा सके कि कहाँ लिखना है।"
  },
  {
    "row": 857,
    "rowsha": "Dk3agyO90ATBFSrlgQFe69gHAowfUM2FVLlLwXOIfBA=",
    "originContent": "* Most master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.",
    "translatedContent": "* अधिकांश मास्टर-मास्टर सिस्टम या तो ढीली संगतता रखते हैं (ACID का उल्लंघन करते हैं) या सिंक्रोनाइज़ेशन के कारण राइट लेटेंसी बढ़ जाती है।"
  },
  {
    "row": 858,
    "rowsha": "WHkTVxfQNcj0KpXEf8i++cVkzS+lF8TWMFO/4SLP9JM=",
    "originContent": "* Conflict resolution comes more into play as more write nodes are added and as latency increases.",
    "translatedContent": "* जैसे-जैसे अधिक write नोड्स जोड़े जाते हैं और latency बढ़ती है, संघर्ष समाधान (conflict resolution) अधिक महत्वपूर्ण हो जाता है।"
  },
  {
    "row": 859,
    "rowsha": "WFJYIaOi13ZmznrgUwyUgoatnczXbGeKZyx/gFNc/P0=",
    "originContent": "* See [Disadvantage(s): replication](#disadvantages-replication) for points related to **both** master-slave and master-master.",
    "translatedContent": "* **दोनों** master-slave और master-master से संबंधित बिंदुओं के लिए [नुकसान: प्रतिकृति](#disadvantages-replication) देखें।"
  },
  {
    "row": 860,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 861,
    "rowsha": "Y9PQ4rBkdT0tvEShNLanQYDncrUiVqsthA8/o8uw2Pw=",
    "originContent": "##### Disadvantage(s): replication",
    "translatedContent": "##### नुकसान: प्रतिकृति"
  },
  {
    "row": 862,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 863,
    "rowsha": "X000vgG2X+3QkM7tzk/ylNCsyqvR8y/F9ik9R1HrVpI=",
    "originContent": "* There is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.",
    "translatedContent": "* यदि मास्टर विफल हो जाता है इससे पहले कि कोई नया लिखा गया डेटा अन्य नोड्स पर प्रतिकृति हो सके, तो डेटा खोने की संभावना रहती है।"
  },
  {
    "row": 864,
    "rowsha": "72921YdDRrzvAXB9Ra8JGSURjvzclzQ+R2yPZL+oMkk=",
    "originContent": "* Writes are replayed to the read replicas.  If there are a lot of writes, the read replicas can get bogged down with replaying writes and can't do as many reads.",
    "translatedContent": "* लिखे गए डेटा को पढ़ने वाले रिप्लिका पर फिर से चलाया जाता है। यदि बहुत सारे लिखे होते हैं, तो पढ़ने वाले रिप्लिका लिखे दोहराने में व्यस्त हो सकते हैं और उतनी पढ़ाई नहीं कर सकते।"
  },
  {
    "row": 865,
    "rowsha": "bibvyFowP6GQZ2KTN5WI7Tz4FHxUhIzPitqe3P1U6/E=",
    "originContent": "* The more read slaves, the more you have to replicate, which leads to greater replication lag.",
    "translatedContent": "* जितने अधिक पढ़ने वाले स्लेव्स, उतनी अधिक प्रतिकृति करनी होगी, जिससे प्रतिकृति में विलंब बढ़ता है।"
  },
  {
    "row": 866,
    "rowsha": "uSXC8HBf/QRznFpcGsqRAFtmrZdjnO9fAO1R78PrudE=",
    "originContent": "* On some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.",
    "translatedContent": "* कुछ प्रणालियों में, मास्टर को लिखने पर समानांतर में लिखने के लिए अनेक थ्रेड्स बन सकते हैं, जबकि पढ़ने वाले रिप्लिका केवल एकल थ्रेड के साथ अनुक्रमिक रूप से लिखना समर्थन करते हैं।"
  },
  {
    "row": 867,
    "rowsha": "odrw6DZWN2t+Ewwe88Nrq/Ld4/mvd73n7KfBYuTjXlw=",
    "originContent": "* Replication adds more hardware and additional complexity.",
    "translatedContent": "* प्रतिकृति अधिक हार्डवेयर और अतिरिक्त जटिलता जोड़ती है।"
  },
  {
    "row": 868,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 869,
    "rowsha": "QwPjuoDchFiE4ii8crVvONhB1ARVjoCHLjGOlAyiylg=",
    "originContent": "##### Source(s) and further reading: replication",
    "translatedContent": "##### स्रोत और आगे पढ़ें: प्रतिकृति"
  },
  {
    "row": 870,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 871,
    "rowsha": "UVMSE1BpfAJjZtNGckenaHDWkkWMyRCmwx5PRWNWv7Q=",
    "originContent": "* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)",
    "translatedContent": "* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)"
  },
  {
    "row": 872,
    "rowsha": "p2oeX5Y3dWirBuwg7Hfsm8I/z8PvNQroZETi6IEzBW4=",
    "originContent": "* [Multi-master replication](https://en.wikipedia.org/wiki/Multi-master_replication)",
    "translatedContent": "* [मल्टी-मास्टर प्रतिकृति](https://en.wikipedia.org/wiki/Multi-master_replication)"
  },
  {
    "row": 873,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 874,
    "rowsha": "SXYGeZNmOhHlvknXjTtr7ComhgkIj1UXIfjGjhUapnQ=",
    "originContent": "#### Federation",
    "translatedContent": "#### फेडरेशन"
  },
  {
    "row": 875,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 876,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 877,
    "rowsha": "kU7HFHAkLMRxFEePW4U8islDAWELflPllxQdwOPt6oY=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/U3qV33e.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/U3qV33e.png\">"
  },
  {
    "row": 878,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 879,
    "rowsha": "QZ9VelS8CnFWMWB2KzGmKZDoOJgPrHoFrfhL6M+2Tv0=",
    "originContent": "  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Source: Scaling up to your first 10 million users</a></i>",
    "translatedContent": "  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>स्रोत: Scaling up to your first 10 million users</a></i>"
  },
  {
    "row": 880,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 881,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 882,
    "rowsha": "6CpIVgG1fedEHSkE+AjkRFPSk2jSS2EzkrJcBgSrr/c=",
    "originContent": "Federation (or functional partitioning) splits up databases by function.  For example, instead of a single, monolithic database, you could have three databases: **forums**, **users**, and **products**, resulting in less read and write traffic to each database and therefore less replication lag.  Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality.  With no single central master serializing writes you can write in parallel, increasing throughput.",
    "translatedContent": "फेडरेशन (या फंक्शनल पार्टीशनिंग) डेटाबेस को कार्य के अनुसार विभाजित करता है। उदाहरण के लिए, एक एकल, एकीकृत डेटाबेस की बजाय, आप तीन डेटाबेस रख सकते हैं: **forums**, **users**, और **products**। इससे प्रत्येक डेटाबेस पर पढ़ने और लिखने का ट्रैफिक कम होता है और प्रतिकृति में विलंब भी कम होता है। छोटे डेटाबेस का अर्थ है अधिक डेटा मेमोरी में समा सकता है, जिससे कैश locality बेहतर होने के कारण अधिक कैश हिट्स मिलती हैं। किसी एकल केंद्रीय मास्टर द्वारा लिखाई को अनुक्रमित न करने से आप समांतर रूप से लिख सकते हैं, जिससे throughput बढ़ता है।"
  },
  {
    "row": 883,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 884,
    "rowsha": "8NRAtt8cUCVReGZVjdiR0ic6ZlxVTZyQnzqDXz1x3ns=",
    "originContent": "##### Disadvantage(s): federation",
    "translatedContent": "##### नुकसान: फेडरेशन"
  },
  {
    "row": 885,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 886,
    "rowsha": "mEdUM+F+TzuYV+CUAAJnjEy6qds4uY9NoqXgOUx4mwg=",
    "originContent": "* Federation is not effective if your schema requires huge functions or tables.",
    "translatedContent": "* यदि आपकी schema को बड़े functions या tables की आवश्यकता है तो फेडरेशन प्रभावी नहीं है।"
  },
  {
    "row": 887,
    "rowsha": "8fAaxzwAdRdL9BwgKYVI4Q3QFXwplWEWbttAXdktT0A=",
    "originContent": "* You'll need to update your application logic to determine which database to read and write.",
    "translatedContent": "* आपको अपनी एप्लिकेशन लॉजिक को यह निर्धारित करने के लिए अपडेट करना होगा कि किस डेटाबेस से पढ़ना और लिखना है।"
  },
  {
    "row": 888,
    "rowsha": "cqsCfhuwTHvUmwV/oNeW9IPSqScbRykfnAFfEfLd6hA=",
    "originContent": "* Joining data from two databases is more complex with a [server link](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers).",
    "translatedContent": "* दो डेटाबेस से डेटा जोड़ना [सर्वर लिंक](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers) के साथ अधिक जटिल है।"
  },
  {
    "row": 889,
    "rowsha": "Kahr1ikLDwcjnq5Cq2y5YKxL9/Ey/v2zGojCDvRuVGY=",
    "originContent": "* Federation adds more hardware and additional complexity.",
    "translatedContent": "* फेडरेशन अधिक हार्डवेयर और अतिरिक्त जटिलता जोड़ता है।"
  },
  {
    "row": 890,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 891,
    "rowsha": "BY32QoPUVb8Dpawhv1bBM42WT6ys67aUtLOBe30eMCA=",
    "originContent": "##### Source(s) and further reading: federation",
    "translatedContent": "##### स्रोत और आगे पढ़ें: फेडरेशन"
  },
  {
    "row": 892,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 893,
    "rowsha": "vkDetycwDenvATQ4NQZL68mF8E1QMw9OoWjyhccat6E=",
    "originContent": "* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)",
    "translatedContent": "* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)"
  },
  {
    "row": 894,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 895,
    "rowsha": "EuJ+I1tYDDJNva+aKr2FhDX7+Ag1q9ANl9QERiJ8OdI=",
    "originContent": "#### Sharding",
    "translatedContent": "#### शार्डिंग"
  },
  {
    "row": 896,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 897,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 898,
    "rowsha": "PxtRcRTfviap+02exC/YvnmEw9ks/Z+lzyqCIgIuigA=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wU8x5Id.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wU8x5Id.png\">"
  },
  {
    "row": 899,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 900,
    "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
    "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
    "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>स्रोत: स्केलेबिलिटी, उपलब्धता, स्थिरता, पैटर्न</a></i>"
  },
  {
    "row": 901,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 902,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 903,
    "rowsha": "F5OV3J6j0odiSHpcEdzaWn4rxZU6nk/JVG2szmBexBY=",
    "originContent": "Sharding distributes data across different databases such that each database can only manage a subset of the data.  Taking a users database as an example, as the number of users increases, more shards are added to the cluster.",
    "translatedContent": "शार्डिंग डेटा को विभिन्न डेटाबेसों में वितरित करता है ताकि प्रत्येक डेटाबेस केवल डेटा के एक उपसमुच्चय को ही प्रबंधित कर सके। उदाहरण के लिए, जब उपयोगकर्ताओं की संख्या बढ़ती है, तो क्लस्टर में और शार्ड जोड़े जाते हैं।"
  },
  {
    "row": 904,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 905,
    "rowsha": "Lfy7zn8jTo/EGEj0QfDdbDr9azAIO2YamEBn+y5moLk=",
    "originContent": "Similar to the advantages of [federation](#federation), sharding results in less read and write traffic, less replication, and more cache hits.  Index size is also reduced, which generally improves performance with faster queries.  If one shard goes down, the other shards are still operational, although you'll want to add some form of replication to avoid data loss.  Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.",
    "translatedContent": "[फेडरेशन](#federation) के लाभों के समान, शार्डिंग से पढ़ने और लिखने का ट्रैफिक कम होता है, कम रेप्लिकेशन होता है, और अधिक कैश हिट्स मिलते हैं। इंडेक्स का आकार भी छोटा होता है, जिससे आमतौर पर क्वेरीज़ तेज़ हो जाती हैं और प्रदर्शन सुधरता है। यदि कोई एक शार्ड डाउन हो जाता है, तो अन्य शार्ड्स चालू रहते हैं, हालांकि डेटा लॉस से बचाव के लिए आपको किसी प्रकार का रेप्लिकेशन जोड़ना होगा। फेडरेशन की तरह, यहां कोई एक केंद्रीय मास्टर नहीं होता जो लिखावटों को सीरियलाइज़ करे, जिससे आप समानांतर में अधिक थ्रूपुट के साथ लिख सकते हैं।"
  },
  {
    "row": 906,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 907,
    "rowsha": "izo5bEdM4FbdKop2HmZ4gLi9i5EiLAHVW8KiFBl4opw=",
    "originContent": "Common ways to shard a table of users is either through the user's last name initial or the user's geographic location.",
    "translatedContent": "उपयोगकर्ताओं की तालिका को शार्ड करने के सामान्य तरीके या तो उपयोगकर्ता के अंतिम नाम के प्रारंभिक अक्षर या उपयोगकर्ता के भौगोलिक स्थान के आधार पर होते हैं।"
  },
  {
    "row": 908,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 909,
    "rowsha": "lCoMVSE1J92DI277I/r122+KSgnM23erK0vofboQIIo=",
    "originContent": "##### Disadvantage(s): sharding",
    "translatedContent": "##### नुकसान: शार्डिंग"
  },
  {
    "row": 910,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 911,
    "rowsha": "SEhUSrJxZf54oC/CYWYhkQ0/9R5JuyXBkwI9sZ9c9Ng=",
    "originContent": "* You'll need to update your application logic to work with shards, which could result in complex SQL queries.",
    "translatedContent": "* आपको अपने एप्लिकेशन लॉजिक को शार्ड्स के साथ काम करने के लिए अपडेट करना पड़ेगा, जिससे जटिल SQL क्वेरी बन सकती हैं।"
  },
  {
    "row": 912,
    "rowsha": "YX5AFXam6gkQuYYb0/60YswS8hSjDkjOH9u6QAYeOMM=",
    "originContent": "* Data distribution can become lopsided in a shard.  For example, a set of power users on a shard could result in increased load to that shard compared to others.",
    "translatedContent": "* एक शार्ड में डेटा वितरण असमान हो सकता है। उदाहरण के लिए, यदि किसी शार्ड पर कई पावर यूज़र हैं, तो उस शार्ड पर लोड अन्य शार्ड्स की तुलना में अधिक हो सकता है।"
  },
  {
    "row": 913,
    "rowsha": "dE4Jy2l1bIqQ18T4hE/k9C7j4b5ZZ9hnHGkmDpfkN7Y=",
    "originContent": "    * Rebalancing adds additional complexity.  A sharding function based on [consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) can reduce the amount of transferred data.",
    "translatedContent": "    * रीबैलेंसिंग में अतिरिक्त जटिलता जुड़ जाती है। [कंसिस्टेंट हैशिंग](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) पर आधारित शार्डिंग फंक्शन ट्रांसफर किए गए डेटा की मात्रा को कम कर सकता है।"
  },
  {
    "row": 914,
    "rowsha": "6n42TN5GtJy/2lHDi9RgSZg1qVpsVMO1xADU7+3gHX4=",
    "originContent": "* Joining data from multiple shards is more complex.",
    "translatedContent": "* कई शार्ड्स से डेटा को जोड़ना अधिक जटिल हो जाता है।"
  },
  {
    "row": 915,
    "rowsha": "ipm6+/HtIOpd+hbYUvP/Bv1g29y4wvRWAJnMI2XW5tw=",
    "originContent": "* Sharding adds more hardware and additional complexity.",
    "translatedContent": "* शार्डिंग अतिरिक्त हार्डवेयर और जटिलता जोड़ता है।"
  },
  {
    "row": 916,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 917,
    "rowsha": "Fi+Z3mSn+uCejt4xgb3fkCV1ijHEcxXLLrzjHQqAOa0=",
    "originContent": "##### Source(s) and further reading: sharding",
    "translatedContent": "##### स्रोत और आगे पढ़ें: शार्डिंग"
  },
  {
    "row": 918,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 919,
    "rowsha": "itXuAmLWlCwpSKUui/Qqn9QGxUnp/FGJhe5mn9ZzB48=",
    "originContent": "* [The coming of the shard](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)",
    "translatedContent": "* [द कमिंग ऑफ द शार्ड](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)"
  },
  {
    "row": 920,
    "rowsha": "HQ0nX3NLA+ABmND5wOZaYuHfjS1iR/UWAl9XzEPqgcQ=",
    "originContent": "* [Shard database architecture](https://en.wikipedia.org/wiki/Shard_(database_architecture))",
    "translatedContent": "* [शार्ड डेटाबेस आर्किटेक्चर](https://en.wikipedia.org/wiki/Shard_(database_architecture))"
  },
  {
    "row": 921,
    "rowsha": "qJZYEUpxy4rXFmMb9azcCni271IPtkDahT2V3dE7iA0=",
    "originContent": "* [Consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)",
    "translatedContent": "* [कंसिस्टेंट हैशिंग](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)"
  },
  {
    "row": 922,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 923,
    "rowsha": "s57oiOl6dHavHY9NxVG6ALFu3iT0Ifyq/Pbc97i/NLM=",
    "originContent": "#### Denormalization",
    "translatedContent": "#### डीनॉर्मलाइज़ेशन"
  },
  {
    "row": 924,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 925,
    "rowsha": "+1IDgptxiwSskgqndvkmmbVxaHmS7OAVhZpIwqKbKTQ=",
    "originContent": "Denormalization attempts to improve read performance at the expense of some write performance.  Redundant copies of the data are written in multiple tables to avoid expensive joins.  Some RDBMS such as [PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) and Oracle support [materialized views](https://en.wikipedia.org/wiki/Materialized_view) which handle the work of storing redundant information and keeping redundant copies consistent.",
    "translatedContent": "डीनॉर्मलाइज़ेशन पढ़ने के प्रदर्शन को बेहतर बनाने का प्रयास करता है, हालांकि इससे कुछ लिखने के प्रदर्शन में गिरावट आ सकती है। महंगे जॉइन से बचने के लिए डेटा की अतिरिक्त प्रतियां कई तालिकाओं में लिखी जाती हैं। कुछ RDBMS जैसे [PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) और Oracle [मटेरियलाइज़्ड व्यूज़](https://en.wikipedia.org/wiki/Materialized_view) का समर्थन करते हैं, जो अतिरिक्त जानकारी को संग्रहीत करने और प्रतियों को समन्वित रखने का कार्य संभालते हैं।"
  },
  {
    "row": 926,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 927,
    "rowsha": "IAh+53HHkkxkwiNpxVIbMvxQGPwrzsTCQmsELK4gpDs=",
    "originContent": "Once data becomes distributed with techniques such as [federation](#federation) and [sharding](#sharding), managing joins across data centers further increases complexity.  Denormalization might circumvent the need for such complex joins.",
    "translatedContent": "एक बार जब डेटा को [फेडरेशन](#federation) और [शार्डिंग](#sharding) जैसी तकनीकों से वितरित कर दिया जाता है, तो डेटा सेंटर्स के बीच जॉइन्स को प्रबंधित करना और भी अधिक जटिल हो जाता है। डीनॉर्मलाइज़ेशन ऐसी जटिल जॉइन्स की आवश्यकता को टाल सकता है।"
  },
  {
    "row": 928,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 929,
    "rowsha": "t3pn0RZ5W4Ja+hl9xB4HjVIiFfvPXFzMOeaq+3wUTbw=",
    "originContent": "In most systems, reads can heavily outnumber writes 100:1 or even 1000:1.  A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.",
    "translatedContent": "अधिकांश प्रणालियों में, पढ़ने की दर लिखने से बहुत अधिक होती है, जैसे 100:1 या यहां तक कि 1000:1। एक पढ़ाई जो जटिल डेटाबेस जॉइन में बदलती है, वह बहुत महंगी हो सकती है और इसमें डिस्क ऑपरेशन्स पर काफी समय लग सकता है।"
  },
  {
    "row": 930,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 931,
    "rowsha": "Hbk59RevQ6Dv6Jf1E2dzsW81DkPlAJWNVC22YWW6etY=",
    "originContent": "##### Disadvantage(s): denormalization",
    "translatedContent": "##### नुकसान: डीनॉर्मलाइज़ेशन"
  },
  {
    "row": 932,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 933,
    "rowsha": "h7dALOvHjiThg/ehALJGlyLLjDuOa7Gpxawo/53DleU=",
    "originContent": "* Data is duplicated.",
    "translatedContent": "* डेटा डुप्लिकेट हो जाता है।"
  },
  {
    "row": 934,
    "rowsha": "NUiSjydXB95eCLDbXyuj2BNExzPmu9KAho8rKYGMx/Q=",
    "originContent": "* Constraints can help redundant copies of information stay in sync, which increases complexity of the database design.",
    "translatedContent": "* प्रतिबंध (constraints) अतिरिक्त प्रतियों को समन्वित रखने में मदद कर सकते हैं, जिससे डेटाबेस डिज़ाइन की जटिलता बढ़ जाती है।"
  },
  {
    "row": 935,
    "rowsha": "cJ8O67v4dZrlrT43vM5IFSqWAYKP8ZDyarQYWVeBrEc=",
    "originContent": "* A denormalized database under heavy write load might perform worse than its normalized counterpart.",
    "translatedContent": "* भारी लिखावट लोड में डीनॉर्मलाइज़्ड डेटाबेस का प्रदर्शन सामान्यीकृत डेटाबेस से भी खराब हो सकता है।"
  },
  {
    "row": 936,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 937,
    "rowsha": "nnuCvraYRHI06NfCMt1HStO4iMVKfvEZIwMYtroGmMY=",
    "originContent": "###### Source(s) and further reading: denormalization",
    "translatedContent": "###### स्रोत और आगे पढ़ें: डीनॉर्मलाइज़ेशन"
  },
  {
    "row": 938,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 939,
    "rowsha": "iIyxeoiOMWug4ow1XbmqynlJ+PcmqBpyIDnezOOZUL0=",
    "originContent": "* [Denormalization](https://en.wikipedia.org/wiki/Denormalization)",
    "translatedContent": "* [डिनॉर्मलाइज़ेशन](https://en.wikipedia.org/wiki/Denormalization)"
  },
  {
    "row": 940,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 941,
    "rowsha": "U5ndIFTCEShOejPdXAcWGYg52WXS+13jBS9xbWv7wMs=",
    "originContent": "#### SQL tuning",
    "translatedContent": "#### SQL ट्यूनिंग"
  },
  {
    "row": 942,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 943,
    "rowsha": "5brMlLXsZCP6LeY90lPE/nA+F1R3Utnc7TWB1cMbKvY=",
    "originContent": "SQL tuning is a broad topic and many [books](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) have been written as reference.",
    "translatedContent": "SQL ट्यूनिंग एक व्यापक विषय है और कई [पुस्तकों](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) को संदर्भ के रूप में लिखा गया है।"
  },
  {
    "row": 944,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 945,
    "rowsha": "5u8i4iK+CoFzMuDptTzgAx+bnssPksaKCXkH86MCY4s=",
    "originContent": "It's important to **benchmark** and **profile** to simulate and uncover bottlenecks.",
    "translatedContent": "बॉटलनेक्स को उजागर करने और अनुकरण करने के लिए **बेंचमार्क** और **प्रोफाइल** करना महत्वपूर्ण है।"
  },
  {
    "row": 946,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 947,
    "rowsha": "II+JElcbGGHyu2RJs5bHJ0InzuqF1/tz4JP7H5AEqdQ=",
    "originContent": "* **Benchmark** - Simulate high-load situations with tools such as [ab](http://httpd.apache.org/docs/2.2/programs/ab.html).",
    "translatedContent": "* **बेंचमार्क** - उच्च-लोड स्थितियों का अनुकरण करने के लिए [ab](http://httpd.apache.org/docs/2.2/programs/ab.html) जैसे टूल का उपयोग करें।"
  },
  {
    "row": 948,
    "rowsha": "HidKyGa3w0J9QeKvVFBjDdAuizjiBA95vkLhz73tUDU=",
    "originContent": "* **Profile** - Enable tools such as the [slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) to help track performance issues.",
    "translatedContent": "* **प्रोफाइल** - प्रदर्शन समस्याओं को ट्रैक करने में मदद के लिए [slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) जैसे टूल सक्षम करें।"
  },
  {
    "row": 949,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 950,
    "rowsha": "MxUDF1UOp7Uhj70JBdhUVQ5CaUUc2+NbpgkI6ApbKyA=",
    "originContent": "Benchmarking and profiling might point you to the following optimizations.",
    "translatedContent": "बेंचमार्किंग और प्रोफाइलिंग आपको निम्नलिखित ऑप्टिमाइजेशन की ओर इंगित कर सकते हैं।"
  },
  {
    "row": 951,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 952,
    "rowsha": "u5IrR5ipsHN+pmd7KJM6DZ47AQY6O9z21yrakX+p7e4=",
    "originContent": "##### Tighten up the schema",
    "translatedContent": "##### स्कीमा को कसें"
  },
  {
    "row": 953,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 954,
    "rowsha": "tGSDpkjsV4aFG9uXbAK76iv8jrdgV/0HBJsT4UsIdwg=",
    "originContent": "* MySQL dumps to disk in contiguous blocks for fast access.",
    "translatedContent": "* MySQL तेज़ एक्सेस के लिए डिस्क पर लगातार ब्लॉक्स में डंप करता है।"
  },
  {
    "row": 955,
    "rowsha": "9gIPpL1647pzLPkBZ6AgMCiqSyaKaBKegN4/EvaGzm8=",
    "originContent": "* Use `CHAR` instead of `VARCHAR` for fixed-length fields.",
    "translatedContent": "* निश्चित-लंबाई वाले फ़ील्ड्स के लिए `CHAR` का उपयोग करें बजाय `VARCHAR` के।"
  },
  {
    "row": 956,
    "rowsha": "lhkqcIlaheLGSENEe6oZyjGPgobHm6cwBHhZ9NafKqw=",
    "originContent": "    * `CHAR` effectively allows for fast, random access, whereas with `VARCHAR`, you must find the end of a string before moving onto the next one.",
    "translatedContent": "    * `CHAR` प्रभावी रूप से तेज़, रैंडम एक्सेस की अनुमति देता है, जबकि `VARCHAR` में आपको अगले स्ट्रिंग पर जाने से पहले उसकी समाप्ति ढूंढनी होती है।"
  },
  {
    "row": 957,
    "rowsha": "0V8mWY0KW7QM7D0eAZ7QKic9h2Jg0KiEx5p8KVtnl6k=",
    "originContent": "* Use `TEXT` for large blocks of text such as blog posts.  `TEXT` also allows for boolean searches.  Using a `TEXT` field results in storing a pointer on disk that is used to locate the text block.",
    "translatedContent": "* बड़े टेक्स्ट ब्लॉक्स जैसे ब्लॉग पोस्ट के लिए `TEXT` का उपयोग करें। `TEXT` बूलियन सर्च की अनुमति देता है। `TEXT` फ़ील्ड का उपयोग करने पर डिस्क पर एक पॉइंटर स्टोर होता है जिससे टेक्स्ट ब्लॉक का स्थान मिलता है।"
  },
  {
    "row": 958,
    "rowsha": "t8hHr5wk/UHSmQQufr7dfbq6nktotJdiAiQLY+sE7OI=",
    "originContent": "* Use `INT` for larger numbers up to 2^32 or 4 billion.",
    "translatedContent": "* बड़े नंबरों के लिए 2^32 या 4 बिलियन तक के लिए `INT` का उपयोग करें।"
  },
  {
    "row": 959,
    "rowsha": "hSaQIvpb16EPKhqsLrLsBcB1op6TeSWA67kBD2PKxFM=",
    "originContent": "* Use `DECIMAL` for currency to avoid floating point representation errors.",
    "translatedContent": "* मुद्रा के लिए `DECIMAL` का उपयोग करें ताकि फ्लोटिंग पॉइंट रिप्रेजेंटेशन की गलतियों से बचा जा सके।"
  },
  {
    "row": 960,
    "rowsha": "MtDcdxih3EmsrV7+ubmZO1KV7JJiCZSPEH635MXjasw=",
    "originContent": "* Avoid storing large `BLOBS`, store the location of where to get the object instead.",
    "translatedContent": "* बड़े `BLOB` को स्टोर करने से बचें, वस्तु का स्थान स्टोर करें।"
  },
  {
    "row": 961,
    "rowsha": "T2aMXNnESv7wYsO/crJGAzFNtuk9/x5SWapccZkIwHE=",
    "originContent": "* `VARCHAR(255)` is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.",
    "translatedContent": "* `VARCHAR(255)` 8 बिट नंबर में गिने जा सकने वाले कैरेक्टर्स की अधिकतम संख्या है, जो कुछ RDBMS में एक बाइट का सर्वोत्तम उपयोग करती है।"
  },
  {
    "row": 962,
    "rowsha": "UzsxCnaOGDxdp2upn2wCbaWJcNNgR9CLWJ2Pzmjy/6s=",
    "originContent": "* Set the `NOT NULL` constraint where applicable to [improve search performance](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search).",
    "translatedContent": "* जहाँ लागू हो वहाँ `NOT NULL` कन्स्ट्रेंट सेट करें ताकि [सर्च प्रदर्शन सुधारें](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)।"
  },
  {
    "row": 963,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 964,
    "rowsha": "Obb8RdGWv3wj8OLBsDSYQniNzl0LL16KDKeVQTWmSrk=",
    "originContent": "##### Use good indices",
    "translatedContent": "##### अच्छे इंडेक्स का उपयोग करें"
  },
  {
    "row": 965,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 966,
    "rowsha": "I3Z/8w9LMizBNk88O53iEkNM2kMwm5iUQVIO+PyuQpY=",
    "originContent": "* Columns that you are querying (`SELECT`, `GROUP BY`, `ORDER BY`, `JOIN`) could be faster with indices.",
    "translatedContent": "* वो कॉलम जिनका आप क्वेरी कर रहे हैं (`SELECT`, `GROUP BY`, `ORDER BY`, `JOIN`), इंडेक्स के साथ तेज़ हो सकते हैं।"
  },
  {
    "row": 967,
    "rowsha": "L5R3v64NMHuCGa/ABwQ8pt0GLmmeRLG5zWxEy4G460I=",
    "originContent": "* Indices are usually represented as self-balancing [B-tree](https://en.wikipedia.org/wiki/B-tree) that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.",
    "translatedContent": "* इंडेक्स सामान्यतः सेल्फ-बैलेंसिंग [B-tree](https://en.wikipedia.org/wiki/B-tree) के रूप में होते हैं, जो डेटा को सॉर्टेड रखते हैं और खोज, अनुक्रमिक एक्सेस, इनसर्शन, डिलीशन को लॉगरिदमिक समय में संभव बनाते हैं।"
  },
  {
    "row": 968,
    "rowsha": "yviMqnF4X4iHYQz6ihAQYvmm5LPII9mblfqgtZUJuZw=",
    "originContent": "* Placing an index can keep the data in memory, requiring more space.",
    "translatedContent": "* इंडेक्स लगाने पर डेटा मेमोरी में रह सकता है, जिससे अधिक स्थान लगेगा।"
  },
  {
    "row": 969,
    "rowsha": "fVT5ImvVq9tVwugCmbfwZ4dmJB3v0TJkT5xn8CQYbUA=",
    "originContent": "* Writes could also be slower since the index also needs to be updated.",
    "translatedContent": "* लिखाई भी धीमी हो सकती है क्योंकि इंडेक्स को भी अपडेट करना होता है।"
  },
  {
    "row": 970,
    "rowsha": "3P9aEmuDPtDdcLFPTfOBZnyir28sz5DgZU1DIDE+DWY=",
    "originContent": "* When loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.",
    "translatedContent": "* जब बड़ी मात्रा में डेटा लोड कर रहे हों, तो इंडेक्स को डिसेबल करना, डेटा लोड करना, फिर इंडेक्स को रीबिल्ड करना तेज़ हो सकता है।"
  },
  {
    "row": 971,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 972,
    "rowsha": "pwtda6pPueokL8TZDWjw+GtxnDUI6u6d5i+Xp1kr54Y=",
    "originContent": "##### Avoid expensive joins",
    "translatedContent": "##### महंगे जॉइन से बचें"
  },
  {
    "row": 973,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 974,
    "rowsha": "TyrVGvzJe7Ma0vI+OREiBdD/TruYT5c6TFwW8PfedoE=",
    "originContent": "* [Denormalize](#denormalization) where performance demands it.",
    "translatedContent": "* प्रदर्शन की मांग होने पर [डिनॉर्मलाइज़ करें](#denormalization)।"
  },
  {
    "row": 975,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 976,
    "rowsha": "j/DHOl2CUihQ0aoZTeQnTlS3Bmv3WLUxHsyAyzQfsNY=",
    "originContent": "##### Partition tables",
    "translatedContent": "##### टेबल्स को पार्टिशन करें"
  },
  {
    "row": 977,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 978,
    "rowsha": "fDJd9UP3ZkBQh55z5wCqO2ZC5iekS7iNMGJSEmOfTJo=",
    "originContent": "* Break up a table by putting hot spots in a separate table to help keep it in memory.",
    "translatedContent": "* एक तालिका को विभाजित करें, गर्म स्थानों को अलग तालिका में डालें ताकि इसे मेमोरी में रखने में मदद मिले।"
  },
  {
    "row": 979,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 980,
    "rowsha": "BC4S3RozMKOgb1UI3/WBh0eYNQqpReqQQW21Ohr1N2o=",
    "originContent": "##### Tune the query cache",
    "translatedContent": "##### क्वेरी कैश को ट्यून करें"
  },
  {
    "row": 981,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 982,
    "rowsha": "3Uk6ayLGRzDqrU9rKbpTOydn5wU3jTHQrbqyL6RcowA=",
    "originContent": "* In some cases, the [query cache](https://dev.mysql.com/doc/refman/5.7/en/query-cache.html) could lead to [performance issues](https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/).",
    "translatedContent": "* कुछ मामलों में, [क्वेरी कैश](https://dev.mysql.com/doc/refman/5.7/en/query-cache.html) [प्रदर्शन संबंधी समस्याओं](https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/) का कारण बन सकता है।"
  },
  {
    "row": 983,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 984,
    "rowsha": "a50PuCVHJ0Y+BkYY356Q6mzQMoUT3VRvizr6CovMsGQ=",
    "originContent": "##### Source(s) and further reading: SQL tuning",
    "translatedContent": "##### स्रोत(स) और आगे की पढ़ाई: SQL ट्यूनिंग"
  },
  {
    "row": 985,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 986,
    "rowsha": "wUTwxCwBGbPe0VO1BR1pqZ4rfb2NH1f9MDRNi2tIn/U=",
    "originContent": "* [Tips for optimizing MySQL queries](http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/)",
    "translatedContent": "* [MySQL क्वेरी को ऑप्टिमाइज़ करने के टिप्स](http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/)"
  },
  {
    "row": 987,
    "rowsha": "0ZV972rblZnm5jEwegux1gMAE4J+IcSqx4XmVFF31YU=",
    "originContent": "* [Is there a good reason i see VARCHAR(255) used so often?](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)",
    "translatedContent": "* [क्या कोई अच्छा कारण है कि मैं VARCHAR(255) का उपयोग बार-बार देखता हूँ?](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)"
  },
  {
    "row": 988,
    "rowsha": "uIQOQpGW6bocvYblsIc43hxMQnaOvdi120zGiwT0gow=",
    "originContent": "* [How do null values affect performance?](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)",
    "translatedContent": "* [NULL मान प्रदर्शन को कैसे प्रभावित करते हैं?](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)"
  },
  {
    "row": 989,
    "rowsha": "/FNda9UueetEOGQSH4v3G+a2HM3In4GsZlwpz614WXQ=",
    "originContent": "* [Slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)",
    "translatedContent": "* [धीमी क्वेरी लॉग](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)"
  },
  {
    "row": 990,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 991,
    "rowsha": "kV3WP/Mo/6zSEkXz7rHo5EaqHrx2KCry3nNtiDqzpsA=",
    "originContent": "### NoSQL",
    "translatedContent": "### NoSQL"
  },
  {
    "row": 992,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 993,
    "rowsha": "CEKp6caNMr4jfBbLWmcFki2vTCaNA+yjnw2hf39UVSk=",
    "originContent": "NoSQL is a collection of data items represented in a **key-value store**, **document store**, **wide column store**, or a **graph database**.  Data is denormalized, and joins are generally done in the application code.  Most NoSQL stores lack true ACID transactions and favor [eventual consistency](#eventual-consistency).",
    "translatedContent": "NoSQL डेटा आइटम्स का एक संग्रह है, जो **की-वैल्यू स्टोर**, **डॉक्युमेंट स्टोर**, **वाइड कॉलम स्टोर**, या **ग्राफ डाटाबेस** में दर्शाया जाता है। डेटा डीनॉर्मलाइज़्ड होता है, और आमतौर पर जॉइन एप्लिकेशन कोड में किए जाते हैं। अधिकांश NoSQL स्टोर्स में वास्तविक ACID ट्रांजैक्शन नहीं होते और वे [eventual consistency](#eventual-consistency) को प्राथमिकता देते हैं।"
  },
  {
    "row": 994,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 995,
    "rowsha": "OolYsTg6lgsX5HZcwoJmeBzKZHleg2HAhGDBpNyrJfI=",
    "originContent": "**BASE** is often used to describe the properties of NoSQL databases.  In comparison with the [CAP Theorem](#cap-theorem), BASE chooses availability over consistency.",
    "translatedContent": "**BASE** शब्द का उपयोग अक्सर NoSQL डाटाबेस की विशेषताओं को बताने के लिए किया जाता है। [CAP प्रमेय](#cap-theorem) की तुलना में, BASE स्थिरता की बजाय उपलब्धता चुनता है।"
  },
  {
    "row": 996,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 997,
    "rowsha": "chSarlSDBtUVuwDK7e26fiI5R5hTuGk0CbTUYJTMm+w=",
    "originContent": "* **Basically available** - the system guarantees availability.",
    "translatedContent": "* **मूल रूप से उपलब्ध** - सिस्टम उपलब्धता की गारंटी देता है।"
  },
  {
    "row": 998,
    "rowsha": "3zSuAgJX6OHxsVDP//zz9GyjNMkot0vNrn8P6pP9E/Y=",
    "originContent": "* **Soft state** - the state of the system may change over time, even without input.",
    "translatedContent": "* **सॉफ्ट स्टेट** - सिस्टम की स्थिति समय के साथ बदल सकती है, भले ही कोई इनपुट न हो।"
  },
  {
    "row": 999,
    "rowsha": "ceCH/qNFSLL/vJifbs54NePnn6y/pTbFop3uVG6rFKw=",
    "originContent": "* **Eventual consistency** - the system will become consistent over a period of time, given that the system doesn't receive input during that period.",
    "translatedContent": "* **इवैंचुअल कंसिस्टेंसी** - सिस्टम एक निश्चित समय के बाद स्थिर हो जाएगा, बशर्ते उस दौरान कोई इनपुट न मिले।"
  },
  {
    "row": 1000,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1001,
    "rowsha": "PVvLz25MjW/34Y3pABr8GsX3KsWTVm02u/VV92C+WJ0=",
    "originContent": "In addition to choosing between [SQL or NoSQL](#sql-or-nosql), it is helpful to understand which type of NoSQL database best fits your use case(s).  We'll review **key-value stores**, **document stores**, **wide column stores**, and **graph databases** in the next section.",
    "translatedContent": "[SQL या NoSQL](#sql-or-nosql) के बीच चयन करने के अलावा, यह समझना भी उपयोगी है कि किस प्रकार का NoSQL डाटाबेस आपके उपयोग के मामले(यों) के लिए सबसे उपयुक्त है। अगले सेक्शन में हम **की-वैल्यू स्टोर्स**, **डॉक्युमेंट स्टोर्स**, **वाइड कॉलम स्टोर्स**, और **ग्राफ डाटाबेस** की समीक्षा करेंगे।"
  },
  {
    "row": 1002,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1003,
    "rowsha": "AU4OrqfmzsHa8IVmkfad5gr3gPN07h7azjS3wSaZ8Iw=",
    "originContent": "#### Key-value store",
    "translatedContent": "#### की-वैल्यू स्टोर"
  },
  {
    "row": 1004,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1005,
    "rowsha": "jsk54oTGWttneDXu+knddGlH1u/75MMwNITE8GKeQkk=",
    "originContent": "> Abstraction: hash table",
    "translatedContent": "> अमूर्तता: हैश टेबल"
  },
  {
    "row": 1006,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1007,
    "rowsha": "ygti4CVTZaPSYssVx3m3kVVqfA2fjw7lUGjFMJSEsYc=",
    "originContent": "A key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD.  Data stores can maintain keys in [lexicographic order](https://en.wikipedia.org/wiki/Lexicographical_order), allowing efficient retrieval of key ranges.  Key-value stores can allow for storing of metadata with a value.",
    "translatedContent": "एक की-वैल्यू स्टोर आमतौर पर O(1) रीड और राइट की अनुमति देता है और अक्सर मेमोरी या SSD द्वारा समर्थित होता है। डेटा स्टोर्स [lexicographic क्रम](https://en.wikipedia.org/wiki/Lexicographical_order) में कीज़ को रख सकते हैं, जिससे की रेंज को कुशलता से प्राप्त किया जा सकता है। की-वैल्यू स्टोर्स किसी वैल्यू के साथ मेटाडेटा स्टोर करने की अनुमति दे सकते हैं।"
  },
  {
    "row": 1008,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1009,
    "rowsha": "qi5SjJ2XGdneToPTz694QmBF5qG6Z70N0dZRtmGxV7g=",
    "originContent": "Key-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer.  Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.",
    "translatedContent": "की-वैल्यू स्टोर्स उच्च प्रदर्शन प्रदान करते हैं और आमतौर पर सरल डेटा मॉडल या तेजी से बदलने वाले डेटा के लिए उपयोग किए जाते हैं, जैसे कि इन-मेमोरी कैश लेयर। चूंकि वे केवल सीमित ऑपरेशन सेट प्रदान करते हैं, अगर अतिरिक्त ऑपरेशन की आवश्यकता हो तो जटिलता एप्लिकेशन लेयर में स्थानांतरित हो जाती है।"
  },
  {
    "row": 1010,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1011,
    "rowsha": "TEEwNq1KrPGaVWvsxzFIQiZ/kvAwkxokKFSwEkDAz48=",
    "originContent": "A key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.",
    "translatedContent": "एक की-वैल्यू स्टोर अधिक जटिल सिस्टम जैसे कि डॉक्युमेंट स्टोर, और कुछ मामलों में ग्राफ डाटाबेस का आधार होता है।"
  },
  {
    "row": 1012,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1013,
    "rowsha": "E5C/yjA/ttJtcaXYiV6PkdciTfa6hTIqZ4r6wbKT3yc=",
    "originContent": "##### Source(s) and further reading: key-value store",
    "translatedContent": "##### स्रोत(स) और आगे की पढ़ाई: की-वैल्यू स्टोर"
  },
  {
    "row": 1014,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1015,
    "rowsha": "PWiaPe8hUnJ7hUARatj3ng0NgHEaVn+NkAK75z4SutA=",
    "originContent": "* [Key-value database](https://en.wikipedia.org/wiki/Key-value_database)",
    "translatedContent": "* [की-वैल्यू डाटाबेस](https://en.wikipedia.org/wiki/Key-value_database)"
  },
  {
    "row": 1016,
    "rowsha": "8xvsqz2OoTlwWPcAb/4IKhFG1snW2pgPt+FiHzA96XI=",
    "originContent": "* [Disadvantages of key-value stores](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)",
    "translatedContent": "* [की-वैल्यू स्टोर्स के नुकसान](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)"
  },
  {
    "row": 1017,
    "rowsha": "Kz9g68oJXv0oJdikjqnf+ZcM7PIE8+ALmDbbOWHElzk=",
    "originContent": "* [Redis architecture](http://qnimate.com/overview-of-redis-architecture/)",
    "translatedContent": "* [Redis आर्किटेक्चर](http://qnimate.com/overview-of-redis-architecture/)"
  },
  {
    "row": 1018,
    "rowsha": "2FrPVpN2ZwP3B8OHC+V00E+qmNtshzxrs6v6iORaa+4=",
    "originContent": "* [Memcached architecture](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)",
    "translatedContent": "* [मेमकैशेड वास्तुकला](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)"
  },
  {
    "row": 1019,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1020,
    "rowsha": "ehl5Zv++MpEJiI3f9zRPX7hJdULwxYItI8UrlQdSpEo=",
    "originContent": "#### Document store",
    "translatedContent": "#### डॉक्युमेंट स्टोर"
  },
  {
    "row": 1021,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1022,
    "rowsha": "11vGJdH1VNomcdXCTch7VFR75wNM3Xrmvq75Ez8olio=",
    "originContent": "> Abstraction: key-value store with documents stored as values",
    "translatedContent": "> अमूर्तता: कुंजी-मूल्य स्टोर जिसमें डॉक्युमेंट्स को मूल्यों के रूप में संग्रहीत किया जाता है"
  },
  {
    "row": 1023,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1024,
    "rowsha": "Qv0EXN9SpfJbx7XgX2VQCHCL2r2dQ0gStwoJYSrTAT0=",
    "originContent": "A document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object.  Document stores provide APIs or a query language to query based on the internal structure of the document itself.  *Note, many key-value stores include features for working with a value's metadata, blurring the lines between these two storage types.*",
    "translatedContent": "एक डॉक्युमेंट स्टोर डॉक्युमेंट्स (XML, JSON, बाइनरी आदि) के इर्द-गिर्द केंद्रित होता है, जहाँ एक डॉक्युमेंट दिए गए ऑब्जेक्ट की सारी जानकारी संग्रहीत करता है। डॉक्युमेंट स्टोर्स API या क्वेरी भाषा प्रदान करते हैं ताकि डॉक्युमेंट की आंतरिक संरचना के आधार पर क्वेरी की जा सके। *नोट, कई की-वैल्यू स्टोर्स में वैल्यू के मेटाडाटा के साथ काम करने की सुविधाएँ होती हैं, जिससे इन दो प्रकार के स्टोरेज के बीच की सीमाएँ धुंधली हो जाती हैं।*"
  },
  {
    "row": 1025,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1026,
    "rowsha": "Lca2PhfpgcFpQwrhUnJR7/mRWsylfqi7UCkmJbWVcQA=",
    "originContent": "Based on the underlying implementation, documents are organized by collections, tags, metadata, or directories.  Although documents can be organized or grouped together, documents may have fields that are completely different from each other.",
    "translatedContent": "आधारभूत कार्यान्वयन के आधार पर, डॉक्युमेंट्स को संग्रह, टैग, मेटाडाटा या निर्देशिकाओं द्वारा व्यवस्थित किया जाता है। हालांकि डॉक्युमेंट्स को व्यवस्थित या समूहित किया जा सकता है, डॉक्युमेंट्स में ऐसे क्षेत्र हो सकते हैं जो एक-दूसरे से पूरी तरह भिन्न हों।"
  },
  {
    "row": 1027,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1028,
    "rowsha": "4vi4/Vf8Z4f1B0iOVgIOtUSfmXRaAkw4ycm0R/ABfj0=",
    "originContent": "Some document stores like [MongoDB](https://www.mongodb.com/mongodb-architecture) and [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) also provide a SQL-like language to perform complex queries.  [DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) supports both key-values and documents.",
    "translatedContent": "कुछ डॉक्युमेंट स्टोर्स जैसे [MongoDB](https://www.mongodb.com/mongodb-architecture) और [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) जटिल क्वेरी करने के लिए SQL-जैसी भाषा भी प्रदान करते हैं। [DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) दोनों की-वैल्यू और डॉक्युमेंट्स को सपोर्ट करता है।"
  },
  {
    "row": 1029,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1030,
    "rowsha": "Ou3d0GkGAFJQy68Jz+zZW1iduw2//drPZPUljkvQeXM=",
    "originContent": "Document stores provide high flexibility and are often used for working with occasionally changing data.",
    "translatedContent": "डॉक्युमेंट स्टोर्स उच्च लचीलापन प्रदान करते हैं और अक्सर कभी-कभी बदलने वाले डेटा के साथ काम करने के लिए इस्तेमाल किए जाते हैं।"
  },
  {
    "row": 1031,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1032,
    "rowsha": "mF5FY4ez5bxPI2BDOdBhAPVR0vGRJuskK8GlQsRT7a0=",
    "originContent": "##### Source(s) and further reading: document store",
    "translatedContent": "##### स्रोत और आगे पढ़ें: डॉक्युमेंट स्टोर"
  },
  {
    "row": 1033,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1034,
    "rowsha": "Lj/AI1FUQWn/HWULDdZdUGDhLMcOKERAz5Tg5s/PSwQ=",
    "originContent": "* [Document-oriented database](https://en.wikipedia.org/wiki/Document-oriented_database)",
    "translatedContent": "* [डॉक्युमेंट-ओरिएंटेड डेटाबेस](https://en.wikipedia.org/wiki/Document-oriented_database)"
  },
  {
    "row": 1035,
    "rowsha": "48ct8mBD8xBot6LutZO7SC8ZtlKdkDK34V56x7kuTZY=",
    "originContent": "* [MongoDB architecture](https://www.mongodb.com/mongodb-architecture)",
    "translatedContent": "* [MongoDB वास्तुकला](https://www.mongodb.com/mongodb-architecture)"
  },
  {
    "row": 1036,
    "rowsha": "ba3ZjitYr2cPoSAe5cUKrHB4QqssIQKddE7XobzORmc=",
    "originContent": "* [CouchDB architecture](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)",
    "translatedContent": "* [CouchDB वास्तुकला](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)"
  },
  {
    "row": 1037,
    "rowsha": "5zWVuoQr71fVFyzl0gqzcC3G5KJPnqXmR4zmM9Dc5Sc=",
    "originContent": "* [Elasticsearch architecture](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)",
    "translatedContent": "* [Elasticsearch वास्तुकला](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)"
  },
  {
    "row": 1038,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1039,
    "rowsha": "sPQV/pViqK0HZza/GwmBLLC+HY8JiqWL5jrTKm8GNEM=",
    "originContent": "#### Wide column store",
    "translatedContent": "#### वाइड कॉलम स्टोर"
  },
  {
    "row": 1040,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1041,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1042,
    "rowsha": "xfWUb3nUMMoN4djxcMV07QR+hOsxkZIWMU3b8C2e/zI=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n16iOGk.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n16iOGk.png\">"
  },
  {
    "row": 1043,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1044,
    "rowsha": "mtExIoNk0GrN1MU1bLs4dnPGykIM8ylGVxt0RNAHvsg=",
    "originContent": "  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>Source: SQL & NoSQL, a brief history</a></i>",
    "translatedContent": "  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>स्रोत: SQL & NoSQL, एक संक्षिप्त इतिहास</a></i>"
  },
  {
    "row": 1045,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 1046,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1047,
    "rowsha": "BmwIK2RuzhKfIKE7Q2io8/uIoE/mkmwX6ekHKxC37Jo=",
    "originContent": "> Abstraction: nested map `ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>`",
    "translatedContent": "> अमूर्तता: नेस्टेड मैप `ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>`"
  },
  {
    "row": 1048,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1049,
    "rowsha": "cUQEPcHCbkvYCI3BpmmszKTCgz/rhlOi2ii3H822hGI=",
    "originContent": "A wide column store's basic unit of data is a column (name/value pair).  A column can be grouped in column families (analogous to a SQL table).  Super column families further group column families.  You can access each column independently with a row key, and columns with the same row key form a row.  Each value contains a timestamp for versioning and for conflict resolution.",
    "translatedContent": "वाइड कॉलम स्टोर की मूल डेटा इकाई एक कॉलम (नाम/मूल्य जोड़ी) है। एक कॉलम को कॉलम परिवारों में समूहित किया जा सकता है (SQL टेबल के समान)। सुपर कॉलम परिवार आगे कॉलम परिवारों को समूहित करते हैं। आप प्रत्येक कॉलम को स्वतंत्र रूप से एक रो कुंजी द्वारा एक्सेस कर सकते हैं, और एक ही रो कुंजी वाले कॉलम एक रो बनाते हैं। प्रत्येक मूल्य में संस्करणिंग और संघर्ष समाधान के लिए एक टाइमस्टैम्प होता है।"
  },
  {
    "row": 1050,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1051,
    "rowsha": "YHSA0r9KXeDCNnFPIxi4/b8CROMFq5wALM7c0dLEf9U=",
    "originContent": "Google introduced [Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) as the first wide column store, which influenced the open-source [HBase](https://www.edureka.co/blog/hbase-architecture/) often-used in the Hadoop ecosystem, and [Cassandra](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html) from Facebook.  Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.",
    "translatedContent": "Google ने [Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) को पहला वाइड कॉलम स्टोर के रूप में पेश किया, जिसने ओपन-सोर्स [HBase](https://www.edureka.co/blog/hbase-architecture/) को प्रभावित किया जो अक्सर Hadoop इकोसिस्टम में उपयोग होता है, और [Cassandra](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html) को Facebook ने बनाया। BigTable, HBase, और Cassandra जैसे स्टोर्स कुंजियों को लेक्सिकोग्राफिक क्रम में रखते हैं, जिससे चयनित कुंजी रेंज को कुशलतापूर्वक प्राप्त किया जा सकता है।"
  },
  {
    "row": 1052,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1053,
    "rowsha": "Vr/6tnY6FGlM//oSMQ4lKD765JEcLAxuAYVqNN8uQws=",
    "originContent": "Wide column stores offer high availability and high scalability.  They are often used for very large data sets.",
    "translatedContent": "वाइड कॉलम स्टोर्स उच्च उपलब्धता और उच्च स्केलेबिलिटी प्रदान करते हैं। इन्हें अक्सर बहुत बड़े डेटा सेट्स के लिए इस्तेमाल किया जाता है।"
  },
  {
    "row": 1054,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1055,
    "rowsha": "wTV4x4YRcpGn9X3CxXchj2v5SOFWDQblcxtODC2OHek=",
    "originContent": "##### Source(s) and further reading: wide column store",
    "translatedContent": "##### स्रोत और आगे पढ़ें: वाइड कॉलम स्टोर"
  },
  {
    "row": 1056,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1057,
    "rowsha": "BFw34s8jH3VIXmTOHkIjAGc6y/waazr0DBBDGeE86qo=",
    "originContent": "* [SQL & NoSQL, a brief history](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)",
    "translatedContent": "* [SQL & NoSQL, एक संक्षिप्त इतिहास](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)"
  },
  {
    "row": 1058,
    "rowsha": "oppKQyS7hTiKzLly1J35kjtTZbIAW3jTCGFPbf00+ss=",
    "originContent": "* [Bigtable architecture](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)",
    "translatedContent": "* [Bigtable वास्तुकला](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)"
  },
  {
    "row": 1059,
    "rowsha": "sBxNvDNoR83xq2ze/NwVGRIZV5QaG+5C2w+GGUF5GIg=",
    "originContent": "* [HBase architecture](https://www.edureka.co/blog/hbase-architecture/)",
    "translatedContent": "* [HBase वास्तुकला](https://www.edureka.co/blog/hbase-architecture/)"
  },
  {
    "row": 1060,
    "rowsha": "2OkslhsJOFtrSf9JY5+/wX6QqrfPa4K/6AgI6Fu9Dik=",
    "originContent": "* [Cassandra architecture](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html)",
    "translatedContent": "* [Cassandra वास्तुकला](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html)"
  },
  {
    "row": 1061,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1062,
    "rowsha": "A/exvQGsrUv6SaskzCJFXL9+mU1RN4e8BAmOFSNDHJg=",
    "originContent": "#### Graph database",
    "translatedContent": "#### ग्राफ डेटाबेस"
  },
  {
    "row": 1063,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1064,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1065,
    "rowsha": "efx2DfpG+WMy5Dh4XIrLZKv0ftO5CSz+k8lKjFQcduk=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/fNcl65g.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/fNcl65g.png\">"
  },
  {
    "row": 1066,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1067,
    "rowsha": "pHA0XuhToumG8ssLfqvCDtiQcQTqj7hZJ+vus5zcqtY=",
    "originContent": "  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>Source: Graph database</a></i>",
    "translatedContent": "  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>स्रोत: ग्राफ डेटाबेस</a></i>"
  },
  {
    "row": 1068,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 1069,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1070,
    "rowsha": "B5XYw4d5xmRsSXMrCAkg2t74N49qLGkHoBXxUJiBN5U=",
    "originContent": "> Abstraction: graph",
    "translatedContent": "> अमूर्तता: ग्राफ"
  },
  {
    "row": 1071,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1072,
    "rowsha": "d9ijzqJWUkTEbnGP/BuqSJv4JADbxf+rPHbmAr4SRoM=",
    "originContent": "In a graph database, each node is a record and each arc is a relationship between two nodes.  Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.",
    "translatedContent": "ग्राफ डेटाबेस में, प्रत्येक नोड एक रिकॉर्ड होता है और प्रत्येक आर्क दो नोड्स के बीच संबंध होता है। ग्राफ डेटाबेस कई विदेशी कुंजियों या कई-से-कई संबंधों के साथ जटिल संबंधों का प्रतिनिधित्व करने के लिए अनुकूलित होते हैं।"
  },
  {
    "row": 1073,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1074,
    "rowsha": "0eslzANH9S6otdcN6/ARJO0UvHLlvdCqXyvw5W8ue74=",
    "originContent": "Graphs databases offer high performance for data models with complex relationships, such as a social network.  They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources.  Many graphs can only be accessed with [REST APIs](#representational-state-transfer-rest).",
    "translatedContent": "ग्राफ डेटाबेस जटिल संबंधों वाले डेटा मॉडल के लिए उच्च प्रदर्शन प्रदान करते हैं, जैसे कि एक सोशल नेटवर्क। ये अपेक्षाकृत नए हैं और अभी तक व्यापक रूप से उपयोग नहीं किए जाते; विकास टूल और संसाधन ढूंढना कठिन हो सकता है। कई ग्राफ्स केवल [REST APIs](#representational-state-transfer-rest) के साथ ही एक्सेस किए जा सकते हैं।"
  },
  {
    "row": 1075,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1076,
    "rowsha": "ChQ2EP4rHz/V4P4At1vUfr6L3o0Kdq0Psm7kf9dqyAQ=",
    "originContent": "##### Source(s) and further reading: graph",
    "translatedContent": "##### स्रोत और आगे पढ़ाई: ग्राफ"
  },
  {
    "row": 1077,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1078,
    "rowsha": "EnWArZthLZt/xH7cpNoQsUzldz4G7Jaqtd/wck7pGFA=",
    "originContent": "* [Graph database](https://en.wikipedia.org/wiki/Graph_database)",
    "translatedContent": "* [ग्राफ डेटाबेस](https://en.wikipedia.org/wiki/Graph_database)"
  },
  {
    "row": 1079,
    "rowsha": "Xw3sx9p3cFowTFPRLepCr1to6L9cWUpPvIwcnMCuZZs=",
    "originContent": "* [Neo4j](https://neo4j.com/)",
    "translatedContent": "* [Neo4j](https://neo4j.com/)"
  },
  {
    "row": 1080,
    "rowsha": "voZsejvFVXv5Bhp0+/GdekeMhALDxY5faPGZ+RXJlDs=",
    "originContent": "* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)",
    "translatedContent": "* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)"
  },
  {
    "row": 1081,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1082,
    "rowsha": "SOpsdGTFBJwXrY1cL4e02nOPKSJT7XISoU/KkSFq3vU=",
    "originContent": "#### Source(s) and further reading: NoSQL",
    "translatedContent": "#### स्रोत और आगे पढ़ाई: NoSQL"
  },
  {
    "row": 1083,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1084,
    "rowsha": "6scKM49eKpe3crCEZ7B0ZGdxI68r94k1hFhhQS2DJdE=",
    "originContent": "* [Explanation of base terminology](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)",
    "translatedContent": "* [बेस शब्दावली की व्याख्या](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)"
  },
  {
    "row": 1085,
    "rowsha": "kLy2iBcpBZrfskPfAx1o1ag3dAnXpcWXKRb7/OfoBU8=",
    "originContent": "* [NoSQL databases a survey and decision guidance](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)",
    "translatedContent": "* [NoSQL डेटाबेस सर्वेक्षण और निर्णय मार्गदर्शन](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)"
  },
  {
    "row": 1086,
    "rowsha": "oxpL3qPKJwclX96+k267P7nRRdvi8f35CwDkjvmKluc=",
    "originContent": "* [Scalability](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)",
    "translatedContent": "* [स्केलेबिलिटी](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)"
  },
  {
    "row": 1087,
    "rowsha": "z7l5ZUT1L0lyxKjUaPNk0X3bW92k2MPwLaAZOMImdGI=",
    "originContent": "* [Introduction to NoSQL](https://www.youtube.com/watch?v=qI_g07C_Q5I)",
    "translatedContent": "* [NoSQL का परिचय](https://www.youtube.com/watch?v=qI_g07C_Q5I)"
  },
  {
    "row": 1088,
    "rowsha": "eEgiGzsQIVncA+CX7dO3zjQJ3tEIpGDtM8/r1xs8hW8=",
    "originContent": "* [NoSQL patterns](http://horicky.blogspot.com/2009/11/nosql-patterns.html)",
    "translatedContent": "* [NoSQL पैटर्न](http://horicky.blogspot.com/2009/11/nosql-patterns.html)"
  },
  {
    "row": 1089,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1090,
    "rowsha": "VQeHO1Z/deZdDzdY8R7UBEIprx4oR7GevCZIpwlL1mY=",
    "originContent": "### SQL or NoSQL",
    "translatedContent": "### SQL या NoSQL"
  },
  {
    "row": 1091,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1092,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1093,
    "rowsha": "P9SYTlACogcwjh4pjaUBsWqjGW0Aps9AnuMCg11+wxA=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wXGqG5f.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wXGqG5f.png\">"
  },
  {
    "row": 1094,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1095,
    "rowsha": "nspJf+8/Rgg2yv4MUWP11lk5ha1obeW+w6B4mVDClZI=",
    "originContent": "  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>Source: Transitioning from RDBMS to NoSQL</a></i>",
    "translatedContent": "  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>स्रोत: RDBMS से NoSQL की ओर संक्रमण</a></i>"
  },
  {
    "row": 1096,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 1097,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1098,
    "rowsha": "r9icARjTs6CRhldSEqrk52fELAahztd24CNbBDqckdc=",
    "originContent": "Reasons for **SQL**:",
    "translatedContent": "**SQL** के लिए कारण:"
  },
  {
    "row": 1099,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1100,
    "rowsha": "nsGez4GlS2M5WbaY2RQTbpj761UCNiu6nSyqfGkX4p8=",
    "originContent": "* Structured data",
    "translatedContent": "* संरचित डेटा"
  },
  {
    "row": 1101,
    "rowsha": "Iuu5GO2DPpMFiJPT5PGfTHfAXgT7xV5xdP8c6DyPB5s=",
    "originContent": "* Strict schema",
    "translatedContent": "* कड़ा स्कीमा"
  },
  {
    "row": 1102,
    "rowsha": "HUBaARbChF/PiCJJ1udNB0GS2eX83GkMSf18kPtCnQA=",
    "originContent": "* Relational data",
    "translatedContent": "* रिलेशनल डेटा"
  },
  {
    "row": 1103,
    "rowsha": "KnrtO+QtbtXv0EpmnBci10AHRU9jjQENfZnLToJsxk0=",
    "originContent": "* Need for complex joins",
    "translatedContent": "* जटिल जॉइनों की आवश्यकता"
  },
  {
    "row": 1104,
    "rowsha": "HTCve+R7OMaL0NiwRsolx0zPPi6/ks6gQJ8wL2wyEas=",
    "originContent": "* Transactions",
    "translatedContent": "* ट्रांजेक्शन्स"
  },
  {
    "row": 1105,
    "rowsha": "1LKnc3OIp8XgBRyxpvkT8UiP/DOZBFOAJrSqTEzcHVE=",
    "originContent": "* Clear patterns for scaling",
    "translatedContent": "* स्केलिंग के लिए स्पष्ट पैटर्न"
  },
  {
    "row": 1106,
    "rowsha": "KhNjEaE6va+/lp2cPz5MbD2p0FgtTFWzDYlpadUV+pM=",
    "originContent": "* More established: developers, community, code, tools, etc",
    "translatedContent": "* अधिक स्थापित: डेवलपर्स, समुदाय, कोड, टूल्स आदि"
  },
  {
    "row": 1107,
    "rowsha": "eqZ/qVtt5ln4BAOMBIZ8v2eEZ81PQqFKwVsYsitQHqk=",
    "originContent": "* Lookups by index are very fast",
    "translatedContent": "* इंडेक्स द्वारा लुकअप बहुत तेज़ हैं"
  },
  {
    "row": 1108,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1109,
    "rowsha": "XtjexymiRaLEB5PD/GO9saUcXt2/ctWvdecC4gmsAz8=",
    "originContent": "Reasons for **NoSQL**:",
    "translatedContent": "**NoSQL** के लिए कारण:"
  },
  {
    "row": 1110,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1111,
    "rowsha": "jfjZxT9WDz6uQD4LzlwpuUO+yXdq+sJE2pkjgHL85vo=",
    "originContent": "* Semi-structured data",
    "translatedContent": "* अर्ध-संरचित डेटा"
  },
  {
    "row": 1112,
    "rowsha": "o/6aZfRBkR1LvcXnYjq2rw8pn3QkSWamSyAFCt1W39E=",
    "originContent": "* Dynamic or flexible schema",
    "translatedContent": "* डायनामिक या लचीला स्कीमा"
  },
  {
    "row": 1113,
    "rowsha": "9zxImz4UeTSgBRB2xqiNRLFMaj0Be9g9fWVqarrA1ug=",
    "originContent": "* Non-relational data",
    "translatedContent": "* गैर-रिलेशनल डेटा"
  },
  {
    "row": 1114,
    "rowsha": "l0c/AdGBPz7+YCs2kKV9hy9eM0JnsQvw2kKhp1ornZo=",
    "originContent": "* No need for complex joins",
    "translatedContent": "* जटिल जॉइनों की आवश्यकता नहीं"
  },
  {
    "row": 1115,
    "rowsha": "Gs8z2Fvxfb0tzA127YdrHm3Vf8aBf0k+4EI7mxR7wIU=",
    "originContent": "* Store many TB (or PB) of data",
    "translatedContent": "* कई TB (या PB) डेटा स्टोर करना"
  },
  {
    "row": 1116,
    "rowsha": "XphH60sQ2Z+QUWphTR4F5L6Z15ZfY/tECRCAWl63+4A=",
    "originContent": "* Very data intensive workload",
    "translatedContent": "* बहुत डेटा-गहन वर्कलोड"
  },
  {
    "row": 1117,
    "rowsha": "LIknBmmeEk34husWU16FXexMOl0fzKbq7aCQSonGux8=",
    "originContent": "* Very high throughput for IOPS",
    "translatedContent": "* IOPS के लिए बहुत उच्च थ्रूपुट"
  },
  {
    "row": 1118,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1119,
    "rowsha": "cKBnN4mSff8NVqx7wgjk50WW5sSpqIEOiOV5BZtaw9M=",
    "originContent": "Sample data well-suited for NoSQL:",
    "translatedContent": "NoSQL के लिए उपयुक्त नमूना डेटा:"
  },
  {
    "row": 1120,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1121,
    "rowsha": "F3WTjYqvpCzI26AojsXzX1JIHg1nWfq65jUHBmSr1FY=",
    "originContent": "* Rapid ingest of clickstream and log data",
    "translatedContent": "* क्लिकस्ट्रीम और लॉग डेटा का तेज़ इनजेस्ट"
  },
  {
    "row": 1122,
    "rowsha": "ycongjgDljddo9S0Wr0S55KCE3VwxJuAZ+1JxslcO3g=",
    "originContent": "* Leaderboard or scoring data",
    "translatedContent": "* लीडरबोर्ड या स्कोरिंग डेटा"
  },
  {
    "row": 1123,
    "rowsha": "R1pEy9ERswONyFX36fUJ1nh3TU165svAjxRHn1ujLrs=",
    "originContent": "* Temporary data, such as a shopping cart",
    "translatedContent": "* अस्थायी डेटा, जैसे शॉपिंग कार्ट"
  },
  {
    "row": 1124,
    "rowsha": "hxhLh4MxDiKpDrhV5DGGdOKgYntTolHpXqvlnkk6058=",
    "originContent": "* Frequently accessed ('hot') tables",
    "translatedContent": "* बार-बार एक्सेस की जाने वाली ('हॉट') टेबल्स"
  },
  {
    "row": 1125,
    "rowsha": "p+IkY/kzq8n2SlJgHjJUAeONckwU0g7c9NTiE9cMgJ0=",
    "originContent": "* Metadata/lookup tables",
    "translatedContent": "* मेटाडेटा/लुकअप टेबल्स"
  },
  {
    "row": 1126,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1127,
    "rowsha": "onSL188uaP9uZHsK9Z3j7HOFPA79N5rHNA6FlH8F0ZU=",
    "originContent": "##### Source(s) and further reading: SQL or NoSQL",
    "translatedContent": "##### स्रोत और आगे पढ़ें: SQL या NoSQL"
  },
  {
    "row": 1128,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1129,
    "rowsha": "vkDetycwDenvATQ4NQZL68mF8E1QMw9OoWjyhccat6E=",
    "originContent": "* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)",
    "translatedContent": "* [अपने पहले 10 मिलियन यूज़र्स तक स्केलिंग](https://www.youtube.com/watch?v=kKjm4ehYiMs)"
  },
  {
    "row": 1130,
    "rowsha": "3zX6NZi1G/7JVvf6nBwrkLUjBzEw8YiSp5kbefbdjRs=",
    "originContent": "* [SQL vs NoSQL differences](https://www.sitepoint.com/sql-vs-nosql-differences/)",
    "translatedContent": "* [SQL बनाम NoSQL अंतर](https://www.sitepoint.com/sql-vs-nosql-differences/)"
  },
  {
    "row": 1131,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1132,
    "rowsha": "3M2uXr5EI2fJlWn3BHJBrOUgoctJwV7HXpmkisGuQ0Y=",
    "originContent": "## Cache",
    "translatedContent": "## कैश"
  },
  {
    "row": 1133,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1134,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1135,
    "rowsha": "y4DiLrKCFwCKHihZp9RbrdSDzfHBzLDWX/q3YGaHY5M=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Q6z24La.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Q6z24La.png\">"
  },
  {
    "row": 1136,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1137,
    "rowsha": "BlGpJr1aaS7U1ovkxsSc1S7ZO+WxTq/Ry9MM5AGpY3s=",
    "originContent": "  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>",
    "translatedContent": "  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>स्रोत: स्केलेबल सिस्टम डिजाइन पैटर्न्स</a></i>"
  },
  {
    "row": 1138,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 1139,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1140,
    "rowsha": "xqFXlOlQ6an1pd2cUPm0ctMQFxeroxxNltTfA2DnIyM=",
    "originContent": "Caching improves page load times and can reduce the load on your servers and databases.  In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.",
    "translatedContent": "कैशिंग पृष्ठ लोड समय को बेहतर बनाती है और आपके सर्वर और डेटाबेस पर लोड को कम कर सकती है। इस मॉडल में, डिस्पैचर पहले यह देखेगा कि अनुरोध पहले किया गया है या नहीं, और पिछले परिणाम को वापस करने का प्रयास करेगा, ताकि वास्तविक निष्पादन को बचाया जा सके।"
  },
  {
    "row": 1141,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1142,
    "rowsha": "nE3F+noONZj7UoncqopJcjs84GDX55Msqwtb2zKbtWQ=",
    "originContent": "Databases often benefit from a uniform distribution of reads and writes across its partitions.  Popular items can skew the distribution, causing bottlenecks.  Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.",
    "translatedContent": "डेटाबेस अक्सर अपने विभाजनों में रीड और राइट्स के समान वितरण से लाभान्वित होते हैं। लोकप्रिय आइटम वितरण को असमान कर सकते हैं, जिससे बॉटलनेक उत्पन्न होते हैं। डेटाबेस के आगे कैश लगाना असमान लोड और ट्रैफिक स्पाइक्स को संभालने में मदद कर सकता है।"
  },
  {
    "row": 1143,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1144,
    "rowsha": "kU/uLpr+QUlPh4Q0obdTc8Jmc7gkP0Y1cAmtTjlGLag=",
    "originContent": "### Client caching",
    "translatedContent": "### क्लाइंट कैशिंग"
  },
  {
    "row": 1145,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1146,
    "rowsha": "oKi+pWvfZPQK26up66npGBI09cUq5gKlsZ5T+T+LHro=",
    "originContent": "Caches can be located on the client side (OS or browser), [server side](#reverse-proxy-web-server), or in a distinct cache layer.",
    "translatedContent": "कैश क्लाइंट साइड (OS या ब्राउज़र), [सर्वर साइड](#reverse-proxy-web-server), या अलग कैश लेयर में स्थित हो सकते हैं।"
  },
  {
    "row": 1147,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1148,
    "rowsha": "IC+heR08nNMaNGEQF5zx/9QsVoeD/qhL9VQrwtwRE5k=",
    "originContent": "### CDN caching",
    "translatedContent": "### CDN कैशिंग"
  },
  {
    "row": 1149,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1150,
    "rowsha": "yxckzTQIewKvqA1D6/g0klIsU3zn/CQ4iQs+2Hc1L0M=",
    "originContent": "[CDNs](#content-delivery-network) are considered a type of cache.",
    "translatedContent": "[CDN](#content-delivery-network) को कैश का एक प्रकार माना जाता है।"
  },
  {
    "row": 1151,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1152,
    "rowsha": "Da9mLN7nGSzBo9bvYB9Yn2tFNd3cOoEAFtmAKOygrYg=",
    "originContent": "### Web server caching",
    "translatedContent": "### वेब सर्वर कैशिंग"
  },
  {
    "row": 1153,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1154,
    "rowsha": "HIpASoiha1HioWiM3PEcd+xsZ2YHLgEn0/dmxs/SyZw=",
    "originContent": "[Reverse proxies](#reverse-proxy-web-server) and caches such as [Varnish](https://www.varnish-cache.org/) can serve static and dynamic content directly.  Web servers can also cache requests, returning responses without having to contact application servers.",
    "translatedContent": "[रिवर्स प्रॉक्सी](#reverse-proxy-web-server) और [Varnish](https://www.varnish-cache.org/) जैसे कैश स्टैटिक और डायनामिक कंटेंट को सीधे सर्व कर सकते हैं। वेब सर्वर भी अनुरोधों को कैश कर सकते हैं, जिससे एप्लिकेशन सर्वर से संपर्क किए बिना ही प्रतिक्रिया दी जा सकती है।"
  },
  {
    "row": 1155,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1156,
    "rowsha": "+peMktOW0HTWXcyD0CtKfyHJ76DbKqQNFMObh+eJTeE=",
    "originContent": "### Database caching",
    "translatedContent": "### डेटाबेस कैशिंग"
  },
  {
    "row": 1157,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1158,
    "rowsha": "EYGPh9Nhj9Ttsme4rboJONsjd0H1Tz2/OEc3I1+Phyc=",
    "originContent": "Your database usually includes some level of caching in a default configuration, optimized for a generic use case.  Tweaking these settings for specific usage patterns can further boost performance.",
    "translatedContent": "आपका डेटाबेस आम तौर पर डिफॉल्ट कॉन्फ़िगरेशन में किसी स्तर की कैशिंग शामिल करता है, जो सामान्य उपयोग के लिए अनुकूलित होती है। इन सेटिंग्स को विशिष्ट उपयोग पैटर्न के लिए बदलने से प्रदर्शन और बढ़ सकता है।"
  },
  {
    "row": 1159,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1160,
    "rowsha": "jHpYxhSgbZeRWpd+DxcA9rdGq82/3SCT4D3KfcnhkcA=",
    "originContent": "### Application caching",
    "translatedContent": "### एप्लिकेशन कैशिंग"
  },
  {
    "row": 1161,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1162,
    "rowsha": "WFZ2p6PV8YsGfZ4D+4AWBuJIe3Cx9di6exPEMWGnBoA=",
    "originContent": "In-memory caches such as Memcached and Redis are key-value stores between your application and your data storage.  Since the data is held in RAM, it is much faster than typical databases where data is stored on disk.  RAM is more limited than disk, so [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms) algorithms such as [least recently used (LRU)](https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)) can help invalidate 'cold' entries and keep 'hot' data in RAM.",
    "translatedContent": "इन-मेमोरी कैश जैसे Memcached और Redis आपके एप्लिकेशन और डेटा स्टोरेज के बीच की-वैल्यू स्टोर होते हैं। चूंकि डेटा RAM में रखा जाता है, यह सामान्य डेटाबेस की तुलना में काफी तेज होता है जहां डेटा डिस्क में रखा जाता है। RAM डिस्क की तुलना में सीमित होती है, इसलिए [कैश इनवैलिडेशन](https://en.wikipedia.org/wiki/Cache_algorithms) एल्गोरिदम जैसे [Least Recently Used (LRU)](https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)) 'कोल्ड' एंट्रीज़ को हटाने और 'हॉट' डेटा को RAM में रखने में मदद करते हैं।"
  },
  {
    "row": 1163,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1164,
    "rowsha": "bG9ZzlVhxVniO0NbUBc4MNnJnevmwh4iLIR6+7Ny5GA=",
    "originContent": "Redis has the following additional features:",
    "translatedContent": "Redis में निम्नलिखित अतिरिक्त विशेषताएं हैं:"
  },
  {
    "row": 1165,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1166,
    "rowsha": "oVSAe6bvySL9lZG8FBGnQ1zqUUlpTiTQIxmQqglSsD0=",
    "originContent": "* Persistence option",
    "translatedContent": "* परसिस्टेंस विकल्प"
  },
  {
    "row": 1167,
    "rowsha": "bIING+wl5vn04I6HuaJiJPmUXKMx6Sx6ybJ2DPPziQU=",
    "originContent": "* Built-in data structures such as sorted sets and lists",
    "translatedContent": "* इन-बिल्ट डेटा संरचनाएं जैसे सॉर्टेड सेट और लिस्ट"
  },
  {
    "row": 1168,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1169,
    "rowsha": "jqc3ntnaAq+YfXjWch+hYigLB+UJXKMNQFoEmZzJMPQ=",
    "originContent": "There are multiple levels you can cache that fall into two general categories: **database queries** and **objects**:",
    "translatedContent": "आप कई स्तरों पर कैश कर सकते हैं, जो दो सामान्य श्रेणियों में आते हैं: **डेटाबेस क्वेरीज़** और **ऑब्जेक्ट्स**:"
  },
  {
    "row": 1170,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1171,
    "rowsha": "r15rT5lMkEakO0EooTXQ29PQYtrQ7vvP7LBqkv+u5J0=",
    "originContent": "* Row level",
    "translatedContent": "* रो स्तर"
  },
  {
    "row": 1172,
    "rowsha": "djUS3dKRSjn00ZXw0vh2aGhfXv2mMxRkxPojcjWnF1M=",
    "originContent": "* Query-level",
    "translatedContent": "* क्वेरी स्तर"
  },
  {
    "row": 1173,
    "rowsha": "NCUiwISIKs3RT5e8iBnTHyAONOcdxXJ3lZROujkUdHI=",
    "originContent": "* Fully-formed serializable objects",
    "translatedContent": "* पूरी तरह से निर्मित सीरियलाइज़ेबल ऑब्जेक्ट्स"
  },
  {
    "row": 1174,
    "rowsha": "UEQnDnI7uzJAICUlx0D0cfOE8Q2mc6PWRjPPyeOYCxs=",
    "originContent": "* Fully-rendered HTML",
    "translatedContent": "* पूरी तरह से रेंडर की गई HTML"
  },
  {
    "row": 1175,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1176,
    "rowsha": "1B3O+coRkQPbq3TbZjD02NGcyBhw42EMqttGZvQr1h4=",
    "originContent": "Generally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.",
    "translatedContent": "आमतौर पर, आपको फाइल-आधारित कैशिंग से बचना चाहिए, क्योंकि यह क्लोनिंग और ऑटो-स्केलिंग को अधिक कठिन बना देता है।"
  },
  {
    "row": 1177,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1178,
    "rowsha": "3YIk6GjhWrpUufW9u8BeDCc4h4hcG312WFNpokKP7gE=",
    "originContent": "### Caching at the database query level",
    "translatedContent": "### डेटाबेस क्वेरी स्तर पर कैशिंग"
  },
  {
    "row": 1179,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1180,
    "rowsha": "iJJbvuK6zOgRABztRiHjNwU8YbqHMoW5zFzCB7Z1XBE=",
    "originContent": "Whenever you query the database, hash the query as a key and store the result to the cache.  This approach suffers from expiration issues:",
    "translatedContent": "जब भी आप डेटाबेस से क्वेरी करते हैं, क्वेरी को एक कुंजी के रूप में हैश करें और परिणाम को कैश में संग्रहित करें। इस विधि में एक्सपाइरी से जुड़ी समस्याएँ होती हैं:"
  },
  {
    "row": 1181,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1182,
    "rowsha": "Lb6BM7FztlpCZKQZsZdxkDo0gUdAUfaxzDPGwdMd1ZE=",
    "originContent": "* Hard to delete a cached result with complex queries",
    "translatedContent": "* जटिल क्वेरी के साथ कैश किए गए परिणाम को हटाना कठिन है"
  },
  {
    "row": 1183,
    "rowsha": "VpV5XOW9LAQSNYGUUuv/B0olP8SfhOhjohfMiGprEqY=",
    "originContent": "* If one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell",
    "translatedContent": "* यदि डेटा का कोई भाग बदलता है, जैसे कि कोई टेबल सेल, तो आपको उन सभी कैश की गई क्वेरीज़ को हटाना होगा, जिनमें बदला हुआ सेल शामिल हो सकता है"
  },
  {
    "row": 1184,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1185,
    "rowsha": "fqoq5o7Te5RL0Ww7hGUP01PowL82X5Yjwvt1ZhirEgg=",
    "originContent": "### Caching at the object level",
    "translatedContent": "### ऑब्जेक्ट स्तर पर कैशिंग"
  },
  {
    "row": 1186,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1187,
    "rowsha": "t7op5c3DtAEeaWSFUCRDIrf3GZrGX3lHyIXHU8ZdezA=",
    "originContent": "See your data as an object, similar to what you do with your application code.  Have your application assemble the dataset from the database into a class instance or a data structure(s):",
    "translatedContent": "अपने डेटा को एक ऑब्जेक्ट के रूप में देखें, जैसा कि आप अपने एप्लिकेशन कोड के साथ करते हैं। अपने एप्लिकेशन को डेटाबेस से डेटा सेट को एक क्लास इंस्टेंस या डेटा स्ट्रक्चर(s) में असेंबल करने दें:"
  },
  {
    "row": 1188,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1189,
    "rowsha": "kKOqH0Rj7ZDKFmxa/n0dgFFfcLmc7KP+Y/bIOM8QV68=",
    "originContent": "* Remove the object from cache if its underlying data has changed",
    "translatedContent": "* यदि ऑब्जेक्ट के अंतर्निहित डेटा में बदलाव होता है, तो ऑब्जेक्ट को कैश से हटा दें"
  },
  {
    "row": 1190,
    "rowsha": "LVCuQTNxLG+2HkJCAKPD/atJSe7UmRACMbO3svM/pUs=",
    "originContent": "* Allows for asynchronous processing: workers assemble objects by consuming the latest cached object",
    "translatedContent": "* एसिंक्रोनस प्रोसेसिंग की अनुमति देता है: वर्कर नवीनतम कैश किए गए ऑब्जेक्ट को लेकर ऑब्जेक्ट्स को असेंबल करते हैं"
  },
  {
    "row": 1191,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1192,
    "rowsha": "JO+wTDixSFsWPXbXW3gm3JCbxf4keaDPFqBagqcSnFs=",
    "originContent": "Suggestions of what to cache:",
    "translatedContent": "कैश करने के लिए सुझाव:"
  },
  {
    "row": 1193,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1194,
    "rowsha": "GtErxHgzu8lQW6zfeOjrQvpv6qHQcod8BbKFLR4+nO4=",
    "originContent": "* User sessions",
    "translatedContent": "* यूज़र सेशंस"
  },
  {
    "row": 1195,
    "rowsha": "z6k7z0EcDKod7y5Evss5qYCd1T8yFOF3F8al8glt9jc=",
    "originContent": "* Fully rendered web pages",
    "translatedContent": "* पूर्ण रूप से रेंडर किए गए वेब पेजेज़"
  },
  {
    "row": 1196,
    "rowsha": "GRLvjkAFWRgkhA35jO4sqt87QSERzT09jxhRVFvzrDs=",
    "originContent": "* Activity streams",
    "translatedContent": "* गतिविधि स्ट्रीम्स"
  },
  {
    "row": 1197,
    "rowsha": "JTDc0t5tffnca/ox8stucQMCLXLF4rn3JZo55FqAeuY=",
    "originContent": "* User graph data",
    "translatedContent": "* यूज़र ग्राफ डेटा"
  },
  {
    "row": 1198,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1199,
    "rowsha": "EQs6IK2UwdJGsDA46cF4pewCABsNnHaJ8nCXSYXDOAQ=",
    "originContent": "### When to update the cache",
    "translatedContent": "### कैश को कब अपडेट करें"
  },
  {
    "row": 1200,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1201,
    "rowsha": "8XpBQLO0vnR+St0Ihro3VxfcA4lVtKxR6nHxZH+GPnw=",
    "originContent": "Since you can only store a limited amount of data in cache, you'll need to determine which cache update strategy works best for your use case.",
    "translatedContent": "चूंकि आप कैश में सीमित मात्रा में डेटा ही संग्रहित कर सकते हैं, आपको यह निर्धारित करना होगा कि आपके उपयोग के मामले के लिए कौन सी कैश अपडेट स्ट्रैटेजी सबसे उपयुक्त है।"
  },
  {
    "row": 1202,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1203,
    "rowsha": "52pofijyqLylVYR+JgfdyhSECnQB/2ww9jSqId5+qfI=",
    "originContent": "#### Cache-aside",
    "translatedContent": "#### कैश-असाइड"
  },
  {
    "row": 1204,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1205,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1206,
    "rowsha": "qbwb9OF+6gCrIQDarjwnjaJ5/orzhjfFSZ0uJP2yP+Y=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/ONjORqk.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/ONjORqk.png\">"
  },
  {
    "row": 1207,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1208,
    "rowsha": "USINg1pGG/U+9K+ntxVznHzWHt5Cf6mwA5Lf1aFR1Uk=",
    "originContent": "  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>",
    "translatedContent": "  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>स्रोत: कैश से इन-मेमोरी डेटा ग्रिड तक</a></i>"
  },
  {
    "row": 1209,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 1210,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1211,
    "rowsha": "62P0ezlyVrQA0aqJAqE75Pq6qmQsDRjHZBBAW0Nz/TM=",
    "originContent": "The application is responsible for reading and writing from storage.  The cache does not interact with storage directly.  The application does the following:",
    "translatedContent": "एप्लिकेशन स्टोरेज से पढ़ने और लिखने के लिए जिम्मेदार होता है। कैश सीधे स्टोरेज के साथ इंटरैक्ट नहीं करता। एप्लिकेशन निम्न कार्य करता है:"
  },
  {
    "row": 1212,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1213,
    "rowsha": "OFE7VOChadOJUjgj9Em/a5aet/S7mBrXOeBhxO4G13Y=",
    "originContent": "* Look for entry in cache, resulting in a cache miss",
    "translatedContent": "* कैश में एंट्री खोजें, जिससे कैश मिस होती है"
  },
  {
    "row": 1214,
    "rowsha": "uPyomhAgr01m+uLFmFlqmhP6tN+gNuDikYGP6ljOZZ8=",
    "originContent": "* Load entry from the database",
    "translatedContent": "* डेटाबेस से एंट्री लोड करें"
  },
  {
    "row": 1215,
    "rowsha": "gHwr/3IpFIf/MVC2+zfRAnWRBPuDoveXCRYKw6fPmzI=",
    "originContent": "* Add entry to cache",
    "translatedContent": "* एंट्री को कैश में जोड़ें"
  },
  {
    "row": 1216,
    "rowsha": "mtdSuveSKkOKt1wR97B79lcqaLNrmTSR+8I/XZbDjQs=",
    "originContent": "* Return entry",
    "translatedContent": "* एंट्री लौटाएँ"
  },
  {
    "row": 1217,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1218,
    "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
    "originContent": "```python",
    "translatedContent": "```python"
  },
  {
    "row": 1219,
    "rowsha": "1GTyTA67Jo5g4PZ2eK+leytPvvxyri8GVlwBQpLqlpc=",
    "originContent": "def get_user(self, user_id):",
    "translatedContent": "def get_user(self, user_id):"
  },
  {
    "row": 1220,
    "rowsha": "lgAPDcVXdojVaaGHgrVltToh2hjI0quE1+565ZNiOS8=",
    "originContent": "    user = cache.get(\"user.{0}\", user_id)",
    "translatedContent": "    user = cache.get(\"user.{0}\", user_id)"
  },
  {
    "row": 1221,
    "rowsha": "W7owJTstAC/LAoEhQUmKo4a4zUm8zieRK0OeG7rv7DQ=",
    "originContent": "    if user is None:",
    "translatedContent": "    if user is None:"
  },
  {
    "row": 1222,
    "rowsha": "oJzeyHhnfdAF3cIMLnK5Fr1PIjEwbNQmMiKcBcnGcF0=",
    "originContent": "        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)",
    "translatedContent": "        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)"
  },
  {
    "row": 1223,
    "rowsha": "dldjFilRH6Yed931uKmj1QR8mJyToO+r+rha1/V/NA8=",
    "originContent": "        if user is not None:",
    "translatedContent": "        if user is not None:"
  },
  {
    "row": 1224,
    "rowsha": "UBoSUThgYpW1SM3ScElKL1mgtgYgK5HFN0Wx/vPVxiQ=",
    "originContent": "            key = \"user.{0}\".format(user_id)",
    "translatedContent": "            key = \"user.{0}\".format(user_id)"
  },
  {
    "row": 1225,
    "rowsha": "qNHAIqY71P/vY/a+mvSdtv+stVUYgWrnvstqlwNp9ok=",
    "originContent": "            cache.set(key, json.dumps(user))",
    "translatedContent": "            cache.set(key, json.dumps(user))"
  },
  {
    "row": 1226,
    "rowsha": "0CwKuaTXupC467haU/xblkMlRi5Fc8rPbAJBpJD+TrE=",
    "originContent": "    return user",
    "translatedContent": "    return user"
  },
  {
    "row": 1227,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 1228,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1229,
    "rowsha": "E4LHEdyL1DwD4IyYAty9Hb8gRIvsp+JJ5WRbEoFDNGU=",
    "originContent": "[Memcached](https://memcached.org/) is generally used in this manner.",
    "translatedContent": "[Memcached](https://memcached.org/) आमतौर पर इस तरीके से उपयोग किया जाता है।"
  },
  {
    "row": 1230,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1231,
    "rowsha": "ZBzM67sYKm8MY5U3qOL36LExlLr2hg8g7s03Nl1X3J0=",
    "originContent": "Subsequent reads of data added to cache are fast.  Cache-aside is also referred to as lazy loading.  Only requested data is cached, which avoids filling up the cache with data that isn't requested.",
    "translatedContent": "कैश में जोड़ा गया डेटा की बाद की रीड्स तेज़ होती हैं। कैश-असाइड को लेज़ी लोडिंग भी कहा जाता है। केवल अनुरोधित डेटा ही कैश होता है, जिससे ऐसे डेटा से कैश नहीं भरता जिसकी मांग नहीं है।"
  },
  {
    "row": 1232,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1233,
    "rowsha": "Hw958kRegOuxjCT94H5l8wJpZzNqECQ8GTLdn3iqEDk=",
    "originContent": "##### Disadvantage(s): cache-aside",
    "translatedContent": "##### नुकसान: कैश-असाइड"
  },
  {
    "row": 1234,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1235,
    "rowsha": "9Rerkd9WfGEAGf3NLR62SDPSOpiw25soOiXvUxJFUt0=",
    "originContent": "* Each cache miss results in three trips, which can cause a noticeable delay.",
    "translatedContent": "* हर कैश मिस के लिए तीन ट्रिप्स होते हैं, जिससे ध्यान देने योग्य विलंब हो सकता है।"
  },
  {
    "row": 1236,
    "rowsha": "b3v63AxRU8hHaNcfACCeQyUxDUpy+0q9Ppq1bfQfUaA=",
    "originContent": "* Data can become stale if it is updated in the database.  This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.",
    "translatedContent": "* अगर डेटाबेस में डेटा अपडेट होता है तो वह पुराना हो सकता है। इस समस्या को टाइम-टू-लाइव (TTL) सेट करके हल किया जा सकता है, जिससे कैश एंट्री अपडेट होती है, या राइट-थ्रू का उपयोग किया जाता है।"
  },
  {
    "row": 1237,
    "rowsha": "mMDjsWP12Ldo7MhVGRQn4hzZpem4HxQY6e/IkzTHaRw=",
    "originContent": "* When a node fails, it is replaced by a new, empty node, increasing latency.",
    "translatedContent": "* जब कोई नोड फेल हो जाता है, तो उसकी जगह एक नया, खाली नोड आ जाता है, जिससे लेटेंसी बढ़ती है।"
  },
  {
    "row": 1238,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1239,
    "rowsha": "4LfteySHoc23JvHTHYY/pfUiiD6WDkaFaTwzdChin5E=",
    "originContent": "#### Write-through",
    "translatedContent": "#### राइट-थ्रू"
  },
  {
    "row": 1240,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1241,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1242,
    "rowsha": "n8+iStPrY76OiWCe6wBH7DTpSJQerebBkcaZ7BvhzOI=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/0vBc0hN.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/0vBc0hN.png\">"
  },
  {
    "row": 1243,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1244,
    "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
    "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
    "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>स्रोत: स्केलेबिलिटी, उपलब्धता, स्थिरता, पैटर्न्स</a></i>"
  },
  {
    "row": 1245,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 1246,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1247,
    "rowsha": "iaS3/ToQt/6NgIEBO7U2UvWCtV8srR9pZbtnr69Mqp4=",
    "originContent": "The application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:",
    "translatedContent": "एप्लिकेशन मुख्य डाटा स्टोर के रूप में कैश का उपयोग करती है, इसमें डेटा पढ़ती और लिखती है, जबकि कैश डेटाबेस में पढ़ने और लिखने के लिए जिम्मेदार होता है:"
  },
  {
    "row": 1248,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1249,
    "rowsha": "P8NHtHewWpHcRrd8ft5J9TGmEbXfHon0UmSDyNiqj8I=",
    "originContent": "* Application adds/updates entry in cache",
    "translatedContent": "* एप्लिकेशन कैश में एंट्री जोड़ती/अपडेट करती है"
  },
  {
    "row": 1250,
    "rowsha": "Of2RJIEL6O+bLxs8/CFA+F+XUYshUcsYsDtMbm46PCo=",
    "originContent": "* Cache synchronously writes entry to data store",
    "translatedContent": "* कैश सिंक्रोनसली एंट्री को डाटा स्टोर में लिखता है"
  },
  {
    "row": 1251,
    "rowsha": "dVCyv+Glf3q+P+oyQGZoDvq9yHHjMuG613l/zpxNvsY=",
    "originContent": "* Return",
    "translatedContent": "* रिटर्न"
  },
  {
    "row": 1252,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1253,
    "rowsha": "bTTEYmx8/NnzJ9Vj3S9YHRNHaN5nOGSpq8bv6m82Q/Y=",
    "originContent": "Application code:",
    "translatedContent": "एप्लिकेशन कोड:"
  },
  {
    "row": 1254,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1255,
    "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
    "originContent": "```python",
    "translatedContent": "```python"
  },
  {
    "row": 1256,
    "rowsha": "o6DQzApBJFvAFtmtUDJxboMSOdY5nLk7xoHa2SuH3mA=",
    "originContent": "set_user(12345, {\"foo\":\"bar\"})",
    "translatedContent": "set_user(12345, {\"foo\":\"bar\"})"
  },
  {
    "row": 1257,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 1258,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1259,
    "rowsha": "3L7lF9r9ZpI05MJpCpovoGAJv4zxhwVP5HkvER24ftA=",
    "originContent": "Cache code:",
    "translatedContent": "कैश कोड:"
  },
  {
    "row": 1260,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1261,
    "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
    "originContent": "```python",
    "translatedContent": "```python"
  },
  {
    "row": 1262,
    "rowsha": "Trrm302+1XC8RwVkNuANVpe6tv0gwcH/4UX+Dykdg4s=",
    "originContent": "def set_user(user_id, values):",
    "translatedContent": "def set_user(user_id, values):"
  },
  {
    "row": 1263,
    "rowsha": "MOuaTi5rCF/Yaxfz2FKpHchMv6zR/sa49iVuy3ru07M=",
    "originContent": "    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)",
    "translatedContent": "    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)"
  },
  {
    "row": 1264,
    "rowsha": "Wc94+sJoObKR2p220YZuIbcHHVhiiRF2v+qhvQqcHIw=",
    "originContent": "    cache.set(user_id, user)",
    "translatedContent": "    cache.set(user_id, user)"
  },
  {
    "row": 1265,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 1266,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "राइट-थ्रू एक धीमा समग्र ऑपरेशन है क्योंकि इसमें लिखने का ऑपरेशन शामिल है, लेकिन हाल ही में लिखे गए डेटा की बाद की रीड तेज़ होती है। उपयोगकर्ता आमतौर पर डेटा अपडेट करते समय लेटेंसी को अधिक सहन करते हैं बनिस्बत डेटा पढ़ने के। कैश में मौजूद डेटा बासी नहीं होता।"
  },
  {
    "row": 1267,
    "rowsha": "CE1/1d+Be5iRcsEtg2TnmlemDty5WCN/17Lj5O9MhcM=",
    "originContent": "Write-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast.  Users are generally more tolerant of latency when updating data than reading data.  Data in the cache is not stale.",
    "translatedContent": ""
  },
  {
    "row": 1268,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "##### नुकसान: राइट-थ्रू"
  },
  {
    "row": 1269,
    "rowsha": "EGxa08OZ2bqhkrWVaz/IXBdXffsjNFcEm7q43ZRMMJM=",
    "originContent": "##### Disadvantage(s): write through",
    "translatedContent": ""
  },
  {
    "row": 1270,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* जब कोई नया नोड फेल होने या स्केलिंग के कारण बनाया जाता है, तो नया नोड तब तक एंट्री को कैश नहीं करेगा जब तक कि वह एंट्री डेटाबेस में अपडेट न हो जाए। कैश-असाइड को राइट-थ्रू के साथ मिलाकर इस समस्या को कम किया जा सकता है।"
  },
  {
    "row": 1271,
    "rowsha": "4OHzAIpImXTT5Vz9JzWpDxNTpN1FYjRW3koPv5qvJBY=",
    "originContent": "* When a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database.  Cache-aside in conjunction with write through can mitigate this issue.",
    "translatedContent": "* अधिकांश लिखा गया डेटा शायद कभी पढ़ा ही न जाए, जिसे TTL के उपयोग से कम किया जा सकता है।"
  },
  {
    "row": 1272,
    "rowsha": "AnCZLTQp4CaSc7etrA2sFcw9k8G4T1KbSPOyXmM5ybA=",
    "originContent": "* Most data written might never be read, which can be minimized with a TTL.",
    "translatedContent": ""
  },
  {
    "row": 1273,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### राइट-बिहाइंड (राइट-बैक)"
  },
  {
    "row": 1274,
    "rowsha": "T/W0y5JQxPt3g+w/ep0ap2PcTja8WgBYYr72Wk2W4i0=",
    "originContent": "#### Write-behind (write-back)",
    "translatedContent": ""
  },
  {
    "row": 1275,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1276,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/rgSrvjG.png\">"
  },
  {
    "row": 1277,
    "rowsha": "XPPb1znn51Z2XnBlJIk46Lj2sI7ZAbdfUk/OvNCXFqI=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/rgSrvjG.png\">",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1278,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>स्रोत: स्केलेबिलिटी, उपलब्धता, स्थिरता, पैटर्न्स</a></i>"
  },
  {
    "row": 1279,
    "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
    "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
    "translatedContent": "</p>"
  },
  {
    "row": 1280,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": ""
  },
  {
    "row": 1281,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "राइट-बिहाइंड में, एप्लिकेशन निम्नलिखित करता है:"
  },
  {
    "row": 1282,
    "rowsha": "GgcOnlJYp0r45QdG3IodXPZS4HUAdFKtH9OmWeIkThA=",
    "originContent": "In write-behind, the application does the following:",
    "translatedContent": ""
  },
  {
    "row": 1283,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* एंट्री को कैश में जोड़ना/अपडेट करना"
  },
  {
    "row": 1284,
    "rowsha": "CFz4gaw6txqGu3xkMRoJSgSXQG2xSRLeYhagt9HEUWI=",
    "originContent": "* Add/update entry in cache",
    "translatedContent": "* डेटा स्टोर में एंट्री को असिंक्रोनस रूप से लिखना, जिससे लिखने की परफॉर्मेंस बेहतर होती है"
  },
  {
    "row": 1285,
    "rowsha": "SbAQdEBvRSvrJ2TKuulQkOZtaaHLA/vMmgipoOYTfT4=",
    "originContent": "* Asynchronously write entry to the data store, improving write performance",
    "translatedContent": ""
  },
  {
    "row": 1286,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "##### नुकसान: राइट-बिहाइंड"
  },
  {
    "row": 1287,
    "rowsha": "O2zvPHMR4bHAH/3OiL+ZpOLWc7Z7t9wEMc3wJuEvJSk=",
    "originContent": "##### Disadvantage(s): write-behind",
    "translatedContent": ""
  },
  {
    "row": 1288,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* अगर कैश अपने कंटेंट को डेटा स्टोर तक भेजने से पहले डाउन हो जाता है तो डेटा लॉस हो सकता है।"
  },
  {
    "row": 1289,
    "rowsha": "dwX0WPznoYrN7o0TjeaiCchqG8Rx9hdF8H8gaJr4HJs=",
    "originContent": "* There could be data loss if the cache goes down prior to its contents hitting the data store.",
    "translatedContent": "* राइट-बिहाइंड को लागू करना कैश-असाइड या राइट-थ्रू की तुलना में अधिक जटिल है।"
  },
  {
    "row": 1290,
    "rowsha": "RgQB15hkS5IOC02kJDLmHtd46nZsUP5ZqVDKCzG/U9A=",
    "originContent": "* It is more complex to implement write-behind than it is to implement cache-aside or write-through.",
    "translatedContent": ""
  },
  {
    "row": 1291,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### रिफ्रेश-अहेड"
  },
  {
    "row": 1292,
    "rowsha": "p6mRRf3RClOyHXiVMMpCkKWDD/cWqheqx21QIPu5wuM=",
    "originContent": "#### Refresh-ahead",
    "translatedContent": ""
  },
  {
    "row": 1293,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1294,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/kxtjqgE.png\">"
  },
  {
    "row": 1295,
    "rowsha": "sR/wAnITMjTa1mDcgY1Wp4Oqx67JSya1O9gxjgStZfg=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/kxtjqgE.png\">",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1296,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>स्रोत: कैश से इन-मेमोरी डेटा ग्रिड तक</a></i>"
  },
  {
    "row": 1297,
    "rowsha": "USINg1pGG/U+9K+ntxVznHzWHt5Cf6mwA5Lf1aFR1Uk=",
    "originContent": "  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>",
    "translatedContent": "</p>"
  },
  {
    "row": 1298,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": ""
  },
  {
    "row": 1299,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "आप कैश को इस प्रकार कॉन्फ़िगर कर सकते हैं कि हाल ही में एक्सेस की गई किसी भी कैश एंट्री को उसकी समाप्ति से पहले स्वतः रिफ्रेश कर दे।"
  },
  {
    "row": 1300,
    "rowsha": "crS+gv126gEJUk4dRg50TSuPdZa75Ffd1Bg7mjRzxc4=",
    "originContent": "You can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.",
    "translatedContent": ""
  },
  {
    "row": 1301,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "यदि कैश यह सही-सही अनुमान लगा सकता है कि भविष्य में किन आइटम्स की आवश्यकता हो सकती है, तो रिफ्रेश-अहेड रीड-थ्रू की तुलना में लेटेंसी को कम कर सकता है।"
  },
  {
    "row": 1302,
    "rowsha": "uTflbG0lK0Yw+LSuSkVmX6scHmqv4gxV8E8DdCtCAxg=",
    "originContent": "Refresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.",
    "translatedContent": ""
  },
  {
    "row": 1303,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "##### नुकसान: रिफ्रेश-अहेड"
  },
  {
    "row": 1304,
    "rowsha": "b0F0GxDH1yGv4h4mXVsqWiM7JkLTn2/dMWsI2zNyXhg=",
    "originContent": "##### Disadvantage(s): refresh-ahead",
    "translatedContent": ""
  },
  {
    "row": 1305,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1306,
    "rowsha": "mA2DF/x6CDm3GB3qhi7Rp0Xumunt5D5kgGLeFAHr1Ug=",
    "originContent": "* Not accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.",
    "translatedContent": "* भविष्य में किन वस्तुओं की आवश्यकता होगी, इसका सही पूर्वानुमान न लगाना, refresh-ahead के बिना प्रदर्शन को कम कर सकता है।"
  },
  {
    "row": 1307,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1308,
    "rowsha": "Csc7g6X2mKrHFQci7dlHki88R2nKbZYT/JAz25ZMt3g=",
    "originContent": "### Disadvantage(s): cache",
    "translatedContent": "### नुकसान(नुकसान): कैश"
  },
  {
    "row": 1309,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1310,
    "rowsha": "QvWcWGfBcihyZXaQeMeba0HZOu27t8zrK/k0+WrD3m0=",
    "originContent": "* Need to maintain consistency between caches and the source of truth such as the database through [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms).",
    "translatedContent": "* कैश और सत्य के स्रोत जैसे डेटाबेस के बीच [कैश इनवैलिडेशन](https://en.wikipedia.org/wiki/Cache_algorithms) द्वारा स्थिरता बनाए रखना आवश्यक है।"
  },
  {
    "row": 1311,
    "rowsha": "BRMT7O2GQK3iYe2vOJA3c+v7V3R6l4DqgofDfTGzbaE=",
    "originContent": "* Cache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.",
    "translatedContent": "* कैश इनवैलिडेशन एक कठिन समस्या है, इसमें कैश को कब अपडेट करना है, इससे जुड़ी अतिरिक्त जटिलता होती है।"
  },
  {
    "row": 1312,
    "rowsha": "3OfBJ/Ckj6yFFBr6VwlU3HuA0UhYtUZ+0cipa0DCgTc=",
    "originContent": "* Need to make application changes such as adding Redis or memcached.",
    "translatedContent": "* एप्लिकेशन में बदलाव करना आवश्यक है जैसे कि Redis या memcached जोड़ना।"
  },
  {
    "row": 1313,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1314,
    "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
    "originContent": "### Source(s) and further reading",
    "translatedContent": "### स्रोत और आगे पढ़ने के लिए"
  },
  {
    "row": 1315,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1316,
    "rowsha": "IC6+RAekNHtj59Xjcjk8Kuod0TL6VeYNrsCljJnJ1ow=",
    "originContent": "* [From cache to in-memory data grid](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)",
    "translatedContent": "* [कैश से इन-मेमोरी डेटा ग्रिड तक](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)"
  },
  {
    "row": 1317,
    "rowsha": "NjV6omClw7dGpYvjE2KTfiTbA9v++5aNx2Xf9W4RVxk=",
    "originContent": "* [Scalable system design patterns](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)",
    "translatedContent": "* [स्केलेबल सिस्टम डिज़ाइन पैटर्न](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)"
  },
  {
    "row": 1318,
    "rowsha": "dHi+Guuju5Gn3/DVSySxEHQfRY/um5lB5rke9wJBhFk=",
    "originContent": "* [Introduction to architecting systems for scale](http://lethain.com/introduction-to-architecting-systems-for-scale/)",
    "translatedContent": "* [स्केल के लिए सिस्टम आर्किटेक्चर का परिचय](http://lethain.com/introduction-to-architecting-systems-for-scale/)"
  },
  {
    "row": 1319,
    "rowsha": "UVMSE1BpfAJjZtNGckenaHDWkkWMyRCmwx5PRWNWv7Q=",
    "originContent": "* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)",
    "translatedContent": "* [स्केलेबिलिटी, उपलब्धता, स्थिरता, पैटर्न](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)"
  },
  {
    "row": 1320,
    "rowsha": "vd74kSe6/W7OaZr725A+FRRLGrD4dHmOnzys9UCLzck=",
    "originContent": "* [Scalability](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)",
    "translatedContent": "* [स्केलेबिलिटी](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)"
  },
  {
    "row": 1321,
    "rowsha": "ggcDxxH5+pZY4D7KSFtSMPbvpKcToPCtSxEa11z2rIc=",
    "originContent": "* [AWS ElastiCache strategies](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)",
    "translatedContent": "* [AWS ElastiCache रणनीतियाँ](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)"
  },
  {
    "row": 1322,
    "rowsha": "nVgGXMw6JYC4OMhy7IHNwK8ovIbmhO7jg3jGAKJiku0=",
    "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Cache_(computing))",
    "translatedContent": "* [विकिपीडिया](https://en.wikipedia.org/wiki/Cache_(computing))"
  },
  {
    "row": 1323,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1324,
    "rowsha": "d/TAMehRkdoikoGI7oKPDOq6a5oLRR2DTlUlYBjki50=",
    "originContent": "## Asynchronism",
    "translatedContent": "## असिंक्रोनिज़्म"
  },
  {
    "row": 1325,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1326,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1327,
    "rowsha": "Qf+4XI5PLk5j+VdTcUSc+eSi6yJI87Oq6jipuDhP7w4=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/54GYsSx.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/54GYsSx.png\">"
  },
  {
    "row": 1328,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1329,
    "rowsha": "XKyWblIAaLweFNdYR7DY6+BG5VKu0ZN+qyUPrZFPuGw=",
    "originContent": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>",
    "translatedContent": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>स्रोत: स्केल के लिए सिस्टम आर्किटेक्चर का परिचय</a></i>"
  },
  {
    "row": 1330,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 1331,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1332,
    "rowsha": "MDDrykFu/8yiUROgJD2AL1OSgV17zd7bSTztM4nVGHQ=",
    "originContent": "Asynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line.  They can also help by doing time-consuming work in advance, such as periodic aggregation of data.",
    "translatedContent": "असिंक्रोनस वर्कफ़्लो महंगे ऑपरेशनों के लिए अनुरोध समय को कम करने में मदद करते हैं, जो अन्यथा इन-लाइन किए जाते। ये समय लेने वाले कार्य जैसे डेटा का आवधिक एग्रीगेशन पहले से करके भी सहायता करते हैं।"
  },
  {
    "row": 1333,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1334,
    "rowsha": "M8DBN4ku9XMEe3C3Dl7PelMQpG9dDBXkNWc0bvluiAc=",
    "originContent": "### Message queues",
    "translatedContent": "### संदेश कतारें"
  },
  {
    "row": 1335,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1336,
    "rowsha": "OTLhE8cwKTAEuLzV3vAxxhXflo4n2LkdGyb7EaP880I=",
    "originContent": "Message queues receive, hold, and deliver messages.  If an operation is too slow to perform inline, you can use a message queue with the following workflow:",
    "translatedContent": "संदेश कतारें संदेश प्राप्त, संग्रहित और वितरित करती हैं। यदि कोई ऑपरेशन इन-लाइन करने के लिए बहुत धीमा है, तो आप निम्नलिखित वर्कफ़्लो के साथ संदेश कतार का उपयोग कर सकते हैं:"
  },
  {
    "row": 1337,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1338,
    "rowsha": "C7xhpqwwY+LqSvhSSO6YwoU6aieMfOj7cc30HyGEiu4=",
    "originContent": "* An application publishes a job to the queue, then notifies the user of job status",
    "translatedContent": "* एक एप्लिकेशन कतार में एक जॉब प्रकाशित करता है, फिर उपयोगकर्ता को जॉब की स्थिति की सूचना देता है"
  },
  {
    "row": 1339,
    "rowsha": "EugvF5aMoCL3u+O4W6S1kZdCVnVpfHKDR+Lz3FOMux4=",
    "originContent": "* A worker picks up the job from the queue, processes it, then signals the job is complete",
    "translatedContent": "* एक वर्कर कतार से जॉब उठाता है, उसे प्रोसेस करता है, फिर संकेत देता है कि जॉब पूर्ण हो गई है"
  },
  {
    "row": 1340,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1341,
    "rowsha": "eqMcTCbtlQiP4+/1dQmkeN8TarhiXdjhQX5gYpEU/Kw=",
    "originContent": "The user is not blocked and the job is processed in the background.  During this time, the client might optionally do a small amount of processing to make it seem like the task has completed.  For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.",
    "translatedContent": "उपयोगकर्ता अवरुद्ध नहीं होता और जॉब पृष्ठभूमि में प्रोसेस होती है। इस समय के दौरान, क्लाइंट वैकल्पिक रूप से थोड़ा प्रोसेसिंग कर सकता है ताकि कार्य पूर्ण हुआ प्रतीत हो। उदाहरण के लिए, यदि ट्वीट पोस्ट कर रहे हैं, तो ट्वीट तुरंत आपकी टाइमलाइन पर दिखाया जा सकता है, लेकिन आपके सभी फॉलोअर्स तक ट्वीट पहुँचाने में कुछ समय लग सकता है।"
  },
  {
    "row": 1342,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1343,
    "rowsha": "qDVHi/dE4fuKbxsrWORF4lUXFClt6hIcACQ1UPJwlJM=",
    "originContent": "**[Redis](https://redis.io/)** is useful as a simple message broker but messages can be lost.",
    "translatedContent": "**[Redis](https://redis.io/)** एक साधारण संदेश ब्रोकर के रूप में उपयोगी है लेकिन संदेश खो सकते हैं।"
  },
  {
    "row": 1344,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1345,
    "rowsha": "cZ62aoGhWXO8UUZ/T+Rb14mP4aEqe2bJ/xCk2AFOg4A=",
    "originContent": "**[RabbitMQ](https://www.rabbitmq.com/)** is popular but requires you to adapt to the 'AMQP' protocol and manage your own nodes.",
    "translatedContent": "**[RabbitMQ](https://www.rabbitmq.com/)** लोकप्रिय है लेकिन इसके लिए 'AMQP' प्रोटोकॉल को अपनाना और अपने नोड्स का प्रबंधन करना पड़ता है।"
  },
  {
    "row": 1346,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "**[Amazon SQS](https://aws.amazon.com/sqs/)** होस्टेड है लेकिन इसमें उच्च विलंबता हो सकती है और संदेशों के दो बार वितरित होने की संभावना रहती है।"
  },
  {
    "row": 1347,
    "rowsha": "JdJIiGblg1lo1Hv9lrZKrmri+H2PHGh+c4+AJHvC/Ho=",
    "originContent": "**[Amazon SQS](https://aws.amazon.com/sqs/)** is hosted but can have high latency and has the possibility of messages being delivered twice.",
    "translatedContent": ""
  },
  {
    "row": 1348,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### टास्क कतारें"
  },
  {
    "row": 1349,
    "rowsha": "Y+T9u9jvoNxoRasie9Z6deflBls+XhaieNZjB1pnDeY=",
    "originContent": "### Task queues",
    "translatedContent": ""
  },
  {
    "row": 1350,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "टास्क कतारें कार्य और उनके संबंधित डेटा प्राप्त करती हैं, उन्हें चलाती हैं, फिर उनके परिणाम वितरित करती हैं। ये शेड्यूलिंग का समर्थन कर सकती हैं और बैकग्राउंड में गणनात्मक रूप से गहन कार्य चलाने के लिए उपयोग की जा सकती हैं।"
  },
  {
    "row": 1351,
    "rowsha": "g97ihGpVqeeStuv7zKW/0/7HktMz8gl+wSP34LKZ//U=",
    "originContent": "Tasks queues receive tasks and their related data, runs them, then delivers their results.  They can support scheduling and can be used to run computationally-intensive jobs in the background.",
    "translatedContent": ""
  },
  {
    "row": 1352,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "**[Celery](https://docs.celeryproject.org/en/stable/)** शेड्यूलिंग का समर्थन करता है और मुख्य रूप से पायथन के लिए उपलब्ध है।"
  },
  {
    "row": 1353,
    "rowsha": "epToSKFhBbnR+JYYSSU5qT0EfnYi9TLI6TS8cN8M+jQ=",
    "originContent": "**[Celery](https://docs.celeryproject.org/en/stable/)** has support for scheduling and primarily has python support.",
    "translatedContent": ""
  },
  {
    "row": 1354,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### बैक प्रेशर"
  },
  {
    "row": 1355,
    "rowsha": "k+wc+P+0qAAxGfVCT7qqi2V77ZPM8fBafrt1Yu8AmZ8=",
    "originContent": "### Back pressure",
    "translatedContent": ""
  },
  {
    "row": 1356,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "अगर कतारें काफी बढ़ने लगती हैं, तो कतार का आकार मेमोरी से बड़ा हो सकता है, जिससे कैश मिस, डिस्क रीड्स और प्रदर्शन में और भी अधिक गिरावट आ सकती है। [बैक प्रेशर](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html) कतार का आकार सीमित कर उच्च थ्रूपुट दर और कतार में पहले से मौजूद कार्यों के लिए अच्छा प्रतिक्रिया समय बनाए रखने में मदद करता है। एक बार कतार भर जाने पर, क्लाइंट्स को सर्वर बिजी या HTTP 503 स्टेटस कोड मिलता है, जिससे वे बाद में पुनः प्रयास करें। क्लाइंट्स अनुरोध को बाद में फिर से भेज सकते हैं, संभवतः [एक्सपोनेंशियल बैकऑफ](https://en.wikipedia.org/wiki/Exponential_backoff) के साथ।"
  },
  {
    "row": 1357,
    "rowsha": "l9TK3MvuxkfMvJhx+BJGaovzc0vhydAGWoqT6wBIamY=",
    "originContent": "If queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance.  [Back pressure](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html) can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue.  Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later.  Clients can retry the request at a later time, perhaps with [exponential backoff](https://en.wikipedia.org/wiki/Exponential_backoff).",
    "translatedContent": ""
  },
  {
    "row": 1358,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### नुकसान: असिंक्रोनिज्म"
  },
  {
    "row": 1359,
    "rowsha": "X63xWFxSa6XT9YNTdHeNxsV6EBblOgijod7MwwC7tYs=",
    "originContent": "### Disadvantage(s): asynchronism",
    "translatedContent": ""
  },
  {
    "row": 1360,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* सस्ते गणना वाले और रियलटाइम वर्कफ़्लो जैसे उपयोग के मामले सिंक्रोनस ऑपरेशन के लिए अधिक उपयुक्त हो सकते हैं, क्योंकि कतारें जोड़ने से विलंबता और जटिलता बढ़ सकती है।"
  },
  {
    "row": 1361,
    "rowsha": "ec9Q8eQZH4KE2XsUW8ol11Fjm3uixUZXXECvkThtgVk=",
    "originContent": "* Use cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.",
    "translatedContent": ""
  },
  {
    "row": 1362,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### स्रोत और आगे की पढ़ाई"
  },
  {
    "row": 1363,
    "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
    "originContent": "### Source(s) and further reading",
    "translatedContent": ""
  },
  {
    "row": 1364,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* [It's all a numbers game](https://www.youtube.com/watch?v=1KRYH75wgy4)"
  },
  {
    "row": 1365,
    "rowsha": "R9SWfMSjTpI8QJHjJquX5UA/v4OsQncdzgayeDDRp74=",
    "originContent": "* [It's all a numbers game](https://www.youtube.com/watch?v=1KRYH75wgy4)",
    "translatedContent": "* [Applying back pressure when overloaded](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)"
  },
  {
    "row": 1366,
    "rowsha": "CRHAxGVRxbex+UHiPc3ZG7mmL4tLGzuIg2gDhlsDE1g=",
    "originContent": "* [Applying back pressure when overloaded](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)",
    "translatedContent": "* [Little's law](https://en.wikipedia.org/wiki/Little%27s_law)"
  },
  {
    "row": 1367,
    "rowsha": "sD14bJ8RhOZ5uJX/QkYWP60UWvxVFD7sVsC5Rat1dDw=",
    "originContent": "* [Little's law](https://en.wikipedia.org/wiki/Little%27s_law)",
    "translatedContent": "* [What is the difference between a message queue and a task queue?](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)"
  },
  {
    "row": 1368,
    "rowsha": "9pfppEwOQ+EYxw0upiLbIsT/46iBNzFDUTpRsQ3Hkqc=",
    "originContent": "* [What is the difference between a message queue and a task queue?](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)",
    "translatedContent": ""
  },
  {
    "row": 1369,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## संचार"
  },
  {
    "row": 1370,
    "rowsha": "JlMsLnBNoRqgF14jp1yqsxcMqoqezySPU/BE1WqWZw4=",
    "originContent": "## Communication",
    "translatedContent": ""
  },
  {
    "row": 1371,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1372,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/5KeocQs.jpg\">"
  },
  {
    "row": 1373,
    "rowsha": "cgy9Hg4o9DiTMKPqK5aiYcJ6D2cTQHBFWnjrygxPnZo=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/5KeocQs.jpg\">",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1374,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <i><a href=http://www.escotal.com/osilayer.html>स्रोत: OSI 7 लेयर मॉडल</a></i>"
  },
  {
    "row": 1375,
    "rowsha": "prm5d05a0esoU9cyHbrBQId3K1rE7HwyJ5IZQ03F8J4=",
    "originContent": "  <i><a href=http://www.escotal.com/osilayer.html>Source: OSI 7 layer model</a></i>",
    "translatedContent": "</p>"
  },
  {
    "row": 1376,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": ""
  },
  {
    "row": 1377,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### हाइपरटेक्स्ट ट्रांसफर प्रोटोकॉल (HTTP)"
  },
  {
    "row": 1378,
    "rowsha": "a1d+rg/Dzd1wjID96cxPpEkd4TMiBbmpcTJxciDcr2Q=",
    "originContent": "### Hypertext transfer protocol (HTTP)",
    "translatedContent": ""
  },
  {
    "row": 1379,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "HTTP क्लाइंट और सर्वर के बीच डेटा को एन्कोड और ट्रांसपोर्ट करने की एक विधि है। यह अनुरोध/प्रतिक्रिया प्रोटोकॉल है: क्लाइंट अनुरोध भेजते हैं और सर्वर प्रासंगिक कंटेंट और अनुरोध की स्थिति जानकारी के साथ प्रतिक्रिया भेजते हैं। HTTP स्व-निहित है, जिससे अनुरोध और प्रतिक्रिया कई मध्यवर्ती राउटर और सर्वरों से होकर जा सकती है, जो लोड बैलेंसिंग, कैशिंग, एन्क्रिप्शन और कंप्रेशन करते हैं।"
  },
  {
    "row": 1380,
    "rowsha": "/9RA5UcFiUEXASj94438tLJBaifmqR26xRyJq475HpQ=",
    "originContent": "HTTP is a method for encoding and transporting data between a client and a server.  It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request.  HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.",
    "translatedContent": ""
  },
  {
    "row": 1381,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "एक बेसिक HTTP अनुरोध में एक क्रिया (विधि) और एक संसाधन (एंडपॉइंट) होता है। नीचे सामान्य HTTP क्रियाएं दी गई हैं:"
  },
  {
    "row": 1382,
    "rowsha": "g5LJ0P3PN1Du/SJYxHd02KofaBLGWmuffE5N0zUAJg0=",
    "originContent": "A basic HTTP request consists of a verb (method) and a resource (endpoint).  Below are common HTTP verbs:",
    "translatedContent": ""
  },
  {
    "row": 1383,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "| क्रिया | विवरण | आइडेम्पोटेंट* | सुरक्षित | कैश करने योग्य |"
  },
  {
    "row": 1384,
    "rowsha": "cX+YhsBlONCGtFdxKCMRB59Gou5jB2wxxOhItY0FhqI=",
    "originContent": "| Verb | Description | Idempotent* | Safe | Cacheable |",
    "translatedContent": "|---|---|---|---|---|"
  },
  {
    "row": 1385,
    "rowsha": "Eq8A70vu0E6YMkp22XH5RBmpK3cxHPIWKQIONEm49Fc=",
    "originContent": "|---|---|---|---|---|",
    "translatedContent": ""
  },
  {
    "row": 1386,
    "rowsha": "TGyFO/0qOSRP36nOG1cXHODfm9tDzZLfm7iPg06K9vI=",
    "originContent": "| GET | Reads a resource | Yes | Yes | Yes |",
    "translatedContent": "| GET | एक संसाधन को पढ़ता है | हाँ | हाँ | हाँ |"
  },
  {
    "row": 1387,
    "rowsha": "2VPrAMg3vxSjcopyCJIDtEu8ZVvJHTSa+dZHCjUPHgA=",
    "originContent": "| POST | Creates a resource or trigger a process that handles data | No | No | Yes if response contains freshness info |",
    "translatedContent": "| POST | एक संसाधन बनाता है या डेटा को संभालने वाली प्रक्रिया को ट्रिगर करता है | नहीं | नहीं | हाँ, अगर प्रतिक्रिया में ताजगी की जानकारी हो |"
  },
  {
    "row": 1388,
    "rowsha": "4CakkGA+YDAnjVY4tDAxPE89j2SUt+jktyy9ZKekEG4=",
    "originContent": "| PUT | Creates or replace a resource | Yes | No | No |",
    "translatedContent": "| PUT | एक संसाधन बनाता या बदलता है | हाँ | नहीं | नहीं |"
  },
  {
    "row": 1389,
    "rowsha": "08X/dUgAT1I2nSu8dWExdPJ+9vBTBYHBiFJr/xEwumo=",
    "originContent": "| PATCH | Partially updates a resource | No | No | Yes if response contains freshness info |",
    "translatedContent": "| PATCH | एक संसाधन को आंशिक रूप से अपडेट करता है | नहीं | नहीं | हाँ, अगर प्रतिक्रिया में ताजगी की जानकारी हो |"
  },
  {
    "row": 1390,
    "rowsha": "LzJ2h5JwoBwi3tSWTXzKLljCWH1GN05+I8RH64pLeMQ=",
    "originContent": "| DELETE | Deletes a resource | Yes | No | No |",
    "translatedContent": "| DELETE | एक संसाधन को हटाता है | हाँ | नहीं | नहीं |"
  },
  {
    "row": 1391,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1392,
    "rowsha": "BINJ1KjYGjUfLshYcaZMeOkOWoiR7pOvYK3vayiAKkU=",
    "originContent": "*Can be called many times without different outcomes.",
    "translatedContent": "*अलग परिणामों के बिना कई बार कॉल किया जा सकता है।"
  },
  {
    "row": 1393,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1394,
    "rowsha": "7Bgrh6sM5dgZQSrEmAOaOLvC6CGfznbDwyn9FFm3uzk=",
    "originContent": "HTTP is an application layer protocol relying on lower-level protocols such as **TCP** and **UDP**.",
    "translatedContent": "HTTP एक एप्लीकेशन लेयर प्रोटोकॉल है, जो **TCP** और **UDP** जैसे निम्न-स्तरीय प्रोटोकॉल पर निर्भर करता है।"
  },
  {
    "row": 1395,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1396,
    "rowsha": "E3FZxI6O3jf/PIfFp8xFd0jV000CAtdccq0NffUeIxM=",
    "originContent": "#### Source(s) and further reading: HTTP",
    "translatedContent": "#### स्रोत(स) और आगे पढ़ें: HTTP"
  },
  {
    "row": 1397,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1398,
    "rowsha": "fjDxTsBJkh+LmgKTk2qukVM5jWJ8jvCiLatVWQ2juaQ=",
    "originContent": "* [What is HTTP?](https://www.nginx.com/resources/glossary/http/)",
    "translatedContent": "* [HTTP क्या है?](https://www.nginx.com/resources/glossary/http/)"
  },
  {
    "row": 1399,
    "rowsha": "d+VJ0NR/tp+nzfMn5BKyjNmR0i65J1ljdQKe7Hn3I50=",
    "originContent": "* [Difference between HTTP and TCP](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)",
    "translatedContent": "* [HTTP और TCP में अंतर](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)"
  },
  {
    "row": 1400,
    "rowsha": "UedXiXUaOm7A0p1Wm/YaeUal0LhGvcNVB/rYwsx91GU=",
    "originContent": "* [Difference between PUT and PATCH](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)",
    "translatedContent": "* [PUT और PATCH में अंतर](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)"
  },
  {
    "row": 1401,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1402,
    "rowsha": "ALcjISRP9zOXkFXUsA+YjfY3rzS/n903LGIUuc5iZXw=",
    "originContent": "### Transmission control protocol (TCP)",
    "translatedContent": "### ट्रांसमिशन कंट्रोल प्रोटोकॉल (TCP)"
  },
  {
    "row": 1403,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1404,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1405,
    "rowsha": "r49AzjR5KRMj7D0OMQhe9ZwGxV2UP13railym8NShC4=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/JdAsdvG.jpg\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/JdAsdvG.jpg\">"
  },
  {
    "row": 1406,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1407,
    "rowsha": "HXYf1d9zCry3iPSfFm7t1CvBc5e2F1HTXv5za5UPbTQ=",
    "originContent": "  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>",
    "translatedContent": "  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>स्रोत: मल्टीप्लेयर गेम कैसे बनाएं</a></i>"
  },
  {
    "row": 1408,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 1409,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1410,
    "rowsha": "M9vPLLY2qjR4D1S8I94xozAlTLGgadD4hasXPbIVLow=",
    "originContent": "TCP is a connection-oriented protocol over an [IP network](https://en.wikipedia.org/wiki/Internet_Protocol).  Connection is established and terminated using a [handshake](https://en.wikipedia.org/wiki/Handshaking).  All packets sent are guaranteed to reach the destination in the original order and without corruption through:",
    "translatedContent": "TCP एक कनेक्शन-ओरिएंटेड प्रोटोकॉल है जो [IP नेटवर्क](https://en.wikipedia.org/wiki/Internet_Protocol) पर चलता है।  कनेक्शन को स्थापित और समाप्त करने के लिए [हैंडशेक](https://en.wikipedia.org/wiki/Handshaking) का उपयोग किया जाता है।  सभी भेजे गए पैकेट गारंटी के साथ बिना किसी भ्रष्टाचार के और मूल क्रम में गंतव्य तक पहुँचते हैं:"
  },
  {
    "row": 1411,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1412,
    "rowsha": "pmDWp3FWL4bXBnlIkmGVpSkCFDA/TMcbjGUNUFcsIkc=",
    "originContent": "* Sequence numbers and [checksum fields](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation) for each packet",
    "translatedContent": "* प्रत्येक पैकेट के लिए अनुक्रम संख्या और [चेकसम फ़ील्ड्स](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation)"
  },
  {
    "row": 1413,
    "rowsha": "qEJdXdOEL3M0/qs9RfVmT652QP6Lc9NBFc3zFd3RDDY=",
    "originContent": "* [Acknowledgement](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)) packets and automatic retransmission",
    "translatedContent": "* [स्वीकृति](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)) पैकेट और स्वचालित पुन:प्रेषण"
  },
  {
    "row": 1414,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1415,
    "rowsha": "WvRExJpFOP4pnP/kJ/P8Qs8WU6ECM1UNW+5YCMDwRMM=",
    "originContent": "If the sender does not receive a correct response, it will resend the packets.  If there are multiple timeouts, the connection is dropped.  TCP also implements [flow control](https://en.wikipedia.org/wiki/Flow_control_(data)) and [congestion control](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control).  These guarantees cause delays and generally result in less efficient transmission than UDP.",
    "translatedContent": "यदि प्रेषक को सही प्रतिक्रिया नहीं मिलती है, तो वह पैकेट फिर से भेजेगा।  यदि कई बार टाइमआउट होता है, तो कनेक्शन छोड़ दिया जाता है।  TCP [फ्लो कंट्रोल](https://en.wikipedia.org/wiki/Flow_control_(data)) और [जाम नियंत्रण](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control) भी लागू करता है।  ये गारंटी विलंब पैदा करती हैं और आमतौर पर UDP की तुलना में कम कुशल ट्रांसमिशन का कारण बनती हैं।"
  },
  {
    "row": 1416,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1417,
    "rowsha": "dvYUP2kDh9L02+I2XEk8LbiffmEXZojZ/Mhl7tJTNFc=",
    "originContent": "To ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage.  It can be expensive to have a large number of open connections between web server threads and say, a [memcached](https://memcached.org/) server.  [Connection pooling](https://en.wikipedia.org/wiki/Connection_pool) can help in addition to switching to UDP where applicable.",
    "translatedContent": "उच्च थ्रूपुट सुनिश्चित करने के लिए, वेब सर्वर कई TCP कनेक्शन खुले रख सकते हैं, जिससे उच्च मेमोरी उपयोग होता है।  वेब सर्वर थ्रेड्स और जैसे [memcached](https://memcached.org/) सर्वर के बीच कई खुले कनेक्शन होना महंगा हो सकता है।  [कनेक्शन पूलिंग](https://en.wikipedia.org/wiki/Connection_pool) मदद कर सकती है, साथ ही जहां संभव हो UDP में स्विच करना भी।"
  },
  {
    "row": 1418,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1419,
    "rowsha": "8dqcnwoFWhLyLb9tG1ZOGhi3odOsHaODgCC0Je6WTKI=",
    "originContent": "TCP is useful for applications that require high reliability but are less time critical.  Some examples include web servers, database info, SMTP, FTP, and SSH.",
    "translatedContent": "TCP उन एप्लिकेशन के लिए उपयोगी है जिन्हें उच्च विश्वसनीयता की आवश्यकता होती है लेकिन वे समय की दृष्टि से कम महत्वपूर्ण होती हैं।  कुछ उदाहरण हैं वेब सर्वर, डेटाबेस जानकारी, SMTP, FTP, और SSH।"
  },
  {
    "row": 1420,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1421,
    "rowsha": "YZDTt32t4XojJEqQ48XTzHxCN0bvoKEoZp9Epo1mvXI=",
    "originContent": "Use TCP over UDP when:",
    "translatedContent": "TCP का उपयोग UDP के ऊपर करें जब:"
  },
  {
    "row": 1422,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1423,
    "rowsha": "GW7/nWqQj1GU5yUjsGF9KyWKXyc99bQ+Sb9rx/puxT0=",
    "originContent": "* You need all of the data to arrive intact",
    "translatedContent": "* आपको सभी डेटा सही-सलामत पहुँचने की आवश्यकता हो"
  },
  {
    "row": 1424,
    "rowsha": "x1rcMu+zs2DT6BUdnA0WD9/4+vV+mUubKuVKFzotFn4=",
    "originContent": "* You want to automatically make a best estimate use of the network throughput",
    "translatedContent": "* आप स्वचालित रूप से नेटवर्क थ्रूपुट का सर्वोत्तम अनुमान लगाना चाहते हैं"
  },
  {
    "row": 1425,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1426,
    "rowsha": "N7sH1VbZ64oF2Sc8BgbDFAtrezrDV/9qa2IG1CyXjms=",
    "originContent": "### User datagram protocol (UDP)",
    "translatedContent": "### यूज़र डेटाग्राम प्रोटोकॉल (UDP)"
  },
  {
    "row": 1427,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1428,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1429,
    "rowsha": "6AvRqafPA8+4ZTKrrRPMVfoLkJxe07ACq1lh7sM+OXs=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yzDrJtA.jpg\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yzDrJtA.jpg\">"
  },
  {
    "row": 1430,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1431,
    "rowsha": "HXYf1d9zCry3iPSfFm7t1CvBc5e2F1HTXv5za5UPbTQ=",
    "originContent": "  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>",
    "translatedContent": "  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>स्रोत: मल्टीप्लेयर गेम कैसे बनाएं</a></i>"
  },
  {
    "row": 1432,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 1433,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1434,
    "rowsha": "RqNNtkuYA12Eho+nOWbrQ3Ox94hXes5ExSMQEn/bEjo=",
    "originContent": "UDP is connectionless.  Datagrams (analogous to packets) are guaranteed only at the datagram level.  Datagrams might reach their destination out of order or not at all.  UDP does not support congestion control.  Without the guarantees that TCP support, UDP is generally more efficient.",
    "translatedContent": "UDP कनेक्शनलेस है। डेटाग्राम (पैकेट के समान) केवल डेटाग्राम स्तर पर ही गारंटीकृत होते हैं। डेटाग्राम अपने गंतव्य तक गलत क्रम में पहुँच सकते हैं या बिल्कुल भी नहीं पहुँच सकते। UDP कंजेशन कंट्रोल का समर्थन नहीं करता। TCP द्वारा प्रदान की गई गारंटी के बिना, UDP आमतौर पर अधिक प्रभावी होता है।"
  },
  {
    "row": 1435,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1436,
    "rowsha": "vV6FtTcpxMimUD2LUPWw1XpUQ7OmsUvSOiPjT5504ns=",
    "originContent": "UDP can broadcast, sending datagrams to all devices on the subnet.  This is useful with [DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.",
    "translatedContent": "UDP ब्रॉडकास्ट कर सकता है, जिससे सबनेट के सभी डिवाइसों को डेटाग्राम भेजे जा सकते हैं। यह [DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) के साथ उपयोगी है क्योंकि क्लाइंट ने अभी तक IP पता प्राप्त नहीं किया है, जिससे TCP को IP पते के बिना स्ट्रीम करने का तरीका नहीं मिल पाता।"
  },
  {
    "row": 1437,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1438,
    "rowsha": "ony2lNZWVuFxsnQLSaFMI+FhvCqY5FJLhKiZw/IQb+4=",
    "originContent": "UDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.",
    "translatedContent": "UDP कम विश्वसनीय है लेकिन वॉयस ओवर IP, वीडियो चैट, स्ट्रीमिंग, और रीयलटाइम मल्टीप्लेयर गेम्स जैसे वास्तविक समय के उपयोग मामलों में अच्छी तरह काम करता है।"
  },
  {
    "row": 1439,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1440,
    "rowsha": "3vObY/NAqxnpRQqkZJXlK75psF70pTf7/obtoMsjCQs=",
    "originContent": "Use UDP over TCP when:",
    "translatedContent": "TCP के बजाय UDP का प्रयोग करें जब:"
  },
  {
    "row": 1441,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1442,
    "rowsha": "qmtvD6K86RUKKN64klY3ED9uL+TEwOFhCtSHD3bi48A=",
    "originContent": "* You need the lowest latency",
    "translatedContent": "* आपको सबसे कम विलंबता चाहिए"
  },
  {
    "row": 1443,
    "rowsha": "RHP3XSKp36rAF0uk8/eyZsxuchAjs8u/lrGx/o2dh24=",
    "originContent": "* Late data is worse than loss of data",
    "translatedContent": "* देर से प्राप्त डेटा, डेटा की हानि से भी खराब है"
  },
  {
    "row": 1444,
    "rowsha": "Ztu1edQn6GWTqoemOEB/NUQUk3B8prQB0p7LuWjBh3c=",
    "originContent": "* You want to implement your own error correction",
    "translatedContent": "* आप अपनी खुद की त्रुटि सुधार लागू करना चाहते हैं"
  },
  {
    "row": 1445,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1446,
    "rowsha": "Tt3c6DoKLiOfoMnUCquc8p86uMEslQwL0mcESVPOL4Y=",
    "originContent": "#### Source(s) and further reading: TCP and UDP",
    "translatedContent": "#### स्रोत(स) और आगे पढ़ें: TCP और UDP"
  },
  {
    "row": 1447,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1448,
    "rowsha": "tV3IFEsKT0nFMlnlkS61ay9+lAbkFBSlKJ2IN5y+DgM=",
    "originContent": "* [Networking for game programming](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)",
    "translatedContent": "* [गेम प्रोग्रामिंग के लिए नेटवर्किंग](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)"
  },
  {
    "row": 1449,
    "rowsha": "gFfg8LiurZgQYQLk9ml+BNBRTmbpXu+wgi5X94pfdP0=",
    "originContent": "* [Key differences between TCP and UDP protocols](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)",
    "translatedContent": "* [TCP और UDP प्रोटोकॉल के बीच मुख्य अंतर](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)"
  },
  {
    "row": 1450,
    "rowsha": "gigJSz+KlSFZTEv+jdlqvA1HD0aZhHalwbRzOurSd1I=",
    "originContent": "* [Difference between TCP and UDP](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)",
    "translatedContent": "* [TCP और UDP के बीच अंतर](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)"
  },
  {
    "row": 1451,
    "rowsha": "1nzcV1W/P9kjlykVIdYvvM9S04Yj3U/y/UonQAVDHjc=",
    "originContent": "* [Transmission control protocol](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)",
    "translatedContent": "* [ट्रांसमिशन कंट्रोल प्रोटोकॉल](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)"
  },
  {
    "row": 1452,
    "rowsha": "fUCM23+YfHtbejC6qiOBKINwAl5Cq6vbnhfZFCjN6aU=",
    "originContent": "* [User datagram protocol](https://en.wikipedia.org/wiki/User_Datagram_Protocol)",
    "translatedContent": "* [यूज़र डेटाग्राम प्रोटोकॉल](https://en.wikipedia.org/wiki/User_Datagram_Protocol)"
  },
  {
    "row": 1453,
    "rowsha": "72yn2I5zcpg4gDRaRVJrnnWBmOGTksdyuMt6+F7kaGQ=",
    "originContent": "* [Scaling memcache at Facebook](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)",
    "translatedContent": "* [फेसबुक पर मेमकैश को स्केल करना](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)"
  },
  {
    "row": 1454,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1455,
    "rowsha": "TpvcphzreA+D2fs7C+WUoqLUeOzo7hBb3EDb1VwWuX4=",
    "originContent": "### Remote procedure call (RPC)",
    "translatedContent": "### रिमोट प्रोसीजर कॉल (RPC)"
  },
  {
    "row": 1456,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1457,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1458,
    "rowsha": "1Hf/ikluyw7YaJ0sm564Ctcpip2QMs87nD0dTNPGJ9E=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/iF4Mkb5.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/iF4Mkb5.png\">"
  },
  {
    "row": 1459,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1460,
    "rowsha": "Kg1BMDt51XaKyTk190B6osJ4drj6axFIeUQDVjIEzTw=",
    "originContent": "  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>Source: Crack the system design interview</a></i>",
    "translatedContent": "  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>स्रोत: सिस्टम डिजाइन इंटरव्यू कैसे क्रैक करें</a></i>"
  },
  {
    "row": 1461,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 1462,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1463,
    "rowsha": "Bh0xTQtNeCassICqia4YNVI8C0Mz/uuX4aZs7+lPBTo=",
    "originContent": "In an RPC, a client causes a procedure to execute on a different address space, usually a remote server.  The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program.  Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls.  Popular RPC frameworks include [Protobuf](https://developers.google.com/protocol-buffers/), [Thrift](https://thrift.apache.org/), and [Avro](https://avro.apache.org/docs/current/).",
    "translatedContent": "RPC में, एक क्लाइंट किसी अन्य एड्रेस स्पेस पर, आमतौर पर रिमोट सर्वर पर, एक प्रक्रिया को निष्पादित कराता है। प्रक्रिया को ऐसे कोड किया जाता है जैसे यह लोकल प्रक्रिया कॉल हो, जिससे क्लाइंट प्रोग्राम से सर्वर के साथ संवाद करने का विवरण अमूर्त हो जाता है। रिमोट कॉल आमतौर पर लोकल कॉल की तुलना में धीमे और कम विश्वसनीय होते हैं, इसलिए RPC कॉल को लोकल कॉल से अलग पहचानना सहायक होता है। लोकप्रिय RPC फ्रेमवर्क में [Protobuf](https://developers.google.com/protocol-buffers/), [Thrift](https://thrift.apache.org/), और [Avro](https://avro.apache.org/docs/current/) शामिल हैं।"
  },
  {
    "row": 1464,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1465,
    "rowsha": "JLgTVfxoKqH6Y9n65AbdfJu37V5YaDE/cblAsmAV2V0=",
    "originContent": "RPC is a request-response protocol:",
    "translatedContent": "RPC एक रिक्वेस्ट-रिस्पॉन्स प्रोटोकॉल है:"
  },
  {
    "row": 1466,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1467,
    "rowsha": "8O05uDAChA70zCiBG9sXgO5VrTCf8R4weHrgpgcoCSs=",
    "originContent": "* **Client program** - Calls the client stub procedure.  The parameters are pushed onto the stack like a local procedure call.",
    "translatedContent": "* **क्लाइंट प्रोग्राम** - क्लाइंट स्टब प्रक्रिया को कॉल करता है। पैरामीटर स्टैक पर एक स्थानीय प्रक्रिया कॉल की तरह पुश किए जाते हैं।"
  },
  {
    "row": 1468,
    "rowsha": "GbXIX7WIFIPeiRqfbBM++S9dYT9xDC0+9uW9cgxHjWU=",
    "originContent": "* **Client stub procedure** - Marshals (packs) procedure id and arguments into a request message.",
    "translatedContent": "* **क्लाइंट स्टब प्रक्रिया** - प्रक्रिया आईडी और आर्ग्युमेंट्स को रिक्वेस्ट संदेश में मार्शल (पैक) करती है।"
  },
  {
    "row": 1469,
    "rowsha": "BWYroZdRLwCUEFxxMwFvjzy7Ns1ErZE1N0Nz9FgmteM=",
    "originContent": "* **Client communication module** - OS sends the message from the client to the server.",
    "translatedContent": "* **क्लाइंट कम्युनिकेशन मॉड्यूल** - OS क्लाइंट से सर्वर तक संदेश भेजता है।"
  },
  {
    "row": 1470,
    "rowsha": "S/fO+YSTSutK2E6VTy5pV4OGJd4pwfNzirRU2ueyzA4=",
    "originContent": "* **Server communication module** - OS passes the incoming packets to the server stub procedure.",
    "translatedContent": "* **सर्वर कम्युनिकेशन मॉड्यूल** - OS इनकमिंग पैकेट्स को सर्वर स्टब प्रक्रिया को पास करता है।"
  },
  {
    "row": 1471,
    "rowsha": "2gMq52C+y+sizsihIlvOpXOKxVPMU8mtfPAagN9CUHM=",
    "originContent": "* **Server stub procedure** -  Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.",
    "translatedContent": "* **सर्वर स्टब प्रक्रिया** - परिणामों को अनमार्शल करती है, प्रक्रिया आईडी से मेल खाने वाली सर्वर प्रक्रिया को कॉल करती है और दिए गए आर्ग्युमेंट्स पास करती है।"
  },
  {
    "row": 1472,
    "rowsha": "0VR3i+yK/Vy0pChQF2OAKrfWdgv88l/CXsr/CZP8IvE=",
    "originContent": "* The server response repeats the steps above in reverse order.",
    "translatedContent": "* सर्वर प्रतिक्रिया उपरोक्त चरणों को उल्टे क्रम में दोहराती है।"
  },
  {
    "row": 1473,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1474,
    "rowsha": "oecfAGdCYZHxDEX9adrH160grqb/jXAgiwG0Iki6dxs=",
    "originContent": "Sample RPC calls:",
    "translatedContent": "उदाहरण RPC कॉल्स:"
  },
  {
    "row": 1475,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1476,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 1477,
    "rowsha": "9o9Gw4d/j+vk0jKMOWyMxhdaMlbGVjhZzltXeumS9gY=",
    "originContent": "GET /someoperation?data=anId",
    "translatedContent": "GET /someoperation?data=anId"
  },
  {
    "row": 1478,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1479,
    "rowsha": "BUr540FHvFI1WyZ5re+tyV5mxQTRGzME2luIG/NMObU=",
    "originContent": "POST /anotheroperation",
    "translatedContent": "POST /anotheroperation"
  },
  {
    "row": 1480,
    "rowsha": "Ah+1ltuB5tAr89JYbuOYH+UZ8nXArJyna7zy67QJfZY=",
    "originContent": "{",
    "translatedContent": "{"
  },
  {
    "row": 1481,
    "rowsha": "Xlr5/6Y2BcYHAFgzfrHXZR5GhOv4x5dlfZuJigo2+cI=",
    "originContent": "  \"data\":\"anId\";",
    "translatedContent": "  \"data\":\"anId\";"
  },
  {
    "row": 1482,
    "rowsha": "cUiezwyh//arUr6YcQoloevjQMfDExnvWiwk9hYsjk4=",
    "originContent": "  \"anotherdata\": \"another value\"",
    "translatedContent": "  \"anotherdata\": \"another value\""
  },
  {
    "row": 1483,
    "rowsha": "0Qs2qnSlm89KiBhYN/ZYr682Ru/yuxbDko0OkzXpRdI=",
    "originContent": "}",
    "translatedContent": "}"
  },
  {
    "row": 1484,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 1485,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "RPC व्यवहारों को उजागर करने पर केंद्रित है। RPC का अक्सर आंतरिक संचार के लिए प्रदर्शन कारणों से उपयोग किया जाता है, क्योंकि आप देशी कॉल्स को अपने उपयोग मामलों के अनुसार अनुकूलित कर सकते हैं।"
  },
  {
    "row": 1486,
    "rowsha": "XJmvYMRlWSnDjQjYP2ui67XuYG8HActWmFXcdAFv3M4=",
    "originContent": "RPC is focused on exposing behaviors.  RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.",
    "translatedContent": ""
  },
  {
    "row": 1487,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "देशी लाइब्रेरी (जिसे SDK भी कहा जाता है) चुनें जब:"
  },
  {
    "row": 1488,
    "rowsha": "b3wdh/Hn8L4MFT8bGa1gL8AnjFxcN1+F2SGNi1TqX7I=",
    "originContent": "Choose a native library (aka SDK) when:",
    "translatedContent": ""
  },
  {
    "row": 1489,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* आप अपने लक्षित प्लेटफ़ॉर्म को जानते हैं।"
  },
  {
    "row": 1490,
    "rowsha": "uJL3emZyJfl5yDh4Er1chEMzq46VKHQTeL0qLkfzLY4=",
    "originContent": "* You know your target platform.",
    "translatedContent": "* आप नियंत्रित करना चाहते हैं कि आपकी \"लॉजिक\" तक कैसे पहुंचा जाए।"
  },
  {
    "row": 1491,
    "rowsha": "Xq1v/PmfbzqKdQwRjHEiIRxsBxtNf1jiYvI7/D3XCLM=",
    "originContent": "* You want to control how your \"logic\" is accessed.",
    "translatedContent": "* आप नियंत्रित करना चाहते हैं कि आपकी लाइब्रेरी के बाहर त्रुटि नियंत्रण कैसे हो।"
  },
  {
    "row": 1492,
    "rowsha": "P0vnwlPle89UFnvbmbXFYH9R2RqKrTs02/lk0NZ8w60=",
    "originContent": "* You want to control how error control happens off your library.",
    "translatedContent": "* प्रदर्शन और अंतिम उपयोगकर्ता अनुभव आपकी प्राथमिक चिंता है।"
  },
  {
    "row": 1493,
    "rowsha": "jBa3h1I74Z1SKV5f2EAjwfnMPNpiBqn7AV6ViecCb8E=",
    "originContent": "* Performance and end user experience is your primary concern.",
    "translatedContent": ""
  },
  {
    "row": 1494,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "HTTP API जो **REST** का पालन करते हैं, आमतौर पर सार्वजनिक API के लिए अधिक उपयोग किए जाते हैं।"
  },
  {
    "row": 1495,
    "rowsha": "yzvC15CoAoDs5wkte0rrTmO7YMjWTV/jIvPSNTtgH7k=",
    "originContent": "HTTP APIs following **REST** tend to be used more often for public APIs.",
    "translatedContent": ""
  },
  {
    "row": 1496,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### नुकसान: RPC"
  },
  {
    "row": 1497,
    "rowsha": "SoH46EXpkYKXJKgdP/R8uKh6k6n+MILD+8xL24SuLJ4=",
    "originContent": "#### Disadvantage(s): RPC",
    "translatedContent": ""
  },
  {
    "row": 1498,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* RPC क्लाइंट्स सेवा कार्यान्वयन से बहुत अधिक जुड़े होते हैं।"
  },
  {
    "row": 1499,
    "rowsha": "tQS05NMinO27MyU5u2MbvDRKRZJGUB9op0nP9Di7bfM=",
    "originContent": "* RPC clients become tightly coupled to the service implementation.",
    "translatedContent": "* हर नए ऑपरेशन या उपयोग मामले के लिए एक नया API परिभाषित करना पड़ता है।"
  },
  {
    "row": 1500,
    "rowsha": "l5j6OM09hEmUo3wJlObD77mcS4+mpTqeGg3Oi7gJiHU=",
    "originContent": "* A new API must be defined for every new operation or use case.",
    "translatedContent": "* RPC को डिबग करना कठिन हो सकता है।"
  },
  {
    "row": 1501,
    "rowsha": "U51uxXEKBUVI1hu577h0ywcSPcYwdMb9XFkeuGXRLSs=",
    "originContent": "* It can be difficult to debug RPC.",
    "translatedContent": "* आप मौजूदा तकनीकों का सीधे लाभ नहीं उठा सकते। उदाहरण के लिए, यह सुनिश्चित करने के लिए अतिरिक्त प्रयास की आवश्यकता हो सकती है कि [RPC कॉल्स को ठीक से कैश किया जाए](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/) जैसे कैशिंग सर्वर पर [Squid](http://www.squid-cache.org/)।"
  },
  {
    "row": 1502,
    "rowsha": "c5YPLxamKWj/01J5GHsA8gFP72pOoJsqI/BOahqDZlI=",
    "originContent": "* You might not be able to leverage existing technologies out of the box.  For example, it might require additional effort to ensure [RPC calls are properly cached](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/) on caching servers such as [Squid](http://www.squid-cache.org/).",
    "translatedContent": ""
  },
  {
    "row": 1503,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### प्रतिनिधित्वात्मक स्थिति हस्तांतरण (REST)"
  },
  {
    "row": 1504,
    "rowsha": "5pggeKJjZ+c7PZml5/muDOwnelAohiVqSVXVOVh1v3I=",
    "originContent": "### Representational state transfer (REST)",
    "translatedContent": ""
  },
  {
    "row": 1505,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "REST एक वास्तुशिल्प शैली है जो क्लाइंट/सर्वर मॉडल को लागू करती है जहाँ क्लाइंट सर्वर द्वारा प्रबंधित संसाधनों के सेट पर कार्य करता है। सर्वर संसाधनों का प्रतिनिधित्व और क्रियाएं प्रदान करता है जो या तो संसाधनों को बदल सकती हैं या उनका नया प्रतिनिधित्व प्राप्त कर सकती हैं। सभी संचार स्टेटलेस और कैश करने योग्य होने चाहिए।"
  },
  {
    "row": 1506,
    "rowsha": "ybiHGclDiUTU1i5NEMzKiMmiD0+IZfJMSrWTQWhl1pU=",
    "originContent": "REST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server.  The server provides a representation of resources and actions that can either manipulate or get a new representation of resources.  All communication must be stateless and cacheable.",
    "translatedContent": ""
  },
  {
    "row": 1507,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "RESTful इंटरफेस की चार विशेषताएं हैं:"
  },
  {
    "row": 1508,
    "rowsha": "hhZokcRRYB1mLkIDrgS8VfZ9e59XUbWEojz33ZlR69E=",
    "originContent": "There are four qualities of a RESTful interface:",
    "translatedContent": ""
  },
  {
    "row": 1509,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* **संसाधनों की पहचान करें (HTTP में URI)** - किसी भी ऑपरेशन के बावजूद एक ही URI का उपयोग करें।"
  },
  {
    "row": 1510,
    "rowsha": "uJ0qD0K1wAh7fNvmdjo63o5UCdMXWt4F+ZtKLvNdw5Q=",
    "originContent": "* **Identify resources (URI in HTTP)** - use the same URI regardless of any operation.",
    "translatedContent": "* **प्रतिनिधित्व के साथ बदलें (HTTP में क्रियाएं)** - क्रियाओं, हेडर और बॉडी का उपयोग करें।"
  },
  {
    "row": 1511,
    "rowsha": "Yw/738jxvx8UmeQv5Hy3qA3wgvJKCwN8obAIjFeUFqE=",
    "originContent": "* **Change with representations (Verbs in HTTP)** - use verbs, headers, and body.",
    "translatedContent": "* **स्व-वर्णनात्मक त्रुटि संदेश (HTTP में स्थिति प्रतिक्रिया)** - स्थिति कोड का उपयोग करें, पहिया फिर से न बनाएं।"
  },
  {
    "row": 1512,
    "rowsha": "zMtVPV7bLYtyyVynFiAsYRdsVxV9dlMtB1hrIKTI+QA=",
    "originContent": "* **Self-descriptive error message (status response in HTTP)** - Use status codes, don't reinvent the wheel.",
    "translatedContent": "* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (HTTP के लिए HTML इंटरफेस)** - आपकी वेब सेवा पूरी तरह ब्राउज़र में सुलभ होनी चाहिए।"
  },
  {
    "row": 1513,
    "rowsha": "LByvTxhA2T3N381ftDzf6Wpe23wtmVk0+7oEVwQxad4=",
    "originContent": "* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (HTML interface for HTTP)** - your web service should be fully accessible in a browser.",
    "translatedContent": ""
  },
  {
    "row": 1514,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "REST कॉल्स के उदाहरण:"
  },
  {
    "row": 1515,
    "rowsha": "KvIhSTUImOsKTGRabyzgxRW844U1+6d81OKpdbnucfQ=",
    "originContent": "Sample REST calls:",
    "translatedContent": ""
  },
  {
    "row": 1516,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1517,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 1518,
    "rowsha": "1GRtVOB4D6GHpC1Dk1mYucHdRAiFes0ouCrs7RMLCf4=",
    "originContent": "GET /someresources/anId",
    "translatedContent": "GET /someresources/anId"
  },
  {
    "row": 1519,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1520,
    "rowsha": "fC8PhqPjGqTRh7N13XkSfUPyUNgeWwoP6hGrrqqGJec=",
    "originContent": "PUT /someresources/anId",
    "translatedContent": "PUT /someresources/anId"
  },
  {
    "row": 1521,
    "rowsha": "WIjnB5L308vhBg8hYgOvfJxtU6Hwf/CFxHNuLZ1l7B4=",
    "originContent": "{\"anotherdata\": \"another value\"}",
    "translatedContent": "{\"anotherdata\": \"another value\"}"
  },
  {
    "row": 1522,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 1523,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "REST डेटा को उजागर करने पर केंद्रित है। यह क्लाइंट/सर्वर के बीच कपलिंग को कम करता है और अक्सर सार्वजनिक HTTP API के लिए उपयोग किया जाता है। REST संसाधनों को उजागर करने के लिए अधिक सामान्य और एकरूप विधि का उपयोग करता है, जैसे कि URI, [हेडर के माध्यम से प्रतिनिधित्व](https://github.com/for-GET/know-your-http-well/blob/master/headers.md), और GET, POST, PUT, DELETE, तथा PATCH जैसे क्रियाओं के माध्यम से। स्टेटलेस होने के कारण, REST क्षैतिज स्केलिंग और विभाजन के लिए उत्कृष्ट है।"
  },
  {
    "row": 1524,
    "rowsha": "UjrEsU6K4sQqwdT2LWPctmQJb5peHk5Ol9WmQtENbbA=",
    "originContent": "REST is focused on exposing data.  It minimizes the coupling between client/server and is often used for public HTTP APIs.  REST uses a more generic and uniform method of exposing resources through URIs, [representation through headers](https://github.com/for-GET/know-your-http-well/blob/master/headers.md), and actions through verbs such as GET, POST, PUT, DELETE, and PATCH.  Being stateless, REST is great for horizontal scaling and partitioning.",
    "translatedContent": ""
  },
  {
    "row": 1525,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### REST की कमी(याँ):"
  },
  {
    "row": 1526,
    "rowsha": "p7Y4UGK+r8HoG//sCv+w6/O6TdLRPCWXnVdfOqv0bNQ=",
    "originContent": "#### Disadvantage(s): REST",
    "translatedContent": ""
  },
  {
    "row": 1527,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* चूंकि REST डेटा को उजागर करने पर केंद्रित है, यह उपयुक्त नहीं हो सकता यदि संसाधन स्वाभाविक रूप से सरल पदानुक्रम में व्यवस्थित या एक्सेस नहीं होते। उदाहरण के लिए, पिछले घंटे के सभी अद्यतन रिकॉर्ड को लौटाना जो किसी विशेष घटनाओं से मेल खाते हैं, एक पथ के रूप में आसानी से व्यक्त नहीं किया जा सकता। REST के साथ, इसे URI पथ, क्वेरी पैरामीटर, और संभवतः रिक्वेस्ट बॉडी के संयोजन से लागू करना पड़ सकता है।"
  },
  {
    "row": 1528,
    "rowsha": "f7DgpbMc8WqILx6swpnSu/BNi9CdMM7YxXeW3AltWnA=",
    "originContent": "* With REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy.  For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path.  With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.",
    "translatedContent": "* REST आमतौर पर कुछ क्रियाओं (GET, POST, PUT, DELETE, और PATCH) पर निर्भर करता है जो कभी-कभी आपके उपयोग के मामले में फिट नहीं बैठते। उदाहरण के लिए, समाप्त दस्तावेज़ों को आर्काइव फ़ोल्डर में स्थानांतरित करना इन क्रियाओं में ठीक से फिट नहीं बैठता।"
  },
  {
    "row": 1529,
    "rowsha": "R0fatfAUG8Gsj/RJY1nvTjJ4JI3Q4odayLJM3R1n79o=",
    "originContent": "* REST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn't fit your use case.  For example, moving expired documents to the archive folder might not cleanly fit within these verbs.",
    "translatedContent": "* जटिल संसाधनों को नेस्टेड पदानुक्रम के साथ प्राप्त करना क्लाइंट और सर्वर के बीच कई राउंड ट्रिप की आवश्यकता होती है ताकि एकल व्यू प्रस्तुत किया जा सके, जैसे कि ब्लॉग प्रविष्टि की सामग्री और उस प्रविष्टि पर टिप्पणियाँ प्राप्त करना। मोबाइल एप्लिकेशन के लिए जो परिवर्तनीय नेटवर्क स्थितियों में काम करते हैं, ये अनेक राउंड ट्रिप अत्यंत अवांछनीय हैं।"
  },
  {
    "row": 1530,
    "rowsha": "vkjpZQ9xt5H12UXRO8N6YeaZWa/dajwAT3E0n6t4rfM=",
    "originContent": "* Fetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.",
    "translatedContent": "* समय के साथ, API प्रतिक्रिया में अधिक फ़ील्ड जोड़े जा सकते हैं और पुराने क्लाइंट्स सभी नए डेटा फ़ील्ड प्राप्त करेंगे, भले ही उन्हें उनकी आवश्यकता न हो, परिणामस्वरूप पेलोड आकार बढ़ जाता है और विलंबता अधिक हो जाती है।"
  },
  {
    "row": 1531,
    "rowsha": "M+CcXz+lhnxuMbyJ9ADp42PZCDm47kF7PuDsitv8ZQ4=",
    "originContent": "* Over time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.",
    "translatedContent": ""
  },
  {
    "row": 1532,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### RPC और REST कॉल की तुलना"
  },
  {
    "row": 1533,
    "rowsha": "9+OFlAnB7eX/U58YzzyQmqBRblOi85+VjKC2+BQmeyM=",
    "originContent": "### RPC and REST calls comparison",
    "translatedContent": ""
  },
  {
    "row": 1534,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "| ऑपरेशन | RPC | REST |"
  },
  {
    "row": 1535,
    "rowsha": "Mf0PJetf7lxPChdRyJhQx+/j59DO1racuKZYVwheSSY=",
    "originContent": "| Operation | RPC | REST |",
    "translatedContent": "|---|---|---|"
  },
  {
    "row": 1536,
    "rowsha": "I8ygK3TzhkY++iR5bHqQEbDSyT8MOLTRXV0nYgW1m0M=",
    "originContent": "|---|---|---|",
    "translatedContent": "| साइनअप    | **POST** /signup | **POST** /persons |"
  },
  {
    "row": 1537,
    "rowsha": "yTX//Q9EnCRKE6Qtn1krLo7PsiICoBFPiL02dftV9ZQ=",
    "originContent": "| Signup    | **POST** /signup | **POST** /persons |",
    "translatedContent": "| इस्तीफा    | **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234 |"
  },
  {
    "row": 1538,
    "rowsha": "0XLsE4U1AOxHbuZ/7Amc1+zw9dDqkrxrz1jIbetVnC0=",
    "originContent": "| Resign    | **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234 |",
    "translatedContent": "| व्यक्ति पढ़ें | **GET** /readPerson?personid=1234 | **GET** /persons/1234 |"
  },
  {
    "row": 1539,
    "rowsha": "irK+A6tnAJjWFlB89T0T34b1gHxIdoAOvLDmroqZYf0=",
    "originContent": "| Read a person | **GET** /readPerson?personid=1234 | **GET** /persons/1234 |",
    "translatedContent": "| व्यक्ति की वस्तुओं की सूची पढ़ें | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items |"
  },
  {
    "row": 1540,
    "rowsha": "lsOoD75NbDh5lhsMv1XM7OzeHTngLtRqfgOxyV8BDcw=",
    "originContent": "| Read a person’s items list | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items |",
    "translatedContent": "| व्यक्ति की वस्तुओं में एक वस्तु जोड़ें | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |"
  },
  {
    "row": 1541,
    "rowsha": "oVrkLg1AxLWrSgrZ+Xu3avaUJshe0pNNwElTp/BqXZU=",
    "originContent": "| Add an item to a person’s items | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |",
    "translatedContent": "| वस्तु अपडेट करें    | **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |"
  },
  {
    "row": 1542,
    "rowsha": "mTM/BJg2KQ6X0l1TfBZu0NjiJmhy0GkgEo8nPAZg7tY=",
    "originContent": "| Update an item    | **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |",
    "translatedContent": "| वस्तु हटाएँ | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456 |"
  },
  {
    "row": 1543,
    "rowsha": "8CDFHcYbXd6uQ+dN1EwifUWiRFqv3nBgaJLRs5F6FIk=",
    "originContent": "| Delete an item | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456 |",
    "translatedContent": ""
  },
  {
    "row": 1544,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1545,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>स्रोत: क्या आप वास्तव में जानते हैं कि आप RPC पर REST क्यों पसंद करते हैं</a></i>"
  },
  {
    "row": 1546,
    "rowsha": "HAfihhgtDMMMGWw+/e4N3A82wb4Tz4ehjk9R6YOcIJk=",
    "originContent": "  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>Source: Do you really know why you prefer REST over RPC</a></i>",
    "translatedContent": "</p>"
  },
  {
    "row": 1547,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": ""
  },
  {
    "row": 1548,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### स्रोत(स्रोत) और आगे पढ़ें: REST और RPC"
  },
  {
    "row": 1549,
    "rowsha": "UYm72VZMn8PSCIJv6b06yz6lccf375WzqWoutcGC8Tg=",
    "originContent": "#### Source(s) and further reading: REST and RPC",
    "translatedContent": ""
  },
  {
    "row": 1550,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* [क्या आप वास्तव में जानते हैं कि आप RPC पर REST क्यों पसंद करते हैं](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)"
  },
  {
    "row": 1551,
    "rowsha": "LaVRXjDwZbNeTQ6bds7sFcoujFMpEXjmyfzp0unK9Gg=",
    "originContent": "* [Do you really know why you prefer REST over RPC](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)",
    "translatedContent": "* [कब RPC-जैसी विधियाँ REST से अधिक उपयुक्त होती हैं?](http://programmers.stackexchange.com/a/181186)"
  },
  {
    "row": 1552,
    "rowsha": "2fbKAzDn0s5l7x0ZQcwVrS4+bEaCGdIsROQGaNjKqew=",
    "originContent": "* [When are RPC-ish approaches more appropriate than REST?](http://programmers.stackexchange.com/a/181186)",
    "translatedContent": "* [REST बनाम JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)"
  },
  {
    "row": 1553,
    "rowsha": "/2VtiY8MXWTwYfpsAxQ8z/xBOVb/T5Wh9Dl5mjmxYdc=",
    "originContent": "* [REST vs JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)",
    "translatedContent": "* [RPC और REST के मिथकों का भंडाफोड़](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)"
  },
  {
    "row": 1554,
    "rowsha": "KXjDNJk05eVv350Af7VwLStB6Rw2wR9Bchd83uVsv7k=",
    "originContent": "* [Debunking the myths of RPC and REST](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)",
    "translatedContent": "* [RESTful API का उपयोग करने के नुकसान क्या हैं](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)"
  },
  {
    "row": 1555,
    "rowsha": "uHIrlx66vBpTfYfo+BXmx2U/hmgTHthtH89FwhvhpZc=",
    "originContent": "* [What are the drawbacks of using REST](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)",
    "translatedContent": "* [सिस्टम डिजाइन इंटरव्यू क्रैक करें](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)"
  },
  {
    "row": 1556,
    "rowsha": "E8CKVfW4DaDVQHo21CF4Vsv7vGZieZXs0+mOiMdXKn0=",
    "originContent": "* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)",
    "translatedContent": "* [Thrift](https://code.facebook.com/posts/1468950976659943/)"
  },
  {
    "row": 1557,
    "rowsha": "usr4rgpOtD5TCD8s+mY0eDBkk4N9S28XguVO90wRErQ=",
    "originContent": "* [Thrift](https://code.facebook.com/posts/1468950976659943/)",
    "translatedContent": "* [आंतरिक उपयोग के लिए REST और RPC क्यों नहीं](http://arstechnica.com/civis/viewtopic.php?t=1190508)"
  },
  {
    "row": 1558,
    "rowsha": "3ARDAzXf0nXWHahJKYXwei1iCld+/7n5Mf2I2oLb24E=",
    "originContent": "* [Why REST for internal use and not RPC](http://arstechnica.com/civis/viewtopic.php?t=1190508)",
    "translatedContent": ""
  },
  {
    "row": 1559,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## सुरक्षा"
  },
  {
    "row": 1560,
    "rowsha": "UlQ9upvw00moCjWDduBZqkTiv0PRDG/mYeqnsF8DP6Q=",
    "originContent": "## Security",
    "translatedContent": ""
  },
  {
    "row": 1561,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "इस अनुभाग को कुछ अपडेट की आवश्यकता हो सकती है। कृपया [योगदान करने पर विचार करें](#contributing)!"
  },
  {
    "row": 1562,
    "rowsha": "hGuoiVXuNZwbF+Vqkb+CSlXMTMBmOBtR428NDwkzhFM=",
    "originContent": "This section could use some updates.  Consider [contributing](#contributing)!",
    "translatedContent": ""
  },
  {
    "row": 1563,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "सुरक्षा एक व्यापक विषय है। जब तक आपके पास पर्याप्त अनुभव, सुरक्षा पृष्ठभूमि, या ऐसी स्थिति के लिए आवेदन नहीं कर रहे हैं जिसमें सुरक्षा का ज्ञान आवश्यक हो, आपको शायद मूल बातें जानने की ही आवश्यकता होगी:"
  },
  {
    "row": 1564,
    "rowsha": "K4oRrOeVrITeujdLCk+lOdenPOKzRGSb36UkPMJXz00=",
    "originContent": "Security is a broad topic.  Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won't need to know more than the basics:",
    "translatedContent": ""
  },
  {
    "row": 1565,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* ट्रांजिट में और विश्राम के दौरान डेटा को एन्क्रिप्ट करें।"
  },
  {
    "row": 1566,
    "rowsha": "1N05AULQ81FjW8EiPp0WF2uZ/vKEiXZ++GqlzpL6W04=",
    "originContent": "* Encrypt in transit and at rest.",
    "translatedContent": "* सभी यूजर इनपुट या उपयोगकर्ता को दिखाए गए किसी भी इनपुट पैरामीटर को सैनिटाइज करें ताकि [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) और [SQL injection](https://en.wikipedia.org/wiki/SQL_injection) से बचा जा सके।"
  },
  {
    "row": 1567,
    "rowsha": "xe+liYlsQD7KvZro/wts7hOfjIXPy9orxzW2Dxul1pY=",
    "originContent": "* Sanitize all user inputs or any input parameters exposed to user to prevent [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) and [SQL injection](https://en.wikipedia.org/wiki/SQL_injection).",
    "translatedContent": "* SQL injection को रोकने के लिए पैरेमिट्राइज्ड क्वेरीज़ का उपयोग करें।"
  },
  {
    "row": 1568,
    "rowsha": "l3A9LaiorRvDj5CkYgdXlCtb0dL45JML+LeM3RZSGCc=",
    "originContent": "* Use parameterized queries to prevent SQL injection.",
    "translatedContent": "* [न्यूनतम विशेषाधिकार](https://en.wikipedia.org/wiki/Principle_of_least_privilege) के सिद्धांत का पालन करें।"
  },
  {
    "row": 1569,
    "rowsha": "gkN2qsP8lSs9FaRO+uU/kQh1RIHcF0dZJvVXrlVoHNM=",
    "originContent": "* Use the principle of [least privilege](https://en.wikipedia.org/wiki/Principle_of_least_privilege).",
    "translatedContent": ""
  },
  {
    "row": 1570,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### स्रोत और आगे पढ़ने के लिए"
  },
  {
    "row": 1571,
    "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
    "originContent": "### Source(s) and further reading",
    "translatedContent": ""
  },
  {
    "row": 1572,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* [API सुरक्षा चेकलिस्ट](https://github.com/shieldfy/API-Security-Checklist)"
  },
  {
    "row": 1573,
    "rowsha": "5jmefxmZg38vjMppEPVXB691ySxO2cF+eL8Ht20TTEs=",
    "originContent": "* [API security checklist](https://github.com/shieldfy/API-Security-Checklist)",
    "translatedContent": "* [डेवलपर्स के लिए सुरक्षा गाइड](https://github.com/FallibleInc/security-guide-for-developers)"
  },
  {
    "row": 1574,
    "rowsha": "matLhM/u8xEF82O46b5QA7t//LnoEAuDYz9omxCwOL4=",
    "originContent": "* [Security guide for developers](https://github.com/FallibleInc/security-guide-for-developers)",
    "translatedContent": "* [OWASP शीर्ष दस](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)"
  },
  {
    "row": 1575,
    "rowsha": "9ewFrDAiXWR4C6F4egOg6TpLTcWO3Q2vtCR464sfzBE=",
    "originContent": "* [OWASP top ten](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)",
    "translatedContent": ""
  },
  {
    "row": 1576,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## परिशिष्ट"
  },
  {
    "row": 1577,
    "rowsha": "NY23TEBBgPFlNE5ad5aEgkJDKmBbORVrA3kzjJCOwek=",
    "originContent": "## Appendix",
    "translatedContent": ""
  },
  {
    "row": 1578,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "कभी-कभी आपसे 'बैक-ऑफ-द-एंवेलप' अनुमान लगाने के लिए कहा जाएगा। उदाहरण के लिए, आपको यह निर्धारित करना पड़ सकता है कि डिस्क से 100 इमेज थंबनेल बनाने में कितना समय लगेगा या कोई डेटा संरचना कितनी मेमोरी लेगी। **दो की घात तालिका** और **प्रत्येक प्रोग्रामर को पता होनी चाहिए लेटेंसी संख्याएँ** उपयोगी संदर्भ हैं।"
  },
  {
    "row": 1579,
    "rowsha": "Qk3gX0l5EZMii1z+NlOJ80sUfehGEfQhoNWjfzOAntc=",
    "originContent": "You'll sometimes be asked to do 'back-of-the-envelope' estimates.  For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take.  The **Powers of two table** and **Latency numbers every programmer should know** are handy references.",
    "translatedContent": ""
  },
  {
    "row": 1580,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### दो की घात तालिका"
  },
  {
    "row": 1581,
    "rowsha": "z/bxSXl1N06ql8Te1RnT8CK3EK7JyOw96sLejExgST0=",
    "originContent": "### Powers of two table",
    "translatedContent": ""
  },
  {
    "row": 1582,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1583,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 1584,
    "rowsha": "GopqSzaj/Su5MUJ6sORIeByErVFyL9MXiY+m0fWQ9aA=",
    "originContent": "Power           Exact Value         Approx Value        Bytes",
    "translatedContent": "Power           Exact Value         Approx Value        Bytes"
  },
  {
    "row": 1585,
    "rowsha": "6u/Bs8w92r704jYI5bgL1lqyASIdtxwcZedxnegDHOk=",
    "originContent": "---------------------------------------------------------------",
    "translatedContent": "---------------------------------------------------------------"
  },
  {
    "row": 1586,
    "rowsha": "Tipf9Cya0JVwFN0uuubYFjnt6J0egikpUvPfz1W9oBs=",
    "originContent": "7                             128",
    "translatedContent": "7                             128"
  },
  {
    "row": 1587,
    "rowsha": "nhK7nUwQ9svong5x5wMmIKF1zstzTZMT7SmEXchi2cc=",
    "originContent": "8                             256",
    "translatedContent": "8                             256"
  },
  {
    "row": 1588,
    "rowsha": "WWsaSUQwyxHtCJHzqdcxA4Iq0p15/45Fh7hIobekNqs=",
    "originContent": "10                           1024   1 thousand           1 KB",
    "translatedContent": "10                           1024   1 thousand           1 KB"
  },
  {
    "row": 1589,
    "rowsha": "1oROUdvQdHSMnILjM7dRW8oXMYEk8gf+5nSwxZIWyIA=",
    "originContent": "16                         65,536                       64 KB",
    "translatedContent": "16                         65,536                       64 KB"
  },
  {
    "row": 1590,
    "rowsha": "I/d5gNv+MTAgv97UDa2/MdyYAyisHzARXHqODLiomWA=",
    "originContent": "20                      1,048,576   1 million            1 MB",
    "translatedContent": "20                      1,048,576   1 million            1 MB"
  },
  {
    "row": 1591,
    "rowsha": "OrMri/0cTHQ/b6bR5KrSxAO8R9Kh0zySbZfTfkkMkV4=",
    "originContent": "30                  1,073,741,824   1 billion            1 GB",
    "translatedContent": "30                  1,073,741,824   1 billion            1 GB"
  },
  {
    "row": 1592,
    "rowsha": "NcALEgdudV60zfu4Ga6b4hHmRaE0CNg4WP/j5fXR3as=",
    "originContent": "32                  4,294,967,296                        4 GB",
    "translatedContent": "32                  4,294,967,296                        4 GB"
  },
  {
    "row": 1593,
    "rowsha": "3fpv7VuqjwI+R6BQfXfU9jqXDMDjIQIMVCxHmSR7HYM=",
    "originContent": "40              1,099,511,627,776   1 trillion           1 TB",
    "translatedContent": "40              1,099,511,627,776   1 trillion           1 TB"
  },
  {
    "row": 1594,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 1595,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1596,
    "rowsha": "yAcCmKF4VrpEVdPP7QGvwQrQvx5nYqkLfEVqvhED8vU=",
    "originContent": "#### Source(s) and further reading",
    "translatedContent": "#### स्रोत और आगे पढ़ने के लिए"
  },
  {
    "row": 1597,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1598,
    "rowsha": "wE0BFHK40veitXHaEcnSQ1veDoeThQ5aNZHM1KSXSd4=",
    "originContent": "* [Powers of two](https://en.wikipedia.org/wiki/Power_of_two)",
    "translatedContent": "* [दो का घात](https://en.wikipedia.org/wiki/Power_of_two)"
  },
  {
    "row": 1599,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1600,
    "rowsha": "ewtmvY/jbiB2g7/rm/0P600zgMFUaOWl6P9UwIHrsVo=",
    "originContent": "### Latency numbers every programmer should know",
    "translatedContent": "### विलंबता संख्याएँ जिन्हें हर प्रोग्रामर को जानना चाहिए"
  },
  {
    "row": 1601,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1602,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 1603,
    "rowsha": "WJYZRpCB6wnwYROffRDVKf93tmQ4UBjDYHAvsZQIioQ=",
    "originContent": "Latency Comparison Numbers",
    "translatedContent": "Latency Comparison Numbers"
  },
  {
    "row": 1604,
    "rowsha": "8t5X+uJxo5I5KHujp8euYVJYx46DJ4nFQeFNE8mdPn0=",
    "originContent": "--------------------------",
    "translatedContent": "--------------------------"
  },
  {
    "row": 1605,
    "rowsha": "7XfckQls1iOKWuWDXWBh6cpyPQSNHBtfyfTfn2fr1vk=",
    "originContent": "L1 cache reference                           0.5 ns",
    "translatedContent": "L1 cache reference                           0.5 ns"
  },
  {
    "row": 1606,
    "rowsha": "vUJ7vZsr/S4EdGeDR5raQ//fo6pYQGIRjgctBXyXgFs=",
    "originContent": "Branch mispredict                            5   ns",
    "translatedContent": "Branch mispredict                            5   ns"
  },
  {
    "row": 1607,
    "rowsha": "orTU96fCnkTK5376SbB3HOk+15cpHbawxugjNOBpPLw=",
    "originContent": "L2 cache reference                           7   ns                      14x L1 cache",
    "translatedContent": "L2 cache reference                           7   ns                      14x L1 cache"
  },
  {
    "row": 1608,
    "rowsha": "QoUE8gGYfwQpfH5OuRes1kgdNGj/aFG70jTIPTxWGPQ=",
    "originContent": "Mutex lock/unlock                           25   ns",
    "translatedContent": "Mutex lock/unlock                           25   ns"
  },
  {
    "row": 1609,
    "rowsha": "QpqdJt3cEU01+klSGYFJgy5QUOJaN0IVGJ1tcKGmF7A=",
    "originContent": "Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache",
    "translatedContent": "Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache"
  },
  {
    "row": 1610,
    "rowsha": "d4bOF13WOnZy9PYYBouzJ3EwqhG9ldAxkZhWMyDYBSk=",
    "originContent": "Compress 1K bytes with Zippy            10,000   ns       10 us",
    "translatedContent": "Compress 1K bytes with Zippy            10,000   ns       10 us"
  },
  {
    "row": 1611,
    "rowsha": "l/i0TC4oQftOkDSmWDqDx+ntKBQFPmi2D66Lxc7qdX8=",
    "originContent": "Send 1 KB bytes over 1 Gbps network     10,000   ns       10 us",
    "translatedContent": "Send 1 KB bytes over 1 Gbps network     10,000   ns       10 us"
  },
  {
    "row": 1612,
    "rowsha": "WePwXIdujqBjPNEZbwwO869ur7KZZv9PzVdlxKSsy3s=",
    "originContent": "Read 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD",
    "translatedContent": "Read 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD"
  },
  {
    "row": 1613,
    "rowsha": "YyivgxFLG63fPQecacT4DOV5m7tHCxGxsB9VF7tx6Vs=",
    "originContent": "Read 1 MB sequentially from memory     250,000   ns      250 us",
    "translatedContent": "Read 1 MB sequentially from memory     250,000   ns      250 us"
  },
  {
    "row": 1614,
    "rowsha": "BAsTJzwY4nXJMUTgUeqkO18Eg/Mm9GXpWZwOXVdmnr8=",
    "originContent": "Round trip within same datacenter      500,000   ns      500 us",
    "translatedContent": "Round trip within same datacenter      500,000   ns      500 us"
  },
  {
    "row": 1615,
    "rowsha": "pXdZXL92bt2iQqo2YKkbB7UA6ooJC7KsxTRc+Q0qM7s=",
    "originContent": "Read 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory",
    "translatedContent": "Read 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory"
  },
  {
    "row": 1616,
    "rowsha": "xgdUzRDydXfqQlqH+c2uR0dMhHe39UABDDdOAya3MeA=",
    "originContent": "HDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip",
    "translatedContent": "HDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip"
  },
  {
    "row": 1617,
    "rowsha": "kSLIUD4vIrTPsLLrWl47S3hv0HSAlpjVFzcf9sBGYlg=",
    "originContent": "Read 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD",
    "translatedContent": "Read 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD"
  },
  {
    "row": 1618,
    "rowsha": "vHFNdKf7v28hkTxbgL3Mf7dNJx2utjXc6wJ7Rvo6XTA=",
    "originContent": "Read 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD",
    "translatedContent": "Read 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD"
  },
  {
    "row": 1619,
    "rowsha": "o0nE15MY0adAe9UgvDoZTs8ZsuvGYdAsSwgKlhl45Zg=",
    "originContent": "Send packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms",
    "translatedContent": "Send packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms"
  },
  {
    "row": 1620,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1621,
    "rowsha": "inUlsUkvuEgz9cSmmzD0v7sTT5tma2GiwYctY9I0wIU=",
    "originContent": "Notes",
    "translatedContent": "Notes"
  },
  {
    "row": 1622,
    "rowsha": "c74IfpMID55DaJK30YLfZjlLx52/XfEZ2TV99hseu/s=",
    "originContent": "-----",
    "translatedContent": "-----"
  },
  {
    "row": 1623,
    "rowsha": "6bP4W1/q9qy3xELpuTLXs2kzSkmu37dOz6Y5nxIPhMw=",
    "originContent": "1 ns = 10^-9 seconds",
    "translatedContent": "1 ns = 10^-9 seconds"
  },
  {
    "row": 1624,
    "rowsha": "W+dpQ0MorvVAqvoFpYY10s5X0Pj7XMLa39EJSQRcDgo=",
    "originContent": "1 us = 10^-6 seconds = 1,000 ns",
    "translatedContent": "1 us = 10^-6 seconds = 1,000 ns"
  },
  {
    "row": 1625,
    "rowsha": "w4NW+K7skNvLWuOf9wFWt4GNszqCcYuXaXCQbXfLoQI=",
    "originContent": "1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns",
    "translatedContent": "1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns"
  },
  {
    "row": 1626,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 1627,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "ऊपर दिए गए आंकड़ों के आधार पर उपयोगी मेट्रिक्स:"
  },
  {
    "row": 1628,
    "rowsha": "eD9fecv8C1FtN9m3TkLw+2+24UTbtO6VqyvPg8JSNKw=",
    "originContent": "Handy metrics based on numbers above:",
    "translatedContent": ""
  },
  {
    "row": 1629,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* HDD से अनुक्रमिक रूप से पढ़ना 30 MB/s पर"
  },
  {
    "row": 1630,
    "rowsha": "ht3OgnqSm5EBo9ukcpejXJ3LRFbCMx3PRpml/KISYoo=",
    "originContent": "* Read sequentially from HDD at 30 MB/s",
    "translatedContent": "* 1 Gbps ईथरनेट से अनुक्रमिक रूप से पढ़ना 100 MB/s पर"
  },
  {
    "row": 1631,
    "rowsha": "u+lRSWNmLgQwNfqkilfz38jhLXNbB90sXSCly1F8ntc=",
    "originContent": "* Read sequentially from 1 Gbps Ethernet at 100 MB/s",
    "translatedContent": "* SSD से अनुक्रमिक रूप से पढ़ना 1 GB/s पर"
  },
  {
    "row": 1632,
    "rowsha": "3kvwfvFyTWqDY8gLaD5uSrk/shDtsPk19jC0aMzSIVs=",
    "originContent": "* Read sequentially from SSD at 1 GB/s",
    "translatedContent": "* मुख्य मेमोरी से अनुक्रमिक रूप से पढ़ना 4 GB/s पर"
  },
  {
    "row": 1633,
    "rowsha": "dqri5D/YDMthAEWEvYG+8h8gF6wyRdyakLuq/q0xnW0=",
    "originContent": "* Read sequentially from main memory at 4 GB/s",
    "translatedContent": "* प्रति सेकंड 6-7 विश्व-व्यापी राउंड ट्रिप्स"
  },
  {
    "row": 1634,
    "rowsha": "xwZWw3s8vqU6oh1Th/KktklV4BA2B1x1gtyoGQqf0R0=",
    "originContent": "* 6-7 world-wide round trips per second",
    "translatedContent": "* एक डेटा सेंटर के भीतर प्रति सेकंड 2,000 राउंड ट्रिप्स"
  },
  {
    "row": 1635,
    "rowsha": "CvuiLVzVw7LMUyJWWfONGFRImXtkB8UmBy6jycVPxWg=",
    "originContent": "* 2,000 round trips per second within a data center",
    "translatedContent": ""
  },
  {
    "row": 1636,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### लेटेंसी नंबरों का दृश्यात्मक रूप"
  },
  {
    "row": 1637,
    "rowsha": "ydjGPOgoiaNweMh64ZpijkNTmo1yw6vzz7mLiJGg6No=",
    "originContent": "#### Latency numbers visualized",
    "translatedContent": ""
  },
  {
    "row": 1638,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)"
  },
  {
    "row": 1639,
    "rowsha": "o3/x85NDgw/RDVn0BOuVDqvLWU6gY7OKusFtztcurMM=",
    "originContent": "![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)",
    "translatedContent": ""
  },
  {
    "row": 1640,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "#### स्रोत(स) और आगे पढ़ें"
  },
  {
    "row": 1641,
    "rowsha": "yAcCmKF4VrpEVdPP7QGvwQrQvx5nYqkLfEVqvhED8vU=",
    "originContent": "#### Source(s) and further reading",
    "translatedContent": ""
  },
  {
    "row": 1642,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "* [हर प्रोग्रामर को जानने योग्य लेटेंसी नंबर - 1](https://gist.github.com/jboner/2841832)"
  },
  {
    "row": 1643,
    "rowsha": "vS16QYVy1MaWoRmtt+NizFbMPWPubKu+I3zkhXRhJIA=",
    "originContent": "* [Latency numbers every programmer should know - 1](https://gist.github.com/jboner/2841832)",
    "translatedContent": "* [हर प्रोग्रामर को जानने योग्य लेटेंसी नंबर - 2](https://gist.github.com/hellerbarde/2843375)"
  },
  {
    "row": 1644,
    "rowsha": "HVyW0cNcDHpFiJcBUaWWR3pOMsl/iT05gwK9ZLoHrro=",
    "originContent": "* [Latency numbers every programmer should know - 2](https://gist.github.com/hellerbarde/2843375)",
    "translatedContent": "* [बड़े वितरित सिस्टम बनाने से डिज़ाइन, सबक और सलाह](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)"
  },
  {
    "row": 1645,
    "rowsha": "6fjPiL66amn4K0pQS3WFhMy5fRrvxY3JAWYq2zAn8wo=",
    "originContent": "* [Designs, lessons, and advice from building large distributed systems](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)",
    "translatedContent": "* [बड़े पैमाने पर वितरित सिस्टम बनाने से सॉफ्टवेयर इंजीनियरिंग सलाह](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)"
  },
  {
    "row": 1646,
    "rowsha": "bBBcrkTrIq6iY9+ywuF1kRRPX1UlT4+kuOUTteAB5sY=",
    "originContent": "* [Software Engineering Advice from Building Large-Scale Distributed Systems](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)",
    "translatedContent": ""
  },
  {
    "row": 1647,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### अतिरिक्त सिस्टम डिज़ाइन इंटरव्यू प्रश्न"
  },
  {
    "row": 1648,
    "rowsha": "hZhFNPm0q28sVvllxWZbdfO9NFGvFonhZVgwXs8qqOw=",
    "originContent": "### Additional system design interview questions",
    "translatedContent": ""
  },
  {
    "row": 1649,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "> सामान्य सिस्टम डिज़ाइन इंटरव्यू प्रश्न, प्रत्येक को हल करने के लिए संसाधनों के लिंक के साथ।"
  },
  {
    "row": 1650,
    "rowsha": "mI7ePEuh8j6xgVO3ahSy4CFa7+K2O+Uhvh746ae+aXo=",
    "originContent": "> Common system design interview questions, with links to resources on how to solve each.",
    "translatedContent": ""
  },
  {
    "row": 1651,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "| प्रश्न | संदर्भ(स) |"
  },
  {
    "row": 1652,
    "rowsha": "sPgBeBncfP1LAM8d0Oknfw0PynNZzOgZYGioZCVO5Jo=",
    "originContent": "| Question | Reference(s) |",
    "translatedContent": "|---|---|"
  },
  {
    "row": 1653,
    "rowsha": "QZm6RU1tOug2VxIMK7a9Z07vwN19PNTMhEFx3GclE1s=",
    "originContent": "|---|---|",
    "translatedContent": "| ड्रॉपबॉक्स जैसी फाइल सिंक सेवा डिज़ाइन करें | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |"
  },
  {
    "row": 1654,
    "rowsha": "nmBVhJPMTavYfzX7ghJ83vzClzHyKXLymzhZD5tlNA0=",
    "originContent": "| Design a file sync service like Dropbox | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |",
    "translatedContent": "| गूगल जैसा सर्च इंजन डिज़ाइन करें | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |"
  },
  {
    "row": 1655,
    "rowsha": "34WvqZqAay+MKs5sSBbG7ouZI8wa1p2djhAzo33rWp8=",
    "originContent": "| Design a search engine like Google | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |",
    "translatedContent": "| गूगल जैसा स्केलेबल वेब क्रॉलर डिज़ाइन करें | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |"
  },
  {
    "row": 1656,
    "rowsha": "/6fqzF+UjOZUTEdkAgsWgOea4fAKWQiYR1IPxxH1e3E=",
    "originContent": "| Design a scalable web crawler like Google | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |",
    "translatedContent": "| गूगल डॉक्स डिज़ाइन करें | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |"
  },
  {
    "row": 1657,
    "rowsha": "Xs3hegP9jwc2bNH3wW2/aYK3SDbyTxg9SqpPi8nmExs=",
    "originContent": "| Design Google docs | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |",
    "translatedContent": "| रेडिस जैसी की-वैल्यू स्टोर डिज़ाइन करें | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |"
  },
  {
    "row": 1658,
    "rowsha": "olMvUlgDzkjGPqlZaBSTF0xvDvFeeI4/bQPr9qBAOKQ=",
    "originContent": "| Design a key-value store like Redis | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |",
    "translatedContent": "| मेमकैश्ड जैसी कैश सिस्टम डिज़ाइन करें | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |"
  },
  {
    "row": 1659,
    "rowsha": "/Qpls+PP87/+NBAf3ckJhQSAtkbk9G1/zt1jM4Q9rkA=",
    "originContent": "| Design a cache system like Memcached | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |",
    "translatedContent": "| अमेज़न जैसी सिफारिश प्रणाली डिज़ाइन करें | [hulu.com](https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |"
  },
  {
    "row": 1660,
    "rowsha": "EZVuNe9bE9f1W2jnIz+XPDMTcM86b+GVv4C23g7As/A=",
    "originContent": "| Design a recommendation system like Amazon's | [hulu.com](https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |",
    "translatedContent": "| बिटली जैसी टिनीयूआरएल प्रणाली डिज़ाइन करें | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |"
  },
  {
    "row": 1661,
    "rowsha": "Dtq3j3ZuP6YMSQFRtZVaYgEzVGG2V+eID3ndmj1Ans0=",
    "originContent": "| Design a tinyurl system like Bitly | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |",
    "translatedContent": "| व्हाट्सएप जैसी चैट ऐप डिज़ाइन करें | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)"
  },
  {
    "row": 1662,
    "rowsha": "Ywzj+QdlwFGrDWOB50eIBrwnX/hpwLYPbE3wL42WStA=",
    "originContent": "| Design a chat app like WhatsApp | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)",
    "translatedContent": "| इंस्टाग्राम जैसी फोटो शेयरिंग प्रणाली डिज़ाइन करें | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |"
  },
  {
    "row": 1663,
    "rowsha": "b122D6DRoLAT3rPpXKu3RHXoE2SyEHvf7UWH+ULMnaI=",
    "originContent": "| Design a picture sharing system like Instagram | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |",
    "translatedContent": "| फेसबुक न्यूज़ फीड फंक्शन डिज़ाइन करें | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |"
  },
  {
    "row": 1664,
    "rowsha": "n5wkhGcBv+VjeGTpQNIzKWXD4Ya0RgR9ohx8BUwIDLw=",
    "originContent": "| Design the Facebook news feed function | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |",
    "translatedContent": "| फेसबुक टाइमलाइन फंक्शन डिज़ाइन करें | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |"
  },
  {
    "row": 1665,
    "rowsha": "dTNxBUvOh9/YOSQcS3ROtWSrbE4FHO4BBY314KA+qvM=",
    "originContent": "| Design the Facebook timeline function | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |",
    "translatedContent": "| फेसबुक चैट फंक्शन डिज़ाइन करें | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |"
  },
  {
    "row": 1666,
    "rowsha": "Q1CaaqMvLArgnZ5ckZbSzNntPkWLZW/e6MusBSkqMJg=",
    "originContent": "| Design the Facebook chat function | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |",
    "translatedContent": ""
  },
  {
    "row": 1667,
    "rowsha": "IT1XtJeBZae70/QHqrdlV4vAWb+QqI2jlmftFbWAElY=",
    "originContent": "| Design a graph search function like Facebook's | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |",
    "translatedContent": "| फेसबुक की तरह एक ग्राफ़ खोज फ़ंक्शन डिज़ाइन करें | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |"
  },
  {
    "row": 1668,
    "rowsha": "3jHFgkxGAhEskpPiYJjXKH5nb3N0Y9abHCZtryOfuyM=",
    "originContent": "| Design a content delivery network like CloudFlare | [figshare.com](https://figshare.com/articles/Globally_distributed_content_delivery/6605972) |",
    "translatedContent": "| CloudFlare जैसा कंटेंट डिलीवरी नेटवर्क डिज़ाइन करें | [figshare.com](https://figshare.com/articles/Globally_distributed_content_delivery/6605972) |"
  },
  {
    "row": 1669,
    "rowsha": "dvC4Bb04KKuQAX/SE4QlhXtZn23ZcsJG+gGiIDQtGj8=",
    "originContent": "| Design a trending topic system like Twitter's | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |",
    "translatedContent": "| ट्विटर जैसा ट्रेंडिंग टॉपिक सिस्टम डिज़ाइन करें | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |"
  },
  {
    "row": 1670,
    "rowsha": "0eNZVciq8x2bp425t+4qWN637WQuolv7FHB5tMar8HA=",
    "originContent": "| Design a random ID generation system | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |",
    "translatedContent": "| रैंडम आईडी जेनरेशन सिस्टम डिज़ाइन करें | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |"
  },
  {
    "row": 1671,
    "rowsha": "45+wk60ZP83bcmrcYyFcJSHT/lM18ANjO3WW5Go7/1k=",
    "originContent": "| Return the top k requests during a time interval | [cs.ucsb.edu](https://www.cs.ucsb.edu/sites/default/files/documents/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |",
    "translatedContent": "| एक समय अंतराल के दौरान शीर्ष k अनुरोध लौटाएँ | [cs.ucsb.edu](https://www.cs.ucsb.edu/sites/default/files/documents/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |"
  },
  {
    "row": 1672,
    "rowsha": "KdkrqOeWJl9D6mzA7W/bK825APi/8xOv2edoQ4vcKNc=",
    "originContent": "| Design a system that serves data from multiple data centers | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |",
    "translatedContent": "| एक सिस्टम डिज़ाइन करें जो कई डेटा सेंटर्स से डेटा सर्व करता है | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |"
  },
  {
    "row": 1673,
    "rowsha": "huC3QZhNOtFN3NwLfG4sZc9UCaubTh+yN9/uLxLixqo=",
    "originContent": "| Design an online multiplayer card game | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |",
    "translatedContent": "| एक ऑनलाइन मल्टीप्लेयर कार्ड गेम डिज़ाइन करें | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |"
  },
  {
    "row": 1674,
    "rowsha": "i7BkWG/MMoMjuckb2GZ2oLIWSBm/rU/7yVG2pVenUEU=",
    "originContent": "| Design a garbage collection system | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |",
    "translatedContent": "| एक गार्बेज कलेक्शन सिस्टम डिज़ाइन करें | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |"
  },
  {
    "row": 1675,
    "rowsha": "tyd71PZC9weXz3rApqnGoMUNNtWfeRrR/10kUsJKDJU=",
    "originContent": "| Design an API rate limiter | [https://stripe.com/blog/](https://stripe.com/blog/rate-limiters) |",
    "translatedContent": "| एक API रेट लिमिटर डिज़ाइन करें | [https://stripe.com/blog/](https://stripe.com/blog/rate-limiters) |"
  },
  {
    "row": 1676,
    "rowsha": "CtSVzl/12DKjtMvkoqLL7rU3eGC6mgAPqC17fs5xZoE=",
    "originContent": "| Design a Stock Exchange (like NASDAQ or Binance) | [Jane Street](https://youtu.be/b1e4t2k2KJY)<br/>[Golang Implementation](https://around25.com/blog/building-a-trading-engine-for-a-crypto-exchange/)<br/>[Go Implementation](http://bhomnick.net/building-a-simple-limit-order-in-go/) |",
    "translatedContent": "| एक स्टॉक एक्सचेंज (NASDAQ या Binance जैसा) डिज़ाइन करें | [Jane Street](https://youtu.be/b1e4t2k2KJY)<br/>[Golang Implementation](https://around25.com/blog/building-a-trading-engine-for-a-crypto-exchange/)<br/>[Go Implementation](http://bhomnick.net/building-a-simple-limit-order-in-go/) |"
  },
  {
    "row": 1677,
    "rowsha": "rxZ/1ZcyqiWhJo83Zu2JZADx1pvrsk1TTCEtxi+B8tg=",
    "originContent": "| Add a system design question | [Contribute](#contributing) |",
    "translatedContent": "| एक सिस्टम डिज़ाइन प्रश्न जोड़ें | [Contribute](#contributing) |"
  },
  {
    "row": 1678,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1679,
    "rowsha": "Za1VkYtWyAeLgmA6imOd8gk60ytSu4VwYmu6crWZDag=",
    "originContent": "### Real world architectures",
    "translatedContent": "### वास्तविक दुनिया की आर्किटेक्चर"
  },
  {
    "row": 1680,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1681,
    "rowsha": "TIT1XP70oOG3zxrI4jrv5VqD4QZnKaBWTJqDwgcaFlQ=",
    "originContent": "> Articles on how real world systems are designed.",
    "translatedContent": "> वास्तविक दुनिया की प्रणालियाँ कैसे डिज़ाइन की जाती हैं, इस पर लेख।"
  },
  {
    "row": 1682,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1683,
    "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
    "originContent": "<p align=\"center\">",
    "translatedContent": "<p align=\"center\">"
  },
  {
    "row": 1684,
    "rowsha": "s3tM/DD7OHnzlaZpiaduNV2zSpU1YQqMo3uR3fMD2pM=",
    "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/TcUo2fw.png\">",
    "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/TcUo2fw.png\">"
  },
  {
    "row": 1685,
    "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
    "originContent": "  <br/>",
    "translatedContent": "  <br/>"
  },
  {
    "row": 1686,
    "rowsha": "Pw6wsGWicX588U1PD/OX9d8HlZ28pWRe0zZe1vMAy98=",
    "originContent": "  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>Source: Twitter timelines at scale</a></i>",
    "translatedContent": "  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>स्रोत: ट्विटर टाइमलाइन बड़े पैमाने पर</a></i>"
  },
  {
    "row": 1687,
    "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
    "originContent": "</p>",
    "translatedContent": "</p>"
  },
  {
    "row": 1688,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1689,
    "rowsha": "J0GGf6cvtCVUtLSo2amy0x1e3CCZKIWA/PskS93mKTQ=",
    "originContent": "**Don't focus on nitty gritty details for the following articles, instead:**",
    "translatedContent": "**निम्नलिखित लेखों के लिए सूक्ष्म विवरणों पर ध्यान न दें, बल्कि:**"
  },
  {
    "row": 1690,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1691,
    "rowsha": "xEQQ8Hj8/t2Cr5EKqxyF/jD2Y3/dEwbmweWFWfgsdt0=",
    "originContent": "* Identify shared principles, common technologies, and patterns within these articles",
    "translatedContent": "* इन लेखों में साझा सिद्धांतों, सामान्य तकनीकों और पैटर्न की पहचान करें"
  },
  {
    "row": 1692,
    "rowsha": "X+LAbnAEjaTr3sVvbCiZ9y5rwJPeV7LDivxxNg0OI6c=",
    "originContent": "* Study what problems are solved by each component, where it works, where it doesn't",
    "translatedContent": "* अध्ययन करें कि प्रत्येक घटक कौन सी समस्याओं को हल करता है, कहाँ काम करता है, कहाँ नहीं"
  },
  {
    "row": 1693,
    "rowsha": "MPX4qM5aUfJxw9M21X65qnIN8Lxi/laKp8DFjV0Kfgw=",
    "originContent": "* Review the lessons learned",
    "translatedContent": "* सीखे गए पाठों की समीक्षा करें"
  },
  {
    "row": 1694,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1695,
    "rowsha": "B3Sd8qryMj1Dp2eMPiLBsVrszXEejVpT96dKoUXu3/M=",
    "originContent": "|Type | System | Reference(s) |",
    "translatedContent": "|प्रकार | सिस्टम | संदर्भ(संदर्भ) |"
  },
  {
    "row": 1696,
    "rowsha": "I8ygK3TzhkY++iR5bHqQEbDSyT8MOLTRXV0nYgW1m0M=",
    "originContent": "|---|---|---|",
    "translatedContent": "|---|---|---|"
  },
  {
    "row": 1697,
    "rowsha": "ndwepg+ynIt0WiFogpwQBqBSDNu2IzZau/9mdj8kNXE=",
    "originContent": "| Data processing | **MapReduce** - Distributed data processing from Google | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |",
    "translatedContent": "| डेटा प्रोसेसिंग | **MapReduce** - Google का वितरित डेटा प्रोसेसिंग | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |"
  },
  {
    "row": 1698,
    "rowsha": "K8K88AWwcvHKoRLmmMGtcXQ/G5NGMHTHTQx+cFO31T8=",
    "originContent": "| Data processing | **Spark** - Distributed data processing from Databricks | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |",
    "translatedContent": "| डेटा प्रोसेसिंग | **Spark** - Databricks का वितरित डेटा प्रोसेसिंग | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |"
  },
  {
    "row": 1699,
    "rowsha": "UI8l10rrPsV+pJxbvfkUJVKHiPFlWxuMZejNpfaihOM=",
    "originContent": "| Data processing | **Storm** - Distributed data processing from Twitter | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |",
    "translatedContent": "| डेटा प्रोसेसिंग | **Storm** - Twitter का वितरित डेटा प्रोसेसिंग | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |"
  },
  {
    "row": 1700,
    "rowsha": "p/ErXrnMGSZC77N6DnBjWAETa1ojTSEipbqwpQgRtH0=",
    "originContent": "| | | |",
    "translatedContent": "| | | |"
  },
  {
    "row": 1701,
    "rowsha": "s10nia0DhWv01UO1oYnmM+58lFjbSlq1FrlHudaj+6E=",
    "originContent": "| Data store | **Bigtable** - Distributed column-oriented database from Google | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |",
    "translatedContent": "| डेटा स्टोर | **Bigtable** - Google का वितरित कॉलम-ओरिएंटेड डेटाबेस | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |"
  },
  {
    "row": 1702,
    "rowsha": "FbCZHlV+12FNAq6QAZT5mb4ruPuWfer6ozzWM9l8+jI=",
    "originContent": "| Data store | **HBase** - Open source implementation of Bigtable | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |",
    "translatedContent": "| डेटा स्टोर | **HBase** - Bigtable का ओपन सोर्स इम्प्लीमेंटेशन | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |"
  },
  {
    "row": 1703,
    "rowsha": "EctBko8smWSUES8Qe7DIGyELviTCwHL/I3NeofnVg5w=",
    "originContent": "| Data store | **Cassandra** - Distributed column-oriented database from Facebook | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)",
    "translatedContent": "| डेटा स्टोर | **Cassandra** - Facebook का वितरित कॉलम-ओरिएंटेड डेटाबेस | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)"
  },
  {
    "row": 1704,
    "rowsha": "116lS0W90997w1whxX/8PlSu48bUzif3Y05j44r8mqc=",
    "originContent": "| Data store | **DynamoDB** - Document-oriented database from Amazon | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |",
    "translatedContent": "| डेटा स्टोर | **DynamoDB** - Amazon का डॉक्यूमेंट-ओरिएंटेड डेटाबेस | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |"
  },
  {
    "row": 1705,
    "rowsha": "qaUQcdPbdrR3ZWAswil875kJnzNZWk69hKNnF9OpT6A=",
    "originContent": "| Data store | **MongoDB** - Document-oriented database | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |",
    "translatedContent": "| डेटा स्टोर | **MongoDB** - डॉक्यूमेंट-ओरिएंटेड डेटाबेस | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |"
  },
  {
    "row": 1706,
    "rowsha": "7mPnQzxpbjV0NUEW8XDi2rGyeDsGsoxhVdvTPh8tS20=",
    "originContent": "| Data store | **Spanner** - Globally-distributed database from Google | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |",
    "translatedContent": "| डेटा स्टोर | **Spanner** - Google का वैश्विक स्तर पर वितरित डेटाबेस | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |"
  },
  {
    "row": 1707,
    "rowsha": "5XHl3BTnVxhA6zftceuIdcJIvqsoDjeQSPbwjAv1OmI=",
    "originContent": "| Data store | **Memcached** - Distributed memory caching system | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |",
    "translatedContent": "| डेटा स्टोर | **Memcached** - वितरित मेमोरी कैशिंग सिस्टम | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |"
  },
  {
    "row": 1708,
    "rowsha": "so7UA0edsS9fachjwa/oV6wjIyUW7sypm0TmT+Fiylw=",
    "originContent": "| Data store | **Redis** - Distributed memory caching system with persistence and value types | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |",
    "translatedContent": "| डेटा स्टोर | **Redis** - स्थायित्व और मूल्य प्रकारों के साथ वितरित मेमोरी कैशिंग सिस्टम | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |"
  },
  {
    "row": 1709,
    "rowsha": "p/ErXrnMGSZC77N6DnBjWAETa1ojTSEipbqwpQgRtH0=",
    "originContent": "| | | |",
    "translatedContent": "| | | |"
  },
  {
    "row": 1710,
    "rowsha": "3oWxuRMPbHKQGsTECtKNryhofOr6iI3UBQLfrVK++00=",
    "originContent": "| File system | **Google File System (GFS)** - Distributed file system | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |",
    "translatedContent": "| फाइल सिस्टम | **Google File System (GFS)** - वितरित फाइल सिस्टम | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |"
  },
  {
    "row": 1711,
    "rowsha": "A7fq9KC4kInUlQQ21YIv0jLmPYr+roXFYuEcv2sW5gU=",
    "originContent": "| File system | **Hadoop File System (HDFS)** - Open source implementation of GFS | [apache.org](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html) |",
    "translatedContent": "| फाइल सिस्टम | **Hadoop File System (HDFS)** - GFS का ओपन सोर्स कार्यान्वयन | [apache.org](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html) |"
  },
  {
    "row": 1712,
    "rowsha": "p/ErXrnMGSZC77N6DnBjWAETa1ojTSEipbqwpQgRtH0=",
    "originContent": "| | | |",
    "translatedContent": "| | | |"
  },
  {
    "row": 1713,
    "rowsha": "u2aPRWE0Ib9VuI4sc6M4gFcrEU/bN/j4mGDu6EaSMj8=",
    "originContent": "| Misc | **Chubby** - Lock service for loosely-coupled distributed systems from Google | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |",
    "translatedContent": "| विविध | **Chubby** - Google द्वारा ढीली-संबद्ध वितरित प्रणालियों के लिए लॉक सेवा | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |"
  },
  {
    "row": 1714,
    "rowsha": "cbcggBPx8qCHeUtqfFOtRxhN+pPFNIGRxdjz02iMZiY=",
    "originContent": "| Misc | **Dapper** - Distributed systems tracing infrastructure | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)",
    "translatedContent": "| विविध | **Dapper** - वितरित प्रणालियों के लिए ट्रेसिंग इन्फ्रास्ट्रक्चर | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)"
  },
  {
    "row": 1715,
    "rowsha": "cCqZB2Hts8Iu7CNT2pKVQI8qB7IC0INbCbTQTyPHiDE=",
    "originContent": "| Misc | **Kafka** - Pub/sub message queue from LinkedIn | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |",
    "translatedContent": "| विविध | **Kafka** - LinkedIn द्वारा पब/सब संदेश कतार | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |"
  },
  {
    "row": 1716,
    "rowsha": "KwS7raoMtjTNKhzqbPaXTnitrTKOi2D6FnNeLsY2X0c=",
    "originContent": "| Misc | **Zookeeper** - Centralized infrastructure and services enabling synchronization | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |",
    "translatedContent": "| विविध | **Zookeeper** - समन्वय के लिए केंद्रीकृत इन्फ्रास्ट्रक्चर और सेवाएँ | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |"
  },
  {
    "row": 1717,
    "rowsha": "dwWcrWXxdp2Vzr7uSHJkm2NAali9XO1T2Mu+aN78kh8=",
    "originContent": "| | Add an architecture | [Contribute](#contributing) |",
    "translatedContent": "| | एक आर्किटेक्चर जोड़ें | [योगदान करें](#contributing) |"
  },
  {
    "row": 1718,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1719,
    "rowsha": "afVdDjUEYMKR1hdy83bZUv3+vQrv4YVEx4BhpWdzehY=",
    "originContent": "### Company architectures",
    "translatedContent": "### कंपनी आर्किटेक्चर"
  },
  {
    "row": 1720,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1721,
    "rowsha": "DC60NfhUoQRLMlpTp0kWWr69V8dGiHY0luvJerq6qAM=",
    "originContent": "| Company | Reference(s) |",
    "translatedContent": "| कंपनी | संदर्भ(संदर्भ) |"
  },
  {
    "row": 1722,
    "rowsha": "QZm6RU1tOug2VxIMK7a9Z07vwN19PNTMhEFx3GclE1s=",
    "originContent": "|---|---|",
    "translatedContent": "|---|---|"
  },
  {
    "row": 1723,
    "rowsha": "hhzenP6hBNCHjVIR/V1z9i5u+6Gz215qDhZ4m/QO2ME=",
    "originContent": "| Amazon | [Amazon architecture](http://highscalability.com/amazon-architecture) |",
    "translatedContent": "| Amazon | [Amazon आर्किटेक्चर](http://highscalability.com/amazon-architecture) |"
  },
  {
    "row": 1724,
    "rowsha": "YTrqqn6zgSTZqU8rMEi6n4+jvU+QOfVmPKXNW2F2+fw=",
    "originContent": "| Cinchcast | [Producing 1,500 hours of audio every day](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |",
    "translatedContent": "| Cinchcast | [हर दिन 1,500 घंटे ऑडियो का निर्माण](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |"
  },
  {
    "row": 1725,
    "rowsha": "pmVmY9IM5FLH1l7XSg05fh38ZP+My/OoiJGEAsbJ2qc=",
    "originContent": "| DataSift | [Realtime datamining At 120,000 tweets per second](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |",
    "translatedContent": "| DataSift | [120,000 ट्वीट प्रति सेकंड पर रीयलटाइम डेटा माइनिंग](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |"
  },
  {
    "row": 1726,
    "rowsha": "G+2ZKjeV2JEB4aNQe152thV5ADAdLRU7Lfe54ElB5HE=",
    "originContent": "| Dropbox | [How we've scaled Dropbox](https://www.youtube.com/watch?v=PE4gwstWhmc) |",
    "translatedContent": "| Dropbox | [हमने Dropbox को कैसे स्केल किया](https://www.youtube.com/watch?v=PE4gwstWhmc) |"
  },
  {
    "row": 1727,
    "rowsha": "uAIZHPjhJZK6LQQ5UI6+M59o6/S1aAKX1WU0AeWah3w=",
    "originContent": "| ESPN | [Operating At 100,000 duh nuh nuhs per second](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |",
    "translatedContent": "| ESPN | [100,000 duh nuh nuhs प्रति सेकंड पर ऑपरेटिंग](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |"
  },
  {
    "row": 1728,
    "rowsha": "SP3mC9R+ji63RBAx2cQqOnjM6sboxLcFrIGSWBYS/6o=",
    "originContent": "| Google | [Google architecture](http://highscalability.com/google-architecture) |",
    "translatedContent": "| Google | [Google आर्किटेक्चर](http://highscalability.com/google-architecture) |"
  },
  {
    "row": 1729,
    "rowsha": "dGy1y5O5qrjQs1u9xA9LeqqHTgVTFbF6lbuIR3EpKzc=",
    "originContent": "| Instagram | [14 million users, terabytes of photos](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[What powers Instagram](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |",
    "translatedContent": "| Instagram | [14 मिलियन उपयोगकर्ता, टेराबाइट्स फोटो](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[Instagram को क्या शक्ति देता है](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |"
  },
  {
    "row": 1730,
    "rowsha": "E7hk2X4F3qX6sCaU9DXv2uit+2B/83/QzWD+BuYUmZ8=",
    "originContent": "| Justin.tv | [Justin.Tv's live video broadcasting architecture](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |",
    "translatedContent": "| Justin.tv | [Justin.tv का लाइव वीडियो प्रसारण आर्किटेक्चर](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |"
  },
  {
    "row": 1731,
    "rowsha": "fhu0F5wWKSUFgZ6Z+3S2C2xjHat9JsGYmvSOHbbETS0=",
    "originContent": "| Facebook | [Scaling memcached at Facebook](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Facebook’s distributed data store for the social graph](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Facebook’s photo storage](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf)<br/>[How Facebook Live Streams To 800,000 Simultaneous Viewers](http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html) |",
    "translatedContent": "| Facebook | [Facebook में Memcached का स्केलिंग](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Facebook का वितरित डेटा स्टोर सोशल ग्राफ के लिए](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Facebook की फोटो स्टोरेज](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf)<br/>[Facebook लाइव स्ट्रीम 800,000 समानांतर दर्शकों को कैसे भेजता है](http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html) |"
  },
  {
    "row": 1732,
    "rowsha": "0bQ7V/Spk+IOIWY21Az3B0IPLSb2XvVRJ4BKX6MPJ1M=",
    "originContent": "| Flickr | [Flickr architecture](http://highscalability.com/flickr-architecture) |",
    "translatedContent": "| Flickr | [Flickr आर्किटेक्चर](http://highscalability.com/flickr-architecture) |"
  },
  {
    "row": 1733,
    "rowsha": "75YrA6Pw4bf7N79fSBayp/x1JDqzYAAOBjmbZMs2awI=",
    "originContent": "| Mailbox | [From 0 to one million users in 6 weeks](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |",
    "translatedContent": "| Mailbox | [6 हफ्तों में 0 से 1 मिलियन उपयोगकर्ताओं तक](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |"
  },
  {
    "row": 1734,
    "rowsha": "IO+MNpPb3VV5H/2Q2HAJjxMqBLRUY9C2Z47mogK3c6E=",
    "originContent": "| Netflix | [A 360 Degree View Of The Entire Netflix Stack](http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html)<br/>[Netflix: What Happens When You Press Play?](http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html) |",
    "translatedContent": "| Netflix | [नेटफ्लिक्स स्टैक का 360 डिग्री दृश्य](http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html)<br/>[Netflix: जब आप प्ले दबाते हैं तब क्या होता है?](http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html) |"
  },
  {
    "row": 1735,
    "rowsha": "Y38/iHOhRdAeAOLjuN7Iqu+R0SyAotO75lftLR6Xky4=",
    "originContent": "| Pinterest | [From 0 To 10s of billions of page views a month](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[18 million visitors, 10x growth, 12 employees](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |",
    "translatedContent": "| Pinterest | [0 से हर महीने 10 अरब पेज व्यू तक](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[18 मिलियन विज़िटर, 10x वृद्धि, 12 कर्मचारी](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |"
  },
  {
    "row": 1736,
    "rowsha": "sdXZchVk+fXHbieeR7YkzNrXOSXQI9pH85SKqNXYb1s=",
    "originContent": "| Playfish | [50 million monthly users and growing](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |",
    "translatedContent": "| Playfish | [50 मिलियन मासिक उपयोगकर्ता और बढ़ रहे हैं](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |"
  },
  {
    "row": 1737,
    "rowsha": "W3/WKAzVRbnjmYzbLKvAMSFwghIAZeqAf18j9sURMjM=",
    "originContent": "| PlentyOfFish | [PlentyOfFish architecture](http://highscalability.com/plentyoffish-architecture) |",
    "translatedContent": "| PlentyOfFish | [PlentyOfFish आर्किटेक्चर](http://highscalability.com/plentyoffish-architecture) |"
  },
  {
    "row": 1738,
    "rowsha": "dEm1aPwBE5fHjXbaHueprpg61DN02tc+kP5vCM0UXE8=",
    "originContent": "| Salesforce | [How they handle 1.3 billion transactions a day](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |",
    "translatedContent": "| Salesforce | [वे रोज़ाना 1.3 अरब ट्रांज़ैक्शन कैसे संभालते हैं](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |"
  },
  {
    "row": 1739,
    "rowsha": "AlMYLMWkR2SckN1bxYHEnGinX0CgwBIBQeGdhnDUXtA=",
    "originContent": "| Stack Overflow | [Stack Overflow architecture](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |",
    "translatedContent": "| Stack Overflow | [Stack Overflow आर्किटेक्चर](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |"
  },
  {
    "row": 1740,
    "rowsha": "sTX4sagugaGlsi7a5Mth9u0Gi0x8NTpvSZC+eo5Rt/Q=",
    "originContent": "| TripAdvisor | [40M visitors, 200M dynamic page views, 30TB data](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |",
    "translatedContent": "| TripAdvisor | [40M विज़िटर, 200M डायनामिक पेज व्यू, 30TB डेटा](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |"
  },
  {
    "row": 1741,
    "rowsha": "MazGU7vk/a3HuntQRFqVjcLtkBM4eUs3vR+7WUYZ8gw=",
    "originContent": "| Tumblr | [15 billion page views a month](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |",
    "translatedContent": "| Tumblr | [हर महीने 15 अरब पेज व्यू](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |"
  },
  {
    "row": 1742,
    "rowsha": "/Ey9Rzzp0JSlMSBmO/ivB8C/+X3YgRSwEDxrVVOZdU4=",
    "originContent": "| Twitter | [Making Twitter 10000 percent faster](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[Storing 250 million tweets a day using MySQL](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150M active users, 300K QPS, a 22 MB/S firehose](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[Timelines at scale](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Big and small data at Twitter](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Operations at Twitter: scaling beyond 100 million users](https://www.youtube.com/watch?v=z8LU0Cj6BOU)<br/>[How Twitter Handles 3,000 Images Per Second](http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html) |",
    "translatedContent": "| Twitter | [Twitter को 10000 प्रतिशत तेज़ बनाना](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[MySQL का उपयोग कर रोज़ाना 250 मिलियन ट्वीट स्टोर करना](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150M सक्रिय उपयोगकर्ता, 300K QPS, 22 MB/S फायरहोज़](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[स्केल पर टाइमलाइन](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Twitter में बड़ा और छोटा डेटा](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Twitter में ऑपरेशन: 100 मिलियन उपयोगकर्ताओं से आगे स्केलिंग](https://www.youtube.com/watch?v=z8LU0Cj6BOU)<br/>[Twitter प्रति सेकंड 3,000 इमेज कैसे संभालता है](http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html) |"
  },
  {
    "row": 1743,
    "rowsha": "MGU6qjE6IcUO6hi+Sa3VC6E1KwfhprKkrfRAShnjNqY=",
    "originContent": "| Uber | [How Uber scales their real-time market platform](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html)<br/>[Lessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories](http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html) |",
    "translatedContent": "| Uber | [Uber अपने रीयलटाइम मार्केट प्लेटफॉर्म को कैसे स्केल करता है](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html)<br/>[Uber को 2000 इंजीनियर्स, 1000 सेवाएँ, और 8000 Git रिपॉजिटरी तक स्केल करने से सीखे गए सबक](http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html) |"
  },
  {
    "row": 1744,
    "rowsha": "tPlCk12VLKqhn+78/8N6L1w7nZ3UgWF8n79JDJydVAU=",
    "originContent": "| WhatsApp | [The WhatsApp architecture Facebook bought for $19 billion](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |",
    "translatedContent": "| WhatsApp | [WhatsApp आर्किटेक्चर जिसे Facebook ने 19 अरब डॉलर में खरीदा](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |"
  },
  {
    "row": 1745,
    "rowsha": "02riQbnlEGZL2gp1kibVbVB3WgIIi+n4vcjqik9Ot0E=",
    "originContent": "| YouTube | [YouTube scalability](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[YouTube architecture](http://highscalability.com/youtube-architecture) |",
    "translatedContent": "| YouTube | [YouTube स्केलेबिलिटी](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[YouTube आर्किटेक्चर](http://highscalability.com/youtube-architecture) |"
  },
  {
    "row": 1746,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1747,
    "rowsha": "+d/bP9Q0vKv18RY6qyCwXgHABScWvkoM+7mqM2uwCqI=",
    "originContent": "### Company engineering blogs",
    "translatedContent": "### कंपनी इंजीनियरिंग ब्लॉग्स"
  },
  {
    "row": 1748,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1749,
    "rowsha": "A6i+yCl04UINCArMDUyZyBKY1mjcYkWJO5BeEgTq75w=",
    "originContent": "> Architectures for companies you are interviewing with.",
    "translatedContent": "> उन कंपनियों के आर्किटेक्चर जिनके लिए आप इंटरव्यू दे रहे हैं।"
  },
  {
    "row": 1750,
    "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
    "originContent": ">",
    "translatedContent": ">"
  },
  {
    "row": 1751,
    "rowsha": "JNvk6ucNFdha+GdQzgmZacn0RVXBCuA0jxHX5ee12Mw=",
    "originContent": "> Questions you encounter might be from the same domain.",
    "translatedContent": "> आपके सामने आने वाले प्रश्न उसी डोमेन से हो सकते हैं।"
  },
  {
    "row": 1752,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1753,
    "rowsha": "UHV9opLPfZCgVBfubQ9W/lgvvUW+fVYwTl/VrCl3hUU=",
    "originContent": "* [Airbnb Engineering](http://nerds.airbnb.com/)",
    "translatedContent": "* [एयरबीएनबी इंजीनियरिंग](http://nerds.airbnb.com/)"
  },
  {
    "row": 1754,
    "rowsha": "m/k7rM7RVLOxuzRlYM+QMMHiW8xMJuidIO5ueZ0zq3s=",
    "originContent": "* [Atlassian Developers](https://developer.atlassian.com/blog/)",
    "translatedContent": "* [एटलसियन डेवलपर्स](https://developer.atlassian.com/blog/)"
  },
  {
    "row": 1755,
    "rowsha": "PJRZgYAQp+tjdGtwVHXbCcdItRIqSzZl7b/9Pn0s4Q0=",
    "originContent": "* [AWS Blog](https://aws.amazon.com/blogs/aws/)",
    "translatedContent": "* [एडब्ल्यूएस ब्लॉग](https://aws.amazon.com/blogs/aws/)"
  },
  {
    "row": 1756,
    "rowsha": "t2jO82JdhA4QFuHZxe+OfiEBImC7vYjc5HS0wsXuTag=",
    "originContent": "* [Bitly Engineering Blog](http://word.bitly.com/)",
    "translatedContent": "* [बिटली इंजीनियरिंग ब्लॉग](http://word.bitly.com/)"
  },
  {
    "row": 1757,
    "rowsha": "kE1MwEVU89ovxRJBrbnjDfIjwTgvVHy+6HYksyil7HI=",
    "originContent": "* [Box Blogs](https://blog.box.com/blog/category/engineering)",
    "translatedContent": "* [बॉक्स ब्लॉग्स](https://blog.box.com/blog/category/engineering)"
  },
  {
    "row": 1758,
    "rowsha": "OGQ2cvxicM3vPbzOdPcT3MLeQk/ZBVO2MM1AHtjQUeI=",
    "originContent": "* [Cloudera Developer Blog](http://blog.cloudera.com/)",
    "translatedContent": "* [क्लाउडेरा डेवलपर ब्लॉग](http://blog.cloudera.com/)"
  },
  {
    "row": 1759,
    "rowsha": "Q/9bsAU0SigRCHts5JTnQEDOkLk/4HrdCSYztpL40x4=",
    "originContent": "* [Dropbox Tech Blog](https://tech.dropbox.com/)",
    "translatedContent": "* [ड्रॉपबॉक्स टेक ब्लॉग](https://tech.dropbox.com/)"
  },
  {
    "row": 1760,
    "rowsha": "j2P1HftasHGpiUioRZovnI9iiN6ErtvyClLXPq5LHZ8=",
    "originContent": "* [Engineering at Quora](https://www.quora.com/q/quoraengineering)",
    "translatedContent": "* [क्वोरा में इंजीनियरिंग](https://www.quora.com/q/quoraengineering)"
  },
  {
    "row": 1761,
    "rowsha": "6c5JEVeT/WR0AoANf4VvFjkHHji/XDb0pL6ZhRtGdro=",
    "originContent": "* [Ebay Tech Blog](http://www.ebaytechblog.com/)",
    "translatedContent": "* [ईबे टेक ब्लॉग](http://www.ebaytechblog.com/)"
  },
  {
    "row": 1762,
    "rowsha": "nzOMGeuct28CpUCr0qhoijft8HQTyAXueUVTnyyDFzU=",
    "originContent": "* [Evernote Tech Blog](https://blog.evernote.com/tech/)",
    "translatedContent": "* [एवरनोट टेक ब्लॉग](https://blog.evernote.com/tech/)"
  },
  {
    "row": 1763,
    "rowsha": "awh9bS/FB3RCcZPbKa8uXkXeGmVBkqS5Huo2gxyyz6M=",
    "originContent": "* [Etsy Code as Craft](http://codeascraft.com/)",
    "translatedContent": "* [एटसी कोड ऐज़ क्राफ्ट](http://codeascraft.com/)"
  },
  {
    "row": 1764,
    "rowsha": "GYerm7k/P1bUlVNn2c6Vk1dQleF9pUB6RwXxwpPLfXk=",
    "originContent": "* [Facebook Engineering](https://www.facebook.com/Engineering)",
    "translatedContent": "* [फेसबुक इंजीनियरिंग](https://www.facebook.com/Engineering)"
  },
  {
    "row": 1765,
    "rowsha": "bHmulJIVA7eSXLNyXEzC1WNyLVdAr/ihcJ+fmr5CpmI=",
    "originContent": "* [Flickr Code](http://code.flickr.net/)",
    "translatedContent": "* [फ्लिकर कोड](http://code.flickr.net/)"
  },
  {
    "row": 1766,
    "rowsha": "HyvBL6IF62UuAW/Fda7VT198VYsevdwqAYRaAL/cu6E=",
    "originContent": "* [Foursquare Engineering Blog](http://engineering.foursquare.com/)",
    "translatedContent": "* [फोरस्क्वेयर इंजीनियरिंग ब्लॉग](http://engineering.foursquare.com/)"
  },
  {
    "row": 1767,
    "rowsha": "6tsBAXNdj5peyhLqsL9yPkh5kcTSp9OFkSj+asqp24s=",
    "originContent": "* [GitHub Engineering Blog](https://github.blog/category/engineering)",
    "translatedContent": "* [गिटहब इंजीनियरिंग ब्लॉग](https://github.blog/category/engineering)"
  },
  {
    "row": 1768,
    "rowsha": "1RNafHm1h6TOW0xYbQ8av8+ZSzy84S2ru4jfP9Crvko=",
    "originContent": "* [Google Research Blog](http://googleresearch.blogspot.com/)",
    "translatedContent": "* [गूगल रिसर्च ब्लॉग](http://googleresearch.blogspot.com/)"
  },
  {
    "row": 1769,
    "rowsha": "iTaM3R7fuGxZufQxtW0Rt5rns47rqtgDoxJ70JdKFQE=",
    "originContent": "* [Groupon Engineering Blog](https://engineering.groupon.com/)",
    "translatedContent": "* [ग्रुपऑन इंजीनियरिंग ब्लॉग](https://engineering.groupon.com/)"
  },
  {
    "row": 1770,
    "rowsha": "mkXS/TYVW8q2PX/zNgvIicOMnTk+kuYjwIgNvEwLU44=",
    "originContent": "* [Heroku Engineering Blog](https://engineering.heroku.com/)",
    "translatedContent": "* [हेरोकू इंजीनियरिंग ब्लॉग](https://engineering.heroku.com/)"
  },
  {
    "row": 1771,
    "rowsha": "1eyOJPxW2akxU57S7ZsqziDyoLBGmcdrqMp//DK5JdU=",
    "originContent": "* [Hubspot Engineering Blog](http://product.hubspot.com/blog/topic/engineering)",
    "translatedContent": "* [हबस्पॉट इंजीनियरिंग ब्लॉग](http://product.hubspot.com/blog/topic/engineering)"
  },
  {
    "row": 1772,
    "rowsha": "wwR5ere/In8pGpzMdPm6wjCULk9GDLfa2ucjiM7hho4=",
    "originContent": "* [High Scalability](http://highscalability.com/)",
    "translatedContent": "* [हाई स्केलेबिलिटी](http://highscalability.com/)"
  },
  {
    "row": 1773,
    "rowsha": "8lLYkS8gDk7u6QLR7O/8I1GCPxWHHF0l1E9cJO8hAZ8=",
    "originContent": "* [Instagram Engineering](http://instagram-engineering.tumblr.com/)",
    "translatedContent": "* [इंस्टाग्राम इंजीनियरिंग](http://instagram-engineering.tumblr.com/)"
  },
  {
    "row": 1774,
    "rowsha": "u+76hGKYmoLQ5HbdTMEpXPv0TjTErDAiKQIK1RBLIx8=",
    "originContent": "* [Intel Software Blog](https://software.intel.com/en-us/blogs/)",
    "translatedContent": "* [इंटेल सॉफ्टवेयर ब्लॉग](https://software.intel.com/en-us/blogs/)"
  },
  {
    "row": 1775,
    "rowsha": "cXNweXN9cAr4uUJ7wckQ4KgAiBWom9cIJj120dTlXr4=",
    "originContent": "* [Jane Street Tech Blog](https://blogs.janestreet.com/category/ocaml/)",
    "translatedContent": "* [जेन स्ट्रीट टेक ब्लॉग](https://blogs.janestreet.com/category/ocaml/)"
  },
  {
    "row": 1776,
    "rowsha": "Z2BFDjGLdj5/0/yqRk6Goksl8BSuIz9EbUXUD+e/QRM=",
    "originContent": "* [LinkedIn Engineering](http://engineering.linkedin.com/blog)",
    "translatedContent": "* [लिंक्डइन इंजीनियरिंग](http://engineering.linkedin.com/blog)"
  },
  {
    "row": 1777,
    "rowsha": "KErL/DkfP+IkrFUOEG/FSINw+vaIDZYGSV6cVsQ7jrs=",
    "originContent": "* [Microsoft Engineering](https://engineering.microsoft.com/)",
    "translatedContent": "* [माइक्रोसॉफ्ट इंजीनियरिंग](https://engineering.microsoft.com/)"
  },
  {
    "row": 1778,
    "rowsha": "C1KvRLDZbCnN83cPk+91CENnjCmMFXtMrVddf2xlgEw=",
    "originContent": "* [Microsoft Python Engineering](https://blogs.msdn.microsoft.com/pythonengineering/)",
    "translatedContent": "* [माइक्रोसॉफ्ट पायथन इंजीनियरिंग](https://blogs.msdn.microsoft.com/pythonengineering/)"
  },
  {
    "row": 1779,
    "rowsha": "gUfEW2XB6zbofz3d8ULsll5KBGAc/YXNkprWnnHfKMk=",
    "originContent": "* [Netflix Tech Blog](http://techblog.netflix.com/)",
    "translatedContent": "* [नेटफ्लिक्स टेक ब्लॉग](http://techblog.netflix.com/)"
  },
  {
    "row": 1780,
    "rowsha": "ez8RU0/0SkWeto/n5cd5QjhzYTE453CZE5s8z0VvUFM=",
    "originContent": "* [Paypal Developer Blog](https://medium.com/paypal-engineering)",
    "translatedContent": "* [पेपल डेवलपर ब्लॉग](https://medium.com/paypal-engineering)"
  },
  {
    "row": 1781,
    "rowsha": "p1/3zLsBrnU0+Nm3iO0sDgJjp6PT282ZnQ8cxSW7Ncw=",
    "originContent": "* [Pinterest Engineering Blog](https://medium.com/@Pinterest_Engineering)",
    "translatedContent": "* [पिनटेरेस्ट इंजीनियरिंग ब्लॉग](https://medium.com/@Pinterest_Engineering)"
  },
  {
    "row": 1782,
    "rowsha": "/kFefDUbOxrsKQVJZBtPS+J8xtgIOcCm7qc7CuBZ/Rg=",
    "originContent": "* [Reddit Blog](http://www.redditblog.com/)",
    "translatedContent": "* [रेडिट ब्लॉग](http://www.redditblog.com/)"
  },
  {
    "row": 1783,
    "rowsha": "NNFiq6Nk+TJk7wrE5CD9nYuSTYxHh+17gAhDCGiedME=",
    "originContent": "* [Salesforce Engineering Blog](https://developer.salesforce.com/blogs/engineering/)",
    "translatedContent": "* [सेल्सफोर्स इंजीनियरिंग ब्लॉग](https://developer.salesforce.com/blogs/engineering/)"
  },
  {
    "row": 1784,
    "rowsha": "Ramdc++8GVEIlcL+ZE/BKkkMfOuU11fXg3BCd8CDtpw=",
    "originContent": "* [Slack Engineering Blog](https://slack.engineering/)",
    "translatedContent": "* [स्लैक इंजीनियरिंग ब्लॉग](https://slack.engineering/)"
  },
  {
    "row": 1785,
    "rowsha": "tNzZ5+AcxfjbUCc4QDVq8BeFyaPSnbFBw/BbGurmofA=",
    "originContent": "* [Spotify Labs](https://labs.spotify.com/)",
    "translatedContent": "* [स्पॉटिफाई लैब्स](https://labs.spotify.com/)"
  },
  {
    "row": 1786,
    "rowsha": "jr0V+3K56hlHl8kAVSQXGMvpfX6MuwpZG5fJUvrNoIQ=",
    "originContent": "* [Stripe Engineering Blog](https://stripe.com/blog/engineering)",
    "translatedContent": "* [स्ट्राइप इंजीनियरिंग ब्लॉग](https://stripe.com/blog/engineering)"
  },
  {
    "row": 1787,
    "rowsha": "9d8FoS6iJakvwiyj7Um02JWjq3ky4jvljSxJwe3zNzA=",
    "originContent": "* [Twilio Engineering Blog](http://www.twilio.com/engineering)",
    "translatedContent": "* [Twilio इंजीनियरिंग ब्लॉग](http://www.twilio.com/engineering)"
  },
  {
    "row": 1788,
    "rowsha": "sNzGmnHwtxr/Q220Ggut7OvB04pml4BQ47j14tzRol0=",
    "originContent": "* [Twitter Engineering](https://blog.twitter.com/engineering/)",
    "translatedContent": "* [Twitter इंजीनियरिंग](https://blog.twitter.com/engineering/)"
  },
  {
    "row": 1789,
    "rowsha": "Kq7cxWenNWnImFOvBglnOeHQsNtJV2dGVcGg3APCIks=",
    "originContent": "* [Uber Engineering Blog](http://eng.uber.com/)",
    "translatedContent": "* [Uber इंजीनियरिंग ब्लॉग](http://eng.uber.com/)"
  },
  {
    "row": 1790,
    "rowsha": "B5/Pqakkmh27cv7QeU0IpHdBYc0FT6XV9+cXBs+RNWs=",
    "originContent": "* [Yahoo Engineering Blog](http://yahooeng.tumblr.com/)",
    "translatedContent": "* [Yahoo इंजीनियरिंग ब्लॉग](http://yahooeng.tumblr.com/)"
  },
  {
    "row": 1791,
    "rowsha": "4JOHDVmUaIWjipmhEOvcLQ3lQ5nvs931vBU95hjgt8s=",
    "originContent": "* [Yelp Engineering Blog](http://engineeringblog.yelp.com/)",
    "translatedContent": "* [Yelp इंजीनियरिंग ब्लॉग](http://engineeringblog.yelp.com/)"
  },
  {
    "row": 1792,
    "rowsha": "T1962enxKZUq0pnv8Ya/Wt9ssKDMPk2oZ8eKrNC3Rx4=",
    "originContent": "* [Zynga Engineering Blog](https://www.zynga.com/blogs/engineering)",
    "translatedContent": "* [Zynga इंजीनियरिंग ब्लॉग](https://www.zynga.com/blogs/engineering)"
  },
  {
    "row": 1793,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1794,
    "rowsha": "yAcCmKF4VrpEVdPP7QGvwQrQvx5nYqkLfEVqvhED8vU=",
    "originContent": "#### Source(s) and further reading",
    "translatedContent": "#### स्रोत(स) और आगे की पढ़ाई"
  },
  {
    "row": 1795,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1796,
    "rowsha": "pa7M4b/LuEKtuN5IyhXdlTp4Gh71l9Ze7y2UNbxqsx4=",
    "originContent": "Looking to add a blog?  To avoid duplicating work, consider adding your company blog to the following repo:",
    "translatedContent": "ब्लॉग जोड़ना चाहते हैं?  काम को दोहराने से बचने के लिए, अपने कंपनी ब्लॉग को निम्नलिखित रिपो में जोड़ने पर विचार करें:"
  },
  {
    "row": 1797,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1798,
    "rowsha": "+FnBxBwnup4/zgg2YLCOsM9mf8JZVRVQnxudS2OIs3E=",
    "originContent": "* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)",
    "translatedContent": "* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)"
  },
  {
    "row": 1799,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1800,
    "rowsha": "t4tgwc7iQdiScrNNK5RufDiX0TR7zYkJijZRRf+7Clw=",
    "originContent": "## Under development",
    "translatedContent": "## विकासाधीन"
  },
  {
    "row": 1801,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1802,
    "rowsha": "wtfJgdYtoDEWhD+DNsA9eZKRmA1VEVSsc2jEUQPaBtE=",
    "originContent": "Interested in adding a section or helping complete one in-progress?  [Contribute](#contributing)!",
    "translatedContent": "कोई अनुभाग जोड़ने या किसी प्रगति पर काम कर रहे अनुभाग को पूरा करने में रुचि है?  [योगदान दें](#contributing)!"
  },
  {
    "row": 1803,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1804,
    "rowsha": "pqXmYpaIcX19vhzkd+FjJdMydXVVFY4A79+VXXKf3xw=",
    "originContent": "* Distributed computing with MapReduce",
    "translatedContent": "* मैप-रिड्यूस के साथ वितरित कंप्यूटिंग"
  },
  {
    "row": 1805,
    "rowsha": "ZN/KzBCXwLH+ZbEPg0JzWfbkv6v0/kwMeEt+33taE0U=",
    "originContent": "* Consistent hashing",
    "translatedContent": "* कंसिस्टेंट हैशिंग"
  },
  {
    "row": 1806,
    "rowsha": "mPIuzyd7cHCkpiQwHtxQvfEBhGD4TWn/NeOeFJ6PGzQ=",
    "originContent": "* Scatter gather",
    "translatedContent": "* स्कैटर गैदर"
  },
  {
    "row": 1807,
    "rowsha": "1jbifZDheRab+sWwbsBpmbL8J80A6hHoEBa5cO7M3HU=",
    "originContent": "* [Contribute](#contributing)",
    "translatedContent": "* [योगदान दें](#contributing)"
  },
  {
    "row": 1808,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1809,
    "rowsha": "OtBYwndH58Q+LfPUO9DkPBo3A7SzyLFdEA2wIljgYwk=",
    "originContent": "## Credits",
    "translatedContent": "## श्रेय"
  },
  {
    "row": 1810,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1811,
    "rowsha": "c58XSdVMXQxZAM2ql4KvCUK63wftHWZTLmqp8TdRcE8=",
    "originContent": "Credits and sources are provided throughout this repo.",
    "translatedContent": "इस रिपो में पूरे स्रोत और श्रेय प्रदान किए गए हैं।"
  },
  {
    "row": 1812,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1813,
    "rowsha": "17xrnRFrxtbV2/VrEOM7MvNVU+4x1tdBoWQSX8P3fpo=",
    "originContent": "Special thanks to:",
    "translatedContent": "विशेष धन्यवाद:"
  },
  {
    "row": 1814,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1815,
    "rowsha": "pKl6P8KEQz4QNBAh9t4oR16uTBfQroZJNNwe+s+yLc8=",
    "originContent": "* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)",
    "translatedContent": "* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)"
  },
  {
    "row": 1816,
    "rowsha": "7Hss598Sud5Bmvz1qJITtUR0Fhv509/XQ5L5lpMYkjM=",
    "originContent": "* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)",
    "translatedContent": "* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)"
  },
  {
    "row": 1817,
    "rowsha": "yh+jRLedQHNmaPf7VIeLV1wTtoSg7Yy303JV2Br/zU0=",
    "originContent": "* [High scalability](http://highscalability.com/)",
    "translatedContent": "* [High scalability](http://highscalability.com/)"
  },
  {
    "row": 1818,
    "rowsha": "lBRNLVtnyx2U9Y8S26esIEj6x3vknEXJAES+wiVadtE=",
    "originContent": "* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)",
    "translatedContent": "* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)"
  },
  {
    "row": 1819,
    "rowsha": "2luTAoc7P89ojRQuuqyVSd3FyTDw48WmC8GM9qvxmaU=",
    "originContent": "* [shashank88/system_design](https://github.com/shashank88/system_design)",
    "translatedContent": "* [shashank88/system_design](https://github.com/shashank88/system_design)"
  },
  {
    "row": 1820,
    "rowsha": "K4ksr7U4gNQeNxJQkcJ7xmu10zeY3o9NTHw8Z3MTPbg=",
    "originContent": "* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)",
    "translatedContent": "* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)"
  },
  {
    "row": 1821,
    "rowsha": "1HD3BrjiKliRO0pgaGFzE0jUAIFm2QFHDM+5ul/hsUY=",
    "originContent": "* [System design cheat sheet](https://gist.github.com/vasanthk/485d1c25737e8e72759f)",
    "translatedContent": "* [System design cheat sheet](https://gist.github.com/vasanthk/485d1c25737e8e72759f)"
  },
  {
    "row": 1822,
    "rowsha": "CpmLqSDpSe2fYMM40797BCoW7HkGCDhNfryYvgXUmsE=",
    "originContent": "* [A distributed systems reading list](http://dancres.github.io/Pages/)",
    "translatedContent": "* [A distributed systems reading list](http://dancres.github.io/Pages/)"
  },
  {
    "row": 1823,
    "rowsha": "oVmANhd4jFgULLGXR4wRUoDY8ukoo3OHU5c79dZ6tFU=",
    "originContent": "* [Cracking the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)",
    "translatedContent": "* [Cracking the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)"
  },
  {
    "row": 1824,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1825,
    "rowsha": "MIDKXf43yHmw05OTx26kHLZf4/APjvzy5C0k0OJV+/o=",
    "originContent": "## Contact info",
    "translatedContent": "## संपर्क जानकारी"
  },
  {
    "row": 1826,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1827,
    "rowsha": "KIFlNpocCUk68IRsK1WzPRwq3G4wKqryvIGOrjVLshM=",
    "originContent": "Feel free to contact me to discuss any issues, questions, or comments.",
    "translatedContent": "कृपया किसी भी समस्या, प्रश्न या टिप्पणी पर चर्चा करने के लिए मुझसे संपर्क करने में संकोच न करें।"
  },
  {
    "row": 1828,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1829,
    "rowsha": "TQe2yubEtO0DQFi7wAUeaFm4xXwdbNpHKocxgOG0VLQ=",
    "originContent": "My contact info can be found on my [GitHub page](https://github.com/donnemartin).",
    "translatedContent": "मेरी संपर्क जानकारी मेरे [GitHub पृष्ठ](https://github.com/donnemartin) पर मिल सकती है।"
  },
  {
    "row": 1830,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1831,
    "rowsha": "bFSaVtsB4CHySNjaeCiaMZfT24b+DTbTM4HQ38cR6Lw=",
    "originContent": "## License",
    "translatedContent": "## लाइसेंस"
  },
  {
    "row": 1832,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1833,
    "rowsha": "SBAKe7Nw6j0bI6GZ5M6BwWFUXXdUasWMKwS4gRwKvSo=",
    "originContent": "*I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).*",
    "translatedContent": "*मैं आपको इस रिपॉजिटरी में कोड और संसाधन एक ओपन सोर्स लाइसेंस के तहत प्रदान कर रहा हूँ। क्योंकि यह मेरी व्यक्तिगत रिपॉजिटरी है, आपको मेरे कोड और संसाधनों का लाइसेंस मुझसे मिलता है, न कि मेरे नियोक्ता (Facebook) से।*"
  },
  {
    "row": 1834,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1835,
    "rowsha": "pGO5RldFVlPTjaQxxap5djK7sEP3yb5ugIHRNoYfth8=",
    "originContent": "    Copyright 2017 Donne Martin",
    "translatedContent": "    कॉपीराइट 2017 डॉन मार्टिन"
  },
  {
    "row": 1836,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1837,
    "rowsha": "AyxdBnPDCPgTUzxBLwYO1XkDP8BtkFdJ8HJMPEPfCKg=",
    "originContent": "    Creative Commons Attribution 4.0 International License (CC BY 4.0)",
    "translatedContent": "    क्रिएटिव कॉमन्स एट्रिब्यूशन 4.0 इंटरनेशनल लाइसेंस (CC BY 4.0)"
  },
  {
    "row": 1838,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 1839,
    "rowsha": "1RRg87FdQzsRvSePc+OSyFT0bl6EF/4Nmt5rbP9DJWU=",
    "originContent": "    http://creativecommons.org/licenses/by/4.0/",
    "translatedContent": "    http://creativecommons.org/licenses/by/4.0/"
  },
  {
    "row": 1840,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  }
]