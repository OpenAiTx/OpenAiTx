[
  {
    "Id": 1,
    "Content": "*[English](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README.md) ∙ [日本語](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-ja.md) ∙ [简体中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-Hans.md) ∙ [繁體中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-TW.md) | [العَرَبِيَّة‎](https://github.com/donnemartin/system-design-primer/issues/170) ∙ [বাংলা](https://github.com/donnemartin/system-design-primer/issues/220) ∙ [Português do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) ∙ [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) ∙ [ελληνικά](https://github.com/donnemartin/system-design-primer/issues/130) ∙ [עברית](https://github.com/donnemartin/system-design-primer/issues/272) ∙ [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) ∙ [한국어](https://github.com/donnemartin/system-design-primer/issues/102) ∙ [فارسی](https://github.com/donnemartin/system-design-primer/issues/110) ∙ [Polski](https://github.com/donnemartin/system-design-primer/issues/68) ∙ [русский язык](https://github.com/donnemartin/system-design-primer/issues/87) ∙ [Español](https://github.com/donnemartin/system-design-primer/issues/136) ∙ [ภาษาไทย](https://github.com/donnemartin/system-design-primer/issues/187) ∙ [Türkçe](https://github.com/donnemartin/system-design-primer/issues/39) ∙ [tiếng Việt](https://github.com/donnemartin/system-design-primer/issues/127) ∙ [Français](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*",
    "ContentSha": "NV5If+n4caPL9367nN6NPHEHX2NVMyxh97QjgslLVk8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "*[English](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README.md) ∙ [日本語](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-ja.md) ∙ [简体中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-Hans.md) ∙ [繁體中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-TW.md) | [العَرَبِيَّة‎](https://github.com/donnemartin/system-design-primer/issues/170) ∙ [বাংলা](https://github.com/donnemartin/system-design-primer/issues/220) ∙ [Português do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) ∙ [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) ∙ [ελληνικά](https://github.com/donnemartin/system-design-primer/issues/130) ∙ [עברית](https://github.com/donnemartin/system-design-primer/issues/272) ∙ [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) ∙ [한국어](https://github.com/donnemartin/system-design-primer/issues/102) ∙ [فارسی](https://github.com/donnemartin/system-design-primer/issues/110) ∙ [Polski](https://github.com/donnemartin/system-design-primer/issues/68) ∙ [русский язык](https://github.com/donnemartin/system-design-primer/issues/87) ∙ [Español](https://github.com/donnemartin/system-design-primer/issues/136) ∙ [ภาษาไทย](https://github.com/donnemartin/system-design-primer/issues/187) ∙ [Türkçe](https://github.com/donnemartin/system-design-primer/issues/39) ∙ [tiếng Việt](https://github.com/donnemartin/system-design-primer/issues/127) ∙ [Français](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "NV5If+n4caPL9367nN6NPHEHX2NVMyxh97QjgslLVk8=",
        "originContent": "*[English](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README.md) ∙ [日本語](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-ja.md) ∙ [简体中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-Hans.md) ∙ [繁體中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-TW.md) | [العَرَبِيَّة‎](https://github.com/donnemartin/system-design-primer/issues/170) ∙ [বাংলা](https://github.com/donnemartin/system-design-primer/issues/220) ∙ [Português do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) ∙ [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) ∙ [ελληνικά](https://github.com/donnemartin/system-design-primer/issues/130) ∙ [עברית](https://github.com/donnemartin/system-design-primer/issues/272) ∙ [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) ∙ [한국어](https://github.com/donnemartin/system-design-primer/issues/102) ∙ [فارسی](https://github.com/donnemartin/system-design-primer/issues/110) ∙ [Polski](https://github.com/donnemartin/system-design-primer/issues/68) ∙ [русский язык](https://github.com/donnemartin/system-design-primer/issues/87) ∙ [Español](https://github.com/donnemartin/system-design-primer/issues/136) ∙ [ภาษาไทย](https://github.com/donnemartin/system-design-primer/issues/187) ∙ [Türkçe](https://github.com/donnemartin/system-design-primer/issues/39) ∙ [tiếng Việt](https://github.com/donnemartin/system-design-primer/issues/127) ∙ [Français](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*",
        "translatedContent": "*[English](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README.md) ∙ [日本語](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-ja.md) ∙ [简体中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-Hans.md) ∙ [繁體中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-TW.md) | [العَرَبِيَّة‎](https://github.com/donnemartin/system-design-primer/issues/170) ∙ [বাংলা](https://github.com/donnemartin/system-design-primer/issues/220) ∙ [Português do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) ∙ [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) ∙ [ελληνικά](https://github.com/donnemartin/system-design-primer/issues/130) ∙ [עברית](https://github.com/donnemartin/system-design-primer/issues/272) ∙ [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) ∙ [한국어](https://github.com/donnemartin/system-design-primer/issues/102) ∙ [فارسی](https://github.com/donnemartin/system-design-primer/issues/110) ∙ [Polski](https://github.com/donnemartin/system-design-primer/issues/68) ∙ [русский язык](https://github.com/donnemartin/system-design-primer/issues/87) ∙ [Español](https://github.com/donnemartin/system-design-primer/issues/136) ∙ [ภาษาไทย](https://github.com/donnemartin/system-design-primer/issues/187) ∙ [Türkçe](https://github.com/donnemartin/system-design-primer/issues/39) ∙ [tiếng Việt](https://github.com/donnemartin/system-design-primer/issues/127) ∙ [Français](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "\n**Help [translate](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/TRANSLATIONS.md) this guide!**\n\n# The System Design Primer\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png\">\n  <br/>\n</p>\n\n## Motivation\n\n> Learn how to design large-scale systems.\n>\n> Prep for the system design interview.\n\n### Learn how to design large-scale systems\n\nLearning how to design scalable systems will help you become a better engineer.\n\nSystem design is a broad topic.  There is a **vast amount of resources scattered throughout the web** on system design principles.\n\nThis repo is an **organized collection** of resources to help you learn how to build systems at scale.\n\n### Learn from the open source community\n\nThis is a continually updated, open source project.\n\n[Contributions](#contributing) are welcome!\n\n### Prep for the system design interview\n\nIn addition to coding interviews, system design is a **required component** of the **technical interview process** at many tech companies.\n\n**Practice common system design interview questions** and **compare** your results with **sample solutions**: discussions, code, and diagrams.\n\nAdditional topics for interview prep:\n\n* [Study guide](#study-guide)\n* [How to approach a system design interview question](#how-to-approach-a-system-design-interview-question)",
    "ContentSha": "AbJTT6alKgUjtCBRmG+Q5nAyd3D1OmTONWi5hXEC4sI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**Bu rehberi [çevirin](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/TRANSLATIONS.md)!**\n\n# Sistem Tasarımı Primer\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png\">\n  <br/>\n</p>\n\n## Motivasyon\n\n> Büyük ölçekli sistemlerin nasıl tasarlanacağını öğrenin.\n>\n> Sistem tasarımı mülakatına hazırlanın.\n\n### Büyük ölçekli sistemlerin nasıl tasarlanacağını öğrenin\n\nÖlçeklenebilir sistemlerin nasıl tasarlanacağını öğrenmek daha iyi bir mühendis olmanıza yardımcı olur.\n\nSistem tasarımı geniş bir konudur.  Web üzerinde **sistem tasarımı prensipleriyle ilgili çok fazla dağınık kaynak** bulunmaktadır.\n\nBu repo, ölçekli sistemler inşa etmeyi öğrenmenize yardımcı olacak **organize bir kaynak koleksiyonudur**.\n\n### Açık kaynak topluluğundan öğrenin\n\nBu sürekli güncellenen, açık kaynaklı bir projedir.\n\n[Katkılar](#contributing) memnuniyetle karşılanır!\n\n### Sistem tasarımı mülakatına hazırlanın\n\nKodlama mülakatlarına ek olarak, sistem tasarımı birçok teknoloji şirketinde **teknik mülakat sürecinin zorunlu bir bileşenidir**.\n\n**Yaygın sistem tasarımı mülakat sorularını çözerek** ve **örnek çözümlerle**: tartışmalar, kod ve diyagramlarla **karşılaştırarak** pratik yapın.\n\nMülakat hazırlığı için ek başlıklar:\n\n* [Çalışma rehberi](#study-guide)\n* [Bir sistem tasarımı mülakat sorusuna nasıl yaklaşılır](#how-to-approach-a-system-design-interview-question)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "OJMxkU+m/5fT0FnnYIq6z/lk5hTUjf/v0nWk2r8vD+8=",
        "originContent": "**Help [translate](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/TRANSLATIONS.md) this guide!**",
        "translatedContent": "**Bu rehberi [çevirin](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/TRANSLATIONS.md)!**"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "RmL3BQqAshnV9VkVoMoDYoTy2qWwOTw2UmULe+/8x8Y=",
        "originContent": "# The System Design Primer",
        "translatedContent": "# Sistem Tasarımı Primer"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 7,
        "rowsha": "FPF5eTlg54aCMqTVvser3Pca0/aXnS3JFpQbR6BsbC8=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png\">"
      },
      {
        "row": 8,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 9,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "XkjmO8GZw+NPlqtsKIz94hXoCCSSximfmFKrLHYsZ2I=",
        "originContent": "## Motivation",
        "translatedContent": "## Motivasyon"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "2GYmP6NIECPJvyW0n7BItMi31jLUPuKlslDWan9HQlE=",
        "originContent": "> Learn how to design large-scale systems.",
        "translatedContent": "> Büyük ölçekli sistemlerin nasıl tasarlanacağını öğrenin."
      },
      {
        "row": 14,
        "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
        "originContent": ">",
        "translatedContent": ">"
      },
      {
        "row": 15,
        "rowsha": "lOl4OhOLgOSefbhaM1VSu1jtsTlIm2iCxniUZWtnyGs=",
        "originContent": "> Prep for the system design interview.",
        "translatedContent": "> Sistem tasarımı mülakatına hazırlanın."
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "vHXrMcDBcG7o5YyZNsje/JbHGk+EjPhpbWV8Gzly7CA=",
        "originContent": "### Learn how to design large-scale systems",
        "translatedContent": "### Büyük ölçekli sistemlerin nasıl tasarlanacağını öğrenin"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "PWbylZXLwlQcEV2M9rtMk6xA3iKlyMhvOfXqZvhx/O4=",
        "originContent": "Learning how to design scalable systems will help you become a better engineer.",
        "translatedContent": "Ölçeklenebilir sistemlerin nasıl tasarlanacağını öğrenmek daha iyi bir mühendis olmanıza yardımcı olur."
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "IKYU9P8xET+s9UmMBuxQNxd3wXq0snCFQfvIPKob15U=",
        "originContent": "System design is a broad topic.  There is a **vast amount of resources scattered throughout the web** on system design principles.",
        "translatedContent": "Sistem tasarımı geniş bir konudur.  Web üzerinde **sistem tasarımı prensipleriyle ilgili çok fazla dağınık kaynak** bulunmaktadır."
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "pgxH1xp3gAK9+xsJypLHdXiYDaemv+fKPR26cm9Im7k=",
        "originContent": "This repo is an **organized collection** of resources to help you learn how to build systems at scale.",
        "translatedContent": "Bu repo, ölçekli sistemler inşa etmeyi öğrenmenize yardımcı olacak **organize bir kaynak koleksiyonudur**."
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "MMP95zm3a71oK2zP47EqMxb2J/GJcG879fLKN8a6Oi4=",
        "originContent": "### Learn from the open source community",
        "translatedContent": "### Açık kaynak topluluğundan öğrenin"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "640Z4MLeOAsYzLjTMZYIOskGISTh4Uq3YbyDvTJMGUE=",
        "originContent": "This is a continually updated, open source project.",
        "translatedContent": "Bu sürekli güncellenen, açık kaynaklı bir projedir."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "6WBZYR+VSGC3aknGU1MJjEeOgM48ZjhtyUu7IvQ4lm8=",
        "originContent": "[Contributions](#contributing) are welcome!",
        "translatedContent": "[Katkılar](#contributing) memnuniyetle karşılanır!"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "Fsw2Splnb+cd2/xdxz/OTb37zXBJxw7zbQcx42rk33o=",
        "originContent": "### Prep for the system design interview",
        "translatedContent": "### Sistem tasarımı mülakatına hazırlanın"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "eo9ctz34cQhO+4yDhHKCh9K5bd4Pbc44n7hhTt0VhMQ=",
        "originContent": "In addition to coding interviews, system design is a **required component** of the **technical interview process** at many tech companies.",
        "translatedContent": "Kodlama mülakatlarına ek olarak, sistem tasarımı birçok teknoloji şirketinde **teknik mülakat sürecinin zorunlu bir bileşenidir**."
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "LSyRLqZPK5hrVm87LAXhVI7U9vHbWeYNnhRHLizaBds=",
        "originContent": "**Practice common system design interview questions** and **compare** your results with **sample solutions**: discussions, code, and diagrams.",
        "translatedContent": "**Yaygın sistem tasarımı mülakat sorularını çözerek** ve **örnek çözümlerle**: tartışmalar, kod ve diyagramlarla **karşılaştırarak** pratik yapın."
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "HcjqOhjWeDEqRUbJGhq8E5QgFU+bX28kl7j1XB9Pl1k=",
        "originContent": "Additional topics for interview prep:",
        "translatedContent": "Mülakat hazırlığı için ek başlıklar:"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "v4yYDQA33HmkJabIfy2wQXtEJnfXydVDYJqKO2z1XSw=",
        "originContent": "* [Study guide](#study-guide)",
        "translatedContent": "* [Çalışma rehberi](#study-guide)"
      },
      {
        "row": 40,
        "rowsha": "X+q8Gc3m4EOWkV9rnHfPaUXzg7dHUXx3EYIFol17RV8=",
        "originContent": "* [How to approach a system design interview question](#how-to-approach-a-system-design-interview-question)",
        "translatedContent": "* [Bir sistem tasarımı mülakat sorusuna nasıl yaklaşılır](#how-to-approach-a-system-design-interview-question)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 3,
    "Content": "* [System design interview questions, **with solutions**](#system-design-interview-questions-with-solutions)\n* [Object-oriented design interview questions, **with solutions**](#object-oriented-design-interview-questions-with-solutions)\n* [Additional system design interview questions](#additional-system-design-interview-questions)\n\n## Anki flashcards\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/zdCAkB3.png\">\n  <br/>\n</p>\n\nThe provided [Anki flashcard decks](https://apps.ankiweb.net/) use spaced repetition to help you retain key system design concepts.\n\n* [System design deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg)\n* [System design exercises deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg)\n* [Object oriented design exercises deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg)\n\nGreat for use while on-the-go.\n\n### Coding Resource: Interactive Coding Challenges\n\nLooking for resources to help you prep for the [**Coding Interview**](https://github.com/donnemartin/interactive-coding-challenges)?\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/b4YtAEN.png\">\n  <br/>\n</p>\n\nCheck out the sister repo [**Interactive Coding Challenges**](https://github.com/donnemartin/interactive-coding-challenges), which contains an additional Anki deck:\n\n* [Coding deck](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)\n\n## Contributing\n\n> Learn from the community.\n\nFeel free to submit pull requests to help:\n\n* Fix errors\n* Improve sections",
    "ContentSha": "SXl/9sXgfkMzgSqqZA/bJ68vMrerBbNpRqT5TMAq1Hg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Sistem tasarımı mülakat soruları, **çözümleriyle birlikte**](#system-design-interview-questions-with-solutions)\n* [Nesne yönelimli tasarım mülakat soruları, **çözümleriyle birlikte**](#object-oriented-design-interview-questions-with-solutions)\n* [Ek sistem tasarımı mülakat soruları](#additional-system-design-interview-questions)\n\n## Anki flash kartları\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/zdCAkB3.png\">\n  <br/>\n</p>\n\nSunulan [Anki flash kart desteleri](https://apps.ankiweb.net/) anahtar sistem tasarımı kavramlarını akılda tutmanıza yardımcı olmak için aralıklı tekrar kullanır.\n\n* [Sistem tasarımı destesi](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg)\n* [Sistem tasarımı alıştırmaları destesi](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg)\n* [Nesne yönelimli tasarım alıştırmaları destesi](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg)\n\nYolda kullanım için harika.\n\n### Kodlama Kaynağı: Etkileşimli Kodlama Zorlukları\n\n[**Kodlama Mülakatına**](https://github.com/donnemartin/interactive-coding-challenges) hazırlanmanıza yardımcı olacak kaynaklar mı arıyorsunuz?\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/b4YtAEN.png\">\n  <br/>\n</p>\n\nKız kardeş repoya göz atın [**Etkileşimli Kodlama Zorlukları**](https://github.com/donnemartin/interactive-coding-challenges), ek bir Anki destesi içerir:\n\n* [Kodlama destesi](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)\n\n## Katkıda Bulunma\n\n> Topluluktan öğrenin.\n\nŞunlara yardımcı olmak için pull request göndermekten çekinmeyin:\n\n* Hataları düzeltin\n* Bölümleri geliştirin",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "Mt2HxSYjFkc9uMdXwaq+OlP/W/gyF74VX3BSfO98hn0=",
        "originContent": "* [System design interview questions, **with solutions**](#system-design-interview-questions-with-solutions)",
        "translatedContent": "* [Sistem tasarımı mülakat soruları, **çözümleriyle birlikte**](#system-design-interview-questions-with-solutions)"
      },
      {
        "row": 2,
        "rowsha": "Wir9bkulqEXFUOlAjhcOOF7WrGFz2fBUontFrp3p8W4=",
        "originContent": "* [Object-oriented design interview questions, **with solutions**](#object-oriented-design-interview-questions-with-solutions)",
        "translatedContent": "* [Nesne yönelimli tasarım mülakat soruları, **çözümleriyle birlikte**](#object-oriented-design-interview-questions-with-solutions)"
      },
      {
        "row": 3,
        "rowsha": "XGKgnr/824vT6dM9jyrdrXO2K5MmiSyRqNS35VDUIPg=",
        "originContent": "* [Additional system design interview questions](#additional-system-design-interview-questions)",
        "translatedContent": "* [Ek sistem tasarımı mülakat soruları](#additional-system-design-interview-questions)"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "jAhCy8VM8S4HEk/LADeB7EbsOBvqZ0IvgMlwlVEKfu4=",
        "originContent": "## Anki flashcards",
        "translatedContent": "## Anki flash kartları"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 8,
        "rowsha": "BPzFMaBD+IXGJD8mCNtQdt2Fq3yGI8hrbdh1PitUt1c=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/zdCAkB3.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/zdCAkB3.png\">"
      },
      {
        "row": 9,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 10,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "K5DuCHSzg2P7YtiP+baqJaP62aUjBaz0mb4mYziF4oo=",
        "originContent": "The provided [Anki flashcard decks](https://apps.ankiweb.net/) use spaced repetition to help you retain key system design concepts.",
        "translatedContent": "Sunulan [Anki flash kart desteleri](https://apps.ankiweb.net/) anahtar sistem tasarımı kavramlarını akılda tutmanıza yardımcı olmak için aralıklı tekrar kullanır."
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "crW/WKlK5TjEYXwDp1G9/1ic+JPr4f1yktu027rZCR4=",
        "originContent": "* [System design deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg)",
        "translatedContent": "* [Sistem tasarımı destesi](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg)"
      },
      {
        "row": 15,
        "rowsha": "OfAUha/5gfRKRGfOM84APZ/5JyHS9P+64L1tSvdVP8w=",
        "originContent": "* [System design exercises deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg)",
        "translatedContent": "* [Sistem tasarımı alıştırmaları destesi](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg)"
      },
      {
        "row": 16,
        "rowsha": "wg08CsJYh0SwgkIQkRxS95j9SzIiB4pFnzkYECItNsA=",
        "originContent": "* [Object oriented design exercises deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg)",
        "translatedContent": "* [Nesne yönelimli tasarım alıştırmaları destesi](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg)"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "lkxjikTF7Ep+6Isk/CGGBY7cmFnupWpV0Qf00hsrkF8=",
        "originContent": "Great for use while on-the-go.",
        "translatedContent": "Yolda kullanım için harika."
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "Ym+2jTY3QP64SUY9yYzEp//cTOISVSsFCRxHUzNZzag=",
        "originContent": "### Coding Resource: Interactive Coding Challenges",
        "translatedContent": "### Kodlama Kaynağı: Etkileşimli Kodlama Zorlukları"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "/qAkhkRHLUIOESCrNYlEJpejk0JLhSusLW0Sk4NwtfE=",
        "originContent": "Looking for resources to help you prep for the [**Coding Interview**](https://github.com/donnemartin/interactive-coding-challenges)?",
        "translatedContent": "[**Kodlama Mülakatına**](https://github.com/donnemartin/interactive-coding-challenges) hazırlanmanıza yardımcı olacak kaynaklar mı arıyorsunuz?"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 25,
        "rowsha": "MdSv9h1g1w6EflbjMKJ5/I0xwZPvHBplhFjX3vv06G0=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/b4YtAEN.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/b4YtAEN.png\">"
      },
      {
        "row": 26,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 27,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "dW/Qoril3MLw69OIyFrrQ4xSErGMxw8eylmxqz43bkU=",
        "originContent": "Check out the sister repo [**Interactive Coding Challenges**](https://github.com/donnemartin/interactive-coding-challenges), which contains an additional Anki deck:",
        "translatedContent": "Kız kardeş repoya göz atın [**Etkileşimli Kodlama Zorlukları**](https://github.com/donnemartin/interactive-coding-challenges), ek bir Anki destesi içerir:"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "JoarM4WtXWxKxXt+3p/7fW0lgC1Sd83kcvPmcS+QBo0=",
        "originContent": "* [Coding deck](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)",
        "translatedContent": "* [Kodlama destesi](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "R5ZPLZ4vkE9tjX5qe8QB7AkTfWZsuNTGFLFKMp2KUzM=",
        "originContent": "## Contributing",
        "translatedContent": "## Katkıda Bulunma"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "n+VWB2c1fi5U1I/HAqwDzesEXJieDpt99Ve3Pudxcnk=",
        "originContent": "> Learn from the community.",
        "translatedContent": "> Topluluktan öğrenin."
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "Tm5+a/IDPzyOTOP0wgk3ULKDs3fMylMngrEuvccOs9k=",
        "originContent": "Feel free to submit pull requests to help:",
        "translatedContent": "Şunlara yardımcı olmak için pull request göndermekten çekinmeyin:"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "BGOOPe+VNHRBhUS0Jx4Pjh6ty6SB6QxyQm0PrtV0V90=",
        "originContent": "* Fix errors",
        "translatedContent": "* Hataları düzeltin"
      },
      {
        "row": 40,
        "rowsha": "H22DGM0Rl/JMuVz1PhYuLI5tYblM/ipRxxCgehM+MlU=",
        "originContent": "* Improve sections",
        "translatedContent": "* Bölümleri geliştirin"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "* Add new sections\n* [Translate](https://github.com/donnemartin/system-design-primer/issues/28)\n\nContent that needs some polishing is placed [under development](#under-development).\n\nReview the [Contributing Guidelines](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/CONTRIBUTING.md).\n\n## Index of system design topics\n\n> Summaries of various system design topics, including pros and cons.  **Everything is a trade-off**.\n>\n> Each section contains links to more in-depth resources.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png\">\n  <br/>\n</p>\n\n* [System design topics: start here](#system-design-topics-start-here)\n    * [Step 1: Review the scalability video lecture](#step-1-review-the-scalability-video-lecture)\n    * [Step 2: Review the scalability article](#step-2-review-the-scalability-article)\n    * [Next steps](#next-steps)\n* [Performance vs scalability](#performance-vs-scalability)\n* [Latency vs throughput](#latency-vs-throughput)\n* [Availability vs consistency](#availability-vs-consistency)\n    * [CAP theorem](#cap-theorem)\n        * [CP - consistency and partition tolerance](#cp---consistency-and-partition-tolerance)\n        * [AP - availability and partition tolerance](#ap---availability-and-partition-tolerance)\n* [Consistency patterns](#consistency-patterns)\n    * [Weak consistency](#weak-consistency)\n    * [Eventual consistency](#eventual-consistency)\n    * [Strong consistency](#strong-consistency)\n* [Availability patterns](#availability-patterns)\n    * [Fail-over](#fail-over)\n    * [Replication](#replication)\n    * [Availability in numbers](#availability-in-numbers)\n* [Domain name system](#domain-name-system)\n* [Content delivery network](#content-delivery-network)\n    * [Push CDNs](#push-cdns)\n    * [Pull CDNs](#pull-cdns)",
    "ContentSha": "55nlChjOgBlS9Rz8E9JfxCDdOyXcovuwIdqXYGb4sqo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* Yeni bölümler ekle\n* [Çevir](https://github.com/donnemartin/system-design-primer/issues/28)\n\nDüzenlenmesi gereken içerikler [geliştirme aşamasında](#under-development) olarak işaretlenmiştir.\n\n[Katkı Sağlama Yönergelerini](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/CONTRIBUTING.md) inceleyin.\n\n## Sistem tasarımı konuları indeksi\n\n> Çeşitli sistem tasarımı konularının özetleri, artıları ve eksileri dahil.  **Her şey bir ödünleşmedir**.\n>\n> Her bölümde daha derinlemesine kaynaklara bağlantılar bulunur.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png\">\n  <br/>\n</p>\n\n* [Sistem tasarımı konuları: buradan başlayın](#system-design-topics-start-here)\n    * [Adım 1: Ölçeklenebilirlik video dersini inceleyin](#step-1-review-the-scalability-video-lecture)\n    * [Adım 2: Ölçeklenebilirlik makalesini inceleyin](#step-2-review-the-scalability-article)\n    * [Sonraki adımlar](#next-steps)\n* [Performans vs ölçeklenebilirlik](#performance-vs-scalability)\n* [Gecikme vs verimlilik](#latency-vs-throughput)\n* [Kullanılabilirlik vs tutarlılık](#availability-vs-consistency)\n    * [CAP teoremi](#cap-theorem)\n        * [CP - tutarlılık ve bölüm toleransı](#cp---consistency-and-partition-tolerance)\n        * [AP - kullanılabilirlik ve bölüm toleransı](#ap---availability-and-partition-tolerance)\n* [Tutarlılık desenleri](#consistency-patterns)\n    * [Zayıf tutarlılık](#weak-consistency)\n    * [Sonunda tutarlılık](#eventual-consistency)\n    * [Güçlü tutarlılık](#strong-consistency)\n* [Kullanılabilirlik desenleri](#availability-patterns)\n    * [Fail-over (hata toleransı)](#fail-over)\n    * [Çoğaltma](#replication)\n    * [Sayılarla kullanılabilirlik](#availability-in-numbers)\n* [Alan adı sistemi](#domain-name-system)\n* [İçerik dağıtım ağı](#content-delivery-network)\n    * [Push CDN'ler](#push-cdns)\n    * [Pull CDN'ler](#pull-cdns)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "SsCtFlRr/vp/eIxy/AyEzj8HX0cy86MGCQv0qG8BEJ8=",
        "originContent": "* Add new sections",
        "translatedContent": "* Yeni bölümler ekle"
      },
      {
        "row": 2,
        "rowsha": "MgbTAOtFzyIz4BNeWpBJDVGUaPy03OwWW/NDniv8iKw=",
        "originContent": "* [Translate](https://github.com/donnemartin/system-design-primer/issues/28)",
        "translatedContent": "* [Çevir](https://github.com/donnemartin/system-design-primer/issues/28)"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "PAhTbZo1MIyFgr19zZb0QBFu5jXzCKuVXgsjvN9v43A=",
        "originContent": "Content that needs some polishing is placed [under development](#under-development).",
        "translatedContent": "Düzenlenmesi gereken içerikler [geliştirme aşamasında](#under-development) olarak işaretlenmiştir."
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "MTipwkXdKqZVs4vSj9UbfT3bzAd9kyVp1MlT1yTZIwg=",
        "originContent": "Review the [Contributing Guidelines](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/CONTRIBUTING.md).",
        "translatedContent": "[Katkı Sağlama Yönergelerini](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/CONTRIBUTING.md) inceleyin."
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "l+eVTiaTEanah8q3SHdeQsdOipjWL1al1oGriL/pV10=",
        "originContent": "## Index of system design topics",
        "translatedContent": "## Sistem tasarımı konuları indeksi"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "vszC2rRgz04c3FQVk3KKmkzMbBkQUF+isXl9SPFLJDs=",
        "originContent": "> Summaries of various system design topics, including pros and cons.  **Everything is a trade-off**.",
        "translatedContent": "> Çeşitli sistem tasarımı konularının özetleri, artıları ve eksileri dahil.  **Her şey bir ödünleşmedir**."
      },
      {
        "row": 11,
        "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
        "originContent": ">",
        "translatedContent": ">"
      },
      {
        "row": 12,
        "rowsha": "N+lMsyK9eBW2WQyNd4PSYBFiVDgk9aawUGSamgefd9I=",
        "originContent": "> Each section contains links to more in-depth resources.",
        "translatedContent": "> Her bölümde daha derinlemesine kaynaklara bağlantılar bulunur."
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 15,
        "rowsha": "pNNmfFbsAp/MXo7RZEmE5XC27HubONv1ewXy+wQ3em0=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png\">"
      },
      {
        "row": 16,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 17,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "NAm+Yh5bEIUi2ReUdcW2qlyoKQRSlyq3bvUrU6es1ok=",
        "originContent": "* [System design topics: start here](#system-design-topics-start-here)",
        "translatedContent": "* [Sistem tasarımı konuları: buradan başlayın](#system-design-topics-start-here)"
      },
      {
        "row": 20,
        "rowsha": "cGfo4uafv6Y1N0Z7NfSWYY26ptn5LTyUymM1g+9uUgY=",
        "originContent": "    * [Step 1: Review the scalability video lecture](#step-1-review-the-scalability-video-lecture)",
        "translatedContent": "    * [Adım 1: Ölçeklenebilirlik video dersini inceleyin](#step-1-review-the-scalability-video-lecture)"
      },
      {
        "row": 21,
        "rowsha": "b7hZ1PHTm+Pr9IbYhdTuWiLYomBJNAYJKkNP234ROgg=",
        "originContent": "    * [Step 2: Review the scalability article](#step-2-review-the-scalability-article)",
        "translatedContent": "    * [Adım 2: Ölçeklenebilirlik makalesini inceleyin](#step-2-review-the-scalability-article)"
      },
      {
        "row": 22,
        "rowsha": "1kjZ/tN6i17LZI8anxYhRkGobWb6WdNWthBllU8kmTM=",
        "originContent": "    * [Next steps](#next-steps)",
        "translatedContent": "    * [Sonraki adımlar](#next-steps)"
      },
      {
        "row": 23,
        "rowsha": "NA1iYeDmHywFkHC/T5DsHPkbAoJVsmqJkCAWr14Ra3k=",
        "originContent": "* [Performance vs scalability](#performance-vs-scalability)",
        "translatedContent": "* [Performans vs ölçeklenebilirlik](#performance-vs-scalability)"
      },
      {
        "row": 24,
        "rowsha": "YkSB9feIkHCH732cHw6vhgOAAiCMO+ck+mLnkD1XwUI=",
        "originContent": "* [Latency vs throughput](#latency-vs-throughput)",
        "translatedContent": "* [Gecikme vs verimlilik](#latency-vs-throughput)"
      },
      {
        "row": 25,
        "rowsha": "ooFGAHxINIA30greyD+eGMO2baag/4mWiz+oGof8sxU=",
        "originContent": "* [Availability vs consistency](#availability-vs-consistency)",
        "translatedContent": "* [Kullanılabilirlik vs tutarlılık](#availability-vs-consistency)"
      },
      {
        "row": 26,
        "rowsha": "Q+3JWKgafhH32bAmblunuupZ0PV+eEYdBxcOAq6tatk=",
        "originContent": "    * [CAP theorem](#cap-theorem)",
        "translatedContent": "    * [CAP teoremi](#cap-theorem)"
      },
      {
        "row": 27,
        "rowsha": "7XzV7oxhHIvLznuiyhFn9DfJd2mCzrvGbgI0sVyMLlg=",
        "originContent": "        * [CP - consistency and partition tolerance](#cp---consistency-and-partition-tolerance)",
        "translatedContent": "        * [CP - tutarlılık ve bölüm toleransı](#cp---consistency-and-partition-tolerance)"
      },
      {
        "row": 28,
        "rowsha": "fGZJpa15rj/a5SxHqkD8YazLYvd/uYi2DDLVrZr4y3M=",
        "originContent": "        * [AP - availability and partition tolerance](#ap---availability-and-partition-tolerance)",
        "translatedContent": "        * [AP - kullanılabilirlik ve bölüm toleransı](#ap---availability-and-partition-tolerance)"
      },
      {
        "row": 29,
        "rowsha": "/VMr/QdcBd0Bf5E1itt0waHGjDlIO3wo9ZMgmifIYeI=",
        "originContent": "* [Consistency patterns](#consistency-patterns)",
        "translatedContent": "* [Tutarlılık desenleri](#consistency-patterns)"
      },
      {
        "row": 30,
        "rowsha": "BvQFkODCRjD1GaWWXV3Dk/0/je0BJFOXQhHk9cAho0A=",
        "originContent": "    * [Weak consistency](#weak-consistency)",
        "translatedContent": "    * [Zayıf tutarlılık](#weak-consistency)"
      },
      {
        "row": 31,
        "rowsha": "mJntUp6dLJuoE8xVVmMUSMYFSJHMVhrX6cC3kEWOSw4=",
        "originContent": "    * [Eventual consistency](#eventual-consistency)",
        "translatedContent": "    * [Sonunda tutarlılık](#eventual-consistency)"
      },
      {
        "row": 32,
        "rowsha": "NiS/FVcXfunIwRDvtKurhGLWDI8X6gmQLMuxKvP5FO8=",
        "originContent": "    * [Strong consistency](#strong-consistency)",
        "translatedContent": "    * [Güçlü tutarlılık](#strong-consistency)"
      },
      {
        "row": 33,
        "rowsha": "NfF9k3//Tw0Ey52SttqFFrybbt4Uqh8ltKx1sLGuXk0=",
        "originContent": "* [Availability patterns](#availability-patterns)",
        "translatedContent": "* [Kullanılabilirlik desenleri](#availability-patterns)"
      },
      {
        "row": 34,
        "rowsha": "F1JGTV8gU1mi/kH8pjmDkFySAWi4WQoH4QDapqvnc3Y=",
        "originContent": "    * [Fail-over](#fail-over)",
        "translatedContent": "    * [Fail-over (hata toleransı)](#fail-over)"
      },
      {
        "row": 35,
        "rowsha": "2tozvSOPmWuYrEr8TPzY5zYwvhIhbRhnb0TSyfKEFU8=",
        "originContent": "    * [Replication](#replication)",
        "translatedContent": "    * [Çoğaltma](#replication)"
      },
      {
        "row": 36,
        "rowsha": "6s5ScT5WxbHJHT5FFhY5EPLGztEOKXtsAoE8uQzZIZc=",
        "originContent": "    * [Availability in numbers](#availability-in-numbers)",
        "translatedContent": "    * [Sayılarla kullanılabilirlik](#availability-in-numbers)"
      },
      {
        "row": 37,
        "rowsha": "BiaxRDxU2Kxbx7BsRWzEk/zo1HeVnY9Mf5sYNYl7HTI=",
        "originContent": "* [Domain name system](#domain-name-system)",
        "translatedContent": "* [Alan adı sistemi](#domain-name-system)"
      },
      {
        "row": 38,
        "rowsha": "1/CF0whL3trksUPc+ysqc/ctxo/a3yzgXeYJ7pzakpk=",
        "originContent": "* [Content delivery network](#content-delivery-network)",
        "translatedContent": "* [İçerik dağıtım ağı](#content-delivery-network)"
      },
      {
        "row": 39,
        "rowsha": "yvr9NAZhz+gNdEjqg2tyssQEJXIxXjFP1sHCr1YkWMY=",
        "originContent": "    * [Push CDNs](#push-cdns)",
        "translatedContent": "    * [Push CDN'ler](#push-cdns)"
      },
      {
        "row": 40,
        "rowsha": "jL4KowX/zvhAUGtmljHsn6UkIqRqfoP1VBmTrZFU3JU=",
        "originContent": "    * [Pull CDNs](#pull-cdns)",
        "translatedContent": "    * [Pull CDN'ler](#pull-cdns)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 5,
    "Content": "* [Load balancer](#load-balancer)\n    * [Active-passive](#active-passive)\n    * [Active-active](#active-active)\n    * [Layer 4 load balancing](#layer-4-load-balancing)\n    * [Layer 7 load balancing](#layer-7-load-balancing)\n    * [Horizontal scaling](#horizontal-scaling)\n* [Reverse proxy (web server)](#reverse-proxy-web-server)\n    * [Load balancer vs reverse proxy](#load-balancer-vs-reverse-proxy)\n* [Application layer](#application-layer)\n    * [Microservices](#microservices)\n    * [Service discovery](#service-discovery)\n* [Database](#database)\n    * [Relational database management system (RDBMS)](#relational-database-management-system-rdbms)\n        * [Master-slave replication](#master-slave-replication)\n        * [Master-master replication](#master-master-replication)\n        * [Federation](#federation)\n        * [Sharding](#sharding)\n        * [Denormalization](#denormalization)\n        * [SQL tuning](#sql-tuning)\n    * [NoSQL](#nosql)\n        * [Key-value store](#key-value-store)\n        * [Document store](#document-store)\n        * [Wide column store](#wide-column-store)\n        * [Graph Database](#graph-database)\n    * [SQL or NoSQL](#sql-or-nosql)\n* [Cache](#cache)\n    * [Client caching](#client-caching)\n    * [CDN caching](#cdn-caching)\n    * [Web server caching](#web-server-caching)\n    * [Database caching](#database-caching)\n    * [Application caching](#application-caching)\n    * [Caching at the database query level](#caching-at-the-database-query-level)\n    * [Caching at the object level](#caching-at-the-object-level)\n    * [When to update the cache](#when-to-update-the-cache)\n        * [Cache-aside](#cache-aside)\n        * [Write-through](#write-through)\n        * [Write-behind (write-back)](#write-behind-write-back)\n        * [Refresh-ahead](#refresh-ahead)\n* [Asynchronism](#asynchronism)\n    * [Message queues](#message-queues)",
    "ContentSha": "asKFjZ3AfCGQPD58skhfkEeJZEI9zP/H+h/3PnvCFDY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Yük dengeleyici](#load-balancer)\n    * [Aktif-pasif](#active-passive)\n    * [Aktif-aktif](#active-active)\n    * [Katman 4 yük dengeleme](#layer-4-load-balancing)\n    * [Katman 7 yük dengeleme](#layer-7-load-balancing)\n    * [Yatay ölçekleme](#horizontal-scaling)\n* [Ters proxy (web sunucusu)](#reverse-proxy-web-server)\n    * [Yük dengeleyici vs ters proxy](#load-balancer-vs-reverse-proxy)\n* [Uygulama katmanı](#application-layer)\n    * [Mikroservisler](#microservices)\n    * [Servis keşfi](#service-discovery)\n* [Veritabanı](#database)\n    * [İlişkisel veritabanı yönetim sistemi (RDBMS)](#relational-database-management-system-rdbms)\n        * [Ana-yedek çoğaltma](#master-slave-replication)\n        * [Ana-ana çoğaltma](#master-master-replication)\n        * [Federasyon](#federation)\n        * [Parçalama (Sharding)](#sharding)\n        * [Denormalizasyon](#denormalization)\n        * [SQL ayarlama](#sql-tuning)\n    * [NoSQL](#nosql)\n        * [Anahtar-değer deposu](#key-value-store)\n        * [Doküman deposu](#document-store)\n        * [Geniş sütun deposu](#wide-column-store)\n        * [Graf Veritabanı](#graph-database)\n    * [SQL veya NoSQL](#sql-or-nosql)\n* [Önbellek](#cache)\n    * [İstemci önbelleklemesi](#client-caching)\n    * [CDN önbelleklemesi](#cdn-caching)\n    * [Web sunucu önbelleklemesi](#web-server-caching)\n    * [Veritabanı önbelleklemesi](#database-caching)\n    * [Uygulama önbelleklemesi](#application-caching)\n    * [Veritabanı sorgu seviyesinde önbellekleme](#caching-at-the-database-query-level)\n    * [Nesne seviyesinde önbellekleme](#caching-at-the-object-level)\n    * [Önbellek ne zaman güncellenmeli](#when-to-update-the-cache)\n        * [Önbellek-yanında](#cache-aside)\n        * [Yaz-geçişli](#write-through)\n        * [Yaz-geriden (yaz-dönüş)](#write-behind-write-back)\n        * [Önden-yenileme](#refresh-ahead)\n* [Asenkronluk](#asynchronism)\n    * [Mesaj kuyrukları](#message-queues)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "h4PaRYGBSsT8meOlIuNoX8Wbd5CzE/GhZl0r+cKGMSs=",
        "originContent": "* [Load balancer](#load-balancer)",
        "translatedContent": "* [Yük dengeleyici](#load-balancer)"
      },
      {
        "row": 2,
        "rowsha": "+SevMRb7w3cZvaWqfHPv7p2NvBglbLiZzNUs8lfXTnU=",
        "originContent": "    * [Active-passive](#active-passive)",
        "translatedContent": "    * [Aktif-pasif](#active-passive)"
      },
      {
        "row": 3,
        "rowsha": "7tF73nPerlzwU8S7LjTC/L60UtInotqIx6cPZRmdBtk=",
        "originContent": "    * [Active-active](#active-active)",
        "translatedContent": "    * [Aktif-aktif](#active-active)"
      },
      {
        "row": 4,
        "rowsha": "5yu5hG4jzivgG60akLqWDseYTDQJgL9UD21Jo9IpZoQ=",
        "originContent": "    * [Layer 4 load balancing](#layer-4-load-balancing)",
        "translatedContent": "    * [Katman 4 yük dengeleme](#layer-4-load-balancing)"
      },
      {
        "row": 5,
        "rowsha": "8fapUdLm8nxXa6BOpkJJ+JXd3LEFlQ1eFYWbTF4d2fY=",
        "originContent": "    * [Layer 7 load balancing](#layer-7-load-balancing)",
        "translatedContent": "    * [Katman 7 yük dengeleme](#layer-7-load-balancing)"
      },
      {
        "row": 6,
        "rowsha": "w1ZAwXkT6fhv726mwTGEnMydMKmLPalZ0CJUOWftwNI=",
        "originContent": "    * [Horizontal scaling](#horizontal-scaling)",
        "translatedContent": "    * [Yatay ölçekleme](#horizontal-scaling)"
      },
      {
        "row": 7,
        "rowsha": "xCJYMbivh6vFtHRTQoGIvfMUukV063SI0DsJyzwB3Q8=",
        "originContent": "* [Reverse proxy (web server)](#reverse-proxy-web-server)",
        "translatedContent": "* [Ters proxy (web sunucusu)](#reverse-proxy-web-server)"
      },
      {
        "row": 8,
        "rowsha": "I7J14g5xS6GsffDPwkGwahx+faUg5QPSYIrk+vt9u20=",
        "originContent": "    * [Load balancer vs reverse proxy](#load-balancer-vs-reverse-proxy)",
        "translatedContent": "    * [Yük dengeleyici vs ters proxy](#load-balancer-vs-reverse-proxy)"
      },
      {
        "row": 9,
        "rowsha": "8mMWGVXBx3lHTsOuc6gKrz4YEOu1aqmIo01A+bpGcRw=",
        "originContent": "* [Application layer](#application-layer)",
        "translatedContent": "* [Uygulama katmanı](#application-layer)"
      },
      {
        "row": 10,
        "rowsha": "5psy0oT4gwDQ5RN4aCrev6Orwxq0OAn6t5SkO7XVYGo=",
        "originContent": "    * [Microservices](#microservices)",
        "translatedContent": "    * [Mikroservisler](#microservices)"
      },
      {
        "row": 11,
        "rowsha": "TjwXaicvw8HbjJT6H6LfhnOVGMryolqqifhRy+0M4n0=",
        "originContent": "    * [Service discovery](#service-discovery)",
        "translatedContent": "    * [Servis keşfi](#service-discovery)"
      },
      {
        "row": 12,
        "rowsha": "Lfh6Z2jhFps37PV/hUbb+WzAZNZ1dwcCks1tCMb8MN0=",
        "originContent": "* [Database](#database)",
        "translatedContent": "* [Veritabanı](#database)"
      },
      {
        "row": 13,
        "rowsha": "hF52lb4igNaoA/PAsTVafWk3LTScOc7THSKwjUxnhHs=",
        "originContent": "    * [Relational database management system (RDBMS)](#relational-database-management-system-rdbms)",
        "translatedContent": "    * [İlişkisel veritabanı yönetim sistemi (RDBMS)](#relational-database-management-system-rdbms)"
      },
      {
        "row": 14,
        "rowsha": "rSnnXzDdS9ntZrIKTFsksr4/kERyfNvh/6XEuzIILAc=",
        "originContent": "        * [Master-slave replication](#master-slave-replication)",
        "translatedContent": "        * [Ana-yedek çoğaltma](#master-slave-replication)"
      },
      {
        "row": 15,
        "rowsha": "zA8jBiusKopDjLCL9hYjKiHQHU3ryiaz2PpEk1Lc0Ag=",
        "originContent": "        * [Master-master replication](#master-master-replication)",
        "translatedContent": "        * [Ana-ana çoğaltma](#master-master-replication)"
      },
      {
        "row": 16,
        "rowsha": "Jf0YXoTUgL80zEAHtntOVj/O8Us8sCsPduCUZE/T1/s=",
        "originContent": "        * [Federation](#federation)",
        "translatedContent": "        * [Federasyon](#federation)"
      },
      {
        "row": 17,
        "rowsha": "MDtqFiyoo0+WuihrLP2kDMOt5+/Z5EYLps1TsAulHP8=",
        "originContent": "        * [Sharding](#sharding)",
        "translatedContent": "        * [Parçalama (Sharding)](#sharding)"
      },
      {
        "row": 18,
        "rowsha": "oy4mtQy7Gjs28d4nInWJcCImDbf5DjMUNMWZYv1bgaM=",
        "originContent": "        * [Denormalization](#denormalization)",
        "translatedContent": "        * [Denormalizasyon](#denormalization)"
      },
      {
        "row": 19,
        "rowsha": "goccNEeqpVP3w5GZdJNs9Xm0cdgs4rcfeOzrIsB0/nU=",
        "originContent": "        * [SQL tuning](#sql-tuning)",
        "translatedContent": "        * [SQL ayarlama](#sql-tuning)"
      },
      {
        "row": 20,
        "rowsha": "47aybAiLhEpV9iqFw8Ic9+GM/IdFFOM7F/XmZn9kYtg=",
        "originContent": "    * [NoSQL](#nosql)",
        "translatedContent": "    * [NoSQL](#nosql)"
      },
      {
        "row": 21,
        "rowsha": "j5iSbdulQSoYnvxDS7OsLHLZClSnw479K8YIirNMG1Y=",
        "originContent": "        * [Key-value store](#key-value-store)",
        "translatedContent": "        * [Anahtar-değer deposu](#key-value-store)"
      },
      {
        "row": 22,
        "rowsha": "pGqiU7KuKgkyw/tV92znudH6ZI1C4VFk3e393f/sD0E=",
        "originContent": "        * [Document store](#document-store)",
        "translatedContent": "        * [Doküman deposu](#document-store)"
      },
      {
        "row": 23,
        "rowsha": "lfwnBi0qMofxek43EEvqfYhFYFCRcGfTsQAQt1I2Qd4=",
        "originContent": "        * [Wide column store](#wide-column-store)",
        "translatedContent": "        * [Geniş sütun deposu](#wide-column-store)"
      },
      {
        "row": 24,
        "rowsha": "NJqE5BFiqBHD0SPLX1auP7/BruL0LDThaFImmxxPOd8=",
        "originContent": "        * [Graph Database](#graph-database)",
        "translatedContent": "        * [Graf Veritabanı](#graph-database)"
      },
      {
        "row": 25,
        "rowsha": "wA02P+LM/69V5LkLytWi+11kFXaVK2OGxFYnKO/bqgE=",
        "originContent": "    * [SQL or NoSQL](#sql-or-nosql)",
        "translatedContent": "    * [SQL veya NoSQL](#sql-or-nosql)"
      },
      {
        "row": 26,
        "rowsha": "ZKJiW5ZRYlUKyV+E4QAa2PHj5+Z6sHOx+qtFigmDrHo=",
        "originContent": "* [Cache](#cache)",
        "translatedContent": "* [Önbellek](#cache)"
      },
      {
        "row": 27,
        "rowsha": "1QPzZSw7wrI93fNTYYbBCCTAB14RlAr1QGe3+Qf5TD4=",
        "originContent": "    * [Client caching](#client-caching)",
        "translatedContent": "    * [İstemci önbelleklemesi](#client-caching)"
      },
      {
        "row": 28,
        "rowsha": "st60rn6urYVlOs42sWWjhpP15+Zln+cfJ1aiHU6Akj0=",
        "originContent": "    * [CDN caching](#cdn-caching)",
        "translatedContent": "    * [CDN önbelleklemesi](#cdn-caching)"
      },
      {
        "row": 29,
        "rowsha": "HfIacaIFl6tDsYeuwcoT55L12QQhpWBCNWvcIy48SsA=",
        "originContent": "    * [Web server caching](#web-server-caching)",
        "translatedContent": "    * [Web sunucu önbelleklemesi](#web-server-caching)"
      },
      {
        "row": 30,
        "rowsha": "Ozq+0s9PEpS+iCCY335toasf7KjhXODV4C86e5gEkrM=",
        "originContent": "    * [Database caching](#database-caching)",
        "translatedContent": "    * [Veritabanı önbelleklemesi](#database-caching)"
      },
      {
        "row": 31,
        "rowsha": "pySXRtIe5AUAvWKe9H65D3fulHVNCSI7Nfo6u7JmLts=",
        "originContent": "    * [Application caching](#application-caching)",
        "translatedContent": "    * [Uygulama önbelleklemesi](#application-caching)"
      },
      {
        "row": 32,
        "rowsha": "um6/V9vSyAVdYrqQIbSfx4haMfAIYh61/D5Z0560QoM=",
        "originContent": "    * [Caching at the database query level](#caching-at-the-database-query-level)",
        "translatedContent": "    * [Veritabanı sorgu seviyesinde önbellekleme](#caching-at-the-database-query-level)"
      },
      {
        "row": 33,
        "rowsha": "8wuvIZ5j5seKmPi37JcfbScYnCQ5VJwMpRi7CiWnGYQ=",
        "originContent": "    * [Caching at the object level](#caching-at-the-object-level)",
        "translatedContent": "    * [Nesne seviyesinde önbellekleme](#caching-at-the-object-level)"
      },
      {
        "row": 34,
        "rowsha": "vGl/Qi61KJeoEkOEMotuZ0u9d0VSkRoU9AM4zmfMvQw=",
        "originContent": "    * [When to update the cache](#when-to-update-the-cache)",
        "translatedContent": "    * [Önbellek ne zaman güncellenmeli](#when-to-update-the-cache)"
      },
      {
        "row": 35,
        "rowsha": "ITsFPznfYyxpbeRcoO482yWsaW+YN5YvR1vJPZRLI2c=",
        "originContent": "        * [Cache-aside](#cache-aside)",
        "translatedContent": "        * [Önbellek-yanında](#cache-aside)"
      },
      {
        "row": 36,
        "rowsha": "z7zVU3t05MK7T8O6XYHjbUMB7vXzFwERe2PYvyKUDE4=",
        "originContent": "        * [Write-through](#write-through)",
        "translatedContent": "        * [Yaz-geçişli](#write-through)"
      },
      {
        "row": 37,
        "rowsha": "kNZqKN+WUwHb1zBqFraj47wKZOY9WLhnt7b1MTgng/0=",
        "originContent": "        * [Write-behind (write-back)](#write-behind-write-back)",
        "translatedContent": "        * [Yaz-geriden (yaz-dönüş)](#write-behind-write-back)"
      },
      {
        "row": 38,
        "rowsha": "/eB/o65GSkl+AEwb/HVpLsDrbY+jogBd5YDUbK8yMMs=",
        "originContent": "        * [Refresh-ahead](#refresh-ahead)",
        "translatedContent": "        * [Önden-yenileme](#refresh-ahead)"
      },
      {
        "row": 39,
        "rowsha": "zr1RycAvrfVcaAqj8l97VrQ6BIPurojyr3SGsxs2hvs=",
        "originContent": "* [Asynchronism](#asynchronism)",
        "translatedContent": "* [Asenkronluk](#asynchronism)"
      },
      {
        "row": 40,
        "rowsha": "ngYSKeGfsWtFoPyuKBLbi0kQWznAYU5siwvzycdqVU4=",
        "originContent": "    * [Message queues](#message-queues)",
        "translatedContent": "    * [Mesaj kuyrukları](#message-queues)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 6,
    "Content": "    * [Task queues](#task-queues)\n    * [Back pressure](#back-pressure)\n* [Communication](#communication)\n    * [Transmission control protocol (TCP)](#transmission-control-protocol-tcp)\n    * [User datagram protocol (UDP)](#user-datagram-protocol-udp)\n    * [Remote procedure call (RPC)](#remote-procedure-call-rpc)\n    * [Representational state transfer (REST)](#representational-state-transfer-rest)\n* [Security](#security)\n* [Appendix](#appendix)\n    * [Powers of two table](#powers-of-two-table)\n    * [Latency numbers every programmer should know](#latency-numbers-every-programmer-should-know)\n    * [Additional system design interview questions](#additional-system-design-interview-questions)\n    * [Real world architectures](#real-world-architectures)\n    * [Company architectures](#company-architectures)\n    * [Company engineering blogs](#company-engineering-blogs)\n* [Under development](#under-development)\n* [Credits](#credits)\n* [Contact info](#contact-info)\n* [License](#license)\n\n## Study guide\n\n> Suggested topics to review based on your interview timeline (short, medium, long).\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/OfVllex.png)\n\n**Q: For interviews, do I need to know everything here?**\n\n**A: No, you don't need to know everything here to prepare for the interview**.\n\nWhat you are asked in an interview depends on variables such as:\n\n* How much experience you have\n* What your technical background is\n* What positions you are interviewing for\n* Which companies you are interviewing with\n* Luck\n\nMore experienced candidates are generally expected to know more about system design.  Architects or team leads might be expected to know more than individual contributors.  Top tech companies are likely to have one or more design interview rounds.\n",
    "ContentSha": "ATTNyUBhYGX23A6dK9YO6hNcpGiZGZByeStHZczOceg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "    * [Görev kuyrukları](#task-queues)\n    * [Geri basınç](#back-pressure)\n* [İletişim](#communication)\n    * [Aktarım kontrol protokolü (TCP)](#transmission-control-protocol-tcp)\n    * [Kullanıcı veri iletişim protokolü (UDP)](#user-datagram-protocol-udp)\n    * [Uzaktan prosedür çağrısı (RPC)](#remote-procedure-call-rpc)\n    * [Temsili durum aktarımı (REST)](#representational-state-transfer-rest)\n* [Güvenlik](#security)\n* [Ekler](#appendix)\n    * [İki tabanı kuvvetler tablosu](#powers-of-two-table)\n    * [Her programcının bilmesi gereken gecikme değerleri](#latency-numbers-every-programmer-should-know)\n    * [Ek sistem tasarımı mülakat soruları](#additional-system-design-interview-questions)\n    * [Gerçek dünya mimarileri](#real-world-architectures)\n    * [Şirket mimarileri](#company-architectures)\n    * [Şirket mühendislik blogları](#company-engineering-blogs)\n* [Geliştirilmekte](#under-development)\n* [Katkıda Bulunanlar](#credits)\n* [İletişim bilgisi](#contact-info)\n* [Lisans](#license)\n\n## Çalışma rehberi\n\n> Mülakat zaman çizelgenize göre incelenmesi önerilen konular (kısa, orta, uzun).\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/OfVllex.png)\n\n**S: Mülakatlar için burada her şeyi bilmem gerekiyor mu?**\n\n**C: Hayır, mülakat için hazırlıkta burada her şeyi bilmenize gerek yok**.\n\nBir mülakatta size sorulanlar şu değişkenlere bağlıdır:\n\n* Ne kadar deneyiminiz olduğu\n* Teknik geçmişinizin ne olduğu\n* Hangi pozisyonlar için görüşme yaptığınız\n* Hangi şirketlerle görüştüğünüz\n* Şans\n\nDaha deneyimli adayların genellikle sistem tasarımı hakkında daha fazla bilgi sahibi olması beklenir.  Mimarlar veya takım liderlerinden bireysel katkı sağlayanlardan daha fazla bilgi beklenebilir.  En iyi teknoloji şirketlerinde bir veya daha fazla tasarım mülakatı turu olma olasılığı yüksektir.\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "O6TBBxTsu3yRea+KD1G4fld0434dM8LRo/xgTlthayc=",
        "originContent": "    * [Task queues](#task-queues)",
        "translatedContent": "    * [Görev kuyrukları](#task-queues)"
      },
      {
        "row": 2,
        "rowsha": "UrCvT4TYDFM+wTrDkf2ZRw0jR/5ELcsNaHGuacem2gQ=",
        "originContent": "    * [Back pressure](#back-pressure)",
        "translatedContent": "    * [Geri basınç](#back-pressure)"
      },
      {
        "row": 3,
        "rowsha": "UUd37MwuOeEo9lc7r34dQ7IJVLBzjeT8a2xlsOw0Ix4=",
        "originContent": "* [Communication](#communication)",
        "translatedContent": "* [İletişim](#communication)"
      },
      {
        "row": 4,
        "rowsha": "io62RFhf0tjvdSFLhMHVT2x3q9n1r9TDZME9Ndj5O+U=",
        "originContent": "    * [Transmission control protocol (TCP)](#transmission-control-protocol-tcp)",
        "translatedContent": "    * [Aktarım kontrol protokolü (TCP)](#transmission-control-protocol-tcp)"
      },
      {
        "row": 5,
        "rowsha": "R1NkIb/fntCNQpKX0IoKqXukYjxw99w2QlqBaya1fqg=",
        "originContent": "    * [User datagram protocol (UDP)](#user-datagram-protocol-udp)",
        "translatedContent": "    * [Kullanıcı veri iletişim protokolü (UDP)](#user-datagram-protocol-udp)"
      },
      {
        "row": 6,
        "rowsha": "I2t/fHZ28vdN/2ND7hDJZbu2QPELe9UstISo3dL6LV0=",
        "originContent": "    * [Remote procedure call (RPC)](#remote-procedure-call-rpc)",
        "translatedContent": "    * [Uzaktan prosedür çağrısı (RPC)](#remote-procedure-call-rpc)"
      },
      {
        "row": 7,
        "rowsha": "Ba8C1OKWxXEo4fBLiKU/mP3ajlM2m9BeD0n2y73g0UU=",
        "originContent": "    * [Representational state transfer (REST)](#representational-state-transfer-rest)",
        "translatedContent": "    * [Temsili durum aktarımı (REST)](#representational-state-transfer-rest)"
      },
      {
        "row": 8,
        "rowsha": "oq278APmo1WDG0a5/vZcIyBMqNT8pDqxOS4Ke6sAbHE=",
        "originContent": "* [Security](#security)",
        "translatedContent": "* [Güvenlik](#security)"
      },
      {
        "row": 9,
        "rowsha": "ff/6f0MtGHzmKEB+lY9ekx2HPxp0Qg/O7ANiXOo2kSw=",
        "originContent": "* [Appendix](#appendix)",
        "translatedContent": "* [Ekler](#appendix)"
      },
      {
        "row": 10,
        "rowsha": "AwfW+Wqxu32D+DBal/PNaY9F96/dVARQ1nObwFrJWCU=",
        "originContent": "    * [Powers of two table](#powers-of-two-table)",
        "translatedContent": "    * [İki tabanı kuvvetler tablosu](#powers-of-two-table)"
      },
      {
        "row": 11,
        "rowsha": "C/pqTblctNi9RCuIC3u1t0N2vg4eEjh1k/3siW05KQY=",
        "originContent": "    * [Latency numbers every programmer should know](#latency-numbers-every-programmer-should-know)",
        "translatedContent": "    * [Her programcının bilmesi gereken gecikme değerleri](#latency-numbers-every-programmer-should-know)"
      },
      {
        "row": 12,
        "rowsha": "WtwxC6ASWbl1bkZGpyWq/zx2mACBAXg1duymuhroZyE=",
        "originContent": "    * [Additional system design interview questions](#additional-system-design-interview-questions)",
        "translatedContent": "    * [Ek sistem tasarımı mülakat soruları](#additional-system-design-interview-questions)"
      },
      {
        "row": 13,
        "rowsha": "7/ATFxcicSoIcmNw0DAArF3OJc0pQnWwu5B/iL4F/FY=",
        "originContent": "    * [Real world architectures](#real-world-architectures)",
        "translatedContent": "    * [Gerçek dünya mimarileri](#real-world-architectures)"
      },
      {
        "row": 14,
        "rowsha": "1eSLWlu9SYGwGW0AaaTzCSNqQ8p03y4UxuwWxQJNcCg=",
        "originContent": "    * [Company architectures](#company-architectures)",
        "translatedContent": "    * [Şirket mimarileri](#company-architectures)"
      },
      {
        "row": 15,
        "rowsha": "1bI/gLnWRhVsqogNuH3g+AwCB3hvrTmSX4xquwtPBFs=",
        "originContent": "    * [Company engineering blogs](#company-engineering-blogs)",
        "translatedContent": "    * [Şirket mühendislik blogları](#company-engineering-blogs)"
      },
      {
        "row": 16,
        "rowsha": "dTOO2RtvdkGmX2HXQH1DoKsL14wdsZJzSXaPXYGKcrM=",
        "originContent": "* [Under development](#under-development)",
        "translatedContent": "* [Geliştirilmekte](#under-development)"
      },
      {
        "row": 17,
        "rowsha": "YUXtm7kEjiRCwkV06yM8SYdamuU7Z5IdpxADiVeAfIg=",
        "originContent": "* [Credits](#credits)",
        "translatedContent": "* [Katkıda Bulunanlar](#credits)"
      },
      {
        "row": 18,
        "rowsha": "J4G0+7NptorR63ExXbXrIyRMBnY5VmIay4XGYhpFXyg=",
        "originContent": "* [Contact info](#contact-info)",
        "translatedContent": "* [İletişim bilgisi](#contact-info)"
      },
      {
        "row": 19,
        "rowsha": "9gXKKKb5FUd9fO2TD3aeraF4h1bOfl2toIPXJSxUxlw=",
        "originContent": "* [License](#license)",
        "translatedContent": "* [Lisans](#license)"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "pkA29PuoVCQYq4GoB2nRj+0O3rox4V+hbAii1lgeS+A=",
        "originContent": "## Study guide",
        "translatedContent": "## Çalışma rehberi"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "Q78kczp0KdJN6QQTqgSg/ROsm+L2ETHNTlBUI13TbwI=",
        "originContent": "> Suggested topics to review based on your interview timeline (short, medium, long).",
        "translatedContent": "> Mülakat zaman çizelgenize göre incelenmesi önerilen konular (kısa, orta, uzun)."
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "w/WdknbLjXs44iZhY7FdPLN1IV5zaVcCSV7W/Bl3L1M=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/OfVllex.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/OfVllex.png)"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "/cmnXl2Jxz0I2rB2LZxPGjII65j+L433/ejs+afLIIw=",
        "originContent": "**Q: For interviews, do I need to know everything here?**",
        "translatedContent": "**S: Mülakatlar için burada her şeyi bilmem gerekiyor mu?**"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "KiIfXE+Ejcpuax4zdrNsjjvlP+x+3g3+3g/BRZ+cuUE=",
        "originContent": "**A: No, you don't need to know everything here to prepare for the interview**.",
        "translatedContent": "**C: Hayır, mülakat için hazırlıkta burada her şeyi bilmenize gerek yok**."
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "SEgrI4VTYzTth28Bo7zrD2L6iulYNtlYKOzDbX1hNVk=",
        "originContent": "What you are asked in an interview depends on variables such as:",
        "translatedContent": "Bir mülakatta size sorulanlar şu değişkenlere bağlıdır:"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "DyOrEhJ4UB8J7BvfLZD1jgDifNI81bUuQxbel5zSXOc=",
        "originContent": "* How much experience you have",
        "translatedContent": "* Ne kadar deneyiminiz olduğu"
      },
      {
        "row": 34,
        "rowsha": "uVZgAo6EsfEaAGXSN/yrAEJY9oQ8sapayEDid9Z1VkU=",
        "originContent": "* What your technical background is",
        "translatedContent": "* Teknik geçmişinizin ne olduğu"
      },
      {
        "row": 35,
        "rowsha": "0uNitbVaITxnPuiMkEPHrnS6k2ERQgluU9XvO/WpRDM=",
        "originContent": "* What positions you are interviewing for",
        "translatedContent": "* Hangi pozisyonlar için görüşme yaptığınız"
      },
      {
        "row": 36,
        "rowsha": "uGoBghIUM+lnf4dp6dRE+KdoTaao3ICICYQ3ekv33VY=",
        "originContent": "* Which companies you are interviewing with",
        "translatedContent": "* Hangi şirketlerle görüştüğünüz"
      },
      {
        "row": 37,
        "rowsha": "VkiuZxZEumFuqlmHNADyzkijscMW3TgNFUWGb3HUvYM=",
        "originContent": "* Luck",
        "translatedContent": "* Şans"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "NlZ76DoNuWHLZ56TrHW+8Jop5zRsIi5eVNw0tKfWwXM=",
        "originContent": "More experienced candidates are generally expected to know more about system design.  Architects or team leads might be expected to know more than individual contributors.  Top tech companies are likely to have one or more design interview rounds.",
        "translatedContent": "Daha deneyimli adayların genellikle sistem tasarımı hakkında daha fazla bilgi sahibi olması beklenir.  Mimarlar veya takım liderlerinden bireysel katkı sağlayanlardan daha fazla bilgi beklenebilir.  En iyi teknoloji şirketlerinde bir veya daha fazla tasarım mülakatı turu olma olasılığı yüksektir."
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 7,
    "Content": "Start broad and go deeper in a few areas.  It helps to know a little about various key system design topics.  Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.\n\n* **Short timeline** - Aim for **breadth** with system design topics.  Practice by solving **some** interview questions.\n* **Medium timeline** - Aim for **breadth** and **some depth** with system design topics.  Practice by solving **many** interview questions.\n* **Long timeline** - Aim for **breadth** and **more depth** with system design topics.  Practice by solving **most** interview questions.\n\n| | Short | Medium | Long |\n|---|---|---|---|\n| Read through the [System design topics](#index-of-system-design-topics) to get a broad understanding of how systems work | :+1: | :+1: | :+1: |\n| Read through a few articles in the [Company engineering blogs](#company-engineering-blogs) for the companies you are interviewing with | :+1: | :+1: | :+1: |\n| Read through a few [Real world architectures](#real-world-architectures) | :+1: | :+1: | :+1: |\n| Review [How to approach a system design interview question](#how-to-approach-a-system-design-interview-question) | :+1: | :+1: | :+1: |\n| Work through [System design interview questions with solutions](#system-design-interview-questions-with-solutions) | Some | Many | Most |\n| Work through [Object-oriented design interview questions with solutions](#object-oriented-design-interview-questions-with-solutions) | Some | Many | Most |\n| Review [Additional system design interview questions](#additional-system-design-interview-questions) | Some | Many | Most |\n\n## How to approach a system design interview question\n\n> How to tackle a system design interview question.\n\nThe system design interview is an **open-ended conversation**.  You are expected to lead it.\n\nYou can use the following steps to guide the discussion.  To help solidify this process, work through the [System design interview questions with solutions](#system-design-interview-questions-with-solutions) section using the following steps.\n\n### Step 1: Outline use cases, constraints, and assumptions\n\nGather requirements and scope the problem.  Ask questions to clarify use cases and constraints.  Discuss assumptions.\n\n* Who is going to use it?\n* How are they going to use it?\n* How many users are there?\n* What does the system do?\n* What are the inputs and outputs of the system?\n* How much data do we expect to handle?\n* How many requests per second do we expect?\n* What is the expected read to write ratio?\n\n### Step 2: Create a high level design\n\nOutline a high level design with all important components.",
    "ContentSha": "0rdWLVZbH/nPM3xkHGejRJHpsR4f8urb5LkuDcPAbZM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Geniş başlayın ve birkaç alanda derinleşin.  Farklı anahtar sistem tasarımı konuları hakkında biraz bilgi sahibi olmak faydalıdır.  Aşağıdaki rehberi zaman çizelgenize, deneyiminize, başvurduğunuz pozisyonlara ve görüşme yaptığınız şirketlere göre uyarlayın.\n\n* **Kısa zaman çizelgesi** - Sistem tasarım konularında **genişlik** hedefleyin.  **Bazı** mülakat sorularını çözerek pratik yapın.\n* **Orta zaman çizelgesi** - Sistem tasarım konularında **genişlik** ve **biraz derinlik** hedefleyin.  **Birçok** mülakat sorusunu çözerek pratik yapın.\n* **Uzun zaman çizelgesi** - Sistem tasarım konularında **genişlik** ve **daha fazla derinlik** hedefleyin.  **Çoğu** mülakat sorusunu çözerek pratik yapın.\n\n| | Kısa | Orta | Uzun |\n|---|---|---|---|\n| Sistemlerin nasıl çalıştığına dair genel bir anlayış kazanmak için [Sistem tasarımı konuları](#index-of-system-design-topics) bölümünü okuyun | :+1: | :+1: | :+1: |\n| Görüşme yaptığınız şirketler için [Şirket mühendislik bloglarından](#company-engineering-blogs) birkaç makale okuyun | :+1: | :+1: | :+1: |\n| Birkaç [Gerçek dünya mimarisi](#real-world-architectures) örneğini gözden geçirin | :+1: | :+1: | :+1: |\n| [Sistem tasarımı mülakat sorusuna nasıl yaklaşılır](#how-to-approach-a-system-design-interview-question) bölümünü gözden geçirin | :+1: | :+1: | :+1: |\n| [Çözümlü sistem tasarımı mülakat soruları](#system-design-interview-questions-with-solutions) üzerinde çalışın | Bazı | Birçok | Çoğu |\n| [Çözümlü nesne yönelimli tasarım mülakat soruları](#object-oriented-design-interview-questions-with-solutions) üzerinde çalışın | Bazı | Birçok | Çoğu |\n| [Ek sistem tasarımı mülakat soruları](#additional-system-design-interview-questions) bölümünü gözden geçirin | Bazı | Birçok | Çoğu |\n\n## Sistem tasarımı mülakat sorusuna nasıl yaklaşılır\n\n> Bir sistem tasarımı mülakat sorusu nasıl ele alınır.\n\nSistem tasarımı mülakatı **açık uçlu bir konuşmadır**.  Bunu yönlendiren kişi olmanız beklenir.\n\nAşağıdaki adımları tartışmayı yönlendirmek için kullanabilirsiniz.  Bu süreci pekiştirmek için, [Çözümlü sistem tasarımı mülakat soruları](#system-design-interview-questions-with-solutions) bölümünü aşağıdaki adımları kullanarak inceleyin.\n\n### Adım 1: Kullanım senaryolarını, kısıtlamaları ve varsayımları ana hatlarıyla belirtin\n\nGereksinimleri toplayın ve problemi kapsamlandırın.  Kullanım senaryoları ve kısıtlamaları netleştirmek için sorular sorun.  Varsayımları tartışın.\n\n* Kim kullanacak?\n* Nasıl kullanacaklar?\n* Kaç kullanıcı var?\n* Sistem ne yapıyor?\n* Sistemin girdileri ve çıktıları nelerdir?\n* Ne kadar veriyle ilgileneceğiz?\n* Saniyede kaç istek bekliyoruz?\n* Beklenen okuma/yazma oranı nedir?\n\n### Adım 2: Yüksek seviyeli bir tasarım oluşturun\n\nTüm önemli bileşenlerle yüksek seviyeli bir tasarım ana hatlarını çizin.",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "SNIA3o4Zdm0GipnTURRr6LLC5xntTaBp1rDZU9eR0dg=",
        "originContent": "Start broad and go deeper in a few areas.  It helps to know a little about various key system design topics.  Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.",
        "translatedContent": "Geniş başlayın ve birkaç alanda derinleşin.  Farklı anahtar sistem tasarımı konuları hakkında biraz bilgi sahibi olmak faydalıdır.  Aşağıdaki rehberi zaman çizelgenize, deneyiminize, başvurduğunuz pozisyonlara ve görüşme yaptığınız şirketlere göre uyarlayın."
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "APprvXVZXhoF3eG3JK9VPbp0/iBscnCVVtS2tsFOgg8=",
        "originContent": "* **Short timeline** - Aim for **breadth** with system design topics.  Practice by solving **some** interview questions.",
        "translatedContent": "* **Kısa zaman çizelgesi** - Sistem tasarım konularında **genişlik** hedefleyin.  **Bazı** mülakat sorularını çözerek pratik yapın."
      },
      {
        "row": 4,
        "rowsha": "ADXWP0iSVhOOvWH3xlFzTarvxFCgR8nGMIlVcLkCgrE=",
        "originContent": "* **Medium timeline** - Aim for **breadth** and **some depth** with system design topics.  Practice by solving **many** interview questions.",
        "translatedContent": "* **Orta zaman çizelgesi** - Sistem tasarım konularında **genişlik** ve **biraz derinlik** hedefleyin.  **Birçok** mülakat sorusunu çözerek pratik yapın."
      },
      {
        "row": 5,
        "rowsha": "7SYTlgZLwo5IszPycuCkSwiIgIeG4MoFB4OUmGHNq9E=",
        "originContent": "* **Long timeline** - Aim for **breadth** and **more depth** with system design topics.  Practice by solving **most** interview questions.",
        "translatedContent": "* **Uzun zaman çizelgesi** - Sistem tasarım konularında **genişlik** ve **daha fazla derinlik** hedefleyin.  **Çoğu** mülakat sorusunu çözerek pratik yapın."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "9ubyW9Q8WZyzbbpxkOGzpyAgn+ErJRiPxoAf3B1+npI=",
        "originContent": "| | Short | Medium | Long |",
        "translatedContent": "| | Kısa | Orta | Uzun |"
      },
      {
        "row": 8,
        "rowsha": "TaHsb0d4IJAQLcFr2peO+1ZV+/Ldzg+E7PH695qTDy0=",
        "originContent": "|---|---|---|---|",
        "translatedContent": "|---|---|---|---|"
      },
      {
        "row": 9,
        "rowsha": "iSwmLEDPCeVIpT4oqn8Da9T805AcRJWbIPhLuv3TFDQ=",
        "originContent": "| Read through the [System design topics](#index-of-system-design-topics) to get a broad understanding of how systems work | :+1: | :+1: | :+1: |",
        "translatedContent": "| Sistemlerin nasıl çalıştığına dair genel bir anlayış kazanmak için [Sistem tasarımı konuları](#index-of-system-design-topics) bölümünü okuyun | :+1: | :+1: | :+1: |"
      },
      {
        "row": 10,
        "rowsha": "/U1scGwmSquckFPkDMstzK594t9Yh9z+UF1v3T3o8dg=",
        "originContent": "| Read through a few articles in the [Company engineering blogs](#company-engineering-blogs) for the companies you are interviewing with | :+1: | :+1: | :+1: |",
        "translatedContent": "| Görüşme yaptığınız şirketler için [Şirket mühendislik bloglarından](#company-engineering-blogs) birkaç makale okuyun | :+1: | :+1: | :+1: |"
      },
      {
        "row": 11,
        "rowsha": "uvAtVAF9aYtpwaZ2xWi796KENLUKG609T9b/ShsgTgI=",
        "originContent": "| Read through a few [Real world architectures](#real-world-architectures) | :+1: | :+1: | :+1: |",
        "translatedContent": "| Birkaç [Gerçek dünya mimarisi](#real-world-architectures) örneğini gözden geçirin | :+1: | :+1: | :+1: |"
      },
      {
        "row": 12,
        "rowsha": "bks/6OaX0tTDUOx+I44XG55gMbEUWylOT9UWWHm1F8Y=",
        "originContent": "| Review [How to approach a system design interview question](#how-to-approach-a-system-design-interview-question) | :+1: | :+1: | :+1: |",
        "translatedContent": "| [Sistem tasarımı mülakat sorusuna nasıl yaklaşılır](#how-to-approach-a-system-design-interview-question) bölümünü gözden geçirin | :+1: | :+1: | :+1: |"
      },
      {
        "row": 13,
        "rowsha": "fc+sbOekuddiU1ZTlyY+2ndV0/T5foQKhmEPsOl92QA=",
        "originContent": "| Work through [System design interview questions with solutions](#system-design-interview-questions-with-solutions) | Some | Many | Most |",
        "translatedContent": "| [Çözümlü sistem tasarımı mülakat soruları](#system-design-interview-questions-with-solutions) üzerinde çalışın | Bazı | Birçok | Çoğu |"
      },
      {
        "row": 14,
        "rowsha": "eiunWCO/vn1yPsHkE92DdPpJr9ejQPdQ6OX5byfJE04=",
        "originContent": "| Work through [Object-oriented design interview questions with solutions](#object-oriented-design-interview-questions-with-solutions) | Some | Many | Most |",
        "translatedContent": "| [Çözümlü nesne yönelimli tasarım mülakat soruları](#object-oriented-design-interview-questions-with-solutions) üzerinde çalışın | Bazı | Birçok | Çoğu |"
      },
      {
        "row": 15,
        "rowsha": "imyixE9xkYCw9ldxREhHRKkugeOG/JoDZeHgmKWNi20=",
        "originContent": "| Review [Additional system design interview questions](#additional-system-design-interview-questions) | Some | Many | Most |",
        "translatedContent": "| [Ek sistem tasarımı mülakat soruları](#additional-system-design-interview-questions) bölümünü gözden geçirin | Bazı | Birçok | Çoğu |"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "SEFZnoLgKX5GYcZzfMMx2UcVa/rW0PgfJJPN8Oyigmw=",
        "originContent": "## How to approach a system design interview question",
        "translatedContent": "## Sistem tasarımı mülakat sorusuna nasıl yaklaşılır"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "EBmqGSUbcyaunIhTpF2rm9E/QQTzqZqKWcuyhWFWViw=",
        "originContent": "> How to tackle a system design interview question.",
        "translatedContent": "> Bir sistem tasarımı mülakat sorusu nasıl ele alınır."
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "62lKeIabpcx9OyC0tfG/7xBhY/S6My8Jia+GHrX7RDw=",
        "originContent": "The system design interview is an **open-ended conversation**.  You are expected to lead it.",
        "translatedContent": "Sistem tasarımı mülakatı **açık uçlu bir konuşmadır**.  Bunu yönlendiren kişi olmanız beklenir."
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "ssirbcWvt6KNXQZ9Qn+cZnHwff8sveAOuamap6GdDW4=",
        "originContent": "You can use the following steps to guide the discussion.  To help solidify this process, work through the [System design interview questions with solutions](#system-design-interview-questions-with-solutions) section using the following steps.",
        "translatedContent": "Aşağıdaki adımları tartışmayı yönlendirmek için kullanabilirsiniz.  Bu süreci pekiştirmek için, [Çözümlü sistem tasarımı mülakat soruları](#system-design-interview-questions-with-solutions) bölümünü aşağıdaki adımları kullanarak inceleyin."
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "g/AAuZkvyL/kmKACkaQdEDyPBRjvsIKtPGBhDecoBt0=",
        "originContent": "### Step 1: Outline use cases, constraints, and assumptions",
        "translatedContent": "### Adım 1: Kullanım senaryolarını, kısıtlamaları ve varsayımları ana hatlarıyla belirtin"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "u426oQIllXU3QBYctTrH5fZsvBd/FnxOIzVcRmGjM4c=",
        "originContent": "Gather requirements and scope the problem.  Ask questions to clarify use cases and constraints.  Discuss assumptions.",
        "translatedContent": "Gereksinimleri toplayın ve problemi kapsamlandırın.  Kullanım senaryoları ve kısıtlamaları netleştirmek için sorular sorun.  Varsayımları tartışın."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "ZYB7Vgm75fttaAWBi4OXuzYlmy2Rqs9I94b4uw3M+98=",
        "originContent": "* Who is going to use it?",
        "translatedContent": "* Kim kullanacak?"
      },
      {
        "row": 30,
        "rowsha": "ZVFCVHGlD9Tg5LQyoHb7YRtW/AEv36v6L1zKTiB9P0Y=",
        "originContent": "* How are they going to use it?",
        "translatedContent": "* Nasıl kullanacaklar?"
      },
      {
        "row": 31,
        "rowsha": "NNJIWR0UaiI4xQTFPpNRTh8dWErgWLTwetr/vYaeUDk=",
        "originContent": "* How many users are there?",
        "translatedContent": "* Kaç kullanıcı var?"
      },
      {
        "row": 32,
        "rowsha": "WpsuKkJ3vG0G6WpKbH7swYHJCe3FeZGz6DX51dwgprE=",
        "originContent": "* What does the system do?",
        "translatedContent": "* Sistem ne yapıyor?"
      },
      {
        "row": 33,
        "rowsha": "zyUvqreHsTuM5upvOBdEYLO18OEo1j5JZvwsW26xRcM=",
        "originContent": "* What are the inputs and outputs of the system?",
        "translatedContent": "* Sistemin girdileri ve çıktıları nelerdir?"
      },
      {
        "row": 34,
        "rowsha": "M+/skSeqc+Kr0oZURcbgKzA8lFVLTBa8ZkkezW5xYe8=",
        "originContent": "* How much data do we expect to handle?",
        "translatedContent": "* Ne kadar veriyle ilgileneceğiz?"
      },
      {
        "row": 35,
        "rowsha": "wWQUtkw7SSXqT0xZeorBHJb4jM/9nMeQNd1nM0xP+i4=",
        "originContent": "* How many requests per second do we expect?",
        "translatedContent": "* Saniyede kaç istek bekliyoruz?"
      },
      {
        "row": 36,
        "rowsha": "awh+n8TFHHMyLHIDXahUBuhPUv2kyDmGPLsN8jHlBa4=",
        "originContent": "* What is the expected read to write ratio?",
        "translatedContent": "* Beklenen okuma/yazma oranı nedir?"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "2y98k60lgFqEObXP9Evv+4U7hADGpthi9IKwC9GdX7U=",
        "originContent": "### Step 2: Create a high level design",
        "translatedContent": "### Adım 2: Yüksek seviyeli bir tasarım oluşturun"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "ShMefyWY9vD8sZojhWGQTcpi5IknT20fWYnS5qOH40k=",
        "originContent": "Outline a high level design with all important components.",
        "translatedContent": "Tüm önemli bileşenlerle yüksek seviyeli bir tasarım ana hatlarını çizin."
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 8,
    "Content": "\n* Sketch the main components and connections\n* Justify your ideas\n\n### Step 3: Design core components\n\nDive into details for each core component.  For example, if you were asked to [design a url shortening service](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md), discuss:\n\n* Generating and storing a hash of the full url\n    * [MD5](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) and [Base62](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)\n    * Hash collisions\n    * SQL or NoSQL\n    * Database schema\n* Translating a hashed url to the full url\n    * Database lookup\n* API and object-oriented design\n\n### Step 4: Scale the design\n\nIdentify and address bottlenecks, given the constraints.  For example, do you need the following to address scalability issues?\n\n* Load balancer\n* Horizontal scaling\n* Caching\n* Database sharding\n\nDiscuss potential solutions and trade-offs.  Everything is a trade-off.  Address bottlenecks using [principles of scalable system design](#index-of-system-design-topics).\n\n### Back-of-the-envelope calculations\n\nYou might be asked to do some estimates by hand.  Refer to the [Appendix](#appendix) for the following resources:\n\n* [Use back of the envelope calculations](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)\n* [Powers of two table](#powers-of-two-table)\n* [Latency numbers every programmer should know](#latency-numbers-every-programmer-should-know)\n\n### Source(s) and further reading\n\nCheck out the following links to get a better idea of what to expect:\n",
    "ContentSha": "3x8iTXwR6ek+uAlSMupV1OgJsT8IwtVYxDBvXMFsB/g=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n* Ana bileşenleri ve bağlantıları taslağını çıkarın\n* Fikirlerinizi gerekçelendirin\n\n### Adım 3: Temel bileşenleri tasarlayın\n\nHer temel bileşenin ayrıntılarına inin.  Örneğin, [bir url kısaltma servisi tasarlamanız](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) istenirse, şunları tartışın:\n\n* Tam url'nin bir hash'inin oluşturulması ve saklanması\n    * [MD5](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) ve [Base62](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)\n    * Hash çakışmaları\n    * SQL veya NoSQL\n    * Veritabanı şeması\n* Hashlenmiş url'nin tam url'ye çevrilmesi\n    * Veritabanı sorgusu\n* API ve nesne tabanlı tasarım\n\n### Adım 4: Tasarımı ölçeklendirin\n\nKısıtlamalar dikkate alındığında darboğazları belirleyin ve ele alın.  Örneğin, ölçeklenebilirlik sorunlarını çözmek için aşağıdakilere ihtiyacınız var mı?\n\n* Yük dengeleyici\n* Yatay ölçeklendirme\n* Önbellekleme\n* Veritabanı bölümlendirme\n\nOlası çözümleri ve takasları tartışın.  Her şey bir takastır.  Darboğazları [ölçeklenebilir sistem tasarımının prensipleri](#index-of-system-design-topics) ile ele alın.\n\n### Kabaca hesaplamalar\n\nBazı tahminleri elle yapmanız istenebilir.  [Ek](#appendix) bölümünde aşağıdaki kaynaklara başvurun:\n\n* [Kabaca hesaplamalar kullanın](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)\n* [İki'nin kuvvetleri tablosu](#powers-of-two-table)\n* [Her programcının bilmesi gereken gecikme rakamları](#latency-numbers-every-programmer-should-know)\n\n### Kaynak(lar) ve ileri okuma\n\nBeklentilerinizi daha iyi anlamak için aşağıdaki bağlantılara göz atın:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "U27CMtCga11B+lhjY/Gfa6kyyajXoMr9mJ2rHTimlc8=",
        "originContent": "* Sketch the main components and connections",
        "translatedContent": "* Ana bileşenleri ve bağlantıları taslağını çıkarın"
      },
      {
        "row": 3,
        "rowsha": "bNwx3GZvsDBhNsC3kREcodXP7Il7SB7K49qytDkWeCY=",
        "originContent": "* Justify your ideas",
        "translatedContent": "* Fikirlerinizi gerekçelendirin"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "LcrIuJbweDykbrtYihaAOMSR/DEWfrO6HmvZJRktK48=",
        "originContent": "### Step 3: Design core components",
        "translatedContent": "### Adım 3: Temel bileşenleri tasarlayın"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "XmQinwyPHiJWAOeoKvrtbJNfPPpRvP/332oZ0AxnFIs=",
        "originContent": "Dive into details for each core component.  For example, if you were asked to [design a url shortening service](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md), discuss:",
        "translatedContent": "Her temel bileşenin ayrıntılarına inin.  Örneğin, [bir url kısaltma servisi tasarlamanız](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) istenirse, şunları tartışın:"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "eUNlQzq7tAqTf1e6qYbSNPis8YbTKSrLfy7DtLodTAo=",
        "originContent": "* Generating and storing a hash of the full url",
        "translatedContent": "* Tam url'nin bir hash'inin oluşturulması ve saklanması"
      },
      {
        "row": 10,
        "rowsha": "jGcHvLTPBxpJtqfRcku9M/Se24yoG2e6zWM6ykZNGH0=",
        "originContent": "    * [MD5](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) and [Base62](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)",
        "translatedContent": "    * [MD5](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) ve [Base62](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)"
      },
      {
        "row": 11,
        "rowsha": "/Lg06Hv6vd+VihWbM3xNVinte1JZX1ZmWfL7sau6OTU=",
        "originContent": "    * Hash collisions",
        "translatedContent": "    * Hash çakışmaları"
      },
      {
        "row": 12,
        "rowsha": "CpfFFdAOO914zjF8AnWcCiRp/dFxSfhBu4xqD4JKQLs=",
        "originContent": "    * SQL or NoSQL",
        "translatedContent": "    * SQL veya NoSQL"
      },
      {
        "row": 13,
        "rowsha": "QZ4fmpKQ53P5ic20X8K10tQ8MNbNV7Bqq+z3quSwWX4=",
        "originContent": "    * Database schema",
        "translatedContent": "    * Veritabanı şeması"
      },
      {
        "row": 14,
        "rowsha": "fCFo/wGYaDJUSva0xz1uDUaphw0ay9iHB1lP9GImAPM=",
        "originContent": "* Translating a hashed url to the full url",
        "translatedContent": "* Hashlenmiş url'nin tam url'ye çevrilmesi"
      },
      {
        "row": 15,
        "rowsha": "sTSUDYlnS2yNoPTIw5WpAquWW7q5qVdh8cU5hGsAoAU=",
        "originContent": "    * Database lookup",
        "translatedContent": "    * Veritabanı sorgusu"
      },
      {
        "row": 16,
        "rowsha": "RFEuA4sZ3xOJYAUMGGdsIFC22p4mKfqiVUs5k0CDlUM=",
        "originContent": "* API and object-oriented design",
        "translatedContent": "* API ve nesne tabanlı tasarım"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "oEnBtR+2UQj/a2ntVw4si8hESUAkA7pQDiXs+JS2i7A=",
        "originContent": "### Step 4: Scale the design",
        "translatedContent": "### Adım 4: Tasarımı ölçeklendirin"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "/S0/1A+ljnuBHmZ1BrciwM7aZgV6VjqyOXrmyF8NEtc=",
        "originContent": "Identify and address bottlenecks, given the constraints.  For example, do you need the following to address scalability issues?",
        "translatedContent": "Kısıtlamalar dikkate alındığında darboğazları belirleyin ve ele alın.  Örneğin, ölçeklenebilirlik sorunlarını çözmek için aşağıdakilere ihtiyacınız var mı?"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "WHX53gtEKOGGmNumFoFgZdDBItuO8RGaS4y0YR6DzHU=",
        "originContent": "* Load balancer",
        "translatedContent": "* Yük dengeleyici"
      },
      {
        "row": 23,
        "rowsha": "8WMxYHS7bcb9ujutc5oNdciUky0lpTe1OWwf0aQLPtY=",
        "originContent": "* Horizontal scaling",
        "translatedContent": "* Yatay ölçeklendirme"
      },
      {
        "row": 24,
        "rowsha": "KwFOX2+m+5jw+o1TS7IAfPEjVtO8acfjUoASy/7hzV4=",
        "originContent": "* Caching",
        "translatedContent": "* Önbellekleme"
      },
      {
        "row": 25,
        "rowsha": "Qhp9XMPjmJxweEazgKatdafXI0F4kBAj20eMCty2Z6U=",
        "originContent": "* Database sharding",
        "translatedContent": "* Veritabanı bölümlendirme"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "+C2wS9CYBXEcil8inp5fzfeS6ihDXA46KjkAglCk/UM=",
        "originContent": "Discuss potential solutions and trade-offs.  Everything is a trade-off.  Address bottlenecks using [principles of scalable system design](#index-of-system-design-topics).",
        "translatedContent": "Olası çözümleri ve takasları tartışın.  Her şey bir takastır.  Darboğazları [ölçeklenebilir sistem tasarımının prensipleri](#index-of-system-design-topics) ile ele alın."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "65fg+RfTRxsiQ8Lb+bdR+4kGz9EA7OARQTqASHFZhQA=",
        "originContent": "### Back-of-the-envelope calculations",
        "translatedContent": "### Kabaca hesaplamalar"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "DjmbBNFtax26TU0ZuQz7vD1aQYMiyBvXZyY1+z5xJlE=",
        "originContent": "You might be asked to do some estimates by hand.  Refer to the [Appendix](#appendix) for the following resources:",
        "translatedContent": "Bazı tahminleri elle yapmanız istenebilir.  [Ek](#appendix) bölümünde aşağıdaki kaynaklara başvurun:"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "Ps8ZZyaG1tgfwlYTr1UYAuIsUHLMLpnRN+Xy/+yCOGw=",
        "originContent": "* [Use back of the envelope calculations](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)",
        "translatedContent": "* [Kabaca hesaplamalar kullanın](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)"
      },
      {
        "row": 34,
        "rowsha": "k+wFt6Jdc9eBgcfSFqxuP7joVvfg2wCvXiMRTQZe/Qs=",
        "originContent": "* [Powers of two table](#powers-of-two-table)",
        "translatedContent": "* [İki'nin kuvvetleri tablosu](#powers-of-two-table)"
      },
      {
        "row": 35,
        "rowsha": "VVfu5aP/E47faRiVqcZZ1SbeLy6MmMKzGXLkMNcKFZ8=",
        "originContent": "* [Latency numbers every programmer should know](#latency-numbers-every-programmer-should-know)",
        "translatedContent": "* [Her programcının bilmesi gereken gecikme rakamları](#latency-numbers-every-programmer-should-know)"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Kaynak(lar) ve ileri okuma"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "nYzECrLKxvEiF5sIfAJr/QCX0pvtPH8NiVC7VkfAYPA=",
        "originContent": "Check out the following links to get a better idea of what to expect:",
        "translatedContent": "Beklentilerinizi daha iyi anlamak için aşağıdaki bağlantılara göz atın:"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 9,
    "Content": "* [How to ace a systems design interview](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)\n* [The system design interview](http://www.hiredintech.com/system-design)\n* [Intro to Architecture and Systems Design Interviews](https://www.youtube.com/watch?v=ZgdS0EUmn70)\n* [System design template](https://leetcode.com/discuss/career/229177/My-System-Design-Template)\n\n## System design interview questions with solutions\n\n> Common system design interview questions with sample discussions, code, and diagrams.\n>\n> Solutions linked to content in the `solutions/` folder.\n\n| Question | |\n|---|---|\n| Design Pastebin.com (or Bit.ly) | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) |\n| Design the Twitter timeline and search (or Facebook feed and search) | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md) |\n| Design a web crawler | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md) |\n| Design Mint.com | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md) |\n| Design the data structures for a social network | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md) |\n| Design a key-value store for a search engine | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md) |\n| Design Amazon's sales ranking by category feature | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md) |\n| Design a system that scales to millions of users on AWS | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md) |\n| Add a system design question | [Contribute](#contributing) |\n\n### Design Pastebin.com (or Bit.ly)\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4edXG0T.png)\n\n### Design the Twitter timeline and search (or Facebook feed and search)\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png)\n\n### Design a web crawler\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bWxPtQA.png)",
    "ContentSha": "AHgKOfvgyoP47Euk86jhd2olVjkmP2nZB6tXbpOIqic=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Bir sistem tasarımı mülakatını nasıl başarıyla geçersiniz](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)\n* [Sistem tasarımı mülakatı](http://www.hiredintech.com/system-design)\n* [Mimariye ve Sistem Tasarımı Mülakatlarına Giriş](https://www.youtube.com/watch?v=ZgdS0EUmn70)\n* [Sistem tasarımı şablonu](https://leetcode.com/discuss/career/229177/My-System-Design-Template)\n\n## Çözümleriyle sistem tasarımı mülakat soruları\n\n> Yaygın sistem tasarımı mülakat soruları örnek tartışmalar, kod ve diyagramlarla birlikte.\n>\n> Çözümler `solutions/` klasöründeki içeriklere bağlantılıdır.\n\n| Soru | |\n|---|---|\n| Pastebin.com (veya Bit.ly) tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) |\n| Twitter zaman akışı ve arama (veya Facebook akışı ve arama) tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md) |\n| Bir web gezgini tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md) |\n| Mint.com’u tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md) |\n| Bir sosyal ağ için veri yapılarını tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md) |\n| Bir arama motoru için anahtar-değer deposu tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md) |\n| Amazon’un kategoriye göre satış sıralama özelliğini tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md) |\n| AWS üzerinde milyonlarca kullanıcıya ölçeklenebilen bir sistem tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md) |\n| Bir sistem tasarımı sorusu ekleyin | [Katkıda Bulunun](#contributing) |\n\n### Pastebin.com’u (veya Bit.ly) tasarlayın\n\n[Alıştırmayı ve çözümü görüntüle](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4edXG0T.png)\n\n### Twitter zaman akışı ve aramayı (veya Facebook akışı ve arama) tasarlayın\n\n[Alıştırmayı ve çözümü görüntüle](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png)\n\n### Bir web gezgini tasarlayın\n\n[Alıştırmayı ve çözümü görüntüle](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bWxPtQA.png)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "JZq01FMZ7R3Ugi6/9OGB59UgMoIhdLWL3o1YUqT3JeA=",
        "originContent": "* [How to ace a systems design interview](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)",
        "translatedContent": "* [Bir sistem tasarımı mülakatını nasıl başarıyla geçersiniz](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)"
      },
      {
        "row": 2,
        "rowsha": "vT0KOyNKYP7aARQ+UVu1d8DA5r8brjZMPgnNCdgLOnE=",
        "originContent": "* [The system design interview](http://www.hiredintech.com/system-design)",
        "translatedContent": "* [Sistem tasarımı mülakatı](http://www.hiredintech.com/system-design)"
      },
      {
        "row": 3,
        "rowsha": "JdeppIgnkeI5NAIAVuhPX5MnQmcpsEHkbOaKUktOTDs=",
        "originContent": "* [Intro to Architecture and Systems Design Interviews](https://www.youtube.com/watch?v=ZgdS0EUmn70)",
        "translatedContent": "* [Mimariye ve Sistem Tasarımı Mülakatlarına Giriş](https://www.youtube.com/watch?v=ZgdS0EUmn70)"
      },
      {
        "row": 4,
        "rowsha": "My4lyUxXdCQfPaerGVV1echlO4+ad0vsLUdKDOAclS4=",
        "originContent": "* [System design template](https://leetcode.com/discuss/career/229177/My-System-Design-Template)",
        "translatedContent": "* [Sistem tasarımı şablonu](https://leetcode.com/discuss/career/229177/My-System-Design-Template)"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "Wm0HclDfbvVAjGfZ/34OYjH4SX0sZcp1TSJ/0X+bOB8=",
        "originContent": "## System design interview questions with solutions",
        "translatedContent": "## Çözümleriyle sistem tasarımı mülakat soruları"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "x0b9VxHLB05SuXQs4/HOOO+Yit7Vfqcy4T5e3vxvCxU=",
        "originContent": "> Common system design interview questions with sample discussions, code, and diagrams.",
        "translatedContent": "> Yaygın sistem tasarımı mülakat soruları örnek tartışmalar, kod ve diyagramlarla birlikte."
      },
      {
        "row": 9,
        "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
        "originContent": ">",
        "translatedContent": ">"
      },
      {
        "row": 10,
        "rowsha": "UIYFxoHN2Dw+rs8eSRF3XAnGJg4Qh/X19PdV8ctDSws=",
        "originContent": "> Solutions linked to content in the `solutions/` folder.",
        "translatedContent": "> Çözümler `solutions/` klasöründeki içeriklere bağlantılıdır."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "fL6dVdOyhJWflSfPRLCV16KaGdqzm694OpjPV8IcgO4=",
        "originContent": "| Question | |",
        "translatedContent": "| Soru | |"
      },
      {
        "row": 13,
        "rowsha": "QZm6RU1tOug2VxIMK7a9Z07vwN19PNTMhEFx3GclE1s=",
        "originContent": "|---|---|",
        "translatedContent": "|---|---|"
      },
      {
        "row": 14,
        "rowsha": "2ePVBCIO2j42UPrbl5IRtcOKI/QHhZK87NbMU1UwEG8=",
        "originContent": "| Design Pastebin.com (or Bit.ly) | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) |",
        "translatedContent": "| Pastebin.com (veya Bit.ly) tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) |"
      },
      {
        "row": 15,
        "rowsha": "SjBQjlRPHhEDyUjsMWmZ9RCP/AVE7OURIG878hbb83c=",
        "originContent": "| Design the Twitter timeline and search (or Facebook feed and search) | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md) |",
        "translatedContent": "| Twitter zaman akışı ve arama (veya Facebook akışı ve arama) tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md) |"
      },
      {
        "row": 16,
        "rowsha": "W/S+LhKK8/zee7Nc93d7c38Oy4o26u8CA1MiqnsgfcA=",
        "originContent": "| Design a web crawler | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md) |",
        "translatedContent": "| Bir web gezgini tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md) |"
      },
      {
        "row": 17,
        "rowsha": "13x0MJi2Wd5HdX4O5r+AyIUeajf5OEqAgG+yAZjTG3I=",
        "originContent": "| Design Mint.com | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md) |",
        "translatedContent": "| Mint.com’u tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md) |"
      },
      {
        "row": 18,
        "rowsha": "UBU8QBY0lWgEcb96V6lnhfkNic0fauJdQBuCURs0Y10=",
        "originContent": "| Design the data structures for a social network | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md) |",
        "translatedContent": "| Bir sosyal ağ için veri yapılarını tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md) |"
      },
      {
        "row": 19,
        "rowsha": "SSpyp3aQ9GVNS2G0dKmLwor4UmXnIjBxxN1g+ejUHcw=",
        "originContent": "| Design a key-value store for a search engine | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md) |",
        "translatedContent": "| Bir arama motoru için anahtar-değer deposu tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md) |"
      },
      {
        "row": 20,
        "rowsha": "TXmWqp3bFaa1WLo4Rk7nTXsciVXWegUnDOIQoc1naT8=",
        "originContent": "| Design Amazon's sales ranking by category feature | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md) |",
        "translatedContent": "| Amazon’un kategoriye göre satış sıralama özelliğini tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md) |"
      },
      {
        "row": 21,
        "rowsha": "BEyLN0lmG0HdpY1rP86XnVyFvrAaeoYPov7Su3Zv0eA=",
        "originContent": "| Design a system that scales to millions of users on AWS | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md) |",
        "translatedContent": "| AWS üzerinde milyonlarca kullanıcıya ölçeklenebilen bir sistem tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md) |"
      },
      {
        "row": 22,
        "rowsha": "rxZ/1ZcyqiWhJo83Zu2JZADx1pvrsk1TTCEtxi+B8tg=",
        "originContent": "| Add a system design question | [Contribute](#contributing) |",
        "translatedContent": "| Bir sistem tasarımı sorusu ekleyin | [Katkıda Bulunun](#contributing) |"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "AyFUnZUQuFRxhqUdGSvBhXkOvM6HJsY7TJKU9g88eM8=",
        "originContent": "### Design Pastebin.com (or Bit.ly)",
        "translatedContent": "### Pastebin.com’u (veya Bit.ly) tasarlayın"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "TwBCQr1u0cwTgeKsXvI89s/9ZvvPL1SMjf0E+iIAF2o=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)",
        "translatedContent": "[Alıştırmayı ve çözümü görüntüle](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "L4TdGLmd94A8zT+dng4pdeIuDEBxyB9bv6DCXFY+YIo=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4edXG0T.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4edXG0T.png)"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "QQw7BOpizsv7c05rVC55faErxy3Oi9OGV0atdtJ5Ivk=",
        "originContent": "### Design the Twitter timeline and search (or Facebook feed and search)",
        "translatedContent": "### Twitter zaman akışı ve aramayı (veya Facebook akışı ve arama) tasarlayın"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "nqYzQZvIbefn8sWT6PZ4P23+9kIXX5M27R0zvhZ4sfE=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md)",
        "translatedContent": "[Alıştırmayı ve çözümü görüntüle](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md)"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "KI7sS2pfc93vBt6T0SCIl4yGZYqnqPwEoK6HQ7UnHFk=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png)"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "RIHPI9tK8yPnkh3BYkrRNAIfaIqtJbkl9reHz9DvlFk=",
        "originContent": "### Design a web crawler",
        "translatedContent": "### Bir web gezgini tasarlayın"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "tr3611asvPDSMwY78/NysccFuuF4Hwfud4fnfch8L5Q=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md)",
        "translatedContent": "[Alıştırmayı ve çözümü görüntüle](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md)"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "LsWHuTLmDVHI9pPDc379T6Wr3HnA6wKsIWWiOyC37Gw=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bWxPtQA.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bWxPtQA.png)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 10,
    "Content": "\n### Design Mint.com\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/V5q57vU.png)\n\n### Design the data structures for a social network\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/cdCv5g7.png)\n\n### Design a key-value store for a search engine\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4j99mhe.png)\n\n### Design Amazon's sales ranking by category feature\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/MzExP06.png)\n\n### Design a system that scales to millions of users on AWS\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png)\n\n## Object-oriented design interview questions with solutions\n\n> Common object-oriented design interview questions with sample discussions, code, and diagrams.\n>\n> Solutions linked to content in the `solutions/` folder.\n\n>**Note: This section is under development**\n\n| Question | |",
    "ContentSha": "o3sbdfQZN6cWPJee4lAmThiTo/ED2IUg9UbWh2T8Jr8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n### Design Mint.com\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/V5q57vU.png)\n\n### Design the data structures for a social network\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/cdCv5g7.png)\n\n### Design a key-value store for a search engine\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4j99mhe.png)\n\n### Design Amazon's sales ranking by category feature\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/MzExP06.png)\n\n### Design a system that scales to millions of users on AWS\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png)\n\n## Object-oriented design interview questions with solutions\n\n> Common object-oriented design interview questions with sample discussions, code, and diagrams.\n>\n> Solutions linked to content in the `solutions/` folder.\n\n>**Note: This section is under development**\n\n| Question | |",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "Z70n1c0z611YlpFC3cbdBkm2uAdhpiapPfCLkrsodt8=",
        "originContent": "### Design Mint.com",
        "translatedContent": "### Design Mint.com"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "m2sKrx6ciHia1U6xLgdz+36L/1uQBgwSKYIL0IILu0k=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md)",
        "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md)"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "row6BSJ3dm10Zf9SJGYFcwTF0nNSngS96+2ksRu4+xM=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/V5q57vU.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/V5q57vU.png)"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "Zh0JZFuHPsfD2ELWz55xBw9p2XgwYBDT6YJPmEf8peA=",
        "originContent": "### Design the data structures for a social network",
        "translatedContent": "### Design the data structures for a social network"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "XR9bVutKIjD6NzcMuHURs04GWLd1GXFsCguk0p8A+R8=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md)",
        "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md)"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "rQXHpQ4THUMtAB3E6yZCt1WchGmDogbHwC9KOSQyqe4=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/cdCv5g7.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/cdCv5g7.png)"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "APqd5Nl4LjEmEpwjDT3FpQTAGp1MyRAzhGJTV1joCBU=",
        "originContent": "### Design a key-value store for a search engine",
        "translatedContent": "### Design a key-value store for a search engine"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "GPMYLZTxFEn6DfcHc5gWor8cAoJH0cRt+DqA4zvhv40=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md)",
        "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md)"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "KUcHqu8H0iGtpvHVM/Zg/o79TeFcnhZdksTPXRwiBd0=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4j99mhe.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4j99mhe.png)"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "CCycVwc5+7egryiA3USoK3P2853OEDaXVS+RjT8WuXs=",
        "originContent": "### Design Amazon's sales ranking by category feature",
        "translatedContent": "### Design Amazon's sales ranking by category feature"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "UBz7wstVm2yG896uPlRd5n0TqxpNpK0jBGzLzReX9Ok=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md)",
        "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md)"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "pT/hFkcmu4ShOM0RUwFdDjlFbexfY+nIJrZvLWKqqRA=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/MzExP06.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/MzExP06.png)"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "B8BNlQlT2br97d0uMqCR/qzkT9M5ZAiIXk8YRi5qeEw=",
        "originContent": "### Design a system that scales to millions of users on AWS",
        "translatedContent": "### Design a system that scales to millions of users on AWS"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "s93+WkpF9jFO0b66NLcdz7uW5iEt+f+ptGtO3apyQVY=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md)",
        "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md)"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "dZMrgCGx97CQFQkfN8XHhnusO1qCvdu6nlw5Q2/G4L8=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png)"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "Q+kNWMOzdwBD1PoA7dz8gMlukagyIprLzVlXt0OshNI=",
        "originContent": "## Object-oriented design interview questions with solutions",
        "translatedContent": "## Object-oriented design interview questions with solutions"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "CgwVtP87mnERjRiCIfjhgg+CJeMyE8OR0kHe0JnR7mg=",
        "originContent": "> Common object-oriented design interview questions with sample discussions, code, and diagrams.",
        "translatedContent": "> Common object-oriented design interview questions with sample discussions, code, and diagrams."
      },
      {
        "row": 35,
        "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
        "originContent": ">",
        "translatedContent": ">"
      },
      {
        "row": 36,
        "rowsha": "UIYFxoHN2Dw+rs8eSRF3XAnGJg4Qh/X19PdV8ctDSws=",
        "originContent": "> Solutions linked to content in the `solutions/` folder.",
        "translatedContent": "> Solutions linked to content in the `solutions/` folder."
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "OPbO4oAHMZaRZyRPUSGO/P8ICXTL/JZHlCogsaJ1+HM=",
        "originContent": ">**Note: This section is under development**",
        "translatedContent": ">**Note: This section is under development**"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "fL6dVdOyhJWflSfPRLCV16KaGdqzm694OpjPV8IcgO4=",
        "originContent": "| Question | |",
        "translatedContent": "| Question | |"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 11,
    "Content": "|---|---|\n| Design a hash map | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/hash_map.ipynb)  |\n| Design a least recently used cache | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/lru_cache.ipynb)  |\n| Design a call center | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/call_center.ipynb)  |\n| Design a deck of cards | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb)  |\n| Design a parking lot | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/parking_lot.ipynb)  |\n| Design a chat server | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/online_chat.ipynb)  |\n| Design a circular array | [Contribute](#contributing)  |\n| Add an object-oriented design question | [Contribute](#contributing) |\n\n## System design topics: start here\n\nNew to system design?\n\nFirst, you'll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.\n\n### Step 1: Review the scalability video lecture\n\n[Scalability Lecture at Harvard](https://www.youtube.com/watch?v=-W9F__D3oY4)\n\n* Topics covered:\n    * Vertical scaling\n    * Horizontal scaling\n    * Caching\n    * Load balancing\n    * Database replication\n    * Database partitioning\n\n### Step 2: Review the scalability article\n\n[Scalability](https://web.archive.org/web/20221030091841/http://www.lecloud.net/tagged/scalability/chrono)\n\n* Topics covered:\n    * [Clones](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n    * [Databases](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n    * [Caches](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n    * [Asynchronism](https://web.archive.org/web/20220926171507/https://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)\n\n### Next steps\n",
    "ContentSha": "x8nrhrohPoZjm2NWw4mmB3mvJSUCp+CF0oOOqij1Y4E=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "|---|---|\n| Bir hash haritası tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/hash_map.ipynb)  |\n| En son kullanılmayan önbellek tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/lru_cache.ipynb)  |\n| Bir çağrı merkezi tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/call_center.ipynb)  |\n| Bir kart destesini tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb)  |\n| Bir otopark tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/parking_lot.ipynb)  |\n| Bir sohbet sunucusu tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/online_chat.ipynb)  |\n| Dairesel bir dizi tasarlayın | [Katkıda Bulunun](#contributing)  |\n| Nesne tabanlı bir tasarım sorusu ekleyin | [Katkıda Bulunun](#contributing) |\n\n## Sistem tasarımı konuları: buradan başlayın\n\nSistem tasarımına yeni misiniz?\n\nÖncelikle, yaygın prensipleri temel olarak anlamanız gerekecek, bunların ne olduklarını, nasıl kullanıldıklarını ve avantaj-dezavantajlarını öğrenmeniz gerekir.\n\n### Adım 1: Ölçeklenebilirlik video dersini inceleyin\n\n[Harvard'da Ölçeklenebilirlik Dersi](https://www.youtube.com/watch?v=-W9F__D3oY4)\n\n* Kapsanan konular:\n    * Dikey ölçeklendirme\n    * Yatay ölçeklendirme\n    * Önbellekleme\n    * Yük dengeleme\n    * Veritabanı çoğaltması\n    * Veritabanı bölümlendirmesi\n\n### Adım 2: Ölçeklenebilirlik makalesini inceleyin\n\n[Ölçeklenebilirlik](https://web.archive.org/web/20221030091841/http://www.lecloud.net/tagged/scalability/chrono)\n\n* Kapsanan konular:\n    * [Klonlar](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n    * [Veritabanları](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n    * [Önbellekler](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n    * [Asenkronluk](https://web.archive.org/web/20220926171507/https://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)\n\n### Sonraki adımlar\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "QZm6RU1tOug2VxIMK7a9Z07vwN19PNTMhEFx3GclE1s=",
        "originContent": "|---|---|",
        "translatedContent": "|---|---|"
      },
      {
        "row": 2,
        "rowsha": "2QdA3ToO4pyxt/k4Rsdq1Awxu0imsAsbDhz4PPkJF4U=",
        "originContent": "| Design a hash map | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/hash_map.ipynb)  |",
        "translatedContent": "| Bir hash haritası tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/hash_map.ipynb)  |"
      },
      {
        "row": 3,
        "rowsha": "lrvDo/ah5N+BTKS5SlE7jTgjeY4cfIOz/dbiDOiGtjc=",
        "originContent": "| Design a least recently used cache | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/lru_cache.ipynb)  |",
        "translatedContent": "| En son kullanılmayan önbellek tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/lru_cache.ipynb)  |"
      },
      {
        "row": 4,
        "rowsha": "pxzMT7UkKJRMnrEb8eDjG+i7QfYBmZJjyBZT3cbWBbk=",
        "originContent": "| Design a call center | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/call_center.ipynb)  |",
        "translatedContent": "| Bir çağrı merkezi tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/call_center.ipynb)  |"
      },
      {
        "row": 5,
        "rowsha": "ypj/Vm97p0gDoz0fCuLVQ/ACJNGHDd9yyD5s+gFDjlE=",
        "originContent": "| Design a deck of cards | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb)  |",
        "translatedContent": "| Bir kart destesini tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb)  |"
      },
      {
        "row": 6,
        "rowsha": "EmLapRk7TPIZxVJtZyj3zRbh5ToKVyf0H8z2hbDaCSc=",
        "originContent": "| Design a parking lot | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/parking_lot.ipynb)  |",
        "translatedContent": "| Bir otopark tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/parking_lot.ipynb)  |"
      },
      {
        "row": 7,
        "rowsha": "QNkYLz7qR9e7SvPlsneEJicEyVWeRQw6oHpVpeLDais=",
        "originContent": "| Design a chat server | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/online_chat.ipynb)  |",
        "translatedContent": "| Bir sohbet sunucusu tasarlayın | [Çözüm](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/online_chat.ipynb)  |"
      },
      {
        "row": 8,
        "rowsha": "mOdLv2EWN9Lf+NNdJ/eEBId3d3E+cKoo1QRAF2+99J0=",
        "originContent": "| Design a circular array | [Contribute](#contributing)  |",
        "translatedContent": "| Dairesel bir dizi tasarlayın | [Katkıda Bulunun](#contributing)  |"
      },
      {
        "row": 9,
        "rowsha": "nB2uFn5GaCVTh8i6Af3EaXpxUiROqDfEQiLobOWPsP8=",
        "originContent": "| Add an object-oriented design question | [Contribute](#contributing) |",
        "translatedContent": "| Nesne tabanlı bir tasarım sorusu ekleyin | [Katkıda Bulunun](#contributing) |"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "arhOWm58Vc+xFI/cfG7V/R9cIHjm4Qug8hYYoFZeSJM=",
        "originContent": "## System design topics: start here",
        "translatedContent": "## Sistem tasarımı konuları: buradan başlayın"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "CHDyvxilPe7RXBI9jMcIpXBk9me7DOGrOeYdC+uNRzY=",
        "originContent": "New to system design?",
        "translatedContent": "Sistem tasarımına yeni misiniz?"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "c2tA63dXRIB/yW0GbTS2uOdAvgMUZbWtk1JGrt+qtDQ=",
        "originContent": "First, you'll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.",
        "translatedContent": "Öncelikle, yaygın prensipleri temel olarak anlamanız gerekecek, bunların ne olduklarını, nasıl kullanıldıklarını ve avantaj-dezavantajlarını öğrenmeniz gerekir."
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "D3WxUh7/m2uYtMsEsSnjStbvhi0Wn2XeuCb2o68xh/A=",
        "originContent": "### Step 1: Review the scalability video lecture",
        "translatedContent": "### Adım 1: Ölçeklenebilirlik video dersini inceleyin"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "ulaQKhoMVOKNtoitlnCbWFzSjLiY+5eaamEvyJUUIwg=",
        "originContent": "[Scalability Lecture at Harvard](https://www.youtube.com/watch?v=-W9F__D3oY4)",
        "translatedContent": "[Harvard'da Ölçeklenebilirlik Dersi](https://www.youtube.com/watch?v=-W9F__D3oY4)"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "PmcGFaviQjBOTD9h802f01HLHZnipOMGGyGuQYgZzWo=",
        "originContent": "* Topics covered:",
        "translatedContent": "* Kapsanan konular:"
      },
      {
        "row": 22,
        "rowsha": "+NE0o6JdfvsRP1kadSKrkQqzLsJCIzB4TunjG4sR7xI=",
        "originContent": "    * Vertical scaling",
        "translatedContent": "    * Dikey ölçeklendirme"
      },
      {
        "row": 23,
        "rowsha": "EFSiVOYxQOK6mFbxYxtQFlI6tBgMtOmAO6BGXWwSMxQ=",
        "originContent": "    * Horizontal scaling",
        "translatedContent": "    * Yatay ölçeklendirme"
      },
      {
        "row": 24,
        "rowsha": "k+uphKPYtGN7Zv8xw56Qf7aan81aVyYclpJen/6joAQ=",
        "originContent": "    * Caching",
        "translatedContent": "    * Önbellekleme"
      },
      {
        "row": 25,
        "rowsha": "407c0kbfPUL5XRnljnX1eQU0iO23sEkOW1v9g9GgLc4=",
        "originContent": "    * Load balancing",
        "translatedContent": "    * Yük dengeleme"
      },
      {
        "row": 26,
        "rowsha": "bGH4DDiXVueqa6Sb001uMTcRzYqOKc60sR2/OQh/KQk=",
        "originContent": "    * Database replication",
        "translatedContent": "    * Veritabanı çoğaltması"
      },
      {
        "row": 27,
        "rowsha": "NajI8TNJiGszx1I4uXW4FknYHaYu2zANs5msZE9YqVI=",
        "originContent": "    * Database partitioning",
        "translatedContent": "    * Veritabanı bölümlendirmesi"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "m7luAJjdrWUmT7f3B7GInMgCd51cjwj6y7JzIJ59D1M=",
        "originContent": "### Step 2: Review the scalability article",
        "translatedContent": "### Adım 2: Ölçeklenebilirlik makalesini inceleyin"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "COsWTWKNpduFy26W7EALBCq8NJhP/aKZ19PMRF+7QEw=",
        "originContent": "[Scalability](https://web.archive.org/web/20221030091841/http://www.lecloud.net/tagged/scalability/chrono)",
        "translatedContent": "[Ölçeklenebilirlik](https://web.archive.org/web/20221030091841/http://www.lecloud.net/tagged/scalability/chrono)"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "PmcGFaviQjBOTD9h802f01HLHZnipOMGGyGuQYgZzWo=",
        "originContent": "* Topics covered:",
        "translatedContent": "* Kapsanan konular:"
      },
      {
        "row": 34,
        "rowsha": "YIurhpqysBrCWripZpbCypmaT1be8EbECETaTJsR92Y=",
        "originContent": "    * [Clones](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)",
        "translatedContent": "    * [Klonlar](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)"
      },
      {
        "row": 35,
        "rowsha": "0retISbnsAzQ7BSwPmGKO9LgJue1jDVN7lH2FDu5UYY=",
        "originContent": "    * [Databases](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)",
        "translatedContent": "    * [Veritabanları](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)"
      },
      {
        "row": 36,
        "rowsha": "PQhhAW6YOeFz76/F+8aY8npUJgee+WO85EKx+nEz1Fw=",
        "originContent": "    * [Caches](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)",
        "translatedContent": "    * [Önbellekler](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)"
      },
      {
        "row": 37,
        "rowsha": "9eYB6eVCDukkMl3A9M6grq+RmlkMJEw5RRGKWMpmi/A=",
        "originContent": "    * [Asynchronism](https://web.archive.org/web/20220926171507/https://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)",
        "translatedContent": "    * [Asenkronluk](https://web.archive.org/web/20220926171507/https://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "eWO1dBlvofnKonHt7aPex1kVvTYRVQ3hKIUgwLpAd4U=",
        "originContent": "### Next steps",
        "translatedContent": "### Sonraki adımlar"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 12,
    "Content": "Next, we'll look at high-level trade-offs:\n\n* **Performance** vs **scalability**\n* **Latency** vs **throughput**\n* **Availability** vs **consistency**\n\nKeep in mind that **everything is a trade-off**.\n\nThen we'll dive into more specific topics such as DNS, CDNs, and load balancers.\n\n## Performance vs scalability\n\nA service is **scalable** if it results in increased **performance** in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.<sup><a href=http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html>1</a></sup>\n\nAnother way to look at performance vs scalability:\n\n* If you have a **performance** problem, your system is slow for a single user.\n* If you have a **scalability** problem, your system is fast for a single user but slow under heavy load.\n\n### Source(s) and further reading\n\n* [A word on scalability](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)\n* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n\n## Latency vs throughput\n\n**Latency** is the time to perform some action or to produce some result.\n\n**Throughput** is the number of such actions or results per unit of time.\n\nGenerally, you should aim for **maximal throughput** with **acceptable latency**.\n\n### Source(s) and further reading\n\n* [Understanding latency vs throughput](https://community.cadence.com/cadence_blogs_8/b/fv/posts/understanding-latency-vs-throughput)\n\n## Availability vs consistency\n\n### CAP theorem\n",
    "ContentSha": "3J96fMtAPtZfNniAS7/6wzXl1ty5ntM4Q00EOxpO0Ww=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Şimdi, üst düzey değiş-tokuşlara bakacağız:\n\n* **Performans** ve **ölçeklenebilirlik**\n* **Gecikme** ve **verim**\n* **Kullanılabilirlik** ve **tutarlılık**\n\nUnutmayın ki **her şey bir değiş-tokuştur**.\n\nDaha sonra DNS, CDN'ler ve yük dengeleyicileri gibi daha spesifik konulara ineceğiz.\n\n## Performans ve ölçeklenebilirlik\n\nBir hizmet, eklenen kaynaklarla orantılı şekilde artan **performans** sağlıyorsa **ölçeklenebilirdir**. Genellikle, performansı artırmak daha fazla iş birimi sunmak anlamına gelir, ancak büyüyen veri kümeleri gibi daha büyük iş birimlerini işlemek için de olabilir.<sup><a href=http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html>1</a></sup>\n\nPerformans ve ölçeklenebilirliğe başka bir bakış açısı:\n\n* Eğer bir **performans** sorununuz varsa, sisteminiz tek bir kullanıcı için yavaştır.\n* Eğer bir **ölçeklenebilirlik** sorununuz varsa, sisteminiz tek bir kullanıcı için hızlıdır ancak yoğun yük altında yavaştır.\n\n### Kaynak(lar) ve daha fazla okuma\n\n* [Ölçeklenebilirlik üzerine bir söz](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)\n* [Ölçeklenebilirlik, kullanılabilirlik, stabilite, desenler](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n\n## Gecikme ve verim\n\n**Gecikme**, bir işlemi gerçekleştirmek veya bir sonuç üretmek için geçen süredir.\n\n**Verim**, birim zamanda gerçekleştirilen bu tür eylemlerin veya sonuçların sayısıdır.\n\nGenel olarak, **maksimum verim** ile **kabul edilebilir gecikme** hedeflemelisiniz.\n\n### Kaynak(lar) ve daha fazla okuma\n\n* [Gecikme ve verimi anlamak](https://community.cadence.com/cadence_blogs_8/b/fv/posts/understanding-latency-vs-throughput)\n\n## Kullanılabilirlik ve tutarlılık\n\n### CAP teoremi\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "w5ale8hz4+kzLxu7uiLtVoxNGptZYMZHSlXiDlswaV4=",
        "originContent": "Next, we'll look at high-level trade-offs:",
        "translatedContent": "Şimdi, üst düzey değiş-tokuşlara bakacağız:"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "qjQR69Oqu/Ppx/QEUCXOVf8HSq3hdrKRXN/K0v151UI=",
        "originContent": "* **Performance** vs **scalability**",
        "translatedContent": "* **Performans** ve **ölçeklenebilirlik**"
      },
      {
        "row": 4,
        "rowsha": "r3x4pHAC13jllWyYMHWjaKkPKk5eM1+gx4X/TaFyVZ4=",
        "originContent": "* **Latency** vs **throughput**",
        "translatedContent": "* **Gecikme** ve **verim**"
      },
      {
        "row": 5,
        "rowsha": "CKMTr1nwKiaF4FBVBp66Dd8DM4OFjqws2rra99rZBeU=",
        "originContent": "* **Availability** vs **consistency**",
        "translatedContent": "* **Kullanılabilirlik** ve **tutarlılık**"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "BOXdYl9vca02Z3PZ2pO8gNPE3LLFbmA+uVjOXAuhCO8=",
        "originContent": "Keep in mind that **everything is a trade-off**.",
        "translatedContent": "Unutmayın ki **her şey bir değiş-tokuştur**."
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "2sU/n2/WW3n3LLjJf3daj3gcusdL91FrhECkSwsNJgY=",
        "originContent": "Then we'll dive into more specific topics such as DNS, CDNs, and load balancers.",
        "translatedContent": "Daha sonra DNS, CDN'ler ve yük dengeleyicileri gibi daha spesifik konulara ineceğiz."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "n4v15WZxT30GmzQrN9CJC0XxUj4ETeGuVkj09xC62wI=",
        "originContent": "## Performance vs scalability",
        "translatedContent": "## Performans ve ölçeklenebilirlik"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "s35a9eckE4u5exNg0801iQzscZvMCQh5pGhf9evcMgQ=",
        "originContent": "A service is **scalable** if it results in increased **performance** in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.<sup><a href=http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html>1</a></sup>",
        "translatedContent": "Bir hizmet, eklenen kaynaklarla orantılı şekilde artan **performans** sağlıyorsa **ölçeklenebilirdir**. Genellikle, performansı artırmak daha fazla iş birimi sunmak anlamına gelir, ancak büyüyen veri kümeleri gibi daha büyük iş birimlerini işlemek için de olabilir.<sup><a href=http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html>1</a></sup>"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "HydEOXM0gkztwS0PDpMrgRBaBb/yk8phPtxtjAVyY0Y=",
        "originContent": "Another way to look at performance vs scalability:",
        "translatedContent": "Performans ve ölçeklenebilirliğe başka bir bakış açısı:"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "btMHSVZTmJ5UzfgLgm6bftc5h3AJT1Q7WHQEpAJa8ec=",
        "originContent": "* If you have a **performance** problem, your system is slow for a single user.",
        "translatedContent": "* Eğer bir **performans** sorununuz varsa, sisteminiz tek bir kullanıcı için yavaştır."
      },
      {
        "row": 18,
        "rowsha": "CHPqEu2pDW0TkoRc4PkM1QsO5rMSROI479UtM7RqFa8=",
        "originContent": "* If you have a **scalability** problem, your system is fast for a single user but slow under heavy load.",
        "translatedContent": "* Eğer bir **ölçeklenebilirlik** sorununuz varsa, sisteminiz tek bir kullanıcı için hızlıdır ancak yoğun yük altında yavaştır."
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Kaynak(lar) ve daha fazla okuma"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "dKS13QqkW+Ee0EVYJziJLDbdGEeKaG4MhHpvPhu4NBY=",
        "originContent": "* [A word on scalability](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)",
        "translatedContent": "* [Ölçeklenebilirlik üzerine bir söz](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)"
      },
      {
        "row": 23,
        "rowsha": "UVMSE1BpfAJjZtNGckenaHDWkkWMyRCmwx5PRWNWv7Q=",
        "originContent": "* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)",
        "translatedContent": "* [Ölçeklenebilirlik, kullanılabilirlik, stabilite, desenler](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "pIcmd9Ok4wS7SK2kGjcasX6gCZt9Iyr/ONy7tV8RBhA=",
        "originContent": "## Latency vs throughput",
        "translatedContent": "## Gecikme ve verim"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "uAyLmcNrOnxEO9RvTH4Tf/lPBawSOz/tXkmVf4fvQwg=",
        "originContent": "**Latency** is the time to perform some action or to produce some result.",
        "translatedContent": "**Gecikme**, bir işlemi gerçekleştirmek veya bir sonuç üretmek için geçen süredir."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "UXYkFqk5HnCl9VP+s6Q8J3qML8wZPfBH6SKgvNExDJY=",
        "originContent": "**Throughput** is the number of such actions or results per unit of time.",
        "translatedContent": "**Verim**, birim zamanda gerçekleştirilen bu tür eylemlerin veya sonuçların sayısıdır."
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "ddvH5bSPUrL82qxnSSyRVDfheIpLurqnmcPqY6Fkoaw=",
        "originContent": "Generally, you should aim for **maximal throughput** with **acceptable latency**.",
        "translatedContent": "Genel olarak, **maksimum verim** ile **kabul edilebilir gecikme** hedeflemelisiniz."
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Kaynak(lar) ve daha fazla okuma"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "1Mg+XGLcrADURPRAwJDF1FedcQn0eLdImMGtq7Aqk+o=",
        "originContent": "* [Understanding latency vs throughput](https://community.cadence.com/cadence_blogs_8/b/fv/posts/understanding-latency-vs-throughput)",
        "translatedContent": "* [Gecikme ve verimi anlamak](https://community.cadence.com/cadence_blogs_8/b/fv/posts/understanding-latency-vs-throughput)"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "u6u1s0A21U4gZ3z8N1KkPOoHCuCwd9eMuyqjlTDX6pI=",
        "originContent": "## Availability vs consistency",
        "translatedContent": "## Kullanılabilirlik ve tutarlılık"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "97t+nC0PgzkOTtQkgr6wHX3tstyuYoxvUco0kEP/bCI=",
        "originContent": "### CAP theorem",
        "translatedContent": "### CAP teoremi"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 13,
    "Content": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bgLMI2u.png\">\n  <br/>\n  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>Source: CAP theorem revisited</a></i>\n</p>\n\nIn a distributed computer system, you can only support two of the following guarantees:\n\n* **Consistency** - Every read receives the most recent write or an error\n* **Availability** - Every request receives a response, without guarantee that it contains the most recent version of the information\n* **Partition Tolerance** - The system continues to operate despite arbitrary partitioning due to network failures\n\n*Networks aren't reliable, so you'll need to support partition tolerance.  You'll need to make a software tradeoff between consistency and availability.*\n\n#### CP - consistency and partition tolerance\n\nWaiting for a response from the partitioned node might result in a timeout error.  CP is a good choice if your business needs require atomic reads and writes.\n\n#### AP - availability and partition tolerance\n\nResponses return the most readily available version of the data available on any node, which might not be the latest.  Writes might take some time to propagate when the partition is resolved.\n\nAP is a good choice if the business needs to allow for [eventual consistency](#eventual-consistency) or when the system needs to continue working despite external errors.\n\n### Source(s) and further reading\n\n* [CAP theorem revisited](http://robertgreiner.com/2014/08/cap-theorem-revisited/)\n* [A plain english introduction to CAP theorem](http://ksat.me/a-plain-english-introduction-to-cap-theorem)\n* [CAP FAQ](https://github.com/henryr/cap-faq)\n* [The CAP theorem](https://www.youtube.com/watch?v=k-Yaq8AHlFA)\n\n## Consistency patterns\n\nWith multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data.  Recall the definition of consistency from the [CAP theorem](#cap-theorem) - Every read receives the most recent write or an error.\n\n### Weak consistency\n\nAfter a write, reads may or may not see it.  A best effort approach is taken.\n\nThis approach is seen in systems such as memcached.  Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games.  For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.",
    "ContentSha": "nlNKM8AB14RiMLs0dLLz8tVwgOHTXV/u3ObIx3G8az4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bgLMI2u.png\">\n  <br/>\n  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>Kaynak: CAP teoremi yeniden gözden geçirildi</a></i>\n</p>\n\nDağıtık bir bilgisayar sisteminde, aşağıdaki garantilerden yalnızca ikisini destekleyebilirsiniz:\n\n* **Tutarlılık (Consistency)** - Her okuma en güncel yazımı veya bir hata alır\n* **Kullanılabilirlik (Availability)** - Her istek bir yanıt alır, fakat yanıtın en güncel bilgi versiyonunu içerdiği garanti edilmez\n* **Bölüm Toleransı (Partition Tolerance)** - Sistem, ağ hataları nedeniyle oluşan keyfi bölümlere rağmen çalışmaya devam eder\n\n*Ağlar güvenilir değildir, bu yüzden bölüm toleransını desteklemeniz gerekir.  Tutarlılık ve kullanılabilirlik arasında bir yazılım takası yapmanız gerekir.*\n\n#### CP - tutarlılık ve bölüm toleransı\n\nBölünmüş düğümden yanıt beklemek, zaman aşımı hatasına yol açabilir.  İşletme ihtiyaçlarınız atomik okuma ve yazmalar gerektiriyorsa CP iyi bir seçimdir.\n\n#### AP - kullanılabilirlik ve bölüm toleransı\n\nYanıtlar, herhangi bir düğümde en kolay erişilebilir veri versiyonunu döndürür; bu veri en güncel olmayabilir.  Bölünme çözüldüğünde yazıların yayılması biraz zaman alabilir.\n\nAP, işletme ihtiyaçlarının [sonunda tutarlılık](#eventual-consistency) gerektirdiği durumlarda veya sistemin dışsal hatalara rağmen çalışmaya devam etmesi gerektiğinde iyi bir seçimdir.\n\n### Kaynak(lar) ve daha fazla okuma\n\n* [CAP teoremi yeniden gözden geçirildi](http://robertgreiner.com/2014/08/cap-theorem-revisited/)\n* [CAP teoreminin sade İngilizce tanıtımı](http://ksat.me/a-plain-english-introduction-to-cap-theorem)\n* [CAP SSS](https://github.com/henryr/cap-faq)\n* [CAP teoremi](https://www.youtube.com/watch?v=k-Yaq8AHlFA)\n\n## Tutarlılık desenleri\n\nAynı verinin birden fazla kopyası olduğunda, bunları nasıl senkronize edeceğimize dair seçeneklerle karşılaşırız ki istemciler verinin tutarlı bir görünümüne sahip olsun.  [CAP teoremi](#cap-theorem) tanımını hatırlayın - Her okuma en güncel yazımı veya bir hata alır.\n\n### Zayıf tutarlılık\n\nBir yazımdan sonra, okumalar bu yazımı görebilir veya görmeyebilir.  En iyi çaba yaklaşımı kullanılır.\n\nBu yaklaşım memcached gibi sistemlerde görülür.  Zayıf tutarlılık, VoIP, video sohbet ve gerçek zamanlı çok oyunculu oyunlar gibi gerçek zamanlı kullanım senaryolarında iyi çalışır.  Örneğin, bir telefon görüşmesindeyken birkaç saniye bağlantıyı kaybederseniz, yeniden bağlantı sağladığınızda bağlantı kaybı sırasında konuşulanları duymazsınız.",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 2,
        "rowsha": "jgmIqgvDNG0HkCp5oQZz/iT86R/pkHxAeSzmaNcZxVQ=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bgLMI2u.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bgLMI2u.png\">"
      },
      {
        "row": 3,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 4,
        "rowsha": "3mZNt6MqcNn59CWaPOMoi80BHG/vsKxSIM8NxQhBFy0=",
        "originContent": "  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>Source: CAP theorem revisited</a></i>",
        "translatedContent": "  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>Kaynak: CAP teoremi yeniden gözden geçirildi</a></i>"
      },
      {
        "row": 5,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "IUMlHVhfX48rYJ/eyAKcFR60Q5UjNwbsQIrBWlm5CY0=",
        "originContent": "In a distributed computer system, you can only support two of the following guarantees:",
        "translatedContent": "Dağıtık bir bilgisayar sisteminde, aşağıdaki garantilerden yalnızca ikisini destekleyebilirsiniz:"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "4YITw6Yuz+YdKMpwQXjeVICm0gpuIDn+670bEw2eplY=",
        "originContent": "* **Consistency** - Every read receives the most recent write or an error",
        "translatedContent": "* **Tutarlılık (Consistency)** - Her okuma en güncel yazımı veya bir hata alır"
      },
      {
        "row": 10,
        "rowsha": "10D71q/vlDxfFvH3hmZeoYoOwmdp1DEh4AlCXMQWc1I=",
        "originContent": "* **Availability** - Every request receives a response, without guarantee that it contains the most recent version of the information",
        "translatedContent": "* **Kullanılabilirlik (Availability)** - Her istek bir yanıt alır, fakat yanıtın en güncel bilgi versiyonunu içerdiği garanti edilmez"
      },
      {
        "row": 11,
        "rowsha": "YUbXFE9OYJbxAD3eBiqSPLjeLEqWyqBoDWeBtiJ8mtc=",
        "originContent": "* **Partition Tolerance** - The system continues to operate despite arbitrary partitioning due to network failures",
        "translatedContent": "* **Bölüm Toleransı (Partition Tolerance)** - Sistem, ağ hataları nedeniyle oluşan keyfi bölümlere rağmen çalışmaya devam eder"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "vnEv/Z/uqxD0L/zPXD/bCEouBXiT1NPNbGmFoAQVjWU=",
        "originContent": "*Networks aren't reliable, so you'll need to support partition tolerance.  You'll need to make a software tradeoff between consistency and availability.*",
        "translatedContent": "*Ağlar güvenilir değildir, bu yüzden bölüm toleransını desteklemeniz gerekir.  Tutarlılık ve kullanılabilirlik arasında bir yazılım takası yapmanız gerekir.*"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "uIlYGxCSVIcgyiDm+Vd3tc0JXkzQUs9VbyUnliQAWuA=",
        "originContent": "#### CP - consistency and partition tolerance",
        "translatedContent": "#### CP - tutarlılık ve bölüm toleransı"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "Wsm26i8x7ANgoLe/zCnR37/Ob3iojdAMAgKqrnblG14=",
        "originContent": "Waiting for a response from the partitioned node might result in a timeout error.  CP is a good choice if your business needs require atomic reads and writes.",
        "translatedContent": "Bölünmüş düğümden yanıt beklemek, zaman aşımı hatasına yol açabilir.  İşletme ihtiyaçlarınız atomik okuma ve yazmalar gerektiriyorsa CP iyi bir seçimdir."
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "yllXZdNZSLqE7v6J1Y6482RWpgtGblEX58oa3k0eQNE=",
        "originContent": "#### AP - availability and partition tolerance",
        "translatedContent": "#### AP - kullanılabilirlik ve bölüm toleransı"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "L7LPkdcITCSx/6gVeoX43CcXkc359oOep+Xd4kjzmXw=",
        "originContent": "Responses return the most readily available version of the data available on any node, which might not be the latest.  Writes might take some time to propagate when the partition is resolved.",
        "translatedContent": "Yanıtlar, herhangi bir düğümde en kolay erişilebilir veri versiyonunu döndürür; bu veri en güncel olmayabilir.  Bölünme çözüldüğünde yazıların yayılması biraz zaman alabilir."
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "Mln5JY9vdCX6s3ovkGnUqLRk6lI9+mTbPMWiqsLr7xA=",
        "originContent": "AP is a good choice if the business needs to allow for [eventual consistency](#eventual-consistency) or when the system needs to continue working despite external errors.",
        "translatedContent": "AP, işletme ihtiyaçlarının [sonunda tutarlılık](#eventual-consistency) gerektirdiği durumlarda veya sistemin dışsal hatalara rağmen çalışmaya devam etmesi gerektiğinde iyi bir seçimdir."
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Kaynak(lar) ve daha fazla okuma"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "bKtnRMt0x3UQXR6bFUlZ4Zjnkr+AaCv9r8Ou7/kXxx4=",
        "originContent": "* [CAP theorem revisited](http://robertgreiner.com/2014/08/cap-theorem-revisited/)",
        "translatedContent": "* [CAP teoremi yeniden gözden geçirildi](http://robertgreiner.com/2014/08/cap-theorem-revisited/)"
      },
      {
        "row": 28,
        "rowsha": "QTokrC7zed86easKJX11/v1yiJruKlTTNm2aJxJqq88=",
        "originContent": "* [A plain english introduction to CAP theorem](http://ksat.me/a-plain-english-introduction-to-cap-theorem)",
        "translatedContent": "* [CAP teoreminin sade İngilizce tanıtımı](http://ksat.me/a-plain-english-introduction-to-cap-theorem)"
      },
      {
        "row": 29,
        "rowsha": "YJQ7Yvi1cB/F6/Vg3ZZHQC/I3rfVpxuDW2q6zmzAvTs=",
        "originContent": "* [CAP FAQ](https://github.com/henryr/cap-faq)",
        "translatedContent": "* [CAP SSS](https://github.com/henryr/cap-faq)"
      },
      {
        "row": 30,
        "rowsha": "x0HWHwt6C3/aojIbES6hmVMqFF4OD9i/dgpZSjmo+Ts=",
        "originContent": "* [The CAP theorem](https://www.youtube.com/watch?v=k-Yaq8AHlFA)",
        "translatedContent": "* [CAP teoremi](https://www.youtube.com/watch?v=k-Yaq8AHlFA)"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "g21rEtmBOHdt+MTQCrZQZVM2biDUGo45l2NssZ/ldVs=",
        "originContent": "## Consistency patterns",
        "translatedContent": "## Tutarlılık desenleri"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "wp4Nz+J+6m1VKyrRrXtoHDB5VHblNuyNnmnHCgzvJHI=",
        "originContent": "With multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data.  Recall the definition of consistency from the [CAP theorem](#cap-theorem) - Every read receives the most recent write or an error.",
        "translatedContent": "Aynı verinin birden fazla kopyası olduğunda, bunları nasıl senkronize edeceğimize dair seçeneklerle karşılaşırız ki istemciler verinin tutarlı bir görünümüne sahip olsun.  [CAP teoremi](#cap-theorem) tanımını hatırlayın - Her okuma en güncel yazımı veya bir hata alır."
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "mQHbbEHqLiJ19yb2RHsbf9aa9Du0lnYYlq5BBzttXh4=",
        "originContent": "### Weak consistency",
        "translatedContent": "### Zayıf tutarlılık"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "0YCMm2EUA58zDONPNWaCCFsUz1WYFU4jQgxv1w5s8Ew=",
        "originContent": "After a write, reads may or may not see it.  A best effort approach is taken.",
        "translatedContent": "Bir yazımdan sonra, okumalar bu yazımı görebilir veya görmeyebilir.  En iyi çaba yaklaşımı kullanılır."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "H2gyDIKlIlBb2Ta4tN25gjUiCq814kY/i+1lcIXtmdI=",
        "originContent": "This approach is seen in systems such as memcached.  Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games.  For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.",
        "translatedContent": "Bu yaklaşım memcached gibi sistemlerde görülür.  Zayıf tutarlılık, VoIP, video sohbet ve gerçek zamanlı çok oyunculu oyunlar gibi gerçek zamanlı kullanım senaryolarında iyi çalışır.  Örneğin, bir telefon görüşmesindeyken birkaç saniye bağlantıyı kaybederseniz, yeniden bağlantı sağladığınızda bağlantı kaybı sırasında konuşulanları duymazsınız."
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 14,
    "Content": "\n### Eventual consistency\n\nAfter a write, reads will eventually see it (typically within milliseconds).  Data is replicated asynchronously.\n\nThis approach is seen in systems such as DNS and email.  Eventual consistency works well in highly available systems.\n\n### Strong consistency\n\nAfter a write, reads will see it.  Data is replicated synchronously.\n\nThis approach is seen in file systems and RDBMSes.  Strong consistency works well in systems that need transactions.\n\n### Source(s) and further reading\n\n* [Transactions across data centers](http://snarfed.org/transactions_across_datacenters_io.html)\n\n## Availability patterns\n\nThere are two complementary patterns to support high availability: **fail-over** and **replication**.\n\n### Fail-over\n\n#### Active-passive\n\nWith active-passive fail-over, heartbeats are sent between the active and the passive server on standby.  If the heartbeat is interrupted, the passive server takes over the active's IP address and resumes service.\n\nThe length of downtime is determined by whether the passive server is already running in 'hot' standby or whether it needs to start up from 'cold' standby.  Only the active server handles traffic.\n\nActive-passive failover can also be referred to as master-slave failover.\n\n#### Active-active\n\nIn active-active, both servers are managing traffic, spreading the load between them.\n\nIf the servers are public-facing, the DNS would need to know about the public IPs of both servers.  If the servers are internal-facing, application logic would need to know about both servers.\n\nActive-active failover can also be referred to as master-master failover.\n\n### Disadvantage(s): failover",
    "ContentSha": "Gej6bybZnoGj5vLH+IOLm2NuKTHBE7Z2TA3eWaBaiak=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n### Sonunda tutarlılık (Eventual consistency)\n\nBir yazma işleminden sonra, okuma işlemleri sonunda bunu görecektir (genellikle milisaniyeler içinde). Veriler eşzamansız olarak çoğaltılır.\n\nBu yaklaşım DNS ve e-posta gibi sistemlerde görülür. Sonunda tutarlılık, yüksek erişilebilirliğe sahip sistemlerde iyi çalışır.\n\n### Güçlü tutarlılık (Strong consistency)\n\nBir yazma işleminden sonra, okuma işlemleri bunu görecektir. Veriler eşzamanlı olarak çoğaltılır.\n\nBu yaklaşım dosya sistemlerinde ve İlişkisel Veritabanı Yönetim Sistemlerinde (RDBMS) görülür. Güçlü tutarlılık, işlemlere ihtiyaç duyan sistemlerde iyi çalışır.\n\n### Kaynak(lar) ve daha fazla okuma\n\n* [Veri merkezleri arasında işlemler](http://snarfed.org/transactions_across_datacenters_io.html)\n\n## Erişilebilirlik kalıpları\n\nYüksek erişilebilirliği desteklemek için iki tamamlayıcı kalıp vardır: **fail-over** ve **çoğaltma**.\n\n### Fail-over (Hata geçişi)\n\n#### Aktif-pasif\n\nAktif-pasif hata geçişinde, aktif ve yedek beklemedeki pasif sunucu arasında kalp atışları gönderilir. Kalp atışı kesilirse, pasif sunucu aktifin IP adresini alır ve hizmete devam eder.\n\nKesinti süresi, pasif sunucunun 'sıcak' beklemede olup olmadığına veya 'soğuk' beklemeden başlatılması gerekip gerekmediğine bağlı olarak belirlenir. Sadece aktif sunucu trafiği yönetir.\n\nAktif-pasif hata geçişi, ana-yedek (master-slave) hata geçişi olarak da adlandırılabilir.\n\n#### Aktif-aktif\n\nAktif-aktif modelde, her iki sunucu da trafiği yönetir ve yükü aralarında paylaşır.\n\nSunucular genel erişime açıksa, DNS'nin her iki sunucunun genel IP'lerini bilmesi gerekir. Sunucular iç erişime açıksa, uygulama mantığının her iki sunucuyu da bilmesi gerekir.\n\nAktif-aktif hata geçişi, ana-ana (master-master) hata geçişi olarak da adlandırılabilir.\n\n### Dezavantaj(lar): hata geçişi",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "fzWLGScmBqM9wB0hT7CvU4rZKDZBLKpoDdbx7j7LfZA=",
        "originContent": "### Eventual consistency",
        "translatedContent": "### Sonunda tutarlılık (Eventual consistency)"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "yW8GOPM+/YqSlTSkhDuizttI6PQuWYuDvrXC1lYTGbk=",
        "originContent": "After a write, reads will eventually see it (typically within milliseconds).  Data is replicated asynchronously.",
        "translatedContent": "Bir yazma işleminden sonra, okuma işlemleri sonunda bunu görecektir (genellikle milisaniyeler içinde). Veriler eşzamansız olarak çoğaltılır."
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "O4vKK25rQgniSTeaE3xOqV2OAsBimVdMLXXAO6PEJ8M=",
        "originContent": "This approach is seen in systems such as DNS and email.  Eventual consistency works well in highly available systems.",
        "translatedContent": "Bu yaklaşım DNS ve e-posta gibi sistemlerde görülür. Sonunda tutarlılık, yüksek erişilebilirliğe sahip sistemlerde iyi çalışır."
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "7EGR06HbKmQeQKXBQlQDAklNjEvD1t9htWKMJHDa7HE=",
        "originContent": "### Strong consistency",
        "translatedContent": "### Güçlü tutarlılık (Strong consistency)"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "Ws8TjZacSVHsFMdg3xbZJn0k20kTCNn8mhkD9dqLoXI=",
        "originContent": "After a write, reads will see it.  Data is replicated synchronously.",
        "translatedContent": "Bir yazma işleminden sonra, okuma işlemleri bunu görecektir. Veriler eşzamanlı olarak çoğaltılır."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "x3hEsG+pr3l5I68fcG+HHPdnUxfljYdogX6hXYhutxE=",
        "originContent": "This approach is seen in file systems and RDBMSes.  Strong consistency works well in systems that need transactions.",
        "translatedContent": "Bu yaklaşım dosya sistemlerinde ve İlişkisel Veritabanı Yönetim Sistemlerinde (RDBMS) görülür. Güçlü tutarlılık, işlemlere ihtiyaç duyan sistemlerde iyi çalışır."
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Kaynak(lar) ve daha fazla okuma"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "32vF4B1SjjeoG7B+GNuO+NRikiz25/Vf+F71/ZqQh2s=",
        "originContent": "* [Transactions across data centers](http://snarfed.org/transactions_across_datacenters_io.html)",
        "translatedContent": "* [Veri merkezleri arasında işlemler](http://snarfed.org/transactions_across_datacenters_io.html)"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "j7+7CA8jUmk4jYZ0E5futxtzO0GG0wexr61V+kwnDlo=",
        "originContent": "## Availability patterns",
        "translatedContent": "## Erişilebilirlik kalıpları"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "oKl9q1hfWZxeIEYaWU74Tk2omlmcOjUb8hfb0RMpq6o=",
        "originContent": "There are two complementary patterns to support high availability: **fail-over** and **replication**.",
        "translatedContent": "Yüksek erişilebilirliği desteklemek için iki tamamlayıcı kalıp vardır: **fail-over** ve **çoğaltma**."
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "zwpUQRugriEEZ455A69maz0G/11aeFh/9iaYoj3DsJc=",
        "originContent": "### Fail-over",
        "translatedContent": "### Fail-over (Hata geçişi)"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "zE3LvlgviFo+XBZAZAqjKSLk7MfN4jmwoumi1UlyIa0=",
        "originContent": "#### Active-passive",
        "translatedContent": "#### Aktif-pasif"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "//sOLPwoYJI8jgHSbsAsOUF9gzxIFEIei6IS0GWBfZ0=",
        "originContent": "With active-passive fail-over, heartbeats are sent between the active and the passive server on standby.  If the heartbeat is interrupted, the passive server takes over the active's IP address and resumes service.",
        "translatedContent": "Aktif-pasif hata geçişinde, aktif ve yedek beklemedeki pasif sunucu arasında kalp atışları gönderilir. Kalp atışı kesilirse, pasif sunucu aktifin IP adresini alır ve hizmete devam eder."
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "Z2h13M2s42WWdrw6RJxNKTHsPDklH4Fx5eTWjuFV5Bo=",
        "originContent": "The length of downtime is determined by whether the passive server is already running in 'hot' standby or whether it needs to start up from 'cold' standby.  Only the active server handles traffic.",
        "translatedContent": "Kesinti süresi, pasif sunucunun 'sıcak' beklemede olup olmadığına veya 'soğuk' beklemeden başlatılması gerekip gerekmediğine bağlı olarak belirlenir. Sadece aktif sunucu trafiği yönetir."
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "0qoq8w7ykvY04YVXf36ZuA34YfapuItNmEB3ol+8l2o=",
        "originContent": "Active-passive failover can also be referred to as master-slave failover.",
        "translatedContent": "Aktif-pasif hata geçişi, ana-yedek (master-slave) hata geçişi olarak da adlandırılabilir."
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "K5pPe/DWSECNKm/vr2APrIh+FQBpXl5wCTq5GfFI0nc=",
        "originContent": "#### Active-active",
        "translatedContent": "#### Aktif-aktif"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "ueX7Dtxa+tFk3JS2osj1y4rQ8v6tNL3jYtk74TPZYQw=",
        "originContent": "In active-active, both servers are managing traffic, spreading the load between them.",
        "translatedContent": "Aktif-aktif modelde, her iki sunucu da trafiği yönetir ve yükü aralarında paylaşır."
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "Z2+DcHoSHBy7EwRU0PxECoKfN73rdN4LlzYN18oUNC4=",
        "originContent": "If the servers are public-facing, the DNS would need to know about the public IPs of both servers.  If the servers are internal-facing, application logic would need to know about both servers.",
        "translatedContent": "Sunucular genel erişime açıksa, DNS'nin her iki sunucunun genel IP'lerini bilmesi gerekir. Sunucular iç erişime açıksa, uygulama mantığının her iki sunucuyu da bilmesi gerekir."
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "HZeAIhcdCZV5uNs5qKLp+uGpV5bJaLx0oTMfaP4SY6A=",
        "originContent": "Active-active failover can also be referred to as master-master failover.",
        "translatedContent": "Aktif-aktif hata geçişi, ana-ana (master-master) hata geçişi olarak da adlandırılabilir."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "RWOekJmT9YbEvwdNPTswoki1IsKTYJsDCifIo6/YkRo=",
        "originContent": "### Disadvantage(s): failover",
        "translatedContent": "### Dezavantaj(lar): hata geçişi"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 15,
    "Content": "\n* Fail-over adds more hardware and additional complexity.\n* There is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.\n\n### Replication\n\n#### Master-slave and master-master\n\nThis topic is further discussed in the [Database](#database) section:\n\n* [Master-slave replication](#master-slave-replication)\n* [Master-master replication](#master-master-replication)\n\n### Availability in numbers\n\nAvailability is often quantified by uptime (or downtime) as a percentage of time the service is available.  Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.\n\n#### 99.9% availability - three 9s\n\n| Duration            | Acceptable downtime|\n|---------------------|--------------------|\n| Downtime per year   | 8h 45min 57s       |\n| Downtime per month  | 43m 49.7s          |\n| Downtime per week   | 10m 4.8s           |\n| Downtime per day    | 1m 26.4s           |\n\n#### 99.99% availability - four 9s\n\n| Duration            | Acceptable downtime|\n|---------------------|--------------------|\n| Downtime per year   | 52min 35.7s        |\n| Downtime per month  | 4m 23s             |\n| Downtime per week   | 1m 5s              |\n| Downtime per day    | 8.6s               |\n\n#### Availability in parallel vs in sequence\n\nIf a service consists of multiple components prone to failure, the service's overall availability depends on whether the components are in sequence or in parallel.\n\n###### In sequence",
    "ContentSha": "7iHIUIb6fJkzxQcIKEVyv2l5jzfrJATtAgzkxfBD6fg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n* Fail-over daha fazla donanım ve ek karmaşıklık getirir.\n* Aktif sistem, yeni yazılmış verilerin pasife çoğaltılmasından önce başarısız olursa veri kaybı riski vardır.\n\n### Replikasyon\n\n#### Master-slave ve master-master\n\nBu konu [Veritabanı](#database) bölümünde daha ayrıntılı olarak ele alınmıştır:\n\n* [Master-slave replikasyonu](#master-slave-replication)\n* [Master-master replikasyonu](#master-master-replication)\n\n### Sayısal olarak erişilebilirlik\n\nErişilebilirlik genellikle hizmetin kullanılabilir olduğu sürenin yüzdesi olarak çalışma süresi (veya kesinti süresi) ile nicel olarak belirtilir.  Erişilebilirlik genellikle dokuz sayısıyla ölçülür--%99.99 erişilebilirliğe sahip bir hizmet dört dokuzlu olarak tanımlanır.\n\n#### %99.9 erişilebilirlik - üç dokuz\n\n| Süre                | Kabul edilebilir kesinti süresi|\n|---------------------|-------------------------------|\n| Yıllık kesinti      | 8s 45dk 57sn                  |\n| Aylık kesinti       | 43dk 49.7sn                   |\n| Haftalık kesinti    | 10dk 4.8sn                    |\n| Günlük kesinti      | 1dk 26.4sn                    |\n\n#### %99.99 erişilebilirlik - dört dokuz\n\n| Süre                | Kabul edilebilir kesinti süresi|\n|---------------------|-------------------------------|\n| Yıllık kesinti      | 52dk 35.7sn                   |\n| Aylık kesinti       | 4dk 23sn                      |\n| Haftalık kesinti    | 1dk 5sn                       |\n| Günlük kesinti      | 8.6sn                         |\n\n#### Paralel ve ardışık erişilebilirlik\n\nBir hizmet birden fazla arızaya yatkın bileşenden oluşuyorsa, hizmetin genel erişilebilirliği bileşenlerin ardışık mı yoksa paralel mi olduğuna bağlıdır.\n\n###### Ardışık",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "CqXi6vzg9j59CHyL4xe27TEVhTRrc7cbxfpUzOHpWYw=",
        "originContent": "* Fail-over adds more hardware and additional complexity.",
        "translatedContent": "* Fail-over daha fazla donanım ve ek karmaşıklık getirir."
      },
      {
        "row": 3,
        "rowsha": "eGTsRaJOuHmTWdjNeBa2CHLtmWLaSh5BnevPfBmOeJM=",
        "originContent": "* There is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.",
        "translatedContent": "* Aktif sistem, yeni yazılmış verilerin pasife çoğaltılmasından önce başarısız olursa veri kaybı riski vardır."
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "4K5dwxkOA5wbk7sYlTLb2yj4mVqhb/pvixuIjBDstIQ=",
        "originContent": "### Replication",
        "translatedContent": "### Replikasyon"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "fZEStNfIoL9uMNDUbzk47uD67gGF+8vm9BXvyfbjZbw=",
        "originContent": "#### Master-slave and master-master",
        "translatedContent": "#### Master-slave ve master-master"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "Av7q+EkMsj599unhnzolG9jvpsUe0YsdlCznVgjwo0s=",
        "originContent": "This topic is further discussed in the [Database](#database) section:",
        "translatedContent": "Bu konu [Veritabanı](#database) bölümünde daha ayrıntılı olarak ele alınmıştır:"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "SA3nlUBsaWhuYXnyYlWDZbLK+51HD2tbupezRC7X2hI=",
        "originContent": "* [Master-slave replication](#master-slave-replication)",
        "translatedContent": "* [Master-slave replikasyonu](#master-slave-replication)"
      },
      {
        "row": 12,
        "rowsha": "W2fFMZ82YalJ0easRaSk/To8mGSonyvxYNWaFcfX6V0=",
        "originContent": "* [Master-master replication](#master-master-replication)",
        "translatedContent": "* [Master-master replikasyonu](#master-master-replication)"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "atVZb+BfI7TM1RhOEfzMxNS+ZdZ4+NImuBUCcCBqCG4=",
        "originContent": "### Availability in numbers",
        "translatedContent": "### Sayısal olarak erişilebilirlik"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "Am0f64EGQkWXK+ft673uELRD3uwOLbqfoe14w7nKkZ4=",
        "originContent": "Availability is often quantified by uptime (or downtime) as a percentage of time the service is available.  Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.",
        "translatedContent": "Erişilebilirlik genellikle hizmetin kullanılabilir olduğu sürenin yüzdesi olarak çalışma süresi (veya kesinti süresi) ile nicel olarak belirtilir.  Erişilebilirlik genellikle dokuz sayısıyla ölçülür--%99.99 erişilebilirliğe sahip bir hizmet dört dokuzlu olarak tanımlanır."
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "I3yIi2rYdyymyC5foh4MJFlGximHnF9E1NppPl7AgYk=",
        "originContent": "#### 99.9% availability - three 9s",
        "translatedContent": "#### %99.9 erişilebilirlik - üç dokuz"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "WtpvnLjcMkNnN2EE2b3LI08oDneHj2KbzQSCbgXo6Hg=",
        "originContent": "| Duration            | Acceptable downtime|",
        "translatedContent": "| Süre                | Kabul edilebilir kesinti süresi|"
      },
      {
        "row": 21,
        "rowsha": "dNHX42cgUDO29VoFw6hieeObZ7C+S6t5B5f9tekwjmc=",
        "originContent": "|---------------------|--------------------|",
        "translatedContent": "|---------------------|-------------------------------|"
      },
      {
        "row": 22,
        "rowsha": "5MDGDdfbHznP7KIJhmO2QAb2NzjkNZ0T/gNrbLRbL9o=",
        "originContent": "| Downtime per year   | 8h 45min 57s       |",
        "translatedContent": "| Yıllık kesinti      | 8s 45dk 57sn                  |"
      },
      {
        "row": 23,
        "rowsha": "04BUDzQ37NhJQUU65gxgjPmdnS8HaXuLhiI2EkTLLd4=",
        "originContent": "| Downtime per month  | 43m 49.7s          |",
        "translatedContent": "| Aylık kesinti       | 43dk 49.7sn                   |"
      },
      {
        "row": 24,
        "rowsha": "GFTVysJcBOB9soeZpXAIpyR9pLbghp3VppIpy3EWrTs=",
        "originContent": "| Downtime per week   | 10m 4.8s           |",
        "translatedContent": "| Haftalık kesinti    | 10dk 4.8sn                    |"
      },
      {
        "row": 25,
        "rowsha": "J0YocIstb2J6pSDKtUDNQHW0icPpnMHt/vioNxOwxlE=",
        "originContent": "| Downtime per day    | 1m 26.4s           |",
        "translatedContent": "| Günlük kesinti      | 1dk 26.4sn                    |"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "3rrv1Js1yLQjioaOahOLWwXiJs7ka/w5gyWkFgffq34=",
        "originContent": "#### 99.99% availability - four 9s",
        "translatedContent": "#### %99.99 erişilebilirlik - dört dokuz"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "WtpvnLjcMkNnN2EE2b3LI08oDneHj2KbzQSCbgXo6Hg=",
        "originContent": "| Duration            | Acceptable downtime|",
        "translatedContent": "| Süre                | Kabul edilebilir kesinti süresi|"
      },
      {
        "row": 30,
        "rowsha": "dNHX42cgUDO29VoFw6hieeObZ7C+S6t5B5f9tekwjmc=",
        "originContent": "|---------------------|--------------------|",
        "translatedContent": "|---------------------|-------------------------------|"
      },
      {
        "row": 31,
        "rowsha": "+lzPnt4t6YVMkw+14dcMepWXtyKwQA+KT8slwXqdlw8=",
        "originContent": "| Downtime per year   | 52min 35.7s        |",
        "translatedContent": "| Yıllık kesinti      | 52dk 35.7sn                   |"
      },
      {
        "row": 32,
        "rowsha": "cyIXC9j4x5CIkyJm+FJhwCE9yJhQG4FZIDB+3sQGr88=",
        "originContent": "| Downtime per month  | 4m 23s             |",
        "translatedContent": "| Aylık kesinti       | 4dk 23sn                      |"
      },
      {
        "row": 33,
        "rowsha": "s2V+GE82uucvBDH8c5v8jWNv6h5mT6bvPyxOP85fFls=",
        "originContent": "| Downtime per week   | 1m 5s              |",
        "translatedContent": "| Haftalık kesinti    | 1dk 5sn                       |"
      },
      {
        "row": 34,
        "rowsha": "n36aeJpcdhikvDDEMXRpmhf1u0M0mjhd6sdHfuRNeX0=",
        "originContent": "| Downtime per day    | 8.6s               |",
        "translatedContent": "| Günlük kesinti      | 8.6sn                         |"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "1lBPemP1eX9L7+SxFKkGrb/Hq6633g7fsEkDgd36mAk=",
        "originContent": "#### Availability in parallel vs in sequence",
        "translatedContent": "#### Paralel ve ardışık erişilebilirlik"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "/VxXhtl3F6SXgtrPj9Kzl2H/+XrS0Sqeu03gzyr6wDE=",
        "originContent": "If a service consists of multiple components prone to failure, the service's overall availability depends on whether the components are in sequence or in parallel.",
        "translatedContent": "Bir hizmet birden fazla arızaya yatkın bileşenden oluşuyorsa, hizmetin genel erişilebilirliği bileşenlerin ardışık mı yoksa paralel mi olduğuna bağlıdır."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "HVfQgp4NNWDL/4e4EVnj8OD/aGrYSMIlsj8F1jgCfi4=",
        "originContent": "###### In sequence",
        "translatedContent": "###### Ardışık"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 16,
    "Content": "\nOverall availability decreases when two components with availability < 100% are in sequence:\n",
    "ContentSha": "MoWr3NjGedfagwyU1j0TqrIfLCsOUBLZEeMCD+o/O+Q=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Genel kullanılabilirlik, %100'den az kullanılabilirliğe sahip iki bileşen ardışık olarak bağlandığında azalır:\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Genel kullanılabilirlik, %100'den az kullanılabilirliğe sahip iki bileşen ardışık olarak bağlandığında azalır:"
      },
      {
        "row": 2,
        "rowsha": "sAu1j1dmf0qL9TE2b1uG7pg1al1cDmHdRW96gsk8xPg=",
        "originContent": "Overall availability decreases when two components with availability < 100% are in sequence:",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 17,
    "Content": "```\nAvailability (Total) = Availability (Foo) * Availability (Bar)\n```",
    "ContentSha": "lB9bEqLhXuNZd7e3CBBSvV+eKTVRfJQnqnxct5vKoDI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nAvailability (Total) = Availability (Foo) * Availability (Bar)\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "ujn1b+AHDyswPbA7zS8UmPllNJM4sOawWcrGYJ4rZ0A=",
        "originContent": "Availability (Total) = Availability (Foo) * Availability (Bar)",
        "translatedContent": "Availability (Total) = Availability (Foo) * Availability (Bar)"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 18,
    "Content": "\nIf both `Foo` and `Bar` each had 99.9% availability, their total availability in sequence would be 99.8%.\n\n###### In parallel\n\nOverall availability increases when two components with availability < 100% are in parallel:\n",
    "ContentSha": "8idS6k4SI9XJ+uNRuiFmAXUVaamdekOMo2MnsD7SUdw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nEğer hem `Foo` hem de `Bar` ayrı ayrı %99,9 erişilebilirliğe sahipse, ardışık olarak toplam erişilebilirlikleri %99,8 olur.\n\n###### Paralel durumda\n\nİki bileşen %100'den düşük erişilebilirliğe sahip olduğunda paralel çalıştıklarında genel erişilebilirlik artar:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "ZQn0BZzlJ+UR+I1y3I6cKEeMD1zD7iiuU8/3fLb4K3w=",
        "originContent": "If both `Foo` and `Bar` each had 99.9% availability, their total availability in sequence would be 99.8%.",
        "translatedContent": "Eğer hem `Foo` hem de `Bar` ayrı ayrı %99,9 erişilebilirliğe sahipse, ardışık olarak toplam erişilebilirlikleri %99,8 olur."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "9hcGr5rXFEwBAbYXZ7c8V5UAPMJii8tZnd7JMK7PowU=",
        "originContent": "###### In parallel",
        "translatedContent": "###### Paralel durumda"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "hh78B11N/veJv3y1/p+NOj4bRGWwYJVLPH6NJ5Dp5Ao=",
        "originContent": "Overall availability increases when two components with availability < 100% are in parallel:",
        "translatedContent": "İki bileşen %100'den düşük erişilebilirliğe sahip olduğunda paralel çalıştıklarında genel erişilebilirlik artar:"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 19,
    "Content": "```\nAvailability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))\n```",
    "ContentSha": "MYI40NgkLqO1BQo3TOiX+3Zu0VfgykdTCZcU4oJjKTs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nAvailability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "OAzcShtWVHCVepnZrS+WxSpftaJ7IoW7YnmDfRwUs4w=",
        "originContent": "Availability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))",
        "translatedContent": "Availability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 20,
    "Content": "\nIf both `Foo` and `Bar` each had 99.9% availability, their total availability in parallel would be 99.9999%.\n\n## Domain name system\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/IOyLj4i.jpg\">\n  <br/>\n  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>Source: DNS security presentation</a></i>\n</p>\n\nA Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.\n\nDNS is hierarchical, with a few authoritative servers at the top level.  Your router or ISP provides information about which DNS server(s) to contact when doing a lookup.  Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays.  DNS results can also be cached by your browser or OS for a certain period of time, determined by the [time to live (TTL)](https://en.wikipedia.org/wiki/Time_to_live).\n\n* **NS record (name server)** - Specifies the DNS servers for your domain/subdomain.\n* **MX record (mail exchange)** - Specifies the mail servers for accepting messages.\n* **A record (address)** - Points a name to an IP address.\n* **CNAME (canonical)** - Points a name to another name or `CNAME` (example.com to www.example.com) or to an `A` record.\n\nServices such as [CloudFlare](https://www.cloudflare.com/dns/) and [Route 53](https://aws.amazon.com/route53/) provide managed DNS services.  Some DNS services can route traffic through various methods:\n\n* [Weighted round robin](https://www.jscape.com/blog/load-balancing-algorithms)\n    * Prevent traffic from going to servers under maintenance\n    * Balance between varying cluster sizes\n    * A/B testing\n* [Latency-based](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-latency.html)\n* [Geolocation-based](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html)\n\n### Disadvantage(s): DNS\n\n* Accessing a DNS server introduces a slight delay, although mitigated by caching described above.\n* DNS server management could be complex and is generally managed by [governments, ISPs, and large companies](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729).\n* DNS services have recently come under [DDoS attack](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/), preventing users from accessing websites such as Twitter without knowing Twitter's IP address(es).\n\n### Source(s) and further reading\n\n* [DNS architecture](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)\n* [Wikipedia](https://en.wikipedia.org/wiki/Domain_Name_System)\n* [DNS articles](https://support.dnsimple.com/categories/dns/)",
    "ContentSha": "YhlbRAwaKJI7wcegCHvNOzGIOxkIHtEHSr0a7L+iJEc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Eğer hem `Foo` hem de `Bar` %99,9 kullanılabilirliğe sahip olsaydı, paralel toplam kullanılabilirlikleri %99,9999 olurdu.\n\n## Alan adı sistemi\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/IOyLj4i.jpg\">\n  <br/>\n  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>Kaynak: DNS güvenlik sunumu</a></i>\n</p>\n\nBir Alan Adı Sistemi (DNS), www.example.com gibi bir alan adını bir IP adresine dönüştürür.\n\nDNS hiyerarşiktir ve en üst düzeyde birkaç yetkili sunucu bulunur.  Yönlendiriciniz veya ISS’niz, sorgulama yaparken hangi DNS sunucusuna(larına) başvurulacağını belirten bilgileri sağlar.  Alt düzey DNS sunucuları eşlemeleri önbelleğe alır; bu önbellekler, DNS yayılım gecikmeleri nedeniyle güncelliğini yitirebilir.  DNS sonuçları ayrıca tarayıcınız veya işletim sisteminiz tarafından, [yaşam süresi (TTL)](https://en.wikipedia.org/wiki/Time_to_live) ile belirlenen bir süre boyunca önbelleğe alınabilir.\n\n* **NS kaydı (ad sunucusu)** - Alan adınız/alt alan adınız için DNS sunucularını belirtir.\n* **MX kaydı (mail exchange)** - Mesajları kabul edecek posta sunucularını belirtir.\n* **A kaydı (adres)** - Bir adı bir IP adresine yönlendirir.\n* **CNAME (kanonik)** - Bir adı başka bir ada veya `CNAME`’e (example.com’dan www.example.com’a) ya da bir `A` kaydına yönlendirir.\n\n[CloudFlare](https://www.cloudflare.com/dns/) ve [Route 53](https://aws.amazon.com/route53/) gibi hizmetler yönetilen DNS servisleri sunar.  Bazı DNS servisleri trafiği çeşitli yöntemlerle yönlendirebilir:\n\n* [Ağırlıklı döngüsel dağıtım](https://www.jscape.com/blog/load-balancing-algorithms)\n    * Bakımda olan sunuculara trafiğin gitmesini engellemek\n    * Farklı boyutlardaki kümeler arasında denge sağlamak\n    * A/B testi\n* [Gecikme tabanlı](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-latency.html)\n* [Coğrafi konum tabanlı](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html)\n\n### Dezavantaj(lar): DNS\n\n* DNS sunucusuna erişmek hafif bir gecikme ekler, ancak yukarıda açıklanan önbellekleme ile azaltılır.\n* DNS sunucu yönetimi karmaşık olabilir ve genellikle [hükümetler, ISS’ler ve büyük şirketler](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729) tarafından yürütülür.\n* DNS servisleri yakın zamanda [DDoS saldırısına](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/) uğramış, kullanıcıların Twitter gibi sitelere Twitter’ın IP adresini bilmeden erişmesini engellemiştir.\n\n### Kaynak(lar) ve ileri okuma\n\n* [DNS mimarisi](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)\n* [Vikipedi](https://en.wikipedia.org/wiki/Domain_Name_System)\n* [DNS makaleleri](https://support.dnsimple.com/categories/dns/)\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Eğer hem `Foo` hem de `Bar` %99,9 kullanılabilirliğe sahip olsaydı, paralel toplam kullanılabilirlikleri %99,9999 olurdu."
      },
      {
        "row": 2,
        "rowsha": "wEjBbUe0Tw7vSUDMwpwueoCi2fzQBeD1YRy3BNYCPAw=",
        "originContent": "If both `Foo` and `Bar` each had 99.9% availability, their total availability in parallel would be 99.9999%.",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## Alan adı sistemi"
      },
      {
        "row": 4,
        "rowsha": "Cx+spnnlT0zDhHJXINRwtDBG3hDsFeU9IVBvJdgafbw=",
        "originContent": "## Domain name system",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 6,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/IOyLj4i.jpg\">"
      },
      {
        "row": 7,
        "rowsha": "khQ8Xi6IZA/4nZ9NdWqbAoLb6BDXur2KZ7Gz9esREjc=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/IOyLj4i.jpg\">",
        "translatedContent": "  <br/>"
      },
      {
        "row": 8,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>Kaynak: DNS güvenlik sunumu</a></i>"
      },
      {
        "row": 9,
        "rowsha": "XOuXqRofYk954ZXtnfuXu1IYf0iz3a0CbYw4UaF2oRI=",
        "originContent": "  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>Source: DNS security presentation</a></i>",
        "translatedContent": "</p>"
      },
      {
        "row": 10,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Bir Alan Adı Sistemi (DNS), www.example.com gibi bir alan adını bir IP adresine dönüştürür."
      },
      {
        "row": 12,
        "rowsha": "xOzNN1uYrR3gW6N/f994r2OaY+WGigANgTblFfo6/eQ=",
        "originContent": "A Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "DNS hiyerarşiktir ve en üst düzeyde birkaç yetkili sunucu bulunur.  Yönlendiriciniz veya ISS’niz, sorgulama yaparken hangi DNS sunucusuna(larına) başvurulacağını belirten bilgileri sağlar.  Alt düzey DNS sunucuları eşlemeleri önbelleğe alır; bu önbellekler, DNS yayılım gecikmeleri nedeniyle güncelliğini yitirebilir.  DNS sonuçları ayrıca tarayıcınız veya işletim sisteminiz tarafından, [yaşam süresi (TTL)](https://en.wikipedia.org/wiki/Time_to_live) ile belirlenen bir süre boyunca önbelleğe alınabilir."
      },
      {
        "row": 14,
        "rowsha": "9J3zqU+zpPRpz4vKc9lf2QHcvP2IwE0rlm6Uwa7GnrY=",
        "originContent": "DNS is hierarchical, with a few authoritative servers at the top level.  Your router or ISP provides information about which DNS server(s) to contact when doing a lookup.  Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays.  DNS results can also be cached by your browser or OS for a certain period of time, determined by the [time to live (TTL)](https://en.wikipedia.org/wiki/Time_to_live).",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* **NS kaydı (ad sunucusu)** - Alan adınız/alt alan adınız için DNS sunucularını belirtir."
      },
      {
        "row": 16,
        "rowsha": "Br0DkfzyjGkzSi8akOKSXazpXUF3LVY4zL9wkK7gBgk=",
        "originContent": "* **NS record (name server)** - Specifies the DNS servers for your domain/subdomain.",
        "translatedContent": "* **MX kaydı (mail exchange)** - Mesajları kabul edecek posta sunucularını belirtir."
      },
      {
        "row": 17,
        "rowsha": "CX76Bn4rID1Y8BBFXOXFb6ekY6mlxUYNcCi+CKhNa0s=",
        "originContent": "* **MX record (mail exchange)** - Specifies the mail servers for accepting messages.",
        "translatedContent": "* **A kaydı (adres)** - Bir adı bir IP adresine yönlendirir."
      },
      {
        "row": 18,
        "rowsha": "d/he/sZ62q7m2wjCaov8wwtaX53pioHSPSNd1w9ANmU=",
        "originContent": "* **A record (address)** - Points a name to an IP address.",
        "translatedContent": "* **CNAME (kanonik)** - Bir adı başka bir ada veya `CNAME`’e (example.com’dan www.example.com’a) ya da bir `A` kaydına yönlendirir."
      },
      {
        "row": 19,
        "rowsha": "6OC2ZT8D6FLEFTOkwKnqT5UOejeAoGs5l05q+4jXmpc=",
        "originContent": "* **CNAME (canonical)** - Points a name to another name or `CNAME` (example.com to www.example.com) or to an `A` record.",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "[CloudFlare](https://www.cloudflare.com/dns/) ve [Route 53](https://aws.amazon.com/route53/) gibi hizmetler yönetilen DNS servisleri sunar.  Bazı DNS servisleri trafiği çeşitli yöntemlerle yönlendirebilir:"
      },
      {
        "row": 21,
        "rowsha": "l4f3FoQaKwMWBZa+tTdRV1n7X/wSp1wfMG+NKowv+MA=",
        "originContent": "Services such as [CloudFlare](https://www.cloudflare.com/dns/) and [Route 53](https://aws.amazon.com/route53/) provide managed DNS services.  Some DNS services can route traffic through various methods:",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [Ağırlıklı döngüsel dağıtım](https://www.jscape.com/blog/load-balancing-algorithms)"
      },
      {
        "row": 23,
        "rowsha": "3O5SyVIA03wkwtzQV1Yvf5CWn7Wu0wveSkQniwAr9iI=",
        "originContent": "* [Weighted round robin](https://www.jscape.com/blog/load-balancing-algorithms)",
        "translatedContent": "    * Bakımda olan sunuculara trafiğin gitmesini engellemek"
      },
      {
        "row": 24,
        "rowsha": "sJWpY/yHNL4vWsYngx0qmNb+qxax5uSjNfUCOqOE5lU=",
        "originContent": "    * Prevent traffic from going to servers under maintenance",
        "translatedContent": "    * Farklı boyutlardaki kümeler arasında denge sağlamak"
      },
      {
        "row": 25,
        "rowsha": "aZ1fZAKjjMQZnK0SM78pQGfIy5Ji83U/70lZmZxXnvU=",
        "originContent": "    * Balance between varying cluster sizes",
        "translatedContent": "    * A/B testi"
      },
      {
        "row": 26,
        "rowsha": "Dm+B5ng2i+Y+vVp3floYlwo/4xywDQMiYaYFNgxt6oE=",
        "originContent": "    * A/B testing",
        "translatedContent": "* [Gecikme tabanlı](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-latency.html)"
      },
      {
        "row": 27,
        "rowsha": "s0wgllkGZ8Vytg35SPbVMDAa0szgXKMJaA4SBc64Xps=",
        "originContent": "* [Latency-based](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-latency.html)",
        "translatedContent": "* [Coğrafi konum tabanlı](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html)"
      },
      {
        "row": 28,
        "rowsha": "CWZwm8/avAyJWuHCVKGEkgryk///eLTSSag71l4AOUc=",
        "originContent": "* [Geolocation-based](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html)",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Dezavantaj(lar): DNS"
      },
      {
        "row": 30,
        "rowsha": "8Iw7my67UAJA2fhwTvzxZOJpRfsJVMOV13mbygxEwWQ=",
        "originContent": "### Disadvantage(s): DNS",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* DNS sunucusuna erişmek hafif bir gecikme ekler, ancak yukarıda açıklanan önbellekleme ile azaltılır."
      },
      {
        "row": 32,
        "rowsha": "nT+xRWbm49UnjIb4nmPOJCHinYF6gUS6FJe0hu4U1H0=",
        "originContent": "* Accessing a DNS server introduces a slight delay, although mitigated by caching described above.",
        "translatedContent": "* DNS sunucu yönetimi karmaşık olabilir ve genellikle [hükümetler, ISS’ler ve büyük şirketler](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729) tarafından yürütülür."
      },
      {
        "row": 33,
        "rowsha": "Lm1EuZ2VZ+/wXYMNNySEZcZip/oihpL8YSsnmzn657A=",
        "originContent": "* DNS server management could be complex and is generally managed by [governments, ISPs, and large companies](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729).",
        "translatedContent": "* DNS servisleri yakın zamanda [DDoS saldırısına](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/) uğramış, kullanıcıların Twitter gibi sitelere Twitter’ın IP adresini bilmeden erişmesini engellemiştir."
      },
      {
        "row": 34,
        "rowsha": "0JaShHu4q5yi3GVpo06kijQ/uoe+sfyN9EcUWHnzgB0=",
        "originContent": "* DNS services have recently come under [DDoS attack](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/), preventing users from accessing websites such as Twitter without knowing Twitter's IP address(es).",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Kaynak(lar) ve ileri okuma"
      },
      {
        "row": 36,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [DNS mimarisi](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)"
      },
      {
        "row": 38,
        "rowsha": "+ML0oXJw4+WTRYkvmcmCQC1DOMIjL6u8YZT2EjFqImg=",
        "originContent": "* [DNS architecture](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)",
        "translatedContent": "* [Vikipedi](https://en.wikipedia.org/wiki/Domain_Name_System)"
      },
      {
        "row": 39,
        "rowsha": "8tdw+ABrJXO6H/klqRgsAXpZQ+Nh5d7f8pvTam1Qg8E=",
        "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Domain_Name_System)",
        "translatedContent": "* [DNS makaleleri](https://support.dnsimple.com/categories/dns/)"
      },
      {
        "row": 40,
        "rowsha": "Ch1/V6QuJ6pG8HrCFX9gUwEagBr1U4WO1gWanHN+sKk=",
        "originContent": "* [DNS articles](https://support.dnsimple.com/categories/dns/)",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 21,
    "Content": "\n## Content delivery network\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h9TAuGI.jpg\">\n  <br/>\n  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>Source: Why use a CDN</a></i>\n</p>\n\nA content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user.  Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content.  The site's DNS resolution will tell clients which server to contact.\n\nServing content from CDNs can significantly improve performance in two ways:\n\n* Users receive content from data centers close to them\n* Your servers do not have to serve requests that the CDN fulfills\n\n### Push CDNs\n\nPush CDNs receive new content whenever changes occur on your server.  You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.  You can configure when content expires and when it is updated.  Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.\n\nSites with a small amount of traffic or sites with content that isn't often updated work well with push CDNs.  Content is placed on the CDNs once, instead of being re-pulled at regular intervals.\n\n### Pull CDNs\n\nPull CDNs grab new content from your server when the first user requests the content.  You leave the content on your server and rewrite URLs to point to the CDN.  This results in a slower request until the content is cached on the CDN.\n\nA [time-to-live (TTL)](https://en.wikipedia.org/wiki/Time_to_live) determines how long content is cached.  Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.\n\nSites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.\n\n### Disadvantage(s): CDN\n\n* CDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.\n* Content might be stale if it is updated before the TTL expires it.\n* CDNs require changing URLs for static content to point to the CDN.\n\n### Source(s) and further reading\n\n* [Globally distributed content delivery](https://figshare.com/articles/Globally_distributed_content_delivery/6605972)\n* [The differences between push and pull CDNs](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)",
    "ContentSha": "bGRlC+2cYKu2Zts6C6nMT6o/JLG5VQ9wuYmJZVvDRI0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n## İçerik dağıtım ağı\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h9TAuGI.jpg\">\n  <br/>\n  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>Kaynak: Neden bir CDN kullanılır</a></i>\n</p>\n\nBir içerik dağıtım ağı (CDN), içeriği kullanıcıya daha yakın konumlardan sunan, küresel olarak dağıtılmış bir proxy sunucular ağıdır. Genellikle, HTML/CSS/JS, fotoğraflar ve videolar gibi statik dosyalar CDN üzerinden sunulur, ancak Amazon'un CloudFront'u gibi bazı CDN'ler dinamik içeriği de destekler. Sitenin DNS çözümlemesi, istemcilere hangi sunucuya bağlanacaklarını bildirir.\n\nCDN'lerden içerik sunmak, performansı iki şekilde önemli ölçüde artırabilir:\n\n* Kullanıcılar, kendilerine yakın veri merkezlerinden içerik alır\n* Sunucularınız, CDN'nin karşıladığı istekleri sunmak zorunda kalmaz\n\n### Push CDN’ler\n\nPush CDN’ler, sunucunuzda değişiklikler olduğunda yeni içeriği alır. İçeriği sağlama sorumluluğu tamamen sizdedir, doğrudan CDN’ye yükleme yapar ve URL’leri CDN’ye işaret edecek şekilde yeniden yazarsınız. İçeriğin ne zaman sona ereceğini ve güncelleneceğini yapılandırabilirsiniz. İçerik yalnızca yeni olduğunda veya değiştiğinde yüklenir, bu da trafiği en aza indirirken depolamayı en üst düzeye çıkarır.\n\nAz trafik alan veya içeriği sık güncellenmeyen siteler push CDN’lerle iyi çalışır. İçerik CDN’lere bir kez yerleştirilir, düzenli aralıklarla tekrar çekilmez.\n\n### Pull CDN’ler\n\nPull CDN’ler, ilk kullanıcı içeriği istediğinde yeni içeriği sunucunuzdan çeker. İçeriği sunucunuzda bırakır ve URL’leri CDN’ye işaret edecek şekilde yeniden yazarsınız. Bu, içerik CDN’de önbelleğe alınana kadar daha yavaş bir isteğe yol açar.\n\nBir [time-to-live (TTL)](https://en.wikipedia.org/wiki/Time_to_live), içeriğin ne kadar süreyle önbellekte tutulacağını belirler. Pull CDN’ler CDN üzerindeki depolama alanını en aza indirir, ancak dosyalar sona ererse ve gerçekten değişmeden önce çekilirse gereksiz trafik oluşturabilir.\n\nYoğun trafiğe sahip siteler pull CDN’lerle iyi çalışır, çünkü trafik daha dengeli yayılır ve sadece son zamanlarda istenen içerik CDN’de kalır.\n\n### Dezavantaj(lar): CDN\n\n* CDN maliyetleri, trafiğe bağlı olarak önemli olabilir, ancak bu, CDN kullanmadığınızda karşılaşacağınız ek maliyetlerle kıyaslanmalıdır.\n* İçerik, TTL süresi dolmadan güncellenirse eski kalabilir.\n* CDN’ler için statik içerik URL’lerinin CDN’yi işaret edecek şekilde değiştirilmesi gerekir.\n\n### Kaynak(lar) ve daha fazla okuma\n\n* [Küresel olarak dağıtılmış içerik dağıtımı](https://figshare.com/articles/Globally_distributed_content_delivery/6605972)\n* [Push ve pull CDN’ler arasındaki farklar](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "5lKlmSan5gCRz0WvVAvW++KQV+W6+zLCMJITTKQwtiI=",
        "originContent": "## Content delivery network",
        "translatedContent": "## İçerik dağıtım ağı"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 5,
        "rowsha": "QPrVyAutZM7eFWLgnkbLJPwGIcbIUBhGZcP7JNSYz+4=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h9TAuGI.jpg\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h9TAuGI.jpg\">"
      },
      {
        "row": 6,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 7,
        "rowsha": "75nxwalyvA6d9E1q9P3BKUFN4nOCeHiml3BhCEoEKXc=",
        "originContent": "  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>Source: Why use a CDN</a></i>",
        "translatedContent": "  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>Kaynak: Neden bir CDN kullanılır</a></i>"
      },
      {
        "row": 8,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "1wQ2Wo5vQd3vgQ8MaldgFj9KGucbPwxgiK4md+hIsug=",
        "originContent": "A content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user.  Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content.  The site's DNS resolution will tell clients which server to contact.",
        "translatedContent": "Bir içerik dağıtım ağı (CDN), içeriği kullanıcıya daha yakın konumlardan sunan, küresel olarak dağıtılmış bir proxy sunucular ağıdır. Genellikle, HTML/CSS/JS, fotoğraflar ve videolar gibi statik dosyalar CDN üzerinden sunulur, ancak Amazon'un CloudFront'u gibi bazı CDN'ler dinamik içeriği de destekler. Sitenin DNS çözümlemesi, istemcilere hangi sunucuya bağlanacaklarını bildirir."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "am4LgQWzQnt20ZLrmCjs+WWtVFIS0s4mcH7YNNZ5rnw=",
        "originContent": "Serving content from CDNs can significantly improve performance in two ways:",
        "translatedContent": "CDN'lerden içerik sunmak, performansı iki şekilde önemli ölçüde artırabilir:"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "+0MrXq5c0J3VnUanm3+XDiisSVHg6pxz8NZU6DeHcc4=",
        "originContent": "* Users receive content from data centers close to them",
        "translatedContent": "* Kullanıcılar, kendilerine yakın veri merkezlerinden içerik alır"
      },
      {
        "row": 15,
        "rowsha": "vhcY3e5KeVANXXomwmhdI2LOP3GssyCCk2h1REQKEI4=",
        "originContent": "* Your servers do not have to serve requests that the CDN fulfills",
        "translatedContent": "* Sunucularınız, CDN'nin karşıladığı istekleri sunmak zorunda kalmaz"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "d05gEhAo1g83hyIfrjshKeKehC5TdcwQrD1mB1VKutU=",
        "originContent": "### Push CDNs",
        "translatedContent": "### Push CDN’ler"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "o6zabJRTy3eEsUXkTknbbPspI+/JD004vUVhB/GrmvU=",
        "originContent": "Push CDNs receive new content whenever changes occur on your server.  You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.  You can configure when content expires and when it is updated.  Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.",
        "translatedContent": "Push CDN’ler, sunucunuzda değişiklikler olduğunda yeni içeriği alır. İçeriği sağlama sorumluluğu tamamen sizdedir, doğrudan CDN’ye yükleme yapar ve URL’leri CDN’ye işaret edecek şekilde yeniden yazarsınız. İçeriğin ne zaman sona ereceğini ve güncelleneceğini yapılandırabilirsiniz. İçerik yalnızca yeni olduğunda veya değiştiğinde yüklenir, bu da trafiği en aza indirirken depolamayı en üst düzeye çıkarır."
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "9HPOA+/D7F7Zml3fiMZFn0RX/J5spBp+TBz0yOWX+eU=",
        "originContent": "Sites with a small amount of traffic or sites with content that isn't often updated work well with push CDNs.  Content is placed on the CDNs once, instead of being re-pulled at regular intervals.",
        "translatedContent": "Az trafik alan veya içeriği sık güncellenmeyen siteler push CDN’lerle iyi çalışır. İçerik CDN’lere bir kez yerleştirilir, düzenli aralıklarla tekrar çekilmez."
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "rlKkUhBfyXtU6L8ngGRgLos/XW4En94v4hW8fAVxlM8=",
        "originContent": "### Pull CDNs",
        "translatedContent": "### Pull CDN’ler"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "f5nDh+mtRk18xVC+AkX5YGskThI7zZH0RAc3cUWAIIU=",
        "originContent": "Pull CDNs grab new content from your server when the first user requests the content.  You leave the content on your server and rewrite URLs to point to the CDN.  This results in a slower request until the content is cached on the CDN.",
        "translatedContent": "Pull CDN’ler, ilk kullanıcı içeriği istediğinde yeni içeriği sunucunuzdan çeker. İçeriği sunucunuzda bırakır ve URL’leri CDN’ye işaret edecek şekilde yeniden yazarsınız. Bu, içerik CDN’de önbelleğe alınana kadar daha yavaş bir isteğe yol açar."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "sw7RyG/aVRLAF5q2GDfO4iYkNO4GQVZWMHlN4wQjrPA=",
        "originContent": "A [time-to-live (TTL)](https://en.wikipedia.org/wiki/Time_to_live) determines how long content is cached.  Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.",
        "translatedContent": "Bir [time-to-live (TTL)](https://en.wikipedia.org/wiki/Time_to_live), içeriğin ne kadar süreyle önbellekte tutulacağını belirler. Pull CDN’ler CDN üzerindeki depolama alanını en aza indirir, ancak dosyalar sona ererse ve gerçekten değişmeden önce çekilirse gereksiz trafik oluşturabilir."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "6tiL8DieeTn9STiFOYH1IgBezFTTgAQr1AG0+UPFCmM=",
        "originContent": "Sites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.",
        "translatedContent": "Yoğun trafiğe sahip siteler pull CDN’lerle iyi çalışır, çünkü trafik daha dengeli yayılır ve sadece son zamanlarda istenen içerik CDN’de kalır."
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "JjS5m8aFMZixw6364EVTGRj86cBb3SuygVv1OeD3KFQ=",
        "originContent": "### Disadvantage(s): CDN",
        "translatedContent": "### Dezavantaj(lar): CDN"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "YjphV6UFHlF8QZd6H7IwSok8B0pA/6JZvHyDB/U31t8=",
        "originContent": "* CDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.",
        "translatedContent": "* CDN maliyetleri, trafiğe bağlı olarak önemli olabilir, ancak bu, CDN kullanmadığınızda karşılaşacağınız ek maliyetlerle kıyaslanmalıdır."
      },
      {
        "row": 34,
        "rowsha": "8fkn9dVag9tyFFWpkP62SVa5GuTYSjBGAG9rC6UXths=",
        "originContent": "* Content might be stale if it is updated before the TTL expires it.",
        "translatedContent": "* İçerik, TTL süresi dolmadan güncellenirse eski kalabilir."
      },
      {
        "row": 35,
        "rowsha": "HVbfoV5USwswHOrPu5Je4OTd3oaidZeYbZX9244kJyE=",
        "originContent": "* CDNs require changing URLs for static content to point to the CDN.",
        "translatedContent": "* CDN’ler için statik içerik URL’lerinin CDN’yi işaret edecek şekilde değiştirilmesi gerekir."
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Kaynak(lar) ve daha fazla okuma"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "X0rskJNLdEMrWBtQJzbArsb0yLoO9UcDzoTOEXo5PD4=",
        "originContent": "* [Globally distributed content delivery](https://figshare.com/articles/Globally_distributed_content_delivery/6605972)",
        "translatedContent": "* [Küresel olarak dağıtılmış içerik dağıtımı](https://figshare.com/articles/Globally_distributed_content_delivery/6605972)"
      },
      {
        "row": 40,
        "rowsha": "AeTCbEPfR2cA81qlODS3FH5+DaxyKyZ8cYBRiPicnVI=",
        "originContent": "* [The differences between push and pull CDNs](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)",
        "translatedContent": "* [Push ve pull CDN’ler arasındaki farklar](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 22,
    "Content": "* [Wikipedia](https://en.wikipedia.org/wiki/Content_delivery_network)\n\n## Load balancer\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h81n9iK.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>\n</p>\n\nLoad balancers distribute incoming client requests to computing resources such as application servers and databases.  In each case, the load balancer returns the response from the computing resource to the appropriate client.  Load balancers are effective at:\n\n* Preventing requests from going to unhealthy servers\n* Preventing overloading resources\n* Helping to eliminate a single point of failure\n\nLoad balancers can be implemented with hardware (expensive) or with software such as HAProxy.\n\nAdditional benefits include:\n\n* **SSL termination** - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations\n    * Removes the need to install [X.509 certificates](https://en.wikipedia.org/wiki/X.509) on each server\n* **Session persistence** - Issue cookies and route a specific client's requests to same instance if the web apps do not keep track of sessions\n\nTo protect against failures, it's common to set up multiple load balancers, either in [active-passive](#active-passive) or [active-active](#active-active) mode.\n\nLoad balancers can route traffic based on various metrics, including:\n\n* Random\n* Least loaded\n* Session/cookies\n* [Round robin or weighted round robin](https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb)\n* [Layer 4](#layer-4-load-balancing)\n* [Layer 7](#layer-7-load-balancing)\n\n### Layer 4 load balancing\n\nLayer 4 load balancers look at info at the [transport layer](#communication) to decide how to distribute requests.  Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet.  Layer 4 load balancers forward network packets to and from the upstream server, performing [Network Address Translation (NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/).\n\n### Layer 7 load balancing",
    "ContentSha": "9cdxRHyBtl0u7vNUNZ/06ZZn+SBn6/L1EyLOFfGBVdU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Vikipedi](https://en.wikipedia.org/wiki/Content_delivery_network)\n\n## Yük dengeleyici\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h81n9iK.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Kaynak: Ölçeklenebilir sistem tasarım desenleri</a></i>\n</p>\n\nYük dengeleyiciler, gelen istemci isteklerini uygulama sunucuları ve veritabanları gibi bilişim kaynaklarına dağıtır. Her durumda, yük dengeleyici yanıtı bilişim kaynağından alıp ilgili istemciye iletir. Yük dengeleyiciler aşağıdaki konularda etkilidir:\n\n* Sağlıksız sunuculara isteklerin gitmesini önlemek\n* Kaynakların aşırı yüklenmesini önlemek\n* Tek bir hata noktasını ortadan kaldırmaya yardımcı olmak\n\nYük dengeleyiciler donanım (pahalı) ile veya HAProxy gibi yazılımlarla uygulanabilir.\n\nEk faydalar arasında şunlar bulunur:\n\n* **SSL sonlandırma** - Gelen istekleri şifreler ve sunucu yanıtlarını şifreler, böylece arka uç sunucuların bu potansiyel olarak pahalı işlemleri yapmasına gerek kalmaz\n    * Her sunucuya [X.509 sertifikaları](https://en.wikipedia.org/wiki/X.509) yükleme ihtiyacını ortadan kaldırır\n* **Oturum kalıcılığı** - Çerezler vererek ve belirli bir istemcinin isteklerini aynı instance'a yönlendirerek, web uygulamaları oturumları takip etmiyorsa bile oturum devamlılığı sağlar\n\nArızalara karşı koruma sağlamak için, genellikle birden fazla yük dengeleyici, ya [aktif-pasif](#active-passive) ya da [aktif-aktif](#active-active) modda kurulur.\n\nYük dengeleyiciler trafiği çeşitli metriklere göre yönlendirebilir, örneğin:\n\n* Rastgele\n* En az yükte olan\n* Oturum/çerezler\n* [Round robin veya ağırlıklı round robin](https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb)\n* [Layer 4](#layer-4-load-balancing)\n* [Layer 7](#layer-7-load-balancing)\n\n### Katman 4 yük dengeleme\n\nKatman 4 yük dengeleyiciler, isteklerin nasıl dağıtılacağına karar vermek için [iletişim katmanı](#communication) bilgisini inceler. Genellikle bu, başlıktaki kaynak ve hedef IP adreslerini ve portlarını içerir, ancak paketin içeriğini içermez. Katman 4 yük dengeleyiciler ağ paketlerini yukarıdaki sunucuya iletir ve [Ağ Adresi Çevirisi (NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/) uygular.\n\n### Katman 7 yük dengeleme",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "YfknGSt3mgSC2vQS7D9984LpAs7P+O8aGp1oUfhwAhg=",
        "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Content_delivery_network)",
        "translatedContent": "* [Vikipedi](https://en.wikipedia.org/wiki/Content_delivery_network)"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "Ao8ZomKw0HBRDMy/0qZhvnrS6gMQiupr1bhlarWiu7M=",
        "originContent": "## Load balancer",
        "translatedContent": "## Yük dengeleyici"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 6,
        "rowsha": "h6sQMelc9THWWcHWU5a9DF4mpg0v6IKfT59CZt5U3ao=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h81n9iK.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h81n9iK.png\">"
      },
      {
        "row": 7,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 8,
        "rowsha": "BlGpJr1aaS7U1ovkxsSc1S7ZO+WxTq/Ry9MM5AGpY3s=",
        "originContent": "  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>",
        "translatedContent": "  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Kaynak: Ölçeklenebilir sistem tasarım desenleri</a></i>"
      },
      {
        "row": 9,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "4k2a9uM1Fgg2SDoDZRQklRig6D0IRvnHt1LXSDoeXUk=",
        "originContent": "Load balancers distribute incoming client requests to computing resources such as application servers and databases.  In each case, the load balancer returns the response from the computing resource to the appropriate client.  Load balancers are effective at:",
        "translatedContent": "Yük dengeleyiciler, gelen istemci isteklerini uygulama sunucuları ve veritabanları gibi bilişim kaynaklarına dağıtır. Her durumda, yük dengeleyici yanıtı bilişim kaynağından alıp ilgili istemciye iletir. Yük dengeleyiciler aşağıdaki konularda etkilidir:"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "6wYnNMCx45ENEX5Xq0qxtujLl6pJ9PH0XNJAjbXW2V4=",
        "originContent": "* Preventing requests from going to unhealthy servers",
        "translatedContent": "* Sağlıksız sunuculara isteklerin gitmesini önlemek"
      },
      {
        "row": 14,
        "rowsha": "5mQXmG2xH4bDVhp+sj/zBTo9+1ivS0QaaWxdwhsXLRo=",
        "originContent": "* Preventing overloading resources",
        "translatedContent": "* Kaynakların aşırı yüklenmesini önlemek"
      },
      {
        "row": 15,
        "rowsha": "FJ8a/F9gy2R3aMx8bKEHvifAete5J+GBMEqLf5YXWaM=",
        "originContent": "* Helping to eliminate a single point of failure",
        "translatedContent": "* Tek bir hata noktasını ortadan kaldırmaya yardımcı olmak"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "DNdzJResTG1iZiLksD2NGBsVbr4AwvFed3pPrBYhow0=",
        "originContent": "Load balancers can be implemented with hardware (expensive) or with software such as HAProxy.",
        "translatedContent": "Yük dengeleyiciler donanım (pahalı) ile veya HAProxy gibi yazılımlarla uygulanabilir."
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "+CFxebREyKkgHc/8UD4FiQpt1wm+8buX83sw3i7tiUI=",
        "originContent": "Additional benefits include:",
        "translatedContent": "Ek faydalar arasında şunlar bulunur:"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "xSrFzA8yBTDjWDjJbMNZn9LK/pBq5GDwgUONNdWpSUY=",
        "originContent": "* **SSL termination** - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations",
        "translatedContent": "* **SSL sonlandırma** - Gelen istekleri şifreler ve sunucu yanıtlarını şifreler, böylece arka uç sunucuların bu potansiyel olarak pahalı işlemleri yapmasına gerek kalmaz"
      },
      {
        "row": 22,
        "rowsha": "QWIxyqIlp3o4sF+0KwvMv8ok25amcfNP9fJLlh3bfY8=",
        "originContent": "    * Removes the need to install [X.509 certificates](https://en.wikipedia.org/wiki/X.509) on each server",
        "translatedContent": "    * Her sunucuya [X.509 sertifikaları](https://en.wikipedia.org/wiki/X.509) yükleme ihtiyacını ortadan kaldırır"
      },
      {
        "row": 23,
        "rowsha": "vk1X20SI2qy/YSCC7GrOM1v5flvy6RUv8ciMsolcoGo=",
        "originContent": "* **Session persistence** - Issue cookies and route a specific client's requests to same instance if the web apps do not keep track of sessions",
        "translatedContent": "* **Oturum kalıcılığı** - Çerezler vererek ve belirli bir istemcinin isteklerini aynı instance'a yönlendirerek, web uygulamaları oturumları takip etmiyorsa bile oturum devamlılığı sağlar"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "T4syA6MGOLjnUeVf2OWfiBKLdQ1JazDX02nc1xuIAk8=",
        "originContent": "To protect against failures, it's common to set up multiple load balancers, either in [active-passive](#active-passive) or [active-active](#active-active) mode.",
        "translatedContent": "Arızalara karşı koruma sağlamak için, genellikle birden fazla yük dengeleyici, ya [aktif-pasif](#active-passive) ya da [aktif-aktif](#active-active) modda kurulur."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "FrEIOzNFrfNBUDqFIfCwXk0X9fllvhYyiGr0bDioroc=",
        "originContent": "Load balancers can route traffic based on various metrics, including:",
        "translatedContent": "Yük dengeleyiciler trafiği çeşitli metriklere göre yönlendirebilir, örneğin:"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "OAkIAkhhnJ5O+09DoibHAHkWnSwYYryr62/BXWmOgyQ=",
        "originContent": "* Random",
        "translatedContent": "* Rastgele"
      },
      {
        "row": 30,
        "rowsha": "NKVEnR5Hou/TUVRfSREUWsNgJR+HD/IzDpHpowQ1000=",
        "originContent": "* Least loaded",
        "translatedContent": "* En az yükte olan"
      },
      {
        "row": 31,
        "rowsha": "bgpAMm3N/nLo+MaMyB8ZAVmB3WpZ3s79uPxHSu2O9RU=",
        "originContent": "* Session/cookies",
        "translatedContent": "* Oturum/çerezler"
      },
      {
        "row": 32,
        "rowsha": "PxjaNHNHE3DkepJUpn3eiTdsNI2Cng5yhZpKWba9QTk=",
        "originContent": "* [Round robin or weighted round robin](https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb)",
        "translatedContent": "* [Round robin veya ağırlıklı round robin](https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb)"
      },
      {
        "row": 33,
        "rowsha": "L7VnumepgunJZ0MiMduI35k/le+iXLpZ6QfWjzfzxBY=",
        "originContent": "* [Layer 4](#layer-4-load-balancing)",
        "translatedContent": "* [Layer 4](#layer-4-load-balancing)"
      },
      {
        "row": 34,
        "rowsha": "VokpaOXBw5YcX1NAfYl6CmQPZhQ0TaVJsYGoei16lWY=",
        "originContent": "* [Layer 7](#layer-7-load-balancing)",
        "translatedContent": "* [Layer 7](#layer-7-load-balancing)"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "8BsY9UHoujca9pbk+ZHhpu+vymfvLa+UgrJ/x1arCz4=",
        "originContent": "### Layer 4 load balancing",
        "translatedContent": "### Katman 4 yük dengeleme"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "3stJb/JLj/KFQbtq6QrEMn8ngL/VHxzgCq0E9po4D58=",
        "originContent": "Layer 4 load balancers look at info at the [transport layer](#communication) to decide how to distribute requests.  Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet.  Layer 4 load balancers forward network packets to and from the upstream server, performing [Network Address Translation (NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/).",
        "translatedContent": "Katman 4 yük dengeleyiciler, isteklerin nasıl dağıtılacağına karar vermek için [iletişim katmanı](#communication) bilgisini inceler. Genellikle bu, başlıktaki kaynak ve hedef IP adreslerini ve portlarını içerir, ancak paketin içeriğini içermez. Katman 4 yük dengeleyiciler ağ paketlerini yukarıdaki sunucuya iletir ve [Ağ Adresi Çevirisi (NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/) uygular."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "bVLVCjekkNVRGyijkGzoJmucD9UDL3Yf5p1kRLQi4As=",
        "originContent": "### Layer 7 load balancing",
        "translatedContent": "### Katman 7 yük dengeleme"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 23,
    "Content": "\nLayer 7 load balancers look at the [application layer](#communication) to decide how to distribute requests.  This can involve contents of the header, message, and cookies.  Layer 7 load balancers terminate network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server.  For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.\n\nAt the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.\n\n### Horizontal scaling\n\nLoad balancers can also help with horizontal scaling, improving performance and availability.  Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called **Vertical Scaling**.  It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.\n\n#### Disadvantage(s): horizontal scaling\n\n* Scaling horizontally introduces complexity and involves cloning servers\n    * Servers should be stateless: they should not contain any user-related data like sessions or profile pictures\n    * Sessions can be stored in a centralized data store such as a [database](#database) (SQL, NoSQL) or a persistent [cache](#cache) (Redis, Memcached)\n* Downstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out\n\n### Disadvantage(s): load balancer\n\n* The load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.\n* Introducing a load balancer to help eliminate a single point of failure results in increased complexity.\n* A single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.\n\n### Source(s) and further reading\n\n* [NGINX architecture](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy architecture guide](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [Scalability](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n* [Wikipedia](https://en.wikipedia.org/wiki/Load_balancing_(computing))\n* [Layer 4 load balancing](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)\n* [Layer 7 load balancing](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)\n* [ELB listener config](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)\n\n## Reverse proxy (web server)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n41Azff.png\">\n  <br/>\n  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>Source: Wikipedia</a></i>\n  <br/>\n</p>",
    "ContentSha": "d9PfMKhS5It6VuFSV5VdEgf336M0xQeGW1c7I8NDHiY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Katman 7 yük dengeleyiciler, isteklerin nasıl dağıtılacağına karar vermek için [uygulama katmanına](#communication) bakar. Bu, başlık, mesaj ve çerezlerin içeriğini içerebilir. Katman 7 yük dengeleyiciler ağ trafiğini sonlandırır, mesajı okur, yük dengeleme kararını verir, ardından seçilen sunucuya bir bağlantı açar. Örneğin, bir katman 7 yük dengeleyici, video trafiğini videoları barındıran sunuculara yönlendirirken, daha hassas kullanıcı fatura trafiğini güvenliği artırılmış sunuculara yönlendirebilir.\n\nEsneklik pahasına, katman 4 yük dengeleme, Katman 7'ye göre daha az zaman ve bilgi işlem kaynağı gerektirir, ancak modern donanımlarda performans etkisi minimum olabilir.\n\n### Yatay ölçekleme\n\nYük dengeleyiciler ayrıca yatay ölçeklemeye yardımcı olarak performans ve kullanılabilirliği artırabilir. Ucuz donanım kullanarak ölçeklemek, daha pahalı donanımda tek bir sunucuyu ölçeklemekten (Dikey Ölçekleme olarak adlandırılır) daha maliyet etkin ve daha yüksek kullanılabilirlik sağlar. Ayrıca, ucuz donanımda çalışan yetenekleri işe almak, özel kurumsal sistemler için yetenek bulmaktan daha kolaydır.\n\n#### Dezavantaj(lar): yatay ölçekleme\n\n* Yatay ölçekleme karmaşıklık getirir ve sunucuları klonlamayı gerektirir\n    * Sunucular durumsuz olmalıdır: oturumlar veya profil resimleri gibi kullanıcıya ait veriler içermemelidir\n    * Oturumlar merkezi bir veri deposunda, örneğin bir [veritabanı](#database) (SQL, NoSQL) veya kalıcı bir [önbellek](#cache) (Redis, Memcached) içinde saklanabilir\n* Önbellekler ve veritabanları gibi alt sunucular, üst sunucular ölçeklendikçe daha fazla eşzamanlı bağlantıyı yönetmelidir\n\n### Dezavantaj(lar): yük dengeleyici\n\n* Yük dengeleyici, yeterli kaynağa sahip değilse veya düzgün yapılandırılmamışsa bir performans darboğazı haline gelebilir.\n* Tek hata noktalarını ortadan kaldırmak için yük dengeleyici eklemek, karmaşıklığı artırır.\n* Tek bir yük dengeleyici tek hata noktasıdır, birden fazla yük dengeleyici yapılandırmak ise daha fazla karmaşıklık getirir.\n\n### Kaynak(lar) ve daha fazla okuma\n\n* [NGINX mimarisi](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy mimari rehberi](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [Ölçeklenebilirlik](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n* [Vikipedi](https://en.wikipedia.org/wiki/Load_balancing_(computing))\n* [Katman 4 yük dengeleme](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)\n* [Katman 7 yük dengeleme](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)\n* [ELB dinleyici yapılandırması](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)\n\n## Ters proxy (web sunucusu)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n41Azff.png\">\n  <br/>\n  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>Kaynak: Vikipedi</a></i>\n  <br/>\n</p>\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Katman 7 yük dengeleyiciler, isteklerin nasıl dağıtılacağına karar vermek için [uygulama katmanına](#communication) bakar. Bu, başlık, mesaj ve çerezlerin içeriğini içerebilir. Katman 7 yük dengeleyiciler ağ trafiğini sonlandırır, mesajı okur, yük dengeleme kararını verir, ardından seçilen sunucuya bir bağlantı açar. Örneğin, bir katman 7 yük dengeleyici, video trafiğini videoları barındıran sunuculara yönlendirirken, daha hassas kullanıcı fatura trafiğini güvenliği artırılmış sunuculara yönlendirebilir."
      },
      {
        "row": 2,
        "rowsha": "hNinjintYzj6BMJTufo596jyxYVs6Wzx5q0qpPz65Tc=",
        "originContent": "Layer 7 load balancers look at the [application layer](#communication) to decide how to distribute requests.  This can involve contents of the header, message, and cookies.  Layer 7 load balancers terminate network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server.  For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Esneklik pahasına, katman 4 yük dengeleme, Katman 7'ye göre daha az zaman ve bilgi işlem kaynağı gerektirir, ancak modern donanımlarda performans etkisi minimum olabilir."
      },
      {
        "row": 4,
        "rowsha": "eq1iV0OSDazAO/ff1N3OCDTkIh5l3M8RACiInJ9E/f4=",
        "originContent": "At the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Yatay ölçekleme"
      },
      {
        "row": 6,
        "rowsha": "HujpPLjyGfjrm090FYcsRg+jeM37pmrFlfXBr0ojysE=",
        "originContent": "### Horizontal scaling",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Yük dengeleyiciler ayrıca yatay ölçeklemeye yardımcı olarak performans ve kullanılabilirliği artırabilir. Ucuz donanım kullanarak ölçeklemek, daha pahalı donanımda tek bir sunucuyu ölçeklemekten (Dikey Ölçekleme olarak adlandırılır) daha maliyet etkin ve daha yüksek kullanılabilirlik sağlar. Ayrıca, ucuz donanımda çalışan yetenekleri işe almak, özel kurumsal sistemler için yetenek bulmaktan daha kolaydır."
      },
      {
        "row": 8,
        "rowsha": "mwC43eiaPybUHX/F7Xi46vAG1Eg19+SWMWU53uCkCeA=",
        "originContent": "Load balancers can also help with horizontal scaling, improving performance and availability.  Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called **Vertical Scaling**.  It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Dezavantaj(lar): yatay ölçekleme"
      },
      {
        "row": 10,
        "rowsha": "DxYbLmgaDjx6y14iKkzkIPyOsLlh/lPJKG5SlED5zY8=",
        "originContent": "#### Disadvantage(s): horizontal scaling",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Yatay ölçekleme karmaşıklık getirir ve sunucuları klonlamayı gerektirir"
      },
      {
        "row": 12,
        "rowsha": "GTauaAyaFN/WZrsWFaNLJr1jNvonApRcifzAA6bj4lM=",
        "originContent": "* Scaling horizontally introduces complexity and involves cloning servers",
        "translatedContent": "    * Sunucular durumsuz olmalıdır: oturumlar veya profil resimleri gibi kullanıcıya ait veriler içermemelidir"
      },
      {
        "row": 13,
        "rowsha": "ZVM+ophRkm47wnBiCd4vTlZEDBMhrDMYstTuS8sm+vo=",
        "originContent": "    * Servers should be stateless: they should not contain any user-related data like sessions or profile pictures",
        "translatedContent": "    * Oturumlar merkezi bir veri deposunda, örneğin bir [veritabanı](#database) (SQL, NoSQL) veya kalıcı bir [önbellek](#cache) (Redis, Memcached) içinde saklanabilir"
      },
      {
        "row": 14,
        "rowsha": "D/f10jXG6zDz1v4jf/JYCVs2yLAKUM4v+skNjxc8fVM=",
        "originContent": "    * Sessions can be stored in a centralized data store such as a [database](#database) (SQL, NoSQL) or a persistent [cache](#cache) (Redis, Memcached)",
        "translatedContent": "* Önbellekler ve veritabanları gibi alt sunucular, üst sunucular ölçeklendikçe daha fazla eşzamanlı bağlantıyı yönetmelidir"
      },
      {
        "row": 15,
        "rowsha": "wSXmadVwkmeMPof0OaYB4MCKgWEjWx3fjP5BUSRnUSk=",
        "originContent": "* Downstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Dezavantaj(lar): yük dengeleyici"
      },
      {
        "row": 17,
        "rowsha": "XP5laNx7aLA4Bd3VTZW6LOV2pjfeYFA9B3CjiSQbK1M=",
        "originContent": "### Disadvantage(s): load balancer",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Yük dengeleyici, yeterli kaynağa sahip değilse veya düzgün yapılandırılmamışsa bir performans darboğazı haline gelebilir."
      },
      {
        "row": 19,
        "rowsha": "N3Un9PJNf4zd/XonGVt5HOrF3B8is7cdD0rIz/pgLDQ=",
        "originContent": "* The load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.",
        "translatedContent": "* Tek hata noktalarını ortadan kaldırmak için yük dengeleyici eklemek, karmaşıklığı artırır."
      },
      {
        "row": 20,
        "rowsha": "ug0SGnEU8aIX22VAmpUUamTBrXXdaAfWdzqbOm5fh0M=",
        "originContent": "* Introducing a load balancer to help eliminate a single point of failure results in increased complexity.",
        "translatedContent": "* Tek bir yük dengeleyici tek hata noktasıdır, birden fazla yük dengeleyici yapılandırmak ise daha fazla karmaşıklık getirir."
      },
      {
        "row": 21,
        "rowsha": "YU6dvlgVxtjIRADDUTlIKCmASEQ2nOvlMfspkGNBcSk=",
        "originContent": "* A single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Kaynak(lar) ve daha fazla okuma"
      },
      {
        "row": 23,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [NGINX mimarisi](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)"
      },
      {
        "row": 25,
        "rowsha": "u7t9RSOsBLbDQOOlZAMiu/Ky/JVnirRtRxeU3T5rEdg=",
        "originContent": "* [NGINX architecture](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)",
        "translatedContent": "* [HAProxy mimari rehberi](http://www.haproxy.org/download/1.2/doc/architecture.txt)"
      },
      {
        "row": 26,
        "rowsha": "I6F2p40wC4iALCteQwB8aXq7Y+CfqPOq9z2Yqh4mtwc=",
        "originContent": "* [HAProxy architecture guide](http://www.haproxy.org/download/1.2/doc/architecture.txt)",
        "translatedContent": "* [Ölçeklenebilirlik](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)"
      },
      {
        "row": 27,
        "rowsha": "ptcD1852UW7xlGx34pDmC+AgFtFzFO6+yrEToGnsgxI=",
        "originContent": "* [Scalability](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)",
        "translatedContent": "* [Vikipedi](https://en.wikipedia.org/wiki/Load_balancing_(computing))"
      },
      {
        "row": 28,
        "rowsha": "pPYUxxnt3BBBqjS8iMnTEKeYv357KowYlTqWPjcmlU4=",
        "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Load_balancing_(computing))",
        "translatedContent": "* [Katman 4 yük dengeleme](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)"
      },
      {
        "row": 29,
        "rowsha": "WPFYggBkI6JT2HYtwFKa34s4qW4btdUZSrtIFj5Mqcs=",
        "originContent": "* [Layer 4 load balancing](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)",
        "translatedContent": "* [Katman 7 yük dengeleme](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)"
      },
      {
        "row": 30,
        "rowsha": "LZ2k/ISO0P/DDSJCxGZsWhg62ow4Kf7P7XrgeTUn/+M=",
        "originContent": "* [Layer 7 load balancing](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)",
        "translatedContent": "* [ELB dinleyici yapılandırması](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)"
      },
      {
        "row": 31,
        "rowsha": "soSCQpzIs3UpclHUlmpTt0czKhkftOeXX4r1d+b/Ha4=",
        "originContent": "* [ELB listener config](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## Ters proxy (web sunucusu)"
      },
      {
        "row": 33,
        "rowsha": "57oBVkplD9msiWgbKa+osPNwyddtjB1Cpm1KEABE3Hg=",
        "originContent": "## Reverse proxy (web server)",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 35,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n41Azff.png\">"
      },
      {
        "row": 36,
        "rowsha": "MrN3YHgIbz1VRZyteJkzaUvekCIgJyT62IwmaKrxDQ4=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n41Azff.png\">",
        "translatedContent": "  <br/>"
      },
      {
        "row": 37,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>Kaynak: Vikipedi</a></i>"
      },
      {
        "row": 38,
        "rowsha": "F+qmb/XXOId8oNBkUx9olLj2eiHNE+sH3pIQgZO1JDg=",
        "originContent": "  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>Source: Wikipedia</a></i>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 39,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "</p>"
      },
      {
        "row": 40,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 24,
    "Content": "\nA reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public.  Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.\n\nAdditional benefits include:\n\n* **Increased security** - Hide information about backend servers, blacklist IPs, limit number of connections per client\n* **Increased scalability and flexibility** - Clients only see the reverse proxy's IP, allowing you to scale servers or change their configuration\n* **SSL termination** - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations\n    * Removes the need to install [X.509 certificates](https://en.wikipedia.org/wiki/X.509) on each server\n* **Compression** - Compress server responses\n* **Caching** - Return the response for cached requests\n* **Static content** - Serve static content directly\n    * HTML/CSS/JS\n    * Photos\n    * Videos\n    * Etc\n\n### Load balancer vs reverse proxy\n\n* Deploying a load balancer is useful when you have multiple servers.  Often, load balancers  route traffic to a set of servers serving the same function.\n* Reverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.\n* Solutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.\n\n### Disadvantage(s): reverse proxy\n\n* Introducing a reverse proxy results in increased complexity.\n* A single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a [failover](https://en.wikipedia.org/wiki/Failover)) further increases complexity.\n\n### Source(s) and further reading\n\n* [Reverse proxy vs load balancer](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)\n* [NGINX architecture](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy architecture guide](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [Wikipedia](https://en.wikipedia.org/wiki/Reverse_proxy)\n\n## Application layer\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yB5SYwm.png\">\n  <br/>",
    "ContentSha": "mSXIlXJOirzgK7lcCGgaBsQWdB09fQQPiRxJI8Azkv4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nTers proxy, dahili hizmetleri merkezileştiren ve kamuya birleşik arayüzler sağlayan bir web sunucusudur.  İstemcilerden gelen talepler, yerine getirebilecek bir sunucuya iletilir ve ters proxy, sunucunun yanıtını istemciye döndürür.\n\nEk avantajlar şunlardır:\n\n* **Artan güvenlik** - Arka uç sunucular hakkındaki bilgileri gizler, IP'leri kara listeye alır, istemci başına bağlantı sayısını sınırlar\n* **Artan ölçeklenebilirlik ve esneklik** - İstemciler yalnızca ters proxy'nin IP'sini görür, böylece sunucuları ölçeklendirebilir veya yapılandırmalarını değiştirebilirsiniz\n* **SSL sonlandırma** - Gelen talepleri çözer ve sunucu yanıtlarını şifreler, böylece arka uç sunucular bu potansiyel olarak maliyetli işlemleri yapmak zorunda kalmaz\n    * Her sunucuya [X.509 sertifikası](https://en.wikipedia.org/wiki/X.509) yükleme gerekliliğini ortadan kaldırır\n* **Sıkıştırma** - Sunucu yanıtlarını sıkıştırır\n* **Önbellekleme** - Önbelleğe alınmış talepler için yanıtı döndürür\n* **Statik içerik** - Statik içerikleri doğrudan sunar\n    * HTML/CSS/JS\n    * Fotoğraflar\n    * Videolar\n    * vb.\n\n### Yük dengeleyici vs ters proxy\n\n* Birden fazla sunucunuz olduğunda yük dengeleyici dağıtmak faydalıdır.  Genellikle yük dengeleyiciler, aynı işlevi yerine getiren bir sunucu grubuna trafiği yönlendirir.\n* Ters proxyler, yalnızca bir web sunucusu veya uygulama sunucusu olsa bile, önceki bölümde açıklanan avantajları sağlar.\n* NGINX ve HAProxy gibi çözümler hem katman 7 ters proxy hem de yük dengeleme desteği sunabilir.\n\n### Dezavantaj(lar): ters proxy\n\n* Ters proxy eklemek, daha fazla karmaşıklık getirir.\n* Tek bir ters proxy, tek hata noktasıdır; birden fazla ters proxy (örn. [failover](https://en.wikipedia.org/wiki/Failover)) yapılandırmak karmaşıklığı daha da artırır.\n\n### Kaynak(lar) ve daha fazla okuma\n\n* [Ters proxy vs yük dengeleyici](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)\n* [NGINX mimarisi](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy mimari rehberi](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [Vikipedi](https://en.wikipedia.org/wiki/Reverse_proxy)\n\n## Uygulama katmanı\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yB5SYwm.png\">\n  <br/>",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "pqBNY+Vd+IvBY3McnLIyARCVdV5BFhQ9kiXciiPUuWg=",
        "originContent": "A reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public.  Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.",
        "translatedContent": "Ters proxy, dahili hizmetleri merkezileştiren ve kamuya birleşik arayüzler sağlayan bir web sunucusudur.  İstemcilerden gelen talepler, yerine getirebilecek bir sunucuya iletilir ve ters proxy, sunucunun yanıtını istemciye döndürür."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "+CFxebREyKkgHc/8UD4FiQpt1wm+8buX83sw3i7tiUI=",
        "originContent": "Additional benefits include:",
        "translatedContent": "Ek avantajlar şunlardır:"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "kg4TPAki/rcr3kuuwvteneL22m/4V8yp3exHEm1WmfA=",
        "originContent": "* **Increased security** - Hide information about backend servers, blacklist IPs, limit number of connections per client",
        "translatedContent": "* **Artan güvenlik** - Arka uç sunucular hakkındaki bilgileri gizler, IP'leri kara listeye alır, istemci başına bağlantı sayısını sınırlar"
      },
      {
        "row": 7,
        "rowsha": "w0DZU3NdQ8715Tsp7qDSirEnUpVAHxQJ9nhz2o3Pt/I=",
        "originContent": "* **Increased scalability and flexibility** - Clients only see the reverse proxy's IP, allowing you to scale servers or change their configuration",
        "translatedContent": "* **Artan ölçeklenebilirlik ve esneklik** - İstemciler yalnızca ters proxy'nin IP'sini görür, böylece sunucuları ölçeklendirebilir veya yapılandırmalarını değiştirebilirsiniz"
      },
      {
        "row": 8,
        "rowsha": "xSrFzA8yBTDjWDjJbMNZn9LK/pBq5GDwgUONNdWpSUY=",
        "originContent": "* **SSL termination** - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations",
        "translatedContent": "* **SSL sonlandırma** - Gelen talepleri çözer ve sunucu yanıtlarını şifreler, böylece arka uç sunucular bu potansiyel olarak maliyetli işlemleri yapmak zorunda kalmaz"
      },
      {
        "row": 9,
        "rowsha": "QWIxyqIlp3o4sF+0KwvMv8ok25amcfNP9fJLlh3bfY8=",
        "originContent": "    * Removes the need to install [X.509 certificates](https://en.wikipedia.org/wiki/X.509) on each server",
        "translatedContent": "    * Her sunucuya [X.509 sertifikası](https://en.wikipedia.org/wiki/X.509) yükleme gerekliliğini ortadan kaldırır"
      },
      {
        "row": 10,
        "rowsha": "SqynvWcZzUNhlDwGO++H/2mxvPeT4O7ZelHcr2PcQK8=",
        "originContent": "* **Compression** - Compress server responses",
        "translatedContent": "* **Sıkıştırma** - Sunucu yanıtlarını sıkıştırır"
      },
      {
        "row": 11,
        "rowsha": "/paZJTVqfJF7IsPLBA3GcTjtIlchV+UWi8hzvXIcDfg=",
        "originContent": "* **Caching** - Return the response for cached requests",
        "translatedContent": "* **Önbellekleme** - Önbelleğe alınmış talepler için yanıtı döndürür"
      },
      {
        "row": 12,
        "rowsha": "g98/MjxP0+D8KtUPBY+kkgk5ffZlWTc05yV+iKpSQvI=",
        "originContent": "* **Static content** - Serve static content directly",
        "translatedContent": "* **Statik içerik** - Statik içerikleri doğrudan sunar"
      },
      {
        "row": 13,
        "rowsha": "iAmBVmr8kX4KuXdPFHYHZAhVgyw94ki9uIvawdeyNeg=",
        "originContent": "    * HTML/CSS/JS",
        "translatedContent": "    * HTML/CSS/JS"
      },
      {
        "row": 14,
        "rowsha": "2L4m+QKkj1bSExoWNAIjYZaIBXYJDNOmiUdmIYNBKig=",
        "originContent": "    * Photos",
        "translatedContent": "    * Fotoğraflar"
      },
      {
        "row": 15,
        "rowsha": "iz9sb0EwQ6wE95PBrBa9Di1XjuFyCAJry2vaAj3mjcs=",
        "originContent": "    * Videos",
        "translatedContent": "    * Videolar"
      },
      {
        "row": 16,
        "rowsha": "J226Cb5De6+BN2Z3axGAaOWOzysDPjsEqSZuJdWdEH4=",
        "originContent": "    * Etc",
        "translatedContent": "    * vb."
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "ehHoUaR7ClxjMCiSJy4nTwWaTdSTI9CywbZmPeiMFDw=",
        "originContent": "### Load balancer vs reverse proxy",
        "translatedContent": "### Yük dengeleyici vs ters proxy"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "WZcxbbJyyYX+NaQ2HI6vmmpAgPxiuIxc1vkrw7yhkiQ=",
        "originContent": "* Deploying a load balancer is useful when you have multiple servers.  Often, load balancers  route traffic to a set of servers serving the same function.",
        "translatedContent": "* Birden fazla sunucunuz olduğunda yük dengeleyici dağıtmak faydalıdır.  Genellikle yük dengeleyiciler, aynı işlevi yerine getiren bir sunucu grubuna trafiği yönlendirir."
      },
      {
        "row": 21,
        "rowsha": "7RFYhUz3wMfiF2hxsNPIOyT0RCT5aoOx0MQtMS+WSmg=",
        "originContent": "* Reverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.",
        "translatedContent": "* Ters proxyler, yalnızca bir web sunucusu veya uygulama sunucusu olsa bile, önceki bölümde açıklanan avantajları sağlar."
      },
      {
        "row": 22,
        "rowsha": "6Wvr2j7KrYAYKNJLx1qzT0iHZgXiPw75WygpxA2ai5Y=",
        "originContent": "* Solutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.",
        "translatedContent": "* NGINX ve HAProxy gibi çözümler hem katman 7 ters proxy hem de yük dengeleme desteği sunabilir."
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "ic7OidJCC5YCuEroahp2bhGpmoY5raPm61Kp5Cve8ls=",
        "originContent": "### Disadvantage(s): reverse proxy",
        "translatedContent": "### Dezavantaj(lar): ters proxy"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "vBlekFF9US7hmLqGU1wIhkgE4b6OkFl/lDtbVIveltk=",
        "originContent": "* Introducing a reverse proxy results in increased complexity.",
        "translatedContent": "* Ters proxy eklemek, daha fazla karmaşıklık getirir."
      },
      {
        "row": 27,
        "rowsha": "8XtRJSNj3OsLgbLoG+ae0RiYkm8tpPEU5r72Vgub9fQ=",
        "originContent": "* A single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a [failover](https://en.wikipedia.org/wiki/Failover)) further increases complexity.",
        "translatedContent": "* Tek bir ters proxy, tek hata noktasıdır; birden fazla ters proxy (örn. [failover](https://en.wikipedia.org/wiki/Failover)) yapılandırmak karmaşıklığı daha da artırır."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Kaynak(lar) ve daha fazla okuma"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "dwTS+CUwpBYuPVKdkXAGeQNSO2sDfoQXt8O3+5/2puc=",
        "originContent": "* [Reverse proxy vs load balancer](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)",
        "translatedContent": "* [Ters proxy vs yük dengeleyici](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)"
      },
      {
        "row": 32,
        "rowsha": "u7t9RSOsBLbDQOOlZAMiu/Ky/JVnirRtRxeU3T5rEdg=",
        "originContent": "* [NGINX architecture](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)",
        "translatedContent": "* [NGINX mimarisi](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)"
      },
      {
        "row": 33,
        "rowsha": "I6F2p40wC4iALCteQwB8aXq7Y+CfqPOq9z2Yqh4mtwc=",
        "originContent": "* [HAProxy architecture guide](http://www.haproxy.org/download/1.2/doc/architecture.txt)",
        "translatedContent": "* [HAProxy mimari rehberi](http://www.haproxy.org/download/1.2/doc/architecture.txt)"
      },
      {
        "row": 34,
        "rowsha": "T1iq0loFSY7nsxMMPzZ8z0I8/jxVU1QGdf6vmtWe+nk=",
        "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Reverse_proxy)",
        "translatedContent": "* [Vikipedi](https://en.wikipedia.org/wiki/Reverse_proxy)"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "6NabscnPk8ymcpOMLJ5upxB+wi1ip0RGcIu4XBRXEUo=",
        "originContent": "## Application layer",
        "translatedContent": "## Uygulama katmanı"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 39,
        "rowsha": "2DDgvJNfz35KH7Xl7Y7Q+m7siI4rwo+uwWAru4THF3g=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yB5SYwm.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yB5SYwm.png\">"
      },
      {
        "row": 40,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 25,
    "Content": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>\n</p>\n\nSeparating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently.  Adding a new API results in adding application servers without necessarily adding additional web servers.  The **single responsibility principle** advocates for small and autonomous services that work together.  Small teams with small services can plan more aggressively for rapid growth.\n\nWorkers in the application layer also help enable [asynchronism](#asynchronism).\n\n### Microservices\n\nRelated to this discussion are [microservices](https://en.wikipedia.org/wiki/Microservices), which can be described as a suite of independently deployable, small, modular services.  Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. <sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>\n\nPinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.\n\n### Service Discovery\n\nSystems such as [Consul](https://www.consul.io/docs/index.html), [Etcd](https://coreos.com/etcd/docs/latest), and [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) can help services find each other by keeping track of registered names, addresses, and ports.  [Health checks](https://www.consul.io/intro/getting-started/checks.html) help verify service integrity and are often done using an [HTTP](#hypertext-transfer-protocol-http) endpoint.  Both Consul and Etcd have a built in [key-value store](#key-value-store) that can be useful for storing config values and other shared data.\n\n### Disadvantage(s): application layer\n\n* Adding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).\n* Microservices can add complexity in terms of deployments and operations.\n\n### Source(s) and further reading\n\n* [Intro to architecting systems for scale](http://lethain.com/introduction-to-architecting-systems-for-scale)\n* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Service oriented architecture](https://en.wikipedia.org/wiki/Service-oriented_architecture)\n* [Introduction to Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)\n* [Here's what you need to know about building microservices](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)\n\n## Database\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Xkm5CXz.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Source: Scaling up to your first 10 million users</a></i>\n</p>\n\n### Relational database management system (RDBMS)\n",
    "ContentSha": "4XnXpBum9tEdb1sG9FZ65dxvl1TxD2b55kzZSCwIQE8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Kaynak: Ölçeklenebilir sistem mimarisi için giriş</a></i>\n</p>\n\nWeb katmanını uygulama katmanından (diğer adıyla platform katmanı) ayırmak, her iki katmanı da bağımsız olarak ölçeklendirmeye ve yapılandırmaya olanak tanır. Yeni bir API eklemek, mutlaka ek web sunucuları eklemeden uygulama sunucuları eklenmesiyle sonuçlanır. **Tek sorumluluk ilkesi**, birlikte çalışan küçük ve özerk servisleri savunur. Küçük ekipler ve küçük servisler, hızlı büyümeye daha agresif bir şekilde plan yapabilir.\n\nUygulama katmanındaki çalışanlar [asenkronizmi](#asynchronism) etkinleştirmeye de yardımcı olur.\n\n### Mikroservisler\n\nBu tartışmayla ilgili olan [mikroservisler](https://en.wikipedia.org/wiki/Microservices), bağımsız olarak dağıtılabilen, küçük, modüler servisler paketi olarak tanımlanabilir. Her servis benzersiz bir süreçte çalışır ve iş hedefini gerçekleştirmek için iyi tanımlanmış, hafif bir mekanizma ile iletişim kurar. <sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>\n\nÖrneğin Pinterest, şu mikroservislere sahip olabilir: kullanıcı profili, takipçi, akış, arama, fotoğraf yükleme vb.\n\n### Servis Keşfi\n\n[Consul](https://www.consul.io/docs/index.html), [Etcd](https://coreos.com/etcd/docs/latest) ve [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) gibi sistemler, kayıtlı isimleri, adresleri ve portları takip ederek servislerin birbirini bulmasına yardımcı olabilir. [Sağlık kontrolleri](https://www.consul.io/intro/getting-started/checks.html) servis bütünlüğünü doğrulamada yardımcı olur ve genellikle bir [HTTP](#hypertext-transfer-protocol-http) uç noktası kullanılarak yapılır. Hem Consul hem de Etcd, yapılandırma değerleri ve diğer paylaşılan verileri depolamak için kullanılabilen yerleşik bir [anahtar-değer deposu](#key-value-store) içerir.\n\n### Dezavantaj(lar): uygulama katmanı\n\n* Gevşek bağlı servislerle bir uygulama katmanı eklemek, mimari, operasyon ve süreç açısından (monolitik sisteme kıyasla) farklı bir yaklaşım gerektirir.\n* Mikroservisler, dağıtımlar ve operasyonlar açısından karmaşıklık ekleyebilir.\n\n### Kaynak(lar) ve daha fazla okuma\n\n* [Ölçeklenebilir sistem mimarisi için giriş](http://lethain.com/introduction-to-architecting-systems-for-scale)\n* [Sistem tasarımı mülakatını aşmak](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Servis odaklı mimari](https://en.wikipedia.org/wiki/Service-oriented_architecture)\n* [Zookeeper’a giriş](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)\n* [Mikroservisler inşa etmek hakkında bilmeniz gerekenler](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)\n\n## Veritabanı\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Xkm5CXz.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Kaynak: İlk 10 milyon kullanıcınıza ölçeklenmek</a></i>\n</p>\n\n### İlişkisel veritabanı yönetim sistemi (RDBMS)\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "XKyWblIAaLweFNdYR7DY6+BG5VKu0ZN+qyUPrZFPuGw=",
        "originContent": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>",
        "translatedContent": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Kaynak: Ölçeklenebilir sistem mimarisi için giriş</a></i>"
      },
      {
        "row": 2,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "UM6js3Ubp+TOmUSIgFpnXR9xCK7AtXtk0LJjFo/1CGg=",
        "originContent": "Separating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently.  Adding a new API results in adding application servers without necessarily adding additional web servers.  The **single responsibility principle** advocates for small and autonomous services that work together.  Small teams with small services can plan more aggressively for rapid growth.",
        "translatedContent": "Web katmanını uygulama katmanından (diğer adıyla platform katmanı) ayırmak, her iki katmanı da bağımsız olarak ölçeklendirmeye ve yapılandırmaya olanak tanır. Yeni bir API eklemek, mutlaka ek web sunucuları eklemeden uygulama sunucuları eklenmesiyle sonuçlanır. **Tek sorumluluk ilkesi**, birlikte çalışan küçük ve özerk servisleri savunur. Küçük ekipler ve küçük servisler, hızlı büyümeye daha agresif bir şekilde plan yapabilir."
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "xkBQu5uzAzx79If8PRrc69tBn2jQA3JGZxWrPbl8AIo=",
        "originContent": "Workers in the application layer also help enable [asynchronism](#asynchronism).",
        "translatedContent": "Uygulama katmanındaki çalışanlar [asenkronizmi](#asynchronism) etkinleştirmeye de yardımcı olur."
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "QALyAWhGHiAiI7zj0n8mHQbz2MPeC/7GQsXm6lETWbE=",
        "originContent": "### Microservices",
        "translatedContent": "### Mikroservisler"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "JEKJi5S2MoUg4dgNOGjYfPuWuY6w9wlVy6+hVUuUb1E=",
        "originContent": "Related to this discussion are [microservices](https://en.wikipedia.org/wiki/Microservices), which can be described as a suite of independently deployable, small, modular services.  Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. <sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>",
        "translatedContent": "Bu tartışmayla ilgili olan [mikroservisler](https://en.wikipedia.org/wiki/Microservices), bağımsız olarak dağıtılabilen, küçük, modüler servisler paketi olarak tanımlanabilir. Her servis benzersiz bir süreçte çalışır ve iş hedefini gerçekleştirmek için iyi tanımlanmış, hafif bir mekanizma ile iletişim kurar. <sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "JAJfKIWTPa+k536relRM4Sa2S8jQNzSHtVinCyQ9Vt8=",
        "originContent": "Pinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.",
        "translatedContent": "Örneğin Pinterest, şu mikroservislere sahip olabilir: kullanıcı profili, takipçi, akış, arama, fotoğraf yükleme vb."
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "NEEVX03dzMHiPstGq2XH0Y+KiOGKCVpjLe8ODMPCZbE=",
        "originContent": "### Service Discovery",
        "translatedContent": "### Servis Keşfi"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "V7wR9veeJevfojORQpyvoS+6BuwA+1o4NRx1gphUdsk=",
        "originContent": "Systems such as [Consul](https://www.consul.io/docs/index.html), [Etcd](https://coreos.com/etcd/docs/latest), and [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) can help services find each other by keeping track of registered names, addresses, and ports.  [Health checks](https://www.consul.io/intro/getting-started/checks.html) help verify service integrity and are often done using an [HTTP](#hypertext-transfer-protocol-http) endpoint.  Both Consul and Etcd have a built in [key-value store](#key-value-store) that can be useful for storing config values and other shared data.",
        "translatedContent": "[Consul](https://www.consul.io/docs/index.html), [Etcd](https://coreos.com/etcd/docs/latest) ve [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) gibi sistemler, kayıtlı isimleri, adresleri ve portları takip ederek servislerin birbirini bulmasına yardımcı olabilir. [Sağlık kontrolleri](https://www.consul.io/intro/getting-started/checks.html) servis bütünlüğünü doğrulamada yardımcı olur ve genellikle bir [HTTP](#hypertext-transfer-protocol-http) uç noktası kullanılarak yapılır. Hem Consul hem de Etcd, yapılandırma değerleri ve diğer paylaşılan verileri depolamak için kullanılabilen yerleşik bir [anahtar-değer deposu](#key-value-store) içerir."
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "up0iITXICUefSMFhfCjq2tdobQwafQ/AhpdoxRBfGrw=",
        "originContent": "### Disadvantage(s): application layer",
        "translatedContent": "### Dezavantaj(lar): uygulama katmanı"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "d04JcXi8PzarOJ7w+Cmi0v2VrznvXZgozwpsCls2Mrc=",
        "originContent": "* Adding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).",
        "translatedContent": "* Gevşek bağlı servislerle bir uygulama katmanı eklemek, mimari, operasyon ve süreç açısından (monolitik sisteme kıyasla) farklı bir yaklaşım gerektirir."
      },
      {
        "row": 21,
        "rowsha": "8Vv874DXS2kAIxFt2INdkt/FMU8EN8AfPLZRsYhhClg=",
        "originContent": "* Microservices can add complexity in terms of deployments and operations.",
        "translatedContent": "* Mikroservisler, dağıtımlar ve operasyonlar açısından karmaşıklık ekleyebilir."
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Kaynak(lar) ve daha fazla okuma"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "P6UDnzaJUP638ZrRxWoBt/rKGUVjFeJGWiw98IRGjjg=",
        "originContent": "* [Intro to architecting systems for scale](http://lethain.com/introduction-to-architecting-systems-for-scale)",
        "translatedContent": "* [Ölçeklenebilir sistem mimarisi için giriş](http://lethain.com/introduction-to-architecting-systems-for-scale)"
      },
      {
        "row": 26,
        "rowsha": "E8CKVfW4DaDVQHo21CF4Vsv7vGZieZXs0+mOiMdXKn0=",
        "originContent": "* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)",
        "translatedContent": "* [Sistem tasarımı mülakatını aşmak](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)"
      },
      {
        "row": 27,
        "rowsha": "9ZF2oHsuUqabjRWA5mzsUZIR7gofXAjxF3jLd9LgL9w=",
        "originContent": "* [Service oriented architecture](https://en.wikipedia.org/wiki/Service-oriented_architecture)",
        "translatedContent": "* [Servis odaklı mimari](https://en.wikipedia.org/wiki/Service-oriented_architecture)"
      },
      {
        "row": 28,
        "rowsha": "Isg85bcp/QVt2nmGdbkLcO/MBcUP4Rdgxgp43hUW5hk=",
        "originContent": "* [Introduction to Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)",
        "translatedContent": "* [Zookeeper’a giriş](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)"
      },
      {
        "row": 29,
        "rowsha": "fLRwXUKIQIrgOpXD6j165zGOA1vJjI2tvSK3uJziO0w=",
        "originContent": "* [Here's what you need to know about building microservices](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)",
        "translatedContent": "* [Mikroservisler inşa etmek hakkında bilmeniz gerekenler](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "vMbgZh4T+X8OZjW57nT1HM2z1j6HVK3J2VqmT4oLlKA=",
        "originContent": "## Database",
        "translatedContent": "## Veritabanı"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 34,
        "rowsha": "tXTOz4PsX5hfHVhFSOgkK7vpXDt/hMGSgWGuVk6lWag=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Xkm5CXz.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Xkm5CXz.png\">"
      },
      {
        "row": 35,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 36,
        "rowsha": "QZ9VelS8CnFWMWB2KzGmKZDoOJgPrHoFrfhL6M+2Tv0=",
        "originContent": "  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Source: Scaling up to your first 10 million users</a></i>",
        "translatedContent": "  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Kaynak: İlk 10 milyon kullanıcınıza ölçeklenmek</a></i>"
      },
      {
        "row": 37,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "6RssMtdpk7vEildBf6je9NR7SzfXWiF5HBYi0iebSA4=",
        "originContent": "### Relational database management system (RDBMS)",
        "translatedContent": "### İlişkisel veritabanı yönetim sistemi (RDBMS)"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 26,
    "Content": "A relational database like SQL is a collection of data items organized in tables.\n\n**ACID** is a set of properties of relational database [transactions](https://en.wikipedia.org/wiki/Database_transaction).\n\n* **Atomicity** - Each transaction is all or nothing\n* **Consistency** - Any transaction will bring the database from one valid state to another\n* **Isolation** - Executing transactions concurrently has the same results as if the transactions were executed serially\n* **Durability** - Once a transaction has been committed, it will remain so\n\nThere are many techniques to scale a relational database: **master-slave replication**, **master-master replication**, **federation**, **sharding**, **denormalization**, and **SQL tuning**.\n\n#### Master-slave replication\n\nThe master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/C9ioGtn.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n##### Disadvantage(s): master-slave replication\n\n* Additional logic is needed to promote a slave to a master.\n* See [Disadvantage(s): replication](#disadvantages-replication) for points related to **both** master-slave and master-master.\n\n#### Master-master replication\n\nBoth masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/krAHLGg.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n##### Disadvantage(s): master-master replication\n\n* You'll need a load balancer or you'll need to make changes to your application logic to determine where to write.\n* Most master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.",
    "ContentSha": "xbwODyHVavckLsfDMlRqRxmfdv3+erTT0ITmoKYGnqg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "SQL gibi ilişkisel bir veritabanı, tablolar halinde düzenlenmiş veri öğelerinin bir koleksiyonudur.\n\n**ACID**, ilişkisel veritabanı [işlemlerinin](https://en.wikipedia.org/wiki/Database_transaction) bir dizi özelliğidir.\n\n* **Atomiklik** - Her işlem ya tamamen gerçekleşir ya hiç gerçekleşmez\n* **Tutarlılık** - Herhangi bir işlem, veritabanını bir geçerli durumdan başka bir geçerli duruma getirir\n* **Yalıtım** - İşlemlerin eşzamanlı olarak yürütülmesi, işlemlerin ardışık olarak yürütülmesiyle aynı sonuçları verir\n* **Dayanıklılık** - Bir işlem taahhüt edildikten sonra, kalıcı olarak öyle kalır\n\nBir ilişkisel veritabanını ölçeklendirmek için birçok teknik vardır: **ana-yedek çoğaltma**, **ana-ana çoğaltma**, **federasyon**, **parçalama**, **denormalizasyon** ve **SQL ayarlama**.\n\n#### Ana-yedek çoğaltma\n\nAna sunucu, okuma ve yazma işlemlerini yapar, yazmaları bir veya daha fazla yedeğe çoğaltır; yedekler yalnızca okuma işlemleri yapar.  Yedekler ayrıca ağaç yapısında başka yedeklere de çoğaltılabilir.  Ana sunucu çevrimdışı olursa, bir yedeğin ana olarak yükseltilmesine veya yeni bir ana sağlanmasına kadar sistem salt okunur modda çalışmaya devam edebilir.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/C9ioGtn.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Kaynak: Ölçeklenebilirlik, erişilebilirlik, stabilite, desenler</a></i>\n</p>\n\n##### Dezavantaj(lar): ana-yedek çoğaltma\n\n* Bir yedeğin ana olarak yükseltilmesi için ek mantık gerekir.\n* **Her iki** ana-yedek ve ana-ana için ilgili noktalar için [Dezavantaj(lar): çoğaltma](#disadvantages-replication) bölümüne bakınız.\n\n#### Ana-ana çoğaltma\n\nHer iki ana sunucu da okuma ve yazma işlemlerini yapar ve yazma işlemlerinde birbirleriyle koordine olurlar.  Ana sunuculardan biri kapanırsa, sistem okuma ve yazma işlemleriyle çalışmaya devam edebilir.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/krAHLGg.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Kaynak: Ölçeklenebilirlik, erişilebilirlik, stabilite, desenler</a></i>\n</p>\n\n##### Dezavantaj(lar): ana-ana çoğaltma\n\n* Bir yük dengeleyiciye ihtiyacınız olacak veya uygulama mantığınızda yazmanın nereye yapılacağını belirlemek için değişiklikler yapmanız gerekecek.\n* Çoğu ana-ana sistemi ya gevşek tutarlıdır (ACID'i ihlal eder) ya da senkronizasyondan dolayı artan yazma gecikmesine sahiptir.",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "TVj++70eISoGO+iBto4OFzaI6XKAL6e/E+uDS6ZaXOk=",
        "originContent": "A relational database like SQL is a collection of data items organized in tables.",
        "translatedContent": "SQL gibi ilişkisel bir veritabanı, tablolar halinde düzenlenmiş veri öğelerinin bir koleksiyonudur."
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "ugt+GAK9djNkt9rCr5Lt81CTBlxYR/rhBGd51QIWaxw=",
        "originContent": "**ACID** is a set of properties of relational database [transactions](https://en.wikipedia.org/wiki/Database_transaction).",
        "translatedContent": "**ACID**, ilişkisel veritabanı [işlemlerinin](https://en.wikipedia.org/wiki/Database_transaction) bir dizi özelliğidir."
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "t7PNhuoBI+XkGQDP/Orx/tC1G9tD45Np/C9khLpfx00=",
        "originContent": "* **Atomicity** - Each transaction is all or nothing",
        "translatedContent": "* **Atomiklik** - Her işlem ya tamamen gerçekleşir ya hiç gerçekleşmez"
      },
      {
        "row": 6,
        "rowsha": "ArIcuDjmee6P1HP0YvxD0rnt49fFDYT5JSlNqdOXrVk=",
        "originContent": "* **Consistency** - Any transaction will bring the database from one valid state to another",
        "translatedContent": "* **Tutarlılık** - Herhangi bir işlem, veritabanını bir geçerli durumdan başka bir geçerli duruma getirir"
      },
      {
        "row": 7,
        "rowsha": "S3c99UuvMQkH1xDNRKwjl6SGiUxyptHlRO+WtxsKaqQ=",
        "originContent": "* **Isolation** - Executing transactions concurrently has the same results as if the transactions were executed serially",
        "translatedContent": "* **Yalıtım** - İşlemlerin eşzamanlı olarak yürütülmesi, işlemlerin ardışık olarak yürütülmesiyle aynı sonuçları verir"
      },
      {
        "row": 8,
        "rowsha": "wMfYZINyEc131EdqAI5sHJxLmLMEtQJO35CGgwuyGbY=",
        "originContent": "* **Durability** - Once a transaction has been committed, it will remain so",
        "translatedContent": "* **Dayanıklılık** - Bir işlem taahhüt edildikten sonra, kalıcı olarak öyle kalır"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "x5XCTJ5HadM7xfMUY7+c5Rov3gzYdUOXDPtj+k6PdK8=",
        "originContent": "There are many techniques to scale a relational database: **master-slave replication**, **master-master replication**, **federation**, **sharding**, **denormalization**, and **SQL tuning**.",
        "translatedContent": "Bir ilişkisel veritabanını ölçeklendirmek için birçok teknik vardır: **ana-yedek çoğaltma**, **ana-ana çoğaltma**, **federasyon**, **parçalama**, **denormalizasyon** ve **SQL ayarlama**."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "/BkO8ChKxpGKYpsoTC9wtB+fSCGMZ4yuZmiRQruqpqk=",
        "originContent": "#### Master-slave replication",
        "translatedContent": "#### Ana-yedek çoğaltma"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "zLPuS3WrvJwrT1Pnds4IvmZthSpy5G+QXrf9z57FBPw=",
        "originContent": "The master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.",
        "translatedContent": "Ana sunucu, okuma ve yazma işlemlerini yapar, yazmaları bir veya daha fazla yedeğe çoğaltır; yedekler yalnızca okuma işlemleri yapar.  Yedekler ayrıca ağaç yapısında başka yedeklere de çoğaltılabilir.  Ana sunucu çevrimdışı olursa, bir yedeğin ana olarak yükseltilmesine veya yeni bir ana sağlanmasına kadar sistem salt okunur modda çalışmaya devam edebilir."
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 17,
        "rowsha": "r54yp6VDJewyA/cs96laUlgpn+v7t5VM5wtvztBWn5s=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/C9ioGtn.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/C9ioGtn.png\">"
      },
      {
        "row": 18,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 19,
        "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
        "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Kaynak: Ölçeklenebilirlik, erişilebilirlik, stabilite, desenler</a></i>"
      },
      {
        "row": 20,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "9J/uYg6e5S8WlPRmrqls9thA/KxvsgIYiuz0U80L0WI=",
        "originContent": "##### Disadvantage(s): master-slave replication",
        "translatedContent": "##### Dezavantaj(lar): ana-yedek çoğaltma"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "6RUOW7o6Hw1FEnxacP0l0H//QbClgocx4sjn0VFaJOw=",
        "originContent": "* Additional logic is needed to promote a slave to a master.",
        "translatedContent": "* Bir yedeğin ana olarak yükseltilmesi için ek mantık gerekir."
      },
      {
        "row": 25,
        "rowsha": "WFJYIaOi13ZmznrgUwyUgoatnczXbGeKZyx/gFNc/P0=",
        "originContent": "* See [Disadvantage(s): replication](#disadvantages-replication) for points related to **both** master-slave and master-master.",
        "translatedContent": "* **Her iki** ana-yedek ve ana-ana için ilgili noktalar için [Dezavantaj(lar): çoğaltma](#disadvantages-replication) bölümüne bakınız."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "UXpwNBOaObxsPB0JW11vuvOjyXxn11TkvQpXFM5dMqw=",
        "originContent": "#### Master-master replication",
        "translatedContent": "#### Ana-ana çoğaltma"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "/pDnmtrEr1+RCAIeEvNfvshtAgXfHuYIOHlp+XeZ5L4=",
        "originContent": "Both masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.",
        "translatedContent": "Her iki ana sunucu da okuma ve yazma işlemlerini yapar ve yazma işlemlerinde birbirleriyle koordine olurlar.  Ana sunuculardan biri kapanırsa, sistem okuma ve yazma işlemleriyle çalışmaya devam edebilir."
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 32,
        "rowsha": "nM56Sep5KDPhkejsb5RlEcFrJTGSEtCLIO6auMKh+Zg=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/krAHLGg.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/krAHLGg.png\">"
      },
      {
        "row": 33,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 34,
        "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
        "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Kaynak: Ölçeklenebilirlik, erişilebilirlik, stabilite, desenler</a></i>"
      },
      {
        "row": 35,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "CMvauOacK4orcgzEPb/RxTbU59mcKlnXIfxjJNUAr20=",
        "originContent": "##### Disadvantage(s): master-master replication",
        "translatedContent": "##### Dezavantaj(lar): ana-ana çoğaltma"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "nfjSQmWmi/Qhioo4bcbtjADRHb3rAcBsdr0NluJOYGo=",
        "originContent": "* You'll need a load balancer or you'll need to make changes to your application logic to determine where to write.",
        "translatedContent": "* Bir yük dengeleyiciye ihtiyacınız olacak veya uygulama mantığınızda yazmanın nereye yapılacağını belirlemek için değişiklikler yapmanız gerekecek."
      },
      {
        "row": 40,
        "rowsha": "Dk3agyO90ATBFSrlgQFe69gHAowfUM2FVLlLwXOIfBA=",
        "originContent": "* Most master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.",
        "translatedContent": "* Çoğu ana-ana sistemi ya gevşek tutarlıdır (ACID'i ihlal eder) ya da senkronizasyondan dolayı artan yazma gecikmesine sahiptir."
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 27,
    "Content": "* Conflict resolution comes more into play as more write nodes are added and as latency increases.\n* See [Disadvantage(s): replication](#disadvantages-replication) for points related to **both** master-slave and master-master.\n\n##### Disadvantage(s): replication\n\n* There is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.\n* Writes are replayed to the read replicas.  If there are a lot of writes, the read replicas can get bogged down with replaying writes and can't do as many reads.\n* The more read slaves, the more you have to replicate, which leads to greater replication lag.\n* On some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.\n* Replication adds more hardware and additional complexity.\n\n##### Source(s) and further reading: replication\n\n* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [Multi-master replication](https://en.wikipedia.org/wiki/Multi-master_replication)\n\n#### Federation\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/U3qV33e.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Source: Scaling up to your first 10 million users</a></i>\n</p>\n\nFederation (or functional partitioning) splits up databases by function.  For example, instead of a single, monolithic database, you could have three databases: **forums**, **users**, and **products**, resulting in less read and write traffic to each database and therefore less replication lag.  Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality.  With no single central master serializing writes you can write in parallel, increasing throughput.\n\n##### Disadvantage(s): federation\n\n* Federation is not effective if your schema requires huge functions or tables.\n* You'll need to update your application logic to determine which database to read and write.\n* Joining data from two databases is more complex with a [server link](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers).\n* Federation adds more hardware and additional complexity.\n\n##### Source(s) and further reading: federation\n\n* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)\n\n#### Sharding\n\n<p align=\"center\">",
    "ContentSha": "I/gTQQL3xkPYu5E5dWj4YTG/hfUu3BM7YFOD7HwCQH0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* Çatışma çözümü, daha fazla yazma düğümü eklendikçe ve gecikme arttıkça daha fazla gündeme gelir.\n* **Hem** master-slave hem de master-master ile ilgili noktalar için [Dezavantaj(lar): replikasyon](#disadvantages-replication) bölümüne bakın.\n\n##### Dezavantaj(lar): replikasyon\n\n* Master, yeni yazılmış veriler diğer düğümlere çoğaltılmadan önce arızalanırsa veri kaybı potansiyeli vardır.\n* Yazmalar, okuma replikalarına tekrar oynatılır. Eğer çok fazla yazma varsa, okuma replikaları tekrar oynatılan yazmalardan dolayı tıkanabilir ve daha az okuma yapabilirler.\n* Ne kadar çok okuma kölesi varsa, o kadar çok çoğaltma yapılır, bu da daha fazla replikasyon gecikmesine yol açar.\n* Bazı sistemlerde, master'a yazma işlemi paralel olarak birden fazla iş parçacığı ile başlatılabilirken, okuma replikaları yalnızca tek bir iş parçacığı ile sıralı yazmayı destekler.\n* Replikasyon, daha fazla donanım ve ek karmaşıklık getirir.\n\n##### Kaynak(lar) ve ileri okuma: replikasyon\n\n* [Ölçeklenebilirlik, kullanılabilirlik, kararlılık, desenler](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [Çoklu-master replikasyonu](https://en.wikipedia.org/wiki/Multi-master_replication)\n\n#### Federasyon\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/U3qV33e.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Kaynak: İlk 10 milyon kullanıcınıza ölçeklenme</a></i>\n</p>\n\nFederasyon (veya fonksiyonel bölümlendirme), veritabanlarını işlevlerine göre böler. Örneğin, tek ve bütünleşik bir veritabanı yerine, üç farklı veritabanınız olabilir: **forumlar**, **kullanıcılar** ve **ürünler**; bu sayede her bir veritabanına daha az okuma ve yazma trafiği olur ve bu da daha az replikasyon gecikmesi demektir. Küçük veritabanları, belleğe daha fazla veri sığmasını sağlar; bu da geliştirilmiş önbellek lokalliği sayesinde daha fazla önbellek vuruşu elde edilmesine yol açar. Merkezi bir master'ın yazmaları sıralamasının olmaması sayesinde paralel yazma işlemleri yapılabilir ve bu da verimi artırır.\n\n##### Dezavantaj(lar): federasyon\n\n* Şemanız büyük işlevler veya tablolar gerektiriyorsa federasyon etkili değildir.\n* Hangi veritabanına okuma/yazma yapılacağını belirlemek için uygulama mantığınızı güncellemeniz gerekir.\n* İki veritabanından veri birleştirmek, bir [sunucu bağlantısı](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers) ile daha karmaşıktır.\n* Federasyon, daha fazla donanım ve ek karmaşıklık ekler.\n\n##### Kaynak(lar) ve ileri okuma: federasyon\n\n* [İlk 10 milyon kullanıcınıza ölçeklenme](https://www.youtube.com/watch?v=kKjm4ehYiMs)\n\n#### Sharding\n\n<p align=\"center\">",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "WHkTVxfQNcj0KpXEf8i++cVkzS+lF8TWMFO/4SLP9JM=",
        "originContent": "* Conflict resolution comes more into play as more write nodes are added and as latency increases.",
        "translatedContent": "* Çatışma çözümü, daha fazla yazma düğümü eklendikçe ve gecikme arttıkça daha fazla gündeme gelir."
      },
      {
        "row": 2,
        "rowsha": "WFJYIaOi13ZmznrgUwyUgoatnczXbGeKZyx/gFNc/P0=",
        "originContent": "* See [Disadvantage(s): replication](#disadvantages-replication) for points related to **both** master-slave and master-master.",
        "translatedContent": "* **Hem** master-slave hem de master-master ile ilgili noktalar için [Dezavantaj(lar): replikasyon](#disadvantages-replication) bölümüne bakın."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "Y9PQ4rBkdT0tvEShNLanQYDncrUiVqsthA8/o8uw2Pw=",
        "originContent": "##### Disadvantage(s): replication",
        "translatedContent": "##### Dezavantaj(lar): replikasyon"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "X000vgG2X+3QkM7tzk/ylNCsyqvR8y/F9ik9R1HrVpI=",
        "originContent": "* There is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.",
        "translatedContent": "* Master, yeni yazılmış veriler diğer düğümlere çoğaltılmadan önce arızalanırsa veri kaybı potansiyeli vardır."
      },
      {
        "row": 7,
        "rowsha": "72921YdDRrzvAXB9Ra8JGSURjvzclzQ+R2yPZL+oMkk=",
        "originContent": "* Writes are replayed to the read replicas.  If there are a lot of writes, the read replicas can get bogged down with replaying writes and can't do as many reads.",
        "translatedContent": "* Yazmalar, okuma replikalarına tekrar oynatılır. Eğer çok fazla yazma varsa, okuma replikaları tekrar oynatılan yazmalardan dolayı tıkanabilir ve daha az okuma yapabilirler."
      },
      {
        "row": 8,
        "rowsha": "bibvyFowP6GQZ2KTN5WI7Tz4FHxUhIzPitqe3P1U6/E=",
        "originContent": "* The more read slaves, the more you have to replicate, which leads to greater replication lag.",
        "translatedContent": "* Ne kadar çok okuma kölesi varsa, o kadar çok çoğaltma yapılır, bu da daha fazla replikasyon gecikmesine yol açar."
      },
      {
        "row": 9,
        "rowsha": "uSXC8HBf/QRznFpcGsqRAFtmrZdjnO9fAO1R78PrudE=",
        "originContent": "* On some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.",
        "translatedContent": "* Bazı sistemlerde, master'a yazma işlemi paralel olarak birden fazla iş parçacığı ile başlatılabilirken, okuma replikaları yalnızca tek bir iş parçacığı ile sıralı yazmayı destekler."
      },
      {
        "row": 10,
        "rowsha": "odrw6DZWN2t+Ewwe88Nrq/Ld4/mvd73n7KfBYuTjXlw=",
        "originContent": "* Replication adds more hardware and additional complexity.",
        "translatedContent": "* Replikasyon, daha fazla donanım ve ek karmaşıklık getirir."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "QwPjuoDchFiE4ii8crVvONhB1ARVjoCHLjGOlAyiylg=",
        "originContent": "##### Source(s) and further reading: replication",
        "translatedContent": "##### Kaynak(lar) ve ileri okuma: replikasyon"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "UVMSE1BpfAJjZtNGckenaHDWkkWMyRCmwx5PRWNWv7Q=",
        "originContent": "* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)",
        "translatedContent": "* [Ölçeklenebilirlik, kullanılabilirlik, kararlılık, desenler](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)"
      },
      {
        "row": 15,
        "rowsha": "p2oeX5Y3dWirBuwg7Hfsm8I/z8PvNQroZETi6IEzBW4=",
        "originContent": "* [Multi-master replication](https://en.wikipedia.org/wiki/Multi-master_replication)",
        "translatedContent": "* [Çoklu-master replikasyonu](https://en.wikipedia.org/wiki/Multi-master_replication)"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "SXYGeZNmOhHlvknXjTtr7ComhgkIj1UXIfjGjhUapnQ=",
        "originContent": "#### Federation",
        "translatedContent": "#### Federasyon"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 20,
        "rowsha": "kU7HFHAkLMRxFEePW4U8islDAWELflPllxQdwOPt6oY=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/U3qV33e.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/U3qV33e.png\">"
      },
      {
        "row": 21,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 22,
        "rowsha": "QZ9VelS8CnFWMWB2KzGmKZDoOJgPrHoFrfhL6M+2Tv0=",
        "originContent": "  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Source: Scaling up to your first 10 million users</a></i>",
        "translatedContent": "  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Kaynak: İlk 10 milyon kullanıcınıza ölçeklenme</a></i>"
      },
      {
        "row": 23,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "6CpIVgG1fedEHSkE+AjkRFPSk2jSS2EzkrJcBgSrr/c=",
        "originContent": "Federation (or functional partitioning) splits up databases by function.  For example, instead of a single, monolithic database, you could have three databases: **forums**, **users**, and **products**, resulting in less read and write traffic to each database and therefore less replication lag.  Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality.  With no single central master serializing writes you can write in parallel, increasing throughput.",
        "translatedContent": "Federasyon (veya fonksiyonel bölümlendirme), veritabanlarını işlevlerine göre böler. Örneğin, tek ve bütünleşik bir veritabanı yerine, üç farklı veritabanınız olabilir: **forumlar**, **kullanıcılar** ve **ürünler**; bu sayede her bir veritabanına daha az okuma ve yazma trafiği olur ve bu da daha az replikasyon gecikmesi demektir. Küçük veritabanları, belleğe daha fazla veri sığmasını sağlar; bu da geliştirilmiş önbellek lokalliği sayesinde daha fazla önbellek vuruşu elde edilmesine yol açar. Merkezi bir master'ın yazmaları sıralamasının olmaması sayesinde paralel yazma işlemleri yapılabilir ve bu da verimi artırır."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "8NRAtt8cUCVReGZVjdiR0ic6ZlxVTZyQnzqDXz1x3ns=",
        "originContent": "##### Disadvantage(s): federation",
        "translatedContent": "##### Dezavantaj(lar): federasyon"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "mEdUM+F+TzuYV+CUAAJnjEy6qds4uY9NoqXgOUx4mwg=",
        "originContent": "* Federation is not effective if your schema requires huge functions or tables.",
        "translatedContent": "* Şemanız büyük işlevler veya tablolar gerektiriyorsa federasyon etkili değildir."
      },
      {
        "row": 30,
        "rowsha": "8fAaxzwAdRdL9BwgKYVI4Q3QFXwplWEWbttAXdktT0A=",
        "originContent": "* You'll need to update your application logic to determine which database to read and write.",
        "translatedContent": "* Hangi veritabanına okuma/yazma yapılacağını belirlemek için uygulama mantığınızı güncellemeniz gerekir."
      },
      {
        "row": 31,
        "rowsha": "cqsCfhuwTHvUmwV/oNeW9IPSqScbRykfnAFfEfLd6hA=",
        "originContent": "* Joining data from two databases is more complex with a [server link](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers).",
        "translatedContent": "* İki veritabanından veri birleştirmek, bir [sunucu bağlantısı](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers) ile daha karmaşıktır."
      },
      {
        "row": 32,
        "rowsha": "Kahr1ikLDwcjnq5Cq2y5YKxL9/Ey/v2zGojCDvRuVGY=",
        "originContent": "* Federation adds more hardware and additional complexity.",
        "translatedContent": "* Federasyon, daha fazla donanım ve ek karmaşıklık ekler."
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "BY32QoPUVb8Dpawhv1bBM42WT6ys67aUtLOBe30eMCA=",
        "originContent": "##### Source(s) and further reading: federation",
        "translatedContent": "##### Kaynak(lar) ve ileri okuma: federasyon"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "vkDetycwDenvATQ4NQZL68mF8E1QMw9OoWjyhccat6E=",
        "originContent": "* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)",
        "translatedContent": "* [İlk 10 milyon kullanıcınıza ölçeklenme](https://www.youtube.com/watch?v=kKjm4ehYiMs)"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "EuJ+I1tYDDJNva+aKr2FhDX7+Ag1q9ANl9QERiJ8OdI=",
        "originContent": "#### Sharding",
        "translatedContent": "#### Sharding"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 28,
    "Content": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wU8x5Id.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\nSharding distributes data across different databases such that each database can only manage a subset of the data.  Taking a users database as an example, as the number of users increases, more shards are added to the cluster.\n\nSimilar to the advantages of [federation](#federation), sharding results in less read and write traffic, less replication, and more cache hits.  Index size is also reduced, which generally improves performance with faster queries.  If one shard goes down, the other shards are still operational, although you'll want to add some form of replication to avoid data loss.  Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.\n\nCommon ways to shard a table of users is either through the user's last name initial or the user's geographic location.\n\n##### Disadvantage(s): sharding\n\n* You'll need to update your application logic to work with shards, which could result in complex SQL queries.\n* Data distribution can become lopsided in a shard.  For example, a set of power users on a shard could result in increased load to that shard compared to others.\n    * Rebalancing adds additional complexity.  A sharding function based on [consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) can reduce the amount of transferred data.\n* Joining data from multiple shards is more complex.\n* Sharding adds more hardware and additional complexity.\n\n##### Source(s) and further reading: sharding\n\n* [The coming of the shard](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)\n* [Shard database architecture](https://en.wikipedia.org/wiki/Shard_(database_architecture))\n* [Consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)\n\n#### Denormalization\n\nDenormalization attempts to improve read performance at the expense of some write performance.  Redundant copies of the data are written in multiple tables to avoid expensive joins.  Some RDBMS such as [PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) and Oracle support [materialized views](https://en.wikipedia.org/wiki/Materialized_view) which handle the work of storing redundant information and keeping redundant copies consistent.\n\nOnce data becomes distributed with techniques such as [federation](#federation) and [sharding](#sharding), managing joins across data centers further increases complexity.  Denormalization might circumvent the need for such complex joins.\n\nIn most systems, reads can heavily outnumber writes 100:1 or even 1000:1.  A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.\n\n##### Disadvantage(s): denormalization\n\n* Data is duplicated.\n* Constraints can help redundant copies of information stay in sync, which increases complexity of the database design.\n* A denormalized database under heavy write load might perform worse than its normalized counterpart.\n\n###### Source(s) and further reading: denormalization",
    "ContentSha": "GzP1YEx8H74doj7cHlqPZNKSbHvkETAbRVSJw4T5QnY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wU8x5Id.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Kaynak: Ölçeklenebilirlik, kullanılabilirlik, stabilite, desenler</a></i>\n</p>\n\nSharding, veriyi farklı veritabanlarına dağıtarak her veritabanının yalnızca verinin bir alt kümesini yönetebilmesini sağlar. Bir kullanıcılar veritabanı örneği üzerinden, kullanıcı sayısı arttıkça kümeye daha fazla parça (shard) eklenir.\n\n[Federasyon](#federation) avantajlarına benzer şekilde, sharding daha az okuma ve yazma trafiği, daha az replikasyon ve daha fazla önbellek vuruşu sağlar. İndeks boyutu da azalır, bu da genellikle daha hızlı sorgular ile performansı arttırır. Bir parça (shard) kapanırsa, diğer parçalar hala çalışır durumda olur, ancak veri kaybını önlemek için bir tür replikasyon eklemek istersiniz. Federasyonda olduğu gibi, yazmaları sıralayan merkezi bir ana sunucu olmadığı için, paralel şekilde daha yüksek verimlilikle yazma yapabilirsiniz.\n\nBir kullanıcılar tablosunu parçalamanın yaygın yolları, kullanıcının soyadının ilk harfi veya kullanıcının coğrafi konumu üzerinden yapılır.\n\n##### Dezavantaj(lar): sharding\n\n* Uygulama mantığınızı parçalara uyacak şekilde güncellemeniz gerekir, bu da karmaşık SQL sorgularına yol açabilir.\n* Bir parçadaki veri dağılımı dengesizleşebilir. Örneğin, bir parçadaki yoğun kullanıcılar diğerlerine göre daha fazla yük oluşturabilir.\n    * Yeniden dengeleme ek karmaşıklık getirir. [Tutarlı karma](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) tabanlı bir parçalara ayırma fonksiyonu taşınan veri miktarını azaltabilir.\n* Birden fazla parçadan veri birleştirmek daha karmaşıktır.\n* Sharding daha fazla donanım ve ek karmaşıklık getirir.\n\n##### Kaynak(lar) ve daha fazla okuma: sharding\n\n* [Parçanın gelişi](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)\n* [Parçalı veritabanı mimarisi](https://en.wikipedia.org/wiki/Shard_(database_architecture))\n* [Tutarlı karma](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)\n\n#### Denormalizasyon\n\nDenormalizasyon, okuma performansını arttırmaya çalışırken bazı yazma performansından feragat eder. Pahalı birleşimlerden kaçınmak için verinin fazladan kopyaları birden fazla tabloda tutulur. [PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) ve Oracle gibi bazı İlişkisel Veritabanı Yönetim Sistemleri [maddileştirilmiş görünümler](https://en.wikipedia.org/wiki/Materialized_view) destekler; bu yapılar fazladan bilginin saklanmasını ve tutarlı kalmasını sağlar.\n\nVeri [federasyon](#federation) ve [sharding](#sharding) gibi tekniklerle dağıtıldığında, veri merkezleri arasında birleşim (join) yönetmek karmaşıklığı daha da arttırır. Denormalizasyon, bu tür karmaşık birleşimlere olan ihtiyacı ortadan kaldırabilir.\n\nÇoğu sistemde, okuma işlemleri yazma işlemlerine kıyasla çok daha fazla olabilir; 100:1 hatta 1000:1 oranında. Karmaşık bir veritabanı birleşimiyle sonuçlanan bir okuma, disk işlemlerinde ciddi zaman harcayarak çok pahalı olabilir.\n\n##### Dezavantaj(lar): denormalizasyon\n\n* Veri çoğaltılır.\n* Kısıtlar, fazladan kopyaların tutarlı kalmasına yardımcı olabilir, bu da veritabanı tasarımının karmaşıklığını arttırır.\n* Yoğun yazma yükü altında denormalize bir veritabanı, normalize edilmiş muadilinden daha kötü performans gösterebilir.\n\n###### Kaynak(lar) ve daha fazla okuma: denormalizasyon",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "PxtRcRTfviap+02exC/YvnmEw9ks/Z+lzyqCIgIuigA=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wU8x5Id.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wU8x5Id.png\">"
      },
      {
        "row": 2,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 3,
        "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
        "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Kaynak: Ölçeklenebilirlik, kullanılabilirlik, stabilite, desenler</a></i>"
      },
      {
        "row": 4,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "F5OV3J6j0odiSHpcEdzaWn4rxZU6nk/JVG2szmBexBY=",
        "originContent": "Sharding distributes data across different databases such that each database can only manage a subset of the data.  Taking a users database as an example, as the number of users increases, more shards are added to the cluster.",
        "translatedContent": "Sharding, veriyi farklı veritabanlarına dağıtarak her veritabanının yalnızca verinin bir alt kümesini yönetebilmesini sağlar. Bir kullanıcılar veritabanı örneği üzerinden, kullanıcı sayısı arttıkça kümeye daha fazla parça (shard) eklenir."
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "Lfy7zn8jTo/EGEj0QfDdbDr9azAIO2YamEBn+y5moLk=",
        "originContent": "Similar to the advantages of [federation](#federation), sharding results in less read and write traffic, less replication, and more cache hits.  Index size is also reduced, which generally improves performance with faster queries.  If one shard goes down, the other shards are still operational, although you'll want to add some form of replication to avoid data loss.  Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.",
        "translatedContent": "[Federasyon](#federation) avantajlarına benzer şekilde, sharding daha az okuma ve yazma trafiği, daha az replikasyon ve daha fazla önbellek vuruşu sağlar. İndeks boyutu da azalır, bu da genellikle daha hızlı sorgular ile performansı arttırır. Bir parça (shard) kapanırsa, diğer parçalar hala çalışır durumda olur, ancak veri kaybını önlemek için bir tür replikasyon eklemek istersiniz. Federasyonda olduğu gibi, yazmaları sıralayan merkezi bir ana sunucu olmadığı için, paralel şekilde daha yüksek verimlilikle yazma yapabilirsiniz."
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "izo5bEdM4FbdKop2HmZ4gLi9i5EiLAHVW8KiFBl4opw=",
        "originContent": "Common ways to shard a table of users is either through the user's last name initial or the user's geographic location.",
        "translatedContent": "Bir kullanıcılar tablosunu parçalamanın yaygın yolları, kullanıcının soyadının ilk harfi veya kullanıcının coğrafi konumu üzerinden yapılır."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "lCoMVSE1J92DI277I/r122+KSgnM23erK0vofboQIIo=",
        "originContent": "##### Disadvantage(s): sharding",
        "translatedContent": "##### Dezavantaj(lar): sharding"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "SEhUSrJxZf54oC/CYWYhkQ0/9R5JuyXBkwI9sZ9c9Ng=",
        "originContent": "* You'll need to update your application logic to work with shards, which could result in complex SQL queries.",
        "translatedContent": "* Uygulama mantığınızı parçalara uyacak şekilde güncellemeniz gerekir, bu da karmaşık SQL sorgularına yol açabilir."
      },
      {
        "row": 15,
        "rowsha": "YX5AFXam6gkQuYYb0/60YswS8hSjDkjOH9u6QAYeOMM=",
        "originContent": "* Data distribution can become lopsided in a shard.  For example, a set of power users on a shard could result in increased load to that shard compared to others.",
        "translatedContent": "* Bir parçadaki veri dağılımı dengesizleşebilir. Örneğin, bir parçadaki yoğun kullanıcılar diğerlerine göre daha fazla yük oluşturabilir."
      },
      {
        "row": 16,
        "rowsha": "dE4Jy2l1bIqQ18T4hE/k9C7j4b5ZZ9hnHGkmDpfkN7Y=",
        "originContent": "    * Rebalancing adds additional complexity.  A sharding function based on [consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) can reduce the amount of transferred data.",
        "translatedContent": "    * Yeniden dengeleme ek karmaşıklık getirir. [Tutarlı karma](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) tabanlı bir parçalara ayırma fonksiyonu taşınan veri miktarını azaltabilir."
      },
      {
        "row": 17,
        "rowsha": "6n42TN5GtJy/2lHDi9RgSZg1qVpsVMO1xADU7+3gHX4=",
        "originContent": "* Joining data from multiple shards is more complex.",
        "translatedContent": "* Birden fazla parçadan veri birleştirmek daha karmaşıktır."
      },
      {
        "row": 18,
        "rowsha": "ipm6+/HtIOpd+hbYUvP/Bv1g29y4wvRWAJnMI2XW5tw=",
        "originContent": "* Sharding adds more hardware and additional complexity.",
        "translatedContent": "* Sharding daha fazla donanım ve ek karmaşıklık getirir."
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "Fi+Z3mSn+uCejt4xgb3fkCV1ijHEcxXLLrzjHQqAOa0=",
        "originContent": "##### Source(s) and further reading: sharding",
        "translatedContent": "##### Kaynak(lar) ve daha fazla okuma: sharding"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "itXuAmLWlCwpSKUui/Qqn9QGxUnp/FGJhe5mn9ZzB48=",
        "originContent": "* [The coming of the shard](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)",
        "translatedContent": "* [Parçanın gelişi](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)"
      },
      {
        "row": 23,
        "rowsha": "HQ0nX3NLA+ABmND5wOZaYuHfjS1iR/UWAl9XzEPqgcQ=",
        "originContent": "* [Shard database architecture](https://en.wikipedia.org/wiki/Shard_(database_architecture))",
        "translatedContent": "* [Parçalı veritabanı mimarisi](https://en.wikipedia.org/wiki/Shard_(database_architecture))"
      },
      {
        "row": 24,
        "rowsha": "qJZYEUpxy4rXFmMb9azcCni271IPtkDahT2V3dE7iA0=",
        "originContent": "* [Consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)",
        "translatedContent": "* [Tutarlı karma](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "s57oiOl6dHavHY9NxVG6ALFu3iT0Ifyq/Pbc97i/NLM=",
        "originContent": "#### Denormalization",
        "translatedContent": "#### Denormalizasyon"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "+1IDgptxiwSskgqndvkmmbVxaHmS7OAVhZpIwqKbKTQ=",
        "originContent": "Denormalization attempts to improve read performance at the expense of some write performance.  Redundant copies of the data are written in multiple tables to avoid expensive joins.  Some RDBMS such as [PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) and Oracle support [materialized views](https://en.wikipedia.org/wiki/Materialized_view) which handle the work of storing redundant information and keeping redundant copies consistent.",
        "translatedContent": "Denormalizasyon, okuma performansını arttırmaya çalışırken bazı yazma performansından feragat eder. Pahalı birleşimlerden kaçınmak için verinin fazladan kopyaları birden fazla tabloda tutulur. [PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) ve Oracle gibi bazı İlişkisel Veritabanı Yönetim Sistemleri [maddileştirilmiş görünümler](https://en.wikipedia.org/wiki/Materialized_view) destekler; bu yapılar fazladan bilginin saklanmasını ve tutarlı kalmasını sağlar."
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "IAh+53HHkkxkwiNpxVIbMvxQGPwrzsTCQmsELK4gpDs=",
        "originContent": "Once data becomes distributed with techniques such as [federation](#federation) and [sharding](#sharding), managing joins across data centers further increases complexity.  Denormalization might circumvent the need for such complex joins.",
        "translatedContent": "Veri [federasyon](#federation) ve [sharding](#sharding) gibi tekniklerle dağıtıldığında, veri merkezleri arasında birleşim (join) yönetmek karmaşıklığı daha da arttırır. Denormalizasyon, bu tür karmaşık birleşimlere olan ihtiyacı ortadan kaldırabilir."
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "t3pn0RZ5W4Ja+hl9xB4HjVIiFfvPXFzMOeaq+3wUTbw=",
        "originContent": "In most systems, reads can heavily outnumber writes 100:1 or even 1000:1.  A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.",
        "translatedContent": "Çoğu sistemde, okuma işlemleri yazma işlemlerine kıyasla çok daha fazla olabilir; 100:1 hatta 1000:1 oranında. Karmaşık bir veritabanı birleşimiyle sonuçlanan bir okuma, disk işlemlerinde ciddi zaman harcayarak çok pahalı olabilir."
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "Hbk59RevQ6Dv6Jf1E2dzsW81DkPlAJWNVC22YWW6etY=",
        "originContent": "##### Disadvantage(s): denormalization",
        "translatedContent": "##### Dezavantaj(lar): denormalizasyon"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "h7dALOvHjiThg/ehALJGlyLLjDuOa7Gpxawo/53DleU=",
        "originContent": "* Data is duplicated.",
        "translatedContent": "* Veri çoğaltılır."
      },
      {
        "row": 37,
        "rowsha": "NUiSjydXB95eCLDbXyuj2BNExzPmu9KAho8rKYGMx/Q=",
        "originContent": "* Constraints can help redundant copies of information stay in sync, which increases complexity of the database design.",
        "translatedContent": "* Kısıtlar, fazladan kopyaların tutarlı kalmasına yardımcı olabilir, bu da veritabanı tasarımının karmaşıklığını arttırır."
      },
      {
        "row": 38,
        "rowsha": "cJ8O67v4dZrlrT43vM5IFSqWAYKP8ZDyarQYWVeBrEc=",
        "originContent": "* A denormalized database under heavy write load might perform worse than its normalized counterpart.",
        "translatedContent": "* Yoğun yazma yükü altında denormalize bir veritabanı, normalize edilmiş muadilinden daha kötü performans gösterebilir."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "nnuCvraYRHI06NfCMt1HStO4iMVKfvEZIwMYtroGmMY=",
        "originContent": "###### Source(s) and further reading: denormalization",
        "translatedContent": "###### Kaynak(lar) ve daha fazla okuma: denormalizasyon"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 29,
    "Content": "\n* [Denormalization](https://en.wikipedia.org/wiki/Denormalization)\n\n#### SQL tuning\n\nSQL tuning is a broad topic and many [books](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) have been written as reference.\n\nIt's important to **benchmark** and **profile** to simulate and uncover bottlenecks.\n\n* **Benchmark** - Simulate high-load situations with tools such as [ab](http://httpd.apache.org/docs/2.2/programs/ab.html).\n* **Profile** - Enable tools such as the [slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) to help track performance issues.\n\nBenchmarking and profiling might point you to the following optimizations.\n\n##### Tighten up the schema\n\n* MySQL dumps to disk in contiguous blocks for fast access.\n* Use `CHAR` instead of `VARCHAR` for fixed-length fields.\n    * `CHAR` effectively allows for fast, random access, whereas with `VARCHAR`, you must find the end of a string before moving onto the next one.\n* Use `TEXT` for large blocks of text such as blog posts.  `TEXT` also allows for boolean searches.  Using a `TEXT` field results in storing a pointer on disk that is used to locate the text block.\n* Use `INT` for larger numbers up to 2^32 or 4 billion.\n* Use `DECIMAL` for currency to avoid floating point representation errors.\n* Avoid storing large `BLOBS`, store the location of where to get the object instead.\n* `VARCHAR(255)` is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.\n* Set the `NOT NULL` constraint where applicable to [improve search performance](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search).\n\n##### Use good indices\n\n* Columns that you are querying (`SELECT`, `GROUP BY`, `ORDER BY`, `JOIN`) could be faster with indices.\n* Indices are usually represented as self-balancing [B-tree](https://en.wikipedia.org/wiki/B-tree) that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.\n* Placing an index can keep the data in memory, requiring more space.\n* Writes could also be slower since the index also needs to be updated.\n* When loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.\n\n##### Avoid expensive joins\n\n* [Denormalize](#denormalization) where performance demands it.\n\n##### Partition tables\n",
    "ContentSha": "RC5xUXwhghEuq573LDD6+Is8QYupI3Y4Dn+nKYuNP3o=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n* [Denormalizasyon](https://en.wikipedia.org/wiki/Denormalization)\n\n#### SQL ayarlama\n\nSQL ayarlama geniş bir konudur ve birçok [kitap](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) referans olarak yazılmıştır.\n\n**Benchmark** ve **profil**leme yapmak, darboğazları simüle etmek ve ortaya çıkarmak için önemlidir.\n\n* **Benchmark** - [ab](http://httpd.apache.org/docs/2.2/programs/ab.html) gibi araçlarla yüksek yük durumlarını simüle edin.\n* **Profil** - Performans sorunlarını izlemeye yardımcı olmak için [yavaş sorgu günlüğü](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) gibi araçları etkinleştirin.\n\nBenchmark ve profil oluşturma aşağıdaki iyileştirmelere işaret edebilir.\n\n##### Şemayı sıkılaştırın\n\n* MySQL, hızlı erişim için verileri disk üzerinde bitişik bloklara döker.\n* Sabit uzunluklu alanlar için `CHAR` kullanın, `VARCHAR` yerine tercih edin.\n    * `CHAR`, hızlı ve rastgele erişime olanak tanırken, `VARCHAR` ile bir sonraki stringe geçmeden önce sonunu bulmanız gerekir.\n* Blog yazıları gibi büyük metin blokları için `TEXT` kullanın.  `TEXT` ayrıca boolean aramalara olanak tanır.  Bir `TEXT` alanı kullanmak, disk üzerinde metin bloğunu bulmak için kullanılan bir işaretçi saklanmasına neden olur.\n* 2^32 veya 4 milyara kadar olan büyük sayılar için `INT` kullanın.\n* Ondalık gösterim hatalarını önlemek için para birimi için `DECIMAL` kullanın.\n* Büyük `BLOB`'ları saklamaktan kaçının, bunun yerine nesnenin alınacağı konumu saklayın.\n* `VARCHAR(255)`, 8 bitlik bir sayıda sayılabilecek en fazla karakter sayısıdır ve bazı RDBMS'lerde bir baytın maksimum kullanımını sağlar.\n* Uygun olan yerlerde `NOT NULL` kısıtlamasını ayarlayın, [arama performansını artırmak için](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search).\n\n##### İyi indeksler kullanın\n\n* Sorguladığınız sütunlar (`SELECT`, `GROUP BY`, `ORDER BY`, `JOIN`) indekslerle daha hızlı olabilir.\n* İndeksler genellikle verileri sıralı tutan ve aramaları, ardışık erişimi, eklemeleri ve silmeleri logaritmik zamanda sağlayan kendi kendini dengeleyen [B-tree](https://en.wikipedia.org/wiki/B-tree) olarak temsil edilir.\n* Bir indeks eklemek verileri bellekte tutabilir, bu da daha fazla alan gerektirir.\n* Yazma işlemleri daha yavaş olabilir çünkü indeksin de güncellenmesi gerekir.\n* Büyük miktarda veri yüklerken, indeksleri devre dışı bırakmak, veriyi yüklemek ve ardından indeksleri yeniden oluşturmak daha hızlı olabilir.\n\n##### Maliyetli join'lerden kaçının\n\n* Performans gerektirdiğinde [Denormalizasyon](#denormalization) uygulayın.\n\n##### Tabloları bölümlere ayırın\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "iIyxeoiOMWug4ow1XbmqynlJ+PcmqBpyIDnezOOZUL0=",
        "originContent": "* [Denormalization](https://en.wikipedia.org/wiki/Denormalization)",
        "translatedContent": "* [Denormalizasyon](https://en.wikipedia.org/wiki/Denormalization)"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "U5ndIFTCEShOejPdXAcWGYg52WXS+13jBS9xbWv7wMs=",
        "originContent": "#### SQL tuning",
        "translatedContent": "#### SQL ayarlama"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "5brMlLXsZCP6LeY90lPE/nA+F1R3Utnc7TWB1cMbKvY=",
        "originContent": "SQL tuning is a broad topic and many [books](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) have been written as reference.",
        "translatedContent": "SQL ayarlama geniş bir konudur ve birçok [kitap](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) referans olarak yazılmıştır."
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "5u8i4iK+CoFzMuDptTzgAx+bnssPksaKCXkH86MCY4s=",
        "originContent": "It's important to **benchmark** and **profile** to simulate and uncover bottlenecks.",
        "translatedContent": "**Benchmark** ve **profil**leme yapmak, darboğazları simüle etmek ve ortaya çıkarmak için önemlidir."
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "II+JElcbGGHyu2RJs5bHJ0InzuqF1/tz4JP7H5AEqdQ=",
        "originContent": "* **Benchmark** - Simulate high-load situations with tools such as [ab](http://httpd.apache.org/docs/2.2/programs/ab.html).",
        "translatedContent": "* **Benchmark** - [ab](http://httpd.apache.org/docs/2.2/programs/ab.html) gibi araçlarla yüksek yük durumlarını simüle edin."
      },
      {
        "row": 11,
        "rowsha": "HidKyGa3w0J9QeKvVFBjDdAuizjiBA95vkLhz73tUDU=",
        "originContent": "* **Profile** - Enable tools such as the [slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) to help track performance issues.",
        "translatedContent": "* **Profil** - Performans sorunlarını izlemeye yardımcı olmak için [yavaş sorgu günlüğü](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) gibi araçları etkinleştirin."
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "MxUDF1UOp7Uhj70JBdhUVQ5CaUUc2+NbpgkI6ApbKyA=",
        "originContent": "Benchmarking and profiling might point you to the following optimizations.",
        "translatedContent": "Benchmark ve profil oluşturma aşağıdaki iyileştirmelere işaret edebilir."
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "u5IrR5ipsHN+pmd7KJM6DZ47AQY6O9z21yrakX+p7e4=",
        "originContent": "##### Tighten up the schema",
        "translatedContent": "##### Şemayı sıkılaştırın"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "tGSDpkjsV4aFG9uXbAK76iv8jrdgV/0HBJsT4UsIdwg=",
        "originContent": "* MySQL dumps to disk in contiguous blocks for fast access.",
        "translatedContent": "* MySQL, hızlı erişim için verileri disk üzerinde bitişik bloklara döker."
      },
      {
        "row": 18,
        "rowsha": "9gIPpL1647pzLPkBZ6AgMCiqSyaKaBKegN4/EvaGzm8=",
        "originContent": "* Use `CHAR` instead of `VARCHAR` for fixed-length fields.",
        "translatedContent": "* Sabit uzunluklu alanlar için `CHAR` kullanın, `VARCHAR` yerine tercih edin."
      },
      {
        "row": 19,
        "rowsha": "lhkqcIlaheLGSENEe6oZyjGPgobHm6cwBHhZ9NafKqw=",
        "originContent": "    * `CHAR` effectively allows for fast, random access, whereas with `VARCHAR`, you must find the end of a string before moving onto the next one.",
        "translatedContent": "    * `CHAR`, hızlı ve rastgele erişime olanak tanırken, `VARCHAR` ile bir sonraki stringe geçmeden önce sonunu bulmanız gerekir."
      },
      {
        "row": 20,
        "rowsha": "0V8mWY0KW7QM7D0eAZ7QKic9h2Jg0KiEx5p8KVtnl6k=",
        "originContent": "* Use `TEXT` for large blocks of text such as blog posts.  `TEXT` also allows for boolean searches.  Using a `TEXT` field results in storing a pointer on disk that is used to locate the text block.",
        "translatedContent": "* Blog yazıları gibi büyük metin blokları için `TEXT` kullanın.  `TEXT` ayrıca boolean aramalara olanak tanır.  Bir `TEXT` alanı kullanmak, disk üzerinde metin bloğunu bulmak için kullanılan bir işaretçi saklanmasına neden olur."
      },
      {
        "row": 21,
        "rowsha": "t8hHr5wk/UHSmQQufr7dfbq6nktotJdiAiQLY+sE7OI=",
        "originContent": "* Use `INT` for larger numbers up to 2^32 or 4 billion.",
        "translatedContent": "* 2^32 veya 4 milyara kadar olan büyük sayılar için `INT` kullanın."
      },
      {
        "row": 22,
        "rowsha": "hSaQIvpb16EPKhqsLrLsBcB1op6TeSWA67kBD2PKxFM=",
        "originContent": "* Use `DECIMAL` for currency to avoid floating point representation errors.",
        "translatedContent": "* Ondalık gösterim hatalarını önlemek için para birimi için `DECIMAL` kullanın."
      },
      {
        "row": 23,
        "rowsha": "MtDcdxih3EmsrV7+ubmZO1KV7JJiCZSPEH635MXjasw=",
        "originContent": "* Avoid storing large `BLOBS`, store the location of where to get the object instead.",
        "translatedContent": "* Büyük `BLOB`'ları saklamaktan kaçının, bunun yerine nesnenin alınacağı konumu saklayın."
      },
      {
        "row": 24,
        "rowsha": "T2aMXNnESv7wYsO/crJGAzFNtuk9/x5SWapccZkIwHE=",
        "originContent": "* `VARCHAR(255)` is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.",
        "translatedContent": "* `VARCHAR(255)`, 8 bitlik bir sayıda sayılabilecek en fazla karakter sayısıdır ve bazı RDBMS'lerde bir baytın maksimum kullanımını sağlar."
      },
      {
        "row": 25,
        "rowsha": "UzsxCnaOGDxdp2upn2wCbaWJcNNgR9CLWJ2Pzmjy/6s=",
        "originContent": "* Set the `NOT NULL` constraint where applicable to [improve search performance](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search).",
        "translatedContent": "* Uygun olan yerlerde `NOT NULL` kısıtlamasını ayarlayın, [arama performansını artırmak için](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "Obb8RdGWv3wj8OLBsDSYQniNzl0LL16KDKeVQTWmSrk=",
        "originContent": "##### Use good indices",
        "translatedContent": "##### İyi indeksler kullanın"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "I3Z/8w9LMizBNk88O53iEkNM2kMwm5iUQVIO+PyuQpY=",
        "originContent": "* Columns that you are querying (`SELECT`, `GROUP BY`, `ORDER BY`, `JOIN`) could be faster with indices.",
        "translatedContent": "* Sorguladığınız sütunlar (`SELECT`, `GROUP BY`, `ORDER BY`, `JOIN`) indekslerle daha hızlı olabilir."
      },
      {
        "row": 30,
        "rowsha": "L5R3v64NMHuCGa/ABwQ8pt0GLmmeRLG5zWxEy4G460I=",
        "originContent": "* Indices are usually represented as self-balancing [B-tree](https://en.wikipedia.org/wiki/B-tree) that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.",
        "translatedContent": "* İndeksler genellikle verileri sıralı tutan ve aramaları, ardışık erişimi, eklemeleri ve silmeleri logaritmik zamanda sağlayan kendi kendini dengeleyen [B-tree](https://en.wikipedia.org/wiki/B-tree) olarak temsil edilir."
      },
      {
        "row": 31,
        "rowsha": "yviMqnF4X4iHYQz6ihAQYvmm5LPII9mblfqgtZUJuZw=",
        "originContent": "* Placing an index can keep the data in memory, requiring more space.",
        "translatedContent": "* Bir indeks eklemek verileri bellekte tutabilir, bu da daha fazla alan gerektirir."
      },
      {
        "row": 32,
        "rowsha": "fVT5ImvVq9tVwugCmbfwZ4dmJB3v0TJkT5xn8CQYbUA=",
        "originContent": "* Writes could also be slower since the index also needs to be updated.",
        "translatedContent": "* Yazma işlemleri daha yavaş olabilir çünkü indeksin de güncellenmesi gerekir."
      },
      {
        "row": 33,
        "rowsha": "3P9aEmuDPtDdcLFPTfOBZnyir28sz5DgZU1DIDE+DWY=",
        "originContent": "* When loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.",
        "translatedContent": "* Büyük miktarda veri yüklerken, indeksleri devre dışı bırakmak, veriyi yüklemek ve ardından indeksleri yeniden oluşturmak daha hızlı olabilir."
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "pwtda6pPueokL8TZDWjw+GtxnDUI6u6d5i+Xp1kr54Y=",
        "originContent": "##### Avoid expensive joins",
        "translatedContent": "##### Maliyetli join'lerden kaçının"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "TyrVGvzJe7Ma0vI+OREiBdD/TruYT5c6TFwW8PfedoE=",
        "originContent": "* [Denormalize](#denormalization) where performance demands it.",
        "translatedContent": "* Performans gerektirdiğinde [Denormalizasyon](#denormalization) uygulayın."
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "j/DHOl2CUihQ0aoZTeQnTlS3Bmv3WLUxHsyAyzQfsNY=",
        "originContent": "##### Partition tables",
        "translatedContent": "##### Tabloları bölümlere ayırın"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 30,
    "Content": "* Break up a table by putting hot spots in a separate table to help keep it in memory.\n\n##### Tune the query cache\n\n* In some cases, the [query cache](https://dev.mysql.com/doc/refman/5.7/en/query-cache.html) could lead to [performance issues](https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/).\n\n##### Source(s) and further reading: SQL tuning\n\n* [Tips for optimizing MySQL queries](http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/)\n* [Is there a good reason i see VARCHAR(255) used so often?](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)\n* [How do null values affect performance?](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)\n* [Slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)\n\n### NoSQL\n\nNoSQL is a collection of data items represented in a **key-value store**, **document store**, **wide column store**, or a **graph database**.  Data is denormalized, and joins are generally done in the application code.  Most NoSQL stores lack true ACID transactions and favor [eventual consistency](#eventual-consistency).\n\n**BASE** is often used to describe the properties of NoSQL databases.  In comparison with the [CAP Theorem](#cap-theorem), BASE chooses availability over consistency.\n\n* **Basically available** - the system guarantees availability.\n* **Soft state** - the state of the system may change over time, even without input.\n* **Eventual consistency** - the system will become consistent over a period of time, given that the system doesn't receive input during that period.\n\nIn addition to choosing between [SQL or NoSQL](#sql-or-nosql), it is helpful to understand which type of NoSQL database best fits your use case(s).  We'll review **key-value stores**, **document stores**, **wide column stores**, and **graph databases** in the next section.\n\n#### Key-value store\n\n> Abstraction: hash table\n\nA key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD.  Data stores can maintain keys in [lexicographic order](https://en.wikipedia.org/wiki/Lexicographical_order), allowing efficient retrieval of key ranges.  Key-value stores can allow for storing of metadata with a value.\n\nKey-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer.  Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.\n\nA key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.\n\n##### Source(s) and further reading: key-value store\n\n* [Key-value database](https://en.wikipedia.org/wiki/Key-value_database)\n* [Disadvantages of key-value stores](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)\n* [Redis architecture](http://qnimate.com/overview-of-redis-architecture/)",
    "ContentSha": "+vnJh/M2dUlgEZ6CZbzhFf3VoeY7aJE4IGjH1bsbrm8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* Bir tabloyu bölmek için sıcak noktaları ayrı bir tabloda tutarak bellekte kalmasına yardımcı olun.\n\n##### Sorgu önbelleğini ayarlayın\n\n* Bazı durumlarda, [sorgu önbelleği](https://dev.mysql.com/doc/refman/5.7/en/query-cache.html) [performans sorunlarına](https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/) yol açabilir.\n\n##### Kaynak(lar) ve ileri okuma: SQL ayarlama\n\n* [MySQL sorgularını optimize etmek için ipuçları](http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/)\n* [VARCHAR(255) neden bu kadar sık kullanılıyor?](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)\n* [Null değerler performansı nasıl etkiler?](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)\n* [Yavaş sorgu günlüğü](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)\n\n### NoSQL\n\nNoSQL, verilerin **anahtar-değer deposu**, **belge deposu**, **geniş sütun deposu** veya **graf veritabanı** şeklinde temsil edildiği bir veri öğeleri koleksiyonudur.  Veriler denormalize edilir ve genellikle birleştirmeler uygulama kodunda yapılır.  Çoğu NoSQL deposu gerçek ACID işlemlerinden yoksundur ve [sonunda tutarlılık](#eventual-consistency) ilkesini benimser.\n\n**BASE** terimi genellikle NoSQL veritabanlarının özelliklerini tanımlamak için kullanılır.  [CAP Teoremi](#cap-theorem) ile karşılaştırıldığında, BASE tutarlılık yerine erişilebilirliği seçer.\n\n* **Temelde erişilebilir** - sistem erişilebilirliği garanti eder.\n* **Yumuşak durum** - sistemin durumu zamanla, girdi olmadan bile değişebilir.\n* **Sonunda tutarlılık** - sistem, belirli bir süre boyunca girdi almazsa zamanla tutarlı hale gelir.\n\n[SQl veya NoSQL](#sql-or-nosql) arasında seçim yapmanın yanı sıra, hangi NoSQL veritabanı tipinin kullanım durumunuza daha uygun olduğunu anlamak da faydalıdır.  Bir sonraki bölümde **anahtar-değer depoları**, **belge depoları**, **geniş sütun depoları** ve **graf veritabanlarını** inceleyeceğiz.\n\n#### Anahtar-değer deposu\n\n> Soyutlama: karma tablo\n\nBir anahtar-değer deposu genellikle O(1) okuma ve yazma olanağı sağlar ve çoğunlukla bellek veya SSD ile desteklenir.  Veri depoları anahtarları [leksikografik sırada](https://en.wikipedia.org/wiki/Lexicographical_order) tutabilir, bu da anahtar aralıklarının verimli şekilde alınmasına olanak sağlar.  Anahtar-değer depoları bir değere meta veri eklemeye izin verebilir.\n\nAnahtar-değer depoları yüksek performans sağlar ve genellikle basit veri modelleri veya hızlı değişen veriler için, örneğin bellek içi önbellek katmanı olarak kullanılır.  Sadece sınırlı bir işlem kümesi sunduklarından, ek işlemler gerektiğinde karmaşıklık uygulama katmanına kayar.\n\nBir anahtar-değer deposu, belge deposu gibi daha karmaşık sistemlerin ve bazı durumlarda graf veritabanının temelini oluşturur.\n\n##### Kaynak(lar) ve ileri okuma: anahtar-değer deposu\n\n* [Anahtar-değer veritabanı](https://en.wikipedia.org/wiki/Key-value_database)\n* [Anahtar-değer depolarının dezavantajları](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)\n* [Redis mimarisi](http://qnimate.com/overview-of-redis-architecture/)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "fDJd9UP3ZkBQh55z5wCqO2ZC5iekS7iNMGJSEmOfTJo=",
        "originContent": "* Break up a table by putting hot spots in a separate table to help keep it in memory.",
        "translatedContent": "* Bir tabloyu bölmek için sıcak noktaları ayrı bir tabloda tutarak bellekte kalmasına yardımcı olun."
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "BC4S3RozMKOgb1UI3/WBh0eYNQqpReqQQW21Ohr1N2o=",
        "originContent": "##### Tune the query cache",
        "translatedContent": "##### Sorgu önbelleğini ayarlayın"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "3Uk6ayLGRzDqrU9rKbpTOydn5wU3jTHQrbqyL6RcowA=",
        "originContent": "* In some cases, the [query cache](https://dev.mysql.com/doc/refman/5.7/en/query-cache.html) could lead to [performance issues](https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/).",
        "translatedContent": "* Bazı durumlarda, [sorgu önbelleği](https://dev.mysql.com/doc/refman/5.7/en/query-cache.html) [performans sorunlarına](https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/) yol açabilir."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "a50PuCVHJ0Y+BkYY356Q6mzQMoUT3VRvizr6CovMsGQ=",
        "originContent": "##### Source(s) and further reading: SQL tuning",
        "translatedContent": "##### Kaynak(lar) ve ileri okuma: SQL ayarlama"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "wUTwxCwBGbPe0VO1BR1pqZ4rfb2NH1f9MDRNi2tIn/U=",
        "originContent": "* [Tips for optimizing MySQL queries](http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/)",
        "translatedContent": "* [MySQL sorgularını optimize etmek için ipuçları](http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/)"
      },
      {
        "row": 10,
        "rowsha": "0ZV972rblZnm5jEwegux1gMAE4J+IcSqx4XmVFF31YU=",
        "originContent": "* [Is there a good reason i see VARCHAR(255) used so often?](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)",
        "translatedContent": "* [VARCHAR(255) neden bu kadar sık kullanılıyor?](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)"
      },
      {
        "row": 11,
        "rowsha": "uIQOQpGW6bocvYblsIc43hxMQnaOvdi120zGiwT0gow=",
        "originContent": "* [How do null values affect performance?](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)",
        "translatedContent": "* [Null değerler performansı nasıl etkiler?](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)"
      },
      {
        "row": 12,
        "rowsha": "/FNda9UueetEOGQSH4v3G+a2HM3In4GsZlwpz614WXQ=",
        "originContent": "* [Slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)",
        "translatedContent": "* [Yavaş sorgu günlüğü](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "kV3WP/Mo/6zSEkXz7rHo5EaqHrx2KCry3nNtiDqzpsA=",
        "originContent": "### NoSQL",
        "translatedContent": "### NoSQL"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "CEKp6caNMr4jfBbLWmcFki2vTCaNA+yjnw2hf39UVSk=",
        "originContent": "NoSQL is a collection of data items represented in a **key-value store**, **document store**, **wide column store**, or a **graph database**.  Data is denormalized, and joins are generally done in the application code.  Most NoSQL stores lack true ACID transactions and favor [eventual consistency](#eventual-consistency).",
        "translatedContent": "NoSQL, verilerin **anahtar-değer deposu**, **belge deposu**, **geniş sütun deposu** veya **graf veritabanı** şeklinde temsil edildiği bir veri öğeleri koleksiyonudur.  Veriler denormalize edilir ve genellikle birleştirmeler uygulama kodunda yapılır.  Çoğu NoSQL deposu gerçek ACID işlemlerinden yoksundur ve [sonunda tutarlılık](#eventual-consistency) ilkesini benimser."
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "OolYsTg6lgsX5HZcwoJmeBzKZHleg2HAhGDBpNyrJfI=",
        "originContent": "**BASE** is often used to describe the properties of NoSQL databases.  In comparison with the [CAP Theorem](#cap-theorem), BASE chooses availability over consistency.",
        "translatedContent": "**BASE** terimi genellikle NoSQL veritabanlarının özelliklerini tanımlamak için kullanılır.  [CAP Teoremi](#cap-theorem) ile karşılaştırıldığında, BASE tutarlılık yerine erişilebilirliği seçer."
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "chSarlSDBtUVuwDK7e26fiI5R5hTuGk0CbTUYJTMm+w=",
        "originContent": "* **Basically available** - the system guarantees availability.",
        "translatedContent": "* **Temelde erişilebilir** - sistem erişilebilirliği garanti eder."
      },
      {
        "row": 21,
        "rowsha": "3zSuAgJX6OHxsVDP//zz9GyjNMkot0vNrn8P6pP9E/Y=",
        "originContent": "* **Soft state** - the state of the system may change over time, even without input.",
        "translatedContent": "* **Yumuşak durum** - sistemin durumu zamanla, girdi olmadan bile değişebilir."
      },
      {
        "row": 22,
        "rowsha": "ceCH/qNFSLL/vJifbs54NePnn6y/pTbFop3uVG6rFKw=",
        "originContent": "* **Eventual consistency** - the system will become consistent over a period of time, given that the system doesn't receive input during that period.",
        "translatedContent": "* **Sonunda tutarlılık** - sistem, belirli bir süre boyunca girdi almazsa zamanla tutarlı hale gelir."
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "PVvLz25MjW/34Y3pABr8GsX3KsWTVm02u/VV92C+WJ0=",
        "originContent": "In addition to choosing between [SQL or NoSQL](#sql-or-nosql), it is helpful to understand which type of NoSQL database best fits your use case(s).  We'll review **key-value stores**, **document stores**, **wide column stores**, and **graph databases** in the next section.",
        "translatedContent": "[SQl veya NoSQL](#sql-or-nosql) arasında seçim yapmanın yanı sıra, hangi NoSQL veritabanı tipinin kullanım durumunuza daha uygun olduğunu anlamak da faydalıdır.  Bir sonraki bölümde **anahtar-değer depoları**, **belge depoları**, **geniş sütun depoları** ve **graf veritabanlarını** inceleyeceğiz."
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "AU4OrqfmzsHa8IVmkfad5gr3gPN07h7azjS3wSaZ8Iw=",
        "originContent": "#### Key-value store",
        "translatedContent": "#### Anahtar-değer deposu"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "jsk54oTGWttneDXu+knddGlH1u/75MMwNITE8GKeQkk=",
        "originContent": "> Abstraction: hash table",
        "translatedContent": "> Soyutlama: karma tablo"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "ygti4CVTZaPSYssVx3m3kVVqfA2fjw7lUGjFMJSEsYc=",
        "originContent": "A key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD.  Data stores can maintain keys in [lexicographic order](https://en.wikipedia.org/wiki/Lexicographical_order), allowing efficient retrieval of key ranges.  Key-value stores can allow for storing of metadata with a value.",
        "translatedContent": "Bir anahtar-değer deposu genellikle O(1) okuma ve yazma olanağı sağlar ve çoğunlukla bellek veya SSD ile desteklenir.  Veri depoları anahtarları [leksikografik sırada](https://en.wikipedia.org/wiki/Lexicographical_order) tutabilir, bu da anahtar aralıklarının verimli şekilde alınmasına olanak sağlar.  Anahtar-değer depoları bir değere meta veri eklemeye izin verebilir."
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "qi5SjJ2XGdneToPTz694QmBF5qG6Z70N0dZRtmGxV7g=",
        "originContent": "Key-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer.  Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.",
        "translatedContent": "Anahtar-değer depoları yüksek performans sağlar ve genellikle basit veri modelleri veya hızlı değişen veriler için, örneğin bellek içi önbellek katmanı olarak kullanılır.  Sadece sınırlı bir işlem kümesi sunduklarından, ek işlemler gerektiğinde karmaşıklık uygulama katmanına kayar."
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "TEEwNq1KrPGaVWvsxzFIQiZ/kvAwkxokKFSwEkDAz48=",
        "originContent": "A key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.",
        "translatedContent": "Bir anahtar-değer deposu, belge deposu gibi daha karmaşık sistemlerin ve bazı durumlarda graf veritabanının temelini oluşturur."
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "E5C/yjA/ttJtcaXYiV6PkdciTfa6hTIqZ4r6wbKT3yc=",
        "originContent": "##### Source(s) and further reading: key-value store",
        "translatedContent": "##### Kaynak(lar) ve ileri okuma: anahtar-değer deposu"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "PWiaPe8hUnJ7hUARatj3ng0NgHEaVn+NkAK75z4SutA=",
        "originContent": "* [Key-value database](https://en.wikipedia.org/wiki/Key-value_database)",
        "translatedContent": "* [Anahtar-değer veritabanı](https://en.wikipedia.org/wiki/Key-value_database)"
      },
      {
        "row": 39,
        "rowsha": "8xvsqz2OoTlwWPcAb/4IKhFG1snW2pgPt+FiHzA96XI=",
        "originContent": "* [Disadvantages of key-value stores](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)",
        "translatedContent": "* [Anahtar-değer depolarının dezavantajları](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)"
      },
      {
        "row": 40,
        "rowsha": "Kz9g68oJXv0oJdikjqnf+ZcM7PIE8+ALmDbbOWHElzk=",
        "originContent": "* [Redis architecture](http://qnimate.com/overview-of-redis-architecture/)",
        "translatedContent": "* [Redis mimarisi](http://qnimate.com/overview-of-redis-architecture/)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 31,
    "Content": "* [Memcached architecture](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)\n\n#### Document store\n\n> Abstraction: key-value store with documents stored as values\n\nA document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object.  Document stores provide APIs or a query language to query based on the internal structure of the document itself.  *Note, many key-value stores include features for working with a value's metadata, blurring the lines between these two storage types.*\n\nBased on the underlying implementation, documents are organized by collections, tags, metadata, or directories.  Although documents can be organized or grouped together, documents may have fields that are completely different from each other.\n\nSome document stores like [MongoDB](https://www.mongodb.com/mongodb-architecture) and [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) also provide a SQL-like language to perform complex queries.  [DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) supports both key-values and documents.\n\nDocument stores provide high flexibility and are often used for working with occasionally changing data.\n\n##### Source(s) and further reading: document store\n\n* [Document-oriented database](https://en.wikipedia.org/wiki/Document-oriented_database)\n* [MongoDB architecture](https://www.mongodb.com/mongodb-architecture)\n* [CouchDB architecture](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)\n* [Elasticsearch architecture](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)\n\n#### Wide column store\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n16iOGk.png\">\n  <br/>\n  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>Source: SQL & NoSQL, a brief history</a></i>\n</p>\n\n> Abstraction: nested map `ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>`\n\nA wide column store's basic unit of data is a column (name/value pair).  A column can be grouped in column families (analogous to a SQL table).  Super column families further group column families.  You can access each column independently with a row key, and columns with the same row key form a row.  Each value contains a timestamp for versioning and for conflict resolution.\n\nGoogle introduced [Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) as the first wide column store, which influenced the open-source [HBase](https://www.edureka.co/blog/hbase-architecture/) often-used in the Hadoop ecosystem, and [Cassandra](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html) from Facebook.  Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.\n\nWide column stores offer high availability and high scalability.  They are often used for very large data sets.\n\n##### Source(s) and further reading: wide column store\n\n* [SQL & NoSQL, a brief history](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)",
    "ContentSha": "qChjAGddKNc8A4k6Ydpi6HXYPt34LJFKDxqqAKCkrXw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Memcached mimarisi](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)\n\n#### Doküman deposu\n\n> Soyutlama: Anahtar-değer deposu, belgeler değer olarak saklanır\n\nBir doküman deposu, belgeler (XML, JSON, ikili, vb.) etrafında merkezlenir; bir belge, belirli bir nesneye ait tüm bilgileri saklar. Doküman depoları, belgenin iç yapısına göre sorgulama yapmak için API'ler veya bir sorgu dili sağlar. *Not: Birçok anahtar-değer deposu, bir değerin meta verisiyle çalışmak için özellikler sunar ve bu iki depolama türü arasındaki çizgileri bulanıklaştırır.*\n\nAltta yatan uygulamaya bağlı olarak, belgeler koleksiyonlar, etiketler, meta veriler veya dizinler aracılığıyla düzenlenir. Belgeler organize edilebilse veya gruplanabilse de, belgeler birbirinden tamamen farklı alanlara sahip olabilir.\n\nBazı doküman depoları, [MongoDB](https://www.mongodb.com/mongodb-architecture) ve [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) gibi, karmaşık sorgular gerçekleştirmek için SQL benzeri bir dil sağlar. [DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) hem anahtar-değerleri hem de belgeleri destekler.\n\nDoküman depoları yüksek esneklik sağlar ve genellikle ara sıra değişen verilerle çalışmak için kullanılır.\n\n##### Kaynak(lar) ve daha fazla okuma: doküman deposu\n\n* [Belge odaklı veritabanı](https://en.wikipedia.org/wiki/Document-oriented_database)\n* [MongoDB mimarisi](https://www.mongodb.com/mongodb-architecture)\n* [CouchDB mimarisi](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)\n* [Elasticsearch mimarisi](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)\n\n#### Geniş sütun deposu\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n16iOGk.png\">\n  <br/>\n  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>Kaynak: SQL & NoSQL, kısa bir tarihçe</a></i>\n</p>\n\n> Soyutlama: iç içe harita `ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>`\n\nBir geniş sütun deposunun temel veri birimi bir sütundur (isim/değer çifti). Bir sütun, sütun ailelerinde (SQL tablosuna benzer) gruplanabilir. Süper sütun aileleri ise sütun ailelerini daha da gruplar. Her bir sütuna bir satır anahtarı ile bağımsız olarak erişebilirsiniz ve aynı satır anahtarına sahip sütunlar bir satırı oluşturur. Her değer, sürümleme ve çakışma çözümü için bir zaman damgası içerir.\n\nGoogle, ilk geniş sütun deposu olarak [Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)'ı tanıttı; bu, Hadoop ekosisteminde sıkça kullanılan açık kaynak [HBase](https://www.edureka.co/blog/hbase-architecture/) ve Facebook'tan [Cassandra](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html)'yı etkiledi. BigTable, HBase ve Cassandra gibi depolar anahtarları leksikografik sırada tutar, böylece seçici anahtar aralıklarının verimli bir şekilde alınmasını sağlar.\n\nGeniş sütun depoları yüksek kullanılabilirlik ve yüksek ölçeklenebilirlik sunar. Genellikle çok büyük veri kümeleri için kullanılırlar.\n\n##### Kaynak(lar) ve daha fazla okuma: geniş sütun deposu\n\n* [SQL & NoSQL, kısa bir tarihçe](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "2FrPVpN2ZwP3B8OHC+V00E+qmNtshzxrs6v6iORaa+4=",
        "originContent": "* [Memcached architecture](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)",
        "translatedContent": "* [Memcached mimarisi](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "ehl5Zv++MpEJiI3f9zRPX7hJdULwxYItI8UrlQdSpEo=",
        "originContent": "#### Document store",
        "translatedContent": "#### Doküman deposu"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "11vGJdH1VNomcdXCTch7VFR75wNM3Xrmvq75Ez8olio=",
        "originContent": "> Abstraction: key-value store with documents stored as values",
        "translatedContent": "> Soyutlama: Anahtar-değer deposu, belgeler değer olarak saklanır"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "Qv0EXN9SpfJbx7XgX2VQCHCL2r2dQ0gStwoJYSrTAT0=",
        "originContent": "A document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object.  Document stores provide APIs or a query language to query based on the internal structure of the document itself.  *Note, many key-value stores include features for working with a value's metadata, blurring the lines between these two storage types.*",
        "translatedContent": "Bir doküman deposu, belgeler (XML, JSON, ikili, vb.) etrafında merkezlenir; bir belge, belirli bir nesneye ait tüm bilgileri saklar. Doküman depoları, belgenin iç yapısına göre sorgulama yapmak için API'ler veya bir sorgu dili sağlar. *Not: Birçok anahtar-değer deposu, bir değerin meta verisiyle çalışmak için özellikler sunar ve bu iki depolama türü arasındaki çizgileri bulanıklaştırır.*"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "Lca2PhfpgcFpQwrhUnJR7/mRWsylfqi7UCkmJbWVcQA=",
        "originContent": "Based on the underlying implementation, documents are organized by collections, tags, metadata, or directories.  Although documents can be organized or grouped together, documents may have fields that are completely different from each other.",
        "translatedContent": "Altta yatan uygulamaya bağlı olarak, belgeler koleksiyonlar, etiketler, meta veriler veya dizinler aracılığıyla düzenlenir. Belgeler organize edilebilse veya gruplanabilse de, belgeler birbirinden tamamen farklı alanlara sahip olabilir."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "4vi4/Vf8Z4f1B0iOVgIOtUSfmXRaAkw4ycm0R/ABfj0=",
        "originContent": "Some document stores like [MongoDB](https://www.mongodb.com/mongodb-architecture) and [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) also provide a SQL-like language to perform complex queries.  [DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) supports both key-values and documents.",
        "translatedContent": "Bazı doküman depoları, [MongoDB](https://www.mongodb.com/mongodb-architecture) ve [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) gibi, karmaşık sorgular gerçekleştirmek için SQL benzeri bir dil sağlar. [DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) hem anahtar-değerleri hem de belgeleri destekler."
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "Ou3d0GkGAFJQy68Jz+zZW1iduw2//drPZPUljkvQeXM=",
        "originContent": "Document stores provide high flexibility and are often used for working with occasionally changing data.",
        "translatedContent": "Doküman depoları yüksek esneklik sağlar ve genellikle ara sıra değişen verilerle çalışmak için kullanılır."
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "mF5FY4ez5bxPI2BDOdBhAPVR0vGRJuskK8GlQsRT7a0=",
        "originContent": "##### Source(s) and further reading: document store",
        "translatedContent": "##### Kaynak(lar) ve daha fazla okuma: doküman deposu"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "Lj/AI1FUQWn/HWULDdZdUGDhLMcOKERAz5Tg5s/PSwQ=",
        "originContent": "* [Document-oriented database](https://en.wikipedia.org/wiki/Document-oriented_database)",
        "translatedContent": "* [Belge odaklı veritabanı](https://en.wikipedia.org/wiki/Document-oriented_database)"
      },
      {
        "row": 18,
        "rowsha": "48ct8mBD8xBot6LutZO7SC8ZtlKdkDK34V56x7kuTZY=",
        "originContent": "* [MongoDB architecture](https://www.mongodb.com/mongodb-architecture)",
        "translatedContent": "* [MongoDB mimarisi](https://www.mongodb.com/mongodb-architecture)"
      },
      {
        "row": 19,
        "rowsha": "ba3ZjitYr2cPoSAe5cUKrHB4QqssIQKddE7XobzORmc=",
        "originContent": "* [CouchDB architecture](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)",
        "translatedContent": "* [CouchDB mimarisi](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)"
      },
      {
        "row": 20,
        "rowsha": "5zWVuoQr71fVFyzl0gqzcC3G5KJPnqXmR4zmM9Dc5Sc=",
        "originContent": "* [Elasticsearch architecture](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)",
        "translatedContent": "* [Elasticsearch mimarisi](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "sPQV/pViqK0HZza/GwmBLLC+HY8JiqWL5jrTKm8GNEM=",
        "originContent": "#### Wide column store",
        "translatedContent": "#### Geniş sütun deposu"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 25,
        "rowsha": "xfWUb3nUMMoN4djxcMV07QR+hOsxkZIWMU3b8C2e/zI=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n16iOGk.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n16iOGk.png\">"
      },
      {
        "row": 26,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 27,
        "rowsha": "mtExIoNk0GrN1MU1bLs4dnPGykIM8ylGVxt0RNAHvsg=",
        "originContent": "  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>Source: SQL & NoSQL, a brief history</a></i>",
        "translatedContent": "  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>Kaynak: SQL & NoSQL, kısa bir tarihçe</a></i>"
      },
      {
        "row": 28,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "BmwIK2RuzhKfIKE7Q2io8/uIoE/mkmwX6ekHKxC37Jo=",
        "originContent": "> Abstraction: nested map `ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>`",
        "translatedContent": "> Soyutlama: iç içe harita `ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>`"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "cUQEPcHCbkvYCI3BpmmszKTCgz/rhlOi2ii3H822hGI=",
        "originContent": "A wide column store's basic unit of data is a column (name/value pair).  A column can be grouped in column families (analogous to a SQL table).  Super column families further group column families.  You can access each column independently with a row key, and columns with the same row key form a row.  Each value contains a timestamp for versioning and for conflict resolution.",
        "translatedContent": "Bir geniş sütun deposunun temel veri birimi bir sütundur (isim/değer çifti). Bir sütun, sütun ailelerinde (SQL tablosuna benzer) gruplanabilir. Süper sütun aileleri ise sütun ailelerini daha da gruplar. Her bir sütuna bir satır anahtarı ile bağımsız olarak erişebilirsiniz ve aynı satır anahtarına sahip sütunlar bir satırı oluşturur. Her değer, sürümleme ve çakışma çözümü için bir zaman damgası içerir."
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "YHSA0r9KXeDCNnFPIxi4/b8CROMFq5wALM7c0dLEf9U=",
        "originContent": "Google introduced [Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) as the first wide column store, which influenced the open-source [HBase](https://www.edureka.co/blog/hbase-architecture/) often-used in the Hadoop ecosystem, and [Cassandra](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html) from Facebook.  Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.",
        "translatedContent": "Google, ilk geniş sütun deposu olarak [Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)'ı tanıttı; bu, Hadoop ekosisteminde sıkça kullanılan açık kaynak [HBase](https://www.edureka.co/blog/hbase-architecture/) ve Facebook'tan [Cassandra](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html)'yı etkiledi. BigTable, HBase ve Cassandra gibi depolar anahtarları leksikografik sırada tutar, böylece seçici anahtar aralıklarının verimli bir şekilde alınmasını sağlar."
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "Vr/6tnY6FGlM//oSMQ4lKD765JEcLAxuAYVqNN8uQws=",
        "originContent": "Wide column stores offer high availability and high scalability.  They are often used for very large data sets.",
        "translatedContent": "Geniş sütun depoları yüksek kullanılabilirlik ve yüksek ölçeklenebilirlik sunar. Genellikle çok büyük veri kümeleri için kullanılırlar."
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "wTV4x4YRcpGn9X3CxXchj2v5SOFWDQblcxtODC2OHek=",
        "originContent": "##### Source(s) and further reading: wide column store",
        "translatedContent": "##### Kaynak(lar) ve daha fazla okuma: geniş sütun deposu"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "BFw34s8jH3VIXmTOHkIjAGc6y/waazr0DBBDGeE86qo=",
        "originContent": "* [SQL & NoSQL, a brief history](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)",
        "translatedContent": "* [SQL & NoSQL, kısa bir tarihçe](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 32,
    "Content": "* [Bigtable architecture](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)\n* [HBase architecture](https://www.edureka.co/blog/hbase-architecture/)\n* [Cassandra architecture](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html)\n\n#### Graph database\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/fNcl65g.png\">\n  <br/>\n  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>Source: Graph database</a></i>\n</p>\n\n> Abstraction: graph\n\nIn a graph database, each node is a record and each arc is a relationship between two nodes.  Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.\n\nGraphs databases offer high performance for data models with complex relationships, such as a social network.  They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources.  Many graphs can only be accessed with [REST APIs](#representational-state-transfer-rest).\n\n##### Source(s) and further reading: graph\n\n* [Graph database](https://en.wikipedia.org/wiki/Graph_database)\n* [Neo4j](https://neo4j.com/)\n* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)\n\n#### Source(s) and further reading: NoSQL\n\n* [Explanation of base terminology](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)\n* [NoSQL databases a survey and decision guidance](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)\n* [Scalability](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n* [Introduction to NoSQL](https://www.youtube.com/watch?v=qI_g07C_Q5I)\n* [NoSQL patterns](http://horicky.blogspot.com/2009/11/nosql-patterns.html)\n\n### SQL or NoSQL\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wXGqG5f.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>Source: Transitioning from RDBMS to NoSQL</a></i>\n</p>\n",
    "ContentSha": "yvB08chNWcvF9yiu0b/QLR53EBOeWK574rgWXfnGOXg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Bigtable mimarisi](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)\n* [HBase mimarisi](https://www.edureka.co/blog/hbase-architecture/)\n* [Cassandra mimarisi](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html)\n\n#### Grafik veritabanı\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/fNcl65g.png\">\n  <br/>\n  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>Kaynak: Grafik veritabanı</a></i>\n</p>\n\n> Soyutlama: grafik\n\nBir grafik veritabanında, her düğüm bir kayıttır ve her yay iki düğüm arasındaki ilişkidir. Grafik veritabanları, çok sayıda yabancı anahtar veya çoktan çoğa ilişkileri olan karmaşık ilişkileri temsil etmek için optimize edilmiştir.\n\nGrafik veritabanları, sosyal ağ gibi karmaşık ilişkilere sahip veri modelleri için yüksek performans sunar. Görece yenidirler ve henüz yaygın olarak kullanılmazlar; geliştirme araçları ve kaynaklarını bulmak daha zor olabilir. Birçok grafiğe yalnızca [REST API'leri](#representational-state-transfer-rest) ile erişilebilir.\n\n##### Kaynak(lar) ve daha fazla okuma: grafik\n\n* [Grafik veritabanı](https://en.wikipedia.org/wiki/Graph_database)\n* [Neo4j](https://neo4j.com/)\n* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)\n\n#### Kaynak(lar) ve daha fazla okuma: NoSQL\n\n* [Temel terminolojinin açıklaması](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)\n* [NoSQL veritabanları: bir inceleme ve karar rehberi](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)\n* [Ölçeklenebilirlik](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n* [NoSQL'e giriş](https://www.youtube.com/watch?v=qI_g07C_Q5I)\n* [NoSQL desenleri](http://horicky.blogspot.com/2009/11/nosql-patterns.html)\n\n### SQL veya NoSQL\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wXGqG5f.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>Kaynak: RDBMS'den NoSQL'e Geçiş</a></i>\n</p>\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "oppKQyS7hTiKzLly1J35kjtTZbIAW3jTCGFPbf00+ss=",
        "originContent": "* [Bigtable architecture](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)",
        "translatedContent": "* [Bigtable mimarisi](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)"
      },
      {
        "row": 2,
        "rowsha": "sBxNvDNoR83xq2ze/NwVGRIZV5QaG+5C2w+GGUF5GIg=",
        "originContent": "* [HBase architecture](https://www.edureka.co/blog/hbase-architecture/)",
        "translatedContent": "* [HBase mimarisi](https://www.edureka.co/blog/hbase-architecture/)"
      },
      {
        "row": 3,
        "rowsha": "2OkslhsJOFtrSf9JY5+/wX6QqrfPa4K/6AgI6Fu9Dik=",
        "originContent": "* [Cassandra architecture](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html)",
        "translatedContent": "* [Cassandra mimarisi](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html)"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "A/exvQGsrUv6SaskzCJFXL9+mU1RN4e8BAmOFSNDHJg=",
        "originContent": "#### Graph database",
        "translatedContent": "#### Grafik veritabanı"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 8,
        "rowsha": "efx2DfpG+WMy5Dh4XIrLZKv0ftO5CSz+k8lKjFQcduk=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/fNcl65g.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/fNcl65g.png\">"
      },
      {
        "row": 9,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 10,
        "rowsha": "pHA0XuhToumG8ssLfqvCDtiQcQTqj7hZJ+vus5zcqtY=",
        "originContent": "  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>Source: Graph database</a></i>",
        "translatedContent": "  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>Kaynak: Grafik veritabanı</a></i>"
      },
      {
        "row": 11,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "B5XYw4d5xmRsSXMrCAkg2t74N49qLGkHoBXxUJiBN5U=",
        "originContent": "> Abstraction: graph",
        "translatedContent": "> Soyutlama: grafik"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "d9ijzqJWUkTEbnGP/BuqSJv4JADbxf+rPHbmAr4SRoM=",
        "originContent": "In a graph database, each node is a record and each arc is a relationship between two nodes.  Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.",
        "translatedContent": "Bir grafik veritabanında, her düğüm bir kayıttır ve her yay iki düğüm arasındaki ilişkidir. Grafik veritabanları, çok sayıda yabancı anahtar veya çoktan çoğa ilişkileri olan karmaşık ilişkileri temsil etmek için optimize edilmiştir."
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "0eslzANH9S6otdcN6/ARJO0UvHLlvdCqXyvw5W8ue74=",
        "originContent": "Graphs databases offer high performance for data models with complex relationships, such as a social network.  They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources.  Many graphs can only be accessed with [REST APIs](#representational-state-transfer-rest).",
        "translatedContent": "Grafik veritabanları, sosyal ağ gibi karmaşık ilişkilere sahip veri modelleri için yüksek performans sunar. Görece yenidirler ve henüz yaygın olarak kullanılmazlar; geliştirme araçları ve kaynaklarını bulmak daha zor olabilir. Birçok grafiğe yalnızca [REST API'leri](#representational-state-transfer-rest) ile erişilebilir."
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "ChQ2EP4rHz/V4P4At1vUfr6L3o0Kdq0Psm7kf9dqyAQ=",
        "originContent": "##### Source(s) and further reading: graph",
        "translatedContent": "##### Kaynak(lar) ve daha fazla okuma: grafik"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "EnWArZthLZt/xH7cpNoQsUzldz4G7Jaqtd/wck7pGFA=",
        "originContent": "* [Graph database](https://en.wikipedia.org/wiki/Graph_database)",
        "translatedContent": "* [Grafik veritabanı](https://en.wikipedia.org/wiki/Graph_database)"
      },
      {
        "row": 22,
        "rowsha": "Xw3sx9p3cFowTFPRLepCr1to6L9cWUpPvIwcnMCuZZs=",
        "originContent": "* [Neo4j](https://neo4j.com/)",
        "translatedContent": "* [Neo4j](https://neo4j.com/)"
      },
      {
        "row": 23,
        "rowsha": "voZsejvFVXv5Bhp0+/GdekeMhALDxY5faPGZ+RXJlDs=",
        "originContent": "* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)",
        "translatedContent": "* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "SOpsdGTFBJwXrY1cL4e02nOPKSJT7XISoU/KkSFq3vU=",
        "originContent": "#### Source(s) and further reading: NoSQL",
        "translatedContent": "#### Kaynak(lar) ve daha fazla okuma: NoSQL"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "6scKM49eKpe3crCEZ7B0ZGdxI68r94k1hFhhQS2DJdE=",
        "originContent": "* [Explanation of base terminology](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)",
        "translatedContent": "* [Temel terminolojinin açıklaması](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)"
      },
      {
        "row": 28,
        "rowsha": "kLy2iBcpBZrfskPfAx1o1ag3dAnXpcWXKRb7/OfoBU8=",
        "originContent": "* [NoSQL databases a survey and decision guidance](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)",
        "translatedContent": "* [NoSQL veritabanları: bir inceleme ve karar rehberi](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)"
      },
      {
        "row": 29,
        "rowsha": "oxpL3qPKJwclX96+k267P7nRRdvi8f35CwDkjvmKluc=",
        "originContent": "* [Scalability](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)",
        "translatedContent": "* [Ölçeklenebilirlik](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)"
      },
      {
        "row": 30,
        "rowsha": "z7l5ZUT1L0lyxKjUaPNk0X3bW92k2MPwLaAZOMImdGI=",
        "originContent": "* [Introduction to NoSQL](https://www.youtube.com/watch?v=qI_g07C_Q5I)",
        "translatedContent": "* [NoSQL'e giriş](https://www.youtube.com/watch?v=qI_g07C_Q5I)"
      },
      {
        "row": 31,
        "rowsha": "eEgiGzsQIVncA+CX7dO3zjQJ3tEIpGDtM8/r1xs8hW8=",
        "originContent": "* [NoSQL patterns](http://horicky.blogspot.com/2009/11/nosql-patterns.html)",
        "translatedContent": "* [NoSQL desenleri](http://horicky.blogspot.com/2009/11/nosql-patterns.html)"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "VQeHO1Z/deZdDzdY8R7UBEIprx4oR7GevCZIpwlL1mY=",
        "originContent": "### SQL or NoSQL",
        "translatedContent": "### SQL veya NoSQL"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 36,
        "rowsha": "P9SYTlACogcwjh4pjaUBsWqjGW0Aps9AnuMCg11+wxA=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wXGqG5f.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wXGqG5f.png\">"
      },
      {
        "row": 37,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 38,
        "rowsha": "nspJf+8/Rgg2yv4MUWP11lk5ha1obeW+w6B4mVDClZI=",
        "originContent": "  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>Source: Transitioning from RDBMS to NoSQL</a></i>",
        "translatedContent": "  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>Kaynak: RDBMS'den NoSQL'e Geçiş</a></i>"
      },
      {
        "row": 39,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 33,
    "Content": "Reasons for **SQL**:\n\n* Structured data\n* Strict schema\n* Relational data\n* Need for complex joins\n* Transactions\n* Clear patterns for scaling\n* More established: developers, community, code, tools, etc\n* Lookups by index are very fast\n\nReasons for **NoSQL**:\n\n* Semi-structured data\n* Dynamic or flexible schema\n* Non-relational data\n* No need for complex joins\n* Store many TB (or PB) of data\n* Very data intensive workload\n* Very high throughput for IOPS\n\nSample data well-suited for NoSQL:\n\n* Rapid ingest of clickstream and log data\n* Leaderboard or scoring data\n* Temporary data, such as a shopping cart\n* Frequently accessed ('hot') tables\n* Metadata/lookup tables\n\n##### Source(s) and further reading: SQL or NoSQL\n\n* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)\n* [SQL vs NoSQL differences](https://www.sitepoint.com/sql-vs-nosql-differences/)\n\n## Cache\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Q6z24La.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>",
    "ContentSha": "s5JZtpzJOg6uZVhDykP9Uy+U/KEwjhNiySMSqZAIAwI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "**SQL** için nedenler:\n\n* Yapılandırılmış veri\n* Katı şema\n* İlişkisel veri\n* Karmaşık birleştirmelere ihtiyaç\n* İşlemler\n* Ölçeklendirme için net desenler\n* Daha köklü: geliştiriciler, topluluk, kod, araçlar, vb.\n* İndeksle aramalar çok hızlıdır\n\n**NoSQL** için nedenler:\n\n* Yarı yapılandırılmış veri\n* Dinamik veya esnek şema\n* İlişkisel olmayan veri\n* Karmaşık birleştirmelere ihtiyaç yok\n* Birçok TB (veya PB) veri depolama\n* Çok veri yoğun iş yükü\n* IOPS için çok yüksek verim\n\nNoSQL için uygun örnek veri:\n\n* Tıklama akışı ve log verisinin hızlı alınması\n* Lider tablosu veya skor verisi\n* Geçici veri, örneğin alışveriş sepeti\n* Sık erişilen ('sıcak') tablolar\n* Meta veri/bakış tabloları\n\n##### Kaynak(lar) ve daha fazla okuma: SQL veya NoSQL\n\n* [İlk 10 milyon kullanıcınıza ölçeklendirme](https://www.youtube.com/watch?v=kKjm4ehYiMs)\n* [SQL ve NoSQL farkları](https://www.sitepoint.com/sql-vs-nosql-differences/)\n\n## Önbellek\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Q6z24La.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Kaynak: Ölçeklenebilir sistem tasarım desenleri</a></i>",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "r9icARjTs6CRhldSEqrk52fELAahztd24CNbBDqckdc=",
        "originContent": "Reasons for **SQL**:",
        "translatedContent": "**SQL** için nedenler:"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "nsGez4GlS2M5WbaY2RQTbpj761UCNiu6nSyqfGkX4p8=",
        "originContent": "* Structured data",
        "translatedContent": "* Yapılandırılmış veri"
      },
      {
        "row": 4,
        "rowsha": "Iuu5GO2DPpMFiJPT5PGfTHfAXgT7xV5xdP8c6DyPB5s=",
        "originContent": "* Strict schema",
        "translatedContent": "* Katı şema"
      },
      {
        "row": 5,
        "rowsha": "HUBaARbChF/PiCJJ1udNB0GS2eX83GkMSf18kPtCnQA=",
        "originContent": "* Relational data",
        "translatedContent": "* İlişkisel veri"
      },
      {
        "row": 6,
        "rowsha": "KnrtO+QtbtXv0EpmnBci10AHRU9jjQENfZnLToJsxk0=",
        "originContent": "* Need for complex joins",
        "translatedContent": "* Karmaşık birleştirmelere ihtiyaç"
      },
      {
        "row": 7,
        "rowsha": "HTCve+R7OMaL0NiwRsolx0zPPi6/ks6gQJ8wL2wyEas=",
        "originContent": "* Transactions",
        "translatedContent": "* İşlemler"
      },
      {
        "row": 8,
        "rowsha": "1LKnc3OIp8XgBRyxpvkT8UiP/DOZBFOAJrSqTEzcHVE=",
        "originContent": "* Clear patterns for scaling",
        "translatedContent": "* Ölçeklendirme için net desenler"
      },
      {
        "row": 9,
        "rowsha": "KhNjEaE6va+/lp2cPz5MbD2p0FgtTFWzDYlpadUV+pM=",
        "originContent": "* More established: developers, community, code, tools, etc",
        "translatedContent": "* Daha köklü: geliştiriciler, topluluk, kod, araçlar, vb."
      },
      {
        "row": 10,
        "rowsha": "eqZ/qVtt5ln4BAOMBIZ8v2eEZ81PQqFKwVsYsitQHqk=",
        "originContent": "* Lookups by index are very fast",
        "translatedContent": "* İndeksle aramalar çok hızlıdır"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "XtjexymiRaLEB5PD/GO9saUcXt2/ctWvdecC4gmsAz8=",
        "originContent": "Reasons for **NoSQL**:",
        "translatedContent": "**NoSQL** için nedenler:"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "jfjZxT9WDz6uQD4LzlwpuUO+yXdq+sJE2pkjgHL85vo=",
        "originContent": "* Semi-structured data",
        "translatedContent": "* Yarı yapılandırılmış veri"
      },
      {
        "row": 15,
        "rowsha": "o/6aZfRBkR1LvcXnYjq2rw8pn3QkSWamSyAFCt1W39E=",
        "originContent": "* Dynamic or flexible schema",
        "translatedContent": "* Dinamik veya esnek şema"
      },
      {
        "row": 16,
        "rowsha": "9zxImz4UeTSgBRB2xqiNRLFMaj0Be9g9fWVqarrA1ug=",
        "originContent": "* Non-relational data",
        "translatedContent": "* İlişkisel olmayan veri"
      },
      {
        "row": 17,
        "rowsha": "l0c/AdGBPz7+YCs2kKV9hy9eM0JnsQvw2kKhp1ornZo=",
        "originContent": "* No need for complex joins",
        "translatedContent": "* Karmaşık birleştirmelere ihtiyaç yok"
      },
      {
        "row": 18,
        "rowsha": "Gs8z2Fvxfb0tzA127YdrHm3Vf8aBf0k+4EI7mxR7wIU=",
        "originContent": "* Store many TB (or PB) of data",
        "translatedContent": "* Birçok TB (veya PB) veri depolama"
      },
      {
        "row": 19,
        "rowsha": "XphH60sQ2Z+QUWphTR4F5L6Z15ZfY/tECRCAWl63+4A=",
        "originContent": "* Very data intensive workload",
        "translatedContent": "* Çok veri yoğun iş yükü"
      },
      {
        "row": 20,
        "rowsha": "LIknBmmeEk34husWU16FXexMOl0fzKbq7aCQSonGux8=",
        "originContent": "* Very high throughput for IOPS",
        "translatedContent": "* IOPS için çok yüksek verim"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "cKBnN4mSff8NVqx7wgjk50WW5sSpqIEOiOV5BZtaw9M=",
        "originContent": "Sample data well-suited for NoSQL:",
        "translatedContent": "NoSQL için uygun örnek veri:"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "F3WTjYqvpCzI26AojsXzX1JIHg1nWfq65jUHBmSr1FY=",
        "originContent": "* Rapid ingest of clickstream and log data",
        "translatedContent": "* Tıklama akışı ve log verisinin hızlı alınması"
      },
      {
        "row": 25,
        "rowsha": "ycongjgDljddo9S0Wr0S55KCE3VwxJuAZ+1JxslcO3g=",
        "originContent": "* Leaderboard or scoring data",
        "translatedContent": "* Lider tablosu veya skor verisi"
      },
      {
        "row": 26,
        "rowsha": "R1pEy9ERswONyFX36fUJ1nh3TU165svAjxRHn1ujLrs=",
        "originContent": "* Temporary data, such as a shopping cart",
        "translatedContent": "* Geçici veri, örneğin alışveriş sepeti"
      },
      {
        "row": 27,
        "rowsha": "hxhLh4MxDiKpDrhV5DGGdOKgYntTolHpXqvlnkk6058=",
        "originContent": "* Frequently accessed ('hot') tables",
        "translatedContent": "* Sık erişilen ('sıcak') tablolar"
      },
      {
        "row": 28,
        "rowsha": "p+IkY/kzq8n2SlJgHjJUAeONckwU0g7c9NTiE9cMgJ0=",
        "originContent": "* Metadata/lookup tables",
        "translatedContent": "* Meta veri/bakış tabloları"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "onSL188uaP9uZHsK9Z3j7HOFPA79N5rHNA6FlH8F0ZU=",
        "originContent": "##### Source(s) and further reading: SQL or NoSQL",
        "translatedContent": "##### Kaynak(lar) ve daha fazla okuma: SQL veya NoSQL"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "vkDetycwDenvATQ4NQZL68mF8E1QMw9OoWjyhccat6E=",
        "originContent": "* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)",
        "translatedContent": "* [İlk 10 milyon kullanıcınıza ölçeklendirme](https://www.youtube.com/watch?v=kKjm4ehYiMs)"
      },
      {
        "row": 33,
        "rowsha": "3zX6NZi1G/7JVvf6nBwrkLUjBzEw8YiSp5kbefbdjRs=",
        "originContent": "* [SQL vs NoSQL differences](https://www.sitepoint.com/sql-vs-nosql-differences/)",
        "translatedContent": "* [SQL ve NoSQL farkları](https://www.sitepoint.com/sql-vs-nosql-differences/)"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "3M2uXr5EI2fJlWn3BHJBrOUgoctJwV7HXpmkisGuQ0Y=",
        "originContent": "## Cache",
        "translatedContent": "## Önbellek"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 38,
        "rowsha": "y4DiLrKCFwCKHihZp9RbrdSDzfHBzLDWX/q3YGaHY5M=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Q6z24La.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Q6z24La.png\">"
      },
      {
        "row": 39,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 40,
        "rowsha": "BlGpJr1aaS7U1ovkxsSc1S7ZO+WxTq/Ry9MM5AGpY3s=",
        "originContent": "  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>",
        "translatedContent": "  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Kaynak: Ölçeklenebilir sistem tasarım desenleri</a></i>"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 34,
    "Content": "</p>\n\nCaching improves page load times and can reduce the load on your servers and databases.  In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.\n\nDatabases often benefit from a uniform distribution of reads and writes across its partitions.  Popular items can skew the distribution, causing bottlenecks.  Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.\n\n### Client caching\n\nCaches can be located on the client side (OS or browser), [server side](#reverse-proxy-web-server), or in a distinct cache layer.\n\n### CDN caching\n\n[CDNs](#content-delivery-network) are considered a type of cache.\n\n### Web server caching\n\n[Reverse proxies](#reverse-proxy-web-server) and caches such as [Varnish](https://www.varnish-cache.org/) can serve static and dynamic content directly.  Web servers can also cache requests, returning responses without having to contact application servers.\n\n### Database caching\n\nYour database usually includes some level of caching in a default configuration, optimized for a generic use case.  Tweaking these settings for specific usage patterns can further boost performance.\n\n### Application caching\n\nIn-memory caches such as Memcached and Redis are key-value stores between your application and your data storage.  Since the data is held in RAM, it is much faster than typical databases where data is stored on disk.  RAM is more limited than disk, so [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms) algorithms such as [least recently used (LRU)](https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)) can help invalidate 'cold' entries and keep 'hot' data in RAM.\n\nRedis has the following additional features:\n\n* Persistence option\n* Built-in data structures such as sorted sets and lists\n\nThere are multiple levels you can cache that fall into two general categories: **database queries** and **objects**:\n\n* Row level\n* Query-level\n* Fully-formed serializable objects\n* Fully-rendered HTML\n\nGenerally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.\n",
    "ContentSha": "PfUbgKkIJf45vxersAv0t5I8be53ZYhiGpd5NAhmomo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "</p>\n\nÖnbellekleme, sayfa yükleme sürelerini iyileştirir ve sunucularınız ile veritabanlarınızdaki yükü azaltabilir. Bu modelde, yönlendirici önce isteğin daha önce yapılıp yapılmadığını kontrol eder ve önceki sonucu bulup döndürmeye çalışır, böylece gerçek yürütmeden tasarruf edilir.\n\nVeritabanları genellikle okuma ve yazmaların bölümler arasında eşit dağılımından fayda sağlar. Popüler öğeler dağılımı bozabilir ve darboğazlara neden olabilir. Bir veritabanının önüne bir önbellek koymak, düzensiz yükleri ve trafik artışlarını absorbe edebilir.\n\n### İstemci önbelleklemesi\n\nÖnbellekler istemci tarafında (İşletim Sistemi veya tarayıcıda), [sunucu tarafında](#reverse-proxy-web-server) veya ayrı bir önbellek katmanında bulunabilir.\n\n### CDN önbelleklemesi\n\n[CDN'ler](#content-delivery-network) bir tür önbellek olarak kabul edilir.\n\n### Web sunucusu önbelleklemesi\n\n[Ters proxyler](#reverse-proxy-web-server) ve [Varnish](https://www.varnish-cache.org/) gibi önbellekler statik ve dinamik içeriği doğrudan sunabilir. Web sunucuları ayrıca isteklere önbellek uygulayabilir, yanıtları uygulama sunucularına başvurmadan döndürebilir.\n\n### Veritabanı önbelleklemesi\n\nVeritabanınız genellikle varsayılan yapılandırmasında, genel bir kullanım senaryosu için optimize edilmiş bir önbellekleme düzeyi içerir. Bu ayarları belirli kullanım desenleri için özelleştirmek performansı daha da artırabilir.\n\n### Uygulama önbelleklemesi\n\nMemcached ve Redis gibi bellek içi önbellekler, uygulamanız ile veri depolamanız arasında anahtar-değer depolarıdır. Veriler RAM'de tutulduğundan, verilerin diskte saklandığı tipik veritabanlarından çok daha hızlıdır. RAM, diske göre daha sınırlıdır, bu nedenle [önbellek geçersiz kılma](https://en.wikipedia.org/wiki/Cache_algorithms) algoritmaları, örneğin [en son kullanılan (LRU)](https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)), 'soğuk' girdileri geçersiz kılmaya ve 'sıcak' verileri RAM'de tutmaya yardımcı olabilir.\n\nRedis aşağıdaki ek özelliklere sahiptir:\n\n* Kalıcılık seçeneği\n* Sıralı setler ve listeler gibi yerleşik veri yapıları\n\nÖnbelleğe alabileceğiniz birden çok seviye vardır ve bunlar iki genel kategoriye ayrılır: **veritabanı sorguları** ve **nesneler**:\n\n* Satır düzeyi\n* Sorgu düzeyi\n* Tamamlanmış serileştirilebilir nesneler\n* Tam olarak işlenmiş HTML\n\nGenellikle, dosya tabanlı önbelleklemeden kaçınmalısınız, çünkü bu klonlama ve otomatik ölçeklendirmeyi zorlaştırır.\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "xqFXlOlQ6an1pd2cUPm0ctMQFxeroxxNltTfA2DnIyM=",
        "originContent": "Caching improves page load times and can reduce the load on your servers and databases.  In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.",
        "translatedContent": "Önbellekleme, sayfa yükleme sürelerini iyileştirir ve sunucularınız ile veritabanlarınızdaki yükü azaltabilir. Bu modelde, yönlendirici önce isteğin daha önce yapılıp yapılmadığını kontrol eder ve önceki sonucu bulup döndürmeye çalışır, böylece gerçek yürütmeden tasarruf edilir."
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "nE3F+noONZj7UoncqopJcjs84GDX55Msqwtb2zKbtWQ=",
        "originContent": "Databases often benefit from a uniform distribution of reads and writes across its partitions.  Popular items can skew the distribution, causing bottlenecks.  Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.",
        "translatedContent": "Veritabanları genellikle okuma ve yazmaların bölümler arasında eşit dağılımından fayda sağlar. Popüler öğeler dağılımı bozabilir ve darboğazlara neden olabilir. Bir veritabanının önüne bir önbellek koymak, düzensiz yükleri ve trafik artışlarını absorbe edebilir."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "kU/uLpr+QUlPh4Q0obdTc8Jmc7gkP0Y1cAmtTjlGLag=",
        "originContent": "### Client caching",
        "translatedContent": "### İstemci önbelleklemesi"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "oKi+pWvfZPQK26up66npGBI09cUq5gKlsZ5T+T+LHro=",
        "originContent": "Caches can be located on the client side (OS or browser), [server side](#reverse-proxy-web-server), or in a distinct cache layer.",
        "translatedContent": "Önbellekler istemci tarafında (İşletim Sistemi veya tarayıcıda), [sunucu tarafında](#reverse-proxy-web-server) veya ayrı bir önbellek katmanında bulunabilir."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "IC+heR08nNMaNGEQF5zx/9QsVoeD/qhL9VQrwtwRE5k=",
        "originContent": "### CDN caching",
        "translatedContent": "### CDN önbelleklemesi"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "yxckzTQIewKvqA1D6/g0klIsU3zn/CQ4iQs+2Hc1L0M=",
        "originContent": "[CDNs](#content-delivery-network) are considered a type of cache.",
        "translatedContent": "[CDN'ler](#content-delivery-network) bir tür önbellek olarak kabul edilir."
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "Da9mLN7nGSzBo9bvYB9Yn2tFNd3cOoEAFtmAKOygrYg=",
        "originContent": "### Web server caching",
        "translatedContent": "### Web sunucusu önbelleklemesi"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "HIpASoiha1HioWiM3PEcd+xsZ2YHLgEn0/dmxs/SyZw=",
        "originContent": "[Reverse proxies](#reverse-proxy-web-server) and caches such as [Varnish](https://www.varnish-cache.org/) can serve static and dynamic content directly.  Web servers can also cache requests, returning responses without having to contact application servers.",
        "translatedContent": "[Ters proxyler](#reverse-proxy-web-server) ve [Varnish](https://www.varnish-cache.org/) gibi önbellekler statik ve dinamik içeriği doğrudan sunabilir. Web sunucuları ayrıca isteklere önbellek uygulayabilir, yanıtları uygulama sunucularına başvurmadan döndürebilir."
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "+peMktOW0HTWXcyD0CtKfyHJ76DbKqQNFMObh+eJTeE=",
        "originContent": "### Database caching",
        "translatedContent": "### Veritabanı önbelleklemesi"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "EYGPh9Nhj9Ttsme4rboJONsjd0H1Tz2/OEc3I1+Phyc=",
        "originContent": "Your database usually includes some level of caching in a default configuration, optimized for a generic use case.  Tweaking these settings for specific usage patterns can further boost performance.",
        "translatedContent": "Veritabanınız genellikle varsayılan yapılandırmasında, genel bir kullanım senaryosu için optimize edilmiş bir önbellekleme düzeyi içerir. Bu ayarları belirli kullanım desenleri için özelleştirmek performansı daha da artırabilir."
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "jHpYxhSgbZeRWpd+DxcA9rdGq82/3SCT4D3KfcnhkcA=",
        "originContent": "### Application caching",
        "translatedContent": "### Uygulama önbelleklemesi"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "WFZ2p6PV8YsGfZ4D+4AWBuJIe3Cx9di6exPEMWGnBoA=",
        "originContent": "In-memory caches such as Memcached and Redis are key-value stores between your application and your data storage.  Since the data is held in RAM, it is much faster than typical databases where data is stored on disk.  RAM is more limited than disk, so [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms) algorithms such as [least recently used (LRU)](https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)) can help invalidate 'cold' entries and keep 'hot' data in RAM.",
        "translatedContent": "Memcached ve Redis gibi bellek içi önbellekler, uygulamanız ile veri depolamanız arasında anahtar-değer depolarıdır. Veriler RAM'de tutulduğundan, verilerin diskte saklandığı tipik veritabanlarından çok daha hızlıdır. RAM, diske göre daha sınırlıdır, bu nedenle [önbellek geçersiz kılma](https://en.wikipedia.org/wiki/Cache_algorithms) algoritmaları, örneğin [en son kullanılan (LRU)](https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)), 'soğuk' girdileri geçersiz kılmaya ve 'sıcak' verileri RAM'de tutmaya yardımcı olabilir."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "bG9ZzlVhxVniO0NbUBc4MNnJnevmwh4iLIR6+7Ny5GA=",
        "originContent": "Redis has the following additional features:",
        "translatedContent": "Redis aşağıdaki ek özelliklere sahiptir:"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "oVSAe6bvySL9lZG8FBGnQ1zqUUlpTiTQIxmQqglSsD0=",
        "originContent": "* Persistence option",
        "translatedContent": "* Kalıcılık seçeneği"
      },
      {
        "row": 30,
        "rowsha": "bIING+wl5vn04I6HuaJiJPmUXKMx6Sx6ybJ2DPPziQU=",
        "originContent": "* Built-in data structures such as sorted sets and lists",
        "translatedContent": "* Sıralı setler ve listeler gibi yerleşik veri yapıları"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "jqc3ntnaAq+YfXjWch+hYigLB+UJXKMNQFoEmZzJMPQ=",
        "originContent": "There are multiple levels you can cache that fall into two general categories: **database queries** and **objects**:",
        "translatedContent": "Önbelleğe alabileceğiniz birden çok seviye vardır ve bunlar iki genel kategoriye ayrılır: **veritabanı sorguları** ve **nesneler**:"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "r15rT5lMkEakO0EooTXQ29PQYtrQ7vvP7LBqkv+u5J0=",
        "originContent": "* Row level",
        "translatedContent": "* Satır düzeyi"
      },
      {
        "row": 35,
        "rowsha": "djUS3dKRSjn00ZXw0vh2aGhfXv2mMxRkxPojcjWnF1M=",
        "originContent": "* Query-level",
        "translatedContent": "* Sorgu düzeyi"
      },
      {
        "row": 36,
        "rowsha": "NCUiwISIKs3RT5e8iBnTHyAONOcdxXJ3lZROujkUdHI=",
        "originContent": "* Fully-formed serializable objects",
        "translatedContent": "* Tamamlanmış serileştirilebilir nesneler"
      },
      {
        "row": 37,
        "rowsha": "UEQnDnI7uzJAICUlx0D0cfOE8Q2mc6PWRjPPyeOYCxs=",
        "originContent": "* Fully-rendered HTML",
        "translatedContent": "* Tam olarak işlenmiş HTML"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "1B3O+coRkQPbq3TbZjD02NGcyBhw42EMqttGZvQr1h4=",
        "originContent": "Generally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.",
        "translatedContent": "Genellikle, dosya tabanlı önbelleklemeden kaçınmalısınız, çünkü bu klonlama ve otomatik ölçeklendirmeyi zorlaştırır."
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 35,
    "Content": "### Caching at the database query level\n\nWhenever you query the database, hash the query as a key and store the result to the cache.  This approach suffers from expiration issues:\n\n* Hard to delete a cached result with complex queries\n* If one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell\n\n### Caching at the object level\n\nSee your data as an object, similar to what you do with your application code.  Have your application assemble the dataset from the database into a class instance or a data structure(s):\n\n* Remove the object from cache if its underlying data has changed\n* Allows for asynchronous processing: workers assemble objects by consuming the latest cached object\n\nSuggestions of what to cache:\n\n* User sessions\n* Fully rendered web pages\n* Activity streams\n* User graph data\n\n### When to update the cache\n\nSince you can only store a limited amount of data in cache, you'll need to determine which cache update strategy works best for your use case.\n\n#### Cache-aside\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/ONjORqk.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>\n</p>\n\nThe application is responsible for reading and writing from storage.  The cache does not interact with storage directly.  The application does the following:\n\n* Look for entry in cache, resulting in a cache miss\n* Load entry from the database\n* Add entry to cache\n* Return entry\n",
    "ContentSha": "1LZ2C/EUSShYNdt1FP+/fZdVQMcH8WGFigSx+nEiAZI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Veritabanı sorgu seviyesinde önbellekleme\n\nVeritabanını her sorguladığınızda, sorguyu bir anahtar olarak hashleyin ve sonucu önbelleğe kaydedin.  Bu yaklaşım, süre sonu (expiration) sorunlarından muzdariptir:\n\n* Karmaşık sorgularda önbellekteki bir sonucu silmek zordur\n* Bir veri parçası değiştiğinde (örneğin bir tablo hücresi), değişen hücreyi içerebilecek tüm önbellekteki sorguları silmeniz gerekir\n\n### Nesne seviyesinde önbellekleme\n\nVerinizi, uygulama kodunuzda yaptığınız gibi bir nesne olarak görün.  Uygulamanız, veritabanından veri kümesini bir sınıf örneği veya veri yapısına toplar:\n\n* Nesnenin altındaki veri değiştiyse, nesneyi önbellekten kaldırın\n* Eşzamanlı olmayan işleme imkanı sağlar: çalışanlar, en güncel önbellekteki nesneyi tüketerek nesneleri oluşturur\n\nNeleri önbelleğe alabileceğinize dair öneriler:\n\n* Kullanıcı oturumları\n* Tamamen işlenmiş web sayfaları\n* Aktivite akışları\n* Kullanıcı grafik verisi\n\n### Önbelleği ne zaman güncellemeli\n\nÖnbellekte yalnızca sınırlı miktarda veri saklayabileceğiniz için, hangi önbellek güncelleme stratejisinin sizin kullanım senaryonuza en uygun olduğuna karar vermeniz gerekir.\n\n#### Cache-aside (Yan önbellek)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/ONjORqk.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Kaynak: Önbellekten bellek içi veri ızgarasına</a></i>\n</p>\n\nUygulama, depolamadan okuma ve yazmadan sorumludur.  Önbellek, doğrudan depolama ile etkileşime girmez.  Uygulama aşağıdakileri yapar:\n\n* Önbellekte girdi arar, önbellek kaçırma ile sonuçlanır\n* Girdiyi veritabanından yükler\n* Girdiyi önbelleğe ekler\n* Girdiyi döndürür\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "3YIk6GjhWrpUufW9u8BeDCc4h4hcG312WFNpokKP7gE=",
        "originContent": "### Caching at the database query level",
        "translatedContent": "### Veritabanı sorgu seviyesinde önbellekleme"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "iJJbvuK6zOgRABztRiHjNwU8YbqHMoW5zFzCB7Z1XBE=",
        "originContent": "Whenever you query the database, hash the query as a key and store the result to the cache.  This approach suffers from expiration issues:",
        "translatedContent": "Veritabanını her sorguladığınızda, sorguyu bir anahtar olarak hashleyin ve sonucu önbelleğe kaydedin.  Bu yaklaşım, süre sonu (expiration) sorunlarından muzdariptir:"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "Lb6BM7FztlpCZKQZsZdxkDo0gUdAUfaxzDPGwdMd1ZE=",
        "originContent": "* Hard to delete a cached result with complex queries",
        "translatedContent": "* Karmaşık sorgularda önbellekteki bir sonucu silmek zordur"
      },
      {
        "row": 6,
        "rowsha": "VpV5XOW9LAQSNYGUUuv/B0olP8SfhOhjohfMiGprEqY=",
        "originContent": "* If one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell",
        "translatedContent": "* Bir veri parçası değiştiğinde (örneğin bir tablo hücresi), değişen hücreyi içerebilecek tüm önbellekteki sorguları silmeniz gerekir"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "fqoq5o7Te5RL0Ww7hGUP01PowL82X5Yjwvt1ZhirEgg=",
        "originContent": "### Caching at the object level",
        "translatedContent": "### Nesne seviyesinde önbellekleme"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "t7op5c3DtAEeaWSFUCRDIrf3GZrGX3lHyIXHU8ZdezA=",
        "originContent": "See your data as an object, similar to what you do with your application code.  Have your application assemble the dataset from the database into a class instance or a data structure(s):",
        "translatedContent": "Verinizi, uygulama kodunuzda yaptığınız gibi bir nesne olarak görün.  Uygulamanız, veritabanından veri kümesini bir sınıf örneği veya veri yapısına toplar:"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "kKOqH0Rj7ZDKFmxa/n0dgFFfcLmc7KP+Y/bIOM8QV68=",
        "originContent": "* Remove the object from cache if its underlying data has changed",
        "translatedContent": "* Nesnenin altındaki veri değiştiyse, nesneyi önbellekten kaldırın"
      },
      {
        "row": 13,
        "rowsha": "LVCuQTNxLG+2HkJCAKPD/atJSe7UmRACMbO3svM/pUs=",
        "originContent": "* Allows for asynchronous processing: workers assemble objects by consuming the latest cached object",
        "translatedContent": "* Eşzamanlı olmayan işleme imkanı sağlar: çalışanlar, en güncel önbellekteki nesneyi tüketerek nesneleri oluşturur"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "JO+wTDixSFsWPXbXW3gm3JCbxf4keaDPFqBagqcSnFs=",
        "originContent": "Suggestions of what to cache:",
        "translatedContent": "Neleri önbelleğe alabileceğinize dair öneriler:"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "GtErxHgzu8lQW6zfeOjrQvpv6qHQcod8BbKFLR4+nO4=",
        "originContent": "* User sessions",
        "translatedContent": "* Kullanıcı oturumları"
      },
      {
        "row": 18,
        "rowsha": "z6k7z0EcDKod7y5Evss5qYCd1T8yFOF3F8al8glt9jc=",
        "originContent": "* Fully rendered web pages",
        "translatedContent": "* Tamamen işlenmiş web sayfaları"
      },
      {
        "row": 19,
        "rowsha": "GRLvjkAFWRgkhA35jO4sqt87QSERzT09jxhRVFvzrDs=",
        "originContent": "* Activity streams",
        "translatedContent": "* Aktivite akışları"
      },
      {
        "row": 20,
        "rowsha": "JTDc0t5tffnca/ox8stucQMCLXLF4rn3JZo55FqAeuY=",
        "originContent": "* User graph data",
        "translatedContent": "* Kullanıcı grafik verisi"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "EQs6IK2UwdJGsDA46cF4pewCABsNnHaJ8nCXSYXDOAQ=",
        "originContent": "### When to update the cache",
        "translatedContent": "### Önbelleği ne zaman güncellemeli"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "8XpBQLO0vnR+St0Ihro3VxfcA4lVtKxR6nHxZH+GPnw=",
        "originContent": "Since you can only store a limited amount of data in cache, you'll need to determine which cache update strategy works best for your use case.",
        "translatedContent": "Önbellekte yalnızca sınırlı miktarda veri saklayabileceğiniz için, hangi önbellek güncelleme stratejisinin sizin kullanım senaryonuza en uygun olduğuna karar vermeniz gerekir."
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "52pofijyqLylVYR+JgfdyhSECnQB/2ww9jSqId5+qfI=",
        "originContent": "#### Cache-aside",
        "translatedContent": "#### Cache-aside (Yan önbellek)"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 29,
        "rowsha": "qbwb9OF+6gCrIQDarjwnjaJ5/orzhjfFSZ0uJP2yP+Y=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/ONjORqk.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/ONjORqk.png\">"
      },
      {
        "row": 30,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 31,
        "rowsha": "USINg1pGG/U+9K+ntxVznHzWHt5Cf6mwA5Lf1aFR1Uk=",
        "originContent": "  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Kaynak: Önbellekten bellek içi veri ızgarasına</a></i>"
      },
      {
        "row": 32,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "62P0ezlyVrQA0aqJAqE75Pq6qmQsDRjHZBBAW0Nz/TM=",
        "originContent": "The application is responsible for reading and writing from storage.  The cache does not interact with storage directly.  The application does the following:",
        "translatedContent": "Uygulama, depolamadan okuma ve yazmadan sorumludur.  Önbellek, doğrudan depolama ile etkileşime girmez.  Uygulama aşağıdakileri yapar:"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "OFE7VOChadOJUjgj9Em/a5aet/S7mBrXOeBhxO4G13Y=",
        "originContent": "* Look for entry in cache, resulting in a cache miss",
        "translatedContent": "* Önbellekte girdi arar, önbellek kaçırma ile sonuçlanır"
      },
      {
        "row": 37,
        "rowsha": "uPyomhAgr01m+uLFmFlqmhP6tN+gNuDikYGP6ljOZZ8=",
        "originContent": "* Load entry from the database",
        "translatedContent": "* Girdiyi veritabanından yükler"
      },
      {
        "row": 38,
        "rowsha": "gHwr/3IpFIf/MVC2+zfRAnWRBPuDoveXCRYKw6fPmzI=",
        "originContent": "* Add entry to cache",
        "translatedContent": "* Girdiyi önbelleğe ekler"
      },
      {
        "row": 39,
        "rowsha": "mtdSuveSKkOKt1wR97B79lcqaLNrmTSR+8I/XZbDjQs=",
        "originContent": "* Return entry",
        "translatedContent": "* Girdiyi döndürür"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 36,
    "Content": "```python\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\n```",
    "ContentSha": "oOOkxiaDDsfJgZibD4WyvNCLh494Kkw0zeQUjNF+dKA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```python\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
        "originContent": "```python",
        "translatedContent": "```python"
      },
      {
        "row": 2,
        "rowsha": "1GTyTA67Jo5g4PZ2eK+leytPvvxyri8GVlwBQpLqlpc=",
        "originContent": "def get_user(self, user_id):",
        "translatedContent": "def get_user(self, user_id):"
      },
      {
        "row": 3,
        "rowsha": "lgAPDcVXdojVaaGHgrVltToh2hjI0quE1+565ZNiOS8=",
        "originContent": "    user = cache.get(\"user.{0}\", user_id)",
        "translatedContent": "    user = cache.get(\"user.{0}\", user_id)"
      },
      {
        "row": 4,
        "rowsha": "W7owJTstAC/LAoEhQUmKo4a4zUm8zieRK0OeG7rv7DQ=",
        "originContent": "    if user is None:",
        "translatedContent": "    if user is None:"
      },
      {
        "row": 5,
        "rowsha": "oJzeyHhnfdAF3cIMLnK5Fr1PIjEwbNQmMiKcBcnGcF0=",
        "originContent": "        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)",
        "translatedContent": "        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)"
      },
      {
        "row": 6,
        "rowsha": "dldjFilRH6Yed931uKmj1QR8mJyToO+r+rha1/V/NA8=",
        "originContent": "        if user is not None:",
        "translatedContent": "        if user is not None:"
      },
      {
        "row": 7,
        "rowsha": "UBoSUThgYpW1SM3ScElKL1mgtgYgK5HFN0Wx/vPVxiQ=",
        "originContent": "            key = \"user.{0}\".format(user_id)",
        "translatedContent": "            key = \"user.{0}\".format(user_id)"
      },
      {
        "row": 8,
        "rowsha": "qNHAIqY71P/vY/a+mvSdtv+stVUYgWrnvstqlwNp9ok=",
        "originContent": "            cache.set(key, json.dumps(user))",
        "translatedContent": "            cache.set(key, json.dumps(user))"
      },
      {
        "row": 9,
        "rowsha": "0CwKuaTXupC467haU/xblkMlRi5Fc8rPbAJBpJD+TrE=",
        "originContent": "    return user",
        "translatedContent": "    return user"
      },
      {
        "row": 10,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 37,
    "Content": "\n[Memcached](https://memcached.org/) is generally used in this manner.\n\nSubsequent reads of data added to cache are fast.  Cache-aside is also referred to as lazy loading.  Only requested data is cached, which avoids filling up the cache with data that isn't requested.\n\n##### Disadvantage(s): cache-aside\n\n* Each cache miss results in three trips, which can cause a noticeable delay.\n* Data can become stale if it is updated in the database.  This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.\n* When a node fails, it is replaced by a new, empty node, increasing latency.\n\n#### Write-through\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/0vBc0hN.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\nThe application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:\n\n* Application adds/updates entry in cache\n* Cache synchronously writes entry to data store\n* Return\n\nApplication code:\n",
    "ContentSha": "fTUxdhUP8C+msOuO6oFCQBKVESfJlBRIv+xTex+NRH4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n[Memcached](https://memcached.org/) genellikle bu şekilde kullanılır.\n\nÖnbelleğe eklenen verilerin sonraki okumaları hızlıdır. Cache-aside aynı zamanda tembel yükleme olarak da adlandırılır. Yalnızca istenen veriler önbelleğe alınır, böylece istenmeyen verilerle önbelleğin dolması önlenir.\n\n##### Dezavantaj(lar): cache-aside\n\n* Her önbellek kaçırması üç yolculuğa neden olur, bu da fark edilir bir gecikmeye yol açabilir.\n* Veriler veritabanında güncellenirse bayatlayabilir. Bu sorun, önbellek kaydının güncellenmesini zorunlu kılan bir yaşam süresi (TTL) ayarlanarak veya write-through kullanılarak hafifletilir.\n* Bir düğüm arızalandığında, yeni ve boş bir düğümle değiştirilir, bu da gecikmeyi artırır.\n\n#### Write-through\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/0vBc0hN.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Kaynak: Ölçeklenebilirlik, erişilebilirlik, stabilite, desenler</a></i>\n</p>\n\nUygulama, önbelleği ana veri deposu olarak kullanır, verileri okur ve yazar, önbellek ise veritabanına okuma ve yazma işlemlerinden sorumludur:\n\n* Uygulama önbelleğe kayıt ekler/günceller\n* Önbellek kaydı veri deposuna eşzamanlı olarak yazar\n* Dönüş\n\nUygulama kodu:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "E4LHEdyL1DwD4IyYAty9Hb8gRIvsp+JJ5WRbEoFDNGU=",
        "originContent": "[Memcached](https://memcached.org/) is generally used in this manner.",
        "translatedContent": "[Memcached](https://memcached.org/) genellikle bu şekilde kullanılır."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "ZBzM67sYKm8MY5U3qOL36LExlLr2hg8g7s03Nl1X3J0=",
        "originContent": "Subsequent reads of data added to cache are fast.  Cache-aside is also referred to as lazy loading.  Only requested data is cached, which avoids filling up the cache with data that isn't requested.",
        "translatedContent": "Önbelleğe eklenen verilerin sonraki okumaları hızlıdır. Cache-aside aynı zamanda tembel yükleme olarak da adlandırılır. Yalnızca istenen veriler önbelleğe alınır, böylece istenmeyen verilerle önbelleğin dolması önlenir."
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "Hw958kRegOuxjCT94H5l8wJpZzNqECQ8GTLdn3iqEDk=",
        "originContent": "##### Disadvantage(s): cache-aside",
        "translatedContent": "##### Dezavantaj(lar): cache-aside"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "9Rerkd9WfGEAGf3NLR62SDPSOpiw25soOiXvUxJFUt0=",
        "originContent": "* Each cache miss results in three trips, which can cause a noticeable delay.",
        "translatedContent": "* Her önbellek kaçırması üç yolculuğa neden olur, bu da fark edilir bir gecikmeye yol açabilir."
      },
      {
        "row": 9,
        "rowsha": "b3v63AxRU8hHaNcfACCeQyUxDUpy+0q9Ppq1bfQfUaA=",
        "originContent": "* Data can become stale if it is updated in the database.  This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.",
        "translatedContent": "* Veriler veritabanında güncellenirse bayatlayabilir. Bu sorun, önbellek kaydının güncellenmesini zorunlu kılan bir yaşam süresi (TTL) ayarlanarak veya write-through kullanılarak hafifletilir."
      },
      {
        "row": 10,
        "rowsha": "mMDjsWP12Ldo7MhVGRQn4hzZpem4HxQY6e/IkzTHaRw=",
        "originContent": "* When a node fails, it is replaced by a new, empty node, increasing latency.",
        "translatedContent": "* Bir düğüm arızalandığında, yeni ve boş bir düğümle değiştirilir, bu da gecikmeyi artırır."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "4LfteySHoc23JvHTHYY/pfUiiD6WDkaFaTwzdChin5E=",
        "originContent": "#### Write-through",
        "translatedContent": "#### Write-through"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 15,
        "rowsha": "n8+iStPrY76OiWCe6wBH7DTpSJQerebBkcaZ7BvhzOI=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/0vBc0hN.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/0vBc0hN.png\">"
      },
      {
        "row": 16,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 17,
        "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
        "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Kaynak: Ölçeklenebilirlik, erişilebilirlik, stabilite, desenler</a></i>"
      },
      {
        "row": 18,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "iaS3/ToQt/6NgIEBO7U2UvWCtV8srR9pZbtnr69Mqp4=",
        "originContent": "The application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:",
        "translatedContent": "Uygulama, önbelleği ana veri deposu olarak kullanır, verileri okur ve yazar, önbellek ise veritabanına okuma ve yazma işlemlerinden sorumludur:"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "P8NHtHewWpHcRrd8ft5J9TGmEbXfHon0UmSDyNiqj8I=",
        "originContent": "* Application adds/updates entry in cache",
        "translatedContent": "* Uygulama önbelleğe kayıt ekler/günceller"
      },
      {
        "row": 23,
        "rowsha": "Of2RJIEL6O+bLxs8/CFA+F+XUYshUcsYsDtMbm46PCo=",
        "originContent": "* Cache synchronously writes entry to data store",
        "translatedContent": "* Önbellek kaydı veri deposuna eşzamanlı olarak yazar"
      },
      {
        "row": 24,
        "rowsha": "dVCyv+Glf3q+P+oyQGZoDvq9yHHjMuG613l/zpxNvsY=",
        "originContent": "* Return",
        "translatedContent": "* Dönüş"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "bTTEYmx8/NnzJ9Vj3S9YHRNHaN5nOGSpq8bv6m82Q/Y=",
        "originContent": "Application code:",
        "translatedContent": "Uygulama kodu:"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 38,
    "Content": "```python\nset_user(12345, {\"foo\":\"bar\"})\n```",
    "ContentSha": "7tpMTtbDSdUbs+oC+Qf5dKLGCUAcRFUe6DfcgSYQP7c=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```python\nset_user(12345, {\"foo\":\"bar\"})\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
        "originContent": "```python",
        "translatedContent": "```python"
      },
      {
        "row": 2,
        "rowsha": "o6DQzApBJFvAFtmtUDJxboMSOdY5nLk7xoHa2SuH3mA=",
        "originContent": "set_user(12345, {\"foo\":\"bar\"})",
        "translatedContent": "set_user(12345, {\"foo\":\"bar\"})"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 39,
    "Content": "\nCache code:\n",
    "ContentSha": "3TQIz863VWmVTS8NeQVBQ2s9apIl1JpwXxyAqo7YRXU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nÖnbellek kodu:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "3L7lF9r9ZpI05MJpCpovoGAJv4zxhwVP5HkvER24ftA=",
        "originContent": "Cache code:",
        "translatedContent": "Önbellek kodu:"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 40,
    "Content": "```python\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\n```",
    "ContentSha": "2/SVlo2Tq+z8vN6s72UuRvXSio2ONq8aOqxj7V/g+MY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```python\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
        "originContent": "```python",
        "translatedContent": "```python"
      },
      {
        "row": 2,
        "rowsha": "Trrm302+1XC8RwVkNuANVpe6tv0gwcH/4UX+Dykdg4s=",
        "originContent": "def set_user(user_id, values):",
        "translatedContent": "def set_user(user_id, values):"
      },
      {
        "row": 3,
        "rowsha": "MOuaTi5rCF/Yaxfz2FKpHchMv6zR/sa49iVuy3ru07M=",
        "originContent": "    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)",
        "translatedContent": "    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)"
      },
      {
        "row": 4,
        "rowsha": "Wc94+sJoObKR2p220YZuIbcHHVhiiRF2v+qhvQqcHIw=",
        "originContent": "    cache.set(user_id, user)",
        "translatedContent": "    cache.set(user_id, user)"
      },
      {
        "row": 5,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 41,
    "Content": "\nWrite-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast.  Users are generally more tolerant of latency when updating data than reading data.  Data in the cache is not stale.\n\n##### Disadvantage(s): write through\n\n* When a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database.  Cache-aside in conjunction with write through can mitigate this issue.\n* Most data written might never be read, which can be minimized with a TTL.\n\n#### Write-behind (write-back)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/rgSrvjG.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\nIn write-behind, the application does the following:\n\n* Add/update entry in cache\n* Asynchronously write entry to the data store, improving write performance\n\n##### Disadvantage(s): write-behind\n\n* There could be data loss if the cache goes down prior to its contents hitting the data store.\n* It is more complex to implement write-behind than it is to implement cache-aside or write-through.\n\n#### Refresh-ahead\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/kxtjqgE.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>\n</p>\n\nYou can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.\n\nRefresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.\n\n##### Disadvantage(s): refresh-ahead\n",
    "ContentSha": "7f5A+XWrDoL377SvEQn7a+GkFngcY2VPIRUi5SDADy0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Write-through, yazma işlemi nedeniyle genel olarak yavaş bir işlemdir, ancak yeni yazılan verilerin sonraki okunmaları hızlıdır. Kullanıcılar genellikle veri güncellemesi yaparken gecikmeye okuma işlemine göre daha toleranslıdır. Önbellekteki veri bayat değildir.\n\n##### Dezavantaj(lar): write through\n\n* Bir arıza veya ölçeklendirme nedeniyle yeni bir düğüm oluşturulduğunda, yeni düğüm veritabanındaki giriş güncellenene kadar girişleri önbelleğe almaz. Cache-aside ile write through birlikte kullanılarak bu sorun hafifletilebilir.\n* Yazılan verilerin çoğu hiçbir zaman okunmayabilir, bu TTL ile en aza indirilebilir.\n\n#### Write-behind (write-back)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/rgSrvjG.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Kaynak: Ölçeklenebilirlik, kullanılabilirlik, stabilite, desenler</a></i>\n</p>\n\nWrite-behind'da uygulama aşağıdaki işlemleri yapar:\n\n* Önbellekte giriş ekle/güncelle\n* Girişi veri deposuna asenkron olarak yazar, yazma performansını artırır\n\n##### Dezavantaj(lar): write-behind\n\n* Önbellek içeriği veri deposuna ulaşmadan önce önbellek kapanırsa veri kaybı olabilir.\n* Write-behind uygulamak, cache-aside veya write-through uygulamaktan daha karmaşıktır.\n\n#### Refresh-ahead\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/kxtjqgE.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Kaynak: Önbellekten bellek içi veri ızgarasına</a></i>\n</p>\n\nÖnbelleği, yakın zamanda erişilen herhangi bir önbellek girişini süresi dolmadan önce otomatik olarak yenileyecek şekilde yapılandırabilirsiniz.\n\nRefresh-ahead, önbellek gelecekte hangi öğelerin gerekebileceğini doğru tahmin edebilirse, read-through'a göre gecikmeyi azaltabilir.\n\n##### Dezavantaj(lar): refresh-ahead\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Write-through, yazma işlemi nedeniyle genel olarak yavaş bir işlemdir, ancak yeni yazılan verilerin sonraki okunmaları hızlıdır. Kullanıcılar genellikle veri güncellemesi yaparken gecikmeye okuma işlemine göre daha toleranslıdır. Önbellekteki veri bayat değildir."
      },
      {
        "row": 2,
        "rowsha": "CE1/1d+Be5iRcsEtg2TnmlemDty5WCN/17Lj5O9MhcM=",
        "originContent": "Write-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast.  Users are generally more tolerant of latency when updating data than reading data.  Data in the cache is not stale.",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "##### Dezavantaj(lar): write through"
      },
      {
        "row": 4,
        "rowsha": "EGxa08OZ2bqhkrWVaz/IXBdXffsjNFcEm7q43ZRMMJM=",
        "originContent": "##### Disadvantage(s): write through",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Bir arıza veya ölçeklendirme nedeniyle yeni bir düğüm oluşturulduğunda, yeni düğüm veritabanındaki giriş güncellenene kadar girişleri önbelleğe almaz. Cache-aside ile write through birlikte kullanılarak bu sorun hafifletilebilir."
      },
      {
        "row": 6,
        "rowsha": "4OHzAIpImXTT5Vz9JzWpDxNTpN1FYjRW3koPv5qvJBY=",
        "originContent": "* When a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database.  Cache-aside in conjunction with write through can mitigate this issue.",
        "translatedContent": "* Yazılan verilerin çoğu hiçbir zaman okunmayabilir, bu TTL ile en aza indirilebilir."
      },
      {
        "row": 7,
        "rowsha": "AnCZLTQp4CaSc7etrA2sFcw9k8G4T1KbSPOyXmM5ybA=",
        "originContent": "* Most data written might never be read, which can be minimized with a TTL.",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Write-behind (write-back)"
      },
      {
        "row": 9,
        "rowsha": "T/W0y5JQxPt3g+w/ep0ap2PcTja8WgBYYr72Wk2W4i0=",
        "originContent": "#### Write-behind (write-back)",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 11,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/rgSrvjG.png\">"
      },
      {
        "row": 12,
        "rowsha": "XPPb1znn51Z2XnBlJIk46Lj2sI7ZAbdfUk/OvNCXFqI=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/rgSrvjG.png\">",
        "translatedContent": "  <br/>"
      },
      {
        "row": 13,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Kaynak: Ölçeklenebilirlik, kullanılabilirlik, stabilite, desenler</a></i>"
      },
      {
        "row": 14,
        "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
        "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
        "translatedContent": "</p>"
      },
      {
        "row": 15,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Write-behind'da uygulama aşağıdaki işlemleri yapar:"
      },
      {
        "row": 17,
        "rowsha": "GgcOnlJYp0r45QdG3IodXPZS4HUAdFKtH9OmWeIkThA=",
        "originContent": "In write-behind, the application does the following:",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Önbellekte giriş ekle/güncelle"
      },
      {
        "row": 19,
        "rowsha": "CFz4gaw6txqGu3xkMRoJSgSXQG2xSRLeYhagt9HEUWI=",
        "originContent": "* Add/update entry in cache",
        "translatedContent": "* Girişi veri deposuna asenkron olarak yazar, yazma performansını artırır"
      },
      {
        "row": 20,
        "rowsha": "SbAQdEBvRSvrJ2TKuulQkOZtaaHLA/vMmgipoOYTfT4=",
        "originContent": "* Asynchronously write entry to the data store, improving write performance",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "##### Dezavantaj(lar): write-behind"
      },
      {
        "row": 22,
        "rowsha": "O2zvPHMR4bHAH/3OiL+ZpOLWc7Z7t9wEMc3wJuEvJSk=",
        "originContent": "##### Disadvantage(s): write-behind",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Önbellek içeriği veri deposuna ulaşmadan önce önbellek kapanırsa veri kaybı olabilir."
      },
      {
        "row": 24,
        "rowsha": "dwX0WPznoYrN7o0TjeaiCchqG8Rx9hdF8H8gaJr4HJs=",
        "originContent": "* There could be data loss if the cache goes down prior to its contents hitting the data store.",
        "translatedContent": "* Write-behind uygulamak, cache-aside veya write-through uygulamaktan daha karmaşıktır."
      },
      {
        "row": 25,
        "rowsha": "RgQB15hkS5IOC02kJDLmHtd46nZsUP5ZqVDKCzG/U9A=",
        "originContent": "* It is more complex to implement write-behind than it is to implement cache-aside or write-through.",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Refresh-ahead"
      },
      {
        "row": 27,
        "rowsha": "p6mRRf3RClOyHXiVMMpCkKWDD/cWqheqx21QIPu5wuM=",
        "originContent": "#### Refresh-ahead",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 29,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/kxtjqgE.png\">"
      },
      {
        "row": 30,
        "rowsha": "sR/wAnITMjTa1mDcgY1Wp4Oqx67JSya1O9gxjgStZfg=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/kxtjqgE.png\">",
        "translatedContent": "  <br/>"
      },
      {
        "row": 31,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Kaynak: Önbellekten bellek içi veri ızgarasına</a></i>"
      },
      {
        "row": 32,
        "rowsha": "USINg1pGG/U+9K+ntxVznHzWHt5Cf6mwA5Lf1aFR1Uk=",
        "originContent": "  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>",
        "translatedContent": "</p>"
      },
      {
        "row": 33,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Önbelleği, yakın zamanda erişilen herhangi bir önbellek girişini süresi dolmadan önce otomatik olarak yenileyecek şekilde yapılandırabilirsiniz."
      },
      {
        "row": 35,
        "rowsha": "crS+gv126gEJUk4dRg50TSuPdZa75Ffd1Bg7mjRzxc4=",
        "originContent": "You can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Refresh-ahead, önbellek gelecekte hangi öğelerin gerekebileceğini doğru tahmin edebilirse, read-through'a göre gecikmeyi azaltabilir."
      },
      {
        "row": 37,
        "rowsha": "uTflbG0lK0Yw+LSuSkVmX6scHmqv4gxV8E8DdCtCAxg=",
        "originContent": "Refresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "##### Dezavantaj(lar): refresh-ahead"
      },
      {
        "row": 39,
        "rowsha": "b0F0GxDH1yGv4h4mXVsqWiM7JkLTn2/dMWsI2zNyXhg=",
        "originContent": "##### Disadvantage(s): refresh-ahead",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 42,
    "Content": "* Not accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.\n\n### Disadvantage(s): cache\n\n* Need to maintain consistency between caches and the source of truth such as the database through [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms).\n* Cache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.\n* Need to make application changes such as adding Redis or memcached.\n\n### Source(s) and further reading\n\n* [From cache to in-memory data grid](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)\n* [Scalable system design patterns](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)\n* [Introduction to architecting systems for scale](http://lethain.com/introduction-to-architecting-systems-for-scale/)\n* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [Scalability](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n* [AWS ElastiCache strategies](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)\n* [Wikipedia](https://en.wikipedia.org/wiki/Cache_(computing))\n\n## Asynchronism\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/54GYsSx.png\">\n  <br/>\n  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>\n</p>\n\nAsynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line.  They can also help by doing time-consuming work in advance, such as periodic aggregation of data.\n\n### Message queues\n\nMessage queues receive, hold, and deliver messages.  If an operation is too slow to perform inline, you can use a message queue with the following workflow:\n\n* An application publishes a job to the queue, then notifies the user of job status\n* A worker picks up the job from the queue, processes it, then signals the job is complete\n\nThe user is not blocked and the job is processed in the background.  During this time, the client might optionally do a small amount of processing to make it seem like the task has completed.  For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.\n\n**[Redis](https://redis.io/)** is useful as a simple message broker but messages can be lost.\n\n**[RabbitMQ](https://www.rabbitmq.com/)** is popular but requires you to adapt to the 'AMQP' protocol and manage your own nodes.",
    "ContentSha": "m5CQKaSxoSpqZLBi9DEuTpec6TQ1PuzDQenhKpH7SUw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* Gelecekte hangi öğelere ihtiyaç duyulacağının doğru tahmin edilememesi, refresh-ahead olmadan olduğundan daha düşük performansa yol açabilir.\n\n### Dezavantaj(lar): önbellek\n\n* Önbellekler ile veritabanı gibi gerçek kaynak arasında [önbellek geçersizleştirme](https://en.wikipedia.org/wiki/Cache_algorithms) ile tutarlılık sağlanmalıdır.\n* Önbellek geçersizleştirme zor bir problemdir, önbelleğin ne zaman güncelleneceği ile ilgili ek karmaşıklık vardır.\n* Redis veya memcached eklemek gibi uygulama değişiklikleri yapmak gerekir.\n\n### Kaynak(lar) ve ileri okuma\n\n* [Önbellekten bellek içi veri ızgarasına](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)\n* [Ölçeklenebilir sistem tasarım desenleri](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)\n* [Ölçek için sistem mimarisine giriş](http://lethain.com/introduction-to-architecting-systems-for-scale/)\n* [Ölçeklenebilirlik, erişilebilirlik, stabilite, desenler](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [Ölçeklenebilirlik](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n* [AWS ElastiCache stratejileri](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)\n* [Vikipedi](https://en.wikipedia.org/wiki/Cache_(computing))\n\n## Asenkronluk\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/54GYsSx.png\">\n  <br/>\n  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Kaynak: Ölçek için sistem mimarisine giriş</a></i>\n</p>\n\nAsenkron iş akışları, satır içi gerçekleştirilecek pahalı işlemler için istek sürelerini azaltmaya yardımcı olur. Ayrıca, veri toplamanın periyodik olarak önceden yapılması gibi zaman alan işleri önceden gerçekleştirerek de fayda sağlar.\n\n### Mesaj kuyrukları\n\nMesaj kuyrukları mesajları alır, tutar ve teslim eder. Bir işlemin satır içi gerçekleştirilmesi çok yavaşsa, aşağıdaki iş akışıyla bir mesaj kuyruğu kullanılabilir:\n\n* Bir uygulama kuyruğa bir işi gönderir, ardından kullanıcıya iş durumu bildirir\n* Bir çalışan kuyruğundan işi alır, işler ve işin tamamlandığını bildirir\n\nKullanıcı engellenmez ve iş arka planda işlenir. Bu süre zarfında, istemci isteğin tamamlandığını göstermek için küçük bir işlem yapabilir. Örneğin, bir tweet gönderiliyorsa, tweet anında zaman çizelgenize eklenebilir fakat tüm takipçilerinize ulaşması biraz zaman alabilir.\n\n**[Redis](https://redis.io/)** basit bir mesaj aracısı olarak kullanışlıdır, ancak mesajlar kaybolabilir.\n\n**[RabbitMQ](https://www.rabbitmq.com/)** popülerdir ancak 'AMQP' protokolüne uyum sağlamanızı ve kendi sunucularınızı yönetmenizi gerektirir.",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "mA2DF/x6CDm3GB3qhi7Rp0Xumunt5D5kgGLeFAHr1Ug=",
        "originContent": "* Not accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.",
        "translatedContent": "* Gelecekte hangi öğelere ihtiyaç duyulacağının doğru tahmin edilememesi, refresh-ahead olmadan olduğundan daha düşük performansa yol açabilir."
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "Csc7g6X2mKrHFQci7dlHki88R2nKbZYT/JAz25ZMt3g=",
        "originContent": "### Disadvantage(s): cache",
        "translatedContent": "### Dezavantaj(lar): önbellek"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "QvWcWGfBcihyZXaQeMeba0HZOu27t8zrK/k0+WrD3m0=",
        "originContent": "* Need to maintain consistency between caches and the source of truth such as the database through [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms).",
        "translatedContent": "* Önbellekler ile veritabanı gibi gerçek kaynak arasında [önbellek geçersizleştirme](https://en.wikipedia.org/wiki/Cache_algorithms) ile tutarlılık sağlanmalıdır."
      },
      {
        "row": 6,
        "rowsha": "BRMT7O2GQK3iYe2vOJA3c+v7V3R6l4DqgofDfTGzbaE=",
        "originContent": "* Cache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.",
        "translatedContent": "* Önbellek geçersizleştirme zor bir problemdir, önbelleğin ne zaman güncelleneceği ile ilgili ek karmaşıklık vardır."
      },
      {
        "row": 7,
        "rowsha": "3OfBJ/Ckj6yFFBr6VwlU3HuA0UhYtUZ+0cipa0DCgTc=",
        "originContent": "* Need to make application changes such as adding Redis or memcached.",
        "translatedContent": "* Redis veya memcached eklemek gibi uygulama değişiklikleri yapmak gerekir."
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Kaynak(lar) ve ileri okuma"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "IC6+RAekNHtj59Xjcjk8Kuod0TL6VeYNrsCljJnJ1ow=",
        "originContent": "* [From cache to in-memory data grid](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)",
        "translatedContent": "* [Önbellekten bellek içi veri ızgarasına](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)"
      },
      {
        "row": 12,
        "rowsha": "NjV6omClw7dGpYvjE2KTfiTbA9v++5aNx2Xf9W4RVxk=",
        "originContent": "* [Scalable system design patterns](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)",
        "translatedContent": "* [Ölçeklenebilir sistem tasarım desenleri](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)"
      },
      {
        "row": 13,
        "rowsha": "dHi+Guuju5Gn3/DVSySxEHQfRY/um5lB5rke9wJBhFk=",
        "originContent": "* [Introduction to architecting systems for scale](http://lethain.com/introduction-to-architecting-systems-for-scale/)",
        "translatedContent": "* [Ölçek için sistem mimarisine giriş](http://lethain.com/introduction-to-architecting-systems-for-scale/)"
      },
      {
        "row": 14,
        "rowsha": "UVMSE1BpfAJjZtNGckenaHDWkkWMyRCmwx5PRWNWv7Q=",
        "originContent": "* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)",
        "translatedContent": "* [Ölçeklenebilirlik, erişilebilirlik, stabilite, desenler](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)"
      },
      {
        "row": 15,
        "rowsha": "vd74kSe6/W7OaZr725A+FRRLGrD4dHmOnzys9UCLzck=",
        "originContent": "* [Scalability](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)",
        "translatedContent": "* [Ölçeklenebilirlik](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)"
      },
      {
        "row": 16,
        "rowsha": "ggcDxxH5+pZY4D7KSFtSMPbvpKcToPCtSxEa11z2rIc=",
        "originContent": "* [AWS ElastiCache strategies](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)",
        "translatedContent": "* [AWS ElastiCache stratejileri](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)"
      },
      {
        "row": 17,
        "rowsha": "nVgGXMw6JYC4OMhy7IHNwK8ovIbmhO7jg3jGAKJiku0=",
        "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Cache_(computing))",
        "translatedContent": "* [Vikipedi](https://en.wikipedia.org/wiki/Cache_(computing))"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "d/TAMehRkdoikoGI7oKPDOq6a5oLRR2DTlUlYBjki50=",
        "originContent": "## Asynchronism",
        "translatedContent": "## Asenkronluk"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 22,
        "rowsha": "Qf+4XI5PLk5j+VdTcUSc+eSi6yJI87Oq6jipuDhP7w4=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/54GYsSx.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/54GYsSx.png\">"
      },
      {
        "row": 23,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 24,
        "rowsha": "XKyWblIAaLweFNdYR7DY6+BG5VKu0ZN+qyUPrZFPuGw=",
        "originContent": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>",
        "translatedContent": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Kaynak: Ölçek için sistem mimarisine giriş</a></i>"
      },
      {
        "row": 25,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "MDDrykFu/8yiUROgJD2AL1OSgV17zd7bSTztM4nVGHQ=",
        "originContent": "Asynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line.  They can also help by doing time-consuming work in advance, such as periodic aggregation of data.",
        "translatedContent": "Asenkron iş akışları, satır içi gerçekleştirilecek pahalı işlemler için istek sürelerini azaltmaya yardımcı olur. Ayrıca, veri toplamanın periyodik olarak önceden yapılması gibi zaman alan işleri önceden gerçekleştirerek de fayda sağlar."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "M8DBN4ku9XMEe3C3Dl7PelMQpG9dDBXkNWc0bvluiAc=",
        "originContent": "### Message queues",
        "translatedContent": "### Mesaj kuyrukları"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "OTLhE8cwKTAEuLzV3vAxxhXflo4n2LkdGyb7EaP880I=",
        "originContent": "Message queues receive, hold, and deliver messages.  If an operation is too slow to perform inline, you can use a message queue with the following workflow:",
        "translatedContent": "Mesaj kuyrukları mesajları alır, tutar ve teslim eder. Bir işlemin satır içi gerçekleştirilmesi çok yavaşsa, aşağıdaki iş akışıyla bir mesaj kuyruğu kullanılabilir:"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "C7xhpqwwY+LqSvhSSO6YwoU6aieMfOj7cc30HyGEiu4=",
        "originContent": "* An application publishes a job to the queue, then notifies the user of job status",
        "translatedContent": "* Bir uygulama kuyruğa bir işi gönderir, ardından kullanıcıya iş durumu bildirir"
      },
      {
        "row": 34,
        "rowsha": "EugvF5aMoCL3u+O4W6S1kZdCVnVpfHKDR+Lz3FOMux4=",
        "originContent": "* A worker picks up the job from the queue, processes it, then signals the job is complete",
        "translatedContent": "* Bir çalışan kuyruğundan işi alır, işler ve işin tamamlandığını bildirir"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "eqMcTCbtlQiP4+/1dQmkeN8TarhiXdjhQX5gYpEU/Kw=",
        "originContent": "The user is not blocked and the job is processed in the background.  During this time, the client might optionally do a small amount of processing to make it seem like the task has completed.  For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.",
        "translatedContent": "Kullanıcı engellenmez ve iş arka planda işlenir. Bu süre zarfında, istemci isteğin tamamlandığını göstermek için küçük bir işlem yapabilir. Örneğin, bir tweet gönderiliyorsa, tweet anında zaman çizelgenize eklenebilir fakat tüm takipçilerinize ulaşması biraz zaman alabilir."
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "qDVHi/dE4fuKbxsrWORF4lUXFClt6hIcACQ1UPJwlJM=",
        "originContent": "**[Redis](https://redis.io/)** is useful as a simple message broker but messages can be lost.",
        "translatedContent": "**[Redis](https://redis.io/)** basit bir mesaj aracısı olarak kullanışlıdır, ancak mesajlar kaybolabilir."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "cZ62aoGhWXO8UUZ/T+Rb14mP4aEqe2bJ/xCk2AFOg4A=",
        "originContent": "**[RabbitMQ](https://www.rabbitmq.com/)** is popular but requires you to adapt to the 'AMQP' protocol and manage your own nodes.",
        "translatedContent": "**[RabbitMQ](https://www.rabbitmq.com/)** popülerdir ancak 'AMQP' protokolüne uyum sağlamanızı ve kendi sunucularınızı yönetmenizi gerektirir."
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 43,
    "Content": "\n**[Amazon SQS](https://aws.amazon.com/sqs/)** is hosted but can have high latency and has the possibility of messages being delivered twice.\n\n### Task queues\n\nTasks queues receive tasks and their related data, runs them, then delivers their results.  They can support scheduling and can be used to run computationally-intensive jobs in the background.\n\n**[Celery](https://docs.celeryproject.org/en/stable/)** has support for scheduling and primarily has python support.\n\n### Back pressure\n\nIf queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance.  [Back pressure](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html) can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue.  Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later.  Clients can retry the request at a later time, perhaps with [exponential backoff](https://en.wikipedia.org/wiki/Exponential_backoff).\n\n### Disadvantage(s): asynchronism\n\n* Use cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.\n\n### Source(s) and further reading\n\n* [It's all a numbers game](https://www.youtube.com/watch?v=1KRYH75wgy4)\n* [Applying back pressure when overloaded](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)\n* [Little's law](https://en.wikipedia.org/wiki/Little%27s_law)\n* [What is the difference between a message queue and a task queue?](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)\n\n## Communication\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/5KeocQs.jpg\">\n  <br/>\n  <i><a href=http://www.escotal.com/osilayer.html>Source: OSI 7 layer model</a></i>\n</p>\n\n### Hypertext transfer protocol (HTTP)\n\nHTTP is a method for encoding and transporting data between a client and a server.  It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request.  HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.\n\nA basic HTTP request consists of a verb (method) and a resource (endpoint).  Below are common HTTP verbs:\n\n| Verb | Description | Idempotent* | Safe | Cacheable |\n|---|---|---|---|---|",
    "ContentSha": "EQovDG9OkNb9dVypgpzwJggXSXWXdn7svWuM8fLZ6Es=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**[Amazon SQS](https://aws.amazon.com/sqs/)** barındırılır ancak yüksek gecikmeye sahip olabilir ve mesajların iki kez teslim edilme olasılığı vardır.\n\n### Görev kuyrukları\n\nGörev kuyrukları görevleri ve ilgili verilerini alır, çalıştırır ve ardından sonuçlarını iletir. Zamanlama desteği sunabilirler ve arka planda hesaplama açısından yoğun işleri çalıştırmak için kullanılabilirler.\n\n**[Celery](https://docs.celeryproject.org/en/stable/)** zamanlama desteğine sahiptir ve esas olarak python desteği bulunur.\n\n### Geri basınç\n\nKuyruklar önemli ölçüde büyümeye başlarsa, kuyruk boyutu belleği aşabilir ve bu durum önbellek kaçırmaları, disk okuma işlemleri ve daha yavaş performansa yol açabilir. [Geri basınç](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html) kuyruk boyutunu sınırlandırarak yüksek iş hacmi oranı ve kuyrukta bulunan işler için iyi yanıt sürelerinin korunmasına yardımcı olur. Kuyruk dolduğunda, istemciler sunucu meşgul veya HTTP 503 durum kodu alır ve daha sonra tekrar denemeleri istenir. İstemciler isteği daha sonraki bir zamanda, örneğin [üstel geri çekilme](https://en.wikipedia.org/wiki/Exponential_backoff) ile yeniden deneyebilir.\n\n### Dezavantaj(lar): asenkronluk\n\n* Ucuz hesaplamalar ve gerçek zamanlı iş akışları gibi kullanım durumları senkron işlemler için daha uygun olabilir, çünkü kuyrukların eklenmesi gecikme ve karmaşıklık yaratabilir.\n\n### Kaynak(lar) ve daha fazla okuma\n\n* [Hepsi bir sayı oyunudur](https://www.youtube.com/watch?v=1KRYH75wgy4)\n* [Aşırı yüklenmede geri basınç uygulama](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)\n* [Little'ın yasası](https://en.wikipedia.org/wiki/Little%27s_law)\n* [Mesaj kuyruğu ile görev kuyruğu arasındaki fark nedir?](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)\n\n## İletişim\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/5KeocQs.jpg\">\n  <br/>\n  <i><a href=http://www.escotal.com/osilayer.html>Kaynak: OSI 7 katmanlı model</a></i>\n</p>\n\n### Hiper metin aktarım protokolü (HTTP)\n\nHTTP, bir istemci ile bir sunucu arasında veri kodlamak ve taşımak için kullanılan bir yöntemdir. İstek/yanıt protokolüdür: istemciler istek gönderir ve sunucular istekle ilgili içerik ve tamamlanma durumu bilgisiyle yanıt verir. HTTP kendi başına çalışır, bu sayede istek ve yanıtlar yük dengeleme, önbellekleme, şifreleme ve sıkıştırma yapan birçok ara yönlendirici ve sunucudan geçebilir.\n\nTemel bir HTTP isteği bir fiil (metot) ve bir kaynak (uç nokta) içerir. Aşağıda yaygın HTTP fiilleri verilmiştir:\n\n| Fiil | Açıklama | Idempotent* | Güvenli | Önbelleklenebilir |\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "JdJIiGblg1lo1Hv9lrZKrmri+H2PHGh+c4+AJHvC/Ho=",
        "originContent": "**[Amazon SQS](https://aws.amazon.com/sqs/)** is hosted but can have high latency and has the possibility of messages being delivered twice.",
        "translatedContent": "**[Amazon SQS](https://aws.amazon.com/sqs/)** barındırılır ancak yüksek gecikmeye sahip olabilir ve mesajların iki kez teslim edilme olasılığı vardır."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "Y+T9u9jvoNxoRasie9Z6deflBls+XhaieNZjB1pnDeY=",
        "originContent": "### Task queues",
        "translatedContent": "### Görev kuyrukları"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "g97ihGpVqeeStuv7zKW/0/7HktMz8gl+wSP34LKZ//U=",
        "originContent": "Tasks queues receive tasks and their related data, runs them, then delivers their results.  They can support scheduling and can be used to run computationally-intensive jobs in the background.",
        "translatedContent": "Görev kuyrukları görevleri ve ilgili verilerini alır, çalıştırır ve ardından sonuçlarını iletir. Zamanlama desteği sunabilirler ve arka planda hesaplama açısından yoğun işleri çalıştırmak için kullanılabilirler."
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "epToSKFhBbnR+JYYSSU5qT0EfnYi9TLI6TS8cN8M+jQ=",
        "originContent": "**[Celery](https://docs.celeryproject.org/en/stable/)** has support for scheduling and primarily has python support.",
        "translatedContent": "**[Celery](https://docs.celeryproject.org/en/stable/)** zamanlama desteğine sahiptir ve esas olarak python desteği bulunur."
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "k+wc+P+0qAAxGfVCT7qqi2V77ZPM8fBafrt1Yu8AmZ8=",
        "originContent": "### Back pressure",
        "translatedContent": "### Geri basınç"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "l9TK3MvuxkfMvJhx+BJGaovzc0vhydAGWoqT6wBIamY=",
        "originContent": "If queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance.  [Back pressure](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html) can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue.  Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later.  Clients can retry the request at a later time, perhaps with [exponential backoff](https://en.wikipedia.org/wiki/Exponential_backoff).",
        "translatedContent": "Kuyruklar önemli ölçüde büyümeye başlarsa, kuyruk boyutu belleği aşabilir ve bu durum önbellek kaçırmaları, disk okuma işlemleri ve daha yavaş performansa yol açabilir. [Geri basınç](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html) kuyruk boyutunu sınırlandırarak yüksek iş hacmi oranı ve kuyrukta bulunan işler için iyi yanıt sürelerinin korunmasına yardımcı olur. Kuyruk dolduğunda, istemciler sunucu meşgul veya HTTP 503 durum kodu alır ve daha sonra tekrar denemeleri istenir. İstemciler isteği daha sonraki bir zamanda, örneğin [üstel geri çekilme](https://en.wikipedia.org/wiki/Exponential_backoff) ile yeniden deneyebilir."
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "X63xWFxSa6XT9YNTdHeNxsV6EBblOgijod7MwwC7tYs=",
        "originContent": "### Disadvantage(s): asynchronism",
        "translatedContent": "### Dezavantaj(lar): asenkronluk"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "ec9Q8eQZH4KE2XsUW8ol11Fjm3uixUZXXECvkThtgVk=",
        "originContent": "* Use cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.",
        "translatedContent": "* Ucuz hesaplamalar ve gerçek zamanlı iş akışları gibi kullanım durumları senkron işlemler için daha uygun olabilir, çünkü kuyrukların eklenmesi gecikme ve karmaşıklık yaratabilir."
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Kaynak(lar) ve daha fazla okuma"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "R9SWfMSjTpI8QJHjJquX5UA/v4OsQncdzgayeDDRp74=",
        "originContent": "* [It's all a numbers game](https://www.youtube.com/watch?v=1KRYH75wgy4)",
        "translatedContent": "* [Hepsi bir sayı oyunudur](https://www.youtube.com/watch?v=1KRYH75wgy4)"
      },
      {
        "row": 21,
        "rowsha": "CRHAxGVRxbex+UHiPc3ZG7mmL4tLGzuIg2gDhlsDE1g=",
        "originContent": "* [Applying back pressure when overloaded](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)",
        "translatedContent": "* [Aşırı yüklenmede geri basınç uygulama](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)"
      },
      {
        "row": 22,
        "rowsha": "sD14bJ8RhOZ5uJX/QkYWP60UWvxVFD7sVsC5Rat1dDw=",
        "originContent": "* [Little's law](https://en.wikipedia.org/wiki/Little%27s_law)",
        "translatedContent": "* [Little'ın yasası](https://en.wikipedia.org/wiki/Little%27s_law)"
      },
      {
        "row": 23,
        "rowsha": "9pfppEwOQ+EYxw0upiLbIsT/46iBNzFDUTpRsQ3Hkqc=",
        "originContent": "* [What is the difference between a message queue and a task queue?](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)",
        "translatedContent": "* [Mesaj kuyruğu ile görev kuyruğu arasındaki fark nedir?](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "JlMsLnBNoRqgF14jp1yqsxcMqoqezySPU/BE1WqWZw4=",
        "originContent": "## Communication",
        "translatedContent": "## İletişim"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 28,
        "rowsha": "cgy9Hg4o9DiTMKPqK5aiYcJ6D2cTQHBFWnjrygxPnZo=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/5KeocQs.jpg\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/5KeocQs.jpg\">"
      },
      {
        "row": 29,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 30,
        "rowsha": "prm5d05a0esoU9cyHbrBQId3K1rE7HwyJ5IZQ03F8J4=",
        "originContent": "  <i><a href=http://www.escotal.com/osilayer.html>Source: OSI 7 layer model</a></i>",
        "translatedContent": "  <i><a href=http://www.escotal.com/osilayer.html>Kaynak: OSI 7 katmanlı model</a></i>"
      },
      {
        "row": 31,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "a1d+rg/Dzd1wjID96cxPpEkd4TMiBbmpcTJxciDcr2Q=",
        "originContent": "### Hypertext transfer protocol (HTTP)",
        "translatedContent": "### Hiper metin aktarım protokolü (HTTP)"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "/9RA5UcFiUEXASj94438tLJBaifmqR26xRyJq475HpQ=",
        "originContent": "HTTP is a method for encoding and transporting data between a client and a server.  It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request.  HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.",
        "translatedContent": "HTTP, bir istemci ile bir sunucu arasında veri kodlamak ve taşımak için kullanılan bir yöntemdir. İstek/yanıt protokolüdür: istemciler istek gönderir ve sunucular istekle ilgili içerik ve tamamlanma durumu bilgisiyle yanıt verir. HTTP kendi başına çalışır, bu sayede istek ve yanıtlar yük dengeleme, önbellekleme, şifreleme ve sıkıştırma yapan birçok ara yönlendirici ve sunucudan geçebilir."
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "g5LJ0P3PN1Du/SJYxHd02KofaBLGWmuffE5N0zUAJg0=",
        "originContent": "A basic HTTP request consists of a verb (method) and a resource (endpoint).  Below are common HTTP verbs:",
        "translatedContent": "Temel bir HTTP isteği bir fiil (metot) ve bir kaynak (uç nokta) içerir. Aşağıda yaygın HTTP fiilleri verilmiştir:"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "cX+YhsBlONCGtFdxKCMRB59Gou5jB2wxxOhItY0FhqI=",
        "originContent": "| Verb | Description | Idempotent* | Safe | Cacheable |",
        "translatedContent": "| Fiil | Açıklama | Idempotent* | Güvenli | Önbelleklenebilir |"
      },
      {
        "row": 40,
        "rowsha": "Eq8A70vu0E6YMkp22XH5RBmpK3cxHPIWKQIONEm49Fc=",
        "originContent": "|---|---|---|---|---|",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 44,
    "Content": "| GET | Reads a resource | Yes | Yes | Yes |\n| POST | Creates a resource or trigger a process that handles data | No | No | Yes if response contains freshness info |\n| PUT | Creates or replace a resource | Yes | No | No |\n| PATCH | Partially updates a resource | No | No | Yes if response contains freshness info |\n| DELETE | Deletes a resource | Yes | No | No |\n\n*Can be called many times without different outcomes.\n\nHTTP is an application layer protocol relying on lower-level protocols such as **TCP** and **UDP**.\n\n#### Source(s) and further reading: HTTP\n\n* [What is HTTP?](https://www.nginx.com/resources/glossary/http/)\n* [Difference between HTTP and TCP](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)\n* [Difference between PUT and PATCH](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)\n\n### Transmission control protocol (TCP)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/JdAsdvG.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>\n</p>\n\nTCP is a connection-oriented protocol over an [IP network](https://en.wikipedia.org/wiki/Internet_Protocol).  Connection is established and terminated using a [handshake](https://en.wikipedia.org/wiki/Handshaking).  All packets sent are guaranteed to reach the destination in the original order and without corruption through:\n\n* Sequence numbers and [checksum fields](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation) for each packet\n* [Acknowledgement](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)) packets and automatic retransmission\n\nIf the sender does not receive a correct response, it will resend the packets.  If there are multiple timeouts, the connection is dropped.  TCP also implements [flow control](https://en.wikipedia.org/wiki/Flow_control_(data)) and [congestion control](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control).  These guarantees cause delays and generally result in less efficient transmission than UDP.\n\nTo ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage.  It can be expensive to have a large number of open connections between web server threads and say, a [memcached](https://memcached.org/) server.  [Connection pooling](https://en.wikipedia.org/wiki/Connection_pool) can help in addition to switching to UDP where applicable.\n\nTCP is useful for applications that require high reliability but are less time critical.  Some examples include web servers, database info, SMTP, FTP, and SSH.\n\nUse TCP over UDP when:\n\n* You need all of the data to arrive intact\n* You want to automatically make a best estimate use of the network throughput\n",
    "ContentSha": "EP5TmrahE1oj6DWbBMp+YEc76iteUbB8TKDGw6d8MFY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "| GET | Bir kaynağı okur | Evet | Evet | Evet |\n| POST | Bir kaynak oluşturur veya verileri işleyen bir süreci tetikler | Hayır | Hayır | Yanıt tazelik bilgisi içeriyorsa Evet |\n| PUT | Bir kaynağı oluşturur veya değiştirir | Evet | Hayır | Hayır |\n| PATCH | Bir kaynağı kısmen günceller | Hayır | Hayır | Yanıt tazelik bilgisi içeriyorsa Evet |\n| DELETE | Bir kaynağı siler | Evet | Hayır | Hayır |\n\n*Farklı sonuçlar olmadan birçok kez çağrılabilir.\n\nHTTP, **TCP** ve **UDP** gibi alt seviye protokollere bağlı bir uygulama katmanı protokolüdür.\n\n#### Kaynak(lar) ve daha fazla okuma: HTTP\n\n* [HTTP nedir?](https://www.nginx.com/resources/glossary/http/)\n* [HTTP ve TCP arasındaki fark](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)\n* [PUT ve PATCH arasındaki fark](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)\n\n### İletim Kontrol Protokolü (TCP)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/JdAsdvG.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Kaynak: Çok oyunculu bir oyun nasıl yapılır</a></i>\n</p>\n\nTCP, [IP ağı](https://en.wikipedia.org/wiki/Internet_Protocol) üzerinden bağlantı odaklı bir protokoldür.  Bağlantı, bir [el sıkışma](https://en.wikipedia.org/wiki/Handshaking) ile kurulur ve sonlandırılır.  Gönderilen tüm paketlerin orijinal sırada ve bozulmadan hedefe ulaşması şu yollarla garanti edilir:\n\n* Her paket için sıra numaraları ve [checksum alanları](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation)\n* [Onay](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)) paketleri ve otomatik yeniden iletim\n\nGönderen doğru yanıt almazsa, paketleri yeniden gönderir.  Birden fazla zaman aşımı olursa bağlantı kesilir.  TCP ayrıca [akış kontrolü](https://en.wikipedia.org/wiki/Flow_control_(data)) ve [tıkanıklık kontrolü](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control) uygular.  Bu garantiler gecikmelere neden olur ve genellikle UDP'den daha az verimli iletim sağlar.\n\nYüksek veri aktarımını sağlamak için web sunucuları çok sayıda TCP bağlantısını açık tutabilir, bu da yüksek bellek kullanımıyla sonuçlanır.  Web sunucu iş parçacıkları ile örneğin bir [memcached](https://memcached.org/) sunucusu arasında çok sayıda açık bağlantı olması maliyetli olabilir.  [Bağlantı havuzu](https://en.wikipedia.org/wiki/Connection_pool) yardımcı olabilir ve uygun olduğunda UDP'ye geçiş yapılabilir.\n\nTCP, yüksek güvenilirlik gerektiren ancak zaman açısından kritik olmayan uygulamalar için uygundur.  Bazı örnekler arasında web sunucuları, veritabanı bilgisi, SMTP, FTP ve SSH bulunur.\n\nTCP’yi UDP yerine kullanın, eğer:\n\n* Tüm verilerin sağlam bir şekilde ulaşmasını istiyorsanız\n* Ağ bant genişliğinin en iyi şekilde otomatik tahmin edilerek kullanılmasını istiyorsanız\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "TGyFO/0qOSRP36nOG1cXHODfm9tDzZLfm7iPg06K9vI=",
        "originContent": "| GET | Reads a resource | Yes | Yes | Yes |",
        "translatedContent": "| GET | Bir kaynağı okur | Evet | Evet | Evet |"
      },
      {
        "row": 2,
        "rowsha": "2VPrAMg3vxSjcopyCJIDtEu8ZVvJHTSa+dZHCjUPHgA=",
        "originContent": "| POST | Creates a resource or trigger a process that handles data | No | No | Yes if response contains freshness info |",
        "translatedContent": "| POST | Bir kaynak oluşturur veya verileri işleyen bir süreci tetikler | Hayır | Hayır | Yanıt tazelik bilgisi içeriyorsa Evet |"
      },
      {
        "row": 3,
        "rowsha": "4CakkGA+YDAnjVY4tDAxPE89j2SUt+jktyy9ZKekEG4=",
        "originContent": "| PUT | Creates or replace a resource | Yes | No | No |",
        "translatedContent": "| PUT | Bir kaynağı oluşturur veya değiştirir | Evet | Hayır | Hayır |"
      },
      {
        "row": 4,
        "rowsha": "08X/dUgAT1I2nSu8dWExdPJ+9vBTBYHBiFJr/xEwumo=",
        "originContent": "| PATCH | Partially updates a resource | No | No | Yes if response contains freshness info |",
        "translatedContent": "| PATCH | Bir kaynağı kısmen günceller | Hayır | Hayır | Yanıt tazelik bilgisi içeriyorsa Evet |"
      },
      {
        "row": 5,
        "rowsha": "LzJ2h5JwoBwi3tSWTXzKLljCWH1GN05+I8RH64pLeMQ=",
        "originContent": "| DELETE | Deletes a resource | Yes | No | No |",
        "translatedContent": "| DELETE | Bir kaynağı siler | Evet | Hayır | Hayır |"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "BINJ1KjYGjUfLshYcaZMeOkOWoiR7pOvYK3vayiAKkU=",
        "originContent": "*Can be called many times without different outcomes.",
        "translatedContent": "*Farklı sonuçlar olmadan birçok kez çağrılabilir."
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "7Bgrh6sM5dgZQSrEmAOaOLvC6CGfznbDwyn9FFm3uzk=",
        "originContent": "HTTP is an application layer protocol relying on lower-level protocols such as **TCP** and **UDP**.",
        "translatedContent": "HTTP, **TCP** ve **UDP** gibi alt seviye protokollere bağlı bir uygulama katmanı protokolüdür."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "E3FZxI6O3jf/PIfFp8xFd0jV000CAtdccq0NffUeIxM=",
        "originContent": "#### Source(s) and further reading: HTTP",
        "translatedContent": "#### Kaynak(lar) ve daha fazla okuma: HTTP"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "fjDxTsBJkh+LmgKTk2qukVM5jWJ8jvCiLatVWQ2juaQ=",
        "originContent": "* [What is HTTP?](https://www.nginx.com/resources/glossary/http/)",
        "translatedContent": "* [HTTP nedir?](https://www.nginx.com/resources/glossary/http/)"
      },
      {
        "row": 14,
        "rowsha": "d+VJ0NR/tp+nzfMn5BKyjNmR0i65J1ljdQKe7Hn3I50=",
        "originContent": "* [Difference between HTTP and TCP](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)",
        "translatedContent": "* [HTTP ve TCP arasındaki fark](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)"
      },
      {
        "row": 15,
        "rowsha": "UedXiXUaOm7A0p1Wm/YaeUal0LhGvcNVB/rYwsx91GU=",
        "originContent": "* [Difference between PUT and PATCH](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)",
        "translatedContent": "* [PUT ve PATCH arasındaki fark](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "ALcjISRP9zOXkFXUsA+YjfY3rzS/n903LGIUuc5iZXw=",
        "originContent": "### Transmission control protocol (TCP)",
        "translatedContent": "### İletim Kontrol Protokolü (TCP)"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 20,
        "rowsha": "r49AzjR5KRMj7D0OMQhe9ZwGxV2UP13railym8NShC4=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/JdAsdvG.jpg\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/JdAsdvG.jpg\">"
      },
      {
        "row": 21,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 22,
        "rowsha": "HXYf1d9zCry3iPSfFm7t1CvBc5e2F1HTXv5za5UPbTQ=",
        "originContent": "  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>",
        "translatedContent": "  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Kaynak: Çok oyunculu bir oyun nasıl yapılır</a></i>"
      },
      {
        "row": 23,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "M9vPLLY2qjR4D1S8I94xozAlTLGgadD4hasXPbIVLow=",
        "originContent": "TCP is a connection-oriented protocol over an [IP network](https://en.wikipedia.org/wiki/Internet_Protocol).  Connection is established and terminated using a [handshake](https://en.wikipedia.org/wiki/Handshaking).  All packets sent are guaranteed to reach the destination in the original order and without corruption through:",
        "translatedContent": "TCP, [IP ağı](https://en.wikipedia.org/wiki/Internet_Protocol) üzerinden bağlantı odaklı bir protokoldür.  Bağlantı, bir [el sıkışma](https://en.wikipedia.org/wiki/Handshaking) ile kurulur ve sonlandırılır.  Gönderilen tüm paketlerin orijinal sırada ve bozulmadan hedefe ulaşması şu yollarla garanti edilir:"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "pmDWp3FWL4bXBnlIkmGVpSkCFDA/TMcbjGUNUFcsIkc=",
        "originContent": "* Sequence numbers and [checksum fields](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation) for each packet",
        "translatedContent": "* Her paket için sıra numaraları ve [checksum alanları](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation)"
      },
      {
        "row": 28,
        "rowsha": "qEJdXdOEL3M0/qs9RfVmT652QP6Lc9NBFc3zFd3RDDY=",
        "originContent": "* [Acknowledgement](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)) packets and automatic retransmission",
        "translatedContent": "* [Onay](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)) paketleri ve otomatik yeniden iletim"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "WvRExJpFOP4pnP/kJ/P8Qs8WU6ECM1UNW+5YCMDwRMM=",
        "originContent": "If the sender does not receive a correct response, it will resend the packets.  If there are multiple timeouts, the connection is dropped.  TCP also implements [flow control](https://en.wikipedia.org/wiki/Flow_control_(data)) and [congestion control](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control).  These guarantees cause delays and generally result in less efficient transmission than UDP.",
        "translatedContent": "Gönderen doğru yanıt almazsa, paketleri yeniden gönderir.  Birden fazla zaman aşımı olursa bağlantı kesilir.  TCP ayrıca [akış kontrolü](https://en.wikipedia.org/wiki/Flow_control_(data)) ve [tıkanıklık kontrolü](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control) uygular.  Bu garantiler gecikmelere neden olur ve genellikle UDP'den daha az verimli iletim sağlar."
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "dvYUP2kDh9L02+I2XEk8LbiffmEXZojZ/Mhl7tJTNFc=",
        "originContent": "To ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage.  It can be expensive to have a large number of open connections between web server threads and say, a [memcached](https://memcached.org/) server.  [Connection pooling](https://en.wikipedia.org/wiki/Connection_pool) can help in addition to switching to UDP where applicable.",
        "translatedContent": "Yüksek veri aktarımını sağlamak için web sunucuları çok sayıda TCP bağlantısını açık tutabilir, bu da yüksek bellek kullanımıyla sonuçlanır.  Web sunucu iş parçacıkları ile örneğin bir [memcached](https://memcached.org/) sunucusu arasında çok sayıda açık bağlantı olması maliyetli olabilir.  [Bağlantı havuzu](https://en.wikipedia.org/wiki/Connection_pool) yardımcı olabilir ve uygun olduğunda UDP'ye geçiş yapılabilir."
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "8dqcnwoFWhLyLb9tG1ZOGhi3odOsHaODgCC0Je6WTKI=",
        "originContent": "TCP is useful for applications that require high reliability but are less time critical.  Some examples include web servers, database info, SMTP, FTP, and SSH.",
        "translatedContent": "TCP, yüksek güvenilirlik gerektiren ancak zaman açısından kritik olmayan uygulamalar için uygundur.  Bazı örnekler arasında web sunucuları, veritabanı bilgisi, SMTP, FTP ve SSH bulunur."
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "YZDTt32t4XojJEqQ48XTzHxCN0bvoKEoZp9Epo1mvXI=",
        "originContent": "Use TCP over UDP when:",
        "translatedContent": "TCP’yi UDP yerine kullanın, eğer:"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "GW7/nWqQj1GU5yUjsGF9KyWKXyc99bQ+Sb9rx/puxT0=",
        "originContent": "* You need all of the data to arrive intact",
        "translatedContent": "* Tüm verilerin sağlam bir şekilde ulaşmasını istiyorsanız"
      },
      {
        "row": 39,
        "rowsha": "x1rcMu+zs2DT6BUdnA0WD9/4+vV+mUubKuVKFzotFn4=",
        "originContent": "* You want to automatically make a best estimate use of the network throughput",
        "translatedContent": "* Ağ bant genişliğinin en iyi şekilde otomatik tahmin edilerek kullanılmasını istiyorsanız"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 45,
    "Content": "### User datagram protocol (UDP)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yzDrJtA.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>\n</p>\n\nUDP is connectionless.  Datagrams (analogous to packets) are guaranteed only at the datagram level.  Datagrams might reach their destination out of order or not at all.  UDP does not support congestion control.  Without the guarantees that TCP support, UDP is generally more efficient.\n\nUDP can broadcast, sending datagrams to all devices on the subnet.  This is useful with [DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.\n\nUDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.\n\nUse UDP over TCP when:\n\n* You need the lowest latency\n* Late data is worse than loss of data\n* You want to implement your own error correction\n\n#### Source(s) and further reading: TCP and UDP\n\n* [Networking for game programming](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)\n* [Key differences between TCP and UDP protocols](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)\n* [Difference between TCP and UDP](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)\n* [Transmission control protocol](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)\n* [User datagram protocol](https://en.wikipedia.org/wiki/User_Datagram_Protocol)\n* [Scaling memcache at Facebook](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)\n\n### Remote procedure call (RPC)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/iF4Mkb5.png\">\n  <br/>\n  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>Source: Crack the system design interview</a></i>\n</p>\n\nIn an RPC, a client causes a procedure to execute on a different address space, usually a remote server.  The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program.  Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls.  Popular RPC frameworks include [Protobuf](https://developers.google.com/protocol-buffers/), [Thrift](https://thrift.apache.org/), and [Avro](https://avro.apache.org/docs/current/).\n\nRPC is a request-response protocol:",
    "ContentSha": "qWH5LAPvggn7k7ivyK8v6v8/pTXkZRoURbzBFakhSEM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Kullanıcı veri gramı protokolü (UDP)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yzDrJtA.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Kaynak: Çok oyunculu oyun nasıl yapılır</a></i>\n</p>\n\nUDP bağlantısızdır. Veri grupları (paketlere benzer) sadece veri grubu seviyesinde garanti edilir. Veri grupları hedeflerine sırasız veya hiç ulaşmayabilir. UDP, tıkanıklık kontrolünü desteklemez. TCP'nin sağladığı garantiler olmadan UDP genellikle daha verimlidir.\n\nUDP yayın yapabilir, veri gruplarını alt ağdaki tüm cihazlara gönderebilir. Bu, [DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) ile kullanışlıdır çünkü istemci henüz bir IP adresi almamıştır ve bu nedenle IP adresi olmadan TCP akışı için bir yol engellenir.\n\nUDP daha az güvenilirdir ancak VoIP, video sohbet, yayın akışı ve gerçek zamanlı çok oyunculu oyunlar gibi gerçek zamanlı kullanım senaryolarında iyi çalışır.\n\nAşağıdaki durumlarda TCP yerine UDP kullanın:\n\n* En düşük gecikmeye ihtiyacınız varsa\n* Geç veri, veri kaybından daha kötüyse\n* Kendi hata düzeltmenizi uygulamak istiyorsanız\n\n#### Kaynak(lar) ve daha fazla okuma: TCP ve UDP\n\n* [Oyun programlama için ağ](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)\n* [TCP ve UDP protokolleri arasındaki temel farklar](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)\n* [TCP ve UDP arasındaki fark](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)\n* [Aktarım kontrol protokolü](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)\n* [Kullanıcı veri gramı protokolü](https://en.wikipedia.org/wiki/User_Datagram_Protocol)\n* [Facebook'ta memcache ölçeklendirme](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)\n\n### Uzaktan prosedür çağrısı (RPC)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/iF4Mkb5.png\">\n  <br/>\n  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>Kaynak: Sistem tasarımı mülakatını çöz</a></i>\n</p>\n\nBir RPC'de, bir istemci genellikle uzak bir sunucuda farklı bir adres alanında bir prosedürün çalışmasını sağlar. Prosedür, yerel bir prosedür çağrısı gibi kodlanır; istemci programından sunucu ile nasıl iletişim kurulacağı ayrıntıları soyutlanır. Uzaktaki çağrılar genellikle yerel çağrılardan daha yavaş ve daha az güvenilirdir, bu nedenle RPC çağrılarını yerel çağrılardan ayırmak faydalıdır. Popüler RPC çerçeveleri arasında [Protobuf](https://developers.google.com/protocol-buffers/), [Thrift](https://thrift.apache.org/) ve [Avro](https://avro.apache.org/docs/current/) bulunur.\n\nRPC bir istek-yanıt protokolüdür:",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "N7sH1VbZ64oF2Sc8BgbDFAtrezrDV/9qa2IG1CyXjms=",
        "originContent": "### User datagram protocol (UDP)",
        "translatedContent": "### Kullanıcı veri gramı protokolü (UDP)"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 4,
        "rowsha": "6AvRqafPA8+4ZTKrrRPMVfoLkJxe07ACq1lh7sM+OXs=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yzDrJtA.jpg\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yzDrJtA.jpg\">"
      },
      {
        "row": 5,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 6,
        "rowsha": "HXYf1d9zCry3iPSfFm7t1CvBc5e2F1HTXv5za5UPbTQ=",
        "originContent": "  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>",
        "translatedContent": "  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Kaynak: Çok oyunculu oyun nasıl yapılır</a></i>"
      },
      {
        "row": 7,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "RqNNtkuYA12Eho+nOWbrQ3Ox94hXes5ExSMQEn/bEjo=",
        "originContent": "UDP is connectionless.  Datagrams (analogous to packets) are guaranteed only at the datagram level.  Datagrams might reach their destination out of order or not at all.  UDP does not support congestion control.  Without the guarantees that TCP support, UDP is generally more efficient.",
        "translatedContent": "UDP bağlantısızdır. Veri grupları (paketlere benzer) sadece veri grubu seviyesinde garanti edilir. Veri grupları hedeflerine sırasız veya hiç ulaşmayabilir. UDP, tıkanıklık kontrolünü desteklemez. TCP'nin sağladığı garantiler olmadan UDP genellikle daha verimlidir."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "vV6FtTcpxMimUD2LUPWw1XpUQ7OmsUvSOiPjT5504ns=",
        "originContent": "UDP can broadcast, sending datagrams to all devices on the subnet.  This is useful with [DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.",
        "translatedContent": "UDP yayın yapabilir, veri gruplarını alt ağdaki tüm cihazlara gönderebilir. Bu, [DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) ile kullanışlıdır çünkü istemci henüz bir IP adresi almamıştır ve bu nedenle IP adresi olmadan TCP akışı için bir yol engellenir."
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "ony2lNZWVuFxsnQLSaFMI+FhvCqY5FJLhKiZw/IQb+4=",
        "originContent": "UDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.",
        "translatedContent": "UDP daha az güvenilirdir ancak VoIP, video sohbet, yayın akışı ve gerçek zamanlı çok oyunculu oyunlar gibi gerçek zamanlı kullanım senaryolarında iyi çalışır."
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "3vObY/NAqxnpRQqkZJXlK75psF70pTf7/obtoMsjCQs=",
        "originContent": "Use UDP over TCP when:",
        "translatedContent": "Aşağıdaki durumlarda TCP yerine UDP kullanın:"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "qmtvD6K86RUKKN64klY3ED9uL+TEwOFhCtSHD3bi48A=",
        "originContent": "* You need the lowest latency",
        "translatedContent": "* En düşük gecikmeye ihtiyacınız varsa"
      },
      {
        "row": 18,
        "rowsha": "RHP3XSKp36rAF0uk8/eyZsxuchAjs8u/lrGx/o2dh24=",
        "originContent": "* Late data is worse than loss of data",
        "translatedContent": "* Geç veri, veri kaybından daha kötüyse"
      },
      {
        "row": 19,
        "rowsha": "Ztu1edQn6GWTqoemOEB/NUQUk3B8prQB0p7LuWjBh3c=",
        "originContent": "* You want to implement your own error correction",
        "translatedContent": "* Kendi hata düzeltmenizi uygulamak istiyorsanız"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "Tt3c6DoKLiOfoMnUCquc8p86uMEslQwL0mcESVPOL4Y=",
        "originContent": "#### Source(s) and further reading: TCP and UDP",
        "translatedContent": "#### Kaynak(lar) ve daha fazla okuma: TCP ve UDP"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "tV3IFEsKT0nFMlnlkS61ay9+lAbkFBSlKJ2IN5y+DgM=",
        "originContent": "* [Networking for game programming](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)",
        "translatedContent": "* [Oyun programlama için ağ](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)"
      },
      {
        "row": 24,
        "rowsha": "gFfg8LiurZgQYQLk9ml+BNBRTmbpXu+wgi5X94pfdP0=",
        "originContent": "* [Key differences between TCP and UDP protocols](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)",
        "translatedContent": "* [TCP ve UDP protokolleri arasındaki temel farklar](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)"
      },
      {
        "row": 25,
        "rowsha": "gigJSz+KlSFZTEv+jdlqvA1HD0aZhHalwbRzOurSd1I=",
        "originContent": "* [Difference between TCP and UDP](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)",
        "translatedContent": "* [TCP ve UDP arasındaki fark](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)"
      },
      {
        "row": 26,
        "rowsha": "1nzcV1W/P9kjlykVIdYvvM9S04Yj3U/y/UonQAVDHjc=",
        "originContent": "* [Transmission control protocol](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)",
        "translatedContent": "* [Aktarım kontrol protokolü](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)"
      },
      {
        "row": 27,
        "rowsha": "fUCM23+YfHtbejC6qiOBKINwAl5Cq6vbnhfZFCjN6aU=",
        "originContent": "* [User datagram protocol](https://en.wikipedia.org/wiki/User_Datagram_Protocol)",
        "translatedContent": "* [Kullanıcı veri gramı protokolü](https://en.wikipedia.org/wiki/User_Datagram_Protocol)"
      },
      {
        "row": 28,
        "rowsha": "72yn2I5zcpg4gDRaRVJrnnWBmOGTksdyuMt6+F7kaGQ=",
        "originContent": "* [Scaling memcache at Facebook](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)",
        "translatedContent": "* [Facebook'ta memcache ölçeklendirme](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "TpvcphzreA+D2fs7C+WUoqLUeOzo7hBb3EDb1VwWuX4=",
        "originContent": "### Remote procedure call (RPC)",
        "translatedContent": "### Uzaktan prosedür çağrısı (RPC)"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 33,
        "rowsha": "1Hf/ikluyw7YaJ0sm564Ctcpip2QMs87nD0dTNPGJ9E=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/iF4Mkb5.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/iF4Mkb5.png\">"
      },
      {
        "row": 34,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 35,
        "rowsha": "Kg1BMDt51XaKyTk190B6osJ4drj6axFIeUQDVjIEzTw=",
        "originContent": "  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>Source: Crack the system design interview</a></i>",
        "translatedContent": "  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>Kaynak: Sistem tasarımı mülakatını çöz</a></i>"
      },
      {
        "row": 36,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "Bh0xTQtNeCassICqia4YNVI8C0Mz/uuX4aZs7+lPBTo=",
        "originContent": "In an RPC, a client causes a procedure to execute on a different address space, usually a remote server.  The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program.  Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls.  Popular RPC frameworks include [Protobuf](https://developers.google.com/protocol-buffers/), [Thrift](https://thrift.apache.org/), and [Avro](https://avro.apache.org/docs/current/).",
        "translatedContent": "Bir RPC'de, bir istemci genellikle uzak bir sunucuda farklı bir adres alanında bir prosedürün çalışmasını sağlar. Prosedür, yerel bir prosedür çağrısı gibi kodlanır; istemci programından sunucu ile nasıl iletişim kurulacağı ayrıntıları soyutlanır. Uzaktaki çağrılar genellikle yerel çağrılardan daha yavaş ve daha az güvenilirdir, bu nedenle RPC çağrılarını yerel çağrılardan ayırmak faydalıdır. Popüler RPC çerçeveleri arasında [Protobuf](https://developers.google.com/protocol-buffers/), [Thrift](https://thrift.apache.org/) ve [Avro](https://avro.apache.org/docs/current/) bulunur."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "JLgTVfxoKqH6Y9n65AbdfJu37V5YaDE/cblAsmAV2V0=",
        "originContent": "RPC is a request-response protocol:",
        "translatedContent": "RPC bir istek-yanıt protokolüdür:"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 46,
    "Content": "\n* **Client program** - Calls the client stub procedure.  The parameters are pushed onto the stack like a local procedure call.\n* **Client stub procedure** - Marshals (packs) procedure id and arguments into a request message.\n* **Client communication module** - OS sends the message from the client to the server.\n* **Server communication module** - OS passes the incoming packets to the server stub procedure.\n* **Server stub procedure** -  Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.\n* The server response repeats the steps above in reverse order.\n\nSample RPC calls:\n",
    "ContentSha": "5PmI2LbQPBewUn/2iz277V+TkEFWqKJeqfFmrsij1fA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n* **İstemci programı** - İstemci ara birimi prosedürünü çağırır. Parametreler, yerel prosedür çağrısındaki gibi yığına eklenir.\n* **İstemci ara birimi prosedürü** - Prosedür kimliği ve argümanları bir istek mesajına paketler (marshalling).\n* **İstemci iletişim modülü** - İşletim sistemi, mesajı istemciden sunucuya gönderir.\n* **Sunucu iletişim modülü** - İşletim sistemi, gelen paketleri sunucu ara birimi prosedürüne iletir.\n* **Sunucu ara birimi prosedürü** - Sonuçları açar (unmarshalling), prosedür kimliğiyle eşleşen sunucu prosedürünü çağırır ve verilen argümanları iletir.\n* Sunucu yanıtı, yukarıdaki adımların ters sırasıyla tekrar edilir.\n\nÖrnek RPC çağrıları:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "8O05uDAChA70zCiBG9sXgO5VrTCf8R4weHrgpgcoCSs=",
        "originContent": "* **Client program** - Calls the client stub procedure.  The parameters are pushed onto the stack like a local procedure call.",
        "translatedContent": "* **İstemci programı** - İstemci ara birimi prosedürünü çağırır. Parametreler, yerel prosedür çağrısındaki gibi yığına eklenir."
      },
      {
        "row": 3,
        "rowsha": "GbXIX7WIFIPeiRqfbBM++S9dYT9xDC0+9uW9cgxHjWU=",
        "originContent": "* **Client stub procedure** - Marshals (packs) procedure id and arguments into a request message.",
        "translatedContent": "* **İstemci ara birimi prosedürü** - Prosedür kimliği ve argümanları bir istek mesajına paketler (marshalling)."
      },
      {
        "row": 4,
        "rowsha": "BWYroZdRLwCUEFxxMwFvjzy7Ns1ErZE1N0Nz9FgmteM=",
        "originContent": "* **Client communication module** - OS sends the message from the client to the server.",
        "translatedContent": "* **İstemci iletişim modülü** - İşletim sistemi, mesajı istemciden sunucuya gönderir."
      },
      {
        "row": 5,
        "rowsha": "S/fO+YSTSutK2E6VTy5pV4OGJd4pwfNzirRU2ueyzA4=",
        "originContent": "* **Server communication module** - OS passes the incoming packets to the server stub procedure.",
        "translatedContent": "* **Sunucu iletişim modülü** - İşletim sistemi, gelen paketleri sunucu ara birimi prosedürüne iletir."
      },
      {
        "row": 6,
        "rowsha": "2gMq52C+y+sizsihIlvOpXOKxVPMU8mtfPAagN9CUHM=",
        "originContent": "* **Server stub procedure** -  Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.",
        "translatedContent": "* **Sunucu ara birimi prosedürü** - Sonuçları açar (unmarshalling), prosedür kimliğiyle eşleşen sunucu prosedürünü çağırır ve verilen argümanları iletir."
      },
      {
        "row": 7,
        "rowsha": "0VR3i+yK/Vy0pChQF2OAKrfWdgv88l/CXsr/CZP8IvE=",
        "originContent": "* The server response repeats the steps above in reverse order.",
        "translatedContent": "* Sunucu yanıtı, yukarıdaki adımların ters sırasıyla tekrar edilir."
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "oecfAGdCYZHxDEX9adrH160grqb/jXAgiwG0Iki6dxs=",
        "originContent": "Sample RPC calls:",
        "translatedContent": "Örnek RPC çağrıları:"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 47,
    "Content": "```\nGET /someoperation?data=anId\n\nPOST /anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n```",
    "ContentSha": "BYLxUnd5OWhXrWTwm++n0cxi7AnIAvtoL/RnYPfjXXk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nGET /someoperation?data=anId\n\nPOST /anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "9o9Gw4d/j+vk0jKMOWyMxhdaMlbGVjhZzltXeumS9gY=",
        "originContent": "GET /someoperation?data=anId",
        "translatedContent": "GET /someoperation?data=anId"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "BUr540FHvFI1WyZ5re+tyV5mxQTRGzME2luIG/NMObU=",
        "originContent": "POST /anotheroperation",
        "translatedContent": "POST /anotheroperation"
      },
      {
        "row": 5,
        "rowsha": "Ah+1ltuB5tAr89JYbuOYH+UZ8nXArJyna7zy67QJfZY=",
        "originContent": "{",
        "translatedContent": "{"
      },
      {
        "row": 6,
        "rowsha": "Xlr5/6Y2BcYHAFgzfrHXZR5GhOv4x5dlfZuJigo2+cI=",
        "originContent": "  \"data\":\"anId\";",
        "translatedContent": "  \"data\":\"anId\";"
      },
      {
        "row": 7,
        "rowsha": "cUiezwyh//arUr6YcQoloevjQMfDExnvWiwk9hYsjk4=",
        "originContent": "  \"anotherdata\": \"another value\"",
        "translatedContent": "  \"anotherdata\": \"another value\""
      },
      {
        "row": 8,
        "rowsha": "0Qs2qnSlm89KiBhYN/ZYr682Ru/yuxbDko0OkzXpRdI=",
        "originContent": "}",
        "translatedContent": "}"
      },
      {
        "row": 9,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 48,
    "Content": "\nRPC is focused on exposing behaviors.  RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.\n\nChoose a native library (aka SDK) when:\n\n* You know your target platform.\n* You want to control how your \"logic\" is accessed.\n* You want to control how error control happens off your library.\n* Performance and end user experience is your primary concern.\n\nHTTP APIs following **REST** tend to be used more often for public APIs.\n\n#### Disadvantage(s): RPC\n\n* RPC clients become tightly coupled to the service implementation.\n* A new API must be defined for every new operation or use case.\n* It can be difficult to debug RPC.\n* You might not be able to leverage existing technologies out of the box.  For example, it might require additional effort to ensure [RPC calls are properly cached](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/) on caching servers such as [Squid](http://www.squid-cache.org/).\n\n### Representational state transfer (REST)\n\nREST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server.  The server provides a representation of resources and actions that can either manipulate or get a new representation of resources.  All communication must be stateless and cacheable.\n\nThere are four qualities of a RESTful interface:\n\n* **Identify resources (URI in HTTP)** - use the same URI regardless of any operation.\n* **Change with representations (Verbs in HTTP)** - use verbs, headers, and body.\n* **Self-descriptive error message (status response in HTTP)** - Use status codes, don't reinvent the wheel.\n* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (HTML interface for HTTP)** - your web service should be fully accessible in a browser.\n\nSample REST calls:\n",
    "ContentSha": "Rt/8zO9jLRQq0DxNqYrouOd/1z3QvXPXQYsN4u7rca0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nRPC, davranışları ortaya çıkarmaya odaklanır.  RPC'ler genellikle iç iletişimlerde performans nedenleriyle kullanılır, çünkü yerel çağrıları el ile oluşturarak kullanım senaryolarınıza daha iyi uyum sağlayabilirsiniz.\n\nYerel bir kütüphaneyi (SDK olarak da bilinir) şu durumlarda seçin:\n\n* Hedef platformunuzu biliyorsanız.\n* \"Mantığınızın\" nasıl erişileceğini kontrol etmek istiyorsanız.\n* Hata kontrolünün kütüphaneniz dışında nasıl gerçekleşeceğini kontrol etmek istiyorsanız.\n* Performans ve son kullanıcı deneyimi birincil önceliğiniz ise.\n\n**REST**'i takip eden HTTP API'ler genellikle halka açık API'ler için daha fazla kullanılır.\n\n#### Dezavantaj(lar): RPC\n\n* RPC istemcileri, hizmet uygulamasına sıkı şekilde bağımlı hale gelir.\n* Her yeni işlem veya kullanım senaryosu için yeni bir API tanımlanmalıdır.\n* RPC'yi hata ayıklamak zor olabilir.\n* Var olan teknolojilerden kutudan çıktığı gibi faydalanamayabilirsiniz.  Örneğin, [RPC çağrılarının önbellekleme sunucularında](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/) (ör. [Squid](http://www.squid-cache.org/)) düzgün şekilde önbelleklendiğinden emin olmak ek çaba gerektirebilir.\n\n### Temsili durum aktarımı (REST)\n\nREST, istemcinin sunucu tarafından yönetilen bir kaynak kümesi üzerinde işlem yaptığı istemci/sunucu modelini zorunlu kılan bir mimari tarzdır.  Sunucu, kaynakların bir temsilini ve bu kaynakların temsilini değiştiren veya yeni bir temsilini alan işlemleri sağlar.  Tüm iletişimler durumsuz ve önbelleğe alınabilir olmalıdır.\n\nRESTful bir arayüzün dört özelliği vardır:\n\n* **Kaynakları tanımla (HTTP'de URI)** - herhangi bir işlemden bağımsız olarak aynı URI'yi kullanın.\n* **Temsillerle değiştir (HTTP'de Fiiller)** - fiilleri, başlıkları ve gövdeyi kullanın.\n* **Kendi kendini açıklayan hata mesajı (HTTP'de durum yanıtı)** - Durum kodlarını kullanın, tekerleği yeniden icat etmeyin.\n* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (HTTP için HTML arayüzü)** - web servisiniz tamamen bir tarayıcıda erişilebilir olmalıdır.\n\nÖrnek REST çağrıları:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "XJmvYMRlWSnDjQjYP2ui67XuYG8HActWmFXcdAFv3M4=",
        "originContent": "RPC is focused on exposing behaviors.  RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.",
        "translatedContent": "RPC, davranışları ortaya çıkarmaya odaklanır.  RPC'ler genellikle iç iletişimlerde performans nedenleriyle kullanılır, çünkü yerel çağrıları el ile oluşturarak kullanım senaryolarınıza daha iyi uyum sağlayabilirsiniz."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "b3wdh/Hn8L4MFT8bGa1gL8AnjFxcN1+F2SGNi1TqX7I=",
        "originContent": "Choose a native library (aka SDK) when:",
        "translatedContent": "Yerel bir kütüphaneyi (SDK olarak da bilinir) şu durumlarda seçin:"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "uJL3emZyJfl5yDh4Er1chEMzq46VKHQTeL0qLkfzLY4=",
        "originContent": "* You know your target platform.",
        "translatedContent": "* Hedef platformunuzu biliyorsanız."
      },
      {
        "row": 7,
        "rowsha": "Xq1v/PmfbzqKdQwRjHEiIRxsBxtNf1jiYvI7/D3XCLM=",
        "originContent": "* You want to control how your \"logic\" is accessed.",
        "translatedContent": "* \"Mantığınızın\" nasıl erişileceğini kontrol etmek istiyorsanız."
      },
      {
        "row": 8,
        "rowsha": "P0vnwlPle89UFnvbmbXFYH9R2RqKrTs02/lk0NZ8w60=",
        "originContent": "* You want to control how error control happens off your library.",
        "translatedContent": "* Hata kontrolünün kütüphaneniz dışında nasıl gerçekleşeceğini kontrol etmek istiyorsanız."
      },
      {
        "row": 9,
        "rowsha": "jBa3h1I74Z1SKV5f2EAjwfnMPNpiBqn7AV6ViecCb8E=",
        "originContent": "* Performance and end user experience is your primary concern.",
        "translatedContent": "* Performans ve son kullanıcı deneyimi birincil önceliğiniz ise."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "yzvC15CoAoDs5wkte0rrTmO7YMjWTV/jIvPSNTtgH7k=",
        "originContent": "HTTP APIs following **REST** tend to be used more often for public APIs.",
        "translatedContent": "**REST**'i takip eden HTTP API'ler genellikle halka açık API'ler için daha fazla kullanılır."
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "SoH46EXpkYKXJKgdP/R8uKh6k6n+MILD+8xL24SuLJ4=",
        "originContent": "#### Disadvantage(s): RPC",
        "translatedContent": "#### Dezavantaj(lar): RPC"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "tQS05NMinO27MyU5u2MbvDRKRZJGUB9op0nP9Di7bfM=",
        "originContent": "* RPC clients become tightly coupled to the service implementation.",
        "translatedContent": "* RPC istemcileri, hizmet uygulamasına sıkı şekilde bağımlı hale gelir."
      },
      {
        "row": 16,
        "rowsha": "l5j6OM09hEmUo3wJlObD77mcS4+mpTqeGg3Oi7gJiHU=",
        "originContent": "* A new API must be defined for every new operation or use case.",
        "translatedContent": "* Her yeni işlem veya kullanım senaryosu için yeni bir API tanımlanmalıdır."
      },
      {
        "row": 17,
        "rowsha": "U51uxXEKBUVI1hu577h0ywcSPcYwdMb9XFkeuGXRLSs=",
        "originContent": "* It can be difficult to debug RPC.",
        "translatedContent": "* RPC'yi hata ayıklamak zor olabilir."
      },
      {
        "row": 18,
        "rowsha": "c5YPLxamKWj/01J5GHsA8gFP72pOoJsqI/BOahqDZlI=",
        "originContent": "* You might not be able to leverage existing technologies out of the box.  For example, it might require additional effort to ensure [RPC calls are properly cached](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/) on caching servers such as [Squid](http://www.squid-cache.org/).",
        "translatedContent": "* Var olan teknolojilerden kutudan çıktığı gibi faydalanamayabilirsiniz.  Örneğin, [RPC çağrılarının önbellekleme sunucularında](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/) (ör. [Squid](http://www.squid-cache.org/)) düzgün şekilde önbelleklendiğinden emin olmak ek çaba gerektirebilir."
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "5pggeKJjZ+c7PZml5/muDOwnelAohiVqSVXVOVh1v3I=",
        "originContent": "### Representational state transfer (REST)",
        "translatedContent": "### Temsili durum aktarımı (REST)"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "ybiHGclDiUTU1i5NEMzKiMmiD0+IZfJMSrWTQWhl1pU=",
        "originContent": "REST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server.  The server provides a representation of resources and actions that can either manipulate or get a new representation of resources.  All communication must be stateless and cacheable.",
        "translatedContent": "REST, istemcinin sunucu tarafından yönetilen bir kaynak kümesi üzerinde işlem yaptığı istemci/sunucu modelini zorunlu kılan bir mimari tarzdır.  Sunucu, kaynakların bir temsilini ve bu kaynakların temsilini değiştiren veya yeni bir temsilini alan işlemleri sağlar.  Tüm iletişimler durumsuz ve önbelleğe alınabilir olmalıdır."
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "hhZokcRRYB1mLkIDrgS8VfZ9e59XUbWEojz33ZlR69E=",
        "originContent": "There are four qualities of a RESTful interface:",
        "translatedContent": "RESTful bir arayüzün dört özelliği vardır:"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "uJ0qD0K1wAh7fNvmdjo63o5UCdMXWt4F+ZtKLvNdw5Q=",
        "originContent": "* **Identify resources (URI in HTTP)** - use the same URI regardless of any operation.",
        "translatedContent": "* **Kaynakları tanımla (HTTP'de URI)** - herhangi bir işlemden bağımsız olarak aynı URI'yi kullanın."
      },
      {
        "row": 27,
        "rowsha": "Yw/738jxvx8UmeQv5Hy3qA3wgvJKCwN8obAIjFeUFqE=",
        "originContent": "* **Change with representations (Verbs in HTTP)** - use verbs, headers, and body.",
        "translatedContent": "* **Temsillerle değiştir (HTTP'de Fiiller)** - fiilleri, başlıkları ve gövdeyi kullanın."
      },
      {
        "row": 28,
        "rowsha": "zMtVPV7bLYtyyVynFiAsYRdsVxV9dlMtB1hrIKTI+QA=",
        "originContent": "* **Self-descriptive error message (status response in HTTP)** - Use status codes, don't reinvent the wheel.",
        "translatedContent": "* **Kendi kendini açıklayan hata mesajı (HTTP'de durum yanıtı)** - Durum kodlarını kullanın, tekerleği yeniden icat etmeyin."
      },
      {
        "row": 29,
        "rowsha": "LByvTxhA2T3N381ftDzf6Wpe23wtmVk0+7oEVwQxad4=",
        "originContent": "* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (HTML interface for HTTP)** - your web service should be fully accessible in a browser.",
        "translatedContent": "* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (HTTP için HTML arayüzü)** - web servisiniz tamamen bir tarayıcıda erişilebilir olmalıdır."
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "KvIhSTUImOsKTGRabyzgxRW844U1+6d81OKpdbnucfQ=",
        "originContent": "Sample REST calls:",
        "translatedContent": "Örnek REST çağrıları:"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 49,
    "Content": "```\nGET /someresources/anId\n\nPUT /someresources/anId\n{\"anotherdata\": \"another value\"}\n```",
    "ContentSha": "LfYrdSaJCXPWw5FeIGqODwCXjq6vLSYullHQ6dtLt9M=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nGET /someresources/anId\n\nPUT /someresources/anId\n{\"anotherdata\": \"another value\"}\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "1GRtVOB4D6GHpC1Dk1mYucHdRAiFes0ouCrs7RMLCf4=",
        "originContent": "GET /someresources/anId",
        "translatedContent": "GET /someresources/anId"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "fC8PhqPjGqTRh7N13XkSfUPyUNgeWwoP6hGrrqqGJec=",
        "originContent": "PUT /someresources/anId",
        "translatedContent": "PUT /someresources/anId"
      },
      {
        "row": 5,
        "rowsha": "WIjnB5L308vhBg8hYgOvfJxtU6Hwf/CFxHNuLZ1l7B4=",
        "originContent": "{\"anotherdata\": \"another value\"}",
        "translatedContent": "{\"anotherdata\": \"another value\"}"
      },
      {
        "row": 6,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 50,
    "Content": "\nREST is focused on exposing data.  It minimizes the coupling between client/server and is often used for public HTTP APIs.  REST uses a more generic and uniform method of exposing resources through URIs, [representation through headers](https://github.com/for-GET/know-your-http-well/blob/master/headers.md), and actions through verbs such as GET, POST, PUT, DELETE, and PATCH.  Being stateless, REST is great for horizontal scaling and partitioning.\n\n#### Disadvantage(s): REST\n\n* With REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy.  For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path.  With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.\n* REST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn't fit your use case.  For example, moving expired documents to the archive folder might not cleanly fit within these verbs.\n* Fetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.\n* Over time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.\n\n### RPC and REST calls comparison\n\n| Operation | RPC | REST |\n|---|---|---|\n| Signup    | **POST** /signup | **POST** /persons |\n| Resign    | **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234 |\n| Read a person | **GET** /readPerson?personid=1234 | **GET** /persons/1234 |\n| Read a person’s items list | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items |\n| Add an item to a person’s items | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |\n| Update an item    | **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |\n| Delete an item | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456 |\n\n<p align=\"center\">\n  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>Source: Do you really know why you prefer REST over RPC</a></i>\n</p>\n\n#### Source(s) and further reading: REST and RPC\n\n* [Do you really know why you prefer REST over RPC](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)\n* [When are RPC-ish approaches more appropriate than REST?](http://programmers.stackexchange.com/a/181186)\n* [REST vs JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)\n* [Debunking the myths of RPC and REST](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)\n* [What are the drawbacks of using REST](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)\n* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Thrift](https://code.facebook.com/posts/1468950976659943/)\n* [Why REST for internal use and not RPC](http://arstechnica.com/civis/viewtopic.php?t=1190508)\n\n## Security\n\nThis section could use some updates.  Consider [contributing](#contributing)!",
    "ContentSha": "SY9oRc1IgrKNdRZI1YEjzyytSRn6DjylmnfEWHK6KsU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nREST, verilerin sunulmasına odaklanır. İstemci/sunucu arasındaki bağı en aza indirir ve genellikle halka açık HTTP API'lerinde kullanılır. REST, kaynakları URI’ler aracılığıyla, [başlıklar üzerinden temsili](https://github.com/for-GET/know-your-http-well/blob/master/headers.md) ile ve GET, POST, PUT, DELETE ve PATCH gibi fiillerle daha genel ve uniform bir şekilde sunar. Durumsuz olması sayesinde REST, yatay ölçeklendirme ve bölümlendirme için idealdir.\n\n#### Dezavantaj(lar): REST\n\n* REST, verilerin sunulmasına odaklandığı için, kaynaklar doğal olarak basit bir hiyerarşide düzenlenmemiş veya erişilmiyorsa iyi bir seçenek olmayabilir. Örneğin, belirli bir olay kümesiyle eşleşen son bir saat içindeki tüm güncellenmiş kayıtları döndürmek, bir yol olarak kolayca ifade edilemez. REST ile bu, büyük olasılıkla URI yolu, sorgu parametreleri ve muhtemelen istek gövdesinin birleşimiyle uygulanır.\n* REST genellikle birkaç fiile (GET, POST, PUT, DELETE ve PATCH) dayanır, bu da bazen kullanım senaryonuza uymayabilir. Örneğin, süresi dolmuş belgeleri arşiv klasörüne taşımak bu fiillerle tam olarak örtüşmeyebilir.\n* İç içe geçmiş hiyerarşilere sahip karmaşık kaynakların alınması, tek bir görünümü işlemek için istemci ile sunucu arasında birden fazla tur gerektirir; örneğin, bir blog girdisinin içeriği ve o girdiye yapılan yorumları almak. Değişken ağ koşullarında çalışan mobil uygulamalar için bu çoklu turlar oldukça istenmeyen bir durumdur.\n* Zamanla, bir API yanıtına daha fazla alan eklenebilir ve eski istemciler, ihtiyaç duymadıkları tüm yeni veri alanlarını alır; bu da yük boyutunu artırır ve daha büyük gecikmelere yol açar.\n\n### RPC ve REST çağrıları karşılaştırması\n\n| İşlem | RPC | REST |\n|---|---|---|\n| Kayıt Ol    | **POST** /signup | **POST** /persons |\n| İstifa Et    | **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234 |\n| Bir kişiyi oku | **GET** /readPerson?personid=1234 | **GET** /persons/1234 |\n| Bir kişinin ürünler listesini oku | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items |\n| Bir kişinin ürünler listesine ürün ekle | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |\n| Bir ürünü güncelle    | **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |\n| Bir ürünü sil | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456 |\n\n<p align=\"center\">\n  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>Kaynak: Gerçekten REST’i RPC’ye neden tercih ettiğinizi biliyor musunuz?</a></i>\n</p>\n\n#### Kaynak(lar) ve daha fazla okuma: REST ve RPC\n\n* [Gerçekten REST’i RPC’ye neden tercih ettiğinizi biliyor musunuz?](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)\n* [Ne zaman RPC-benzeri yaklaşımlar REST’ten daha uygundur?](http://programmers.stackexchange.com/a/181186)\n* [REST vs JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)\n* [RPC ve REST’in efsanelerini çürütmek](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)\n* [RESTful API’lerin dezavantajları nelerdir?](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)\n* [Sistem tasarım mülakatını çözün](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Thrift](https://code.facebook.com/posts/1468950976659943/)\n* [Neden iç kullanımda REST, RPC değil?](http://arstechnica.com/civis/viewtopic.php?t=1190508)\n\n## Güvenlik\n\nBu bölümün güncellenmeye ihtiyacı var. [Katkıda bulunmayı](#contributing) düşünün!",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "UjrEsU6K4sQqwdT2LWPctmQJb5peHk5Ol9WmQtENbbA=",
        "originContent": "REST is focused on exposing data.  It minimizes the coupling between client/server and is often used for public HTTP APIs.  REST uses a more generic and uniform method of exposing resources through URIs, [representation through headers](https://github.com/for-GET/know-your-http-well/blob/master/headers.md), and actions through verbs such as GET, POST, PUT, DELETE, and PATCH.  Being stateless, REST is great for horizontal scaling and partitioning.",
        "translatedContent": "REST, verilerin sunulmasına odaklanır. İstemci/sunucu arasındaki bağı en aza indirir ve genellikle halka açık HTTP API'lerinde kullanılır. REST, kaynakları URI’ler aracılığıyla, [başlıklar üzerinden temsili](https://github.com/for-GET/know-your-http-well/blob/master/headers.md) ile ve GET, POST, PUT, DELETE ve PATCH gibi fiillerle daha genel ve uniform bir şekilde sunar. Durumsuz olması sayesinde REST, yatay ölçeklendirme ve bölümlendirme için idealdir."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "p7Y4UGK+r8HoG//sCv+w6/O6TdLRPCWXnVdfOqv0bNQ=",
        "originContent": "#### Disadvantage(s): REST",
        "translatedContent": "#### Dezavantaj(lar): REST"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "f7DgpbMc8WqILx6swpnSu/BNi9CdMM7YxXeW3AltWnA=",
        "originContent": "* With REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy.  For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path.  With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.",
        "translatedContent": "* REST, verilerin sunulmasına odaklandığı için, kaynaklar doğal olarak basit bir hiyerarşide düzenlenmemiş veya erişilmiyorsa iyi bir seçenek olmayabilir. Örneğin, belirli bir olay kümesiyle eşleşen son bir saat içindeki tüm güncellenmiş kayıtları döndürmek, bir yol olarak kolayca ifade edilemez. REST ile bu, büyük olasılıkla URI yolu, sorgu parametreleri ve muhtemelen istek gövdesinin birleşimiyle uygulanır."
      },
      {
        "row": 7,
        "rowsha": "R0fatfAUG8Gsj/RJY1nvTjJ4JI3Q4odayLJM3R1n79o=",
        "originContent": "* REST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn't fit your use case.  For example, moving expired documents to the archive folder might not cleanly fit within these verbs.",
        "translatedContent": "* REST genellikle birkaç fiile (GET, POST, PUT, DELETE ve PATCH) dayanır, bu da bazen kullanım senaryonuza uymayabilir. Örneğin, süresi dolmuş belgeleri arşiv klasörüne taşımak bu fiillerle tam olarak örtüşmeyebilir."
      },
      {
        "row": 8,
        "rowsha": "vkjpZQ9xt5H12UXRO8N6YeaZWa/dajwAT3E0n6t4rfM=",
        "originContent": "* Fetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.",
        "translatedContent": "* İç içe geçmiş hiyerarşilere sahip karmaşık kaynakların alınması, tek bir görünümü işlemek için istemci ile sunucu arasında birden fazla tur gerektirir; örneğin, bir blog girdisinin içeriği ve o girdiye yapılan yorumları almak. Değişken ağ koşullarında çalışan mobil uygulamalar için bu çoklu turlar oldukça istenmeyen bir durumdur."
      },
      {
        "row": 9,
        "rowsha": "M+CcXz+lhnxuMbyJ9ADp42PZCDm47kF7PuDsitv8ZQ4=",
        "originContent": "* Over time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.",
        "translatedContent": "* Zamanla, bir API yanıtına daha fazla alan eklenebilir ve eski istemciler, ihtiyaç duymadıkları tüm yeni veri alanlarını alır; bu da yük boyutunu artırır ve daha büyük gecikmelere yol açar."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "9+OFlAnB7eX/U58YzzyQmqBRblOi85+VjKC2+BQmeyM=",
        "originContent": "### RPC and REST calls comparison",
        "translatedContent": "### RPC ve REST çağrıları karşılaştırması"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "Mf0PJetf7lxPChdRyJhQx+/j59DO1racuKZYVwheSSY=",
        "originContent": "| Operation | RPC | REST |",
        "translatedContent": "| İşlem | RPC | REST |"
      },
      {
        "row": 14,
        "rowsha": "I8ygK3TzhkY++iR5bHqQEbDSyT8MOLTRXV0nYgW1m0M=",
        "originContent": "|---|---|---|",
        "translatedContent": "|---|---|---|"
      },
      {
        "row": 15,
        "rowsha": "yTX//Q9EnCRKE6Qtn1krLo7PsiICoBFPiL02dftV9ZQ=",
        "originContent": "| Signup    | **POST** /signup | **POST** /persons |",
        "translatedContent": "| Kayıt Ol    | **POST** /signup | **POST** /persons |"
      },
      {
        "row": 16,
        "rowsha": "0XLsE4U1AOxHbuZ/7Amc1+zw9dDqkrxrz1jIbetVnC0=",
        "originContent": "| Resign    | **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234 |",
        "translatedContent": "| İstifa Et    | **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234 |"
      },
      {
        "row": 17,
        "rowsha": "irK+A6tnAJjWFlB89T0T34b1gHxIdoAOvLDmroqZYf0=",
        "originContent": "| Read a person | **GET** /readPerson?personid=1234 | **GET** /persons/1234 |",
        "translatedContent": "| Bir kişiyi oku | **GET** /readPerson?personid=1234 | **GET** /persons/1234 |"
      },
      {
        "row": 18,
        "rowsha": "lsOoD75NbDh5lhsMv1XM7OzeHTngLtRqfgOxyV8BDcw=",
        "originContent": "| Read a person’s items list | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items |",
        "translatedContent": "| Bir kişinin ürünler listesini oku | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items |"
      },
      {
        "row": 19,
        "rowsha": "oVrkLg1AxLWrSgrZ+Xu3avaUJshe0pNNwElTp/BqXZU=",
        "originContent": "| Add an item to a person’s items | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |",
        "translatedContent": "| Bir kişinin ürünler listesine ürün ekle | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |"
      },
      {
        "row": 20,
        "rowsha": "mTM/BJg2KQ6X0l1TfBZu0NjiJmhy0GkgEo8nPAZg7tY=",
        "originContent": "| Update an item    | **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |",
        "translatedContent": "| Bir ürünü güncelle    | **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |"
      },
      {
        "row": 21,
        "rowsha": "8CDFHcYbXd6uQ+dN1EwifUWiRFqv3nBgaJLRs5F6FIk=",
        "originContent": "| Delete an item | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456 |",
        "translatedContent": "| Bir ürünü sil | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456 |"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 24,
        "rowsha": "HAfihhgtDMMMGWw+/e4N3A82wb4Tz4ehjk9R6YOcIJk=",
        "originContent": "  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>Source: Do you really know why you prefer REST over RPC</a></i>",
        "translatedContent": "  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>Kaynak: Gerçekten REST’i RPC’ye neden tercih ettiğinizi biliyor musunuz?</a></i>"
      },
      {
        "row": 25,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "UYm72VZMn8PSCIJv6b06yz6lccf375WzqWoutcGC8Tg=",
        "originContent": "#### Source(s) and further reading: REST and RPC",
        "translatedContent": "#### Kaynak(lar) ve daha fazla okuma: REST ve RPC"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "LaVRXjDwZbNeTQ6bds7sFcoujFMpEXjmyfzp0unK9Gg=",
        "originContent": "* [Do you really know why you prefer REST over RPC](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)",
        "translatedContent": "* [Gerçekten REST’i RPC’ye neden tercih ettiğinizi biliyor musunuz?](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)"
      },
      {
        "row": 30,
        "rowsha": "2fbKAzDn0s5l7x0ZQcwVrS4+bEaCGdIsROQGaNjKqew=",
        "originContent": "* [When are RPC-ish approaches more appropriate than REST?](http://programmers.stackexchange.com/a/181186)",
        "translatedContent": "* [Ne zaman RPC-benzeri yaklaşımlar REST’ten daha uygundur?](http://programmers.stackexchange.com/a/181186)"
      },
      {
        "row": 31,
        "rowsha": "/2VtiY8MXWTwYfpsAxQ8z/xBOVb/T5Wh9Dl5mjmxYdc=",
        "originContent": "* [REST vs JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)",
        "translatedContent": "* [REST vs JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)"
      },
      {
        "row": 32,
        "rowsha": "KXjDNJk05eVv350Af7VwLStB6Rw2wR9Bchd83uVsv7k=",
        "originContent": "* [Debunking the myths of RPC and REST](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)",
        "translatedContent": "* [RPC ve REST’in efsanelerini çürütmek](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)"
      },
      {
        "row": 33,
        "rowsha": "uHIrlx66vBpTfYfo+BXmx2U/hmgTHthtH89FwhvhpZc=",
        "originContent": "* [What are the drawbacks of using REST](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)",
        "translatedContent": "* [RESTful API’lerin dezavantajları nelerdir?](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)"
      },
      {
        "row": 34,
        "rowsha": "E8CKVfW4DaDVQHo21CF4Vsv7vGZieZXs0+mOiMdXKn0=",
        "originContent": "* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)",
        "translatedContent": "* [Sistem tasarım mülakatını çözün](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)"
      },
      {
        "row": 35,
        "rowsha": "usr4rgpOtD5TCD8s+mY0eDBkk4N9S28XguVO90wRErQ=",
        "originContent": "* [Thrift](https://code.facebook.com/posts/1468950976659943/)",
        "translatedContent": "* [Thrift](https://code.facebook.com/posts/1468950976659943/)"
      },
      {
        "row": 36,
        "rowsha": "3ARDAzXf0nXWHahJKYXwei1iCld+/7n5Mf2I2oLb24E=",
        "originContent": "* [Why REST for internal use and not RPC](http://arstechnica.com/civis/viewtopic.php?t=1190508)",
        "translatedContent": "* [Neden iç kullanımda REST, RPC değil?](http://arstechnica.com/civis/viewtopic.php?t=1190508)"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "UlQ9upvw00moCjWDduBZqkTiv0PRDG/mYeqnsF8DP6Q=",
        "originContent": "## Security",
        "translatedContent": "## Güvenlik"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "hGuoiVXuNZwbF+Vqkb+CSlXMTMBmOBtR428NDwkzhFM=",
        "originContent": "This section could use some updates.  Consider [contributing](#contributing)!",
        "translatedContent": "Bu bölümün güncellenmeye ihtiyacı var. [Katkıda bulunmayı](#contributing) düşünün!"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 51,
    "Content": "\nSecurity is a broad topic.  Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won't need to know more than the basics:\n\n* Encrypt in transit and at rest.\n* Sanitize all user inputs or any input parameters exposed to user to prevent [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) and [SQL injection](https://en.wikipedia.org/wiki/SQL_injection).\n* Use parameterized queries to prevent SQL injection.\n* Use the principle of [least privilege](https://en.wikipedia.org/wiki/Principle_of_least_privilege).\n\n### Source(s) and further reading\n\n* [API security checklist](https://github.com/shieldfy/API-Security-Checklist)\n* [Security guide for developers](https://github.com/FallibleInc/security-guide-for-developers)\n* [OWASP top ten](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)\n\n## Appendix\n\nYou'll sometimes be asked to do 'back-of-the-envelope' estimates.  For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take.  The **Powers of two table** and **Latency numbers every programmer should know** are handy references.\n\n### Powers of two table\n",
    "ContentSha": "lttd9OX13KgyFAZReRo/UiwT2DoGI4tHaEGVoAH3mCA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nGüvenlik geniş bir konudur.  Önemli bir deneyiminiz, güvenlik geçmişiniz yoksa veya güvenlik bilgisi gerektiren bir pozisyona başvurmuyorsanız, muhtemelen temellerden fazlasını bilmenize gerek yoktur:\n\n* Aktarım sırasında ve depolamada şifreleme yapın.\n* [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) ve [SQL enjeksiyonu](https://en.wikipedia.org/wiki/SQL_injection) önlemek için tüm kullanıcı girdilerini veya kullanıcıya açık herhangi bir girdi parametresini temizleyin.\n* SQL enjeksiyonunu önlemek için parametreli sorgular kullanın.\n* [En az ayrıcalık](https://en.wikipedia.org/wiki/Principle_of_least_privilege) ilkesini kullanın.\n\n### Kaynak(lar) ve ileri okuma\n\n* [API güvenlik kontrol listesi](https://github.com/shieldfy/API-Security-Checklist)\n* [Geliştiriciler için güvenlik rehberi](https://github.com/FallibleInc/security-guide-for-developers)\n* [OWASP ilk on](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)\n\n## Ek\n\nBazen sizden 'kabataslak' tahminler yapmanız istenecektir.  Örneğin, diskteki 100 görüntü küçük resminin oluşturulmasının ne kadar süreceğini veya bir veri yapısının ne kadar bellek kullanacağını belirlemeniz gerekebilir.  **İki tablosunun kuvvetleri** ve **Her programcının bilmesi gereken gecikme sayıları** faydalı başvuru kaynaklarıdır.\n\n### İki tablosunun kuvvetleri\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "K4oRrOeVrITeujdLCk+lOdenPOKzRGSb36UkPMJXz00=",
        "originContent": "Security is a broad topic.  Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won't need to know more than the basics:",
        "translatedContent": "Güvenlik geniş bir konudur.  Önemli bir deneyiminiz, güvenlik geçmişiniz yoksa veya güvenlik bilgisi gerektiren bir pozisyona başvurmuyorsanız, muhtemelen temellerden fazlasını bilmenize gerek yoktur:"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "1N05AULQ81FjW8EiPp0WF2uZ/vKEiXZ++GqlzpL6W04=",
        "originContent": "* Encrypt in transit and at rest.",
        "translatedContent": "* Aktarım sırasında ve depolamada şifreleme yapın."
      },
      {
        "row": 5,
        "rowsha": "xe+liYlsQD7KvZro/wts7hOfjIXPy9orxzW2Dxul1pY=",
        "originContent": "* Sanitize all user inputs or any input parameters exposed to user to prevent [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) and [SQL injection](https://en.wikipedia.org/wiki/SQL_injection).",
        "translatedContent": "* [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) ve [SQL enjeksiyonu](https://en.wikipedia.org/wiki/SQL_injection) önlemek için tüm kullanıcı girdilerini veya kullanıcıya açık herhangi bir girdi parametresini temizleyin."
      },
      {
        "row": 6,
        "rowsha": "l3A9LaiorRvDj5CkYgdXlCtb0dL45JML+LeM3RZSGCc=",
        "originContent": "* Use parameterized queries to prevent SQL injection.",
        "translatedContent": "* SQL enjeksiyonunu önlemek için parametreli sorgular kullanın."
      },
      {
        "row": 7,
        "rowsha": "gkN2qsP8lSs9FaRO+uU/kQh1RIHcF0dZJvVXrlVoHNM=",
        "originContent": "* Use the principle of [least privilege](https://en.wikipedia.org/wiki/Principle_of_least_privilege).",
        "translatedContent": "* [En az ayrıcalık](https://en.wikipedia.org/wiki/Principle_of_least_privilege) ilkesini kullanın."
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Kaynak(lar) ve ileri okuma"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "5jmefxmZg38vjMppEPVXB691ySxO2cF+eL8Ht20TTEs=",
        "originContent": "* [API security checklist](https://github.com/shieldfy/API-Security-Checklist)",
        "translatedContent": "* [API güvenlik kontrol listesi](https://github.com/shieldfy/API-Security-Checklist)"
      },
      {
        "row": 12,
        "rowsha": "matLhM/u8xEF82O46b5QA7t//LnoEAuDYz9omxCwOL4=",
        "originContent": "* [Security guide for developers](https://github.com/FallibleInc/security-guide-for-developers)",
        "translatedContent": "* [Geliştiriciler için güvenlik rehberi](https://github.com/FallibleInc/security-guide-for-developers)"
      },
      {
        "row": 13,
        "rowsha": "9ewFrDAiXWR4C6F4egOg6TpLTcWO3Q2vtCR464sfzBE=",
        "originContent": "* [OWASP top ten](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)",
        "translatedContent": "* [OWASP ilk on](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "NY23TEBBgPFlNE5ad5aEgkJDKmBbORVrA3kzjJCOwek=",
        "originContent": "## Appendix",
        "translatedContent": "## Ek"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "Qk3gX0l5EZMii1z+NlOJ80sUfehGEfQhoNWjfzOAntc=",
        "originContent": "You'll sometimes be asked to do 'back-of-the-envelope' estimates.  For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take.  The **Powers of two table** and **Latency numbers every programmer should know** are handy references.",
        "translatedContent": "Bazen sizden 'kabataslak' tahminler yapmanız istenecektir.  Örneğin, diskteki 100 görüntü küçük resminin oluşturulmasının ne kadar süreceğini veya bir veri yapısının ne kadar bellek kullanacağını belirlemeniz gerekebilir.  **İki tablosunun kuvvetleri** ve **Her programcının bilmesi gereken gecikme sayıları** faydalı başvuru kaynaklarıdır."
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "z/bxSXl1N06ql8Te1RnT8CK3EK7JyOw96sLejExgST0=",
        "originContent": "### Powers of two table",
        "translatedContent": "### İki tablosunun kuvvetleri"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 52,
    "Content": "```\nPower           Exact Value         Approx Value        Bytes\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n```",
    "ContentSha": "tY3s4yO7vTGsjW+GZNlakuBkrCR3FXNKe9N9AYlzPrU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nPower           Exact Value         Approx Value        Bytes\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "GopqSzaj/Su5MUJ6sORIeByErVFyL9MXiY+m0fWQ9aA=",
        "originContent": "Power           Exact Value         Approx Value        Bytes",
        "translatedContent": "Power           Exact Value         Approx Value        Bytes"
      },
      {
        "row": 3,
        "rowsha": "6u/Bs8w92r704jYI5bgL1lqyASIdtxwcZedxnegDHOk=",
        "originContent": "---------------------------------------------------------------",
        "translatedContent": "---------------------------------------------------------------"
      },
      {
        "row": 4,
        "rowsha": "Tipf9Cya0JVwFN0uuubYFjnt6J0egikpUvPfz1W9oBs=",
        "originContent": "7                             128",
        "translatedContent": "7                             128"
      },
      {
        "row": 5,
        "rowsha": "nhK7nUwQ9svong5x5wMmIKF1zstzTZMT7SmEXchi2cc=",
        "originContent": "8                             256",
        "translatedContent": "8                             256"
      },
      {
        "row": 6,
        "rowsha": "WWsaSUQwyxHtCJHzqdcxA4Iq0p15/45Fh7hIobekNqs=",
        "originContent": "10                           1024   1 thousand           1 KB",
        "translatedContent": "10                           1024   1 thousand           1 KB"
      },
      {
        "row": 7,
        "rowsha": "1oROUdvQdHSMnILjM7dRW8oXMYEk8gf+5nSwxZIWyIA=",
        "originContent": "16                         65,536                       64 KB",
        "translatedContent": "16                         65,536                       64 KB"
      },
      {
        "row": 8,
        "rowsha": "I/d5gNv+MTAgv97UDa2/MdyYAyisHzARXHqODLiomWA=",
        "originContent": "20                      1,048,576   1 million            1 MB",
        "translatedContent": "20                      1,048,576   1 million            1 MB"
      },
      {
        "row": 9,
        "rowsha": "OrMri/0cTHQ/b6bR5KrSxAO8R9Kh0zySbZfTfkkMkV4=",
        "originContent": "30                  1,073,741,824   1 billion            1 GB",
        "translatedContent": "30                  1,073,741,824   1 billion            1 GB"
      },
      {
        "row": 10,
        "rowsha": "NcALEgdudV60zfu4Ga6b4hHmRaE0CNg4WP/j5fXR3as=",
        "originContent": "32                  4,294,967,296                        4 GB",
        "translatedContent": "32                  4,294,967,296                        4 GB"
      },
      {
        "row": 11,
        "rowsha": "3fpv7VuqjwI+R6BQfXfU9jqXDMDjIQIMVCxHmSR7HYM=",
        "originContent": "40              1,099,511,627,776   1 trillion           1 TB",
        "translatedContent": "40              1,099,511,627,776   1 trillion           1 TB"
      },
      {
        "row": 12,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 53,
    "Content": "\n#### Source(s) and further reading\n\n* [Powers of two](https://en.wikipedia.org/wiki/Power_of_two)\n\n### Latency numbers every programmer should know\n",
    "ContentSha": "ppBLjl4GPpTTuZuZkRCmUB3lr0F/LbyDBiLBdXbuDDw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n#### Kaynak(lar) ve daha fazla okuma\n\n* [İki'nin kuvvetleri](https://tr.wikipedia.org/wiki/İki_kat%C4%B1)\n\n### Her programcının bilmesi gereken gecikme rakamları\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "yAcCmKF4VrpEVdPP7QGvwQrQvx5nYqkLfEVqvhED8vU=",
        "originContent": "#### Source(s) and further reading",
        "translatedContent": "#### Kaynak(lar) ve daha fazla okuma"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "wE0BFHK40veitXHaEcnSQ1veDoeThQ5aNZHM1KSXSd4=",
        "originContent": "* [Powers of two](https://en.wikipedia.org/wiki/Power_of_two)",
        "translatedContent": "* [İki'nin kuvvetleri](https://tr.wikipedia.org/wiki/İki_kat%C4%B1)"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "ewtmvY/jbiB2g7/rm/0P600zgMFUaOWl6P9UwIHrsVo=",
        "originContent": "### Latency numbers every programmer should know",
        "translatedContent": "### Her programcının bilmesi gereken gecikme rakamları"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 54,
    "Content": "```\nLatency Comparison Numbers\n--------------------------\nL1 cache reference                           0.5 ns\nBranch mispredict                            5   ns\nL2 cache reference                           7   ns                      14x L1 cache\nMutex lock/unlock                           25   ns\nMain memory reference                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory\nHDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n```",
    "ContentSha": "Cxjssj59JwVoJhpDLS31tIAyvakR0WQUIHZP4hMVLy8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nLatency Comparison Numbers\n--------------------------\nL1 cache reference                           0.5 ns\nBranch mispredict                            5   ns\nL2 cache reference                           7   ns                      14x L1 cache\nMutex lock/unlock                           25   ns\nMain memory reference                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory\nHDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "WJYZRpCB6wnwYROffRDVKf93tmQ4UBjDYHAvsZQIioQ=",
        "originContent": "Latency Comparison Numbers",
        "translatedContent": "Latency Comparison Numbers"
      },
      {
        "row": 3,
        "rowsha": "8t5X+uJxo5I5KHujp8euYVJYx46DJ4nFQeFNE8mdPn0=",
        "originContent": "--------------------------",
        "translatedContent": "--------------------------"
      },
      {
        "row": 4,
        "rowsha": "7XfckQls1iOKWuWDXWBh6cpyPQSNHBtfyfTfn2fr1vk=",
        "originContent": "L1 cache reference                           0.5 ns",
        "translatedContent": "L1 cache reference                           0.5 ns"
      },
      {
        "row": 5,
        "rowsha": "vUJ7vZsr/S4EdGeDR5raQ//fo6pYQGIRjgctBXyXgFs=",
        "originContent": "Branch mispredict                            5   ns",
        "translatedContent": "Branch mispredict                            5   ns"
      },
      {
        "row": 6,
        "rowsha": "orTU96fCnkTK5376SbB3HOk+15cpHbawxugjNOBpPLw=",
        "originContent": "L2 cache reference                           7   ns                      14x L1 cache",
        "translatedContent": "L2 cache reference                           7   ns                      14x L1 cache"
      },
      {
        "row": 7,
        "rowsha": "QoUE8gGYfwQpfH5OuRes1kgdNGj/aFG70jTIPTxWGPQ=",
        "originContent": "Mutex lock/unlock                           25   ns",
        "translatedContent": "Mutex lock/unlock                           25   ns"
      },
      {
        "row": 8,
        "rowsha": "QpqdJt3cEU01+klSGYFJgy5QUOJaN0IVGJ1tcKGmF7A=",
        "originContent": "Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache",
        "translatedContent": "Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache"
      },
      {
        "row": 9,
        "rowsha": "d4bOF13WOnZy9PYYBouzJ3EwqhG9ldAxkZhWMyDYBSk=",
        "originContent": "Compress 1K bytes with Zippy            10,000   ns       10 us",
        "translatedContent": "Compress 1K bytes with Zippy            10,000   ns       10 us"
      },
      {
        "row": 10,
        "rowsha": "l/i0TC4oQftOkDSmWDqDx+ntKBQFPmi2D66Lxc7qdX8=",
        "originContent": "Send 1 KB bytes over 1 Gbps network     10,000   ns       10 us",
        "translatedContent": "Send 1 KB bytes over 1 Gbps network     10,000   ns       10 us"
      },
      {
        "row": 11,
        "rowsha": "WePwXIdujqBjPNEZbwwO869ur7KZZv9PzVdlxKSsy3s=",
        "originContent": "Read 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD",
        "translatedContent": "Read 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD"
      },
      {
        "row": 12,
        "rowsha": "YyivgxFLG63fPQecacT4DOV5m7tHCxGxsB9VF7tx6Vs=",
        "originContent": "Read 1 MB sequentially from memory     250,000   ns      250 us",
        "translatedContent": "Read 1 MB sequentially from memory     250,000   ns      250 us"
      },
      {
        "row": 13,
        "rowsha": "BAsTJzwY4nXJMUTgUeqkO18Eg/Mm9GXpWZwOXVdmnr8=",
        "originContent": "Round trip within same datacenter      500,000   ns      500 us",
        "translatedContent": "Round trip within same datacenter      500,000   ns      500 us"
      },
      {
        "row": 14,
        "rowsha": "pXdZXL92bt2iQqo2YKkbB7UA6ooJC7KsxTRc+Q0qM7s=",
        "originContent": "Read 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory",
        "translatedContent": "Read 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory"
      },
      {
        "row": 15,
        "rowsha": "xgdUzRDydXfqQlqH+c2uR0dMhHe39UABDDdOAya3MeA=",
        "originContent": "HDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip",
        "translatedContent": "HDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip"
      },
      {
        "row": 16,
        "rowsha": "kSLIUD4vIrTPsLLrWl47S3hv0HSAlpjVFzcf9sBGYlg=",
        "originContent": "Read 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD",
        "translatedContent": "Read 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD"
      },
      {
        "row": 17,
        "rowsha": "vHFNdKf7v28hkTxbgL3Mf7dNJx2utjXc6wJ7Rvo6XTA=",
        "originContent": "Read 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD",
        "translatedContent": "Read 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD"
      },
      {
        "row": 18,
        "rowsha": "o0nE15MY0adAe9UgvDoZTs8ZsuvGYdAsSwgKlhl45Zg=",
        "originContent": "Send packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms",
        "translatedContent": "Send packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "inUlsUkvuEgz9cSmmzD0v7sTT5tma2GiwYctY9I0wIU=",
        "originContent": "Notes",
        "translatedContent": "Notes"
      },
      {
        "row": 21,
        "rowsha": "c74IfpMID55DaJK30YLfZjlLx52/XfEZ2TV99hseu/s=",
        "originContent": "-----",
        "translatedContent": "-----"
      },
      {
        "row": 22,
        "rowsha": "6bP4W1/q9qy3xELpuTLXs2kzSkmu37dOz6Y5nxIPhMw=",
        "originContent": "1 ns = 10^-9 seconds",
        "translatedContent": "1 ns = 10^-9 seconds"
      },
      {
        "row": 23,
        "rowsha": "W+dpQ0MorvVAqvoFpYY10s5X0Pj7XMLa39EJSQRcDgo=",
        "originContent": "1 us = 10^-6 seconds = 1,000 ns",
        "translatedContent": "1 us = 10^-6 seconds = 1,000 ns"
      },
      {
        "row": 24,
        "rowsha": "w4NW+K7skNvLWuOf9wFWt4GNszqCcYuXaXCQbXfLoQI=",
        "originContent": "1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns",
        "translatedContent": "1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns"
      },
      {
        "row": 25,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 55,
    "Content": "\nHandy metrics based on numbers above:\n\n* Read sequentially from HDD at 30 MB/s\n* Read sequentially from 1 Gbps Ethernet at 100 MB/s\n* Read sequentially from SSD at 1 GB/s\n* Read sequentially from main memory at 4 GB/s\n* 6-7 world-wide round trips per second\n* 2,000 round trips per second within a data center\n\n#### Latency numbers visualized\n\n![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)\n\n#### Source(s) and further reading\n\n* [Latency numbers every programmer should know - 1](https://gist.github.com/jboner/2841832)\n* [Latency numbers every programmer should know - 2](https://gist.github.com/hellerbarde/2843375)\n* [Designs, lessons, and advice from building large distributed systems](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)\n* [Software Engineering Advice from Building Large-Scale Distributed Systems](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)\n\n### Additional system design interview questions\n\n> Common system design interview questions, with links to resources on how to solve each.\n\n| Question | Reference(s) |\n|---|---|\n| Design a file sync service like Dropbox | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| Design a search engine like Google | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |\n| Design a scalable web crawler like Google | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |\n| Design Google docs | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |\n| Design a key-value store like Redis | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| Design a cache system like Memcached | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| Design a recommendation system like Amazon's | [hulu.com](https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |\n| Design a tinyurl system like Bitly | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |\n| Design a chat app like WhatsApp | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)\n| Design a picture sharing system like Instagram | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |\n| Design the Facebook news feed function | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |\n| Design the Facebook timeline function | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |\n| Design the Facebook chat function | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |",
    "ContentSha": "ufMEAJjeJvG/71zGm1ZrFnYShGruhPDGcpEQX8jnGIY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Yukarıdaki rakamlara dayalı kullanışlı metrikler:\n\n* HDD'den ardışık okuma 30 MB/sn\n* 1 Gbps Ethernet üzerinden ardışık okuma 100 MB/sn\n* SSD'den ardışık okuma 1 GB/sn\n* Ana bellekten ardışık okuma 4 GB/sn\n* Dünya çapında saniyede 6-7 gidiş-dönüş\n* Bir veri merkezinde saniyede 2.000 gidiş-dönüş\n\n#### Gecikme değerlerinin görselleştirilmesi\n\n![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)\n\n#### Kaynak(lar) ve daha fazla okuma\n\n* [Her programcının bilmesi gereken gecikme sayıları - 1](https://gist.github.com/jboner/2841832)\n* [Her programcının bilmesi gereken gecikme sayıları - 2](https://gist.github.com/hellerbarde/2843375)\n* [Büyük dağıtık sistemler inşa ederken edinilen tasarımlar, dersler ve tavsiyeler](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)\n* [Büyük ölçekli dağıtık sistemler inşa ederken yazılım mühendisliği tavsiyeleri](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)\n\n### Ek sistem tasarımı mülakat soruları\n\n> Yaygın sistem tasarımı mülakat soruları ve her birini çözmek için kaynak bağlantıları.\n\n| Soru | Kaynak(lar) |\n|---|---|\n| Dropbox gibi bir dosya senkronizasyon servisi tasarla | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| Google gibi bir arama motoru tasarla | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |\n| Google gibi ölçeklenebilir bir web tarayıcı tasarla | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |\n| Google docs tasarla | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |\n| Redis gibi bir anahtar-değer deposu tasarla | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| Memcached gibi bir önbellek sistemi tasarla | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| Amazon'unki gibi bir öneri sistemi tasarla | [hulu.com](https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |\n| Bitly gibi bir tinyurl sistemi tasarla | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |\n| WhatsApp gibi bir sohbet uygulaması tasarla | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)\n| Instagram gibi bir resim paylaşım sistemi tasarla | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |\n| Facebook haber kaynağı fonksiyonunu tasarla | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |\n| Facebook zaman tüneli fonksiyonunu tasarla | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |\n| Facebook sohbet fonksiyonunu tasarla | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Yukarıdaki rakamlara dayalı kullanışlı metrikler:"
      },
      {
        "row": 2,
        "rowsha": "eD9fecv8C1FtN9m3TkLw+2+24UTbtO6VqyvPg8JSNKw=",
        "originContent": "Handy metrics based on numbers above:",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* HDD'den ardışık okuma 30 MB/sn"
      },
      {
        "row": 4,
        "rowsha": "ht3OgnqSm5EBo9ukcpejXJ3LRFbCMx3PRpml/KISYoo=",
        "originContent": "* Read sequentially from HDD at 30 MB/s",
        "translatedContent": "* 1 Gbps Ethernet üzerinden ardışık okuma 100 MB/sn"
      },
      {
        "row": 5,
        "rowsha": "u+lRSWNmLgQwNfqkilfz38jhLXNbB90sXSCly1F8ntc=",
        "originContent": "* Read sequentially from 1 Gbps Ethernet at 100 MB/s",
        "translatedContent": "* SSD'den ardışık okuma 1 GB/sn"
      },
      {
        "row": 6,
        "rowsha": "3kvwfvFyTWqDY8gLaD5uSrk/shDtsPk19jC0aMzSIVs=",
        "originContent": "* Read sequentially from SSD at 1 GB/s",
        "translatedContent": "* Ana bellekten ardışık okuma 4 GB/sn"
      },
      {
        "row": 7,
        "rowsha": "dqri5D/YDMthAEWEvYG+8h8gF6wyRdyakLuq/q0xnW0=",
        "originContent": "* Read sequentially from main memory at 4 GB/s",
        "translatedContent": "* Dünya çapında saniyede 6-7 gidiş-dönüş"
      },
      {
        "row": 8,
        "rowsha": "xwZWw3s8vqU6oh1Th/KktklV4BA2B1x1gtyoGQqf0R0=",
        "originContent": "* 6-7 world-wide round trips per second",
        "translatedContent": "* Bir veri merkezinde saniyede 2.000 gidiş-dönüş"
      },
      {
        "row": 9,
        "rowsha": "CvuiLVzVw7LMUyJWWfONGFRImXtkB8UmBy6jycVPxWg=",
        "originContent": "* 2,000 round trips per second within a data center",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Gecikme değerlerinin görselleştirilmesi"
      },
      {
        "row": 11,
        "rowsha": "ydjGPOgoiaNweMh64ZpijkNTmo1yw6vzz7mLiJGg6No=",
        "originContent": "#### Latency numbers visualized",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)"
      },
      {
        "row": 13,
        "rowsha": "o3/x85NDgw/RDVn0BOuVDqvLWU6gY7OKusFtztcurMM=",
        "originContent": "![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Kaynak(lar) ve daha fazla okuma"
      },
      {
        "row": 15,
        "rowsha": "yAcCmKF4VrpEVdPP7QGvwQrQvx5nYqkLfEVqvhED8vU=",
        "originContent": "#### Source(s) and further reading",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [Her programcının bilmesi gereken gecikme sayıları - 1](https://gist.github.com/jboner/2841832)"
      },
      {
        "row": 17,
        "rowsha": "vS16QYVy1MaWoRmtt+NizFbMPWPubKu+I3zkhXRhJIA=",
        "originContent": "* [Latency numbers every programmer should know - 1](https://gist.github.com/jboner/2841832)",
        "translatedContent": "* [Her programcının bilmesi gereken gecikme sayıları - 2](https://gist.github.com/hellerbarde/2843375)"
      },
      {
        "row": 18,
        "rowsha": "HVyW0cNcDHpFiJcBUaWWR3pOMsl/iT05gwK9ZLoHrro=",
        "originContent": "* [Latency numbers every programmer should know - 2](https://gist.github.com/hellerbarde/2843375)",
        "translatedContent": "* [Büyük dağıtık sistemler inşa ederken edinilen tasarımlar, dersler ve tavsiyeler](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)"
      },
      {
        "row": 19,
        "rowsha": "6fjPiL66amn4K0pQS3WFhMy5fRrvxY3JAWYq2zAn8wo=",
        "originContent": "* [Designs, lessons, and advice from building large distributed systems](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)",
        "translatedContent": "* [Büyük ölçekli dağıtık sistemler inşa ederken yazılım mühendisliği tavsiyeleri](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)"
      },
      {
        "row": 20,
        "rowsha": "bBBcrkTrIq6iY9+ywuF1kRRPX1UlT4+kuOUTteAB5sY=",
        "originContent": "* [Software Engineering Advice from Building Large-Scale Distributed Systems](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Ek sistem tasarımı mülakat soruları"
      },
      {
        "row": 22,
        "rowsha": "hZhFNPm0q28sVvllxWZbdfO9NFGvFonhZVgwXs8qqOw=",
        "originContent": "### Additional system design interview questions",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "> Yaygın sistem tasarımı mülakat soruları ve her birini çözmek için kaynak bağlantıları."
      },
      {
        "row": 24,
        "rowsha": "mI7ePEuh8j6xgVO3ahSy4CFa7+K2O+Uhvh746ae+aXo=",
        "originContent": "> Common system design interview questions, with links to resources on how to solve each.",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "| Soru | Kaynak(lar) |"
      },
      {
        "row": 26,
        "rowsha": "sPgBeBncfP1LAM8d0Oknfw0PynNZzOgZYGioZCVO5Jo=",
        "originContent": "| Question | Reference(s) |",
        "translatedContent": "|---|---|"
      },
      {
        "row": 27,
        "rowsha": "QZm6RU1tOug2VxIMK7a9Z07vwN19PNTMhEFx3GclE1s=",
        "originContent": "|---|---|",
        "translatedContent": "| Dropbox gibi bir dosya senkronizasyon servisi tasarla | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |"
      },
      {
        "row": 28,
        "rowsha": "nmBVhJPMTavYfzX7ghJ83vzClzHyKXLymzhZD5tlNA0=",
        "originContent": "| Design a file sync service like Dropbox | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |",
        "translatedContent": "| Google gibi bir arama motoru tasarla | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |"
      },
      {
        "row": 29,
        "rowsha": "34WvqZqAay+MKs5sSBbG7ouZI8wa1p2djhAzo33rWp8=",
        "originContent": "| Design a search engine like Google | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |",
        "translatedContent": "| Google gibi ölçeklenebilir bir web tarayıcı tasarla | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |"
      },
      {
        "row": 30,
        "rowsha": "/6fqzF+UjOZUTEdkAgsWgOea4fAKWQiYR1IPxxH1e3E=",
        "originContent": "| Design a scalable web crawler like Google | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |",
        "translatedContent": "| Google docs tasarla | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |"
      },
      {
        "row": 31,
        "rowsha": "Xs3hegP9jwc2bNH3wW2/aYK3SDbyTxg9SqpPi8nmExs=",
        "originContent": "| Design Google docs | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |",
        "translatedContent": "| Redis gibi bir anahtar-değer deposu tasarla | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |"
      },
      {
        "row": 32,
        "rowsha": "olMvUlgDzkjGPqlZaBSTF0xvDvFeeI4/bQPr9qBAOKQ=",
        "originContent": "| Design a key-value store like Redis | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |",
        "translatedContent": "| Memcached gibi bir önbellek sistemi tasarla | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |"
      },
      {
        "row": 33,
        "rowsha": "/Qpls+PP87/+NBAf3ckJhQSAtkbk9G1/zt1jM4Q9rkA=",
        "originContent": "| Design a cache system like Memcached | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |",
        "translatedContent": "| Amazon'unki gibi bir öneri sistemi tasarla | [hulu.com](https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |"
      },
      {
        "row": 34,
        "rowsha": "EZVuNe9bE9f1W2jnIz+XPDMTcM86b+GVv4C23g7As/A=",
        "originContent": "| Design a recommendation system like Amazon's | [hulu.com](https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |",
        "translatedContent": "| Bitly gibi bir tinyurl sistemi tasarla | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |"
      },
      {
        "row": 35,
        "rowsha": "Dtq3j3ZuP6YMSQFRtZVaYgEzVGG2V+eID3ndmj1Ans0=",
        "originContent": "| Design a tinyurl system like Bitly | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |",
        "translatedContent": "| WhatsApp gibi bir sohbet uygulaması tasarla | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)"
      },
      {
        "row": 36,
        "rowsha": "Ywzj+QdlwFGrDWOB50eIBrwnX/hpwLYPbE3wL42WStA=",
        "originContent": "| Design a chat app like WhatsApp | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)",
        "translatedContent": "| Instagram gibi bir resim paylaşım sistemi tasarla | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |"
      },
      {
        "row": 37,
        "rowsha": "b122D6DRoLAT3rPpXKu3RHXoE2SyEHvf7UWH+ULMnaI=",
        "originContent": "| Design a picture sharing system like Instagram | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |",
        "translatedContent": "| Facebook haber kaynağı fonksiyonunu tasarla | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |"
      },
      {
        "row": 38,
        "rowsha": "n5wkhGcBv+VjeGTpQNIzKWXD4Ya0RgR9ohx8BUwIDLw=",
        "originContent": "| Design the Facebook news feed function | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |",
        "translatedContent": "| Facebook zaman tüneli fonksiyonunu tasarla | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |"
      },
      {
        "row": 39,
        "rowsha": "dTNxBUvOh9/YOSQcS3ROtWSrbE4FHO4BBY314KA+qvM=",
        "originContent": "| Design the Facebook timeline function | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |",
        "translatedContent": "| Facebook sohbet fonksiyonunu tasarla | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |"
      },
      {
        "row": 40,
        "rowsha": "Q1CaaqMvLArgnZ5ckZbSzNntPkWLZW/e6MusBSkqMJg=",
        "originContent": "| Design the Facebook chat function | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 56,
    "Content": "| Design a graph search function like Facebook's | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |\n| Design a content delivery network like CloudFlare | [figshare.com](https://figshare.com/articles/Globally_distributed_content_delivery/6605972) |\n| Design a trending topic system like Twitter's | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |\n| Design a random ID generation system | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |\n| Return the top k requests during a time interval | [cs.ucsb.edu](https://www.cs.ucsb.edu/sites/default/files/documents/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |\n| Design a system that serves data from multiple data centers | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |\n| Design an online multiplayer card game | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |\n| Design a garbage collection system | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |\n| Design an API rate limiter | [https://stripe.com/blog/](https://stripe.com/blog/rate-limiters) |\n| Design a Stock Exchange (like NASDAQ or Binance) | [Jane Street](https://youtu.be/b1e4t2k2KJY)<br/>[Golang Implementation](https://around25.com/blog/building-a-trading-engine-for-a-crypto-exchange/)<br/>[Go Implementation](http://bhomnick.net/building-a-simple-limit-order-in-go/) |\n| Add a system design question | [Contribute](#contributing) |\n\n### Real world architectures\n\n> Articles on how real world systems are designed.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/TcUo2fw.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>Source: Twitter timelines at scale</a></i>\n</p>\n\n**Don't focus on nitty gritty details for the following articles, instead:**\n\n* Identify shared principles, common technologies, and patterns within these articles\n* Study what problems are solved by each component, where it works, where it doesn't\n* Review the lessons learned\n\n|Type | System | Reference(s) |\n|---|---|---|\n| Data processing | **MapReduce** - Distributed data processing from Google | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |\n| Data processing | **Spark** - Distributed data processing from Databricks | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |\n| Data processing | **Storm** - Distributed data processing from Twitter | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |\n| | | |\n| Data store | **Bigtable** - Distributed column-oriented database from Google | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |\n| Data store | **HBase** - Open source implementation of Bigtable | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |\n| Data store | **Cassandra** - Distributed column-oriented database from Facebook | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)\n| Data store | **DynamoDB** - Document-oriented database from Amazon | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |\n| Data store | **MongoDB** - Document-oriented database | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |\n| Data store | **Spanner** - Globally-distributed database from Google | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |",
    "ContentSha": "5hNQndfbSnlP1RLa/GyRt8pzzHWJN34J9g6lOThi724=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "| Facebook gibi bir grafik arama fonksiyonu tasarlayın | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |\n| CloudFlare gibi bir içerik dağıtım ağı tasarlayın | [figshare.com](https://figshare.com/articles/Globally_distributed_content_delivery/6605972) |\n| Twitter gibi bir gündem belirleme sistemi tasarlayın | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |\n| Rastgele ID üretim sistemi tasarlayın | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |\n| Bir zaman aralığında en çok yapılan k istekleri döndürün | [cs.ucsb.edu](https://www.cs.ucsb.edu/sites/default/files/documents/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |\n| Birden fazla veri merkezinden veri sunan bir sistem tasarlayın | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |\n| Çevrimiçi çok oyunculu bir kart oyunu tasarlayın | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |\n| Çöp toplama sistemi tasarlayın | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |\n| API hız sınırlayıcı tasarlayın | [https://stripe.com/blog/](https://stripe.com/blog/rate-limiters) |\n| Bir Borsa (NASDAQ veya Binance gibi) tasarlayın | [Jane Street](https://youtu.be/b1e4t2k2KJY)<br/>[Golang Implementation](https://around25.com/blog/building-a-trading-engine-for-a-crypto-exchange/)<br/>[Go Implementation](http://bhomnick.net/building-a-simple-limit-order-in-go/) |\n| Bir sistem tasarım sorusu ekleyin | [Katkıda Bulunun](#contributing) |\n\n### Gerçek dünya mimarileri\n\n> Gerçek dünya sistemlerinin nasıl tasarlandığına dair makaleler.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/TcUo2fw.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>Kaynak: Twitter zaman akışları ölçeklenebilirliği</a></i>\n</p>\n\n**Aşağıdaki makalelerde teknik detaylara çok takılmayın, bunun yerine:**\n\n* Ortak prensipleri, kullanılan teknolojileri ve desenleri belirleyin\n* Her bileşenin çözdüğü problemleri, nerede işe yaradığını, nerede yaramadığını inceleyin\n* Edinilen dersleri gözden geçirin\n\n|Tip | Sistem | Referans(lar) |\n|---|---|---|\n| Veri işleme | **MapReduce** - Google’dan dağıtık veri işleme | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |\n| Veri işleme | **Spark** - Databricks’ten dağıtık veri işleme | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |\n| Veri işleme | **Storm** - Twitter’dan dağıtık veri işleme | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |\n| | | |\n| Veri deposu | **Bigtable** - Google’dan dağıtık sütun tabanlı veritabanı | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |\n| Veri deposu | **HBase** - Bigtable’ın açık kaynaklı uygulaması | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |\n| Veri deposu | **Cassandra** - Facebook’tan dağıtık sütun tabanlı veritabanı | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)\n| Veri deposu | **DynamoDB** - Amazon’dan belge tabanlı veritabanı | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |\n| Veri deposu | **MongoDB** - Belge tabanlı veritabanı | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |\n| Veri deposu | **Spanner** - Google’dan küresel dağıtık veritabanı | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "IT1XtJeBZae70/QHqrdlV4vAWb+QqI2jlmftFbWAElY=",
        "originContent": "| Design a graph search function like Facebook's | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |",
        "translatedContent": "| Facebook gibi bir grafik arama fonksiyonu tasarlayın | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |"
      },
      {
        "row": 2,
        "rowsha": "3jHFgkxGAhEskpPiYJjXKH5nb3N0Y9abHCZtryOfuyM=",
        "originContent": "| Design a content delivery network like CloudFlare | [figshare.com](https://figshare.com/articles/Globally_distributed_content_delivery/6605972) |",
        "translatedContent": "| CloudFlare gibi bir içerik dağıtım ağı tasarlayın | [figshare.com](https://figshare.com/articles/Globally_distributed_content_delivery/6605972) |"
      },
      {
        "row": 3,
        "rowsha": "dvC4Bb04KKuQAX/SE4QlhXtZn23ZcsJG+gGiIDQtGj8=",
        "originContent": "| Design a trending topic system like Twitter's | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |",
        "translatedContent": "| Twitter gibi bir gündem belirleme sistemi tasarlayın | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |"
      },
      {
        "row": 4,
        "rowsha": "0eNZVciq8x2bp425t+4qWN637WQuolv7FHB5tMar8HA=",
        "originContent": "| Design a random ID generation system | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |",
        "translatedContent": "| Rastgele ID üretim sistemi tasarlayın | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |"
      },
      {
        "row": 5,
        "rowsha": "45+wk60ZP83bcmrcYyFcJSHT/lM18ANjO3WW5Go7/1k=",
        "originContent": "| Return the top k requests during a time interval | [cs.ucsb.edu](https://www.cs.ucsb.edu/sites/default/files/documents/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |",
        "translatedContent": "| Bir zaman aralığında en çok yapılan k istekleri döndürün | [cs.ucsb.edu](https://www.cs.ucsb.edu/sites/default/files/documents/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |"
      },
      {
        "row": 6,
        "rowsha": "KdkrqOeWJl9D6mzA7W/bK825APi/8xOv2edoQ4vcKNc=",
        "originContent": "| Design a system that serves data from multiple data centers | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |",
        "translatedContent": "| Birden fazla veri merkezinden veri sunan bir sistem tasarlayın | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |"
      },
      {
        "row": 7,
        "rowsha": "huC3QZhNOtFN3NwLfG4sZc9UCaubTh+yN9/uLxLixqo=",
        "originContent": "| Design an online multiplayer card game | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |",
        "translatedContent": "| Çevrimiçi çok oyunculu bir kart oyunu tasarlayın | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |"
      },
      {
        "row": 8,
        "rowsha": "i7BkWG/MMoMjuckb2GZ2oLIWSBm/rU/7yVG2pVenUEU=",
        "originContent": "| Design a garbage collection system | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |",
        "translatedContent": "| Çöp toplama sistemi tasarlayın | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |"
      },
      {
        "row": 9,
        "rowsha": "tyd71PZC9weXz3rApqnGoMUNNtWfeRrR/10kUsJKDJU=",
        "originContent": "| Design an API rate limiter | [https://stripe.com/blog/](https://stripe.com/blog/rate-limiters) |",
        "translatedContent": "| API hız sınırlayıcı tasarlayın | [https://stripe.com/blog/](https://stripe.com/blog/rate-limiters) |"
      },
      {
        "row": 10,
        "rowsha": "CtSVzl/12DKjtMvkoqLL7rU3eGC6mgAPqC17fs5xZoE=",
        "originContent": "| Design a Stock Exchange (like NASDAQ or Binance) | [Jane Street](https://youtu.be/b1e4t2k2KJY)<br/>[Golang Implementation](https://around25.com/blog/building-a-trading-engine-for-a-crypto-exchange/)<br/>[Go Implementation](http://bhomnick.net/building-a-simple-limit-order-in-go/) |",
        "translatedContent": "| Bir Borsa (NASDAQ veya Binance gibi) tasarlayın | [Jane Street](https://youtu.be/b1e4t2k2KJY)<br/>[Golang Implementation](https://around25.com/blog/building-a-trading-engine-for-a-crypto-exchange/)<br/>[Go Implementation](http://bhomnick.net/building-a-simple-limit-order-in-go/) |"
      },
      {
        "row": 11,
        "rowsha": "rxZ/1ZcyqiWhJo83Zu2JZADx1pvrsk1TTCEtxi+B8tg=",
        "originContent": "| Add a system design question | [Contribute](#contributing) |",
        "translatedContent": "| Bir sistem tasarım sorusu ekleyin | [Katkıda Bulunun](#contributing) |"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "Za1VkYtWyAeLgmA6imOd8gk60ytSu4VwYmu6crWZDag=",
        "originContent": "### Real world architectures",
        "translatedContent": "### Gerçek dünya mimarileri"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "TIT1XP70oOG3zxrI4jrv5VqD4QZnKaBWTJqDwgcaFlQ=",
        "originContent": "> Articles on how real world systems are designed.",
        "translatedContent": "> Gerçek dünya sistemlerinin nasıl tasarlandığına dair makaleler."
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 18,
        "rowsha": "s3tM/DD7OHnzlaZpiaduNV2zSpU1YQqMo3uR3fMD2pM=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/TcUo2fw.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/TcUo2fw.png\">"
      },
      {
        "row": 19,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 20,
        "rowsha": "Pw6wsGWicX588U1PD/OX9d8HlZ28pWRe0zZe1vMAy98=",
        "originContent": "  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>Source: Twitter timelines at scale</a></i>",
        "translatedContent": "  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>Kaynak: Twitter zaman akışları ölçeklenebilirliği</a></i>"
      },
      {
        "row": 21,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "J0GGf6cvtCVUtLSo2amy0x1e3CCZKIWA/PskS93mKTQ=",
        "originContent": "**Don't focus on nitty gritty details for the following articles, instead:**",
        "translatedContent": "**Aşağıdaki makalelerde teknik detaylara çok takılmayın, bunun yerine:**"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "xEQQ8Hj8/t2Cr5EKqxyF/jD2Y3/dEwbmweWFWfgsdt0=",
        "originContent": "* Identify shared principles, common technologies, and patterns within these articles",
        "translatedContent": "* Ortak prensipleri, kullanılan teknolojileri ve desenleri belirleyin"
      },
      {
        "row": 26,
        "rowsha": "X+LAbnAEjaTr3sVvbCiZ9y5rwJPeV7LDivxxNg0OI6c=",
        "originContent": "* Study what problems are solved by each component, where it works, where it doesn't",
        "translatedContent": "* Her bileşenin çözdüğü problemleri, nerede işe yaradığını, nerede yaramadığını inceleyin"
      },
      {
        "row": 27,
        "rowsha": "MPX4qM5aUfJxw9M21X65qnIN8Lxi/laKp8DFjV0Kfgw=",
        "originContent": "* Review the lessons learned",
        "translatedContent": "* Edinilen dersleri gözden geçirin"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "B3Sd8qryMj1Dp2eMPiLBsVrszXEejVpT96dKoUXu3/M=",
        "originContent": "|Type | System | Reference(s) |",
        "translatedContent": "|Tip | Sistem | Referans(lar) |"
      },
      {
        "row": 30,
        "rowsha": "I8ygK3TzhkY++iR5bHqQEbDSyT8MOLTRXV0nYgW1m0M=",
        "originContent": "|---|---|---|",
        "translatedContent": "|---|---|---|"
      },
      {
        "row": 31,
        "rowsha": "ndwepg+ynIt0WiFogpwQBqBSDNu2IzZau/9mdj8kNXE=",
        "originContent": "| Data processing | **MapReduce** - Distributed data processing from Google | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |",
        "translatedContent": "| Veri işleme | **MapReduce** - Google’dan dağıtık veri işleme | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |"
      },
      {
        "row": 32,
        "rowsha": "K8K88AWwcvHKoRLmmMGtcXQ/G5NGMHTHTQx+cFO31T8=",
        "originContent": "| Data processing | **Spark** - Distributed data processing from Databricks | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |",
        "translatedContent": "| Veri işleme | **Spark** - Databricks’ten dağıtık veri işleme | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |"
      },
      {
        "row": 33,
        "rowsha": "UI8l10rrPsV+pJxbvfkUJVKHiPFlWxuMZejNpfaihOM=",
        "originContent": "| Data processing | **Storm** - Distributed data processing from Twitter | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |",
        "translatedContent": "| Veri işleme | **Storm** - Twitter’dan dağıtık veri işleme | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |"
      },
      {
        "row": 34,
        "rowsha": "p/ErXrnMGSZC77N6DnBjWAETa1ojTSEipbqwpQgRtH0=",
        "originContent": "| | | |",
        "translatedContent": "| | | |"
      },
      {
        "row": 35,
        "rowsha": "s10nia0DhWv01UO1oYnmM+58lFjbSlq1FrlHudaj+6E=",
        "originContent": "| Data store | **Bigtable** - Distributed column-oriented database from Google | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |",
        "translatedContent": "| Veri deposu | **Bigtable** - Google’dan dağıtık sütun tabanlı veritabanı | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |"
      },
      {
        "row": 36,
        "rowsha": "FbCZHlV+12FNAq6QAZT5mb4ruPuWfer6ozzWM9l8+jI=",
        "originContent": "| Data store | **HBase** - Open source implementation of Bigtable | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |",
        "translatedContent": "| Veri deposu | **HBase** - Bigtable’ın açık kaynaklı uygulaması | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |"
      },
      {
        "row": 37,
        "rowsha": "EctBko8smWSUES8Qe7DIGyELviTCwHL/I3NeofnVg5w=",
        "originContent": "| Data store | **Cassandra** - Distributed column-oriented database from Facebook | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)",
        "translatedContent": "| Veri deposu | **Cassandra** - Facebook’tan dağıtık sütun tabanlı veritabanı | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)"
      },
      {
        "row": 38,
        "rowsha": "116lS0W90997w1whxX/8PlSu48bUzif3Y05j44r8mqc=",
        "originContent": "| Data store | **DynamoDB** - Document-oriented database from Amazon | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |",
        "translatedContent": "| Veri deposu | **DynamoDB** - Amazon’dan belge tabanlı veritabanı | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |"
      },
      {
        "row": 39,
        "rowsha": "qaUQcdPbdrR3ZWAswil875kJnzNZWk69hKNnF9OpT6A=",
        "originContent": "| Data store | **MongoDB** - Document-oriented database | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |",
        "translatedContent": "| Veri deposu | **MongoDB** - Belge tabanlı veritabanı | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |"
      },
      {
        "row": 40,
        "rowsha": "7mPnQzxpbjV0NUEW8XDi2rGyeDsGsoxhVdvTPh8tS20=",
        "originContent": "| Data store | **Spanner** - Globally-distributed database from Google | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |",
        "translatedContent": "| Veri deposu | **Spanner** - Google’dan küresel dağıtık veritabanı | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 57,
    "Content": "| Data store | **Memcached** - Distributed memory caching system | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| Data store | **Redis** - Distributed memory caching system with persistence and value types | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| | | |\n| File system | **Google File System (GFS)** - Distributed file system | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |\n| File system | **Hadoop File System (HDFS)** - Open source implementation of GFS | [apache.org](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html) |\n| | | |\n| Misc | **Chubby** - Lock service for loosely-coupled distributed systems from Google | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |\n| Misc | **Dapper** - Distributed systems tracing infrastructure | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)\n| Misc | **Kafka** - Pub/sub message queue from LinkedIn | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |\n| Misc | **Zookeeper** - Centralized infrastructure and services enabling synchronization | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |\n| | Add an architecture | [Contribute](#contributing) |\n\n### Company architectures\n\n| Company | Reference(s) |\n|---|---|\n| Amazon | [Amazon architecture](http://highscalability.com/amazon-architecture) |\n| Cinchcast | [Producing 1,500 hours of audio every day](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |\n| DataSift | [Realtime datamining At 120,000 tweets per second](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |\n| Dropbox | [How we've scaled Dropbox](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| ESPN | [Operating At 100,000 duh nuh nuhs per second](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |\n| Google | [Google architecture](http://highscalability.com/google-architecture) |\n| Instagram | [14 million users, terabytes of photos](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[What powers Instagram](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |\n| Justin.tv | [Justin.Tv's live video broadcasting architecture](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |\n| Facebook | [Scaling memcached at Facebook](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Facebook’s distributed data store for the social graph](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Facebook’s photo storage](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf)<br/>[How Facebook Live Streams To 800,000 Simultaneous Viewers](http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html) |\n| Flickr | [Flickr architecture](http://highscalability.com/flickr-architecture) |\n| Mailbox | [From 0 to one million users in 6 weeks](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |\n| Netflix | [A 360 Degree View Of The Entire Netflix Stack](http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html)<br/>[Netflix: What Happens When You Press Play?](http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html) |\n| Pinterest | [From 0 To 10s of billions of page views a month](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[18 million visitors, 10x growth, 12 employees](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |\n| Playfish | [50 million monthly users and growing](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |\n| PlentyOfFish | [PlentyOfFish architecture](http://highscalability.com/plentyoffish-architecture) |\n| Salesforce | [How they handle 1.3 billion transactions a day](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |\n| Stack Overflow | [Stack Overflow architecture](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |\n| TripAdvisor | [40M visitors, 200M dynamic page views, 30TB data](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |\n| Tumblr | [15 billion page views a month](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |\n| Twitter | [Making Twitter 10000 percent faster](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[Storing 250 million tweets a day using MySQL](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150M active users, 300K QPS, a 22 MB/S firehose](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[Timelines at scale](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Big and small data at Twitter](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Operations at Twitter: scaling beyond 100 million users](https://www.youtube.com/watch?v=z8LU0Cj6BOU)<br/>[How Twitter Handles 3,000 Images Per Second](http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html) |\n| Uber | [How Uber scales their real-time market platform](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html)<br/>[Lessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories](http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html) |\n| WhatsApp | [The WhatsApp architecture Facebook bought for $19 billion](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |\n| YouTube | [YouTube scalability](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[YouTube architecture](http://highscalability.com/youtube-architecture) |\n",
    "ContentSha": "HJ43cGa2ts5Z1+EHjvCRBV9mq+PjUY5QXfwqLIs80oA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "| Veri deposu | **Memcached** - Dağıtık bellek önbellekleme sistemi | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| Veri deposu | **Redis** - Kalıcılık ve değer tipleri ile dağıtık bellek önbellekleme sistemi | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| | | |\n| Dosya sistemi | **Google File System (GFS)** - Dağıtık dosya sistemi | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |\n| Dosya sistemi | **Hadoop File System (HDFS)** - GFS'nin açık kaynak uygulaması | [apache.org](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html) |\n| | | |\n| Diğer | **Chubby** - Google'dan gevşek bağlı dağıtık sistemler için kilit hizmeti | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |\n| Diğer | **Dapper** - Dağıtık sistemler için izleme altyapısı | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)\n| Diğer | **Kafka** - LinkedIn'den pub/sub mesaj kuyruğu | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |\n| Diğer | **Zookeeper** - Senkronizasyon sağlayan merkezi altyapı ve hizmetler | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |\n| | Bir mimari ekle | [Katkıda Bulunun](#contributing) |\n\n### Şirket mimarileri\n\n| Şirket | Referans(lar) |\n|---|---|\n| Amazon | [Amazon mimarisi](http://highscalability.com/amazon-architecture) |\n| Cinchcast | [Her gün 1.500 saat ses üretimi](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |\n| DataSift | [Saniyede 120.000 tweet ile gerçek zamanlı veri madenciliği](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |\n| Dropbox | [Dropbox'u nasıl ölçeklendirdik](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| ESPN | [Saniyede 100.000 duh nuh nuh işlemi](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |\n| Google | [Google mimarisi](http://highscalability.com/google-architecture) |\n| Instagram | [14 milyon kullanıcı, terabaytlarca fotoğraf](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[Instagram’ı ne güçlendiriyor](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |\n| Justin.tv | [Justin.Tv'nin canlı video yayın mimarisi](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |\n| Facebook | [Facebook'ta memcached ölçeklendirme](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Facebook’un sosyal grafik için dağıtık veri deposu](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Facebook’un fotoğraf depolama sistemi](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf)<br/>[Facebook Live’ın 800.000 eşzamanlı izleyiciye nasıl yayın yaptığı](http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html) |\n| Flickr | [Flickr mimarisi](http://highscalability.com/flickr-architecture) |\n| Mailbox | [6 haftada sıfırdan 1 milyon kullanıcıya ölçeklendirme](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |\n| Netflix | [Tüm Netflix yığınına 360 derece bakış](http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html)<br/>[Netflix: Play tuşuna bastığınızda ne olur?](http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html) |\n| Pinterest | [Aylık 0'dan on milyarlarca sayfa görüntülemeye](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[18 milyon ziyaretçi, 10x büyüme, 12 çalışan](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |\n| Playfish | [50 milyon aylık kullanıcı ve büyüyor](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |\n| PlentyOfFish | [PlentyOfFish mimarisi](http://highscalability.com/plentyoffish-architecture) |\n| Salesforce | [Günde 1,3 milyar işlemi nasıl yönetiyorlar?](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |\n| Stack Overflow | [Stack Overflow mimarisi](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |\n| TripAdvisor | [40M ziyaretçi, 200M dinamik sayfa görüntüleme, 30TB veri](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |\n| Tumblr | [Aylık 15 milyar sayfa görüntüleme](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |\n| Twitter | [Twitter’ı %10000 daha hızlı hale getirmek](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[MySQL kullanarak günde 250 milyon tweet depolama](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150M aktif kullanıcı, 300K QPS, 22 MB/S ateş hortumu](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[Zaman çizelgeleri ölçekli olarak](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Twitter'da büyük ve küçük veri](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Twitter’da operasyonlar: 100 milyon kullanıcıyı aşan ölçekleme](https://www.youtube.com/watch?v=z8LU0Cj6BOU)<br/>[Twitter saniyede 3.000 görseli nasıl işler?](http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html) |\n| Uber | [Uber gerçek zamanlı pazar platformunu nasıl ölçeklendiriyor](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html)<br/>[Uber’i 2000 mühendise, 1000 servise ve 8000 Git deposuna ölçeklendirirken öğrenilen dersler](http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html) |\n| WhatsApp | [Facebook’un 19 milyar dolara satın aldığı WhatsApp mimarisi](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |\n| YouTube | [YouTube ölçeklenebilirliği](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[YouTube mimarisi](http://highscalability.com/youtube-architecture) |\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "5XHl3BTnVxhA6zftceuIdcJIvqsoDjeQSPbwjAv1OmI=",
        "originContent": "| Data store | **Memcached** - Distributed memory caching system | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |",
        "translatedContent": "| Veri deposu | **Memcached** - Dağıtık bellek önbellekleme sistemi | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |"
      },
      {
        "row": 2,
        "rowsha": "so7UA0edsS9fachjwa/oV6wjIyUW7sypm0TmT+Fiylw=",
        "originContent": "| Data store | **Redis** - Distributed memory caching system with persistence and value types | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |",
        "translatedContent": "| Veri deposu | **Redis** - Kalıcılık ve değer tipleri ile dağıtık bellek önbellekleme sistemi | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |"
      },
      {
        "row": 3,
        "rowsha": "p/ErXrnMGSZC77N6DnBjWAETa1ojTSEipbqwpQgRtH0=",
        "originContent": "| | | |",
        "translatedContent": "| | | |"
      },
      {
        "row": 4,
        "rowsha": "3oWxuRMPbHKQGsTECtKNryhofOr6iI3UBQLfrVK++00=",
        "originContent": "| File system | **Google File System (GFS)** - Distributed file system | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |",
        "translatedContent": "| Dosya sistemi | **Google File System (GFS)** - Dağıtık dosya sistemi | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |"
      },
      {
        "row": 5,
        "rowsha": "A7fq9KC4kInUlQQ21YIv0jLmPYr+roXFYuEcv2sW5gU=",
        "originContent": "| File system | **Hadoop File System (HDFS)** - Open source implementation of GFS | [apache.org](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html) |",
        "translatedContent": "| Dosya sistemi | **Hadoop File System (HDFS)** - GFS'nin açık kaynak uygulaması | [apache.org](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html) |"
      },
      {
        "row": 6,
        "rowsha": "p/ErXrnMGSZC77N6DnBjWAETa1ojTSEipbqwpQgRtH0=",
        "originContent": "| | | |",
        "translatedContent": "| | | |"
      },
      {
        "row": 7,
        "rowsha": "u2aPRWE0Ib9VuI4sc6M4gFcrEU/bN/j4mGDu6EaSMj8=",
        "originContent": "| Misc | **Chubby** - Lock service for loosely-coupled distributed systems from Google | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |",
        "translatedContent": "| Diğer | **Chubby** - Google'dan gevşek bağlı dağıtık sistemler için kilit hizmeti | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |"
      },
      {
        "row": 8,
        "rowsha": "cbcggBPx8qCHeUtqfFOtRxhN+pPFNIGRxdjz02iMZiY=",
        "originContent": "| Misc | **Dapper** - Distributed systems tracing infrastructure | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)",
        "translatedContent": "| Diğer | **Dapper** - Dağıtık sistemler için izleme altyapısı | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)"
      },
      {
        "row": 9,
        "rowsha": "cCqZB2Hts8Iu7CNT2pKVQI8qB7IC0INbCbTQTyPHiDE=",
        "originContent": "| Misc | **Kafka** - Pub/sub message queue from LinkedIn | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |",
        "translatedContent": "| Diğer | **Kafka** - LinkedIn'den pub/sub mesaj kuyruğu | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |"
      },
      {
        "row": 10,
        "rowsha": "KwS7raoMtjTNKhzqbPaXTnitrTKOi2D6FnNeLsY2X0c=",
        "originContent": "| Misc | **Zookeeper** - Centralized infrastructure and services enabling synchronization | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |",
        "translatedContent": "| Diğer | **Zookeeper** - Senkronizasyon sağlayan merkezi altyapı ve hizmetler | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |"
      },
      {
        "row": 11,
        "rowsha": "dwWcrWXxdp2Vzr7uSHJkm2NAali9XO1T2Mu+aN78kh8=",
        "originContent": "| | Add an architecture | [Contribute](#contributing) |",
        "translatedContent": "| | Bir mimari ekle | [Katkıda Bulunun](#contributing) |"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "afVdDjUEYMKR1hdy83bZUv3+vQrv4YVEx4BhpWdzehY=",
        "originContent": "### Company architectures",
        "translatedContent": "### Şirket mimarileri"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "DC60NfhUoQRLMlpTp0kWWr69V8dGiHY0luvJerq6qAM=",
        "originContent": "| Company | Reference(s) |",
        "translatedContent": "| Şirket | Referans(lar) |"
      },
      {
        "row": 16,
        "rowsha": "QZm6RU1tOug2VxIMK7a9Z07vwN19PNTMhEFx3GclE1s=",
        "originContent": "|---|---|",
        "translatedContent": "|---|---|"
      },
      {
        "row": 17,
        "rowsha": "hhzenP6hBNCHjVIR/V1z9i5u+6Gz215qDhZ4m/QO2ME=",
        "originContent": "| Amazon | [Amazon architecture](http://highscalability.com/amazon-architecture) |",
        "translatedContent": "| Amazon | [Amazon mimarisi](http://highscalability.com/amazon-architecture) |"
      },
      {
        "row": 18,
        "rowsha": "YTrqqn6zgSTZqU8rMEi6n4+jvU+QOfVmPKXNW2F2+fw=",
        "originContent": "| Cinchcast | [Producing 1,500 hours of audio every day](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |",
        "translatedContent": "| Cinchcast | [Her gün 1.500 saat ses üretimi](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |"
      },
      {
        "row": 19,
        "rowsha": "pmVmY9IM5FLH1l7XSg05fh38ZP+My/OoiJGEAsbJ2qc=",
        "originContent": "| DataSift | [Realtime datamining At 120,000 tweets per second](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |",
        "translatedContent": "| DataSift | [Saniyede 120.000 tweet ile gerçek zamanlı veri madenciliği](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |"
      },
      {
        "row": 20,
        "rowsha": "G+2ZKjeV2JEB4aNQe152thV5ADAdLRU7Lfe54ElB5HE=",
        "originContent": "| Dropbox | [How we've scaled Dropbox](https://www.youtube.com/watch?v=PE4gwstWhmc) |",
        "translatedContent": "| Dropbox | [Dropbox'u nasıl ölçeklendirdik](https://www.youtube.com/watch?v=PE4gwstWhmc) |"
      },
      {
        "row": 21,
        "rowsha": "uAIZHPjhJZK6LQQ5UI6+M59o6/S1aAKX1WU0AeWah3w=",
        "originContent": "| ESPN | [Operating At 100,000 duh nuh nuhs per second](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |",
        "translatedContent": "| ESPN | [Saniyede 100.000 duh nuh nuh işlemi](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |"
      },
      {
        "row": 22,
        "rowsha": "SP3mC9R+ji63RBAx2cQqOnjM6sboxLcFrIGSWBYS/6o=",
        "originContent": "| Google | [Google architecture](http://highscalability.com/google-architecture) |",
        "translatedContent": "| Google | [Google mimarisi](http://highscalability.com/google-architecture) |"
      },
      {
        "row": 23,
        "rowsha": "dGy1y5O5qrjQs1u9xA9LeqqHTgVTFbF6lbuIR3EpKzc=",
        "originContent": "| Instagram | [14 million users, terabytes of photos](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[What powers Instagram](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |",
        "translatedContent": "| Instagram | [14 milyon kullanıcı, terabaytlarca fotoğraf](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[Instagram’ı ne güçlendiriyor](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |"
      },
      {
        "row": 24,
        "rowsha": "E7hk2X4F3qX6sCaU9DXv2uit+2B/83/QzWD+BuYUmZ8=",
        "originContent": "| Justin.tv | [Justin.Tv's live video broadcasting architecture](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |",
        "translatedContent": "| Justin.tv | [Justin.Tv'nin canlı video yayın mimarisi](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |"
      },
      {
        "row": 25,
        "rowsha": "fhu0F5wWKSUFgZ6Z+3S2C2xjHat9JsGYmvSOHbbETS0=",
        "originContent": "| Facebook | [Scaling memcached at Facebook](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Facebook’s distributed data store for the social graph](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Facebook’s photo storage](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf)<br/>[How Facebook Live Streams To 800,000 Simultaneous Viewers](http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html) |",
        "translatedContent": "| Facebook | [Facebook'ta memcached ölçeklendirme](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Facebook’un sosyal grafik için dağıtık veri deposu](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Facebook’un fotoğraf depolama sistemi](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf)<br/>[Facebook Live’ın 800.000 eşzamanlı izleyiciye nasıl yayın yaptığı](http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html) |"
      },
      {
        "row": 26,
        "rowsha": "0bQ7V/Spk+IOIWY21Az3B0IPLSb2XvVRJ4BKX6MPJ1M=",
        "originContent": "| Flickr | [Flickr architecture](http://highscalability.com/flickr-architecture) |",
        "translatedContent": "| Flickr | [Flickr mimarisi](http://highscalability.com/flickr-architecture) |"
      },
      {
        "row": 27,
        "rowsha": "75YrA6Pw4bf7N79fSBayp/x1JDqzYAAOBjmbZMs2awI=",
        "originContent": "| Mailbox | [From 0 to one million users in 6 weeks](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |",
        "translatedContent": "| Mailbox | [6 haftada sıfırdan 1 milyon kullanıcıya ölçeklendirme](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |"
      },
      {
        "row": 28,
        "rowsha": "IO+MNpPb3VV5H/2Q2HAJjxMqBLRUY9C2Z47mogK3c6E=",
        "originContent": "| Netflix | [A 360 Degree View Of The Entire Netflix Stack](http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html)<br/>[Netflix: What Happens When You Press Play?](http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html) |",
        "translatedContent": "| Netflix | [Tüm Netflix yığınına 360 derece bakış](http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html)<br/>[Netflix: Play tuşuna bastığınızda ne olur?](http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html) |"
      },
      {
        "row": 29,
        "rowsha": "Y38/iHOhRdAeAOLjuN7Iqu+R0SyAotO75lftLR6Xky4=",
        "originContent": "| Pinterest | [From 0 To 10s of billions of page views a month](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[18 million visitors, 10x growth, 12 employees](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |",
        "translatedContent": "| Pinterest | [Aylık 0'dan on milyarlarca sayfa görüntülemeye](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[18 milyon ziyaretçi, 10x büyüme, 12 çalışan](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |"
      },
      {
        "row": 30,
        "rowsha": "sdXZchVk+fXHbieeR7YkzNrXOSXQI9pH85SKqNXYb1s=",
        "originContent": "| Playfish | [50 million monthly users and growing](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |",
        "translatedContent": "| Playfish | [50 milyon aylık kullanıcı ve büyüyor](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |"
      },
      {
        "row": 31,
        "rowsha": "W3/WKAzVRbnjmYzbLKvAMSFwghIAZeqAf18j9sURMjM=",
        "originContent": "| PlentyOfFish | [PlentyOfFish architecture](http://highscalability.com/plentyoffish-architecture) |",
        "translatedContent": "| PlentyOfFish | [PlentyOfFish mimarisi](http://highscalability.com/plentyoffish-architecture) |"
      },
      {
        "row": 32,
        "rowsha": "dEm1aPwBE5fHjXbaHueprpg61DN02tc+kP5vCM0UXE8=",
        "originContent": "| Salesforce | [How they handle 1.3 billion transactions a day](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |",
        "translatedContent": "| Salesforce | [Günde 1,3 milyar işlemi nasıl yönetiyorlar?](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |"
      },
      {
        "row": 33,
        "rowsha": "AlMYLMWkR2SckN1bxYHEnGinX0CgwBIBQeGdhnDUXtA=",
        "originContent": "| Stack Overflow | [Stack Overflow architecture](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |",
        "translatedContent": "| Stack Overflow | [Stack Overflow mimarisi](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |"
      },
      {
        "row": 34,
        "rowsha": "sTX4sagugaGlsi7a5Mth9u0Gi0x8NTpvSZC+eo5Rt/Q=",
        "originContent": "| TripAdvisor | [40M visitors, 200M dynamic page views, 30TB data](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |",
        "translatedContent": "| TripAdvisor | [40M ziyaretçi, 200M dinamik sayfa görüntüleme, 30TB veri](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |"
      },
      {
        "row": 35,
        "rowsha": "MazGU7vk/a3HuntQRFqVjcLtkBM4eUs3vR+7WUYZ8gw=",
        "originContent": "| Tumblr | [15 billion page views a month](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |",
        "translatedContent": "| Tumblr | [Aylık 15 milyar sayfa görüntüleme](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |"
      },
      {
        "row": 36,
        "rowsha": "/Ey9Rzzp0JSlMSBmO/ivB8C/+X3YgRSwEDxrVVOZdU4=",
        "originContent": "| Twitter | [Making Twitter 10000 percent faster](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[Storing 250 million tweets a day using MySQL](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150M active users, 300K QPS, a 22 MB/S firehose](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[Timelines at scale](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Big and small data at Twitter](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Operations at Twitter: scaling beyond 100 million users](https://www.youtube.com/watch?v=z8LU0Cj6BOU)<br/>[How Twitter Handles 3,000 Images Per Second](http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html) |",
        "translatedContent": "| Twitter | [Twitter’ı %10000 daha hızlı hale getirmek](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[MySQL kullanarak günde 250 milyon tweet depolama](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150M aktif kullanıcı, 300K QPS, 22 MB/S ateş hortumu](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[Zaman çizelgeleri ölçekli olarak](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Twitter'da büyük ve küçük veri](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Twitter’da operasyonlar: 100 milyon kullanıcıyı aşan ölçekleme](https://www.youtube.com/watch?v=z8LU0Cj6BOU)<br/>[Twitter saniyede 3.000 görseli nasıl işler?](http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html) |"
      },
      {
        "row": 37,
        "rowsha": "MGU6qjE6IcUO6hi+Sa3VC6E1KwfhprKkrfRAShnjNqY=",
        "originContent": "| Uber | [How Uber scales their real-time market platform](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html)<br/>[Lessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories](http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html) |",
        "translatedContent": "| Uber | [Uber gerçek zamanlı pazar platformunu nasıl ölçeklendiriyor](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html)<br/>[Uber’i 2000 mühendise, 1000 servise ve 8000 Git deposuna ölçeklendirirken öğrenilen dersler](http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html) |"
      },
      {
        "row": 38,
        "rowsha": "tPlCk12VLKqhn+78/8N6L1w7nZ3UgWF8n79JDJydVAU=",
        "originContent": "| WhatsApp | [The WhatsApp architecture Facebook bought for $19 billion](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |",
        "translatedContent": "| WhatsApp | [Facebook’un 19 milyar dolara satın aldığı WhatsApp mimarisi](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |"
      },
      {
        "row": 39,
        "rowsha": "02riQbnlEGZL2gp1kibVbVB3WgIIi+n4vcjqik9Ot0E=",
        "originContent": "| YouTube | [YouTube scalability](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[YouTube architecture](http://highscalability.com/youtube-architecture) |",
        "translatedContent": "| YouTube | [YouTube ölçeklenebilirliği](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[YouTube mimarisi](http://highscalability.com/youtube-architecture) |"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 58,
    "Content": "### Company engineering blogs\n\n> Architectures for companies you are interviewing with.\n>\n> Questions you encounter might be from the same domain.\n\n* [Airbnb Engineering](http://nerds.airbnb.com/)\n* [Atlassian Developers](https://developer.atlassian.com/blog/)\n* [AWS Blog](https://aws.amazon.com/blogs/aws/)\n* [Bitly Engineering Blog](http://word.bitly.com/)\n* [Box Blogs](https://blog.box.com/blog/category/engineering)\n* [Cloudera Developer Blog](http://blog.cloudera.com/)\n* [Dropbox Tech Blog](https://tech.dropbox.com/)\n* [Engineering at Quora](https://www.quora.com/q/quoraengineering)\n* [Ebay Tech Blog](http://www.ebaytechblog.com/)\n* [Evernote Tech Blog](https://blog.evernote.com/tech/)\n* [Etsy Code as Craft](http://codeascraft.com/)\n* [Facebook Engineering](https://www.facebook.com/Engineering)\n* [Flickr Code](http://code.flickr.net/)\n* [Foursquare Engineering Blog](http://engineering.foursquare.com/)\n* [GitHub Engineering Blog](https://github.blog/category/engineering)\n* [Google Research Blog](http://googleresearch.blogspot.com/)\n* [Groupon Engineering Blog](https://engineering.groupon.com/)\n* [Heroku Engineering Blog](https://engineering.heroku.com/)\n* [Hubspot Engineering Blog](http://product.hubspot.com/blog/topic/engineering)\n* [High Scalability](http://highscalability.com/)\n* [Instagram Engineering](http://instagram-engineering.tumblr.com/)\n* [Intel Software Blog](https://software.intel.com/en-us/blogs/)\n* [Jane Street Tech Blog](https://blogs.janestreet.com/category/ocaml/)\n* [LinkedIn Engineering](http://engineering.linkedin.com/blog)\n* [Microsoft Engineering](https://engineering.microsoft.com/)\n* [Microsoft Python Engineering](https://blogs.msdn.microsoft.com/pythonengineering/)\n* [Netflix Tech Blog](http://techblog.netflix.com/)\n* [Paypal Developer Blog](https://medium.com/paypal-engineering)\n* [Pinterest Engineering Blog](https://medium.com/@Pinterest_Engineering)\n* [Reddit Blog](http://www.redditblog.com/)\n* [Salesforce Engineering Blog](https://developer.salesforce.com/blogs/engineering/)\n* [Slack Engineering Blog](https://slack.engineering/)\n* [Spotify Labs](https://labs.spotify.com/)\n* [Stripe Engineering Blog](https://stripe.com/blog/engineering)",
    "ContentSha": "K2HaPjFBuIAolMM1jFJHWyWd16kC4a7w+PNnWCMvsfw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Şirket mühendislik blogları\n\n> Görüştüğünüz şirketlerin mimarileri.\n>\n> Karşılaştığınız sorular aynı alandan olabilir.\n\n* [Airbnb Mühendislik](http://nerds.airbnb.com/)\n* [Atlassian Geliştiriciler](https://developer.atlassian.com/blog/)\n* [AWS Blog](https://aws.amazon.com/blogs/aws/)\n* [Bitly Mühendislik Blogu](http://word.bitly.com/)\n* [Box Blogları](https://blog.box.com/blog/category/engineering)\n* [Cloudera Geliştirici Blogu](http://blog.cloudera.com/)\n* [Dropbox Teknoloji Blogu](https://tech.dropbox.com/)\n* [Quora’da Mühendislik](https://www.quora.com/q/quoraengineering)\n* [Ebay Teknoloji Blogu](http://www.ebaytechblog.com/)\n* [Evernote Teknoloji Blogu](https://blog.evernote.com/tech/)\n* [Etsy Code as Craft](http://codeascraft.com/)\n* [Facebook Mühendislik](https://www.facebook.com/Engineering)\n* [Flickr Code](http://code.flickr.net/)\n* [Foursquare Mühendislik Blogu](http://engineering.foursquare.com/)\n* [GitHub Mühendislik Blogu](https://github.blog/category/engineering)\n* [Google Araştırma Blogu](http://googleresearch.blogspot.com/)\n* [Groupon Mühendislik Blogu](https://engineering.groupon.com/)\n* [Heroku Mühendislik Blogu](https://engineering.heroku.com/)\n* [Hubspot Mühendislik Blogu](http://product.hubspot.com/blog/topic/engineering)\n* [High Scalability](http://highscalability.com/)\n* [Instagram Mühendislik](http://instagram-engineering.tumblr.com/)\n* [Intel Yazılım Blogu](https://software.intel.com/en-us/blogs/)\n* [Jane Street Teknoloji Blogu](https://blogs.janestreet.com/category/ocaml/)\n* [LinkedIn Mühendislik](http://engineering.linkedin.com/blog)\n* [Microsoft Mühendislik](https://engineering.microsoft.com/)\n* [Microsoft Python Mühendislik](https://blogs.msdn.microsoft.com/pythonengineering/)\n* [Netflix Teknoloji Blogu](http://techblog.netflix.com/)\n* [Paypal Geliştirici Blogu](https://medium.com/paypal-engineering)\n* [Pinterest Mühendislik Blogu](https://medium.com/@Pinterest_Engineering)\n* [Reddit Blogu](http://www.redditblog.com/)\n* [Salesforce Mühendislik Blogu](https://developer.salesforce.com/blogs/engineering/)\n* [Slack Mühendislik Blogu](https://slack.engineering/)\n* [Spotify Labs](https://labs.spotify.com/)\n* [Stripe Mühendislik Blogu](https://stripe.com/blog/engineering)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "+d/bP9Q0vKv18RY6qyCwXgHABScWvkoM+7mqM2uwCqI=",
        "originContent": "### Company engineering blogs",
        "translatedContent": "### Şirket mühendislik blogları"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "A6i+yCl04UINCArMDUyZyBKY1mjcYkWJO5BeEgTq75w=",
        "originContent": "> Architectures for companies you are interviewing with.",
        "translatedContent": "> Görüştüğünüz şirketlerin mimarileri."
      },
      {
        "row": 4,
        "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
        "originContent": ">",
        "translatedContent": ">"
      },
      {
        "row": 5,
        "rowsha": "JNvk6ucNFdha+GdQzgmZacn0RVXBCuA0jxHX5ee12Mw=",
        "originContent": "> Questions you encounter might be from the same domain.",
        "translatedContent": "> Karşılaştığınız sorular aynı alandan olabilir."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "UHV9opLPfZCgVBfubQ9W/lgvvUW+fVYwTl/VrCl3hUU=",
        "originContent": "* [Airbnb Engineering](http://nerds.airbnb.com/)",
        "translatedContent": "* [Airbnb Mühendislik](http://nerds.airbnb.com/)"
      },
      {
        "row": 8,
        "rowsha": "m/k7rM7RVLOxuzRlYM+QMMHiW8xMJuidIO5ueZ0zq3s=",
        "originContent": "* [Atlassian Developers](https://developer.atlassian.com/blog/)",
        "translatedContent": "* [Atlassian Geliştiriciler](https://developer.atlassian.com/blog/)"
      },
      {
        "row": 9,
        "rowsha": "PJRZgYAQp+tjdGtwVHXbCcdItRIqSzZl7b/9Pn0s4Q0=",
        "originContent": "* [AWS Blog](https://aws.amazon.com/blogs/aws/)",
        "translatedContent": "* [AWS Blog](https://aws.amazon.com/blogs/aws/)"
      },
      {
        "row": 10,
        "rowsha": "t2jO82JdhA4QFuHZxe+OfiEBImC7vYjc5HS0wsXuTag=",
        "originContent": "* [Bitly Engineering Blog](http://word.bitly.com/)",
        "translatedContent": "* [Bitly Mühendislik Blogu](http://word.bitly.com/)"
      },
      {
        "row": 11,
        "rowsha": "kE1MwEVU89ovxRJBrbnjDfIjwTgvVHy+6HYksyil7HI=",
        "originContent": "* [Box Blogs](https://blog.box.com/blog/category/engineering)",
        "translatedContent": "* [Box Blogları](https://blog.box.com/blog/category/engineering)"
      },
      {
        "row": 12,
        "rowsha": "OGQ2cvxicM3vPbzOdPcT3MLeQk/ZBVO2MM1AHtjQUeI=",
        "originContent": "* [Cloudera Developer Blog](http://blog.cloudera.com/)",
        "translatedContent": "* [Cloudera Geliştirici Blogu](http://blog.cloudera.com/)"
      },
      {
        "row": 13,
        "rowsha": "Q/9bsAU0SigRCHts5JTnQEDOkLk/4HrdCSYztpL40x4=",
        "originContent": "* [Dropbox Tech Blog](https://tech.dropbox.com/)",
        "translatedContent": "* [Dropbox Teknoloji Blogu](https://tech.dropbox.com/)"
      },
      {
        "row": 14,
        "rowsha": "j2P1HftasHGpiUioRZovnI9iiN6ErtvyClLXPq5LHZ8=",
        "originContent": "* [Engineering at Quora](https://www.quora.com/q/quoraengineering)",
        "translatedContent": "* [Quora’da Mühendislik](https://www.quora.com/q/quoraengineering)"
      },
      {
        "row": 15,
        "rowsha": "6c5JEVeT/WR0AoANf4VvFjkHHji/XDb0pL6ZhRtGdro=",
        "originContent": "* [Ebay Tech Blog](http://www.ebaytechblog.com/)",
        "translatedContent": "* [Ebay Teknoloji Blogu](http://www.ebaytechblog.com/)"
      },
      {
        "row": 16,
        "rowsha": "nzOMGeuct28CpUCr0qhoijft8HQTyAXueUVTnyyDFzU=",
        "originContent": "* [Evernote Tech Blog](https://blog.evernote.com/tech/)",
        "translatedContent": "* [Evernote Teknoloji Blogu](https://blog.evernote.com/tech/)"
      },
      {
        "row": 17,
        "rowsha": "awh9bS/FB3RCcZPbKa8uXkXeGmVBkqS5Huo2gxyyz6M=",
        "originContent": "* [Etsy Code as Craft](http://codeascraft.com/)",
        "translatedContent": "* [Etsy Code as Craft](http://codeascraft.com/)"
      },
      {
        "row": 18,
        "rowsha": "GYerm7k/P1bUlVNn2c6Vk1dQleF9pUB6RwXxwpPLfXk=",
        "originContent": "* [Facebook Engineering](https://www.facebook.com/Engineering)",
        "translatedContent": "* [Facebook Mühendislik](https://www.facebook.com/Engineering)"
      },
      {
        "row": 19,
        "rowsha": "bHmulJIVA7eSXLNyXEzC1WNyLVdAr/ihcJ+fmr5CpmI=",
        "originContent": "* [Flickr Code](http://code.flickr.net/)",
        "translatedContent": "* [Flickr Code](http://code.flickr.net/)"
      },
      {
        "row": 20,
        "rowsha": "HyvBL6IF62UuAW/Fda7VT198VYsevdwqAYRaAL/cu6E=",
        "originContent": "* [Foursquare Engineering Blog](http://engineering.foursquare.com/)",
        "translatedContent": "* [Foursquare Mühendislik Blogu](http://engineering.foursquare.com/)"
      },
      {
        "row": 21,
        "rowsha": "6tsBAXNdj5peyhLqsL9yPkh5kcTSp9OFkSj+asqp24s=",
        "originContent": "* [GitHub Engineering Blog](https://github.blog/category/engineering)",
        "translatedContent": "* [GitHub Mühendislik Blogu](https://github.blog/category/engineering)"
      },
      {
        "row": 22,
        "rowsha": "1RNafHm1h6TOW0xYbQ8av8+ZSzy84S2ru4jfP9Crvko=",
        "originContent": "* [Google Research Blog](http://googleresearch.blogspot.com/)",
        "translatedContent": "* [Google Araştırma Blogu](http://googleresearch.blogspot.com/)"
      },
      {
        "row": 23,
        "rowsha": "iTaM3R7fuGxZufQxtW0Rt5rns47rqtgDoxJ70JdKFQE=",
        "originContent": "* [Groupon Engineering Blog](https://engineering.groupon.com/)",
        "translatedContent": "* [Groupon Mühendislik Blogu](https://engineering.groupon.com/)"
      },
      {
        "row": 24,
        "rowsha": "mkXS/TYVW8q2PX/zNgvIicOMnTk+kuYjwIgNvEwLU44=",
        "originContent": "* [Heroku Engineering Blog](https://engineering.heroku.com/)",
        "translatedContent": "* [Heroku Mühendislik Blogu](https://engineering.heroku.com/)"
      },
      {
        "row": 25,
        "rowsha": "1eyOJPxW2akxU57S7ZsqziDyoLBGmcdrqMp//DK5JdU=",
        "originContent": "* [Hubspot Engineering Blog](http://product.hubspot.com/blog/topic/engineering)",
        "translatedContent": "* [Hubspot Mühendislik Blogu](http://product.hubspot.com/blog/topic/engineering)"
      },
      {
        "row": 26,
        "rowsha": "wwR5ere/In8pGpzMdPm6wjCULk9GDLfa2ucjiM7hho4=",
        "originContent": "* [High Scalability](http://highscalability.com/)",
        "translatedContent": "* [High Scalability](http://highscalability.com/)"
      },
      {
        "row": 27,
        "rowsha": "8lLYkS8gDk7u6QLR7O/8I1GCPxWHHF0l1E9cJO8hAZ8=",
        "originContent": "* [Instagram Engineering](http://instagram-engineering.tumblr.com/)",
        "translatedContent": "* [Instagram Mühendislik](http://instagram-engineering.tumblr.com/)"
      },
      {
        "row": 28,
        "rowsha": "u+76hGKYmoLQ5HbdTMEpXPv0TjTErDAiKQIK1RBLIx8=",
        "originContent": "* [Intel Software Blog](https://software.intel.com/en-us/blogs/)",
        "translatedContent": "* [Intel Yazılım Blogu](https://software.intel.com/en-us/blogs/)"
      },
      {
        "row": 29,
        "rowsha": "cXNweXN9cAr4uUJ7wckQ4KgAiBWom9cIJj120dTlXr4=",
        "originContent": "* [Jane Street Tech Blog](https://blogs.janestreet.com/category/ocaml/)",
        "translatedContent": "* [Jane Street Teknoloji Blogu](https://blogs.janestreet.com/category/ocaml/)"
      },
      {
        "row": 30,
        "rowsha": "Z2BFDjGLdj5/0/yqRk6Goksl8BSuIz9EbUXUD+e/QRM=",
        "originContent": "* [LinkedIn Engineering](http://engineering.linkedin.com/blog)",
        "translatedContent": "* [LinkedIn Mühendislik](http://engineering.linkedin.com/blog)"
      },
      {
        "row": 31,
        "rowsha": "KErL/DkfP+IkrFUOEG/FSINw+vaIDZYGSV6cVsQ7jrs=",
        "originContent": "* [Microsoft Engineering](https://engineering.microsoft.com/)",
        "translatedContent": "* [Microsoft Mühendislik](https://engineering.microsoft.com/)"
      },
      {
        "row": 32,
        "rowsha": "C1KvRLDZbCnN83cPk+91CENnjCmMFXtMrVddf2xlgEw=",
        "originContent": "* [Microsoft Python Engineering](https://blogs.msdn.microsoft.com/pythonengineering/)",
        "translatedContent": "* [Microsoft Python Mühendislik](https://blogs.msdn.microsoft.com/pythonengineering/)"
      },
      {
        "row": 33,
        "rowsha": "gUfEW2XB6zbofz3d8ULsll5KBGAc/YXNkprWnnHfKMk=",
        "originContent": "* [Netflix Tech Blog](http://techblog.netflix.com/)",
        "translatedContent": "* [Netflix Teknoloji Blogu](http://techblog.netflix.com/)"
      },
      {
        "row": 34,
        "rowsha": "ez8RU0/0SkWeto/n5cd5QjhzYTE453CZE5s8z0VvUFM=",
        "originContent": "* [Paypal Developer Blog](https://medium.com/paypal-engineering)",
        "translatedContent": "* [Paypal Geliştirici Blogu](https://medium.com/paypal-engineering)"
      },
      {
        "row": 35,
        "rowsha": "p1/3zLsBrnU0+Nm3iO0sDgJjp6PT282ZnQ8cxSW7Ncw=",
        "originContent": "* [Pinterest Engineering Blog](https://medium.com/@Pinterest_Engineering)",
        "translatedContent": "* [Pinterest Mühendislik Blogu](https://medium.com/@Pinterest_Engineering)"
      },
      {
        "row": 36,
        "rowsha": "/kFefDUbOxrsKQVJZBtPS+J8xtgIOcCm7qc7CuBZ/Rg=",
        "originContent": "* [Reddit Blog](http://www.redditblog.com/)",
        "translatedContent": "* [Reddit Blogu](http://www.redditblog.com/)"
      },
      {
        "row": 37,
        "rowsha": "NNFiq6Nk+TJk7wrE5CD9nYuSTYxHh+17gAhDCGiedME=",
        "originContent": "* [Salesforce Engineering Blog](https://developer.salesforce.com/blogs/engineering/)",
        "translatedContent": "* [Salesforce Mühendislik Blogu](https://developer.salesforce.com/blogs/engineering/)"
      },
      {
        "row": 38,
        "rowsha": "Ramdc++8GVEIlcL+ZE/BKkkMfOuU11fXg3BCd8CDtpw=",
        "originContent": "* [Slack Engineering Blog](https://slack.engineering/)",
        "translatedContent": "* [Slack Mühendislik Blogu](https://slack.engineering/)"
      },
      {
        "row": 39,
        "rowsha": "tNzZ5+AcxfjbUCc4QDVq8BeFyaPSnbFBw/BbGurmofA=",
        "originContent": "* [Spotify Labs](https://labs.spotify.com/)",
        "translatedContent": "* [Spotify Labs](https://labs.spotify.com/)"
      },
      {
        "row": 40,
        "rowsha": "jr0V+3K56hlHl8kAVSQXGMvpfX6MuwpZG5fJUvrNoIQ=",
        "originContent": "* [Stripe Engineering Blog](https://stripe.com/blog/engineering)",
        "translatedContent": "* [Stripe Mühendislik Blogu](https://stripe.com/blog/engineering)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 59,
    "Content": "* [Twilio Engineering Blog](http://www.twilio.com/engineering)\n* [Twitter Engineering](https://blog.twitter.com/engineering/)\n* [Uber Engineering Blog](http://eng.uber.com/)\n* [Yahoo Engineering Blog](http://yahooeng.tumblr.com/)\n* [Yelp Engineering Blog](http://engineeringblog.yelp.com/)\n* [Zynga Engineering Blog](https://www.zynga.com/blogs/engineering)\n\n#### Source(s) and further reading\n\nLooking to add a blog?  To avoid duplicating work, consider adding your company blog to the following repo:\n\n* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)\n\n## Under development\n\nInterested in adding a section or helping complete one in-progress?  [Contribute](#contributing)!\n\n* Distributed computing with MapReduce\n* Consistent hashing\n* Scatter gather\n* [Contribute](#contributing)\n\n## Credits\n\nCredits and sources are provided throughout this repo.\n\nSpecial thanks to:\n\n* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)\n* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)\n* [High scalability](http://highscalability.com/)\n* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)\n* [shashank88/system_design](https://github.com/shashank88/system_design)\n* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)\n* [System design cheat sheet](https://gist.github.com/vasanthk/485d1c25737e8e72759f)\n* [A distributed systems reading list](http://dancres.github.io/Pages/)\n* [Cracking the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n\n## Contact info\n",
    "ContentSha": "Ybn7ZSN9UGUEPKyqpiStfZWdM+FBaEvnQtoViA95ahg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Twilio Mühendislik Blogu](http://www.twilio.com/engineering)\n* [Twitter Mühendislik](https://blog.twitter.com/engineering/)\n* [Uber Mühendislik Blogu](http://eng.uber.com/)\n* [Yahoo Mühendislik Blogu](http://yahooeng.tumblr.com/)\n* [Yelp Mühendislik Blogu](http://engineeringblog.yelp.com/)\n* [Zynga Mühendislik Blogu](https://www.zynga.com/blogs/engineering)\n\n#### Kaynak(lar) ve daha fazla okuma\n\nBir blog eklemek mi istiyorsunuz?  Çakışan işleri önlemek için şirket blogunuzu aşağıdaki repoya eklemeyi düşünün:\n\n* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)\n\n## Geliştirme aşamasında\n\nBir bölüm eklemek veya devam eden bir bölümü tamamlamaya yardımcı olmak ister misiniz?  [Katkıda bulunun](#contributing)!\n\n* MapReduce ile dağıtık hesaplama\n* Tutarlı karma\n* Dağıtma-toplama (scatter gather)\n* [Katkıda bulunun](#contributing)\n\n## Katkılar\n\nKatkılar ve kaynaklar bu repoda boyunca sağlanmıştır.\n\nÖzel teşekkürler:\n\n* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)\n* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)\n* [High scalability](http://highscalability.com/)\n* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)\n* [shashank88/system_design](https://github.com/shashank88/system_design)\n* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)\n* [Sistem tasarımı hile sayfası](https://gist.github.com/vasanthk/485d1c25737e8e72759f)\n* [Dağıtık sistemler okuma listesi](http://dancres.github.io/Pages/)\n* [Sistem tasarımı mülakatını çözme](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n\n## İletişim bilgileri\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "9d8FoS6iJakvwiyj7Um02JWjq3ky4jvljSxJwe3zNzA=",
        "originContent": "* [Twilio Engineering Blog](http://www.twilio.com/engineering)",
        "translatedContent": "* [Twilio Mühendislik Blogu](http://www.twilio.com/engineering)"
      },
      {
        "row": 2,
        "rowsha": "sNzGmnHwtxr/Q220Ggut7OvB04pml4BQ47j14tzRol0=",
        "originContent": "* [Twitter Engineering](https://blog.twitter.com/engineering/)",
        "translatedContent": "* [Twitter Mühendislik](https://blog.twitter.com/engineering/)"
      },
      {
        "row": 3,
        "rowsha": "Kq7cxWenNWnImFOvBglnOeHQsNtJV2dGVcGg3APCIks=",
        "originContent": "* [Uber Engineering Blog](http://eng.uber.com/)",
        "translatedContent": "* [Uber Mühendislik Blogu](http://eng.uber.com/)"
      },
      {
        "row": 4,
        "rowsha": "B5/Pqakkmh27cv7QeU0IpHdBYc0FT6XV9+cXBs+RNWs=",
        "originContent": "* [Yahoo Engineering Blog](http://yahooeng.tumblr.com/)",
        "translatedContent": "* [Yahoo Mühendislik Blogu](http://yahooeng.tumblr.com/)"
      },
      {
        "row": 5,
        "rowsha": "4JOHDVmUaIWjipmhEOvcLQ3lQ5nvs931vBU95hjgt8s=",
        "originContent": "* [Yelp Engineering Blog](http://engineeringblog.yelp.com/)",
        "translatedContent": "* [Yelp Mühendislik Blogu](http://engineeringblog.yelp.com/)"
      },
      {
        "row": 6,
        "rowsha": "T1962enxKZUq0pnv8Ya/Wt9ssKDMPk2oZ8eKrNC3Rx4=",
        "originContent": "* [Zynga Engineering Blog](https://www.zynga.com/blogs/engineering)",
        "translatedContent": "* [Zynga Mühendislik Blogu](https://www.zynga.com/blogs/engineering)"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "yAcCmKF4VrpEVdPP7QGvwQrQvx5nYqkLfEVqvhED8vU=",
        "originContent": "#### Source(s) and further reading",
        "translatedContent": "#### Kaynak(lar) ve daha fazla okuma"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "pa7M4b/LuEKtuN5IyhXdlTp4Gh71l9Ze7y2UNbxqsx4=",
        "originContent": "Looking to add a blog?  To avoid duplicating work, consider adding your company blog to the following repo:",
        "translatedContent": "Bir blog eklemek mi istiyorsunuz?  Çakışan işleri önlemek için şirket blogunuzu aşağıdaki repoya eklemeyi düşünün:"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "+FnBxBwnup4/zgg2YLCOsM9mf8JZVRVQnxudS2OIs3E=",
        "originContent": "* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)",
        "translatedContent": "* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "t4tgwc7iQdiScrNNK5RufDiX0TR7zYkJijZRRf+7Clw=",
        "originContent": "## Under development",
        "translatedContent": "## Geliştirme aşamasında"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "wtfJgdYtoDEWhD+DNsA9eZKRmA1VEVSsc2jEUQPaBtE=",
        "originContent": "Interested in adding a section or helping complete one in-progress?  [Contribute](#contributing)!",
        "translatedContent": "Bir bölüm eklemek veya devam eden bir bölümü tamamlamaya yardımcı olmak ister misiniz?  [Katkıda bulunun](#contributing)!"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "pqXmYpaIcX19vhzkd+FjJdMydXVVFY4A79+VXXKf3xw=",
        "originContent": "* Distributed computing with MapReduce",
        "translatedContent": "* MapReduce ile dağıtık hesaplama"
      },
      {
        "row": 19,
        "rowsha": "ZN/KzBCXwLH+ZbEPg0JzWfbkv6v0/kwMeEt+33taE0U=",
        "originContent": "* Consistent hashing",
        "translatedContent": "* Tutarlı karma"
      },
      {
        "row": 20,
        "rowsha": "mPIuzyd7cHCkpiQwHtxQvfEBhGD4TWn/NeOeFJ6PGzQ=",
        "originContent": "* Scatter gather",
        "translatedContent": "* Dağıtma-toplama (scatter gather)"
      },
      {
        "row": 21,
        "rowsha": "1jbifZDheRab+sWwbsBpmbL8J80A6hHoEBa5cO7M3HU=",
        "originContent": "* [Contribute](#contributing)",
        "translatedContent": "* [Katkıda bulunun](#contributing)"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "OtBYwndH58Q+LfPUO9DkPBo3A7SzyLFdEA2wIljgYwk=",
        "originContent": "## Credits",
        "translatedContent": "## Katkılar"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "c58XSdVMXQxZAM2ql4KvCUK63wftHWZTLmqp8TdRcE8=",
        "originContent": "Credits and sources are provided throughout this repo.",
        "translatedContent": "Katkılar ve kaynaklar bu repoda boyunca sağlanmıştır."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "17xrnRFrxtbV2/VrEOM7MvNVU+4x1tdBoWQSX8P3fpo=",
        "originContent": "Special thanks to:",
        "translatedContent": "Özel teşekkürler:"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "pKl6P8KEQz4QNBAh9t4oR16uTBfQroZJNNwe+s+yLc8=",
        "originContent": "* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)",
        "translatedContent": "* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)"
      },
      {
        "row": 30,
        "rowsha": "7Hss598Sud5Bmvz1qJITtUR0Fhv509/XQ5L5lpMYkjM=",
        "originContent": "* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)",
        "translatedContent": "* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)"
      },
      {
        "row": 31,
        "rowsha": "yh+jRLedQHNmaPf7VIeLV1wTtoSg7Yy303JV2Br/zU0=",
        "originContent": "* [High scalability](http://highscalability.com/)",
        "translatedContent": "* [High scalability](http://highscalability.com/)"
      },
      {
        "row": 32,
        "rowsha": "lBRNLVtnyx2U9Y8S26esIEj6x3vknEXJAES+wiVadtE=",
        "originContent": "* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)",
        "translatedContent": "* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)"
      },
      {
        "row": 33,
        "rowsha": "2luTAoc7P89ojRQuuqyVSd3FyTDw48WmC8GM9qvxmaU=",
        "originContent": "* [shashank88/system_design](https://github.com/shashank88/system_design)",
        "translatedContent": "* [shashank88/system_design](https://github.com/shashank88/system_design)"
      },
      {
        "row": 34,
        "rowsha": "K4ksr7U4gNQeNxJQkcJ7xmu10zeY3o9NTHw8Z3MTPbg=",
        "originContent": "* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)",
        "translatedContent": "* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)"
      },
      {
        "row": 35,
        "rowsha": "1HD3BrjiKliRO0pgaGFzE0jUAIFm2QFHDM+5ul/hsUY=",
        "originContent": "* [System design cheat sheet](https://gist.github.com/vasanthk/485d1c25737e8e72759f)",
        "translatedContent": "* [Sistem tasarımı hile sayfası](https://gist.github.com/vasanthk/485d1c25737e8e72759f)"
      },
      {
        "row": 36,
        "rowsha": "CpmLqSDpSe2fYMM40797BCoW7HkGCDhNfryYvgXUmsE=",
        "originContent": "* [A distributed systems reading list](http://dancres.github.io/Pages/)",
        "translatedContent": "* [Dağıtık sistemler okuma listesi](http://dancres.github.io/Pages/)"
      },
      {
        "row": 37,
        "rowsha": "oVmANhd4jFgULLGXR4wRUoDY8ukoo3OHU5c79dZ6tFU=",
        "originContent": "* [Cracking the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)",
        "translatedContent": "* [Sistem tasarımı mülakatını çözme](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "MIDKXf43yHmw05OTx26kHLZf4/APjvzy5C0k0OJV+/o=",
        "originContent": "## Contact info",
        "translatedContent": "## İletişim bilgileri"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 60,
    "Content": "Feel free to contact me to discuss any issues, questions, or comments.\n\nMy contact info can be found on my [GitHub page](https://github.com/donnemartin).\n\n## License\n\n*I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).*\n\n    Copyright 2017 Donne Martin\n\n    Creative Commons Attribution 4.0 International License (CC BY 4.0)\n\n    http://creativecommons.org/licenses/by/4.0/\n",
    "ContentSha": "pZfW5OoDeEHMjsOQIbYzifgEtKuSRxAcRTUdmpdKaBQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Herhangi bir sorun, soru veya yorumunuzu görüşmek için benimle iletişime geçmekten çekinmeyin.\n\nİletişim bilgilerime [GitHub sayfamdan](https://github.com/donnemartin) ulaşabilirsiniz.\n\n## Lisans\n\n*Bu depoda size kod ve kaynakları açık kaynak lisansı altında sunuyorum.  Bu benim kişisel depom olduğu için, kod ve kaynaklarım için aldığınız lisans bana aittir, işverenim (Facebook) değil.*\n\n    Telif Hakkı 2017 Donne Martin\n\n    Creative Commons Attribution 4.0 International License (CC BY 4.0)\n\n    http://creativecommons.org/licenses/by/4.0/\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "KIFlNpocCUk68IRsK1WzPRwq3G4wKqryvIGOrjVLshM=",
        "originContent": "Feel free to contact me to discuss any issues, questions, or comments.",
        "translatedContent": "Herhangi bir sorun, soru veya yorumunuzu görüşmek için benimle iletişime geçmekten çekinmeyin."
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "TQe2yubEtO0DQFi7wAUeaFm4xXwdbNpHKocxgOG0VLQ=",
        "originContent": "My contact info can be found on my [GitHub page](https://github.com/donnemartin).",
        "translatedContent": "İletişim bilgilerime [GitHub sayfamdan](https://github.com/donnemartin) ulaşabilirsiniz."
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "bFSaVtsB4CHySNjaeCiaMZfT24b+DTbTM4HQ38cR6Lw=",
        "originContent": "## License",
        "translatedContent": "## Lisans"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "SBAKe7Nw6j0bI6GZ5M6BwWFUXXdUasWMKwS4gRwKvSo=",
        "originContent": "*I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).*",
        "translatedContent": "*Bu depoda size kod ve kaynakları açık kaynak lisansı altında sunuyorum.  Bu benim kişisel depom olduğu için, kod ve kaynaklarım için aldığınız lisans bana aittir, işverenim (Facebook) değil.*"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "pGO5RldFVlPTjaQxxap5djK7sEP3yb5ugIHRNoYfth8=",
        "originContent": "    Copyright 2017 Donne Martin",
        "translatedContent": "    Telif Hakkı 2017 Donne Martin"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "AyxdBnPDCPgTUzxBLwYO1XkDP8BtkFdJ8HJMPEPfCKg=",
        "originContent": "    Creative Commons Attribution 4.0 International License (CC BY 4.0)",
        "translatedContent": "    Creative Commons Attribution 4.0 International License (CC BY 4.0)"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "1RRg87FdQzsRvSePc+OSyFT0bl6EF/4Nmt5rbP9DJWU=",
        "originContent": "    http://creativecommons.org/licenses/by/4.0/",
        "translatedContent": "    http://creativecommons.org/licenses/by/4.0/"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]