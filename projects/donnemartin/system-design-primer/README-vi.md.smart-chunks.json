[
  {
    "Id": 1,
    "Content": "*[English](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README.md) ∙ [日本語](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-ja.md) ∙ [简体中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-Hans.md) ∙ [繁體中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-TW.md) | [العَرَبِيَّة‎](https://github.com/donnemartin/system-design-primer/issues/170) ∙ [বাংলা](https://github.com/donnemartin/system-design-primer/issues/220) ∙ [Português do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) ∙ [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) ∙ [ελληνικά](https://github.com/donnemartin/system-design-primer/issues/130) ∙ [עברית](https://github.com/donnemartin/system-design-primer/issues/272) ∙ [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) ∙ [한국어](https://github.com/donnemartin/system-design-primer/issues/102) ∙ [فارسی](https://github.com/donnemartin/system-design-primer/issues/110) ∙ [Polski](https://github.com/donnemartin/system-design-primer/issues/68) ∙ [русский язык](https://github.com/donnemartin/system-design-primer/issues/87) ∙ [Español](https://github.com/donnemartin/system-design-primer/issues/136) ∙ [ภาษาไทย](https://github.com/donnemartin/system-design-primer/issues/187) ∙ [Türkçe](https://github.com/donnemartin/system-design-primer/issues/39) ∙ [tiếng Việt](https://github.com/donnemartin/system-design-primer/issues/127) ∙ [Français](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*",
    "ContentSha": "NV5If+n4caPL9367nN6NPHEHX2NVMyxh97QjgslLVk8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "*[English](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README.md) ∙ [日本語](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-ja.md) ∙ [简体中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-Hans.md) ∙ [繁體中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-TW.md) | [العَرَبِيَّة‎](https://github.com/donnemartin/system-design-primer/issues/170) ∙ [বাংলা](https://github.com/donnemartin/system-design-primer/issues/220) ∙ [Português do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) ∙ [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) ∙ [ελληνικά](https://github.com/donnemartin/system-design-primer/issues/130) ∙ [עברית](https://github.com/donnemartin/system-design-primer/issues/272) ∙ [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) ∙ [한국어](https://github.com/donnemartin/system-design-primer/issues/102) ∙ [فارسی](https://github.com/donnemartin/system-design-primer/issues/110) ∙ [Polski](https://github.com/donnemartin/system-design-primer/issues/68) ∙ [русский язык](https://github.com/donnemartin/system-design-primer/issues/87) ∙ [Español](https://github.com/donnemartin/system-design-primer/issues/136) ∙ [ภาษาไทย](https://github.com/donnemartin/system-design-primer/issues/187) ∙ [Türkçe](https://github.com/donnemartin/system-design-primer/issues/39) ∙ [tiếng Việt](https://github.com/donnemartin/system-design-primer/issues/127) ∙ [Français](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "NV5If+n4caPL9367nN6NPHEHX2NVMyxh97QjgslLVk8=",
        "originContent": "*[English](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README.md) ∙ [日本語](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-ja.md) ∙ [简体中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-Hans.md) ∙ [繁體中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-TW.md) | [العَرَبِيَّة‎](https://github.com/donnemartin/system-design-primer/issues/170) ∙ [বাংলা](https://github.com/donnemartin/system-design-primer/issues/220) ∙ [Português do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) ∙ [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) ∙ [ελληνικά](https://github.com/donnemartin/system-design-primer/issues/130) ∙ [עברית](https://github.com/donnemartin/system-design-primer/issues/272) ∙ [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) ∙ [한국어](https://github.com/donnemartin/system-design-primer/issues/102) ∙ [فارسی](https://github.com/donnemartin/system-design-primer/issues/110) ∙ [Polski](https://github.com/donnemartin/system-design-primer/issues/68) ∙ [русский язык](https://github.com/donnemartin/system-design-primer/issues/87) ∙ [Español](https://github.com/donnemartin/system-design-primer/issues/136) ∙ [ภาษาไทย](https://github.com/donnemartin/system-design-primer/issues/187) ∙ [Türkçe](https://github.com/donnemartin/system-design-primer/issues/39) ∙ [tiếng Việt](https://github.com/donnemartin/system-design-primer/issues/127) ∙ [Français](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*",
        "translatedContent": "*[English](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README.md) ∙ [日本語](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-ja.md) ∙ [简体中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-Hans.md) ∙ [繁體中文](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-TW.md) | [العَرَبِيَّة‎](https://github.com/donnemartin/system-design-primer/issues/170) ∙ [বাংলা](https://github.com/donnemartin/system-design-primer/issues/220) ∙ [Português do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) ∙ [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) ∙ [ελληνικά](https://github.com/donnemartin/system-design-primer/issues/130) ∙ [עברית](https://github.com/donnemartin/system-design-primer/issues/272) ∙ [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) ∙ [한국어](https://github.com/donnemartin/system-design-primer/issues/102) ∙ [فارسی](https://github.com/donnemartin/system-design-primer/issues/110) ∙ [Polski](https://github.com/donnemartin/system-design-primer/issues/68) ∙ [русский язык](https://github.com/donnemartin/system-design-primer/issues/87) ∙ [Español](https://github.com/donnemartin/system-design-primer/issues/136) ∙ [ภาษาไทย](https://github.com/donnemartin/system-design-primer/issues/187) ∙ [Türkçe](https://github.com/donnemartin/system-design-primer/issues/39) ∙ [tiếng Việt](https://github.com/donnemartin/system-design-primer/issues/127) ∙ [Français](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "\n**Help [translate](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/TRANSLATIONS.md) this guide!**\n\n# The System Design Primer\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png\">\n  <br/>\n</p>\n\n## Motivation\n\n> Learn how to design large-scale systems.\n>\n> Prep for the system design interview.\n\n### Learn how to design large-scale systems\n\nLearning how to design scalable systems will help you become a better engineer.\n\nSystem design is a broad topic.  There is a **vast amount of resources scattered throughout the web** on system design principles.\n\nThis repo is an **organized collection** of resources to help you learn how to build systems at scale.\n\n### Learn from the open source community\n\nThis is a continually updated, open source project.\n\n[Contributions](#contributing) are welcome!\n\n### Prep for the system design interview\n\nIn addition to coding interviews, system design is a **required component** of the **technical interview process** at many tech companies.\n\n**Practice common system design interview questions** and **compare** your results with **sample solutions**: discussions, code, and diagrams.\n\nAdditional topics for interview prep:\n\n* [Study guide](#study-guide)\n* [How to approach a system design interview question](#how-to-approach-a-system-design-interview-question)",
    "ContentSha": "AbJTT6alKgUjtCBRmG+Q5nAyd3D1OmTONWi5hXEC4sI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**Hãy [dịch](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/TRANSLATIONS.md) hướng dẫn này!**\n\n# Hướng Dẫn Thiết Kế Hệ Thống\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png\">\n  <br/>\n</p>\n\n## Động lực\n\n> Học cách thiết kế các hệ thống quy mô lớn.\n>\n> Chuẩn bị cho phỏng vấn thiết kế hệ thống.\n\n### Học cách thiết kế hệ thống quy mô lớn\n\nHọc cách thiết kế các hệ thống có khả năng mở rộng sẽ giúp bạn trở thành một kỹ sư giỏi hơn.\n\nThiết kế hệ thống là một chủ đề rộng. Có **rất nhiều tài nguyên phân tán trên web** về các nguyên tắc thiết kế hệ thống.\n\nKho lưu trữ này là một **bộ sưu tập tổ chức** các tài nguyên để giúp bạn học cách xây dựng hệ thống ở quy mô lớn.\n\n### Học hỏi từ cộng đồng mã nguồn mở\n\nĐây là một dự án mã nguồn mở, được cập nhật liên tục.\n\n[Đóng góp](#contributing) luôn được hoan nghênh!\n\n### Chuẩn bị cho phỏng vấn thiết kế hệ thống\n\nBên cạnh các cuộc phỏng vấn lập trình, thiết kế hệ thống là một **thành phần bắt buộc** trong **quy trình phỏng vấn kỹ thuật** tại nhiều công ty công nghệ.\n\n**Thực hành các câu hỏi phỏng vấn thiết kế hệ thống phổ biến** và **so sánh** kết quả của bạn với **các giải pháp mẫu**: thảo luận, mã nguồn và sơ đồ.\n\nCác chủ đề bổ sung để chuẩn bị phỏng vấn:\n\n* [Hướng dẫn học tập](#study-guide)\n* [Cách tiếp cận một câu hỏi phỏng vấn thiết kế hệ thống](#how-to-approach-a-system-design-interview-question)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "OJMxkU+m/5fT0FnnYIq6z/lk5hTUjf/v0nWk2r8vD+8=",
        "originContent": "**Help [translate](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/TRANSLATIONS.md) this guide!**",
        "translatedContent": "**Hãy [dịch](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/TRANSLATIONS.md) hướng dẫn này!**"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "RmL3BQqAshnV9VkVoMoDYoTy2qWwOTw2UmULe+/8x8Y=",
        "originContent": "# The System Design Primer",
        "translatedContent": "# Hướng Dẫn Thiết Kế Hệ Thống"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 7,
        "rowsha": "FPF5eTlg54aCMqTVvser3Pca0/aXnS3JFpQbR6BsbC8=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png\">"
      },
      {
        "row": 8,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 9,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "XkjmO8GZw+NPlqtsKIz94hXoCCSSximfmFKrLHYsZ2I=",
        "originContent": "## Motivation",
        "translatedContent": "## Động lực"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "2GYmP6NIECPJvyW0n7BItMi31jLUPuKlslDWan9HQlE=",
        "originContent": "> Learn how to design large-scale systems.",
        "translatedContent": "> Học cách thiết kế các hệ thống quy mô lớn."
      },
      {
        "row": 14,
        "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
        "originContent": ">",
        "translatedContent": ">"
      },
      {
        "row": 15,
        "rowsha": "lOl4OhOLgOSefbhaM1VSu1jtsTlIm2iCxniUZWtnyGs=",
        "originContent": "> Prep for the system design interview.",
        "translatedContent": "> Chuẩn bị cho phỏng vấn thiết kế hệ thống."
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "vHXrMcDBcG7o5YyZNsje/JbHGk+EjPhpbWV8Gzly7CA=",
        "originContent": "### Learn how to design large-scale systems",
        "translatedContent": "### Học cách thiết kế hệ thống quy mô lớn"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "PWbylZXLwlQcEV2M9rtMk6xA3iKlyMhvOfXqZvhx/O4=",
        "originContent": "Learning how to design scalable systems will help you become a better engineer.",
        "translatedContent": "Học cách thiết kế các hệ thống có khả năng mở rộng sẽ giúp bạn trở thành một kỹ sư giỏi hơn."
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "IKYU9P8xET+s9UmMBuxQNxd3wXq0snCFQfvIPKob15U=",
        "originContent": "System design is a broad topic.  There is a **vast amount of resources scattered throughout the web** on system design principles.",
        "translatedContent": "Thiết kế hệ thống là một chủ đề rộng. Có **rất nhiều tài nguyên phân tán trên web** về các nguyên tắc thiết kế hệ thống."
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "pgxH1xp3gAK9+xsJypLHdXiYDaemv+fKPR26cm9Im7k=",
        "originContent": "This repo is an **organized collection** of resources to help you learn how to build systems at scale.",
        "translatedContent": "Kho lưu trữ này là một **bộ sưu tập tổ chức** các tài nguyên để giúp bạn học cách xây dựng hệ thống ở quy mô lớn."
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "MMP95zm3a71oK2zP47EqMxb2J/GJcG879fLKN8a6Oi4=",
        "originContent": "### Learn from the open source community",
        "translatedContent": "### Học hỏi từ cộng đồng mã nguồn mở"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "640Z4MLeOAsYzLjTMZYIOskGISTh4Uq3YbyDvTJMGUE=",
        "originContent": "This is a continually updated, open source project.",
        "translatedContent": "Đây là một dự án mã nguồn mở, được cập nhật liên tục."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "6WBZYR+VSGC3aknGU1MJjEeOgM48ZjhtyUu7IvQ4lm8=",
        "originContent": "[Contributions](#contributing) are welcome!",
        "translatedContent": "[Đóng góp](#contributing) luôn được hoan nghênh!"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "Fsw2Splnb+cd2/xdxz/OTb37zXBJxw7zbQcx42rk33o=",
        "originContent": "### Prep for the system design interview",
        "translatedContent": "### Chuẩn bị cho phỏng vấn thiết kế hệ thống"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "eo9ctz34cQhO+4yDhHKCh9K5bd4Pbc44n7hhTt0VhMQ=",
        "originContent": "In addition to coding interviews, system design is a **required component** of the **technical interview process** at many tech companies.",
        "translatedContent": "Bên cạnh các cuộc phỏng vấn lập trình, thiết kế hệ thống là một **thành phần bắt buộc** trong **quy trình phỏng vấn kỹ thuật** tại nhiều công ty công nghệ."
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "LSyRLqZPK5hrVm87LAXhVI7U9vHbWeYNnhRHLizaBds=",
        "originContent": "**Practice common system design interview questions** and **compare** your results with **sample solutions**: discussions, code, and diagrams.",
        "translatedContent": "**Thực hành các câu hỏi phỏng vấn thiết kế hệ thống phổ biến** và **so sánh** kết quả của bạn với **các giải pháp mẫu**: thảo luận, mã nguồn và sơ đồ."
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "HcjqOhjWeDEqRUbJGhq8E5QgFU+bX28kl7j1XB9Pl1k=",
        "originContent": "Additional topics for interview prep:",
        "translatedContent": "Các chủ đề bổ sung để chuẩn bị phỏng vấn:"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "v4yYDQA33HmkJabIfy2wQXtEJnfXydVDYJqKO2z1XSw=",
        "originContent": "* [Study guide](#study-guide)",
        "translatedContent": "* [Hướng dẫn học tập](#study-guide)"
      },
      {
        "row": 40,
        "rowsha": "X+q8Gc3m4EOWkV9rnHfPaUXzg7dHUXx3EYIFol17RV8=",
        "originContent": "* [How to approach a system design interview question](#how-to-approach-a-system-design-interview-question)",
        "translatedContent": "* [Cách tiếp cận một câu hỏi phỏng vấn thiết kế hệ thống](#how-to-approach-a-system-design-interview-question)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 3,
    "Content": "* [System design interview questions, **with solutions**](#system-design-interview-questions-with-solutions)\n* [Object-oriented design interview questions, **with solutions**](#object-oriented-design-interview-questions-with-solutions)\n* [Additional system design interview questions](#additional-system-design-interview-questions)\n\n## Anki flashcards\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/zdCAkB3.png\">\n  <br/>\n</p>\n\nThe provided [Anki flashcard decks](https://apps.ankiweb.net/) use spaced repetition to help you retain key system design concepts.\n\n* [System design deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg)\n* [System design exercises deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg)\n* [Object oriented design exercises deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg)\n\nGreat for use while on-the-go.\n\n### Coding Resource: Interactive Coding Challenges\n\nLooking for resources to help you prep for the [**Coding Interview**](https://github.com/donnemartin/interactive-coding-challenges)?\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/b4YtAEN.png\">\n  <br/>\n</p>\n\nCheck out the sister repo [**Interactive Coding Challenges**](https://github.com/donnemartin/interactive-coding-challenges), which contains an additional Anki deck:\n\n* [Coding deck](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)\n\n## Contributing\n\n> Learn from the community.\n\nFeel free to submit pull requests to help:\n\n* Fix errors\n* Improve sections",
    "ContentSha": "SXl/9sXgfkMzgSqqZA/bJ68vMrerBbNpRqT5TMAq1Hg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Các câu hỏi phỏng vấn thiết kế hệ thống, **có giải pháp**](#system-design-interview-questions-with-solutions)\n* [Các câu hỏi phỏng vấn thiết kế hướng đối tượng, **có giải pháp**](#object-oriented-design-interview-questions-with-solutions)\n* [Các câu hỏi phỏng vấn thiết kế hệ thống bổ sung](#additional-system-design-interview-questions)\n\n## Thẻ ghi nhớ Anki\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/zdCAkB3.png\">\n  <br/>\n</p>\n\nBộ thẻ ghi nhớ [Anki](https://apps.ankiweb.net/) được cung cấp sử dụng phương pháp lặp lại ngắt quãng giúp bạn ghi nhớ các khái niệm thiết kế hệ thống quan trọng.\n\n* [Bộ thẻ thiết kế hệ thống](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg)\n* [Bộ thẻ bài tập thiết kế hệ thống](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg)\n* [Bộ thẻ bài tập thiết kế hướng đối tượng](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg)\n\nRất tiện lợi khi sử dụng lúc di chuyển.\n\n### Tài nguyên lập trình: Thử thách Lập trình Tương tác\n\nBạn đang tìm kiếm tài nguyên để luyện tập cho [**Phỏng vấn Lập trình**](https://github.com/donnemartin/interactive-coding-challenges)?\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/b4YtAEN.png\">\n  <br/>\n</p>\n\nHãy xem kho lưu trữ chị em [**Thử thách Lập trình Tương tác**](https://github.com/donnemartin/interactive-coding-challenges), trong đó có thêm một bộ thẻ Anki:\n\n* [Bộ thẻ lập trình](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)\n\n## Đóng góp\n\n> Học hỏi từ cộng đồng.\n\nBạn hoàn toàn có thể gửi pull request để giúp:\n\n* Sửa lỗi\n* Cải thiện các phần",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "Mt2HxSYjFkc9uMdXwaq+OlP/W/gyF74VX3BSfO98hn0=",
        "originContent": "* [System design interview questions, **with solutions**](#system-design-interview-questions-with-solutions)",
        "translatedContent": "* [Các câu hỏi phỏng vấn thiết kế hệ thống, **có giải pháp**](#system-design-interview-questions-with-solutions)"
      },
      {
        "row": 2,
        "rowsha": "Wir9bkulqEXFUOlAjhcOOF7WrGFz2fBUontFrp3p8W4=",
        "originContent": "* [Object-oriented design interview questions, **with solutions**](#object-oriented-design-interview-questions-with-solutions)",
        "translatedContent": "* [Các câu hỏi phỏng vấn thiết kế hướng đối tượng, **có giải pháp**](#object-oriented-design-interview-questions-with-solutions)"
      },
      {
        "row": 3,
        "rowsha": "XGKgnr/824vT6dM9jyrdrXO2K5MmiSyRqNS35VDUIPg=",
        "originContent": "* [Additional system design interview questions](#additional-system-design-interview-questions)",
        "translatedContent": "* [Các câu hỏi phỏng vấn thiết kế hệ thống bổ sung](#additional-system-design-interview-questions)"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "jAhCy8VM8S4HEk/LADeB7EbsOBvqZ0IvgMlwlVEKfu4=",
        "originContent": "## Anki flashcards",
        "translatedContent": "## Thẻ ghi nhớ Anki"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 8,
        "rowsha": "BPzFMaBD+IXGJD8mCNtQdt2Fq3yGI8hrbdh1PitUt1c=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/zdCAkB3.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/zdCAkB3.png\">"
      },
      {
        "row": 9,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 10,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "K5DuCHSzg2P7YtiP+baqJaP62aUjBaz0mb4mYziF4oo=",
        "originContent": "The provided [Anki flashcard decks](https://apps.ankiweb.net/) use spaced repetition to help you retain key system design concepts.",
        "translatedContent": "Bộ thẻ ghi nhớ [Anki](https://apps.ankiweb.net/) được cung cấp sử dụng phương pháp lặp lại ngắt quãng giúp bạn ghi nhớ các khái niệm thiết kế hệ thống quan trọng."
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "crW/WKlK5TjEYXwDp1G9/1ic+JPr4f1yktu027rZCR4=",
        "originContent": "* [System design deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg)",
        "translatedContent": "* [Bộ thẻ thiết kế hệ thống](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg)"
      },
      {
        "row": 15,
        "rowsha": "OfAUha/5gfRKRGfOM84APZ/5JyHS9P+64L1tSvdVP8w=",
        "originContent": "* [System design exercises deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg)",
        "translatedContent": "* [Bộ thẻ bài tập thiết kế hệ thống](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg)"
      },
      {
        "row": 16,
        "rowsha": "wg08CsJYh0SwgkIQkRxS95j9SzIiB4pFnzkYECItNsA=",
        "originContent": "* [Object oriented design exercises deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg)",
        "translatedContent": "* [Bộ thẻ bài tập thiết kế hướng đối tượng](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg)"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "lkxjikTF7Ep+6Isk/CGGBY7cmFnupWpV0Qf00hsrkF8=",
        "originContent": "Great for use while on-the-go.",
        "translatedContent": "Rất tiện lợi khi sử dụng lúc di chuyển."
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "Ym+2jTY3QP64SUY9yYzEp//cTOISVSsFCRxHUzNZzag=",
        "originContent": "### Coding Resource: Interactive Coding Challenges",
        "translatedContent": "### Tài nguyên lập trình: Thử thách Lập trình Tương tác"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "/qAkhkRHLUIOESCrNYlEJpejk0JLhSusLW0Sk4NwtfE=",
        "originContent": "Looking for resources to help you prep for the [**Coding Interview**](https://github.com/donnemartin/interactive-coding-challenges)?",
        "translatedContent": "Bạn đang tìm kiếm tài nguyên để luyện tập cho [**Phỏng vấn Lập trình**](https://github.com/donnemartin/interactive-coding-challenges)?"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 25,
        "rowsha": "MdSv9h1g1w6EflbjMKJ5/I0xwZPvHBplhFjX3vv06G0=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/b4YtAEN.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/b4YtAEN.png\">"
      },
      {
        "row": 26,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 27,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "dW/Qoril3MLw69OIyFrrQ4xSErGMxw8eylmxqz43bkU=",
        "originContent": "Check out the sister repo [**Interactive Coding Challenges**](https://github.com/donnemartin/interactive-coding-challenges), which contains an additional Anki deck:",
        "translatedContent": "Hãy xem kho lưu trữ chị em [**Thử thách Lập trình Tương tác**](https://github.com/donnemartin/interactive-coding-challenges), trong đó có thêm một bộ thẻ Anki:"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "JoarM4WtXWxKxXt+3p/7fW0lgC1Sd83kcvPmcS+QBo0=",
        "originContent": "* [Coding deck](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)",
        "translatedContent": "* [Bộ thẻ lập trình](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "R5ZPLZ4vkE9tjX5qe8QB7AkTfWZsuNTGFLFKMp2KUzM=",
        "originContent": "## Contributing",
        "translatedContent": "## Đóng góp"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "n+VWB2c1fi5U1I/HAqwDzesEXJieDpt99Ve3Pudxcnk=",
        "originContent": "> Learn from the community.",
        "translatedContent": "> Học hỏi từ cộng đồng."
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "Tm5+a/IDPzyOTOP0wgk3ULKDs3fMylMngrEuvccOs9k=",
        "originContent": "Feel free to submit pull requests to help:",
        "translatedContent": "Bạn hoàn toàn có thể gửi pull request để giúp:"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "BGOOPe+VNHRBhUS0Jx4Pjh6ty6SB6QxyQm0PrtV0V90=",
        "originContent": "* Fix errors",
        "translatedContent": "* Sửa lỗi"
      },
      {
        "row": 40,
        "rowsha": "H22DGM0Rl/JMuVz1PhYuLI5tYblM/ipRxxCgehM+MlU=",
        "originContent": "* Improve sections",
        "translatedContent": "* Cải thiện các phần"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "* Add new sections\n* [Translate](https://github.com/donnemartin/system-design-primer/issues/28)\n\nContent that needs some polishing is placed [under development](#under-development).\n\nReview the [Contributing Guidelines](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/CONTRIBUTING.md).\n\n## Index of system design topics\n\n> Summaries of various system design topics, including pros and cons.  **Everything is a trade-off**.\n>\n> Each section contains links to more in-depth resources.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png\">\n  <br/>\n</p>\n\n* [System design topics: start here](#system-design-topics-start-here)\n    * [Step 1: Review the scalability video lecture](#step-1-review-the-scalability-video-lecture)\n    * [Step 2: Review the scalability article](#step-2-review-the-scalability-article)\n    * [Next steps](#next-steps)\n* [Performance vs scalability](#performance-vs-scalability)\n* [Latency vs throughput](#latency-vs-throughput)\n* [Availability vs consistency](#availability-vs-consistency)\n    * [CAP theorem](#cap-theorem)\n        * [CP - consistency and partition tolerance](#cp---consistency-and-partition-tolerance)\n        * [AP - availability and partition tolerance](#ap---availability-and-partition-tolerance)\n* [Consistency patterns](#consistency-patterns)\n    * [Weak consistency](#weak-consistency)\n    * [Eventual consistency](#eventual-consistency)\n    * [Strong consistency](#strong-consistency)\n* [Availability patterns](#availability-patterns)\n    * [Fail-over](#fail-over)\n    * [Replication](#replication)\n    * [Availability in numbers](#availability-in-numbers)\n* [Domain name system](#domain-name-system)\n* [Content delivery network](#content-delivery-network)\n    * [Push CDNs](#push-cdns)\n    * [Pull CDNs](#pull-cdns)",
    "ContentSha": "55nlChjOgBlS9Rz8E9JfxCDdOyXcovuwIdqXYGb4sqo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* Thêm các mục mới\n* [Dịch](https://github.com/donnemartin/system-design-primer/issues/28)\n\nNội dung cần hoàn thiện thêm được đặt [đang phát triển](#under-development).\n\nXem lại [Hướng dẫn đóng góp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/CONTRIBUTING.md).\n\n## Mục lục các chủ đề thiết kế hệ thống\n\n> Tóm tắt các chủ đề thiết kế hệ thống khác nhau, bao gồm ưu và nhược điểm. **Mọi thứ đều là sự đánh đổi**.\n>\n> Mỗi mục đều có liên kết đến các tài liệu chuyên sâu hơn.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png\">\n  <br/>\n</p>\n\n* [Chủ đề thiết kế hệ thống: bắt đầu tại đây](#system-design-topics-start-here)\n    * [Bước 1: Xem lại bài giảng video về khả năng mở rộng](#step-1-review-the-scalability-video-lecture)\n    * [Bước 2: Xem lại bài viết về khả năng mở rộng](#step-2-review-the-scalability-article)\n    * [Các bước tiếp theo](#next-steps)\n* [Hiệu năng so với khả năng mở rộng](#performance-vs-scalability)\n* [Độ trễ so với thông lượng](#latency-vs-throughput)\n* [Khả dụng so với tính nhất quán](#availability-vs-consistency)\n    * [Định lý CAP](#cap-theorem)\n        * [CP - tính nhất quán và chịu phân vùng](#cp---consistency-and-partition-tolerance)\n        * [AP - khả dụng và chịu phân vùng](#ap---availability-and-partition-tolerance)\n* [Các mẫu nhất quán](#consistency-patterns)\n    * [Nhất quán yếu](#weak-consistency)\n    * [Nhất quán cuối cùng](#eventual-consistency)\n    * [Nhất quán mạnh](#strong-consistency)\n* [Các mẫu khả dụng](#availability-patterns)\n    * [Chuyển đổi dự phòng](#fail-over)\n    * [Sao chép dữ liệu](#replication)\n    * [Khả dụng theo các con số](#availability-in-numbers)\n* [Hệ thống tên miền](#domain-name-system)\n* [Mạng phân phối nội dung](#content-delivery-network)\n    * [Push CDN](#push-cdns)\n    * [Pull CDN](#pull-cdns)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "SsCtFlRr/vp/eIxy/AyEzj8HX0cy86MGCQv0qG8BEJ8=",
        "originContent": "* Add new sections",
        "translatedContent": "* Thêm các mục mới"
      },
      {
        "row": 2,
        "rowsha": "MgbTAOtFzyIz4BNeWpBJDVGUaPy03OwWW/NDniv8iKw=",
        "originContent": "* [Translate](https://github.com/donnemartin/system-design-primer/issues/28)",
        "translatedContent": "* [Dịch](https://github.com/donnemartin/system-design-primer/issues/28)"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "PAhTbZo1MIyFgr19zZb0QBFu5jXzCKuVXgsjvN9v43A=",
        "originContent": "Content that needs some polishing is placed [under development](#under-development).",
        "translatedContent": "Nội dung cần hoàn thiện thêm được đặt [đang phát triển](#under-development)."
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "MTipwkXdKqZVs4vSj9UbfT3bzAd9kyVp1MlT1yTZIwg=",
        "originContent": "Review the [Contributing Guidelines](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/CONTRIBUTING.md).",
        "translatedContent": "Xem lại [Hướng dẫn đóng góp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/CONTRIBUTING.md)."
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "l+eVTiaTEanah8q3SHdeQsdOipjWL1al1oGriL/pV10=",
        "originContent": "## Index of system design topics",
        "translatedContent": "## Mục lục các chủ đề thiết kế hệ thống"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "vszC2rRgz04c3FQVk3KKmkzMbBkQUF+isXl9SPFLJDs=",
        "originContent": "> Summaries of various system design topics, including pros and cons.  **Everything is a trade-off**.",
        "translatedContent": "> Tóm tắt các chủ đề thiết kế hệ thống khác nhau, bao gồm ưu và nhược điểm. **Mọi thứ đều là sự đánh đổi**."
      },
      {
        "row": 11,
        "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
        "originContent": ">",
        "translatedContent": ">"
      },
      {
        "row": 12,
        "rowsha": "N+lMsyK9eBW2WQyNd4PSYBFiVDgk9aawUGSamgefd9I=",
        "originContent": "> Each section contains links to more in-depth resources.",
        "translatedContent": "> Mỗi mục đều có liên kết đến các tài liệu chuyên sâu hơn."
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 15,
        "rowsha": "pNNmfFbsAp/MXo7RZEmE5XC27HubONv1ewXy+wQ3em0=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png\">"
      },
      {
        "row": 16,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 17,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "NAm+Yh5bEIUi2ReUdcW2qlyoKQRSlyq3bvUrU6es1ok=",
        "originContent": "* [System design topics: start here](#system-design-topics-start-here)",
        "translatedContent": "* [Chủ đề thiết kế hệ thống: bắt đầu tại đây](#system-design-topics-start-here)"
      },
      {
        "row": 20,
        "rowsha": "cGfo4uafv6Y1N0Z7NfSWYY26ptn5LTyUymM1g+9uUgY=",
        "originContent": "    * [Step 1: Review the scalability video lecture](#step-1-review-the-scalability-video-lecture)",
        "translatedContent": "    * [Bước 1: Xem lại bài giảng video về khả năng mở rộng](#step-1-review-the-scalability-video-lecture)"
      },
      {
        "row": 21,
        "rowsha": "b7hZ1PHTm+Pr9IbYhdTuWiLYomBJNAYJKkNP234ROgg=",
        "originContent": "    * [Step 2: Review the scalability article](#step-2-review-the-scalability-article)",
        "translatedContent": "    * [Bước 2: Xem lại bài viết về khả năng mở rộng](#step-2-review-the-scalability-article)"
      },
      {
        "row": 22,
        "rowsha": "1kjZ/tN6i17LZI8anxYhRkGobWb6WdNWthBllU8kmTM=",
        "originContent": "    * [Next steps](#next-steps)",
        "translatedContent": "    * [Các bước tiếp theo](#next-steps)"
      },
      {
        "row": 23,
        "rowsha": "NA1iYeDmHywFkHC/T5DsHPkbAoJVsmqJkCAWr14Ra3k=",
        "originContent": "* [Performance vs scalability](#performance-vs-scalability)",
        "translatedContent": "* [Hiệu năng so với khả năng mở rộng](#performance-vs-scalability)"
      },
      {
        "row": 24,
        "rowsha": "YkSB9feIkHCH732cHw6vhgOAAiCMO+ck+mLnkD1XwUI=",
        "originContent": "* [Latency vs throughput](#latency-vs-throughput)",
        "translatedContent": "* [Độ trễ so với thông lượng](#latency-vs-throughput)"
      },
      {
        "row": 25,
        "rowsha": "ooFGAHxINIA30greyD+eGMO2baag/4mWiz+oGof8sxU=",
        "originContent": "* [Availability vs consistency](#availability-vs-consistency)",
        "translatedContent": "* [Khả dụng so với tính nhất quán](#availability-vs-consistency)"
      },
      {
        "row": 26,
        "rowsha": "Q+3JWKgafhH32bAmblunuupZ0PV+eEYdBxcOAq6tatk=",
        "originContent": "    * [CAP theorem](#cap-theorem)",
        "translatedContent": "    * [Định lý CAP](#cap-theorem)"
      },
      {
        "row": 27,
        "rowsha": "7XzV7oxhHIvLznuiyhFn9DfJd2mCzrvGbgI0sVyMLlg=",
        "originContent": "        * [CP - consistency and partition tolerance](#cp---consistency-and-partition-tolerance)",
        "translatedContent": "        * [CP - tính nhất quán và chịu phân vùng](#cp---consistency-and-partition-tolerance)"
      },
      {
        "row": 28,
        "rowsha": "fGZJpa15rj/a5SxHqkD8YazLYvd/uYi2DDLVrZr4y3M=",
        "originContent": "        * [AP - availability and partition tolerance](#ap---availability-and-partition-tolerance)",
        "translatedContent": "        * [AP - khả dụng và chịu phân vùng](#ap---availability-and-partition-tolerance)"
      },
      {
        "row": 29,
        "rowsha": "/VMr/QdcBd0Bf5E1itt0waHGjDlIO3wo9ZMgmifIYeI=",
        "originContent": "* [Consistency patterns](#consistency-patterns)",
        "translatedContent": "* [Các mẫu nhất quán](#consistency-patterns)"
      },
      {
        "row": 30,
        "rowsha": "BvQFkODCRjD1GaWWXV3Dk/0/je0BJFOXQhHk9cAho0A=",
        "originContent": "    * [Weak consistency](#weak-consistency)",
        "translatedContent": "    * [Nhất quán yếu](#weak-consistency)"
      },
      {
        "row": 31,
        "rowsha": "mJntUp6dLJuoE8xVVmMUSMYFSJHMVhrX6cC3kEWOSw4=",
        "originContent": "    * [Eventual consistency](#eventual-consistency)",
        "translatedContent": "    * [Nhất quán cuối cùng](#eventual-consistency)"
      },
      {
        "row": 32,
        "rowsha": "NiS/FVcXfunIwRDvtKurhGLWDI8X6gmQLMuxKvP5FO8=",
        "originContent": "    * [Strong consistency](#strong-consistency)",
        "translatedContent": "    * [Nhất quán mạnh](#strong-consistency)"
      },
      {
        "row": 33,
        "rowsha": "NfF9k3//Tw0Ey52SttqFFrybbt4Uqh8ltKx1sLGuXk0=",
        "originContent": "* [Availability patterns](#availability-patterns)",
        "translatedContent": "* [Các mẫu khả dụng](#availability-patterns)"
      },
      {
        "row": 34,
        "rowsha": "F1JGTV8gU1mi/kH8pjmDkFySAWi4WQoH4QDapqvnc3Y=",
        "originContent": "    * [Fail-over](#fail-over)",
        "translatedContent": "    * [Chuyển đổi dự phòng](#fail-over)"
      },
      {
        "row": 35,
        "rowsha": "2tozvSOPmWuYrEr8TPzY5zYwvhIhbRhnb0TSyfKEFU8=",
        "originContent": "    * [Replication](#replication)",
        "translatedContent": "    * [Sao chép dữ liệu](#replication)"
      },
      {
        "row": 36,
        "rowsha": "6s5ScT5WxbHJHT5FFhY5EPLGztEOKXtsAoE8uQzZIZc=",
        "originContent": "    * [Availability in numbers](#availability-in-numbers)",
        "translatedContent": "    * [Khả dụng theo các con số](#availability-in-numbers)"
      },
      {
        "row": 37,
        "rowsha": "BiaxRDxU2Kxbx7BsRWzEk/zo1HeVnY9Mf5sYNYl7HTI=",
        "originContent": "* [Domain name system](#domain-name-system)",
        "translatedContent": "* [Hệ thống tên miền](#domain-name-system)"
      },
      {
        "row": 38,
        "rowsha": "1/CF0whL3trksUPc+ysqc/ctxo/a3yzgXeYJ7pzakpk=",
        "originContent": "* [Content delivery network](#content-delivery-network)",
        "translatedContent": "* [Mạng phân phối nội dung](#content-delivery-network)"
      },
      {
        "row": 39,
        "rowsha": "yvr9NAZhz+gNdEjqg2tyssQEJXIxXjFP1sHCr1YkWMY=",
        "originContent": "    * [Push CDNs](#push-cdns)",
        "translatedContent": "    * [Push CDN](#push-cdns)"
      },
      {
        "row": 40,
        "rowsha": "jL4KowX/zvhAUGtmljHsn6UkIqRqfoP1VBmTrZFU3JU=",
        "originContent": "    * [Pull CDNs](#pull-cdns)",
        "translatedContent": "    * [Pull CDN](#pull-cdns)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 5,
    "Content": "* [Load balancer](#load-balancer)\n    * [Active-passive](#active-passive)\n    * [Active-active](#active-active)\n    * [Layer 4 load balancing](#layer-4-load-balancing)\n    * [Layer 7 load balancing](#layer-7-load-balancing)\n    * [Horizontal scaling](#horizontal-scaling)\n* [Reverse proxy (web server)](#reverse-proxy-web-server)\n    * [Load balancer vs reverse proxy](#load-balancer-vs-reverse-proxy)\n* [Application layer](#application-layer)\n    * [Microservices](#microservices)\n    * [Service discovery](#service-discovery)\n* [Database](#database)\n    * [Relational database management system (RDBMS)](#relational-database-management-system-rdbms)\n        * [Master-slave replication](#master-slave-replication)\n        * [Master-master replication](#master-master-replication)\n        * [Federation](#federation)\n        * [Sharding](#sharding)\n        * [Denormalization](#denormalization)\n        * [SQL tuning](#sql-tuning)\n    * [NoSQL](#nosql)\n        * [Key-value store](#key-value-store)\n        * [Document store](#document-store)\n        * [Wide column store](#wide-column-store)\n        * [Graph Database](#graph-database)\n    * [SQL or NoSQL](#sql-or-nosql)\n* [Cache](#cache)\n    * [Client caching](#client-caching)\n    * [CDN caching](#cdn-caching)\n    * [Web server caching](#web-server-caching)\n    * [Database caching](#database-caching)\n    * [Application caching](#application-caching)\n    * [Caching at the database query level](#caching-at-the-database-query-level)\n    * [Caching at the object level](#caching-at-the-object-level)\n    * [When to update the cache](#when-to-update-the-cache)\n        * [Cache-aside](#cache-aside)\n        * [Write-through](#write-through)\n        * [Write-behind (write-back)](#write-behind-write-back)\n        * [Refresh-ahead](#refresh-ahead)\n* [Asynchronism](#asynchronism)\n    * [Message queues](#message-queues)",
    "ContentSha": "asKFjZ3AfCGQPD58skhfkEeJZEI9zP/H+h/3PnvCFDY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Bộ cân bằng tải](#load-balancer)\n    * [Hoạt động chủ động - bị động](#active-passive)\n    * [Hoạt động chủ động - chủ động](#active-active)\n    * [Cân bằng tải tầng 4](#layer-4-load-balancing)\n    * [Cân bằng tải tầng 7](#layer-7-load-balancing)\n    * [Mở rộng theo chiều ngang](#horizontal-scaling)\n* [Proxy đảo chiều (máy chủ web)](#reverse-proxy-web-server)\n    * [Bộ cân bằng tải vs proxy đảo chiều](#load-balancer-vs-reverse-proxy)\n* [Tầng ứng dụng](#application-layer)\n    * [Kiến trúc vi dịch vụ](#microservices)\n    * [Khám phá dịch vụ](#service-discovery)\n* [Cơ sở dữ liệu](#database)\n    * [Hệ quản trị cơ sở dữ liệu quan hệ (RDBMS)](#relational-database-management-system-rdbms)\n        * [Sao chép chủ-tớ](#master-slave-replication)\n        * [Sao chép chủ-chủ](#master-master-replication)\n        * [Liên kết liên bang](#federation)\n        * [Phân mảnh dữ liệu](#sharding)\n        * [Phi chuẩn hóa dữ liệu](#denormalization)\n        * [Tối ưu hóa SQL](#sql-tuning)\n    * [NoSQL](#nosql)\n        * [Lưu trữ dạng khóa-giá trị](#key-value-store)\n        * [Lưu trữ tài liệu](#document-store)\n        * [Lưu trữ cột rộng](#wide-column-store)\n        * [Cơ sở dữ liệu đồ thị](#graph-database)\n    * [SQL hay NoSQL](#sql-or-nosql)\n* [Bộ nhớ đệm](#cache)\n    * [Bộ nhớ đệm phía khách hàng](#client-caching)\n    * [Bộ nhớ đệm CDN](#cdn-caching)\n    * [Bộ nhớ đệm máy chủ web](#web-server-caching)\n    * [Bộ nhớ đệm cơ sở dữ liệu](#database-caching)\n    * [Bộ nhớ đệm ứng dụng](#application-caching)\n    * [Bộ nhớ đệm ở mức truy vấn cơ sở dữ liệu](#caching-at-the-database-query-level)\n    * [Bộ nhớ đệm ở mức đối tượng](#caching-at-the-object-level)\n    * [Khi nào cập nhật bộ nhớ đệm](#when-to-update-the-cache)\n        * [Cache-aside](#cache-aside)\n        * [Ghi-thẳng](#write-through)\n        * [Ghi-ngầm (ghi-lại)](#write-behind-write-back)\n        * [Làm mới trước](#refresh-ahead)\n* [Tính phi đồng bộ](#asynchronism)\n    * [Hàng đợi tin nhắn](#message-queues)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "h4PaRYGBSsT8meOlIuNoX8Wbd5CzE/GhZl0r+cKGMSs=",
        "originContent": "* [Load balancer](#load-balancer)",
        "translatedContent": "* [Bộ cân bằng tải](#load-balancer)"
      },
      {
        "row": 2,
        "rowsha": "+SevMRb7w3cZvaWqfHPv7p2NvBglbLiZzNUs8lfXTnU=",
        "originContent": "    * [Active-passive](#active-passive)",
        "translatedContent": "    * [Hoạt động chủ động - bị động](#active-passive)"
      },
      {
        "row": 3,
        "rowsha": "7tF73nPerlzwU8S7LjTC/L60UtInotqIx6cPZRmdBtk=",
        "originContent": "    * [Active-active](#active-active)",
        "translatedContent": "    * [Hoạt động chủ động - chủ động](#active-active)"
      },
      {
        "row": 4,
        "rowsha": "5yu5hG4jzivgG60akLqWDseYTDQJgL9UD21Jo9IpZoQ=",
        "originContent": "    * [Layer 4 load balancing](#layer-4-load-balancing)",
        "translatedContent": "    * [Cân bằng tải tầng 4](#layer-4-load-balancing)"
      },
      {
        "row": 5,
        "rowsha": "8fapUdLm8nxXa6BOpkJJ+JXd3LEFlQ1eFYWbTF4d2fY=",
        "originContent": "    * [Layer 7 load balancing](#layer-7-load-balancing)",
        "translatedContent": "    * [Cân bằng tải tầng 7](#layer-7-load-balancing)"
      },
      {
        "row": 6,
        "rowsha": "w1ZAwXkT6fhv726mwTGEnMydMKmLPalZ0CJUOWftwNI=",
        "originContent": "    * [Horizontal scaling](#horizontal-scaling)",
        "translatedContent": "    * [Mở rộng theo chiều ngang](#horizontal-scaling)"
      },
      {
        "row": 7,
        "rowsha": "xCJYMbivh6vFtHRTQoGIvfMUukV063SI0DsJyzwB3Q8=",
        "originContent": "* [Reverse proxy (web server)](#reverse-proxy-web-server)",
        "translatedContent": "* [Proxy đảo chiều (máy chủ web)](#reverse-proxy-web-server)"
      },
      {
        "row": 8,
        "rowsha": "I7J14g5xS6GsffDPwkGwahx+faUg5QPSYIrk+vt9u20=",
        "originContent": "    * [Load balancer vs reverse proxy](#load-balancer-vs-reverse-proxy)",
        "translatedContent": "    * [Bộ cân bằng tải vs proxy đảo chiều](#load-balancer-vs-reverse-proxy)"
      },
      {
        "row": 9,
        "rowsha": "8mMWGVXBx3lHTsOuc6gKrz4YEOu1aqmIo01A+bpGcRw=",
        "originContent": "* [Application layer](#application-layer)",
        "translatedContent": "* [Tầng ứng dụng](#application-layer)"
      },
      {
        "row": 10,
        "rowsha": "5psy0oT4gwDQ5RN4aCrev6Orwxq0OAn6t5SkO7XVYGo=",
        "originContent": "    * [Microservices](#microservices)",
        "translatedContent": "    * [Kiến trúc vi dịch vụ](#microservices)"
      },
      {
        "row": 11,
        "rowsha": "TjwXaicvw8HbjJT6H6LfhnOVGMryolqqifhRy+0M4n0=",
        "originContent": "    * [Service discovery](#service-discovery)",
        "translatedContent": "    * [Khám phá dịch vụ](#service-discovery)"
      },
      {
        "row": 12,
        "rowsha": "Lfh6Z2jhFps37PV/hUbb+WzAZNZ1dwcCks1tCMb8MN0=",
        "originContent": "* [Database](#database)",
        "translatedContent": "* [Cơ sở dữ liệu](#database)"
      },
      {
        "row": 13,
        "rowsha": "hF52lb4igNaoA/PAsTVafWk3LTScOc7THSKwjUxnhHs=",
        "originContent": "    * [Relational database management system (RDBMS)](#relational-database-management-system-rdbms)",
        "translatedContent": "    * [Hệ quản trị cơ sở dữ liệu quan hệ (RDBMS)](#relational-database-management-system-rdbms)"
      },
      {
        "row": 14,
        "rowsha": "rSnnXzDdS9ntZrIKTFsksr4/kERyfNvh/6XEuzIILAc=",
        "originContent": "        * [Master-slave replication](#master-slave-replication)",
        "translatedContent": "        * [Sao chép chủ-tớ](#master-slave-replication)"
      },
      {
        "row": 15,
        "rowsha": "zA8jBiusKopDjLCL9hYjKiHQHU3ryiaz2PpEk1Lc0Ag=",
        "originContent": "        * [Master-master replication](#master-master-replication)",
        "translatedContent": "        * [Sao chép chủ-chủ](#master-master-replication)"
      },
      {
        "row": 16,
        "rowsha": "Jf0YXoTUgL80zEAHtntOVj/O8Us8sCsPduCUZE/T1/s=",
        "originContent": "        * [Federation](#federation)",
        "translatedContent": "        * [Liên kết liên bang](#federation)"
      },
      {
        "row": 17,
        "rowsha": "MDtqFiyoo0+WuihrLP2kDMOt5+/Z5EYLps1TsAulHP8=",
        "originContent": "        * [Sharding](#sharding)",
        "translatedContent": "        * [Phân mảnh dữ liệu](#sharding)"
      },
      {
        "row": 18,
        "rowsha": "oy4mtQy7Gjs28d4nInWJcCImDbf5DjMUNMWZYv1bgaM=",
        "originContent": "        * [Denormalization](#denormalization)",
        "translatedContent": "        * [Phi chuẩn hóa dữ liệu](#denormalization)"
      },
      {
        "row": 19,
        "rowsha": "goccNEeqpVP3w5GZdJNs9Xm0cdgs4rcfeOzrIsB0/nU=",
        "originContent": "        * [SQL tuning](#sql-tuning)",
        "translatedContent": "        * [Tối ưu hóa SQL](#sql-tuning)"
      },
      {
        "row": 20,
        "rowsha": "47aybAiLhEpV9iqFw8Ic9+GM/IdFFOM7F/XmZn9kYtg=",
        "originContent": "    * [NoSQL](#nosql)",
        "translatedContent": "    * [NoSQL](#nosql)"
      },
      {
        "row": 21,
        "rowsha": "j5iSbdulQSoYnvxDS7OsLHLZClSnw479K8YIirNMG1Y=",
        "originContent": "        * [Key-value store](#key-value-store)",
        "translatedContent": "        * [Lưu trữ dạng khóa-giá trị](#key-value-store)"
      },
      {
        "row": 22,
        "rowsha": "pGqiU7KuKgkyw/tV92znudH6ZI1C4VFk3e393f/sD0E=",
        "originContent": "        * [Document store](#document-store)",
        "translatedContent": "        * [Lưu trữ tài liệu](#document-store)"
      },
      {
        "row": 23,
        "rowsha": "lfwnBi0qMofxek43EEvqfYhFYFCRcGfTsQAQt1I2Qd4=",
        "originContent": "        * [Wide column store](#wide-column-store)",
        "translatedContent": "        * [Lưu trữ cột rộng](#wide-column-store)"
      },
      {
        "row": 24,
        "rowsha": "NJqE5BFiqBHD0SPLX1auP7/BruL0LDThaFImmxxPOd8=",
        "originContent": "        * [Graph Database](#graph-database)",
        "translatedContent": "        * [Cơ sở dữ liệu đồ thị](#graph-database)"
      },
      {
        "row": 25,
        "rowsha": "wA02P+LM/69V5LkLytWi+11kFXaVK2OGxFYnKO/bqgE=",
        "originContent": "    * [SQL or NoSQL](#sql-or-nosql)",
        "translatedContent": "    * [SQL hay NoSQL](#sql-or-nosql)"
      },
      {
        "row": 26,
        "rowsha": "ZKJiW5ZRYlUKyV+E4QAa2PHj5+Z6sHOx+qtFigmDrHo=",
        "originContent": "* [Cache](#cache)",
        "translatedContent": "* [Bộ nhớ đệm](#cache)"
      },
      {
        "row": 27,
        "rowsha": "1QPzZSw7wrI93fNTYYbBCCTAB14RlAr1QGe3+Qf5TD4=",
        "originContent": "    * [Client caching](#client-caching)",
        "translatedContent": "    * [Bộ nhớ đệm phía khách hàng](#client-caching)"
      },
      {
        "row": 28,
        "rowsha": "st60rn6urYVlOs42sWWjhpP15+Zln+cfJ1aiHU6Akj0=",
        "originContent": "    * [CDN caching](#cdn-caching)",
        "translatedContent": "    * [Bộ nhớ đệm CDN](#cdn-caching)"
      },
      {
        "row": 29,
        "rowsha": "HfIacaIFl6tDsYeuwcoT55L12QQhpWBCNWvcIy48SsA=",
        "originContent": "    * [Web server caching](#web-server-caching)",
        "translatedContent": "    * [Bộ nhớ đệm máy chủ web](#web-server-caching)"
      },
      {
        "row": 30,
        "rowsha": "Ozq+0s9PEpS+iCCY335toasf7KjhXODV4C86e5gEkrM=",
        "originContent": "    * [Database caching](#database-caching)",
        "translatedContent": "    * [Bộ nhớ đệm cơ sở dữ liệu](#database-caching)"
      },
      {
        "row": 31,
        "rowsha": "pySXRtIe5AUAvWKe9H65D3fulHVNCSI7Nfo6u7JmLts=",
        "originContent": "    * [Application caching](#application-caching)",
        "translatedContent": "    * [Bộ nhớ đệm ứng dụng](#application-caching)"
      },
      {
        "row": 32,
        "rowsha": "um6/V9vSyAVdYrqQIbSfx4haMfAIYh61/D5Z0560QoM=",
        "originContent": "    * [Caching at the database query level](#caching-at-the-database-query-level)",
        "translatedContent": "    * [Bộ nhớ đệm ở mức truy vấn cơ sở dữ liệu](#caching-at-the-database-query-level)"
      },
      {
        "row": 33,
        "rowsha": "8wuvIZ5j5seKmPi37JcfbScYnCQ5VJwMpRi7CiWnGYQ=",
        "originContent": "    * [Caching at the object level](#caching-at-the-object-level)",
        "translatedContent": "    * [Bộ nhớ đệm ở mức đối tượng](#caching-at-the-object-level)"
      },
      {
        "row": 34,
        "rowsha": "vGl/Qi61KJeoEkOEMotuZ0u9d0VSkRoU9AM4zmfMvQw=",
        "originContent": "    * [When to update the cache](#when-to-update-the-cache)",
        "translatedContent": "    * [Khi nào cập nhật bộ nhớ đệm](#when-to-update-the-cache)"
      },
      {
        "row": 35,
        "rowsha": "ITsFPznfYyxpbeRcoO482yWsaW+YN5YvR1vJPZRLI2c=",
        "originContent": "        * [Cache-aside](#cache-aside)",
        "translatedContent": "        * [Cache-aside](#cache-aside)"
      },
      {
        "row": 36,
        "rowsha": "z7zVU3t05MK7T8O6XYHjbUMB7vXzFwERe2PYvyKUDE4=",
        "originContent": "        * [Write-through](#write-through)",
        "translatedContent": "        * [Ghi-thẳng](#write-through)"
      },
      {
        "row": 37,
        "rowsha": "kNZqKN+WUwHb1zBqFraj47wKZOY9WLhnt7b1MTgng/0=",
        "originContent": "        * [Write-behind (write-back)](#write-behind-write-back)",
        "translatedContent": "        * [Ghi-ngầm (ghi-lại)](#write-behind-write-back)"
      },
      {
        "row": 38,
        "rowsha": "/eB/o65GSkl+AEwb/HVpLsDrbY+jogBd5YDUbK8yMMs=",
        "originContent": "        * [Refresh-ahead](#refresh-ahead)",
        "translatedContent": "        * [Làm mới trước](#refresh-ahead)"
      },
      {
        "row": 39,
        "rowsha": "zr1RycAvrfVcaAqj8l97VrQ6BIPurojyr3SGsxs2hvs=",
        "originContent": "* [Asynchronism](#asynchronism)",
        "translatedContent": "* [Tính phi đồng bộ](#asynchronism)"
      },
      {
        "row": 40,
        "rowsha": "ngYSKeGfsWtFoPyuKBLbi0kQWznAYU5siwvzycdqVU4=",
        "originContent": "    * [Message queues](#message-queues)",
        "translatedContent": "    * [Hàng đợi tin nhắn](#message-queues)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 6,
    "Content": "    * [Task queues](#task-queues)\n    * [Back pressure](#back-pressure)\n* [Communication](#communication)\n    * [Transmission control protocol (TCP)](#transmission-control-protocol-tcp)\n    * [User datagram protocol (UDP)](#user-datagram-protocol-udp)\n    * [Remote procedure call (RPC)](#remote-procedure-call-rpc)\n    * [Representational state transfer (REST)](#representational-state-transfer-rest)\n* [Security](#security)\n* [Appendix](#appendix)\n    * [Powers of two table](#powers-of-two-table)\n    * [Latency numbers every programmer should know](#latency-numbers-every-programmer-should-know)\n    * [Additional system design interview questions](#additional-system-design-interview-questions)\n    * [Real world architectures](#real-world-architectures)\n    * [Company architectures](#company-architectures)\n    * [Company engineering blogs](#company-engineering-blogs)\n* [Under development](#under-development)\n* [Credits](#credits)\n* [Contact info](#contact-info)\n* [License](#license)\n\n## Study guide\n\n> Suggested topics to review based on your interview timeline (short, medium, long).\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/OfVllex.png)\n\n**Q: For interviews, do I need to know everything here?**\n\n**A: No, you don't need to know everything here to prepare for the interview**.\n\nWhat you are asked in an interview depends on variables such as:\n\n* How much experience you have\n* What your technical background is\n* What positions you are interviewing for\n* Which companies you are interviewing with\n* Luck\n\nMore experienced candidates are generally expected to know more about system design.  Architects or team leads might be expected to know more than individual contributors.  Top tech companies are likely to have one or more design interview rounds.\n",
    "ContentSha": "ATTNyUBhYGX23A6dK9YO6hNcpGiZGZByeStHZczOceg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "    * [Hàng đợi tác vụ](#task-queues)\n    * [Áp lực ngược](#back-pressure)\n* [Giao tiếp](#communication)\n    * [Giao thức điều khiển truyền tải (TCP)](#transmission-control-protocol-tcp)\n    * [Giao thức datagram người dùng (UDP)](#user-datagram-protocol-udp)\n    * [Gọi thủ tục từ xa (RPC)](#remote-procedure-call-rpc)\n    * [Chuyển trạng thái đại diện (REST)](#representational-state-transfer-rest)\n* [Bảo mật](#security)\n* [Phụ lục](#appendix)\n    * [Bảng lũy thừa của hai](#powers-of-two-table)\n    * [Các số liệu độ trễ mà mọi lập trình viên nên biết](#latency-numbers-every-programmer-should-know)\n    * [Các câu hỏi phỏng vấn thiết kế hệ thống bổ sung](#additional-system-design-interview-questions)\n    * [Kiến trúc thực tế](#real-world-architectures)\n    * [Kiến trúc công ty](#company-architectures)\n    * [Blog kỹ thuật công ty](#company-engineering-blogs)\n* [Đang phát triển](#under-development)\n* [Ghi nhận](#credits)\n* [Thông tin liên hệ](#contact-info)\n* [Giấy phép](#license)\n\n## Hướng dẫn học tập\n\n> Các chủ đề gợi ý để ôn tập dựa trên thời gian phỏng vấn của bạn (ngắn, trung bình, dài).\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/OfVllex.png)\n\n**Q: Để phỏng vấn, tôi có cần biết tất cả mọi thứ ở đây không?**\n\n**A: Không, bạn không cần phải biết tất cả mọi thứ ở đây để chuẩn bị cho buổi phỏng vấn**.\n\nNhững gì bạn được hỏi trong buổi phỏng vấn phụ thuộc vào các biến số như:\n\n* Bạn có bao nhiêu kinh nghiệm\n* Nền tảng kỹ thuật của bạn là gì\n* Bạn đang phỏng vấn cho vị trí nào\n* Bạn đang phỏng vấn với công ty nào\n* May mắn\n\nCác ứng viên có kinh nghiệm thường được kỳ vọng biết nhiều hơn về thiết kế hệ thống.  Kiến trúc sư hoặc trưởng nhóm có thể được yêu cầu biết nhiều hơn các thành viên cá nhân.  Các công ty công nghệ hàng đầu thường có một hoặc nhiều vòng phỏng vấn về thiết kế.\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "O6TBBxTsu3yRea+KD1G4fld0434dM8LRo/xgTlthayc=",
        "originContent": "    * [Task queues](#task-queues)",
        "translatedContent": "    * [Hàng đợi tác vụ](#task-queues)"
      },
      {
        "row": 2,
        "rowsha": "UrCvT4TYDFM+wTrDkf2ZRw0jR/5ELcsNaHGuacem2gQ=",
        "originContent": "    * [Back pressure](#back-pressure)",
        "translatedContent": "    * [Áp lực ngược](#back-pressure)"
      },
      {
        "row": 3,
        "rowsha": "UUd37MwuOeEo9lc7r34dQ7IJVLBzjeT8a2xlsOw0Ix4=",
        "originContent": "* [Communication](#communication)",
        "translatedContent": "* [Giao tiếp](#communication)"
      },
      {
        "row": 4,
        "rowsha": "io62RFhf0tjvdSFLhMHVT2x3q9n1r9TDZME9Ndj5O+U=",
        "originContent": "    * [Transmission control protocol (TCP)](#transmission-control-protocol-tcp)",
        "translatedContent": "    * [Giao thức điều khiển truyền tải (TCP)](#transmission-control-protocol-tcp)"
      },
      {
        "row": 5,
        "rowsha": "R1NkIb/fntCNQpKX0IoKqXukYjxw99w2QlqBaya1fqg=",
        "originContent": "    * [User datagram protocol (UDP)](#user-datagram-protocol-udp)",
        "translatedContent": "    * [Giao thức datagram người dùng (UDP)](#user-datagram-protocol-udp)"
      },
      {
        "row": 6,
        "rowsha": "I2t/fHZ28vdN/2ND7hDJZbu2QPELe9UstISo3dL6LV0=",
        "originContent": "    * [Remote procedure call (RPC)](#remote-procedure-call-rpc)",
        "translatedContent": "    * [Gọi thủ tục từ xa (RPC)](#remote-procedure-call-rpc)"
      },
      {
        "row": 7,
        "rowsha": "Ba8C1OKWxXEo4fBLiKU/mP3ajlM2m9BeD0n2y73g0UU=",
        "originContent": "    * [Representational state transfer (REST)](#representational-state-transfer-rest)",
        "translatedContent": "    * [Chuyển trạng thái đại diện (REST)](#representational-state-transfer-rest)"
      },
      {
        "row": 8,
        "rowsha": "oq278APmo1WDG0a5/vZcIyBMqNT8pDqxOS4Ke6sAbHE=",
        "originContent": "* [Security](#security)",
        "translatedContent": "* [Bảo mật](#security)"
      },
      {
        "row": 9,
        "rowsha": "ff/6f0MtGHzmKEB+lY9ekx2HPxp0Qg/O7ANiXOo2kSw=",
        "originContent": "* [Appendix](#appendix)",
        "translatedContent": "* [Phụ lục](#appendix)"
      },
      {
        "row": 10,
        "rowsha": "AwfW+Wqxu32D+DBal/PNaY9F96/dVARQ1nObwFrJWCU=",
        "originContent": "    * [Powers of two table](#powers-of-two-table)",
        "translatedContent": "    * [Bảng lũy thừa của hai](#powers-of-two-table)"
      },
      {
        "row": 11,
        "rowsha": "C/pqTblctNi9RCuIC3u1t0N2vg4eEjh1k/3siW05KQY=",
        "originContent": "    * [Latency numbers every programmer should know](#latency-numbers-every-programmer-should-know)",
        "translatedContent": "    * [Các số liệu độ trễ mà mọi lập trình viên nên biết](#latency-numbers-every-programmer-should-know)"
      },
      {
        "row": 12,
        "rowsha": "WtwxC6ASWbl1bkZGpyWq/zx2mACBAXg1duymuhroZyE=",
        "originContent": "    * [Additional system design interview questions](#additional-system-design-interview-questions)",
        "translatedContent": "    * [Các câu hỏi phỏng vấn thiết kế hệ thống bổ sung](#additional-system-design-interview-questions)"
      },
      {
        "row": 13,
        "rowsha": "7/ATFxcicSoIcmNw0DAArF3OJc0pQnWwu5B/iL4F/FY=",
        "originContent": "    * [Real world architectures](#real-world-architectures)",
        "translatedContent": "    * [Kiến trúc thực tế](#real-world-architectures)"
      },
      {
        "row": 14,
        "rowsha": "1eSLWlu9SYGwGW0AaaTzCSNqQ8p03y4UxuwWxQJNcCg=",
        "originContent": "    * [Company architectures](#company-architectures)",
        "translatedContent": "    * [Kiến trúc công ty](#company-architectures)"
      },
      {
        "row": 15,
        "rowsha": "1bI/gLnWRhVsqogNuH3g+AwCB3hvrTmSX4xquwtPBFs=",
        "originContent": "    * [Company engineering blogs](#company-engineering-blogs)",
        "translatedContent": "    * [Blog kỹ thuật công ty](#company-engineering-blogs)"
      },
      {
        "row": 16,
        "rowsha": "dTOO2RtvdkGmX2HXQH1DoKsL14wdsZJzSXaPXYGKcrM=",
        "originContent": "* [Under development](#under-development)",
        "translatedContent": "* [Đang phát triển](#under-development)"
      },
      {
        "row": 17,
        "rowsha": "YUXtm7kEjiRCwkV06yM8SYdamuU7Z5IdpxADiVeAfIg=",
        "originContent": "* [Credits](#credits)",
        "translatedContent": "* [Ghi nhận](#credits)"
      },
      {
        "row": 18,
        "rowsha": "J4G0+7NptorR63ExXbXrIyRMBnY5VmIay4XGYhpFXyg=",
        "originContent": "* [Contact info](#contact-info)",
        "translatedContent": "* [Thông tin liên hệ](#contact-info)"
      },
      {
        "row": 19,
        "rowsha": "9gXKKKb5FUd9fO2TD3aeraF4h1bOfl2toIPXJSxUxlw=",
        "originContent": "* [License](#license)",
        "translatedContent": "* [Giấy phép](#license)"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "pkA29PuoVCQYq4GoB2nRj+0O3rox4V+hbAii1lgeS+A=",
        "originContent": "## Study guide",
        "translatedContent": "## Hướng dẫn học tập"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "Q78kczp0KdJN6QQTqgSg/ROsm+L2ETHNTlBUI13TbwI=",
        "originContent": "> Suggested topics to review based on your interview timeline (short, medium, long).",
        "translatedContent": "> Các chủ đề gợi ý để ôn tập dựa trên thời gian phỏng vấn của bạn (ngắn, trung bình, dài)."
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "w/WdknbLjXs44iZhY7FdPLN1IV5zaVcCSV7W/Bl3L1M=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/OfVllex.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/OfVllex.png)"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "/cmnXl2Jxz0I2rB2LZxPGjII65j+L433/ejs+afLIIw=",
        "originContent": "**Q: For interviews, do I need to know everything here?**",
        "translatedContent": "**Q: Để phỏng vấn, tôi có cần biết tất cả mọi thứ ở đây không?**"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "KiIfXE+Ejcpuax4zdrNsjjvlP+x+3g3+3g/BRZ+cuUE=",
        "originContent": "**A: No, you don't need to know everything here to prepare for the interview**.",
        "translatedContent": "**A: Không, bạn không cần phải biết tất cả mọi thứ ở đây để chuẩn bị cho buổi phỏng vấn**."
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "SEgrI4VTYzTth28Bo7zrD2L6iulYNtlYKOzDbX1hNVk=",
        "originContent": "What you are asked in an interview depends on variables such as:",
        "translatedContent": "Những gì bạn được hỏi trong buổi phỏng vấn phụ thuộc vào các biến số như:"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "DyOrEhJ4UB8J7BvfLZD1jgDifNI81bUuQxbel5zSXOc=",
        "originContent": "* How much experience you have",
        "translatedContent": "* Bạn có bao nhiêu kinh nghiệm"
      },
      {
        "row": 34,
        "rowsha": "uVZgAo6EsfEaAGXSN/yrAEJY9oQ8sapayEDid9Z1VkU=",
        "originContent": "* What your technical background is",
        "translatedContent": "* Nền tảng kỹ thuật của bạn là gì"
      },
      {
        "row": 35,
        "rowsha": "0uNitbVaITxnPuiMkEPHrnS6k2ERQgluU9XvO/WpRDM=",
        "originContent": "* What positions you are interviewing for",
        "translatedContent": "* Bạn đang phỏng vấn cho vị trí nào"
      },
      {
        "row": 36,
        "rowsha": "uGoBghIUM+lnf4dp6dRE+KdoTaao3ICICYQ3ekv33VY=",
        "originContent": "* Which companies you are interviewing with",
        "translatedContent": "* Bạn đang phỏng vấn với công ty nào"
      },
      {
        "row": 37,
        "rowsha": "VkiuZxZEumFuqlmHNADyzkijscMW3TgNFUWGb3HUvYM=",
        "originContent": "* Luck",
        "translatedContent": "* May mắn"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "NlZ76DoNuWHLZ56TrHW+8Jop5zRsIi5eVNw0tKfWwXM=",
        "originContent": "More experienced candidates are generally expected to know more about system design.  Architects or team leads might be expected to know more than individual contributors.  Top tech companies are likely to have one or more design interview rounds.",
        "translatedContent": "Các ứng viên có kinh nghiệm thường được kỳ vọng biết nhiều hơn về thiết kế hệ thống.  Kiến trúc sư hoặc trưởng nhóm có thể được yêu cầu biết nhiều hơn các thành viên cá nhân.  Các công ty công nghệ hàng đầu thường có một hoặc nhiều vòng phỏng vấn về thiết kế."
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 7,
    "Content": "Start broad and go deeper in a few areas.  It helps to know a little about various key system design topics.  Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.\n\n* **Short timeline** - Aim for **breadth** with system design topics.  Practice by solving **some** interview questions.\n* **Medium timeline** - Aim for **breadth** and **some depth** with system design topics.  Practice by solving **many** interview questions.\n* **Long timeline** - Aim for **breadth** and **more depth** with system design topics.  Practice by solving **most** interview questions.\n\n| | Short | Medium | Long |\n|---|---|---|---|\n| Read through the [System design topics](#index-of-system-design-topics) to get a broad understanding of how systems work | :+1: | :+1: | :+1: |\n| Read through a few articles in the [Company engineering blogs](#company-engineering-blogs) for the companies you are interviewing with | :+1: | :+1: | :+1: |\n| Read through a few [Real world architectures](#real-world-architectures) | :+1: | :+1: | :+1: |\n| Review [How to approach a system design interview question](#how-to-approach-a-system-design-interview-question) | :+1: | :+1: | :+1: |\n| Work through [System design interview questions with solutions](#system-design-interview-questions-with-solutions) | Some | Many | Most |\n| Work through [Object-oriented design interview questions with solutions](#object-oriented-design-interview-questions-with-solutions) | Some | Many | Most |\n| Review [Additional system design interview questions](#additional-system-design-interview-questions) | Some | Many | Most |\n\n## How to approach a system design interview question\n\n> How to tackle a system design interview question.\n\nThe system design interview is an **open-ended conversation**.  You are expected to lead it.\n\nYou can use the following steps to guide the discussion.  To help solidify this process, work through the [System design interview questions with solutions](#system-design-interview-questions-with-solutions) section using the following steps.\n\n### Step 1: Outline use cases, constraints, and assumptions\n\nGather requirements and scope the problem.  Ask questions to clarify use cases and constraints.  Discuss assumptions.\n\n* Who is going to use it?\n* How are they going to use it?\n* How many users are there?\n* What does the system do?\n* What are the inputs and outputs of the system?\n* How much data do we expect to handle?\n* How many requests per second do we expect?\n* What is the expected read to write ratio?\n\n### Step 2: Create a high level design\n\nOutline a high level design with all important components.",
    "ContentSha": "0rdWLVZbH/nPM3xkHGejRJHpsR4f8urb5LkuDcPAbZM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Bắt đầu từ tổng quan và đi sâu vào một vài lĩnh vực nhất định. Việc biết một chút về các chủ đề thiết kế hệ thống quan trọng sẽ rất hữu ích. Điều chỉnh hướng dẫn dưới đây dựa trên thời gian, kinh nghiệm, vị trí bạn đang phỏng vấn và công ty bạn ứng tuyển.\n\n* **Thời gian ngắn** - Nhắm đến **độ rộng** với các chủ đề thiết kế hệ thống. Luyện tập bằng cách giải **một số** câu hỏi phỏng vấn.\n* **Thời gian trung bình** - Nhắm đến **độ rộng** và **một số chiều sâu** với các chủ đề thiết kế hệ thống. Luyện tập bằng cách giải **nhiều** câu hỏi phỏng vấn.\n* **Thời gian dài** - Nhắm đến **độ rộng** và **nhiều chiều sâu hơn** với các chủ đề thiết kế hệ thống. Luyện tập bằng cách giải **hầu hết** các câu hỏi phỏng vấn.\n\n| | Ngắn | Trung bình | Dài |\n|---|---|---|---|\n| Đọc qua [Các chủ đề thiết kế hệ thống](#index-of-system-design-topics) để hiểu tổng quan về cách hệ thống hoạt động | :+1: | :+1: | :+1: |\n| Đọc một vài bài viết trong [Blog kỹ thuật của công ty](#company-engineering-blogs) tại các công ty bạn đang ứng tuyển | :+1: | :+1: | :+1: |\n| Đọc qua một số [Kiến trúc thực tế](#real-world-architectures) | :+1: | :+1: | :+1: |\n| Xem lại [Cách tiếp cận câu hỏi phỏng vấn thiết kế hệ thống](#how-to-approach-a-system-design-interview-question) | :+1: | :+1: | :+1: |\n| Giải [Câu hỏi phỏng vấn thiết kế hệ thống có đáp án](#system-design-interview-questions-with-solutions) | Một số | Nhiều | Hầu hết |\n| Giải [Câu hỏi phỏng vấn thiết kế hướng đối tượng có đáp án](#object-oriented-design-interview-questions-with-solutions) | Một số | Nhiều | Hầu hết |\n| Xem lại [Câu hỏi phỏng vấn thiết kế hệ thống bổ sung](#additional-system-design-interview-questions) | Một số | Nhiều | Hầu hết |\n\n## Cách tiếp cận câu hỏi phỏng vấn thiết kế hệ thống\n\n> Cách giải quyết một câu hỏi phỏng vấn thiết kế hệ thống.\n\nPhỏng vấn thiết kế hệ thống là một **cuộc trò chuyện mở**. Bạn được mong đợi sẽ dẫn dắt buổi phỏng vấn.\n\nBạn có thể sử dụng các bước sau để định hướng cuộc thảo luận. Để củng cố quy trình này, hãy luyện tập với [Câu hỏi phỏng vấn thiết kế hệ thống có đáp án](#system-design-interview-questions-with-solutions) sử dụng các bước sau.\n\n### Bước 1: Phác thảo các trường hợp sử dụng, ràng buộc, và giả định\n\nThu thập yêu cầu và xác định phạm vi vấn đề. Đặt câu hỏi để làm rõ trường hợp sử dụng và các ràng buộc. Thảo luận về các giả định.\n\n* Ai sẽ sử dụng nó?\n* Họ sẽ sử dụng nó như thế nào?\n* Có bao nhiêu người dùng?\n* Hệ thống sẽ làm gì?\n* Đầu vào và đầu ra của hệ thống là gì?\n* Dự kiến sẽ xử lý bao nhiêu dữ liệu?\n* Dự kiến có bao nhiêu yêu cầu mỗi giây?\n* Tỷ lệ đọc/ghi dự kiến là bao nhiêu?\n\n### Bước 2: Tạo thiết kế cấp cao\n\nPhác thảo thiết kế tổng quan với tất cả các thành phần quan trọng.",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "SNIA3o4Zdm0GipnTURRr6LLC5xntTaBp1rDZU9eR0dg=",
        "originContent": "Start broad and go deeper in a few areas.  It helps to know a little about various key system design topics.  Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.",
        "translatedContent": "Bắt đầu từ tổng quan và đi sâu vào một vài lĩnh vực nhất định. Việc biết một chút về các chủ đề thiết kế hệ thống quan trọng sẽ rất hữu ích. Điều chỉnh hướng dẫn dưới đây dựa trên thời gian, kinh nghiệm, vị trí bạn đang phỏng vấn và công ty bạn ứng tuyển."
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "APprvXVZXhoF3eG3JK9VPbp0/iBscnCVVtS2tsFOgg8=",
        "originContent": "* **Short timeline** - Aim for **breadth** with system design topics.  Practice by solving **some** interview questions.",
        "translatedContent": "* **Thời gian ngắn** - Nhắm đến **độ rộng** với các chủ đề thiết kế hệ thống. Luyện tập bằng cách giải **một số** câu hỏi phỏng vấn."
      },
      {
        "row": 4,
        "rowsha": "ADXWP0iSVhOOvWH3xlFzTarvxFCgR8nGMIlVcLkCgrE=",
        "originContent": "* **Medium timeline** - Aim for **breadth** and **some depth** with system design topics.  Practice by solving **many** interview questions.",
        "translatedContent": "* **Thời gian trung bình** - Nhắm đến **độ rộng** và **một số chiều sâu** với các chủ đề thiết kế hệ thống. Luyện tập bằng cách giải **nhiều** câu hỏi phỏng vấn."
      },
      {
        "row": 5,
        "rowsha": "7SYTlgZLwo5IszPycuCkSwiIgIeG4MoFB4OUmGHNq9E=",
        "originContent": "* **Long timeline** - Aim for **breadth** and **more depth** with system design topics.  Practice by solving **most** interview questions.",
        "translatedContent": "* **Thời gian dài** - Nhắm đến **độ rộng** và **nhiều chiều sâu hơn** với các chủ đề thiết kế hệ thống. Luyện tập bằng cách giải **hầu hết** các câu hỏi phỏng vấn."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "9ubyW9Q8WZyzbbpxkOGzpyAgn+ErJRiPxoAf3B1+npI=",
        "originContent": "| | Short | Medium | Long |",
        "translatedContent": "| | Ngắn | Trung bình | Dài |"
      },
      {
        "row": 8,
        "rowsha": "TaHsb0d4IJAQLcFr2peO+1ZV+/Ldzg+E7PH695qTDy0=",
        "originContent": "|---|---|---|---|",
        "translatedContent": "|---|---|---|---|"
      },
      {
        "row": 9,
        "rowsha": "iSwmLEDPCeVIpT4oqn8Da9T805AcRJWbIPhLuv3TFDQ=",
        "originContent": "| Read through the [System design topics](#index-of-system-design-topics) to get a broad understanding of how systems work | :+1: | :+1: | :+1: |",
        "translatedContent": "| Đọc qua [Các chủ đề thiết kế hệ thống](#index-of-system-design-topics) để hiểu tổng quan về cách hệ thống hoạt động | :+1: | :+1: | :+1: |"
      },
      {
        "row": 10,
        "rowsha": "/U1scGwmSquckFPkDMstzK594t9Yh9z+UF1v3T3o8dg=",
        "originContent": "| Read through a few articles in the [Company engineering blogs](#company-engineering-blogs) for the companies you are interviewing with | :+1: | :+1: | :+1: |",
        "translatedContent": "| Đọc một vài bài viết trong [Blog kỹ thuật của công ty](#company-engineering-blogs) tại các công ty bạn đang ứng tuyển | :+1: | :+1: | :+1: |"
      },
      {
        "row": 11,
        "rowsha": "uvAtVAF9aYtpwaZ2xWi796KENLUKG609T9b/ShsgTgI=",
        "originContent": "| Read through a few [Real world architectures](#real-world-architectures) | :+1: | :+1: | :+1: |",
        "translatedContent": "| Đọc qua một số [Kiến trúc thực tế](#real-world-architectures) | :+1: | :+1: | :+1: |"
      },
      {
        "row": 12,
        "rowsha": "bks/6OaX0tTDUOx+I44XG55gMbEUWylOT9UWWHm1F8Y=",
        "originContent": "| Review [How to approach a system design interview question](#how-to-approach-a-system-design-interview-question) | :+1: | :+1: | :+1: |",
        "translatedContent": "| Xem lại [Cách tiếp cận câu hỏi phỏng vấn thiết kế hệ thống](#how-to-approach-a-system-design-interview-question) | :+1: | :+1: | :+1: |"
      },
      {
        "row": 13,
        "rowsha": "fc+sbOekuddiU1ZTlyY+2ndV0/T5foQKhmEPsOl92QA=",
        "originContent": "| Work through [System design interview questions with solutions](#system-design-interview-questions-with-solutions) | Some | Many | Most |",
        "translatedContent": "| Giải [Câu hỏi phỏng vấn thiết kế hệ thống có đáp án](#system-design-interview-questions-with-solutions) | Một số | Nhiều | Hầu hết |"
      },
      {
        "row": 14,
        "rowsha": "eiunWCO/vn1yPsHkE92DdPpJr9ejQPdQ6OX5byfJE04=",
        "originContent": "| Work through [Object-oriented design interview questions with solutions](#object-oriented-design-interview-questions-with-solutions) | Some | Many | Most |",
        "translatedContent": "| Giải [Câu hỏi phỏng vấn thiết kế hướng đối tượng có đáp án](#object-oriented-design-interview-questions-with-solutions) | Một số | Nhiều | Hầu hết |"
      },
      {
        "row": 15,
        "rowsha": "imyixE9xkYCw9ldxREhHRKkugeOG/JoDZeHgmKWNi20=",
        "originContent": "| Review [Additional system design interview questions](#additional-system-design-interview-questions) | Some | Many | Most |",
        "translatedContent": "| Xem lại [Câu hỏi phỏng vấn thiết kế hệ thống bổ sung](#additional-system-design-interview-questions) | Một số | Nhiều | Hầu hết |"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "SEFZnoLgKX5GYcZzfMMx2UcVa/rW0PgfJJPN8Oyigmw=",
        "originContent": "## How to approach a system design interview question",
        "translatedContent": "## Cách tiếp cận câu hỏi phỏng vấn thiết kế hệ thống"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "EBmqGSUbcyaunIhTpF2rm9E/QQTzqZqKWcuyhWFWViw=",
        "originContent": "> How to tackle a system design interview question.",
        "translatedContent": "> Cách giải quyết một câu hỏi phỏng vấn thiết kế hệ thống."
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "62lKeIabpcx9OyC0tfG/7xBhY/S6My8Jia+GHrX7RDw=",
        "originContent": "The system design interview is an **open-ended conversation**.  You are expected to lead it.",
        "translatedContent": "Phỏng vấn thiết kế hệ thống là một **cuộc trò chuyện mở**. Bạn được mong đợi sẽ dẫn dắt buổi phỏng vấn."
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "ssirbcWvt6KNXQZ9Qn+cZnHwff8sveAOuamap6GdDW4=",
        "originContent": "You can use the following steps to guide the discussion.  To help solidify this process, work through the [System design interview questions with solutions](#system-design-interview-questions-with-solutions) section using the following steps.",
        "translatedContent": "Bạn có thể sử dụng các bước sau để định hướng cuộc thảo luận. Để củng cố quy trình này, hãy luyện tập với [Câu hỏi phỏng vấn thiết kế hệ thống có đáp án](#system-design-interview-questions-with-solutions) sử dụng các bước sau."
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "g/AAuZkvyL/kmKACkaQdEDyPBRjvsIKtPGBhDecoBt0=",
        "originContent": "### Step 1: Outline use cases, constraints, and assumptions",
        "translatedContent": "### Bước 1: Phác thảo các trường hợp sử dụng, ràng buộc, và giả định"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "u426oQIllXU3QBYctTrH5fZsvBd/FnxOIzVcRmGjM4c=",
        "originContent": "Gather requirements and scope the problem.  Ask questions to clarify use cases and constraints.  Discuss assumptions.",
        "translatedContent": "Thu thập yêu cầu và xác định phạm vi vấn đề. Đặt câu hỏi để làm rõ trường hợp sử dụng và các ràng buộc. Thảo luận về các giả định."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "ZYB7Vgm75fttaAWBi4OXuzYlmy2Rqs9I94b4uw3M+98=",
        "originContent": "* Who is going to use it?",
        "translatedContent": "* Ai sẽ sử dụng nó?"
      },
      {
        "row": 30,
        "rowsha": "ZVFCVHGlD9Tg5LQyoHb7YRtW/AEv36v6L1zKTiB9P0Y=",
        "originContent": "* How are they going to use it?",
        "translatedContent": "* Họ sẽ sử dụng nó như thế nào?"
      },
      {
        "row": 31,
        "rowsha": "NNJIWR0UaiI4xQTFPpNRTh8dWErgWLTwetr/vYaeUDk=",
        "originContent": "* How many users are there?",
        "translatedContent": "* Có bao nhiêu người dùng?"
      },
      {
        "row": 32,
        "rowsha": "WpsuKkJ3vG0G6WpKbH7swYHJCe3FeZGz6DX51dwgprE=",
        "originContent": "* What does the system do?",
        "translatedContent": "* Hệ thống sẽ làm gì?"
      },
      {
        "row": 33,
        "rowsha": "zyUvqreHsTuM5upvOBdEYLO18OEo1j5JZvwsW26xRcM=",
        "originContent": "* What are the inputs and outputs of the system?",
        "translatedContent": "* Đầu vào và đầu ra của hệ thống là gì?"
      },
      {
        "row": 34,
        "rowsha": "M+/skSeqc+Kr0oZURcbgKzA8lFVLTBa8ZkkezW5xYe8=",
        "originContent": "* How much data do we expect to handle?",
        "translatedContent": "* Dự kiến sẽ xử lý bao nhiêu dữ liệu?"
      },
      {
        "row": 35,
        "rowsha": "wWQUtkw7SSXqT0xZeorBHJb4jM/9nMeQNd1nM0xP+i4=",
        "originContent": "* How many requests per second do we expect?",
        "translatedContent": "* Dự kiến có bao nhiêu yêu cầu mỗi giây?"
      },
      {
        "row": 36,
        "rowsha": "awh+n8TFHHMyLHIDXahUBuhPUv2kyDmGPLsN8jHlBa4=",
        "originContent": "* What is the expected read to write ratio?",
        "translatedContent": "* Tỷ lệ đọc/ghi dự kiến là bao nhiêu?"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "2y98k60lgFqEObXP9Evv+4U7hADGpthi9IKwC9GdX7U=",
        "originContent": "### Step 2: Create a high level design",
        "translatedContent": "### Bước 2: Tạo thiết kế cấp cao"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "ShMefyWY9vD8sZojhWGQTcpi5IknT20fWYnS5qOH40k=",
        "originContent": "Outline a high level design with all important components.",
        "translatedContent": "Phác thảo thiết kế tổng quan với tất cả các thành phần quan trọng."
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 8,
    "Content": "\n* Sketch the main components and connections\n* Justify your ideas\n\n### Step 3: Design core components\n\nDive into details for each core component.  For example, if you were asked to [design a url shortening service](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md), discuss:\n\n* Generating and storing a hash of the full url\n    * [MD5](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) and [Base62](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)\n    * Hash collisions\n    * SQL or NoSQL\n    * Database schema\n* Translating a hashed url to the full url\n    * Database lookup\n* API and object-oriented design\n\n### Step 4: Scale the design\n\nIdentify and address bottlenecks, given the constraints.  For example, do you need the following to address scalability issues?\n\n* Load balancer\n* Horizontal scaling\n* Caching\n* Database sharding\n\nDiscuss potential solutions and trade-offs.  Everything is a trade-off.  Address bottlenecks using [principles of scalable system design](#index-of-system-design-topics).\n\n### Back-of-the-envelope calculations\n\nYou might be asked to do some estimates by hand.  Refer to the [Appendix](#appendix) for the following resources:\n\n* [Use back of the envelope calculations](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)\n* [Powers of two table](#powers-of-two-table)\n* [Latency numbers every programmer should know](#latency-numbers-every-programmer-should-know)\n\n### Source(s) and further reading\n\nCheck out the following links to get a better idea of what to expect:\n",
    "ContentSha": "3x8iTXwR6ek+uAlSMupV1OgJsT8IwtVYxDBvXMFsB/g=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n* Phác thảo các thành phần chính và kết nối\n* Giải thích lý do cho các ý tưởng của bạn\n\n### Bước 3: Thiết kế các thành phần cốt lõi\n\nĐi sâu vào chi tiết cho từng thành phần cốt lõi. Ví dụ, nếu bạn được yêu cầu [thiết kế dịch vụ rút gọn url](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md), hãy thảo luận:\n\n* Tạo và lưu trữ một hash của toàn bộ url\n    * [MD5](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) và [Base62](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)\n    * Va chạm hash\n    * SQL hoặc NoSQL\n    * Lược đồ cơ sở dữ liệu\n* Chuyển đổi url đã băm về url đầy đủ\n    * Truy vấn cơ sở dữ liệu\n* Thiết kế API và hướng đối tượng\n\n### Bước 4: Mở rộng thiết kế\n\nXác định và giải quyết các điểm nghẽn, dựa trên các ràng buộc. Ví dụ, bạn có cần các yếu tố sau để xử lý vấn đề mở rộng?\n\n* Bộ cân bằng tải\n* Mở rộng ngang\n* Bộ nhớ đệm\n* Phân mảnh cơ sở dữ liệu\n\nThảo luận về các giải pháp tiềm năng và các đánh đổi. Mọi thứ đều là sự đánh đổi. Giải quyết điểm nghẽn dựa trên [nguyên tắc thiết kế hệ thống mở rộng](#index-of-system-design-topics).\n\n### Tính toán sơ bộ\n\nBạn có thể được yêu cầu thực hiện một số ước tính bằng tay. Tham khảo [Phụ lục](#appendix) cho các nguồn sau:\n\n* [Sử dụng tính toán sơ bộ](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)\n* [Bảng lũy thừa của hai](#powers-of-two-table)\n* [Các con số độ trễ mà lập trình viên nào cũng nên biết](#latency-numbers-every-programmer-should-know)\n\n### Nguồn và tài liệu đọc thêm\n\nXem các liên kết sau để có ý tưởng rõ hơn về những gì sẽ gặp phải:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "U27CMtCga11B+lhjY/Gfa6kyyajXoMr9mJ2rHTimlc8=",
        "originContent": "* Sketch the main components and connections",
        "translatedContent": "* Phác thảo các thành phần chính và kết nối"
      },
      {
        "row": 3,
        "rowsha": "bNwx3GZvsDBhNsC3kREcodXP7Il7SB7K49qytDkWeCY=",
        "originContent": "* Justify your ideas",
        "translatedContent": "* Giải thích lý do cho các ý tưởng của bạn"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "LcrIuJbweDykbrtYihaAOMSR/DEWfrO6HmvZJRktK48=",
        "originContent": "### Step 3: Design core components",
        "translatedContent": "### Bước 3: Thiết kế các thành phần cốt lõi"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "XmQinwyPHiJWAOeoKvrtbJNfPPpRvP/332oZ0AxnFIs=",
        "originContent": "Dive into details for each core component.  For example, if you were asked to [design a url shortening service](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md), discuss:",
        "translatedContent": "Đi sâu vào chi tiết cho từng thành phần cốt lõi. Ví dụ, nếu bạn được yêu cầu [thiết kế dịch vụ rút gọn url](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md), hãy thảo luận:"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "eUNlQzq7tAqTf1e6qYbSNPis8YbTKSrLfy7DtLodTAo=",
        "originContent": "* Generating and storing a hash of the full url",
        "translatedContent": "* Tạo và lưu trữ một hash của toàn bộ url"
      },
      {
        "row": 10,
        "rowsha": "jGcHvLTPBxpJtqfRcku9M/Se24yoG2e6zWM6ykZNGH0=",
        "originContent": "    * [MD5](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) and [Base62](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)",
        "translatedContent": "    * [MD5](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) và [Base62](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)"
      },
      {
        "row": 11,
        "rowsha": "/Lg06Hv6vd+VihWbM3xNVinte1JZX1ZmWfL7sau6OTU=",
        "originContent": "    * Hash collisions",
        "translatedContent": "    * Va chạm hash"
      },
      {
        "row": 12,
        "rowsha": "CpfFFdAOO914zjF8AnWcCiRp/dFxSfhBu4xqD4JKQLs=",
        "originContent": "    * SQL or NoSQL",
        "translatedContent": "    * SQL hoặc NoSQL"
      },
      {
        "row": 13,
        "rowsha": "QZ4fmpKQ53P5ic20X8K10tQ8MNbNV7Bqq+z3quSwWX4=",
        "originContent": "    * Database schema",
        "translatedContent": "    * Lược đồ cơ sở dữ liệu"
      },
      {
        "row": 14,
        "rowsha": "fCFo/wGYaDJUSva0xz1uDUaphw0ay9iHB1lP9GImAPM=",
        "originContent": "* Translating a hashed url to the full url",
        "translatedContent": "* Chuyển đổi url đã băm về url đầy đủ"
      },
      {
        "row": 15,
        "rowsha": "sTSUDYlnS2yNoPTIw5WpAquWW7q5qVdh8cU5hGsAoAU=",
        "originContent": "    * Database lookup",
        "translatedContent": "    * Truy vấn cơ sở dữ liệu"
      },
      {
        "row": 16,
        "rowsha": "RFEuA4sZ3xOJYAUMGGdsIFC22p4mKfqiVUs5k0CDlUM=",
        "originContent": "* API and object-oriented design",
        "translatedContent": "* Thiết kế API và hướng đối tượng"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "oEnBtR+2UQj/a2ntVw4si8hESUAkA7pQDiXs+JS2i7A=",
        "originContent": "### Step 4: Scale the design",
        "translatedContent": "### Bước 4: Mở rộng thiết kế"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "/S0/1A+ljnuBHmZ1BrciwM7aZgV6VjqyOXrmyF8NEtc=",
        "originContent": "Identify and address bottlenecks, given the constraints.  For example, do you need the following to address scalability issues?",
        "translatedContent": "Xác định và giải quyết các điểm nghẽn, dựa trên các ràng buộc. Ví dụ, bạn có cần các yếu tố sau để xử lý vấn đề mở rộng?"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "WHX53gtEKOGGmNumFoFgZdDBItuO8RGaS4y0YR6DzHU=",
        "originContent": "* Load balancer",
        "translatedContent": "* Bộ cân bằng tải"
      },
      {
        "row": 23,
        "rowsha": "8WMxYHS7bcb9ujutc5oNdciUky0lpTe1OWwf0aQLPtY=",
        "originContent": "* Horizontal scaling",
        "translatedContent": "* Mở rộng ngang"
      },
      {
        "row": 24,
        "rowsha": "KwFOX2+m+5jw+o1TS7IAfPEjVtO8acfjUoASy/7hzV4=",
        "originContent": "* Caching",
        "translatedContent": "* Bộ nhớ đệm"
      },
      {
        "row": 25,
        "rowsha": "Qhp9XMPjmJxweEazgKatdafXI0F4kBAj20eMCty2Z6U=",
        "originContent": "* Database sharding",
        "translatedContent": "* Phân mảnh cơ sở dữ liệu"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "+C2wS9CYBXEcil8inp5fzfeS6ihDXA46KjkAglCk/UM=",
        "originContent": "Discuss potential solutions and trade-offs.  Everything is a trade-off.  Address bottlenecks using [principles of scalable system design](#index-of-system-design-topics).",
        "translatedContent": "Thảo luận về các giải pháp tiềm năng và các đánh đổi. Mọi thứ đều là sự đánh đổi. Giải quyết điểm nghẽn dựa trên [nguyên tắc thiết kế hệ thống mở rộng](#index-of-system-design-topics)."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "65fg+RfTRxsiQ8Lb+bdR+4kGz9EA7OARQTqASHFZhQA=",
        "originContent": "### Back-of-the-envelope calculations",
        "translatedContent": "### Tính toán sơ bộ"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "DjmbBNFtax26TU0ZuQz7vD1aQYMiyBvXZyY1+z5xJlE=",
        "originContent": "You might be asked to do some estimates by hand.  Refer to the [Appendix](#appendix) for the following resources:",
        "translatedContent": "Bạn có thể được yêu cầu thực hiện một số ước tính bằng tay. Tham khảo [Phụ lục](#appendix) cho các nguồn sau:"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "Ps8ZZyaG1tgfwlYTr1UYAuIsUHLMLpnRN+Xy/+yCOGw=",
        "originContent": "* [Use back of the envelope calculations](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)",
        "translatedContent": "* [Sử dụng tính toán sơ bộ](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)"
      },
      {
        "row": 34,
        "rowsha": "k+wFt6Jdc9eBgcfSFqxuP7joVvfg2wCvXiMRTQZe/Qs=",
        "originContent": "* [Powers of two table](#powers-of-two-table)",
        "translatedContent": "* [Bảng lũy thừa của hai](#powers-of-two-table)"
      },
      {
        "row": 35,
        "rowsha": "VVfu5aP/E47faRiVqcZZ1SbeLy6MmMKzGXLkMNcKFZ8=",
        "originContent": "* [Latency numbers every programmer should know](#latency-numbers-every-programmer-should-know)",
        "translatedContent": "* [Các con số độ trễ mà lập trình viên nào cũng nên biết](#latency-numbers-every-programmer-should-know)"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Nguồn và tài liệu đọc thêm"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "nYzECrLKxvEiF5sIfAJr/QCX0pvtPH8NiVC7VkfAYPA=",
        "originContent": "Check out the following links to get a better idea of what to expect:",
        "translatedContent": "Xem các liên kết sau để có ý tưởng rõ hơn về những gì sẽ gặp phải:"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 9,
    "Content": "* [How to ace a systems design interview](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)\n* [The system design interview](http://www.hiredintech.com/system-design)\n* [Intro to Architecture and Systems Design Interviews](https://www.youtube.com/watch?v=ZgdS0EUmn70)\n* [System design template](https://leetcode.com/discuss/career/229177/My-System-Design-Template)\n\n## System design interview questions with solutions\n\n> Common system design interview questions with sample discussions, code, and diagrams.\n>\n> Solutions linked to content in the `solutions/` folder.\n\n| Question | |\n|---|---|\n| Design Pastebin.com (or Bit.ly) | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) |\n| Design the Twitter timeline and search (or Facebook feed and search) | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md) |\n| Design a web crawler | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md) |\n| Design Mint.com | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md) |\n| Design the data structures for a social network | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md) |\n| Design a key-value store for a search engine | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md) |\n| Design Amazon's sales ranking by category feature | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md) |\n| Design a system that scales to millions of users on AWS | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md) |\n| Add a system design question | [Contribute](#contributing) |\n\n### Design Pastebin.com (or Bit.ly)\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4edXG0T.png)\n\n### Design the Twitter timeline and search (or Facebook feed and search)\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png)\n\n### Design a web crawler\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bWxPtQA.png)",
    "ContentSha": "AHgKOfvgyoP47Euk86jhd2olVjkmP2nZB6tXbpOIqic=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Cách vượt qua phỏng vấn thiết kế hệ thống](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)\n* [Phỏng vấn thiết kế hệ thống](http://www.hiredintech.com/system-design)\n* [Giới thiệu về phỏng vấn kiến trúc và thiết kế hệ thống](https://www.youtube.com/watch?v=ZgdS0EUmn70)\n* [Mẫu thiết kế hệ thống](https://leetcode.com/discuss/career/229177/My-System-Design-Template)\n\n## Các câu hỏi phỏng vấn thiết kế hệ thống kèm giải pháp\n\n> Các câu hỏi phỏng vấn thiết kế hệ thống phổ biến kèm thảo luận mẫu, mã nguồn, và sơ đồ.\n>\n> Các giải pháp liên kết đến nội dung trong thư mục `solutions/`.\n\n| Câu hỏi | |\n|---|---|\n| Thiết kế Pastebin.com (hoặc Bit.ly) | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) |\n| Thiết kế dòng thời gian và tìm kiếm của Twitter (hoặc bảng tin và tìm kiếm của Facebook) | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md) |\n| Thiết kế trình thu thập dữ liệu web | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md) |\n| Thiết kế Mint.com | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md) |\n| Thiết kế cấu trúc dữ liệu cho mạng xã hội | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md) |\n| Thiết kế khoá-giá trị cho công cụ tìm kiếm | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md) |\n| Thiết kế tính năng xếp hạng bán hàng theo danh mục của Amazon | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md) |\n| Thiết kế hệ thống mở rộng cho hàng triệu người dùng trên AWS | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md) |\n| Thêm câu hỏi thiết kế hệ thống | [Đóng góp](#contributing) |\n\n### Thiết kế Pastebin.com (hoặc Bit.ly)\n\n[Xem bài tập và giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4edXG0T.png)\n\n### Thiết kế dòng thời gian và tìm kiếm của Twitter (hoặc bảng tin và tìm kiếm của Facebook)\n\n[Xem bài tập và giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png)\n\n### Thiết kế trình thu thập dữ liệu web\n\n[Xem bài tập và giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bWxPtQA.png)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "JZq01FMZ7R3Ugi6/9OGB59UgMoIhdLWL3o1YUqT3JeA=",
        "originContent": "* [How to ace a systems design interview](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)",
        "translatedContent": "* [Cách vượt qua phỏng vấn thiết kế hệ thống](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)"
      },
      {
        "row": 2,
        "rowsha": "vT0KOyNKYP7aARQ+UVu1d8DA5r8brjZMPgnNCdgLOnE=",
        "originContent": "* [The system design interview](http://www.hiredintech.com/system-design)",
        "translatedContent": "* [Phỏng vấn thiết kế hệ thống](http://www.hiredintech.com/system-design)"
      },
      {
        "row": 3,
        "rowsha": "JdeppIgnkeI5NAIAVuhPX5MnQmcpsEHkbOaKUktOTDs=",
        "originContent": "* [Intro to Architecture and Systems Design Interviews](https://www.youtube.com/watch?v=ZgdS0EUmn70)",
        "translatedContent": "* [Giới thiệu về phỏng vấn kiến trúc và thiết kế hệ thống](https://www.youtube.com/watch?v=ZgdS0EUmn70)"
      },
      {
        "row": 4,
        "rowsha": "My4lyUxXdCQfPaerGVV1echlO4+ad0vsLUdKDOAclS4=",
        "originContent": "* [System design template](https://leetcode.com/discuss/career/229177/My-System-Design-Template)",
        "translatedContent": "* [Mẫu thiết kế hệ thống](https://leetcode.com/discuss/career/229177/My-System-Design-Template)"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "Wm0HclDfbvVAjGfZ/34OYjH4SX0sZcp1TSJ/0X+bOB8=",
        "originContent": "## System design interview questions with solutions",
        "translatedContent": "## Các câu hỏi phỏng vấn thiết kế hệ thống kèm giải pháp"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "x0b9VxHLB05SuXQs4/HOOO+Yit7Vfqcy4T5e3vxvCxU=",
        "originContent": "> Common system design interview questions with sample discussions, code, and diagrams.",
        "translatedContent": "> Các câu hỏi phỏng vấn thiết kế hệ thống phổ biến kèm thảo luận mẫu, mã nguồn, và sơ đồ."
      },
      {
        "row": 9,
        "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
        "originContent": ">",
        "translatedContent": ">"
      },
      {
        "row": 10,
        "rowsha": "UIYFxoHN2Dw+rs8eSRF3XAnGJg4Qh/X19PdV8ctDSws=",
        "originContent": "> Solutions linked to content in the `solutions/` folder.",
        "translatedContent": "> Các giải pháp liên kết đến nội dung trong thư mục `solutions/`."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "fL6dVdOyhJWflSfPRLCV16KaGdqzm694OpjPV8IcgO4=",
        "originContent": "| Question | |",
        "translatedContent": "| Câu hỏi | |"
      },
      {
        "row": 13,
        "rowsha": "QZm6RU1tOug2VxIMK7a9Z07vwN19PNTMhEFx3GclE1s=",
        "originContent": "|---|---|",
        "translatedContent": "|---|---|"
      },
      {
        "row": 14,
        "rowsha": "2ePVBCIO2j42UPrbl5IRtcOKI/QHhZK87NbMU1UwEG8=",
        "originContent": "| Design Pastebin.com (or Bit.ly) | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) |",
        "translatedContent": "| Thiết kế Pastebin.com (hoặc Bit.ly) | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md) |"
      },
      {
        "row": 15,
        "rowsha": "SjBQjlRPHhEDyUjsMWmZ9RCP/AVE7OURIG878hbb83c=",
        "originContent": "| Design the Twitter timeline and search (or Facebook feed and search) | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md) |",
        "translatedContent": "| Thiết kế dòng thời gian và tìm kiếm của Twitter (hoặc bảng tin và tìm kiếm của Facebook) | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md) |"
      },
      {
        "row": 16,
        "rowsha": "W/S+LhKK8/zee7Nc93d7c38Oy4o26u8CA1MiqnsgfcA=",
        "originContent": "| Design a web crawler | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md) |",
        "translatedContent": "| Thiết kế trình thu thập dữ liệu web | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md) |"
      },
      {
        "row": 17,
        "rowsha": "13x0MJi2Wd5HdX4O5r+AyIUeajf5OEqAgG+yAZjTG3I=",
        "originContent": "| Design Mint.com | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md) |",
        "translatedContent": "| Thiết kế Mint.com | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md) |"
      },
      {
        "row": 18,
        "rowsha": "UBU8QBY0lWgEcb96V6lnhfkNic0fauJdQBuCURs0Y10=",
        "originContent": "| Design the data structures for a social network | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md) |",
        "translatedContent": "| Thiết kế cấu trúc dữ liệu cho mạng xã hội | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md) |"
      },
      {
        "row": 19,
        "rowsha": "SSpyp3aQ9GVNS2G0dKmLwor4UmXnIjBxxN1g+ejUHcw=",
        "originContent": "| Design a key-value store for a search engine | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md) |",
        "translatedContent": "| Thiết kế khoá-giá trị cho công cụ tìm kiếm | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md) |"
      },
      {
        "row": 20,
        "rowsha": "TXmWqp3bFaa1WLo4Rk7nTXsciVXWegUnDOIQoc1naT8=",
        "originContent": "| Design Amazon's sales ranking by category feature | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md) |",
        "translatedContent": "| Thiết kế tính năng xếp hạng bán hàng theo danh mục của Amazon | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md) |"
      },
      {
        "row": 21,
        "rowsha": "BEyLN0lmG0HdpY1rP86XnVyFvrAaeoYPov7Su3Zv0eA=",
        "originContent": "| Design a system that scales to millions of users on AWS | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md) |",
        "translatedContent": "| Thiết kế hệ thống mở rộng cho hàng triệu người dùng trên AWS | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md) |"
      },
      {
        "row": 22,
        "rowsha": "rxZ/1ZcyqiWhJo83Zu2JZADx1pvrsk1TTCEtxi+B8tg=",
        "originContent": "| Add a system design question | [Contribute](#contributing) |",
        "translatedContent": "| Thêm câu hỏi thiết kế hệ thống | [Đóng góp](#contributing) |"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "AyFUnZUQuFRxhqUdGSvBhXkOvM6HJsY7TJKU9g88eM8=",
        "originContent": "### Design Pastebin.com (or Bit.ly)",
        "translatedContent": "### Thiết kế Pastebin.com (hoặc Bit.ly)"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "TwBCQr1u0cwTgeKsXvI89s/9ZvvPL1SMjf0E+iIAF2o=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)",
        "translatedContent": "[Xem bài tập và giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md)"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "L4TdGLmd94A8zT+dng4pdeIuDEBxyB9bv6DCXFY+YIo=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4edXG0T.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4edXG0T.png)"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "QQw7BOpizsv7c05rVC55faErxy3Oi9OGV0atdtJ5Ivk=",
        "originContent": "### Design the Twitter timeline and search (or Facebook feed and search)",
        "translatedContent": "### Thiết kế dòng thời gian và tìm kiếm của Twitter (hoặc bảng tin và tìm kiếm của Facebook)"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "nqYzQZvIbefn8sWT6PZ4P23+9kIXX5M27R0zvhZ4sfE=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md)",
        "translatedContent": "[Xem bài tập và giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md)"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "KI7sS2pfc93vBt6T0SCIl4yGZYqnqPwEoK6HQ7UnHFk=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png)"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "RIHPI9tK8yPnkh3BYkrRNAIfaIqtJbkl9reHz9DvlFk=",
        "originContent": "### Design a web crawler",
        "translatedContent": "### Thiết kế trình thu thập dữ liệu web"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "tr3611asvPDSMwY78/NysccFuuF4Hwfud4fnfch8L5Q=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md)",
        "translatedContent": "[Xem bài tập và giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md)"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "LsWHuTLmDVHI9pPDc379T6Wr3HnA6wKsIWWiOyC37Gw=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bWxPtQA.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bWxPtQA.png)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 10,
    "Content": "\n### Design Mint.com\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/V5q57vU.png)\n\n### Design the data structures for a social network\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/cdCv5g7.png)\n\n### Design a key-value store for a search engine\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4j99mhe.png)\n\n### Design Amazon's sales ranking by category feature\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/MzExP06.png)\n\n### Design a system that scales to millions of users on AWS\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png)\n\n## Object-oriented design interview questions with solutions\n\n> Common object-oriented design interview questions with sample discussions, code, and diagrams.\n>\n> Solutions linked to content in the `solutions/` folder.\n\n>**Note: This section is under development**\n\n| Question | |",
    "ContentSha": "o3sbdfQZN6cWPJee4lAmThiTo/ED2IUg9UbWh2T8Jr8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n### Design Mint.com\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/V5q57vU.png)\n\n### Design the data structures for a social network\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/cdCv5g7.png)\n\n### Design a key-value store for a search engine\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4j99mhe.png)\n\n### Design Amazon's sales ranking by category feature\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/MzExP06.png)\n\n### Design a system that scales to millions of users on AWS\n\n[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md)\n\n![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png)\n\n## Object-oriented design interview questions with solutions\n\n> Common object-oriented design interview questions with sample discussions, code, and diagrams.\n>\n> Solutions linked to content in the `solutions/` folder.\n\n>**Note: This section is under development**\n\n| Question | |",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "Z70n1c0z611YlpFC3cbdBkm2uAdhpiapPfCLkrsodt8=",
        "originContent": "### Design Mint.com",
        "translatedContent": "### Design Mint.com"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "m2sKrx6ciHia1U6xLgdz+36L/1uQBgwSKYIL0IILu0k=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md)",
        "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md)"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "row6BSJ3dm10Zf9SJGYFcwTF0nNSngS96+2ksRu4+xM=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/V5q57vU.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/V5q57vU.png)"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "Zh0JZFuHPsfD2ELWz55xBw9p2XgwYBDT6YJPmEf8peA=",
        "originContent": "### Design the data structures for a social network",
        "translatedContent": "### Design the data structures for a social network"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "XR9bVutKIjD6NzcMuHURs04GWLd1GXFsCguk0p8A+R8=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md)",
        "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md)"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "rQXHpQ4THUMtAB3E6yZCt1WchGmDogbHwC9KOSQyqe4=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/cdCv5g7.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/cdCv5g7.png)"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "APqd5Nl4LjEmEpwjDT3FpQTAGp1MyRAzhGJTV1joCBU=",
        "originContent": "### Design a key-value store for a search engine",
        "translatedContent": "### Design a key-value store for a search engine"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "GPMYLZTxFEn6DfcHc5gWor8cAoJH0cRt+DqA4zvhv40=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md)",
        "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md)"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "KUcHqu8H0iGtpvHVM/Zg/o79TeFcnhZdksTPXRwiBd0=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4j99mhe.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4j99mhe.png)"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "CCycVwc5+7egryiA3USoK3P2853OEDaXVS+RjT8WuXs=",
        "originContent": "### Design Amazon's sales ranking by category feature",
        "translatedContent": "### Design Amazon's sales ranking by category feature"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "UBz7wstVm2yG896uPlRd5n0TqxpNpK0jBGzLzReX9Ok=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md)",
        "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md)"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "pT/hFkcmu4ShOM0RUwFdDjlFbexfY+nIJrZvLWKqqRA=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/MzExP06.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/MzExP06.png)"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "B8BNlQlT2br97d0uMqCR/qzkT9M5ZAiIXk8YRi5qeEw=",
        "originContent": "### Design a system that scales to millions of users on AWS",
        "translatedContent": "### Design a system that scales to millions of users on AWS"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "s93+WkpF9jFO0b66NLcdz7uW5iEt+f+ptGtO3apyQVY=",
        "originContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md)",
        "translatedContent": "[View exercise and solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md)"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "dZMrgCGx97CQFQkfN8XHhnusO1qCvdu6nlw5Q2/G4L8=",
        "originContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png)",
        "translatedContent": "![Imgur](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png)"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "Q+kNWMOzdwBD1PoA7dz8gMlukagyIprLzVlXt0OshNI=",
        "originContent": "## Object-oriented design interview questions with solutions",
        "translatedContent": "## Object-oriented design interview questions with solutions"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "CgwVtP87mnERjRiCIfjhgg+CJeMyE8OR0kHe0JnR7mg=",
        "originContent": "> Common object-oriented design interview questions with sample discussions, code, and diagrams.",
        "translatedContent": "> Common object-oriented design interview questions with sample discussions, code, and diagrams."
      },
      {
        "row": 35,
        "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
        "originContent": ">",
        "translatedContent": ">"
      },
      {
        "row": 36,
        "rowsha": "UIYFxoHN2Dw+rs8eSRF3XAnGJg4Qh/X19PdV8ctDSws=",
        "originContent": "> Solutions linked to content in the `solutions/` folder.",
        "translatedContent": "> Solutions linked to content in the `solutions/` folder."
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "OPbO4oAHMZaRZyRPUSGO/P8ICXTL/JZHlCogsaJ1+HM=",
        "originContent": ">**Note: This section is under development**",
        "translatedContent": ">**Note: This section is under development**"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "fL6dVdOyhJWflSfPRLCV16KaGdqzm694OpjPV8IcgO4=",
        "originContent": "| Question | |",
        "translatedContent": "| Question | |"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 11,
    "Content": "|---|---|\n| Design a hash map | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/hash_map.ipynb)  |\n| Design a least recently used cache | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/lru_cache.ipynb)  |\n| Design a call center | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/call_center.ipynb)  |\n| Design a deck of cards | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb)  |\n| Design a parking lot | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/parking_lot.ipynb)  |\n| Design a chat server | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/online_chat.ipynb)  |\n| Design a circular array | [Contribute](#contributing)  |\n| Add an object-oriented design question | [Contribute](#contributing) |\n\n## System design topics: start here\n\nNew to system design?\n\nFirst, you'll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.\n\n### Step 1: Review the scalability video lecture\n\n[Scalability Lecture at Harvard](https://www.youtube.com/watch?v=-W9F__D3oY4)\n\n* Topics covered:\n    * Vertical scaling\n    * Horizontal scaling\n    * Caching\n    * Load balancing\n    * Database replication\n    * Database partitioning\n\n### Step 2: Review the scalability article\n\n[Scalability](https://web.archive.org/web/20221030091841/http://www.lecloud.net/tagged/scalability/chrono)\n\n* Topics covered:\n    * [Clones](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n    * [Databases](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n    * [Caches](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n    * [Asynchronism](https://web.archive.org/web/20220926171507/https://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)\n\n### Next steps\n",
    "ContentSha": "x8nrhrohPoZjm2NWw4mmB3mvJSUCp+CF0oOOqij1Y4E=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "|---|---|\n| Thiết kế một bảng băm | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/hash_map.ipynb)  |\n| Thiết kế bộ nhớ đệm truy xuất gần nhất (LRU cache) | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/lru_cache.ipynb)  |\n| Thiết kế tổng đài điện thoại | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/call_center.ipynb)  |\n| Thiết kế bộ bài | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb)  |\n| Thiết kế bãi đậu xe | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/parking_lot.ipynb)  |\n| Thiết kế máy chủ chat | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/online_chat.ipynb)  |\n| Thiết kế mảng vòng tròn | [Đóng góp](#contributing)  |\n| Thêm một câu hỏi thiết kế hướng đối tượng | [Đóng góp](#contributing) |\n\n## Chủ đề thiết kế hệ thống: bắt đầu từ đây\n\nBạn mới làm quen với thiết kế hệ thống?\n\nTrước tiên, bạn cần hiểu cơ bản về các nguyên tắc phổ biến, tìm hiểu chúng là gì, cách sử dụng, và điểm mạnh/yếu của chúng.\n\n### Bước 1: Xem bài giảng video về khả năng mở rộng\n\n[Bài giảng về khả năng mở rộng tại Harvard](https://www.youtube.com/watch?v=-W9F__D3oY4)\n\n* Các chủ đề bao gồm:\n    * Mở rộng theo chiều dọc\n    * Mở rộng theo chiều ngang\n    * Bộ nhớ đệm\n    * Cân bằng tải\n    * Nhân bản cơ sở dữ liệu\n    * Phân vùng cơ sở dữ liệu\n\n### Bước 2: Đọc bài viết về khả năng mở rộng\n\n[Khả năng mở rộng](https://web.archive.org/web/20221030091841/http://www.lecloud.net/tagged/scalability/chrono)\n\n* Các chủ đề bao gồm:\n    * [Bản sao](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n    * [Cơ sở dữ liệu](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n    * [Bộ nhớ đệm](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n    * [Tính bất đồng bộ](https://web.archive.org/web/20220926171507/https://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)\n\n### Các bước tiếp theo\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "QZm6RU1tOug2VxIMK7a9Z07vwN19PNTMhEFx3GclE1s=",
        "originContent": "|---|---|",
        "translatedContent": "|---|---|"
      },
      {
        "row": 2,
        "rowsha": "2QdA3ToO4pyxt/k4Rsdq1Awxu0imsAsbDhz4PPkJF4U=",
        "originContent": "| Design a hash map | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/hash_map.ipynb)  |",
        "translatedContent": "| Thiết kế một bảng băm | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/hash_map.ipynb)  |"
      },
      {
        "row": 3,
        "rowsha": "lrvDo/ah5N+BTKS5SlE7jTgjeY4cfIOz/dbiDOiGtjc=",
        "originContent": "| Design a least recently used cache | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/lru_cache.ipynb)  |",
        "translatedContent": "| Thiết kế bộ nhớ đệm truy xuất gần nhất (LRU cache) | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/lru_cache.ipynb)  |"
      },
      {
        "row": 4,
        "rowsha": "pxzMT7UkKJRMnrEb8eDjG+i7QfYBmZJjyBZT3cbWBbk=",
        "originContent": "| Design a call center | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/call_center.ipynb)  |",
        "translatedContent": "| Thiết kế tổng đài điện thoại | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/call_center.ipynb)  |"
      },
      {
        "row": 5,
        "rowsha": "ypj/Vm97p0gDoz0fCuLVQ/ACJNGHDd9yyD5s+gFDjlE=",
        "originContent": "| Design a deck of cards | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb)  |",
        "translatedContent": "| Thiết kế bộ bài | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb)  |"
      },
      {
        "row": 6,
        "rowsha": "EmLapRk7TPIZxVJtZyj3zRbh5ToKVyf0H8z2hbDaCSc=",
        "originContent": "| Design a parking lot | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/parking_lot.ipynb)  |",
        "translatedContent": "| Thiết kế bãi đậu xe | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/parking_lot.ipynb)  |"
      },
      {
        "row": 7,
        "rowsha": "QNkYLz7qR9e7SvPlsneEJicEyVWeRQw6oHpVpeLDais=",
        "originContent": "| Design a chat server | [Solution](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/online_chat.ipynb)  |",
        "translatedContent": "| Thiết kế máy chủ chat | [Giải pháp](https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/online_chat.ipynb)  |"
      },
      {
        "row": 8,
        "rowsha": "mOdLv2EWN9Lf+NNdJ/eEBId3d3E+cKoo1QRAF2+99J0=",
        "originContent": "| Design a circular array | [Contribute](#contributing)  |",
        "translatedContent": "| Thiết kế mảng vòng tròn | [Đóng góp](#contributing)  |"
      },
      {
        "row": 9,
        "rowsha": "nB2uFn5GaCVTh8i6Af3EaXpxUiROqDfEQiLobOWPsP8=",
        "originContent": "| Add an object-oriented design question | [Contribute](#contributing) |",
        "translatedContent": "| Thêm một câu hỏi thiết kế hướng đối tượng | [Đóng góp](#contributing) |"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "arhOWm58Vc+xFI/cfG7V/R9cIHjm4Qug8hYYoFZeSJM=",
        "originContent": "## System design topics: start here",
        "translatedContent": "## Chủ đề thiết kế hệ thống: bắt đầu từ đây"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "CHDyvxilPe7RXBI9jMcIpXBk9me7DOGrOeYdC+uNRzY=",
        "originContent": "New to system design?",
        "translatedContent": "Bạn mới làm quen với thiết kế hệ thống?"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "c2tA63dXRIB/yW0GbTS2uOdAvgMUZbWtk1JGrt+qtDQ=",
        "originContent": "First, you'll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.",
        "translatedContent": "Trước tiên, bạn cần hiểu cơ bản về các nguyên tắc phổ biến, tìm hiểu chúng là gì, cách sử dụng, và điểm mạnh/yếu của chúng."
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "D3WxUh7/m2uYtMsEsSnjStbvhi0Wn2XeuCb2o68xh/A=",
        "originContent": "### Step 1: Review the scalability video lecture",
        "translatedContent": "### Bước 1: Xem bài giảng video về khả năng mở rộng"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "ulaQKhoMVOKNtoitlnCbWFzSjLiY+5eaamEvyJUUIwg=",
        "originContent": "[Scalability Lecture at Harvard](https://www.youtube.com/watch?v=-W9F__D3oY4)",
        "translatedContent": "[Bài giảng về khả năng mở rộng tại Harvard](https://www.youtube.com/watch?v=-W9F__D3oY4)"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "PmcGFaviQjBOTD9h802f01HLHZnipOMGGyGuQYgZzWo=",
        "originContent": "* Topics covered:",
        "translatedContent": "* Các chủ đề bao gồm:"
      },
      {
        "row": 22,
        "rowsha": "+NE0o6JdfvsRP1kadSKrkQqzLsJCIzB4TunjG4sR7xI=",
        "originContent": "    * Vertical scaling",
        "translatedContent": "    * Mở rộng theo chiều dọc"
      },
      {
        "row": 23,
        "rowsha": "EFSiVOYxQOK6mFbxYxtQFlI6tBgMtOmAO6BGXWwSMxQ=",
        "originContent": "    * Horizontal scaling",
        "translatedContent": "    * Mở rộng theo chiều ngang"
      },
      {
        "row": 24,
        "rowsha": "k+uphKPYtGN7Zv8xw56Qf7aan81aVyYclpJen/6joAQ=",
        "originContent": "    * Caching",
        "translatedContent": "    * Bộ nhớ đệm"
      },
      {
        "row": 25,
        "rowsha": "407c0kbfPUL5XRnljnX1eQU0iO23sEkOW1v9g9GgLc4=",
        "originContent": "    * Load balancing",
        "translatedContent": "    * Cân bằng tải"
      },
      {
        "row": 26,
        "rowsha": "bGH4DDiXVueqa6Sb001uMTcRzYqOKc60sR2/OQh/KQk=",
        "originContent": "    * Database replication",
        "translatedContent": "    * Nhân bản cơ sở dữ liệu"
      },
      {
        "row": 27,
        "rowsha": "NajI8TNJiGszx1I4uXW4FknYHaYu2zANs5msZE9YqVI=",
        "originContent": "    * Database partitioning",
        "translatedContent": "    * Phân vùng cơ sở dữ liệu"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "m7luAJjdrWUmT7f3B7GInMgCd51cjwj6y7JzIJ59D1M=",
        "originContent": "### Step 2: Review the scalability article",
        "translatedContent": "### Bước 2: Đọc bài viết về khả năng mở rộng"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "COsWTWKNpduFy26W7EALBCq8NJhP/aKZ19PMRF+7QEw=",
        "originContent": "[Scalability](https://web.archive.org/web/20221030091841/http://www.lecloud.net/tagged/scalability/chrono)",
        "translatedContent": "[Khả năng mở rộng](https://web.archive.org/web/20221030091841/http://www.lecloud.net/tagged/scalability/chrono)"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "PmcGFaviQjBOTD9h802f01HLHZnipOMGGyGuQYgZzWo=",
        "originContent": "* Topics covered:",
        "translatedContent": "* Các chủ đề bao gồm:"
      },
      {
        "row": 34,
        "rowsha": "YIurhpqysBrCWripZpbCypmaT1be8EbECETaTJsR92Y=",
        "originContent": "    * [Clones](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)",
        "translatedContent": "    * [Bản sao](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)"
      },
      {
        "row": 35,
        "rowsha": "0retISbnsAzQ7BSwPmGKO9LgJue1jDVN7lH2FDu5UYY=",
        "originContent": "    * [Databases](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)",
        "translatedContent": "    * [Cơ sở dữ liệu](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)"
      },
      {
        "row": 36,
        "rowsha": "PQhhAW6YOeFz76/F+8aY8npUJgee+WO85EKx+nEz1Fw=",
        "originContent": "    * [Caches](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)",
        "translatedContent": "    * [Bộ nhớ đệm](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)"
      },
      {
        "row": 37,
        "rowsha": "9eYB6eVCDukkMl3A9M6grq+RmlkMJEw5RRGKWMpmi/A=",
        "originContent": "    * [Asynchronism](https://web.archive.org/web/20220926171507/https://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)",
        "translatedContent": "    * [Tính bất đồng bộ](https://web.archive.org/web/20220926171507/https://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "eWO1dBlvofnKonHt7aPex1kVvTYRVQ3hKIUgwLpAd4U=",
        "originContent": "### Next steps",
        "translatedContent": "### Các bước tiếp theo"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 12,
    "Content": "Next, we'll look at high-level trade-offs:\n\n* **Performance** vs **scalability**\n* **Latency** vs **throughput**\n* **Availability** vs **consistency**\n\nKeep in mind that **everything is a trade-off**.\n\nThen we'll dive into more specific topics such as DNS, CDNs, and load balancers.\n\n## Performance vs scalability\n\nA service is **scalable** if it results in increased **performance** in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.<sup><a href=http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html>1</a></sup>\n\nAnother way to look at performance vs scalability:\n\n* If you have a **performance** problem, your system is slow for a single user.\n* If you have a **scalability** problem, your system is fast for a single user but slow under heavy load.\n\n### Source(s) and further reading\n\n* [A word on scalability](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)\n* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n\n## Latency vs throughput\n\n**Latency** is the time to perform some action or to produce some result.\n\n**Throughput** is the number of such actions or results per unit of time.\n\nGenerally, you should aim for **maximal throughput** with **acceptable latency**.\n\n### Source(s) and further reading\n\n* [Understanding latency vs throughput](https://community.cadence.com/cadence_blogs_8/b/fv/posts/understanding-latency-vs-throughput)\n\n## Availability vs consistency\n\n### CAP theorem\n",
    "ContentSha": "3J96fMtAPtZfNniAS7/6wzXl1ty5ntM4Q00EOxpO0Ww=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Tiếp theo, chúng ta sẽ xem xét các sự đánh đổi ở cấp độ cao:\n\n* **Hiệu năng** so với **khả năng mở rộng**\n* **Độ trễ** so với **thông lượng**\n* **Khả dụng** so với **tính nhất quán**\n\nHãy nhớ rằng **mọi thứ đều là sự đánh đổi**.\n\nSau đó, chúng ta sẽ đi sâu vào các chủ đề cụ thể hơn như DNS, CDN, và bộ cân bằng tải.\n\n## Hiệu năng vs khả năng mở rộng\n\nMột dịch vụ được gọi là **có khả năng mở rộng** nếu nó có thể tăng **hiệu năng** theo tỷ lệ với tài nguyên được thêm vào. Thông thường, tăng hiệu năng nghĩa là phục vụ được nhiều đơn vị công việc hơn, nhưng nó cũng có thể là xử lý các đơn vị công việc lớn hơn, ví dụ như khi bộ dữ liệu tăng lên.<sup><a href=http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html>1</a></sup>\n\nMột cách khác để nhìn nhận về hiệu năng và khả năng mở rộng:\n\n* Nếu bạn có vấn đề về **hiệu năng**, hệ thống của bạn chậm đối với một người dùng đơn lẻ.\n* Nếu bạn có vấn đề về **khả năng mở rộng**, hệ thống của bạn nhanh với một người dùng đơn lẻ nhưng chậm khi tải lớn.\n\n### Nguồn và đọc thêm\n\n* [Một từ về khả năng mở rộng](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)\n* [Khả năng mở rộng, khả dụng, ổn định, mẫu hình](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n\n## Độ trễ vs thông lượng\n\n**Độ trễ** là thời gian để thực hiện một hành động hoặc tạo ra một kết quả.\n\n**Thông lượng** là số lượng các hành động hoặc kết quả đó trên mỗi đơn vị thời gian.\n\nThông thường, bạn nên hướng tới **thông lượng tối đa** với **độ trễ chấp nhận được**.\n\n### Nguồn và đọc thêm\n\n* [Hiểu về độ trễ so với thông lượng](https://community.cadence.com/cadence_blogs_8/b/fv/posts/understanding-latency-vs-throughput)\n\n## Khả dụng vs tính nhất quán\n\n### Định lý CAP\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "w5ale8hz4+kzLxu7uiLtVoxNGptZYMZHSlXiDlswaV4=",
        "originContent": "Next, we'll look at high-level trade-offs:",
        "translatedContent": "Tiếp theo, chúng ta sẽ xem xét các sự đánh đổi ở cấp độ cao:"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "qjQR69Oqu/Ppx/QEUCXOVf8HSq3hdrKRXN/K0v151UI=",
        "originContent": "* **Performance** vs **scalability**",
        "translatedContent": "* **Hiệu năng** so với **khả năng mở rộng**"
      },
      {
        "row": 4,
        "rowsha": "r3x4pHAC13jllWyYMHWjaKkPKk5eM1+gx4X/TaFyVZ4=",
        "originContent": "* **Latency** vs **throughput**",
        "translatedContent": "* **Độ trễ** so với **thông lượng**"
      },
      {
        "row": 5,
        "rowsha": "CKMTr1nwKiaF4FBVBp66Dd8DM4OFjqws2rra99rZBeU=",
        "originContent": "* **Availability** vs **consistency**",
        "translatedContent": "* **Khả dụng** so với **tính nhất quán**"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "BOXdYl9vca02Z3PZ2pO8gNPE3LLFbmA+uVjOXAuhCO8=",
        "originContent": "Keep in mind that **everything is a trade-off**.",
        "translatedContent": "Hãy nhớ rằng **mọi thứ đều là sự đánh đổi**."
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "2sU/n2/WW3n3LLjJf3daj3gcusdL91FrhECkSwsNJgY=",
        "originContent": "Then we'll dive into more specific topics such as DNS, CDNs, and load balancers.",
        "translatedContent": "Sau đó, chúng ta sẽ đi sâu vào các chủ đề cụ thể hơn như DNS, CDN, và bộ cân bằng tải."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "n4v15WZxT30GmzQrN9CJC0XxUj4ETeGuVkj09xC62wI=",
        "originContent": "## Performance vs scalability",
        "translatedContent": "## Hiệu năng vs khả năng mở rộng"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "s35a9eckE4u5exNg0801iQzscZvMCQh5pGhf9evcMgQ=",
        "originContent": "A service is **scalable** if it results in increased **performance** in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.<sup><a href=http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html>1</a></sup>",
        "translatedContent": "Một dịch vụ được gọi là **có khả năng mở rộng** nếu nó có thể tăng **hiệu năng** theo tỷ lệ với tài nguyên được thêm vào. Thông thường, tăng hiệu năng nghĩa là phục vụ được nhiều đơn vị công việc hơn, nhưng nó cũng có thể là xử lý các đơn vị công việc lớn hơn, ví dụ như khi bộ dữ liệu tăng lên.<sup><a href=http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html>1</a></sup>"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "HydEOXM0gkztwS0PDpMrgRBaBb/yk8phPtxtjAVyY0Y=",
        "originContent": "Another way to look at performance vs scalability:",
        "translatedContent": "Một cách khác để nhìn nhận về hiệu năng và khả năng mở rộng:"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "btMHSVZTmJ5UzfgLgm6bftc5h3AJT1Q7WHQEpAJa8ec=",
        "originContent": "* If you have a **performance** problem, your system is slow for a single user.",
        "translatedContent": "* Nếu bạn có vấn đề về **hiệu năng**, hệ thống của bạn chậm đối với một người dùng đơn lẻ."
      },
      {
        "row": 18,
        "rowsha": "CHPqEu2pDW0TkoRc4PkM1QsO5rMSROI479UtM7RqFa8=",
        "originContent": "* If you have a **scalability** problem, your system is fast for a single user but slow under heavy load.",
        "translatedContent": "* Nếu bạn có vấn đề về **khả năng mở rộng**, hệ thống của bạn nhanh với một người dùng đơn lẻ nhưng chậm khi tải lớn."
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Nguồn và đọc thêm"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "dKS13QqkW+Ee0EVYJziJLDbdGEeKaG4MhHpvPhu4NBY=",
        "originContent": "* [A word on scalability](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)",
        "translatedContent": "* [Một từ về khả năng mở rộng](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)"
      },
      {
        "row": 23,
        "rowsha": "UVMSE1BpfAJjZtNGckenaHDWkkWMyRCmwx5PRWNWv7Q=",
        "originContent": "* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)",
        "translatedContent": "* [Khả năng mở rộng, khả dụng, ổn định, mẫu hình](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "pIcmd9Ok4wS7SK2kGjcasX6gCZt9Iyr/ONy7tV8RBhA=",
        "originContent": "## Latency vs throughput",
        "translatedContent": "## Độ trễ vs thông lượng"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "uAyLmcNrOnxEO9RvTH4Tf/lPBawSOz/tXkmVf4fvQwg=",
        "originContent": "**Latency** is the time to perform some action or to produce some result.",
        "translatedContent": "**Độ trễ** là thời gian để thực hiện một hành động hoặc tạo ra một kết quả."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "UXYkFqk5HnCl9VP+s6Q8J3qML8wZPfBH6SKgvNExDJY=",
        "originContent": "**Throughput** is the number of such actions or results per unit of time.",
        "translatedContent": "**Thông lượng** là số lượng các hành động hoặc kết quả đó trên mỗi đơn vị thời gian."
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "ddvH5bSPUrL82qxnSSyRVDfheIpLurqnmcPqY6Fkoaw=",
        "originContent": "Generally, you should aim for **maximal throughput** with **acceptable latency**.",
        "translatedContent": "Thông thường, bạn nên hướng tới **thông lượng tối đa** với **độ trễ chấp nhận được**."
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Nguồn và đọc thêm"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "1Mg+XGLcrADURPRAwJDF1FedcQn0eLdImMGtq7Aqk+o=",
        "originContent": "* [Understanding latency vs throughput](https://community.cadence.com/cadence_blogs_8/b/fv/posts/understanding-latency-vs-throughput)",
        "translatedContent": "* [Hiểu về độ trễ so với thông lượng](https://community.cadence.com/cadence_blogs_8/b/fv/posts/understanding-latency-vs-throughput)"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "u6u1s0A21U4gZ3z8N1KkPOoHCuCwd9eMuyqjlTDX6pI=",
        "originContent": "## Availability vs consistency",
        "translatedContent": "## Khả dụng vs tính nhất quán"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "97t+nC0PgzkOTtQkgr6wHX3tstyuYoxvUco0kEP/bCI=",
        "originContent": "### CAP theorem",
        "translatedContent": "### Định lý CAP"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 13,
    "Content": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bgLMI2u.png\">\n  <br/>\n  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>Source: CAP theorem revisited</a></i>\n</p>\n\nIn a distributed computer system, you can only support two of the following guarantees:\n\n* **Consistency** - Every read receives the most recent write or an error\n* **Availability** - Every request receives a response, without guarantee that it contains the most recent version of the information\n* **Partition Tolerance** - The system continues to operate despite arbitrary partitioning due to network failures\n\n*Networks aren't reliable, so you'll need to support partition tolerance.  You'll need to make a software tradeoff between consistency and availability.*\n\n#### CP - consistency and partition tolerance\n\nWaiting for a response from the partitioned node might result in a timeout error.  CP is a good choice if your business needs require atomic reads and writes.\n\n#### AP - availability and partition tolerance\n\nResponses return the most readily available version of the data available on any node, which might not be the latest.  Writes might take some time to propagate when the partition is resolved.\n\nAP is a good choice if the business needs to allow for [eventual consistency](#eventual-consistency) or when the system needs to continue working despite external errors.\n\n### Source(s) and further reading\n\n* [CAP theorem revisited](http://robertgreiner.com/2014/08/cap-theorem-revisited/)\n* [A plain english introduction to CAP theorem](http://ksat.me/a-plain-english-introduction-to-cap-theorem)\n* [CAP FAQ](https://github.com/henryr/cap-faq)\n* [The CAP theorem](https://www.youtube.com/watch?v=k-Yaq8AHlFA)\n\n## Consistency patterns\n\nWith multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data.  Recall the definition of consistency from the [CAP theorem](#cap-theorem) - Every read receives the most recent write or an error.\n\n### Weak consistency\n\nAfter a write, reads may or may not see it.  A best effort approach is taken.\n\nThis approach is seen in systems such as memcached.  Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games.  For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.",
    "ContentSha": "nlNKM8AB14RiMLs0dLLz8tVwgOHTXV/u3ObIx3G8az4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bgLMI2u.png\">\n  <br/>\n  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>Nguồn: CAP theorem revisited</a></i>\n</p>\n\nTrong một hệ thống máy tính phân tán, bạn chỉ có thể đảm bảo hai trong ba yếu tố sau:\n\n* **Tính nhất quán (Consistency)** - Mỗi lần đọc đều nhận được lần ghi mới nhất hoặc báo lỗi\n* **Tính sẵn sàng (Availability)** - Mỗi yêu cầu đều nhận được phản hồi, nhưng không đảm bảo chứa phiên bản mới nhất của thông tin\n* **Chịu phân vùng (Partition Tolerance)** - Hệ thống tiếp tục hoạt động mặc dù bị phân vùng tùy ý do lỗi mạng\n\n*Mạng lưới không đáng tin cậy, do đó bạn cần hỗ trợ khả năng chịu phân vùng. Bạn sẽ cần phải đánh đổi phần mềm giữa tính nhất quán và tính sẵn sàng.*\n\n#### CP - nhất quán và chịu phân vùng\n\nChờ phản hồi từ nút bị phân vùng có thể dẫn đến lỗi quá thời gian. CP là lựa chọn tốt nếu yêu cầu kinh doanh của bạn đòi hỏi đọc và ghi nguyên tử.\n\n#### AP - sẵn sàng và chịu phân vùng\n\nPhản hồi trả về phiên bản dữ liệu có sẵn nhất trên bất kỳ nút nào, có thể không phải là phiên bản mới nhất. Các thao tác ghi có thể mất thời gian để lan truyền khi phân vùng được giải quyết.\n\nAP là lựa chọn phù hợp nếu nhu cầu kinh doanh cho phép [tính nhất quán cuối cùng](#eventual-consistency) hoặc khi hệ thống cần tiếp tục hoạt động dù xảy ra lỗi bên ngoài.\n\n### Nguồn và tài liệu tham khảo\n\n* [CAP theorem revisited](http://robertgreiner.com/2014/08/cap-theorem-revisited/)\n* [A plain english introduction to CAP theorem](http://ksat.me/a-plain-english-introduction-to-cap-theorem)\n* [CAP FAQ](https://github.com/henryr/cap-faq)\n* [The CAP theorem](https://www.youtube.com/watch?v=k-Yaq8AHlFA)\n\n## Các mẫu nhất quán\n\nKhi có nhiều bản sao của cùng một dữ liệu, chúng ta phải lựa chọn cách đồng bộ để khách hàng có cái nhìn nhất quán về dữ liệu. Hãy nhớ lại định nghĩa về tính nhất quán từ [định lý CAP](#cap-theorem) - Mỗi lần đọc nhận được lần ghi mới nhất hoặc báo lỗi.\n\n### Nhất quán yếu\n\nSau một lần ghi, các lần đọc có thể thấy hoặc không thấy kết quả đó. Một cách tiếp cận nỗ lực tốt nhất được áp dụng.\n\nCách tiếp cận này thường thấy ở các hệ thống như memcached. Tính nhất quán yếu hoạt động tốt trong các trường hợp thời gian thực như VoIP, video chat và trò chơi nhiều người chơi trực tuyến. Ví dụ, nếu bạn đang gọi điện thoại và mất sóng trong vài giây, khi kết nối lại bạn sẽ không nghe được những gì đã nói trong lúc mất kết nối.",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 2,
        "rowsha": "jgmIqgvDNG0HkCp5oQZz/iT86R/pkHxAeSzmaNcZxVQ=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bgLMI2u.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bgLMI2u.png\">"
      },
      {
        "row": 3,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 4,
        "rowsha": "3mZNt6MqcNn59CWaPOMoi80BHG/vsKxSIM8NxQhBFy0=",
        "originContent": "  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>Source: CAP theorem revisited</a></i>",
        "translatedContent": "  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>Nguồn: CAP theorem revisited</a></i>"
      },
      {
        "row": 5,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "IUMlHVhfX48rYJ/eyAKcFR60Q5UjNwbsQIrBWlm5CY0=",
        "originContent": "In a distributed computer system, you can only support two of the following guarantees:",
        "translatedContent": "Trong một hệ thống máy tính phân tán, bạn chỉ có thể đảm bảo hai trong ba yếu tố sau:"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "4YITw6Yuz+YdKMpwQXjeVICm0gpuIDn+670bEw2eplY=",
        "originContent": "* **Consistency** - Every read receives the most recent write or an error",
        "translatedContent": "* **Tính nhất quán (Consistency)** - Mỗi lần đọc đều nhận được lần ghi mới nhất hoặc báo lỗi"
      },
      {
        "row": 10,
        "rowsha": "10D71q/vlDxfFvH3hmZeoYoOwmdp1DEh4AlCXMQWc1I=",
        "originContent": "* **Availability** - Every request receives a response, without guarantee that it contains the most recent version of the information",
        "translatedContent": "* **Tính sẵn sàng (Availability)** - Mỗi yêu cầu đều nhận được phản hồi, nhưng không đảm bảo chứa phiên bản mới nhất của thông tin"
      },
      {
        "row": 11,
        "rowsha": "YUbXFE9OYJbxAD3eBiqSPLjeLEqWyqBoDWeBtiJ8mtc=",
        "originContent": "* **Partition Tolerance** - The system continues to operate despite arbitrary partitioning due to network failures",
        "translatedContent": "* **Chịu phân vùng (Partition Tolerance)** - Hệ thống tiếp tục hoạt động mặc dù bị phân vùng tùy ý do lỗi mạng"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "vnEv/Z/uqxD0L/zPXD/bCEouBXiT1NPNbGmFoAQVjWU=",
        "originContent": "*Networks aren't reliable, so you'll need to support partition tolerance.  You'll need to make a software tradeoff between consistency and availability.*",
        "translatedContent": "*Mạng lưới không đáng tin cậy, do đó bạn cần hỗ trợ khả năng chịu phân vùng. Bạn sẽ cần phải đánh đổi phần mềm giữa tính nhất quán và tính sẵn sàng.*"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "uIlYGxCSVIcgyiDm+Vd3tc0JXkzQUs9VbyUnliQAWuA=",
        "originContent": "#### CP - consistency and partition tolerance",
        "translatedContent": "#### CP - nhất quán và chịu phân vùng"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "Wsm26i8x7ANgoLe/zCnR37/Ob3iojdAMAgKqrnblG14=",
        "originContent": "Waiting for a response from the partitioned node might result in a timeout error.  CP is a good choice if your business needs require atomic reads and writes.",
        "translatedContent": "Chờ phản hồi từ nút bị phân vùng có thể dẫn đến lỗi quá thời gian. CP là lựa chọn tốt nếu yêu cầu kinh doanh của bạn đòi hỏi đọc và ghi nguyên tử."
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "yllXZdNZSLqE7v6J1Y6482RWpgtGblEX58oa3k0eQNE=",
        "originContent": "#### AP - availability and partition tolerance",
        "translatedContent": "#### AP - sẵn sàng và chịu phân vùng"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "L7LPkdcITCSx/6gVeoX43CcXkc359oOep+Xd4kjzmXw=",
        "originContent": "Responses return the most readily available version of the data available on any node, which might not be the latest.  Writes might take some time to propagate when the partition is resolved.",
        "translatedContent": "Phản hồi trả về phiên bản dữ liệu có sẵn nhất trên bất kỳ nút nào, có thể không phải là phiên bản mới nhất. Các thao tác ghi có thể mất thời gian để lan truyền khi phân vùng được giải quyết."
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "Mln5JY9vdCX6s3ovkGnUqLRk6lI9+mTbPMWiqsLr7xA=",
        "originContent": "AP is a good choice if the business needs to allow for [eventual consistency](#eventual-consistency) or when the system needs to continue working despite external errors.",
        "translatedContent": "AP là lựa chọn phù hợp nếu nhu cầu kinh doanh cho phép [tính nhất quán cuối cùng](#eventual-consistency) hoặc khi hệ thống cần tiếp tục hoạt động dù xảy ra lỗi bên ngoài."
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Nguồn và tài liệu tham khảo"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "bKtnRMt0x3UQXR6bFUlZ4Zjnkr+AaCv9r8Ou7/kXxx4=",
        "originContent": "* [CAP theorem revisited](http://robertgreiner.com/2014/08/cap-theorem-revisited/)",
        "translatedContent": "* [CAP theorem revisited](http://robertgreiner.com/2014/08/cap-theorem-revisited/)"
      },
      {
        "row": 28,
        "rowsha": "QTokrC7zed86easKJX11/v1yiJruKlTTNm2aJxJqq88=",
        "originContent": "* [A plain english introduction to CAP theorem](http://ksat.me/a-plain-english-introduction-to-cap-theorem)",
        "translatedContent": "* [A plain english introduction to CAP theorem](http://ksat.me/a-plain-english-introduction-to-cap-theorem)"
      },
      {
        "row": 29,
        "rowsha": "YJQ7Yvi1cB/F6/Vg3ZZHQC/I3rfVpxuDW2q6zmzAvTs=",
        "originContent": "* [CAP FAQ](https://github.com/henryr/cap-faq)",
        "translatedContent": "* [CAP FAQ](https://github.com/henryr/cap-faq)"
      },
      {
        "row": 30,
        "rowsha": "x0HWHwt6C3/aojIbES6hmVMqFF4OD9i/dgpZSjmo+Ts=",
        "originContent": "* [The CAP theorem](https://www.youtube.com/watch?v=k-Yaq8AHlFA)",
        "translatedContent": "* [The CAP theorem](https://www.youtube.com/watch?v=k-Yaq8AHlFA)"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "g21rEtmBOHdt+MTQCrZQZVM2biDUGo45l2NssZ/ldVs=",
        "originContent": "## Consistency patterns",
        "translatedContent": "## Các mẫu nhất quán"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "wp4Nz+J+6m1VKyrRrXtoHDB5VHblNuyNnmnHCgzvJHI=",
        "originContent": "With multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data.  Recall the definition of consistency from the [CAP theorem](#cap-theorem) - Every read receives the most recent write or an error.",
        "translatedContent": "Khi có nhiều bản sao của cùng một dữ liệu, chúng ta phải lựa chọn cách đồng bộ để khách hàng có cái nhìn nhất quán về dữ liệu. Hãy nhớ lại định nghĩa về tính nhất quán từ [định lý CAP](#cap-theorem) - Mỗi lần đọc nhận được lần ghi mới nhất hoặc báo lỗi."
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "mQHbbEHqLiJ19yb2RHsbf9aa9Du0lnYYlq5BBzttXh4=",
        "originContent": "### Weak consistency",
        "translatedContent": "### Nhất quán yếu"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "0YCMm2EUA58zDONPNWaCCFsUz1WYFU4jQgxv1w5s8Ew=",
        "originContent": "After a write, reads may or may not see it.  A best effort approach is taken.",
        "translatedContent": "Sau một lần ghi, các lần đọc có thể thấy hoặc không thấy kết quả đó. Một cách tiếp cận nỗ lực tốt nhất được áp dụng."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "H2gyDIKlIlBb2Ta4tN25gjUiCq814kY/i+1lcIXtmdI=",
        "originContent": "This approach is seen in systems such as memcached.  Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games.  For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.",
        "translatedContent": "Cách tiếp cận này thường thấy ở các hệ thống như memcached. Tính nhất quán yếu hoạt động tốt trong các trường hợp thời gian thực như VoIP, video chat và trò chơi nhiều người chơi trực tuyến. Ví dụ, nếu bạn đang gọi điện thoại và mất sóng trong vài giây, khi kết nối lại bạn sẽ không nghe được những gì đã nói trong lúc mất kết nối."
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 14,
    "Content": "\n### Eventual consistency\n\nAfter a write, reads will eventually see it (typically within milliseconds).  Data is replicated asynchronously.\n\nThis approach is seen in systems such as DNS and email.  Eventual consistency works well in highly available systems.\n\n### Strong consistency\n\nAfter a write, reads will see it.  Data is replicated synchronously.\n\nThis approach is seen in file systems and RDBMSes.  Strong consistency works well in systems that need transactions.\n\n### Source(s) and further reading\n\n* [Transactions across data centers](http://snarfed.org/transactions_across_datacenters_io.html)\n\n## Availability patterns\n\nThere are two complementary patterns to support high availability: **fail-over** and **replication**.\n\n### Fail-over\n\n#### Active-passive\n\nWith active-passive fail-over, heartbeats are sent between the active and the passive server on standby.  If the heartbeat is interrupted, the passive server takes over the active's IP address and resumes service.\n\nThe length of downtime is determined by whether the passive server is already running in 'hot' standby or whether it needs to start up from 'cold' standby.  Only the active server handles traffic.\n\nActive-passive failover can also be referred to as master-slave failover.\n\n#### Active-active\n\nIn active-active, both servers are managing traffic, spreading the load between them.\n\nIf the servers are public-facing, the DNS would need to know about the public IPs of both servers.  If the servers are internal-facing, application logic would need to know about both servers.\n\nActive-active failover can also be referred to as master-master failover.\n\n### Disadvantage(s): failover",
    "ContentSha": "Gej6bybZnoGj5vLH+IOLm2NuKTHBE7Z2TA3eWaBaiak=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n### Tính nhất quán cuối cùng\n\nSau một lần ghi, các lần đọc cuối cùng sẽ thấy nó (thường trong vòng mili giây). Dữ liệu được sao chép bất đồng bộ.\n\nCách tiếp cận này được sử dụng trong các hệ thống như DNS và email. Tính nhất quán cuối cùng hoạt động tốt trong các hệ thống có độ khả dụng cao.\n\n### Tính nhất quán mạnh\n\nSau một lần ghi, các lần đọc sẽ thấy nó. Dữ liệu được sao chép đồng bộ.\n\nCách tiếp cận này được sử dụng trong hệ thống tệp và các hệ quản trị cơ sở dữ liệu quan hệ (RDBMS). Tính nhất quán mạnh phù hợp với các hệ thống cần giao dịch.\n\n### Nguồn và tài liệu đọc thêm\n\n* [Giao dịch trên nhiều trung tâm dữ liệu](http://snarfed.org/transactions_across_datacenters_io.html)\n\n## Mô hình khả dụng\n\nCó hai mô hình bổ trợ để hỗ trợ khả dụng cao: **chuyển đổi dự phòng** và **sao chép dữ liệu**.\n\n### Chuyển đổi dự phòng\n\n#### Chủ động - bị động\n\nVới chuyển đổi dự phòng chủ động - bị động, các tín hiệu nhịp tim được gửi giữa máy chủ chủ động và máy chủ bị động ở chế độ chờ. Nếu tín hiệu nhịp tim bị gián đoạn, máy chủ bị động sẽ tiếp nhận địa chỉ IP của máy chủ chủ động và tiếp tục dịch vụ.\n\nThời gian ngừng hoạt động phụ thuộc vào việc máy chủ bị động đã chạy ở chế độ chờ 'nóng' hay cần khởi động từ chế độ chờ 'lạnh'. Chỉ máy chủ chủ động xử lý lưu lượng.\n\nChuyển đổi dự phòng chủ động - bị động còn được gọi là chuyển đổi dự phòng chủ - tớ.\n\n#### Chủ động - chủ động\n\nTrong chuyển đổi dự phòng chủ động - chủ động, cả hai máy chủ đều xử lý lưu lượng, phân chia tải giữa chúng.\n\nNếu các máy chủ hướng ra công chúng, DNS cần biết về các địa chỉ IP công khai của cả hai máy chủ. Nếu các máy chủ hướng nội bộ, logic ứng dụng cần biết về cả hai máy chủ.\n\nChuyển đổi dự phòng chủ động - chủ động còn được gọi là chuyển đổi dự phòng chủ - chủ.\n\n### Nhược điểm: chuyển đổi dự phòng",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "fzWLGScmBqM9wB0hT7CvU4rZKDZBLKpoDdbx7j7LfZA=",
        "originContent": "### Eventual consistency",
        "translatedContent": "### Tính nhất quán cuối cùng"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "yW8GOPM+/YqSlTSkhDuizttI6PQuWYuDvrXC1lYTGbk=",
        "originContent": "After a write, reads will eventually see it (typically within milliseconds).  Data is replicated asynchronously.",
        "translatedContent": "Sau một lần ghi, các lần đọc cuối cùng sẽ thấy nó (thường trong vòng mili giây). Dữ liệu được sao chép bất đồng bộ."
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "O4vKK25rQgniSTeaE3xOqV2OAsBimVdMLXXAO6PEJ8M=",
        "originContent": "This approach is seen in systems such as DNS and email.  Eventual consistency works well in highly available systems.",
        "translatedContent": "Cách tiếp cận này được sử dụng trong các hệ thống như DNS và email. Tính nhất quán cuối cùng hoạt động tốt trong các hệ thống có độ khả dụng cao."
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "7EGR06HbKmQeQKXBQlQDAklNjEvD1t9htWKMJHDa7HE=",
        "originContent": "### Strong consistency",
        "translatedContent": "### Tính nhất quán mạnh"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "Ws8TjZacSVHsFMdg3xbZJn0k20kTCNn8mhkD9dqLoXI=",
        "originContent": "After a write, reads will see it.  Data is replicated synchronously.",
        "translatedContent": "Sau một lần ghi, các lần đọc sẽ thấy nó. Dữ liệu được sao chép đồng bộ."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "x3hEsG+pr3l5I68fcG+HHPdnUxfljYdogX6hXYhutxE=",
        "originContent": "This approach is seen in file systems and RDBMSes.  Strong consistency works well in systems that need transactions.",
        "translatedContent": "Cách tiếp cận này được sử dụng trong hệ thống tệp và các hệ quản trị cơ sở dữ liệu quan hệ (RDBMS). Tính nhất quán mạnh phù hợp với các hệ thống cần giao dịch."
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Nguồn và tài liệu đọc thêm"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "32vF4B1SjjeoG7B+GNuO+NRikiz25/Vf+F71/ZqQh2s=",
        "originContent": "* [Transactions across data centers](http://snarfed.org/transactions_across_datacenters_io.html)",
        "translatedContent": "* [Giao dịch trên nhiều trung tâm dữ liệu](http://snarfed.org/transactions_across_datacenters_io.html)"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "j7+7CA8jUmk4jYZ0E5futxtzO0GG0wexr61V+kwnDlo=",
        "originContent": "## Availability patterns",
        "translatedContent": "## Mô hình khả dụng"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "oKl9q1hfWZxeIEYaWU74Tk2omlmcOjUb8hfb0RMpq6o=",
        "originContent": "There are two complementary patterns to support high availability: **fail-over** and **replication**.",
        "translatedContent": "Có hai mô hình bổ trợ để hỗ trợ khả dụng cao: **chuyển đổi dự phòng** và **sao chép dữ liệu**."
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "zwpUQRugriEEZ455A69maz0G/11aeFh/9iaYoj3DsJc=",
        "originContent": "### Fail-over",
        "translatedContent": "### Chuyển đổi dự phòng"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "zE3LvlgviFo+XBZAZAqjKSLk7MfN4jmwoumi1UlyIa0=",
        "originContent": "#### Active-passive",
        "translatedContent": "#### Chủ động - bị động"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "//sOLPwoYJI8jgHSbsAsOUF9gzxIFEIei6IS0GWBfZ0=",
        "originContent": "With active-passive fail-over, heartbeats are sent between the active and the passive server on standby.  If the heartbeat is interrupted, the passive server takes over the active's IP address and resumes service.",
        "translatedContent": "Với chuyển đổi dự phòng chủ động - bị động, các tín hiệu nhịp tim được gửi giữa máy chủ chủ động và máy chủ bị động ở chế độ chờ. Nếu tín hiệu nhịp tim bị gián đoạn, máy chủ bị động sẽ tiếp nhận địa chỉ IP của máy chủ chủ động và tiếp tục dịch vụ."
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "Z2h13M2s42WWdrw6RJxNKTHsPDklH4Fx5eTWjuFV5Bo=",
        "originContent": "The length of downtime is determined by whether the passive server is already running in 'hot' standby or whether it needs to start up from 'cold' standby.  Only the active server handles traffic.",
        "translatedContent": "Thời gian ngừng hoạt động phụ thuộc vào việc máy chủ bị động đã chạy ở chế độ chờ 'nóng' hay cần khởi động từ chế độ chờ 'lạnh'. Chỉ máy chủ chủ động xử lý lưu lượng."
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "0qoq8w7ykvY04YVXf36ZuA34YfapuItNmEB3ol+8l2o=",
        "originContent": "Active-passive failover can also be referred to as master-slave failover.",
        "translatedContent": "Chuyển đổi dự phòng chủ động - bị động còn được gọi là chuyển đổi dự phòng chủ - tớ."
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "K5pPe/DWSECNKm/vr2APrIh+FQBpXl5wCTq5GfFI0nc=",
        "originContent": "#### Active-active",
        "translatedContent": "#### Chủ động - chủ động"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "ueX7Dtxa+tFk3JS2osj1y4rQ8v6tNL3jYtk74TPZYQw=",
        "originContent": "In active-active, both servers are managing traffic, spreading the load between them.",
        "translatedContent": "Trong chuyển đổi dự phòng chủ động - chủ động, cả hai máy chủ đều xử lý lưu lượng, phân chia tải giữa chúng."
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "Z2+DcHoSHBy7EwRU0PxECoKfN73rdN4LlzYN18oUNC4=",
        "originContent": "If the servers are public-facing, the DNS would need to know about the public IPs of both servers.  If the servers are internal-facing, application logic would need to know about both servers.",
        "translatedContent": "Nếu các máy chủ hướng ra công chúng, DNS cần biết về các địa chỉ IP công khai của cả hai máy chủ. Nếu các máy chủ hướng nội bộ, logic ứng dụng cần biết về cả hai máy chủ."
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "HZeAIhcdCZV5uNs5qKLp+uGpV5bJaLx0oTMfaP4SY6A=",
        "originContent": "Active-active failover can also be referred to as master-master failover.",
        "translatedContent": "Chuyển đổi dự phòng chủ động - chủ động còn được gọi là chuyển đổi dự phòng chủ - chủ."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "RWOekJmT9YbEvwdNPTswoki1IsKTYJsDCifIo6/YkRo=",
        "originContent": "### Disadvantage(s): failover",
        "translatedContent": "### Nhược điểm: chuyển đổi dự phòng"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 15,
    "Content": "\n* Fail-over adds more hardware and additional complexity.\n* There is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.\n\n### Replication\n\n#### Master-slave and master-master\n\nThis topic is further discussed in the [Database](#database) section:\n\n* [Master-slave replication](#master-slave-replication)\n* [Master-master replication](#master-master-replication)\n\n### Availability in numbers\n\nAvailability is often quantified by uptime (or downtime) as a percentage of time the service is available.  Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.\n\n#### 99.9% availability - three 9s\n\n| Duration            | Acceptable downtime|\n|---------------------|--------------------|\n| Downtime per year   | 8h 45min 57s       |\n| Downtime per month  | 43m 49.7s          |\n| Downtime per week   | 10m 4.8s           |\n| Downtime per day    | 1m 26.4s           |\n\n#### 99.99% availability - four 9s\n\n| Duration            | Acceptable downtime|\n|---------------------|--------------------|\n| Downtime per year   | 52min 35.7s        |\n| Downtime per month  | 4m 23s             |\n| Downtime per week   | 1m 5s              |\n| Downtime per day    | 8.6s               |\n\n#### Availability in parallel vs in sequence\n\nIf a service consists of multiple components prone to failure, the service's overall availability depends on whether the components are in sequence or in parallel.\n\n###### In sequence",
    "ContentSha": "7iHIUIb6fJkzxQcIKEVyv2l5jzfrJATtAgzkxfBD6fg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n* Chuyển đổi dự phòng (fail-over) yêu cầu thêm phần cứng và tăng độ phức tạp.\n* Có khả năng mất dữ liệu nếu hệ thống chủ động gặp sự cố trước khi dữ liệu mới được ghi được sao chép sang hệ thống bị động.\n\n### Sao chép dữ liệu (Replication)\n\n#### Mô hình chủ-tớ và chủ-chủ\n\nChủ đề này được thảo luận thêm trong phần [Cơ sở dữ liệu](#database):\n\n* [Sao chép dữ liệu chủ-tớ](#master-slave-replication)\n* [Sao chép dữ liệu chủ-chủ](#master-master-replication)\n\n### Tỷ lệ sẵn sàng dưới dạng số liệu\n\nTỷ lệ sẵn sàng thường được định lượng bằng thời gian hoạt động (hoặc thời gian ngừng hoạt động) dưới dạng phần trăm thời gian dịch vụ có thể truy cập. Tỷ lệ sẵn sàng thường được đo bằng số lượng số 9--một dịch vụ có tỷ lệ sẵn sàng 99,99% được mô tả là có bốn số 9.\n\n#### Tỷ lệ sẵn sàng 99,9% - ba số 9\n\n| Thời lượng             | Thời gian ngừng hoạt động chấp nhận được|\n|------------------------|-----------------------------------------|\n| Ngừng hoạt động mỗi năm| 8 giờ 45 phút 57 giây                   |\n| Ngừng hoạt động mỗi tháng| 43 phút 49,7 giây                    |\n| Ngừng hoạt động mỗi tuần| 10 phút 4,8 giây                      |\n| Ngừng hoạt động mỗi ngày| 1 phút 26,4 giây                      |\n\n#### Tỷ lệ sẵn sàng 99,99% - bốn số 9\n\n| Thời lượng             | Thời gian ngừng hoạt động chấp nhận được|\n|------------------------|-----------------------------------------|\n| Ngừng hoạt động mỗi năm| 52 phút 35,7 giây                       |\n| Ngừng hoạt động mỗi tháng| 4 phút 23 giây                       |\n| Ngừng hoạt động mỗi tuần| 1 phút 5 giây                         |\n| Ngừng hoạt động mỗi ngày| 8,6 giây                              |\n\n#### Tỷ lệ sẵn sàng song song so với tuần tự\n\nNếu một dịch vụ bao gồm nhiều thành phần có khả năng gặp sự cố, tỷ lệ sẵn sàng tổng thể của dịch vụ phụ thuộc vào việc các thành phần này được sắp xếp theo tuần tự hay song song.\n\n###### Theo tuần tự",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "CqXi6vzg9j59CHyL4xe27TEVhTRrc7cbxfpUzOHpWYw=",
        "originContent": "* Fail-over adds more hardware and additional complexity.",
        "translatedContent": "* Chuyển đổi dự phòng (fail-over) yêu cầu thêm phần cứng và tăng độ phức tạp."
      },
      {
        "row": 3,
        "rowsha": "eGTsRaJOuHmTWdjNeBa2CHLtmWLaSh5BnevPfBmOeJM=",
        "originContent": "* There is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.",
        "translatedContent": "* Có khả năng mất dữ liệu nếu hệ thống chủ động gặp sự cố trước khi dữ liệu mới được ghi được sao chép sang hệ thống bị động."
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "4K5dwxkOA5wbk7sYlTLb2yj4mVqhb/pvixuIjBDstIQ=",
        "originContent": "### Replication",
        "translatedContent": "### Sao chép dữ liệu (Replication)"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "fZEStNfIoL9uMNDUbzk47uD67gGF+8vm9BXvyfbjZbw=",
        "originContent": "#### Master-slave and master-master",
        "translatedContent": "#### Mô hình chủ-tớ và chủ-chủ"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "Av7q+EkMsj599unhnzolG9jvpsUe0YsdlCznVgjwo0s=",
        "originContent": "This topic is further discussed in the [Database](#database) section:",
        "translatedContent": "Chủ đề này được thảo luận thêm trong phần [Cơ sở dữ liệu](#database):"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "SA3nlUBsaWhuYXnyYlWDZbLK+51HD2tbupezRC7X2hI=",
        "originContent": "* [Master-slave replication](#master-slave-replication)",
        "translatedContent": "* [Sao chép dữ liệu chủ-tớ](#master-slave-replication)"
      },
      {
        "row": 12,
        "rowsha": "W2fFMZ82YalJ0easRaSk/To8mGSonyvxYNWaFcfX6V0=",
        "originContent": "* [Master-master replication](#master-master-replication)",
        "translatedContent": "* [Sao chép dữ liệu chủ-chủ](#master-master-replication)"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "atVZb+BfI7TM1RhOEfzMxNS+ZdZ4+NImuBUCcCBqCG4=",
        "originContent": "### Availability in numbers",
        "translatedContent": "### Tỷ lệ sẵn sàng dưới dạng số liệu"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "Am0f64EGQkWXK+ft673uELRD3uwOLbqfoe14w7nKkZ4=",
        "originContent": "Availability is often quantified by uptime (or downtime) as a percentage of time the service is available.  Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.",
        "translatedContent": "Tỷ lệ sẵn sàng thường được định lượng bằng thời gian hoạt động (hoặc thời gian ngừng hoạt động) dưới dạng phần trăm thời gian dịch vụ có thể truy cập. Tỷ lệ sẵn sàng thường được đo bằng số lượng số 9--một dịch vụ có tỷ lệ sẵn sàng 99,99% được mô tả là có bốn số 9."
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "I3yIi2rYdyymyC5foh4MJFlGximHnF9E1NppPl7AgYk=",
        "originContent": "#### 99.9% availability - three 9s",
        "translatedContent": "#### Tỷ lệ sẵn sàng 99,9% - ba số 9"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "WtpvnLjcMkNnN2EE2b3LI08oDneHj2KbzQSCbgXo6Hg=",
        "originContent": "| Duration            | Acceptable downtime|",
        "translatedContent": "| Thời lượng             | Thời gian ngừng hoạt động chấp nhận được|"
      },
      {
        "row": 21,
        "rowsha": "dNHX42cgUDO29VoFw6hieeObZ7C+S6t5B5f9tekwjmc=",
        "originContent": "|---------------------|--------------------|",
        "translatedContent": "|------------------------|-----------------------------------------|"
      },
      {
        "row": 22,
        "rowsha": "5MDGDdfbHznP7KIJhmO2QAb2NzjkNZ0T/gNrbLRbL9o=",
        "originContent": "| Downtime per year   | 8h 45min 57s       |",
        "translatedContent": "| Ngừng hoạt động mỗi năm| 8 giờ 45 phút 57 giây                   |"
      },
      {
        "row": 23,
        "rowsha": "04BUDzQ37NhJQUU65gxgjPmdnS8HaXuLhiI2EkTLLd4=",
        "originContent": "| Downtime per month  | 43m 49.7s          |",
        "translatedContent": "| Ngừng hoạt động mỗi tháng| 43 phút 49,7 giây                    |"
      },
      {
        "row": 24,
        "rowsha": "GFTVysJcBOB9soeZpXAIpyR9pLbghp3VppIpy3EWrTs=",
        "originContent": "| Downtime per week   | 10m 4.8s           |",
        "translatedContent": "| Ngừng hoạt động mỗi tuần| 10 phút 4,8 giây                      |"
      },
      {
        "row": 25,
        "rowsha": "J0YocIstb2J6pSDKtUDNQHW0icPpnMHt/vioNxOwxlE=",
        "originContent": "| Downtime per day    | 1m 26.4s           |",
        "translatedContent": "| Ngừng hoạt động mỗi ngày| 1 phút 26,4 giây                      |"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "3rrv1Js1yLQjioaOahOLWwXiJs7ka/w5gyWkFgffq34=",
        "originContent": "#### 99.99% availability - four 9s",
        "translatedContent": "#### Tỷ lệ sẵn sàng 99,99% - bốn số 9"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "WtpvnLjcMkNnN2EE2b3LI08oDneHj2KbzQSCbgXo6Hg=",
        "originContent": "| Duration            | Acceptable downtime|",
        "translatedContent": "| Thời lượng             | Thời gian ngừng hoạt động chấp nhận được|"
      },
      {
        "row": 30,
        "rowsha": "dNHX42cgUDO29VoFw6hieeObZ7C+S6t5B5f9tekwjmc=",
        "originContent": "|---------------------|--------------------|",
        "translatedContent": "|------------------------|-----------------------------------------|"
      },
      {
        "row": 31,
        "rowsha": "+lzPnt4t6YVMkw+14dcMepWXtyKwQA+KT8slwXqdlw8=",
        "originContent": "| Downtime per year   | 52min 35.7s        |",
        "translatedContent": "| Ngừng hoạt động mỗi năm| 52 phút 35,7 giây                       |"
      },
      {
        "row": 32,
        "rowsha": "cyIXC9j4x5CIkyJm+FJhwCE9yJhQG4FZIDB+3sQGr88=",
        "originContent": "| Downtime per month  | 4m 23s             |",
        "translatedContent": "| Ngừng hoạt động mỗi tháng| 4 phút 23 giây                       |"
      },
      {
        "row": 33,
        "rowsha": "s2V+GE82uucvBDH8c5v8jWNv6h5mT6bvPyxOP85fFls=",
        "originContent": "| Downtime per week   | 1m 5s              |",
        "translatedContent": "| Ngừng hoạt động mỗi tuần| 1 phút 5 giây                         |"
      },
      {
        "row": 34,
        "rowsha": "n36aeJpcdhikvDDEMXRpmhf1u0M0mjhd6sdHfuRNeX0=",
        "originContent": "| Downtime per day    | 8.6s               |",
        "translatedContent": "| Ngừng hoạt động mỗi ngày| 8,6 giây                              |"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "1lBPemP1eX9L7+SxFKkGrb/Hq6633g7fsEkDgd36mAk=",
        "originContent": "#### Availability in parallel vs in sequence",
        "translatedContent": "#### Tỷ lệ sẵn sàng song song so với tuần tự"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "/VxXhtl3F6SXgtrPj9Kzl2H/+XrS0Sqeu03gzyr6wDE=",
        "originContent": "If a service consists of multiple components prone to failure, the service's overall availability depends on whether the components are in sequence or in parallel.",
        "translatedContent": "Nếu một dịch vụ bao gồm nhiều thành phần có khả năng gặp sự cố, tỷ lệ sẵn sàng tổng thể của dịch vụ phụ thuộc vào việc các thành phần này được sắp xếp theo tuần tự hay song song."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "HVfQgp4NNWDL/4e4EVnj8OD/aGrYSMIlsj8F1jgCfi4=",
        "originContent": "###### In sequence",
        "translatedContent": "###### Theo tuần tự"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 16,
    "Content": "\nOverall availability decreases when two components with availability < 100% are in sequence:\n",
    "ContentSha": "MoWr3NjGedfagwyU1j0TqrIfLCsOUBLZEeMCD+o/O+Q=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nTổng độ sẵn sàng giảm khi hai thành phần có độ sẵn sàng < 100% được kết nối nối tiếp:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "sAu1j1dmf0qL9TE2b1uG7pg1al1cDmHdRW96gsk8xPg=",
        "originContent": "Overall availability decreases when two components with availability < 100% are in sequence:",
        "translatedContent": "Tổng độ sẵn sàng giảm khi hai thành phần có độ sẵn sàng < 100% được kết nối nối tiếp:"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 17,
    "Content": "```\nAvailability (Total) = Availability (Foo) * Availability (Bar)\n```",
    "ContentSha": "lB9bEqLhXuNZd7e3CBBSvV+eKTVRfJQnqnxct5vKoDI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nAvailability (Total) = Availability (Foo) * Availability (Bar)\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "ujn1b+AHDyswPbA7zS8UmPllNJM4sOawWcrGYJ4rZ0A=",
        "originContent": "Availability (Total) = Availability (Foo) * Availability (Bar)",
        "translatedContent": "Availability (Total) = Availability (Foo) * Availability (Bar)"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 18,
    "Content": "\nIf both `Foo` and `Bar` each had 99.9% availability, their total availability in sequence would be 99.8%.\n\n###### In parallel\n\nOverall availability increases when two components with availability < 100% are in parallel:\n",
    "ContentSha": "8idS6k4SI9XJ+uNRuiFmAXUVaamdekOMo2MnsD7SUdw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nNếu cả `Foo` và `Bar` đều có độ sẵn sàng 99,9%, tổng độ sẵn sàng của chúng khi nối tiếp sẽ là 99,8%.\n\n###### Song song\n\nĐộ sẵn sàng tổng thể tăng lên khi hai thành phần có độ sẵn sàng < 100% được kết nối song song:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "ZQn0BZzlJ+UR+I1y3I6cKEeMD1zD7iiuU8/3fLb4K3w=",
        "originContent": "If both `Foo` and `Bar` each had 99.9% availability, their total availability in sequence would be 99.8%.",
        "translatedContent": "Nếu cả `Foo` và `Bar` đều có độ sẵn sàng 99,9%, tổng độ sẵn sàng của chúng khi nối tiếp sẽ là 99,8%."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "9hcGr5rXFEwBAbYXZ7c8V5UAPMJii8tZnd7JMK7PowU=",
        "originContent": "###### In parallel",
        "translatedContent": "###### Song song"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "hh78B11N/veJv3y1/p+NOj4bRGWwYJVLPH6NJ5Dp5Ao=",
        "originContent": "Overall availability increases when two components with availability < 100% are in parallel:",
        "translatedContent": "Độ sẵn sàng tổng thể tăng lên khi hai thành phần có độ sẵn sàng < 100% được kết nối song song:"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 19,
    "Content": "```\nAvailability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))\n```",
    "ContentSha": "MYI40NgkLqO1BQo3TOiX+3Zu0VfgykdTCZcU4oJjKTs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nAvailability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "OAzcShtWVHCVepnZrS+WxSpftaJ7IoW7YnmDfRwUs4w=",
        "originContent": "Availability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))",
        "translatedContent": "Availability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 20,
    "Content": "\nIf both `Foo` and `Bar` each had 99.9% availability, their total availability in parallel would be 99.9999%.\n\n## Domain name system\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/IOyLj4i.jpg\">\n  <br/>\n  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>Source: DNS security presentation</a></i>\n</p>\n\nA Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.\n\nDNS is hierarchical, with a few authoritative servers at the top level.  Your router or ISP provides information about which DNS server(s) to contact when doing a lookup.  Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays.  DNS results can also be cached by your browser or OS for a certain period of time, determined by the [time to live (TTL)](https://en.wikipedia.org/wiki/Time_to_live).\n\n* **NS record (name server)** - Specifies the DNS servers for your domain/subdomain.\n* **MX record (mail exchange)** - Specifies the mail servers for accepting messages.\n* **A record (address)** - Points a name to an IP address.\n* **CNAME (canonical)** - Points a name to another name or `CNAME` (example.com to www.example.com) or to an `A` record.\n\nServices such as [CloudFlare](https://www.cloudflare.com/dns/) and [Route 53](https://aws.amazon.com/route53/) provide managed DNS services.  Some DNS services can route traffic through various methods:\n\n* [Weighted round robin](https://www.jscape.com/blog/load-balancing-algorithms)\n    * Prevent traffic from going to servers under maintenance\n    * Balance between varying cluster sizes\n    * A/B testing\n* [Latency-based](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-latency.html)\n* [Geolocation-based](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html)\n\n### Disadvantage(s): DNS\n\n* Accessing a DNS server introduces a slight delay, although mitigated by caching described above.\n* DNS server management could be complex and is generally managed by [governments, ISPs, and large companies](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729).\n* DNS services have recently come under [DDoS attack](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/), preventing users from accessing websites such as Twitter without knowing Twitter's IP address(es).\n\n### Source(s) and further reading\n\n* [DNS architecture](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)\n* [Wikipedia](https://en.wikipedia.org/wiki/Domain_Name_System)\n* [DNS articles](https://support.dnsimple.com/categories/dns/)",
    "ContentSha": "YhlbRAwaKJI7wcegCHvNOzGIOxkIHtEHSr0a7L+iJEc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Nếu cả `Foo` và `Bar` đều có mức độ sẵn sàng 99,9%, tổng mức độ sẵn sàng khi chạy song song của chúng sẽ là 99,9999%.\n\n## Hệ thống tên miền (Domain name system)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/IOyLj4i.jpg\">\n  <br/>\n  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>Nguồn: Bài thuyết trình về bảo mật DNS</a></i>\n</p>\n\nHệ thống tên miền (DNS) chuyển đổi một tên miền như www.example.com thành một địa chỉ IP.\n\nDNS có cấu trúc phân cấp, với một vài máy chủ có thẩm quyền ở cấp cao nhất.  Bộ định tuyến hoặc nhà cung cấp dịch vụ internet (ISP) của bạn cung cấp thông tin về máy chủ DNS cần liên hệ khi thực hiện truy vấn.  Các máy chủ DNS cấp thấp hơn lưu bộ nhớ đệm các ánh xạ, có thể bị lỗi thời do độ trễ truyền bá DNS.  Kết quả DNS cũng có thể được trình duyệt hoặc hệ điều hành của bạn lưu vào bộ đệm trong một khoảng thời gian nhất định, được xác định bởi [thời gian tồn tại (TTL)](https://en.wikipedia.org/wiki/Time_to_live).\n\n* **Bản ghi NS (name server)** - Chỉ định các máy chủ DNS cho miền/phụ miền của bạn.\n* **Bản ghi MX (mail exchange)** - Chỉ định các máy chủ thư để nhận tin nhắn.\n* **Bản ghi A (address)** - Trỏ một tên đến một địa chỉ IP.\n* **CNAME (canonical)** - Trỏ một tên đến tên khác hoặc `CNAME` (example.com đến www.example.com) hoặc đến bản ghi `A`.\n\nCác dịch vụ như [CloudFlare](https://www.cloudflare.com/dns/) và [Route 53](https://aws.amazon.com/route53/) cung cấp dịch vụ DNS được quản lý.  Một số dịch vụ DNS có thể định tuyến lưu lượng thông qua các phương pháp khác nhau:\n\n* [Vòng lặp trọng số](https://www.jscape.com/blog/load-balancing-algorithms)\n    * Ngăn lưu lượng truy cập đến các máy chủ đang bảo trì\n    * Cân bằng giữa các cụm có kích thước khác nhau\n    * Kiểm thử A/B\n* [Dựa trên độ trễ](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-latency.html)\n* [Dựa trên vị trí địa lý](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html)\n\n### Nhược điểm: DNS\n\n* Truy cập một máy chủ DNS gây ra độ trễ nhỏ, mặc dù đã được giảm nhẹ bởi cơ chế lưu bộ nhớ đệm như trên.\n* Quản lý máy chủ DNS có thể phức tạp và thường được quản lý bởi [chính phủ, ISP, và các công ty lớn](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729).\n* Các dịch vụ DNS gần đây đã bị [tấn công DDoS](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/), ngăn người dùng truy cập các website như Twitter nếu không biết địa chỉ IP của Twitter.\n\n### Nguồn và tài liệu đọc thêm\n\n* [Kiến trúc DNS](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)\n* [Wikipedia](https://en.wikipedia.org/wiki/Domain_Name_System)\n* [Các bài viết về DNS](https://support.dnsimple.com/categories/dns/)\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Nếu cả `Foo` và `Bar` đều có mức độ sẵn sàng 99,9%, tổng mức độ sẵn sàng khi chạy song song của chúng sẽ là 99,9999%."
      },
      {
        "row": 2,
        "rowsha": "wEjBbUe0Tw7vSUDMwpwueoCi2fzQBeD1YRy3BNYCPAw=",
        "originContent": "If both `Foo` and `Bar` each had 99.9% availability, their total availability in parallel would be 99.9999%.",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## Hệ thống tên miền (Domain name system)"
      },
      {
        "row": 4,
        "rowsha": "Cx+spnnlT0zDhHJXINRwtDBG3hDsFeU9IVBvJdgafbw=",
        "originContent": "## Domain name system",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 6,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/IOyLj4i.jpg\">"
      },
      {
        "row": 7,
        "rowsha": "khQ8Xi6IZA/4nZ9NdWqbAoLb6BDXur2KZ7Gz9esREjc=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/IOyLj4i.jpg\">",
        "translatedContent": "  <br/>"
      },
      {
        "row": 8,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>Nguồn: Bài thuyết trình về bảo mật DNS</a></i>"
      },
      {
        "row": 9,
        "rowsha": "XOuXqRofYk954ZXtnfuXu1IYf0iz3a0CbYw4UaF2oRI=",
        "originContent": "  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>Source: DNS security presentation</a></i>",
        "translatedContent": "</p>"
      },
      {
        "row": 10,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Hệ thống tên miền (DNS) chuyển đổi một tên miền như www.example.com thành một địa chỉ IP."
      },
      {
        "row": 12,
        "rowsha": "xOzNN1uYrR3gW6N/f994r2OaY+WGigANgTblFfo6/eQ=",
        "originContent": "A Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "DNS có cấu trúc phân cấp, với một vài máy chủ có thẩm quyền ở cấp cao nhất.  Bộ định tuyến hoặc nhà cung cấp dịch vụ internet (ISP) của bạn cung cấp thông tin về máy chủ DNS cần liên hệ khi thực hiện truy vấn.  Các máy chủ DNS cấp thấp hơn lưu bộ nhớ đệm các ánh xạ, có thể bị lỗi thời do độ trễ truyền bá DNS.  Kết quả DNS cũng có thể được trình duyệt hoặc hệ điều hành của bạn lưu vào bộ đệm trong một khoảng thời gian nhất định, được xác định bởi [thời gian tồn tại (TTL)](https://en.wikipedia.org/wiki/Time_to_live)."
      },
      {
        "row": 14,
        "rowsha": "9J3zqU+zpPRpz4vKc9lf2QHcvP2IwE0rlm6Uwa7GnrY=",
        "originContent": "DNS is hierarchical, with a few authoritative servers at the top level.  Your router or ISP provides information about which DNS server(s) to contact when doing a lookup.  Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays.  DNS results can also be cached by your browser or OS for a certain period of time, determined by the [time to live (TTL)](https://en.wikipedia.org/wiki/Time_to_live).",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* **Bản ghi NS (name server)** - Chỉ định các máy chủ DNS cho miền/phụ miền của bạn."
      },
      {
        "row": 16,
        "rowsha": "Br0DkfzyjGkzSi8akOKSXazpXUF3LVY4zL9wkK7gBgk=",
        "originContent": "* **NS record (name server)** - Specifies the DNS servers for your domain/subdomain.",
        "translatedContent": "* **Bản ghi MX (mail exchange)** - Chỉ định các máy chủ thư để nhận tin nhắn."
      },
      {
        "row": 17,
        "rowsha": "CX76Bn4rID1Y8BBFXOXFb6ekY6mlxUYNcCi+CKhNa0s=",
        "originContent": "* **MX record (mail exchange)** - Specifies the mail servers for accepting messages.",
        "translatedContent": "* **Bản ghi A (address)** - Trỏ một tên đến một địa chỉ IP."
      },
      {
        "row": 18,
        "rowsha": "d/he/sZ62q7m2wjCaov8wwtaX53pioHSPSNd1w9ANmU=",
        "originContent": "* **A record (address)** - Points a name to an IP address.",
        "translatedContent": "* **CNAME (canonical)** - Trỏ một tên đến tên khác hoặc `CNAME` (example.com đến www.example.com) hoặc đến bản ghi `A`."
      },
      {
        "row": 19,
        "rowsha": "6OC2ZT8D6FLEFTOkwKnqT5UOejeAoGs5l05q+4jXmpc=",
        "originContent": "* **CNAME (canonical)** - Points a name to another name or `CNAME` (example.com to www.example.com) or to an `A` record.",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Các dịch vụ như [CloudFlare](https://www.cloudflare.com/dns/) và [Route 53](https://aws.amazon.com/route53/) cung cấp dịch vụ DNS được quản lý.  Một số dịch vụ DNS có thể định tuyến lưu lượng thông qua các phương pháp khác nhau:"
      },
      {
        "row": 21,
        "rowsha": "l4f3FoQaKwMWBZa+tTdRV1n7X/wSp1wfMG+NKowv+MA=",
        "originContent": "Services such as [CloudFlare](https://www.cloudflare.com/dns/) and [Route 53](https://aws.amazon.com/route53/) provide managed DNS services.  Some DNS services can route traffic through various methods:",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [Vòng lặp trọng số](https://www.jscape.com/blog/load-balancing-algorithms)"
      },
      {
        "row": 23,
        "rowsha": "3O5SyVIA03wkwtzQV1Yvf5CWn7Wu0wveSkQniwAr9iI=",
        "originContent": "* [Weighted round robin](https://www.jscape.com/blog/load-balancing-algorithms)",
        "translatedContent": "    * Ngăn lưu lượng truy cập đến các máy chủ đang bảo trì"
      },
      {
        "row": 24,
        "rowsha": "sJWpY/yHNL4vWsYngx0qmNb+qxax5uSjNfUCOqOE5lU=",
        "originContent": "    * Prevent traffic from going to servers under maintenance",
        "translatedContent": "    * Cân bằng giữa các cụm có kích thước khác nhau"
      },
      {
        "row": 25,
        "rowsha": "aZ1fZAKjjMQZnK0SM78pQGfIy5Ji83U/70lZmZxXnvU=",
        "originContent": "    * Balance between varying cluster sizes",
        "translatedContent": "    * Kiểm thử A/B"
      },
      {
        "row": 26,
        "rowsha": "Dm+B5ng2i+Y+vVp3floYlwo/4xywDQMiYaYFNgxt6oE=",
        "originContent": "    * A/B testing",
        "translatedContent": "* [Dựa trên độ trễ](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-latency.html)"
      },
      {
        "row": 27,
        "rowsha": "s0wgllkGZ8Vytg35SPbVMDAa0szgXKMJaA4SBc64Xps=",
        "originContent": "* [Latency-based](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-latency.html)",
        "translatedContent": "* [Dựa trên vị trí địa lý](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html)"
      },
      {
        "row": 28,
        "rowsha": "CWZwm8/avAyJWuHCVKGEkgryk///eLTSSag71l4AOUc=",
        "originContent": "* [Geolocation-based](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html)",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Nhược điểm: DNS"
      },
      {
        "row": 30,
        "rowsha": "8Iw7my67UAJA2fhwTvzxZOJpRfsJVMOV13mbygxEwWQ=",
        "originContent": "### Disadvantage(s): DNS",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Truy cập một máy chủ DNS gây ra độ trễ nhỏ, mặc dù đã được giảm nhẹ bởi cơ chế lưu bộ nhớ đệm như trên."
      },
      {
        "row": 32,
        "rowsha": "nT+xRWbm49UnjIb4nmPOJCHinYF6gUS6FJe0hu4U1H0=",
        "originContent": "* Accessing a DNS server introduces a slight delay, although mitigated by caching described above.",
        "translatedContent": "* Quản lý máy chủ DNS có thể phức tạp và thường được quản lý bởi [chính phủ, ISP, và các công ty lớn](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729)."
      },
      {
        "row": 33,
        "rowsha": "Lm1EuZ2VZ+/wXYMNNySEZcZip/oihpL8YSsnmzn657A=",
        "originContent": "* DNS server management could be complex and is generally managed by [governments, ISPs, and large companies](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729).",
        "translatedContent": "* Các dịch vụ DNS gần đây đã bị [tấn công DDoS](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/), ngăn người dùng truy cập các website như Twitter nếu không biết địa chỉ IP của Twitter."
      },
      {
        "row": 34,
        "rowsha": "0JaShHu4q5yi3GVpo06kijQ/uoe+sfyN9EcUWHnzgB0=",
        "originContent": "* DNS services have recently come under [DDoS attack](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/), preventing users from accessing websites such as Twitter without knowing Twitter's IP address(es).",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Nguồn và tài liệu đọc thêm"
      },
      {
        "row": 36,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [Kiến trúc DNS](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)"
      },
      {
        "row": 38,
        "rowsha": "+ML0oXJw4+WTRYkvmcmCQC1DOMIjL6u8YZT2EjFqImg=",
        "originContent": "* [DNS architecture](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)",
        "translatedContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Domain_Name_System)"
      },
      {
        "row": 39,
        "rowsha": "8tdw+ABrJXO6H/klqRgsAXpZQ+Nh5d7f8pvTam1Qg8E=",
        "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Domain_Name_System)",
        "translatedContent": "* [Các bài viết về DNS](https://support.dnsimple.com/categories/dns/)"
      },
      {
        "row": 40,
        "rowsha": "Ch1/V6QuJ6pG8HrCFX9gUwEagBr1U4WO1gWanHN+sKk=",
        "originContent": "* [DNS articles](https://support.dnsimple.com/categories/dns/)",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 21,
    "Content": "\n## Content delivery network\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h9TAuGI.jpg\">\n  <br/>\n  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>Source: Why use a CDN</a></i>\n</p>\n\nA content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user.  Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content.  The site's DNS resolution will tell clients which server to contact.\n\nServing content from CDNs can significantly improve performance in two ways:\n\n* Users receive content from data centers close to them\n* Your servers do not have to serve requests that the CDN fulfills\n\n### Push CDNs\n\nPush CDNs receive new content whenever changes occur on your server.  You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.  You can configure when content expires and when it is updated.  Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.\n\nSites with a small amount of traffic or sites with content that isn't often updated work well with push CDNs.  Content is placed on the CDNs once, instead of being re-pulled at regular intervals.\n\n### Pull CDNs\n\nPull CDNs grab new content from your server when the first user requests the content.  You leave the content on your server and rewrite URLs to point to the CDN.  This results in a slower request until the content is cached on the CDN.\n\nA [time-to-live (TTL)](https://en.wikipedia.org/wiki/Time_to_live) determines how long content is cached.  Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.\n\nSites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.\n\n### Disadvantage(s): CDN\n\n* CDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.\n* Content might be stale if it is updated before the TTL expires it.\n* CDNs require changing URLs for static content to point to the CDN.\n\n### Source(s) and further reading\n\n* [Globally distributed content delivery](https://figshare.com/articles/Globally_distributed_content_delivery/6605972)\n* [The differences between push and pull CDNs](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)",
    "ContentSha": "bGRlC+2cYKu2Zts6C6nMT6o/JLG5VQ9wuYmJZVvDRI0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n## Mạng phân phối nội dung\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h9TAuGI.jpg\">\n  <br/>\n  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>Nguồn: Tại sao sử dụng CDN</a></i>\n</p>\n\nMạng phân phối nội dung (CDN) là một mạng lưới các máy chủ proxy được phân phối toàn cầu, cung cấp nội dung từ các vị trí gần người dùng hơn. Thông thường, các tệp tĩnh như HTML/CSS/JS, ảnh và video được phục vụ từ CDN, mặc dù một số CDN như CloudFront của Amazon hỗ trợ cả nội dung động. Quá trình phân giải DNS của trang web sẽ cho khách truy cập biết nên liên hệ với máy chủ nào.\n\nViệc cung cấp nội dung từ CDN có thể cải thiện hiệu suất đáng kể theo hai cách:\n\n* Người dùng nhận nội dung từ trung tâm dữ liệu gần họ nhất\n* Máy chủ của bạn không phải phục vụ các yêu cầu mà CDN đã đáp ứng\n\n### Push CDN\n\nPush CDN nhận nội dung mới mỗi khi có thay đổi trên máy chủ của bạn. Bạn hoàn toàn chịu trách nhiệm cung cấp nội dung, tải trực tiếp lên CDN và viết lại URL để trỏ tới CDN. Bạn có thể cấu hình thời điểm nội dung hết hạn và được cập nhật. Nội dung chỉ được tải lên khi có mới hoặc thay đổi, giảm thiểu lưu lượng nhưng tối đa hóa lưu trữ.\n\nCác trang web có lưu lượng nhỏ hoặc nội dung không thường xuyên thay đổi rất phù hợp với Push CDN. Nội dung được đặt lên CDN một lần, thay vì bị lấy lại định kỳ.\n\n### Pull CDN\n\nPull CDN lấy nội dung mới từ máy chủ của bạn khi người dùng đầu tiên yêu cầu nội dung đó. Bạn để nội dung trên máy chủ và viết lại URL để trỏ đến CDN. Điều này dẫn đến lần truy cập đầu tiên chậm hơn cho đến khi nội dung được cache trên CDN.\n\n[Thời gian sống (TTL)](https://en.wikipedia.org/wiki/Time_to_live) xác định thời gian nội dung được cache. Pull CDN giảm thiểu không gian lưu trữ trên CDN, nhưng có thể tạo ra lưu lượng dư thừa nếu các tệp hết hạn và bị lấy lại trước khi chúng thực sự thay đổi.\n\nCác trang web có lưu lượng lớn hoạt động hiệu quả với Pull CDN, vì lưu lượng được phân tán đều hơn và chỉ những nội dung vừa được yêu cầu mới ở lại trên CDN.\n\n### Nhược điểm: CDN\n\n* Chi phí CDN có thể đáng kể tùy theo lưu lượng, tuy nhiên nên cân nhắc với chi phí bổ sung nếu không sử dụng CDN.\n* Nội dung có thể bị lỗi thời nếu được cập nhật trước khi TTL hết hạn.\n* CDN yêu cầu thay đổi URL của nội dung tĩnh để trỏ tới CDN.\n\n### Nguồn và đọc thêm\n\n* [Phân phối nội dung toàn cầu](https://figshare.com/articles/Globally_distributed_content_delivery/6605972)\n* [Sự khác biệt giữa Push và Pull CDN](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "5lKlmSan5gCRz0WvVAvW++KQV+W6+zLCMJITTKQwtiI=",
        "originContent": "## Content delivery network",
        "translatedContent": "## Mạng phân phối nội dung"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 5,
        "rowsha": "QPrVyAutZM7eFWLgnkbLJPwGIcbIUBhGZcP7JNSYz+4=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h9TAuGI.jpg\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h9TAuGI.jpg\">"
      },
      {
        "row": 6,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 7,
        "rowsha": "75nxwalyvA6d9E1q9P3BKUFN4nOCeHiml3BhCEoEKXc=",
        "originContent": "  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>Source: Why use a CDN</a></i>",
        "translatedContent": "  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>Nguồn: Tại sao sử dụng CDN</a></i>"
      },
      {
        "row": 8,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "1wQ2Wo5vQd3vgQ8MaldgFj9KGucbPwxgiK4md+hIsug=",
        "originContent": "A content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user.  Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content.  The site's DNS resolution will tell clients which server to contact.",
        "translatedContent": "Mạng phân phối nội dung (CDN) là một mạng lưới các máy chủ proxy được phân phối toàn cầu, cung cấp nội dung từ các vị trí gần người dùng hơn. Thông thường, các tệp tĩnh như HTML/CSS/JS, ảnh và video được phục vụ từ CDN, mặc dù một số CDN như CloudFront của Amazon hỗ trợ cả nội dung động. Quá trình phân giải DNS của trang web sẽ cho khách truy cập biết nên liên hệ với máy chủ nào."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "am4LgQWzQnt20ZLrmCjs+WWtVFIS0s4mcH7YNNZ5rnw=",
        "originContent": "Serving content from CDNs can significantly improve performance in two ways:",
        "translatedContent": "Việc cung cấp nội dung từ CDN có thể cải thiện hiệu suất đáng kể theo hai cách:"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "+0MrXq5c0J3VnUanm3+XDiisSVHg6pxz8NZU6DeHcc4=",
        "originContent": "* Users receive content from data centers close to them",
        "translatedContent": "* Người dùng nhận nội dung từ trung tâm dữ liệu gần họ nhất"
      },
      {
        "row": 15,
        "rowsha": "vhcY3e5KeVANXXomwmhdI2LOP3GssyCCk2h1REQKEI4=",
        "originContent": "* Your servers do not have to serve requests that the CDN fulfills",
        "translatedContent": "* Máy chủ của bạn không phải phục vụ các yêu cầu mà CDN đã đáp ứng"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "d05gEhAo1g83hyIfrjshKeKehC5TdcwQrD1mB1VKutU=",
        "originContent": "### Push CDNs",
        "translatedContent": "### Push CDN"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "o6zabJRTy3eEsUXkTknbbPspI+/JD004vUVhB/GrmvU=",
        "originContent": "Push CDNs receive new content whenever changes occur on your server.  You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.  You can configure when content expires and when it is updated.  Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.",
        "translatedContent": "Push CDN nhận nội dung mới mỗi khi có thay đổi trên máy chủ của bạn. Bạn hoàn toàn chịu trách nhiệm cung cấp nội dung, tải trực tiếp lên CDN và viết lại URL để trỏ tới CDN. Bạn có thể cấu hình thời điểm nội dung hết hạn và được cập nhật. Nội dung chỉ được tải lên khi có mới hoặc thay đổi, giảm thiểu lưu lượng nhưng tối đa hóa lưu trữ."
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "9HPOA+/D7F7Zml3fiMZFn0RX/J5spBp+TBz0yOWX+eU=",
        "originContent": "Sites with a small amount of traffic or sites with content that isn't often updated work well with push CDNs.  Content is placed on the CDNs once, instead of being re-pulled at regular intervals.",
        "translatedContent": "Các trang web có lưu lượng nhỏ hoặc nội dung không thường xuyên thay đổi rất phù hợp với Push CDN. Nội dung được đặt lên CDN một lần, thay vì bị lấy lại định kỳ."
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "rlKkUhBfyXtU6L8ngGRgLos/XW4En94v4hW8fAVxlM8=",
        "originContent": "### Pull CDNs",
        "translatedContent": "### Pull CDN"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "f5nDh+mtRk18xVC+AkX5YGskThI7zZH0RAc3cUWAIIU=",
        "originContent": "Pull CDNs grab new content from your server when the first user requests the content.  You leave the content on your server and rewrite URLs to point to the CDN.  This results in a slower request until the content is cached on the CDN.",
        "translatedContent": "Pull CDN lấy nội dung mới từ máy chủ của bạn khi người dùng đầu tiên yêu cầu nội dung đó. Bạn để nội dung trên máy chủ và viết lại URL để trỏ đến CDN. Điều này dẫn đến lần truy cập đầu tiên chậm hơn cho đến khi nội dung được cache trên CDN."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "sw7RyG/aVRLAF5q2GDfO4iYkNO4GQVZWMHlN4wQjrPA=",
        "originContent": "A [time-to-live (TTL)](https://en.wikipedia.org/wiki/Time_to_live) determines how long content is cached.  Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.",
        "translatedContent": "[Thời gian sống (TTL)](https://en.wikipedia.org/wiki/Time_to_live) xác định thời gian nội dung được cache. Pull CDN giảm thiểu không gian lưu trữ trên CDN, nhưng có thể tạo ra lưu lượng dư thừa nếu các tệp hết hạn và bị lấy lại trước khi chúng thực sự thay đổi."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "6tiL8DieeTn9STiFOYH1IgBezFTTgAQr1AG0+UPFCmM=",
        "originContent": "Sites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.",
        "translatedContent": "Các trang web có lưu lượng lớn hoạt động hiệu quả với Pull CDN, vì lưu lượng được phân tán đều hơn và chỉ những nội dung vừa được yêu cầu mới ở lại trên CDN."
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "JjS5m8aFMZixw6364EVTGRj86cBb3SuygVv1OeD3KFQ=",
        "originContent": "### Disadvantage(s): CDN",
        "translatedContent": "### Nhược điểm: CDN"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "YjphV6UFHlF8QZd6H7IwSok8B0pA/6JZvHyDB/U31t8=",
        "originContent": "* CDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.",
        "translatedContent": "* Chi phí CDN có thể đáng kể tùy theo lưu lượng, tuy nhiên nên cân nhắc với chi phí bổ sung nếu không sử dụng CDN."
      },
      {
        "row": 34,
        "rowsha": "8fkn9dVag9tyFFWpkP62SVa5GuTYSjBGAG9rC6UXths=",
        "originContent": "* Content might be stale if it is updated before the TTL expires it.",
        "translatedContent": "* Nội dung có thể bị lỗi thời nếu được cập nhật trước khi TTL hết hạn."
      },
      {
        "row": 35,
        "rowsha": "HVbfoV5USwswHOrPu5Je4OTd3oaidZeYbZX9244kJyE=",
        "originContent": "* CDNs require changing URLs for static content to point to the CDN.",
        "translatedContent": "* CDN yêu cầu thay đổi URL của nội dung tĩnh để trỏ tới CDN."
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Nguồn và đọc thêm"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "X0rskJNLdEMrWBtQJzbArsb0yLoO9UcDzoTOEXo5PD4=",
        "originContent": "* [Globally distributed content delivery](https://figshare.com/articles/Globally_distributed_content_delivery/6605972)",
        "translatedContent": "* [Phân phối nội dung toàn cầu](https://figshare.com/articles/Globally_distributed_content_delivery/6605972)"
      },
      {
        "row": 40,
        "rowsha": "AeTCbEPfR2cA81qlODS3FH5+DaxyKyZ8cYBRiPicnVI=",
        "originContent": "* [The differences between push and pull CDNs](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)",
        "translatedContent": "* [Sự khác biệt giữa Push và Pull CDN](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 22,
    "Content": "* [Wikipedia](https://en.wikipedia.org/wiki/Content_delivery_network)\n\n## Load balancer\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h81n9iK.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>\n</p>\n\nLoad balancers distribute incoming client requests to computing resources such as application servers and databases.  In each case, the load balancer returns the response from the computing resource to the appropriate client.  Load balancers are effective at:\n\n* Preventing requests from going to unhealthy servers\n* Preventing overloading resources\n* Helping to eliminate a single point of failure\n\nLoad balancers can be implemented with hardware (expensive) or with software such as HAProxy.\n\nAdditional benefits include:\n\n* **SSL termination** - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations\n    * Removes the need to install [X.509 certificates](https://en.wikipedia.org/wiki/X.509) on each server\n* **Session persistence** - Issue cookies and route a specific client's requests to same instance if the web apps do not keep track of sessions\n\nTo protect against failures, it's common to set up multiple load balancers, either in [active-passive](#active-passive) or [active-active](#active-active) mode.\n\nLoad balancers can route traffic based on various metrics, including:\n\n* Random\n* Least loaded\n* Session/cookies\n* [Round robin or weighted round robin](https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb)\n* [Layer 4](#layer-4-load-balancing)\n* [Layer 7](#layer-7-load-balancing)\n\n### Layer 4 load balancing\n\nLayer 4 load balancers look at info at the [transport layer](#communication) to decide how to distribute requests.  Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet.  Layer 4 load balancers forward network packets to and from the upstream server, performing [Network Address Translation (NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/).\n\n### Layer 7 load balancing",
    "ContentSha": "9cdxRHyBtl0u7vNUNZ/06ZZn+SBn6/L1EyLOFfGBVdU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Wikipedia](https://en.wikipedia.org/wiki/Content_delivery_network)\n\n## Bộ cân bằng tải\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h81n9iK.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Nguồn: Các mẫu thiết kế hệ thống có khả năng mở rộng</a></i>\n</p>\n\nBộ cân bằng tải phân phối các yêu cầu từ khách hàng đến các tài nguyên tính toán như máy chủ ứng dụng và cơ sở dữ liệu. Trong mỗi trường hợp, bộ cân bằng tải trả về phản hồi từ tài nguyên tính toán đến đúng khách hàng. Bộ cân bằng tải hiệu quả trong việc:\n\n* Ngăn chặn các yêu cầu đến các máy chủ không khỏe mạnh\n* Ngăn chặn việc quá tải tài nguyên\n* Giúp loại bỏ điểm lỗi đơn lẻ\n\nBộ cân bằng tải có thể được triển khai bằng phần cứng (đắt tiền) hoặc phần mềm như HAProxy.\n\nCác lợi ích bổ sung bao gồm:\n\n* **Kết thúc SSL** - Giải mã các yêu cầu đến và mã hóa phản hồi từ máy chủ để các máy chủ backend không phải thực hiện những tác vụ tốn kém này\n    * Loại bỏ nhu cầu cài đặt [chứng chỉ X.509](https://en.wikipedia.org/wiki/X.509) trên mỗi máy chủ\n* **Duy trì phiên** - Phát hành cookie và định tuyến các yêu cầu của một khách hàng cụ thể đến cùng một phiên bản nếu ứng dụng web không lưu trữ phiên\n\nĐể bảo vệ chống lại sự cố, thông thường sẽ thiết lập nhiều bộ cân bằng tải, ở chế độ [active-passive](#active-passive) hoặc [active-active](#active-active).\n\nBộ cân bằng tải có thể định tuyến lưu lượng dựa trên nhiều chỉ số khác nhau, bao gồm:\n\n* Ngẫu nhiên\n* Tải ít nhất\n* Phiên/cookie\n* [Vòng luân phiên hoặc vòng luân phiên có trọng số](https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb)\n* [Tầng 4](#layer-4-load-balancing)\n* [Tầng 7](#layer-7-load-balancing)\n\n### Cân bằng tải tầng 4\n\nBộ cân bằng tải tầng 4 xem xét thông tin tại [tầng vận chuyển](#communication) để quyết định cách phân phối yêu cầu. Thông thường, điều này liên quan đến địa chỉ IP nguồn, đích và các cổng trong phần đầu, nhưng không phải nội dung của gói tin. Bộ cân bằng tải tầng 4 chuyển tiếp các gói mạng đến và từ máy chủ upstream, thực hiện [Chuyển đổi địa chỉ mạng (NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/).\n\n### Cân bằng tải tầng 7",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "YfknGSt3mgSC2vQS7D9984LpAs7P+O8aGp1oUfhwAhg=",
        "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Content_delivery_network)",
        "translatedContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Content_delivery_network)"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "Ao8ZomKw0HBRDMy/0qZhvnrS6gMQiupr1bhlarWiu7M=",
        "originContent": "## Load balancer",
        "translatedContent": "## Bộ cân bằng tải"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 6,
        "rowsha": "h6sQMelc9THWWcHWU5a9DF4mpg0v6IKfT59CZt5U3ao=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h81n9iK.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h81n9iK.png\">"
      },
      {
        "row": 7,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 8,
        "rowsha": "BlGpJr1aaS7U1ovkxsSc1S7ZO+WxTq/Ry9MM5AGpY3s=",
        "originContent": "  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>",
        "translatedContent": "  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Nguồn: Các mẫu thiết kế hệ thống có khả năng mở rộng</a></i>"
      },
      {
        "row": 9,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "4k2a9uM1Fgg2SDoDZRQklRig6D0IRvnHt1LXSDoeXUk=",
        "originContent": "Load balancers distribute incoming client requests to computing resources such as application servers and databases.  In each case, the load balancer returns the response from the computing resource to the appropriate client.  Load balancers are effective at:",
        "translatedContent": "Bộ cân bằng tải phân phối các yêu cầu từ khách hàng đến các tài nguyên tính toán như máy chủ ứng dụng và cơ sở dữ liệu. Trong mỗi trường hợp, bộ cân bằng tải trả về phản hồi từ tài nguyên tính toán đến đúng khách hàng. Bộ cân bằng tải hiệu quả trong việc:"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "6wYnNMCx45ENEX5Xq0qxtujLl6pJ9PH0XNJAjbXW2V4=",
        "originContent": "* Preventing requests from going to unhealthy servers",
        "translatedContent": "* Ngăn chặn các yêu cầu đến các máy chủ không khỏe mạnh"
      },
      {
        "row": 14,
        "rowsha": "5mQXmG2xH4bDVhp+sj/zBTo9+1ivS0QaaWxdwhsXLRo=",
        "originContent": "* Preventing overloading resources",
        "translatedContent": "* Ngăn chặn việc quá tải tài nguyên"
      },
      {
        "row": 15,
        "rowsha": "FJ8a/F9gy2R3aMx8bKEHvifAete5J+GBMEqLf5YXWaM=",
        "originContent": "* Helping to eliminate a single point of failure",
        "translatedContent": "* Giúp loại bỏ điểm lỗi đơn lẻ"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "DNdzJResTG1iZiLksD2NGBsVbr4AwvFed3pPrBYhow0=",
        "originContent": "Load balancers can be implemented with hardware (expensive) or with software such as HAProxy.",
        "translatedContent": "Bộ cân bằng tải có thể được triển khai bằng phần cứng (đắt tiền) hoặc phần mềm như HAProxy."
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "+CFxebREyKkgHc/8UD4FiQpt1wm+8buX83sw3i7tiUI=",
        "originContent": "Additional benefits include:",
        "translatedContent": "Các lợi ích bổ sung bao gồm:"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "xSrFzA8yBTDjWDjJbMNZn9LK/pBq5GDwgUONNdWpSUY=",
        "originContent": "* **SSL termination** - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations",
        "translatedContent": "* **Kết thúc SSL** - Giải mã các yêu cầu đến và mã hóa phản hồi từ máy chủ để các máy chủ backend không phải thực hiện những tác vụ tốn kém này"
      },
      {
        "row": 22,
        "rowsha": "QWIxyqIlp3o4sF+0KwvMv8ok25amcfNP9fJLlh3bfY8=",
        "originContent": "    * Removes the need to install [X.509 certificates](https://en.wikipedia.org/wiki/X.509) on each server",
        "translatedContent": "    * Loại bỏ nhu cầu cài đặt [chứng chỉ X.509](https://en.wikipedia.org/wiki/X.509) trên mỗi máy chủ"
      },
      {
        "row": 23,
        "rowsha": "vk1X20SI2qy/YSCC7GrOM1v5flvy6RUv8ciMsolcoGo=",
        "originContent": "* **Session persistence** - Issue cookies and route a specific client's requests to same instance if the web apps do not keep track of sessions",
        "translatedContent": "* **Duy trì phiên** - Phát hành cookie và định tuyến các yêu cầu của một khách hàng cụ thể đến cùng một phiên bản nếu ứng dụng web không lưu trữ phiên"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "T4syA6MGOLjnUeVf2OWfiBKLdQ1JazDX02nc1xuIAk8=",
        "originContent": "To protect against failures, it's common to set up multiple load balancers, either in [active-passive](#active-passive) or [active-active](#active-active) mode.",
        "translatedContent": "Để bảo vệ chống lại sự cố, thông thường sẽ thiết lập nhiều bộ cân bằng tải, ở chế độ [active-passive](#active-passive) hoặc [active-active](#active-active)."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "FrEIOzNFrfNBUDqFIfCwXk0X9fllvhYyiGr0bDioroc=",
        "originContent": "Load balancers can route traffic based on various metrics, including:",
        "translatedContent": "Bộ cân bằng tải có thể định tuyến lưu lượng dựa trên nhiều chỉ số khác nhau, bao gồm:"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "OAkIAkhhnJ5O+09DoibHAHkWnSwYYryr62/BXWmOgyQ=",
        "originContent": "* Random",
        "translatedContent": "* Ngẫu nhiên"
      },
      {
        "row": 30,
        "rowsha": "NKVEnR5Hou/TUVRfSREUWsNgJR+HD/IzDpHpowQ1000=",
        "originContent": "* Least loaded",
        "translatedContent": "* Tải ít nhất"
      },
      {
        "row": 31,
        "rowsha": "bgpAMm3N/nLo+MaMyB8ZAVmB3WpZ3s79uPxHSu2O9RU=",
        "originContent": "* Session/cookies",
        "translatedContent": "* Phiên/cookie"
      },
      {
        "row": 32,
        "rowsha": "PxjaNHNHE3DkepJUpn3eiTdsNI2Cng5yhZpKWba9QTk=",
        "originContent": "* [Round robin or weighted round robin](https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb)",
        "translatedContent": "* [Vòng luân phiên hoặc vòng luân phiên có trọng số](https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb)"
      },
      {
        "row": 33,
        "rowsha": "L7VnumepgunJZ0MiMduI35k/le+iXLpZ6QfWjzfzxBY=",
        "originContent": "* [Layer 4](#layer-4-load-balancing)",
        "translatedContent": "* [Tầng 4](#layer-4-load-balancing)"
      },
      {
        "row": 34,
        "rowsha": "VokpaOXBw5YcX1NAfYl6CmQPZhQ0TaVJsYGoei16lWY=",
        "originContent": "* [Layer 7](#layer-7-load-balancing)",
        "translatedContent": "* [Tầng 7](#layer-7-load-balancing)"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "8BsY9UHoujca9pbk+ZHhpu+vymfvLa+UgrJ/x1arCz4=",
        "originContent": "### Layer 4 load balancing",
        "translatedContent": "### Cân bằng tải tầng 4"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "3stJb/JLj/KFQbtq6QrEMn8ngL/VHxzgCq0E9po4D58=",
        "originContent": "Layer 4 load balancers look at info at the [transport layer](#communication) to decide how to distribute requests.  Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet.  Layer 4 load balancers forward network packets to and from the upstream server, performing [Network Address Translation (NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/).",
        "translatedContent": "Bộ cân bằng tải tầng 4 xem xét thông tin tại [tầng vận chuyển](#communication) để quyết định cách phân phối yêu cầu. Thông thường, điều này liên quan đến địa chỉ IP nguồn, đích và các cổng trong phần đầu, nhưng không phải nội dung của gói tin. Bộ cân bằng tải tầng 4 chuyển tiếp các gói mạng đến và từ máy chủ upstream, thực hiện [Chuyển đổi địa chỉ mạng (NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "bVLVCjekkNVRGyijkGzoJmucD9UDL3Yf5p1kRLQi4As=",
        "originContent": "### Layer 7 load balancing",
        "translatedContent": "### Cân bằng tải tầng 7"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 23,
    "Content": "\nLayer 7 load balancers look at the [application layer](#communication) to decide how to distribute requests.  This can involve contents of the header, message, and cookies.  Layer 7 load balancers terminate network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server.  For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.\n\nAt the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.\n\n### Horizontal scaling\n\nLoad balancers can also help with horizontal scaling, improving performance and availability.  Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called **Vertical Scaling**.  It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.\n\n#### Disadvantage(s): horizontal scaling\n\n* Scaling horizontally introduces complexity and involves cloning servers\n    * Servers should be stateless: they should not contain any user-related data like sessions or profile pictures\n    * Sessions can be stored in a centralized data store such as a [database](#database) (SQL, NoSQL) or a persistent [cache](#cache) (Redis, Memcached)\n* Downstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out\n\n### Disadvantage(s): load balancer\n\n* The load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.\n* Introducing a load balancer to help eliminate a single point of failure results in increased complexity.\n* A single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.\n\n### Source(s) and further reading\n\n* [NGINX architecture](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy architecture guide](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [Scalability](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n* [Wikipedia](https://en.wikipedia.org/wiki/Load_balancing_(computing))\n* [Layer 4 load balancing](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)\n* [Layer 7 load balancing](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)\n* [ELB listener config](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)\n\n## Reverse proxy (web server)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n41Azff.png\">\n  <br/>\n  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>Source: Wikipedia</a></i>\n  <br/>\n</p>",
    "ContentSha": "d9PfMKhS5It6VuFSV5VdEgf336M0xQeGW1c7I8NDHiY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Bộ cân bằng tải tầng 7 kiểm tra [tầng ứng dụng](#communication) để quyết định cách phân phối các yêu cầu. Điều này có thể liên quan đến nội dung của tiêu đề, thông điệp và cookie. Bộ cân bằng tải tầng 7 sẽ chấm dứt lưu lượng mạng, đọc thông điệp, đưa ra quyết định cân bằng tải, sau đó mở kết nối đến máy chủ đã được chọn. Ví dụ, bộ cân bằng tải tầng 7 có thể chuyển hướng lưu lượng video đến các máy chủ lưu trữ video trong khi chuyển hướng lưu lượng thanh toán người dùng nhạy cảm đến các máy chủ đã được tăng cường bảo mật.\n\nĐổi lại cho sự linh hoạt, cân bằng tải tầng 4 yêu cầu ít thời gian và tài nguyên tính toán hơn tầng 7, mặc dù tác động đến hiệu suất có thể không đáng kể trên phần cứng phổ thông hiện đại.\n\n### Mở rộng theo chiều ngang\n\nBộ cân bằng tải cũng giúp mở rộng theo chiều ngang, cải thiện hiệu suất và độ sẵn sàng. Mở rộng bằng các máy phổ thông tiết kiệm chi phí hơn và mang lại độ sẵn sàng cao hơn so với mở rộng một máy chủ duy nhất trên phần cứng đắt tiền, gọi là **Mở rộng theo chiều dọc**. Việc tuyển dụng nhân sự làm việc với phần cứng phổ thông cũng dễ dàng hơn so với các hệ thống doanh nghiệp chuyên biệt.\n\n#### Nhược điểm: mở rộng theo chiều ngang\n\n* Mở rộng theo chiều ngang làm tăng độ phức tạp và liên quan đến việc nhân bản máy chủ\n    * Máy chủ nên là không trạng thái: không nên chứa dữ liệu liên quan đến người dùng như phiên hoặc ảnh đại diện\n    * Phiên có thể được lưu trong kho dữ liệu tập trung như [cơ sở dữ liệu](#database) (SQL, NoSQL) hoặc [bộ nhớ đệm](#cache) lâu dài (Redis, Memcached)\n* Các máy chủ phía dưới như bộ đệm và cơ sở dữ liệu cần xử lý nhiều kết nối đồng thời hơn khi các máy chủ phía trên mở rộng\n\n### Nhược điểm: bộ cân bằng tải\n\n* Bộ cân bằng tải có thể trở thành nút thắt về hiệu suất nếu không đủ tài nguyên hoặc cấu hình không đúng.\n* Việc thêm bộ cân bằng tải để loại bỏ điểm lỗi đơn lại làm tăng độ phức tạp.\n* Một bộ cân bằng tải đơn là một điểm lỗi đơn, cấu hình nhiều bộ cân bằng tải sẽ càng tăng độ phức tạp.\n\n### Nguồn và đọc thêm\n\n* [Kiến trúc NGINX](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [Hướng dẫn kiến trúc HAProxy](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [Khả năng mở rộng](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n* [Wikipedia](https://en.wikipedia.org/wiki/Load_balancing_(computing))\n* [Cân bằng tải tầng 4](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)\n* [Cân bằng tải tầng 7](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)\n* [Cấu hình listener ELB](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)\n\n## Reverse proxy (máy chủ web)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n41Azff.png\">\n  <br/>\n  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>Nguồn: Wikipedia</a></i>\n  <br/>\n</p>\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Bộ cân bằng tải tầng 7 kiểm tra [tầng ứng dụng](#communication) để quyết định cách phân phối các yêu cầu. Điều này có thể liên quan đến nội dung của tiêu đề, thông điệp và cookie. Bộ cân bằng tải tầng 7 sẽ chấm dứt lưu lượng mạng, đọc thông điệp, đưa ra quyết định cân bằng tải, sau đó mở kết nối đến máy chủ đã được chọn. Ví dụ, bộ cân bằng tải tầng 7 có thể chuyển hướng lưu lượng video đến các máy chủ lưu trữ video trong khi chuyển hướng lưu lượng thanh toán người dùng nhạy cảm đến các máy chủ đã được tăng cường bảo mật."
      },
      {
        "row": 2,
        "rowsha": "hNinjintYzj6BMJTufo596jyxYVs6Wzx5q0qpPz65Tc=",
        "originContent": "Layer 7 load balancers look at the [application layer](#communication) to decide how to distribute requests.  This can involve contents of the header, message, and cookies.  Layer 7 load balancers terminate network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server.  For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Đổi lại cho sự linh hoạt, cân bằng tải tầng 4 yêu cầu ít thời gian và tài nguyên tính toán hơn tầng 7, mặc dù tác động đến hiệu suất có thể không đáng kể trên phần cứng phổ thông hiện đại."
      },
      {
        "row": 4,
        "rowsha": "eq1iV0OSDazAO/ff1N3OCDTkIh5l3M8RACiInJ9E/f4=",
        "originContent": "At the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Mở rộng theo chiều ngang"
      },
      {
        "row": 6,
        "rowsha": "HujpPLjyGfjrm090FYcsRg+jeM37pmrFlfXBr0ojysE=",
        "originContent": "### Horizontal scaling",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Bộ cân bằng tải cũng giúp mở rộng theo chiều ngang, cải thiện hiệu suất và độ sẵn sàng. Mở rộng bằng các máy phổ thông tiết kiệm chi phí hơn và mang lại độ sẵn sàng cao hơn so với mở rộng một máy chủ duy nhất trên phần cứng đắt tiền, gọi là **Mở rộng theo chiều dọc**. Việc tuyển dụng nhân sự làm việc với phần cứng phổ thông cũng dễ dàng hơn so với các hệ thống doanh nghiệp chuyên biệt."
      },
      {
        "row": 8,
        "rowsha": "mwC43eiaPybUHX/F7Xi46vAG1Eg19+SWMWU53uCkCeA=",
        "originContent": "Load balancers can also help with horizontal scaling, improving performance and availability.  Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called **Vertical Scaling**.  It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Nhược điểm: mở rộng theo chiều ngang"
      },
      {
        "row": 10,
        "rowsha": "DxYbLmgaDjx6y14iKkzkIPyOsLlh/lPJKG5SlED5zY8=",
        "originContent": "#### Disadvantage(s): horizontal scaling",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Mở rộng theo chiều ngang làm tăng độ phức tạp và liên quan đến việc nhân bản máy chủ"
      },
      {
        "row": 12,
        "rowsha": "GTauaAyaFN/WZrsWFaNLJr1jNvonApRcifzAA6bj4lM=",
        "originContent": "* Scaling horizontally introduces complexity and involves cloning servers",
        "translatedContent": "    * Máy chủ nên là không trạng thái: không nên chứa dữ liệu liên quan đến người dùng như phiên hoặc ảnh đại diện"
      },
      {
        "row": 13,
        "rowsha": "ZVM+ophRkm47wnBiCd4vTlZEDBMhrDMYstTuS8sm+vo=",
        "originContent": "    * Servers should be stateless: they should not contain any user-related data like sessions or profile pictures",
        "translatedContent": "    * Phiên có thể được lưu trong kho dữ liệu tập trung như [cơ sở dữ liệu](#database) (SQL, NoSQL) hoặc [bộ nhớ đệm](#cache) lâu dài (Redis, Memcached)"
      },
      {
        "row": 14,
        "rowsha": "D/f10jXG6zDz1v4jf/JYCVs2yLAKUM4v+skNjxc8fVM=",
        "originContent": "    * Sessions can be stored in a centralized data store such as a [database](#database) (SQL, NoSQL) or a persistent [cache](#cache) (Redis, Memcached)",
        "translatedContent": "* Các máy chủ phía dưới như bộ đệm và cơ sở dữ liệu cần xử lý nhiều kết nối đồng thời hơn khi các máy chủ phía trên mở rộng"
      },
      {
        "row": 15,
        "rowsha": "wSXmadVwkmeMPof0OaYB4MCKgWEjWx3fjP5BUSRnUSk=",
        "originContent": "* Downstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Nhược điểm: bộ cân bằng tải"
      },
      {
        "row": 17,
        "rowsha": "XP5laNx7aLA4Bd3VTZW6LOV2pjfeYFA9B3CjiSQbK1M=",
        "originContent": "### Disadvantage(s): load balancer",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Bộ cân bằng tải có thể trở thành nút thắt về hiệu suất nếu không đủ tài nguyên hoặc cấu hình không đúng."
      },
      {
        "row": 19,
        "rowsha": "N3Un9PJNf4zd/XonGVt5HOrF3B8is7cdD0rIz/pgLDQ=",
        "originContent": "* The load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.",
        "translatedContent": "* Việc thêm bộ cân bằng tải để loại bỏ điểm lỗi đơn lại làm tăng độ phức tạp."
      },
      {
        "row": 20,
        "rowsha": "ug0SGnEU8aIX22VAmpUUamTBrXXdaAfWdzqbOm5fh0M=",
        "originContent": "* Introducing a load balancer to help eliminate a single point of failure results in increased complexity.",
        "translatedContent": "* Một bộ cân bằng tải đơn là một điểm lỗi đơn, cấu hình nhiều bộ cân bằng tải sẽ càng tăng độ phức tạp."
      },
      {
        "row": 21,
        "rowsha": "YU6dvlgVxtjIRADDUTlIKCmASEQ2nOvlMfspkGNBcSk=",
        "originContent": "* A single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Nguồn và đọc thêm"
      },
      {
        "row": 23,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [Kiến trúc NGINX](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)"
      },
      {
        "row": 25,
        "rowsha": "u7t9RSOsBLbDQOOlZAMiu/Ky/JVnirRtRxeU3T5rEdg=",
        "originContent": "* [NGINX architecture](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)",
        "translatedContent": "* [Hướng dẫn kiến trúc HAProxy](http://www.haproxy.org/download/1.2/doc/architecture.txt)"
      },
      {
        "row": 26,
        "rowsha": "I6F2p40wC4iALCteQwB8aXq7Y+CfqPOq9z2Yqh4mtwc=",
        "originContent": "* [HAProxy architecture guide](http://www.haproxy.org/download/1.2/doc/architecture.txt)",
        "translatedContent": "* [Khả năng mở rộng](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)"
      },
      {
        "row": 27,
        "rowsha": "ptcD1852UW7xlGx34pDmC+AgFtFzFO6+yrEToGnsgxI=",
        "originContent": "* [Scalability](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)",
        "translatedContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Load_balancing_(computing))"
      },
      {
        "row": 28,
        "rowsha": "pPYUxxnt3BBBqjS8iMnTEKeYv357KowYlTqWPjcmlU4=",
        "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Load_balancing_(computing))",
        "translatedContent": "* [Cân bằng tải tầng 4](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)"
      },
      {
        "row": 29,
        "rowsha": "WPFYggBkI6JT2HYtwFKa34s4qW4btdUZSrtIFj5Mqcs=",
        "originContent": "* [Layer 4 load balancing](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)",
        "translatedContent": "* [Cân bằng tải tầng 7](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)"
      },
      {
        "row": 30,
        "rowsha": "LZ2k/ISO0P/DDSJCxGZsWhg62ow4Kf7P7XrgeTUn/+M=",
        "originContent": "* [Layer 7 load balancing](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)",
        "translatedContent": "* [Cấu hình listener ELB](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)"
      },
      {
        "row": 31,
        "rowsha": "soSCQpzIs3UpclHUlmpTt0czKhkftOeXX4r1d+b/Ha4=",
        "originContent": "* [ELB listener config](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## Reverse proxy (máy chủ web)"
      },
      {
        "row": 33,
        "rowsha": "57oBVkplD9msiWgbKa+osPNwyddtjB1Cpm1KEABE3Hg=",
        "originContent": "## Reverse proxy (web server)",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 35,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n41Azff.png\">"
      },
      {
        "row": 36,
        "rowsha": "MrN3YHgIbz1VRZyteJkzaUvekCIgJyT62IwmaKrxDQ4=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n41Azff.png\">",
        "translatedContent": "  <br/>"
      },
      {
        "row": 37,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>Nguồn: Wikipedia</a></i>"
      },
      {
        "row": 38,
        "rowsha": "F+qmb/XXOId8oNBkUx9olLj2eiHNE+sH3pIQgZO1JDg=",
        "originContent": "  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>Source: Wikipedia</a></i>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 39,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "</p>"
      },
      {
        "row": 40,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 24,
    "Content": "\nA reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public.  Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.\n\nAdditional benefits include:\n\n* **Increased security** - Hide information about backend servers, blacklist IPs, limit number of connections per client\n* **Increased scalability and flexibility** - Clients only see the reverse proxy's IP, allowing you to scale servers or change their configuration\n* **SSL termination** - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations\n    * Removes the need to install [X.509 certificates](https://en.wikipedia.org/wiki/X.509) on each server\n* **Compression** - Compress server responses\n* **Caching** - Return the response for cached requests\n* **Static content** - Serve static content directly\n    * HTML/CSS/JS\n    * Photos\n    * Videos\n    * Etc\n\n### Load balancer vs reverse proxy\n\n* Deploying a load balancer is useful when you have multiple servers.  Often, load balancers  route traffic to a set of servers serving the same function.\n* Reverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.\n* Solutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.\n\n### Disadvantage(s): reverse proxy\n\n* Introducing a reverse proxy results in increased complexity.\n* A single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a [failover](https://en.wikipedia.org/wiki/Failover)) further increases complexity.\n\n### Source(s) and further reading\n\n* [Reverse proxy vs load balancer](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)\n* [NGINX architecture](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy architecture guide](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [Wikipedia](https://en.wikipedia.org/wiki/Reverse_proxy)\n\n## Application layer\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yB5SYwm.png\">\n  <br/>",
    "ContentSha": "mSXIlXJOirzgK7lcCGgaBsQWdB09fQQPiRxJI8Azkv4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Reverse proxy là một máy chủ web tập trung các dịch vụ nội bộ và cung cấp giao diện thống nhất cho công chúng.  Các yêu cầu từ khách hàng sẽ được chuyển tiếp đến máy chủ có thể xử lý trước khi reverse proxy trả về phản hồi của máy chủ cho khách hàng.\n\nCác lợi ích bổ sung bao gồm:\n\n* **Tăng cường bảo mật** - Ẩn thông tin về các máy chủ backend, chặn danh sách đen IP, giới hạn số lượng kết nối trên mỗi khách hàng\n* **Tăng khả năng mở rộng và linh hoạt** - Khách hàng chỉ nhìn thấy IP của reverse proxy, cho phép bạn mở rộng máy chủ hoặc thay đổi cấu hình của chúng\n* **Chấm dứt SSL** - Giải mã các yêu cầu đến và mã hóa phản hồi của máy chủ để các máy chủ backend không phải thực hiện những thao tác có thể tốn kém này\n    * Loại bỏ nhu cầu cài đặt [chứng chỉ X.509](https://en.wikipedia.org/wiki/X.509) trên mỗi máy chủ\n* **Nén** - Nén phản hồi của máy chủ\n* **Bộ nhớ đệm** - Trả về phản hồi cho các yêu cầu đã được lưu trong bộ nhớ đệm\n* **Nội dung tĩnh** - Phục vụ trực tiếp nội dung tĩnh\n    * HTML/CSS/JS\n    * Ảnh\n    * Video\n    * V.v.\n\n### Bộ cân bằng tải vs reverse proxy\n\n* Triển khai bộ cân bằng tải rất hữu ích khi bạn có nhiều máy chủ.  Thường thì các bộ cân bằng tải sẽ định tuyến lưu lượng đến một tập hợp các máy chủ phục vụ cùng chức năng.\n* Reverse proxy có thể hữu ích ngay cả khi chỉ có một máy chủ web hoặc máy chủ ứng dụng, mở ra các lợi ích như đã mô tả ở phần trước.\n* Các giải pháp như NGINX và HAProxy có thể hỗ trợ cả reverse proxy tầng 7 và cân bằng tải.\n\n### Bất lợi: reverse proxy\n\n* Việc giới thiệu reverse proxy làm tăng độ phức tạp.\n* Một reverse proxy duy nhất là điểm lỗi duy nhất, cấu hình nhiều reverse proxy (ví dụ như [failover](https://en.wikipedia.org/wiki/Failover)) càng làm tăng độ phức tạp.\n\n### Nguồn và đọc thêm\n\n* [Reverse proxy vs load balancer](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)\n* [Kiến trúc NGINX](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [Hướng dẫn kiến trúc HAProxy](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [Wikipedia](https://en.wikipedia.org/wiki/Reverse_proxy)\n\n## Tầng ứng dụng\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yB5SYwm.png\">\n  <br/>\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Reverse proxy là một máy chủ web tập trung các dịch vụ nội bộ và cung cấp giao diện thống nhất cho công chúng.  Các yêu cầu từ khách hàng sẽ được chuyển tiếp đến máy chủ có thể xử lý trước khi reverse proxy trả về phản hồi của máy chủ cho khách hàng."
      },
      {
        "row": 2,
        "rowsha": "pqBNY+Vd+IvBY3McnLIyARCVdV5BFhQ9kiXciiPUuWg=",
        "originContent": "A reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public.  Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Các lợi ích bổ sung bao gồm:"
      },
      {
        "row": 4,
        "rowsha": "+CFxebREyKkgHc/8UD4FiQpt1wm+8buX83sw3i7tiUI=",
        "originContent": "Additional benefits include:",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* **Tăng cường bảo mật** - Ẩn thông tin về các máy chủ backend, chặn danh sách đen IP, giới hạn số lượng kết nối trên mỗi khách hàng"
      },
      {
        "row": 6,
        "rowsha": "kg4TPAki/rcr3kuuwvteneL22m/4V8yp3exHEm1WmfA=",
        "originContent": "* **Increased security** - Hide information about backend servers, blacklist IPs, limit number of connections per client",
        "translatedContent": "* **Tăng khả năng mở rộng và linh hoạt** - Khách hàng chỉ nhìn thấy IP của reverse proxy, cho phép bạn mở rộng máy chủ hoặc thay đổi cấu hình của chúng"
      },
      {
        "row": 7,
        "rowsha": "w0DZU3NdQ8715Tsp7qDSirEnUpVAHxQJ9nhz2o3Pt/I=",
        "originContent": "* **Increased scalability and flexibility** - Clients only see the reverse proxy's IP, allowing you to scale servers or change their configuration",
        "translatedContent": "* **Chấm dứt SSL** - Giải mã các yêu cầu đến và mã hóa phản hồi của máy chủ để các máy chủ backend không phải thực hiện những thao tác có thể tốn kém này"
      },
      {
        "row": 8,
        "rowsha": "xSrFzA8yBTDjWDjJbMNZn9LK/pBq5GDwgUONNdWpSUY=",
        "originContent": "* **SSL termination** - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations",
        "translatedContent": "    * Loại bỏ nhu cầu cài đặt [chứng chỉ X.509](https://en.wikipedia.org/wiki/X.509) trên mỗi máy chủ"
      },
      {
        "row": 9,
        "rowsha": "QWIxyqIlp3o4sF+0KwvMv8ok25amcfNP9fJLlh3bfY8=",
        "originContent": "    * Removes the need to install [X.509 certificates](https://en.wikipedia.org/wiki/X.509) on each server",
        "translatedContent": "* **Nén** - Nén phản hồi của máy chủ"
      },
      {
        "row": 10,
        "rowsha": "SqynvWcZzUNhlDwGO++H/2mxvPeT4O7ZelHcr2PcQK8=",
        "originContent": "* **Compression** - Compress server responses",
        "translatedContent": "* **Bộ nhớ đệm** - Trả về phản hồi cho các yêu cầu đã được lưu trong bộ nhớ đệm"
      },
      {
        "row": 11,
        "rowsha": "/paZJTVqfJF7IsPLBA3GcTjtIlchV+UWi8hzvXIcDfg=",
        "originContent": "* **Caching** - Return the response for cached requests",
        "translatedContent": "* **Nội dung tĩnh** - Phục vụ trực tiếp nội dung tĩnh"
      },
      {
        "row": 12,
        "rowsha": "g98/MjxP0+D8KtUPBY+kkgk5ffZlWTc05yV+iKpSQvI=",
        "originContent": "* **Static content** - Serve static content directly",
        "translatedContent": "    * HTML/CSS/JS"
      },
      {
        "row": 13,
        "rowsha": "iAmBVmr8kX4KuXdPFHYHZAhVgyw94ki9uIvawdeyNeg=",
        "originContent": "    * HTML/CSS/JS",
        "translatedContent": "    * Ảnh"
      },
      {
        "row": 14,
        "rowsha": "2L4m+QKkj1bSExoWNAIjYZaIBXYJDNOmiUdmIYNBKig=",
        "originContent": "    * Photos",
        "translatedContent": "    * Video"
      },
      {
        "row": 15,
        "rowsha": "iz9sb0EwQ6wE95PBrBa9Di1XjuFyCAJry2vaAj3mjcs=",
        "originContent": "    * Videos",
        "translatedContent": "    * V.v."
      },
      {
        "row": 16,
        "rowsha": "J226Cb5De6+BN2Z3axGAaOWOzysDPjsEqSZuJdWdEH4=",
        "originContent": "    * Etc",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Bộ cân bằng tải vs reverse proxy"
      },
      {
        "row": 18,
        "rowsha": "ehHoUaR7ClxjMCiSJy4nTwWaTdSTI9CywbZmPeiMFDw=",
        "originContent": "### Load balancer vs reverse proxy",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Triển khai bộ cân bằng tải rất hữu ích khi bạn có nhiều máy chủ.  Thường thì các bộ cân bằng tải sẽ định tuyến lưu lượng đến một tập hợp các máy chủ phục vụ cùng chức năng."
      },
      {
        "row": 20,
        "rowsha": "WZcxbbJyyYX+NaQ2HI6vmmpAgPxiuIxc1vkrw7yhkiQ=",
        "originContent": "* Deploying a load balancer is useful when you have multiple servers.  Often, load balancers  route traffic to a set of servers serving the same function.",
        "translatedContent": "* Reverse proxy có thể hữu ích ngay cả khi chỉ có một máy chủ web hoặc máy chủ ứng dụng, mở ra các lợi ích như đã mô tả ở phần trước."
      },
      {
        "row": 21,
        "rowsha": "7RFYhUz3wMfiF2hxsNPIOyT0RCT5aoOx0MQtMS+WSmg=",
        "originContent": "* Reverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.",
        "translatedContent": "* Các giải pháp như NGINX và HAProxy có thể hỗ trợ cả reverse proxy tầng 7 và cân bằng tải."
      },
      {
        "row": 22,
        "rowsha": "6Wvr2j7KrYAYKNJLx1qzT0iHZgXiPw75WygpxA2ai5Y=",
        "originContent": "* Solutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Bất lợi: reverse proxy"
      },
      {
        "row": 24,
        "rowsha": "ic7OidJCC5YCuEroahp2bhGpmoY5raPm61Kp5Cve8ls=",
        "originContent": "### Disadvantage(s): reverse proxy",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Việc giới thiệu reverse proxy làm tăng độ phức tạp."
      },
      {
        "row": 26,
        "rowsha": "vBlekFF9US7hmLqGU1wIhkgE4b6OkFl/lDtbVIveltk=",
        "originContent": "* Introducing a reverse proxy results in increased complexity.",
        "translatedContent": "* Một reverse proxy duy nhất là điểm lỗi duy nhất, cấu hình nhiều reverse proxy (ví dụ như [failover](https://en.wikipedia.org/wiki/Failover)) càng làm tăng độ phức tạp."
      },
      {
        "row": 27,
        "rowsha": "8XtRJSNj3OsLgbLoG+ae0RiYkm8tpPEU5r72Vgub9fQ=",
        "originContent": "* A single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a [failover](https://en.wikipedia.org/wiki/Failover)) further increases complexity.",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Nguồn và đọc thêm"
      },
      {
        "row": 29,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [Reverse proxy vs load balancer](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)"
      },
      {
        "row": 31,
        "rowsha": "dwTS+CUwpBYuPVKdkXAGeQNSO2sDfoQXt8O3+5/2puc=",
        "originContent": "* [Reverse proxy vs load balancer](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)",
        "translatedContent": "* [Kiến trúc NGINX](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)"
      },
      {
        "row": 32,
        "rowsha": "u7t9RSOsBLbDQOOlZAMiu/Ky/JVnirRtRxeU3T5rEdg=",
        "originContent": "* [NGINX architecture](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)",
        "translatedContent": "* [Hướng dẫn kiến trúc HAProxy](http://www.haproxy.org/download/1.2/doc/architecture.txt)"
      },
      {
        "row": 33,
        "rowsha": "I6F2p40wC4iALCteQwB8aXq7Y+CfqPOq9z2Yqh4mtwc=",
        "originContent": "* [HAProxy architecture guide](http://www.haproxy.org/download/1.2/doc/architecture.txt)",
        "translatedContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Reverse_proxy)"
      },
      {
        "row": 34,
        "rowsha": "T1iq0loFSY7nsxMMPzZ8z0I8/jxVU1QGdf6vmtWe+nk=",
        "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Reverse_proxy)",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## Tầng ứng dụng"
      },
      {
        "row": 36,
        "rowsha": "6NabscnPk8ymcpOMLJ5upxB+wi1ip0RGcIu4XBRXEUo=",
        "originContent": "## Application layer",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 38,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yB5SYwm.png\">"
      },
      {
        "row": 39,
        "rowsha": "2DDgvJNfz35KH7Xl7Y7Q+m7siI4rwo+uwWAru4THF3g=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yB5SYwm.png\">",
        "translatedContent": "  <br/>"
      },
      {
        "row": 40,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 25,
    "Content": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>\n</p>\n\nSeparating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently.  Adding a new API results in adding application servers without necessarily adding additional web servers.  The **single responsibility principle** advocates for small and autonomous services that work together.  Small teams with small services can plan more aggressively for rapid growth.\n\nWorkers in the application layer also help enable [asynchronism](#asynchronism).\n\n### Microservices\n\nRelated to this discussion are [microservices](https://en.wikipedia.org/wiki/Microservices), which can be described as a suite of independently deployable, small, modular services.  Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. <sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>\n\nPinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.\n\n### Service Discovery\n\nSystems such as [Consul](https://www.consul.io/docs/index.html), [Etcd](https://coreos.com/etcd/docs/latest), and [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) can help services find each other by keeping track of registered names, addresses, and ports.  [Health checks](https://www.consul.io/intro/getting-started/checks.html) help verify service integrity and are often done using an [HTTP](#hypertext-transfer-protocol-http) endpoint.  Both Consul and Etcd have a built in [key-value store](#key-value-store) that can be useful for storing config values and other shared data.\n\n### Disadvantage(s): application layer\n\n* Adding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).\n* Microservices can add complexity in terms of deployments and operations.\n\n### Source(s) and further reading\n\n* [Intro to architecting systems for scale](http://lethain.com/introduction-to-architecting-systems-for-scale)\n* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Service oriented architecture](https://en.wikipedia.org/wiki/Service-oriented_architecture)\n* [Introduction to Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)\n* [Here's what you need to know about building microservices](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)\n\n## Database\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Xkm5CXz.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Source: Scaling up to your first 10 million users</a></i>\n</p>\n\n### Relational database management system (RDBMS)\n",
    "ContentSha": "4XnXpBum9tEdb1sG9FZ65dxvl1TxD2b55kzZSCwIQE8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Nguồn: Giới thiệu về kiến trúc hệ thống cho khả năng mở rộng</a></i>\n</p>\n\nTách biệt tầng web khỏi tầng ứng dụng (còn gọi là tầng nền tảng) cho phép bạn mở rộng và cấu hình cả hai tầng một cách độc lập. Việc thêm một API mới dẫn đến việc bổ sung máy chủ ứng dụng mà không nhất thiết phải thêm máy chủ web bổ sung. Nguyên tắc **single responsibility** khuyến khích các dịch vụ nhỏ và tự động làm việc cùng nhau. Các nhóm nhỏ với các dịch vụ nhỏ có thể lập kế hoạch phát triển nhanh chóng một cách tích cực hơn.\n\nCác worker ở tầng ứng dụng cũng giúp kích hoạt [tính bất đồng bộ](#asynchronism).\n\n### Microservices\n\nLiên quan đến chủ đề này là [microservices](https://vi.wikipedia.org/wiki/Microservices), có thể được mô tả là một bộ các dịch vụ nhỏ, mô-đun, có thể triển khai độc lập. Mỗi dịch vụ chạy một tiến trình riêng biệt và giao tiếp qua một cơ chế nhẹ, được xác định rõ nhằm phục vụ mục tiêu kinh doanh. <sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>\n\nPinterest, ví dụ, có thể có các microservice như: hồ sơ người dùng, theo dõi, nguồn cấp, tìm kiếm, tải ảnh lên, v.v.\n\n### Khám phá dịch vụ\n\nCác hệ thống như [Consul](https://www.consul.io/docs/index.html), [Etcd](https://coreos.com/etcd/docs/latest), và [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) có thể giúp các dịch vụ tìm nhau bằng cách theo dõi tên, địa chỉ và cổng đã đăng ký. [Kiểm tra sức khỏe](https://www.consul.io/intro/getting-started/checks.html) giúp xác minh tính toàn vẹn của dịch vụ và thường được thực hiện thông qua một endpoint [HTTP](#hypertext-transfer-protocol-http). Cả Consul và Etcd đều có [kho lưu trữ key-value](#key-value-store) tích hợp sẵn, hữu ích để lưu giá trị cấu hình và dữ liệu chia sẻ khác.\n\n### Nhược điểm: tầng ứng dụng\n\n* Thêm tầng ứng dụng với các dịch vụ liên kết lỏng lẻo đòi hỏi một cách tiếp cận khác về mặt kiến trúc, vận hành và quy trình (so với hệ thống nguyên khối).\n* Microservice có thể làm tăng độ phức tạp trong triển khai và vận hành.\n\n### Nguồn và tài liệu đọc thêm\n\n* [Giới thiệu về kiến trúc hệ thống cho khả năng mở rộng](http://lethain.com/introduction-to-architecting-systems-for-scale)\n* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Kiến trúc hướng dịch vụ](https://vi.wikipedia.org/wiki/Ki%E1%BA%BFn_tr%C3%BAc_h%C6%B0%E1%BB%9Bng_d%E1%BB%8Bch_v%E1%BB%A5)\n* [Giới thiệu về Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)\n* [Những điều bạn cần biết về xây dựng microservice](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)\n\n## Cơ sở dữ liệu\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Xkm5CXz.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Nguồn: Mở rộng lên 10 triệu người dùng đầu tiên</a></i>\n</p>\n\n### Hệ quản trị cơ sở dữ liệu quan hệ (RDBMS)\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "XKyWblIAaLweFNdYR7DY6+BG5VKu0ZN+qyUPrZFPuGw=",
        "originContent": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>",
        "translatedContent": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Nguồn: Giới thiệu về kiến trúc hệ thống cho khả năng mở rộng</a></i>"
      },
      {
        "row": 2,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "UM6js3Ubp+TOmUSIgFpnXR9xCK7AtXtk0LJjFo/1CGg=",
        "originContent": "Separating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently.  Adding a new API results in adding application servers without necessarily adding additional web servers.  The **single responsibility principle** advocates for small and autonomous services that work together.  Small teams with small services can plan more aggressively for rapid growth.",
        "translatedContent": "Tách biệt tầng web khỏi tầng ứng dụng (còn gọi là tầng nền tảng) cho phép bạn mở rộng và cấu hình cả hai tầng một cách độc lập. Việc thêm một API mới dẫn đến việc bổ sung máy chủ ứng dụng mà không nhất thiết phải thêm máy chủ web bổ sung. Nguyên tắc **single responsibility** khuyến khích các dịch vụ nhỏ và tự động làm việc cùng nhau. Các nhóm nhỏ với các dịch vụ nhỏ có thể lập kế hoạch phát triển nhanh chóng một cách tích cực hơn."
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "xkBQu5uzAzx79If8PRrc69tBn2jQA3JGZxWrPbl8AIo=",
        "originContent": "Workers in the application layer also help enable [asynchronism](#asynchronism).",
        "translatedContent": "Các worker ở tầng ứng dụng cũng giúp kích hoạt [tính bất đồng bộ](#asynchronism)."
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "QALyAWhGHiAiI7zj0n8mHQbz2MPeC/7GQsXm6lETWbE=",
        "originContent": "### Microservices",
        "translatedContent": "### Microservices"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "JEKJi5S2MoUg4dgNOGjYfPuWuY6w9wlVy6+hVUuUb1E=",
        "originContent": "Related to this discussion are [microservices](https://en.wikipedia.org/wiki/Microservices), which can be described as a suite of independently deployable, small, modular services.  Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. <sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>",
        "translatedContent": "Liên quan đến chủ đề này là [microservices](https://vi.wikipedia.org/wiki/Microservices), có thể được mô tả là một bộ các dịch vụ nhỏ, mô-đun, có thể triển khai độc lập. Mỗi dịch vụ chạy một tiến trình riêng biệt và giao tiếp qua một cơ chế nhẹ, được xác định rõ nhằm phục vụ mục tiêu kinh doanh. <sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "JAJfKIWTPa+k536relRM4Sa2S8jQNzSHtVinCyQ9Vt8=",
        "originContent": "Pinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.",
        "translatedContent": "Pinterest, ví dụ, có thể có các microservice như: hồ sơ người dùng, theo dõi, nguồn cấp, tìm kiếm, tải ảnh lên, v.v."
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "NEEVX03dzMHiPstGq2XH0Y+KiOGKCVpjLe8ODMPCZbE=",
        "originContent": "### Service Discovery",
        "translatedContent": "### Khám phá dịch vụ"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "V7wR9veeJevfojORQpyvoS+6BuwA+1o4NRx1gphUdsk=",
        "originContent": "Systems such as [Consul](https://www.consul.io/docs/index.html), [Etcd](https://coreos.com/etcd/docs/latest), and [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) can help services find each other by keeping track of registered names, addresses, and ports.  [Health checks](https://www.consul.io/intro/getting-started/checks.html) help verify service integrity and are often done using an [HTTP](#hypertext-transfer-protocol-http) endpoint.  Both Consul and Etcd have a built in [key-value store](#key-value-store) that can be useful for storing config values and other shared data.",
        "translatedContent": "Các hệ thống như [Consul](https://www.consul.io/docs/index.html), [Etcd](https://coreos.com/etcd/docs/latest), và [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) có thể giúp các dịch vụ tìm nhau bằng cách theo dõi tên, địa chỉ và cổng đã đăng ký. [Kiểm tra sức khỏe](https://www.consul.io/intro/getting-started/checks.html) giúp xác minh tính toàn vẹn của dịch vụ và thường được thực hiện thông qua một endpoint [HTTP](#hypertext-transfer-protocol-http). Cả Consul và Etcd đều có [kho lưu trữ key-value](#key-value-store) tích hợp sẵn, hữu ích để lưu giá trị cấu hình và dữ liệu chia sẻ khác."
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "up0iITXICUefSMFhfCjq2tdobQwafQ/AhpdoxRBfGrw=",
        "originContent": "### Disadvantage(s): application layer",
        "translatedContent": "### Nhược điểm: tầng ứng dụng"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "d04JcXi8PzarOJ7w+Cmi0v2VrznvXZgozwpsCls2Mrc=",
        "originContent": "* Adding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).",
        "translatedContent": "* Thêm tầng ứng dụng với các dịch vụ liên kết lỏng lẻo đòi hỏi một cách tiếp cận khác về mặt kiến trúc, vận hành và quy trình (so với hệ thống nguyên khối)."
      },
      {
        "row": 21,
        "rowsha": "8Vv874DXS2kAIxFt2INdkt/FMU8EN8AfPLZRsYhhClg=",
        "originContent": "* Microservices can add complexity in terms of deployments and operations.",
        "translatedContent": "* Microservice có thể làm tăng độ phức tạp trong triển khai và vận hành."
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Nguồn và tài liệu đọc thêm"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "P6UDnzaJUP638ZrRxWoBt/rKGUVjFeJGWiw98IRGjjg=",
        "originContent": "* [Intro to architecting systems for scale](http://lethain.com/introduction-to-architecting-systems-for-scale)",
        "translatedContent": "* [Giới thiệu về kiến trúc hệ thống cho khả năng mở rộng](http://lethain.com/introduction-to-architecting-systems-for-scale)"
      },
      {
        "row": 26,
        "rowsha": "E8CKVfW4DaDVQHo21CF4Vsv7vGZieZXs0+mOiMdXKn0=",
        "originContent": "* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)",
        "translatedContent": "* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)"
      },
      {
        "row": 27,
        "rowsha": "9ZF2oHsuUqabjRWA5mzsUZIR7gofXAjxF3jLd9LgL9w=",
        "originContent": "* [Service oriented architecture](https://en.wikipedia.org/wiki/Service-oriented_architecture)",
        "translatedContent": "* [Kiến trúc hướng dịch vụ](https://vi.wikipedia.org/wiki/Ki%E1%BA%BFn_tr%C3%BAc_h%C6%B0%E1%BB%9Bng_d%E1%BB%8Bch_v%E1%BB%A5)"
      },
      {
        "row": 28,
        "rowsha": "Isg85bcp/QVt2nmGdbkLcO/MBcUP4Rdgxgp43hUW5hk=",
        "originContent": "* [Introduction to Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)",
        "translatedContent": "* [Giới thiệu về Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)"
      },
      {
        "row": 29,
        "rowsha": "fLRwXUKIQIrgOpXD6j165zGOA1vJjI2tvSK3uJziO0w=",
        "originContent": "* [Here's what you need to know about building microservices](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)",
        "translatedContent": "* [Những điều bạn cần biết về xây dựng microservice](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "vMbgZh4T+X8OZjW57nT1HM2z1j6HVK3J2VqmT4oLlKA=",
        "originContent": "## Database",
        "translatedContent": "## Cơ sở dữ liệu"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 34,
        "rowsha": "tXTOz4PsX5hfHVhFSOgkK7vpXDt/hMGSgWGuVk6lWag=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Xkm5CXz.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Xkm5CXz.png\">"
      },
      {
        "row": 35,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 36,
        "rowsha": "QZ9VelS8CnFWMWB2KzGmKZDoOJgPrHoFrfhL6M+2Tv0=",
        "originContent": "  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Source: Scaling up to your first 10 million users</a></i>",
        "translatedContent": "  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Nguồn: Mở rộng lên 10 triệu người dùng đầu tiên</a></i>"
      },
      {
        "row": 37,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "6RssMtdpk7vEildBf6je9NR7SzfXWiF5HBYi0iebSA4=",
        "originContent": "### Relational database management system (RDBMS)",
        "translatedContent": "### Hệ quản trị cơ sở dữ liệu quan hệ (RDBMS)"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 26,
    "Content": "A relational database like SQL is a collection of data items organized in tables.\n\n**ACID** is a set of properties of relational database [transactions](https://en.wikipedia.org/wiki/Database_transaction).\n\n* **Atomicity** - Each transaction is all or nothing\n* **Consistency** - Any transaction will bring the database from one valid state to another\n* **Isolation** - Executing transactions concurrently has the same results as if the transactions were executed serially\n* **Durability** - Once a transaction has been committed, it will remain so\n\nThere are many techniques to scale a relational database: **master-slave replication**, **master-master replication**, **federation**, **sharding**, **denormalization**, and **SQL tuning**.\n\n#### Master-slave replication\n\nThe master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/C9ioGtn.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n##### Disadvantage(s): master-slave replication\n\n* Additional logic is needed to promote a slave to a master.\n* See [Disadvantage(s): replication](#disadvantages-replication) for points related to **both** master-slave and master-master.\n\n#### Master-master replication\n\nBoth masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/krAHLGg.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n##### Disadvantage(s): master-master replication\n\n* You'll need a load balancer or you'll need to make changes to your application logic to determine where to write.\n* Most master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.",
    "ContentSha": "xbwODyHVavckLsfDMlRqRxmfdv3+erTT0ITmoKYGnqg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Một cơ sở dữ liệu quan hệ như SQL là một tập hợp các mục dữ liệu được tổ chức trong các bảng.\n\n**ACID** là một tập hợp các thuộc tính của [giao dịch](https://en.wikipedia.org/wiki/Database_transaction) trong cơ sở dữ liệu quan hệ.\n\n* **Atomicity** - Mỗi giao dịch là tất cả hoặc không có gì\n* **Consistency** - Bất kỳ giao dịch nào cũng sẽ đưa cơ sở dữ liệu từ một trạng thái hợp lệ này sang trạng thái hợp lệ khác\n* **Isolation** - Việc thực thi đồng thời các giao dịch sẽ cho kết quả giống như khi các giao dịch được thực thi tuần tự\n* **Durability** - Một khi giao dịch đã được cam kết, nó sẽ được giữ nguyên\n\nCó nhiều kỹ thuật để mở rộng quy mô cơ sở dữ liệu quan hệ: **nhân bản chủ-tớ**, **nhân bản chủ-chủ**, **liên kết**, **phân mảnh**, **phi chuẩn hóa**, và **tối ưu hóa SQL**.\n\n#### Nhân bản chủ-tớ\n\nChủ phục vụ cả đọc và ghi, nhân bản các thao tác ghi đến một hoặc nhiều tớ, các tớ chỉ phục vụ đọc. Các tớ cũng có thể nhân bản đến các tớ bổ sung theo dạng cây. Nếu chủ bị ngắt kết nối, hệ thống có thể tiếp tục hoạt động ở chế độ chỉ đọc cho đến khi một tớ được nâng cấp thành chủ hoặc một chủ mới được cung cấp.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/C9ioGtn.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Nguồn: Scalability, availability, stability, patterns</a></i>\n</p>\n\n##### Nhược điểm: nhân bản chủ-tớ\n\n* Cần bổ sung logic để nâng cấp một tớ thành chủ.\n* Xem [Nhược điểm: replication](#disadvantages-replication) cho các điểm liên quan đến **cả** nhân bản chủ-tớ và chủ-chủ.\n\n#### Nhân bản chủ-chủ\n\nCả hai chủ đều phục vụ đọc và ghi và phối hợp với nhau về các thao tác ghi. Nếu một trong hai chủ gặp sự cố, hệ thống vẫn có thể tiếp tục hoạt động với cả đọc và ghi.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/krAHLGg.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Nguồn: Scalability, availability, stability, patterns</a></i>\n</p>\n\n##### Nhược điểm: nhân bản chủ-chủ\n\n* Bạn sẽ cần bộ cân bằng tải hoặc cần sửa đổi logic ứng dụng để xác định vị trí ghi dữ liệu.\n* Hầu hết các hệ thống chủ-chủ hoặc là nhất quán lỏng lẻo (vi phạm ACID) hoặc có độ trễ ghi tăng lên do đồng bộ hóa.",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "TVj++70eISoGO+iBto4OFzaI6XKAL6e/E+uDS6ZaXOk=",
        "originContent": "A relational database like SQL is a collection of data items organized in tables.",
        "translatedContent": "Một cơ sở dữ liệu quan hệ như SQL là một tập hợp các mục dữ liệu được tổ chức trong các bảng."
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "ugt+GAK9djNkt9rCr5Lt81CTBlxYR/rhBGd51QIWaxw=",
        "originContent": "**ACID** is a set of properties of relational database [transactions](https://en.wikipedia.org/wiki/Database_transaction).",
        "translatedContent": "**ACID** là một tập hợp các thuộc tính của [giao dịch](https://en.wikipedia.org/wiki/Database_transaction) trong cơ sở dữ liệu quan hệ."
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "t7PNhuoBI+XkGQDP/Orx/tC1G9tD45Np/C9khLpfx00=",
        "originContent": "* **Atomicity** - Each transaction is all or nothing",
        "translatedContent": "* **Atomicity** - Mỗi giao dịch là tất cả hoặc không có gì"
      },
      {
        "row": 6,
        "rowsha": "ArIcuDjmee6P1HP0YvxD0rnt49fFDYT5JSlNqdOXrVk=",
        "originContent": "* **Consistency** - Any transaction will bring the database from one valid state to another",
        "translatedContent": "* **Consistency** - Bất kỳ giao dịch nào cũng sẽ đưa cơ sở dữ liệu từ một trạng thái hợp lệ này sang trạng thái hợp lệ khác"
      },
      {
        "row": 7,
        "rowsha": "S3c99UuvMQkH1xDNRKwjl6SGiUxyptHlRO+WtxsKaqQ=",
        "originContent": "* **Isolation** - Executing transactions concurrently has the same results as if the transactions were executed serially",
        "translatedContent": "* **Isolation** - Việc thực thi đồng thời các giao dịch sẽ cho kết quả giống như khi các giao dịch được thực thi tuần tự"
      },
      {
        "row": 8,
        "rowsha": "wMfYZINyEc131EdqAI5sHJxLmLMEtQJO35CGgwuyGbY=",
        "originContent": "* **Durability** - Once a transaction has been committed, it will remain so",
        "translatedContent": "* **Durability** - Một khi giao dịch đã được cam kết, nó sẽ được giữ nguyên"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "x5XCTJ5HadM7xfMUY7+c5Rov3gzYdUOXDPtj+k6PdK8=",
        "originContent": "There are many techniques to scale a relational database: **master-slave replication**, **master-master replication**, **federation**, **sharding**, **denormalization**, and **SQL tuning**.",
        "translatedContent": "Có nhiều kỹ thuật để mở rộng quy mô cơ sở dữ liệu quan hệ: **nhân bản chủ-tớ**, **nhân bản chủ-chủ**, **liên kết**, **phân mảnh**, **phi chuẩn hóa**, và **tối ưu hóa SQL**."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "/BkO8ChKxpGKYpsoTC9wtB+fSCGMZ4yuZmiRQruqpqk=",
        "originContent": "#### Master-slave replication",
        "translatedContent": "#### Nhân bản chủ-tớ"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "zLPuS3WrvJwrT1Pnds4IvmZthSpy5G+QXrf9z57FBPw=",
        "originContent": "The master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.",
        "translatedContent": "Chủ phục vụ cả đọc và ghi, nhân bản các thao tác ghi đến một hoặc nhiều tớ, các tớ chỉ phục vụ đọc. Các tớ cũng có thể nhân bản đến các tớ bổ sung theo dạng cây. Nếu chủ bị ngắt kết nối, hệ thống có thể tiếp tục hoạt động ở chế độ chỉ đọc cho đến khi một tớ được nâng cấp thành chủ hoặc một chủ mới được cung cấp."
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 17,
        "rowsha": "r54yp6VDJewyA/cs96laUlgpn+v7t5VM5wtvztBWn5s=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/C9ioGtn.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/C9ioGtn.png\">"
      },
      {
        "row": 18,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 19,
        "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
        "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Nguồn: Scalability, availability, stability, patterns</a></i>"
      },
      {
        "row": 20,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "9J/uYg6e5S8WlPRmrqls9thA/KxvsgIYiuz0U80L0WI=",
        "originContent": "##### Disadvantage(s): master-slave replication",
        "translatedContent": "##### Nhược điểm: nhân bản chủ-tớ"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "6RUOW7o6Hw1FEnxacP0l0H//QbClgocx4sjn0VFaJOw=",
        "originContent": "* Additional logic is needed to promote a slave to a master.",
        "translatedContent": "* Cần bổ sung logic để nâng cấp một tớ thành chủ."
      },
      {
        "row": 25,
        "rowsha": "WFJYIaOi13ZmznrgUwyUgoatnczXbGeKZyx/gFNc/P0=",
        "originContent": "* See [Disadvantage(s): replication](#disadvantages-replication) for points related to **both** master-slave and master-master.",
        "translatedContent": "* Xem [Nhược điểm: replication](#disadvantages-replication) cho các điểm liên quan đến **cả** nhân bản chủ-tớ và chủ-chủ."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "UXpwNBOaObxsPB0JW11vuvOjyXxn11TkvQpXFM5dMqw=",
        "originContent": "#### Master-master replication",
        "translatedContent": "#### Nhân bản chủ-chủ"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "/pDnmtrEr1+RCAIeEvNfvshtAgXfHuYIOHlp+XeZ5L4=",
        "originContent": "Both masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.",
        "translatedContent": "Cả hai chủ đều phục vụ đọc và ghi và phối hợp với nhau về các thao tác ghi. Nếu một trong hai chủ gặp sự cố, hệ thống vẫn có thể tiếp tục hoạt động với cả đọc và ghi."
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 32,
        "rowsha": "nM56Sep5KDPhkejsb5RlEcFrJTGSEtCLIO6auMKh+Zg=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/krAHLGg.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/krAHLGg.png\">"
      },
      {
        "row": 33,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 34,
        "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
        "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Nguồn: Scalability, availability, stability, patterns</a></i>"
      },
      {
        "row": 35,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "CMvauOacK4orcgzEPb/RxTbU59mcKlnXIfxjJNUAr20=",
        "originContent": "##### Disadvantage(s): master-master replication",
        "translatedContent": "##### Nhược điểm: nhân bản chủ-chủ"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "nfjSQmWmi/Qhioo4bcbtjADRHb3rAcBsdr0NluJOYGo=",
        "originContent": "* You'll need a load balancer or you'll need to make changes to your application logic to determine where to write.",
        "translatedContent": "* Bạn sẽ cần bộ cân bằng tải hoặc cần sửa đổi logic ứng dụng để xác định vị trí ghi dữ liệu."
      },
      {
        "row": 40,
        "rowsha": "Dk3agyO90ATBFSrlgQFe69gHAowfUM2FVLlLwXOIfBA=",
        "originContent": "* Most master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.",
        "translatedContent": "* Hầu hết các hệ thống chủ-chủ hoặc là nhất quán lỏng lẻo (vi phạm ACID) hoặc có độ trễ ghi tăng lên do đồng bộ hóa."
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 27,
    "Content": "* Conflict resolution comes more into play as more write nodes are added and as latency increases.\n* See [Disadvantage(s): replication](#disadvantages-replication) for points related to **both** master-slave and master-master.\n\n##### Disadvantage(s): replication\n\n* There is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.\n* Writes are replayed to the read replicas.  If there are a lot of writes, the read replicas can get bogged down with replaying writes and can't do as many reads.\n* The more read slaves, the more you have to replicate, which leads to greater replication lag.\n* On some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.\n* Replication adds more hardware and additional complexity.\n\n##### Source(s) and further reading: replication\n\n* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [Multi-master replication](https://en.wikipedia.org/wiki/Multi-master_replication)\n\n#### Federation\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/U3qV33e.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Source: Scaling up to your first 10 million users</a></i>\n</p>\n\nFederation (or functional partitioning) splits up databases by function.  For example, instead of a single, monolithic database, you could have three databases: **forums**, **users**, and **products**, resulting in less read and write traffic to each database and therefore less replication lag.  Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality.  With no single central master serializing writes you can write in parallel, increasing throughput.\n\n##### Disadvantage(s): federation\n\n* Federation is not effective if your schema requires huge functions or tables.\n* You'll need to update your application logic to determine which database to read and write.\n* Joining data from two databases is more complex with a [server link](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers).\n* Federation adds more hardware and additional complexity.\n\n##### Source(s) and further reading: federation\n\n* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)\n\n#### Sharding\n\n<p align=\"center\">",
    "ContentSha": "I/gTQQL3xkPYu5E5dWj4YTG/hfUu3BM7YFOD7HwCQH0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* Việc giải quyết xung đột trở nên quan trọng hơn khi có nhiều node ghi hơn và khi độ trễ tăng lên.\n* Xem [Nhược điểm: nhân bản](#disadvantages-replication) để biết các điểm liên quan đến **cả** master-slave và master-master.\n\n##### Nhược điểm: nhân bản\n\n* Có khả năng mất dữ liệu nếu master bị lỗi trước khi bất kỳ dữ liệu mới nào được ghi có thể được nhân bản đến các node khác.\n* Các ghi lại được phát lại đến các bản sao đọc. Nếu có nhiều ghi, các bản sao đọc có thể bị quá tải bởi việc phát lại ghi và không thể thực hiện nhiều đọc.\n* Càng nhiều slave đọc thì càng phải nhân bản nhiều, dẫn đến độ trễ nhân bản lớn hơn.\n* Trên một số hệ thống, ghi vào master có thể sinh ra nhiều luồng để ghi song song, trong khi bản sao đọc chỉ hỗ trợ ghi tuần tự với một luồng duy nhất.\n* Nhân bản bổ sung thêm phần cứng và sự phức tạp.\n\n##### Nguồn và tài liệu tham khảo thêm: nhân bản\n\n* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [Nhân bản đa master](https://en.wikipedia.org/wiki/Multi-master_replication)\n\n#### Federation\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/U3qV33e.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Nguồn: Scaling up to your first 10 million users</a></i>\n</p>\n\nFederation (hoặc phân vùng chức năng) chia nhỏ cơ sở dữ liệu theo chức năng. Ví dụ, thay vì một cơ sở dữ liệu đơn lẻ, nguyên khối, bạn có thể có ba cơ sở dữ liệu: **forums**, **users**, và **products**, dẫn đến ít lưu lượng đọc và ghi đến mỗi cơ sở dữ liệu hơn và do đó ít độ trễ nhân bản hơn. Các cơ sở dữ liệu nhỏ hơn giúp nhiều dữ liệu có thể nằm trong bộ nhớ hơn, từ đó tăng số lần truy cập cache nhờ cải thiện tính cục bộ của cache. Không có master trung tâm duy nhất để tuần tự hóa ghi, bạn có thể ghi song song, tăng thông lượng.\n\n##### Nhược điểm: federation\n\n* Federation không hiệu quả nếu lược đồ của bạn yêu cầu các chức năng hoặc bảng quá lớn.\n* Bạn sẽ cần cập nhật logic ứng dụng để xác định cơ sở dữ liệu nào cần đọc và ghi.\n* Kết hợp dữ liệu từ hai cơ sở dữ liệu sẽ phức tạp hơn với một [server link](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers).\n* Federation bổ sung thêm phần cứng và sự phức tạp.\n\n##### Nguồn và tài liệu tham khảo thêm: federation\n\n* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)\n\n#### Sharding\n\n<p align=\"center\">",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "WHkTVxfQNcj0KpXEf8i++cVkzS+lF8TWMFO/4SLP9JM=",
        "originContent": "* Conflict resolution comes more into play as more write nodes are added and as latency increases.",
        "translatedContent": "* Việc giải quyết xung đột trở nên quan trọng hơn khi có nhiều node ghi hơn và khi độ trễ tăng lên."
      },
      {
        "row": 2,
        "rowsha": "WFJYIaOi13ZmznrgUwyUgoatnczXbGeKZyx/gFNc/P0=",
        "originContent": "* See [Disadvantage(s): replication](#disadvantages-replication) for points related to **both** master-slave and master-master.",
        "translatedContent": "* Xem [Nhược điểm: nhân bản](#disadvantages-replication) để biết các điểm liên quan đến **cả** master-slave và master-master."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "Y9PQ4rBkdT0tvEShNLanQYDncrUiVqsthA8/o8uw2Pw=",
        "originContent": "##### Disadvantage(s): replication",
        "translatedContent": "##### Nhược điểm: nhân bản"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "X000vgG2X+3QkM7tzk/ylNCsyqvR8y/F9ik9R1HrVpI=",
        "originContent": "* There is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.",
        "translatedContent": "* Có khả năng mất dữ liệu nếu master bị lỗi trước khi bất kỳ dữ liệu mới nào được ghi có thể được nhân bản đến các node khác."
      },
      {
        "row": 7,
        "rowsha": "72921YdDRrzvAXB9Ra8JGSURjvzclzQ+R2yPZL+oMkk=",
        "originContent": "* Writes are replayed to the read replicas.  If there are a lot of writes, the read replicas can get bogged down with replaying writes and can't do as many reads.",
        "translatedContent": "* Các ghi lại được phát lại đến các bản sao đọc. Nếu có nhiều ghi, các bản sao đọc có thể bị quá tải bởi việc phát lại ghi và không thể thực hiện nhiều đọc."
      },
      {
        "row": 8,
        "rowsha": "bibvyFowP6GQZ2KTN5WI7Tz4FHxUhIzPitqe3P1U6/E=",
        "originContent": "* The more read slaves, the more you have to replicate, which leads to greater replication lag.",
        "translatedContent": "* Càng nhiều slave đọc thì càng phải nhân bản nhiều, dẫn đến độ trễ nhân bản lớn hơn."
      },
      {
        "row": 9,
        "rowsha": "uSXC8HBf/QRznFpcGsqRAFtmrZdjnO9fAO1R78PrudE=",
        "originContent": "* On some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.",
        "translatedContent": "* Trên một số hệ thống, ghi vào master có thể sinh ra nhiều luồng để ghi song song, trong khi bản sao đọc chỉ hỗ trợ ghi tuần tự với một luồng duy nhất."
      },
      {
        "row": 10,
        "rowsha": "odrw6DZWN2t+Ewwe88Nrq/Ld4/mvd73n7KfBYuTjXlw=",
        "originContent": "* Replication adds more hardware and additional complexity.",
        "translatedContent": "* Nhân bản bổ sung thêm phần cứng và sự phức tạp."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "QwPjuoDchFiE4ii8crVvONhB1ARVjoCHLjGOlAyiylg=",
        "originContent": "##### Source(s) and further reading: replication",
        "translatedContent": "##### Nguồn và tài liệu tham khảo thêm: nhân bản"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "UVMSE1BpfAJjZtNGckenaHDWkkWMyRCmwx5PRWNWv7Q=",
        "originContent": "* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)",
        "translatedContent": "* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)"
      },
      {
        "row": 15,
        "rowsha": "p2oeX5Y3dWirBuwg7Hfsm8I/z8PvNQroZETi6IEzBW4=",
        "originContent": "* [Multi-master replication](https://en.wikipedia.org/wiki/Multi-master_replication)",
        "translatedContent": "* [Nhân bản đa master](https://en.wikipedia.org/wiki/Multi-master_replication)"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "SXYGeZNmOhHlvknXjTtr7ComhgkIj1UXIfjGjhUapnQ=",
        "originContent": "#### Federation",
        "translatedContent": "#### Federation"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 20,
        "rowsha": "kU7HFHAkLMRxFEePW4U8islDAWELflPllxQdwOPt6oY=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/U3qV33e.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/U3qV33e.png\">"
      },
      {
        "row": 21,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 22,
        "rowsha": "QZ9VelS8CnFWMWB2KzGmKZDoOJgPrHoFrfhL6M+2Tv0=",
        "originContent": "  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Source: Scaling up to your first 10 million users</a></i>",
        "translatedContent": "  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Nguồn: Scaling up to your first 10 million users</a></i>"
      },
      {
        "row": 23,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "6CpIVgG1fedEHSkE+AjkRFPSk2jSS2EzkrJcBgSrr/c=",
        "originContent": "Federation (or functional partitioning) splits up databases by function.  For example, instead of a single, monolithic database, you could have three databases: **forums**, **users**, and **products**, resulting in less read and write traffic to each database and therefore less replication lag.  Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality.  With no single central master serializing writes you can write in parallel, increasing throughput.",
        "translatedContent": "Federation (hoặc phân vùng chức năng) chia nhỏ cơ sở dữ liệu theo chức năng. Ví dụ, thay vì một cơ sở dữ liệu đơn lẻ, nguyên khối, bạn có thể có ba cơ sở dữ liệu: **forums**, **users**, và **products**, dẫn đến ít lưu lượng đọc và ghi đến mỗi cơ sở dữ liệu hơn và do đó ít độ trễ nhân bản hơn. Các cơ sở dữ liệu nhỏ hơn giúp nhiều dữ liệu có thể nằm trong bộ nhớ hơn, từ đó tăng số lần truy cập cache nhờ cải thiện tính cục bộ của cache. Không có master trung tâm duy nhất để tuần tự hóa ghi, bạn có thể ghi song song, tăng thông lượng."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "8NRAtt8cUCVReGZVjdiR0ic6ZlxVTZyQnzqDXz1x3ns=",
        "originContent": "##### Disadvantage(s): federation",
        "translatedContent": "##### Nhược điểm: federation"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "mEdUM+F+TzuYV+CUAAJnjEy6qds4uY9NoqXgOUx4mwg=",
        "originContent": "* Federation is not effective if your schema requires huge functions or tables.",
        "translatedContent": "* Federation không hiệu quả nếu lược đồ của bạn yêu cầu các chức năng hoặc bảng quá lớn."
      },
      {
        "row": 30,
        "rowsha": "8fAaxzwAdRdL9BwgKYVI4Q3QFXwplWEWbttAXdktT0A=",
        "originContent": "* You'll need to update your application logic to determine which database to read and write.",
        "translatedContent": "* Bạn sẽ cần cập nhật logic ứng dụng để xác định cơ sở dữ liệu nào cần đọc và ghi."
      },
      {
        "row": 31,
        "rowsha": "cqsCfhuwTHvUmwV/oNeW9IPSqScbRykfnAFfEfLd6hA=",
        "originContent": "* Joining data from two databases is more complex with a [server link](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers).",
        "translatedContent": "* Kết hợp dữ liệu từ hai cơ sở dữ liệu sẽ phức tạp hơn với một [server link](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers)."
      },
      {
        "row": 32,
        "rowsha": "Kahr1ikLDwcjnq5Cq2y5YKxL9/Ey/v2zGojCDvRuVGY=",
        "originContent": "* Federation adds more hardware and additional complexity.",
        "translatedContent": "* Federation bổ sung thêm phần cứng và sự phức tạp."
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "BY32QoPUVb8Dpawhv1bBM42WT6ys67aUtLOBe30eMCA=",
        "originContent": "##### Source(s) and further reading: federation",
        "translatedContent": "##### Nguồn và tài liệu tham khảo thêm: federation"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "vkDetycwDenvATQ4NQZL68mF8E1QMw9OoWjyhccat6E=",
        "originContent": "* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)",
        "translatedContent": "* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "EuJ+I1tYDDJNva+aKr2FhDX7+Ag1q9ANl9QERiJ8OdI=",
        "originContent": "#### Sharding",
        "translatedContent": "#### Sharding"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 28,
    "Content": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wU8x5Id.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\nSharding distributes data across different databases such that each database can only manage a subset of the data.  Taking a users database as an example, as the number of users increases, more shards are added to the cluster.\n\nSimilar to the advantages of [federation](#federation), sharding results in less read and write traffic, less replication, and more cache hits.  Index size is also reduced, which generally improves performance with faster queries.  If one shard goes down, the other shards are still operational, although you'll want to add some form of replication to avoid data loss.  Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.\n\nCommon ways to shard a table of users is either through the user's last name initial or the user's geographic location.\n\n##### Disadvantage(s): sharding\n\n* You'll need to update your application logic to work with shards, which could result in complex SQL queries.\n* Data distribution can become lopsided in a shard.  For example, a set of power users on a shard could result in increased load to that shard compared to others.\n    * Rebalancing adds additional complexity.  A sharding function based on [consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) can reduce the amount of transferred data.\n* Joining data from multiple shards is more complex.\n* Sharding adds more hardware and additional complexity.\n\n##### Source(s) and further reading: sharding\n\n* [The coming of the shard](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)\n* [Shard database architecture](https://en.wikipedia.org/wiki/Shard_(database_architecture))\n* [Consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)\n\n#### Denormalization\n\nDenormalization attempts to improve read performance at the expense of some write performance.  Redundant copies of the data are written in multiple tables to avoid expensive joins.  Some RDBMS such as [PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) and Oracle support [materialized views](https://en.wikipedia.org/wiki/Materialized_view) which handle the work of storing redundant information and keeping redundant copies consistent.\n\nOnce data becomes distributed with techniques such as [federation](#federation) and [sharding](#sharding), managing joins across data centers further increases complexity.  Denormalization might circumvent the need for such complex joins.\n\nIn most systems, reads can heavily outnumber writes 100:1 or even 1000:1.  A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.\n\n##### Disadvantage(s): denormalization\n\n* Data is duplicated.\n* Constraints can help redundant copies of information stay in sync, which increases complexity of the database design.\n* A denormalized database under heavy write load might perform worse than its normalized counterpart.\n\n###### Source(s) and further reading: denormalization",
    "ContentSha": "GzP1YEx8H74doj7cHlqPZNKSbHvkETAbRVSJw4T5QnY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wU8x5Id.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Nguồn: Scalability, availability, stability, patterns</a></i>\n</p>\n\nSharding phân phối dữ liệu qua các cơ sở dữ liệu khác nhau sao cho mỗi cơ sở dữ liệu chỉ quản lý một phần của dữ liệu. Lấy ví dụ với cơ sở dữ liệu người dùng, khi số lượng người dùng tăng lên, nhiều shard hơn sẽ được thêm vào cụm.\n\nTương tự như lợi ích của [federation](#federation), sharding giúp giảm lưu lượng đọc và ghi, giảm việc nhân bản dữ liệu, và tăng tỷ lệ cache hit. Kích thước chỉ mục cũng được giảm, thường cải thiện hiệu năng với các truy vấn nhanh hơn. Nếu một shard gặp sự cố, các shard khác vẫn hoạt động, tuy nhiên bạn sẽ muốn thêm một số hình thức nhân bản để tránh mất dữ liệu. Giống như federation, không có một master trung tâm duy nhất serial hóa việc ghi, cho phép bạn ghi song song với thông lượng cao hơn.\n\nCác cách phổ biến để shard bảng người dùng là dựa vào ký tự đầu của họ người dùng hoặc vị trí địa lý của người dùng.\n\n##### Nhược điểm: sharding\n\n* Bạn sẽ cần cập nhật logic ứng dụng để làm việc với các shard, điều này có thể dẫn đến các truy vấn SQL phức tạp.\n* Phân phối dữ liệu có thể trở nên mất cân đối trong một shard. Ví dụ, một nhóm người dùng mạnh trên một shard có thể dẫn đến tải tăng lên cho shard đó so với các shard khác.\n    * Cân bằng lại dữ liệu làm tăng độ phức tạp. Hàm sharding dựa trên [consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) có thể giảm lượng dữ liệu cần chuyển.\n* Kết nối dữ liệu từ nhiều shard trở nên phức tạp hơn.\n* Sharding thêm nhiều phần cứng và độ phức tạp bổ sung.\n\n##### Nguồn và đọc thêm: sharding\n\n* [Sự xuất hiện của shard](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)\n* [Kiến trúc cơ sở dữ liệu shard](https://en.wikipedia.org/wiki/Shard_(database_architecture))\n* [Consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)\n\n#### Denormalization\n\nDenormalization cố gắng cải thiện hiệu năng đọc bằng cách hy sinh một phần hiệu năng ghi. Các bản sao dư thừa của dữ liệu được ghi vào nhiều bảng để tránh các phép nối đắt đỏ. Một số RDBMS như [PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) và Oracle hỗ trợ [materialized views](https://en.wikipedia.org/wiki/Materialized_view) giúp lưu trữ thông tin dư thừa và giữ các bản sao dư thừa nhất quán.\n\nKhi dữ liệu được phân phối bằng các kỹ thuật như [federation](#federation) và [sharding](#sharding), việc quản lý các phép nối qua các trung tâm dữ liệu càng làm tăng độ phức tạp. Denormalization có thể giúp tránh được nhu cầu thực hiện các phép nối phức tạp như vậy.\n\nTrong hầu hết các hệ thống, số lần đọc có thể vượt xa số lần ghi với tỷ lệ 100:1 hoặc thậm chí 1000:1. Một lần đọc dẫn đến phép nối dữ liệu phức tạp có thể rất tốn kém, tiêu tốn nhiều thời gian cho các thao tác ổ đĩa.\n\n##### Nhược điểm: denormalization\n\n* Dữ liệu bị trùng lặp.\n* Các ràng buộc có thể giúp các bản sao dư thừa của thông tin luôn đồng bộ, làm tăng độ phức tạp của thiết kế cơ sở dữ liệu.\n* Cơ sở dữ liệu denormalized dưới tải ghi lớn có thể hoạt động kém hơn so với cơ sở dữ liệu normalized.\n\n###### Nguồn và đọc thêm: denormalization",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "PxtRcRTfviap+02exC/YvnmEw9ks/Z+lzyqCIgIuigA=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wU8x5Id.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wU8x5Id.png\">"
      },
      {
        "row": 2,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 3,
        "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
        "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Nguồn: Scalability, availability, stability, patterns</a></i>"
      },
      {
        "row": 4,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "F5OV3J6j0odiSHpcEdzaWn4rxZU6nk/JVG2szmBexBY=",
        "originContent": "Sharding distributes data across different databases such that each database can only manage a subset of the data.  Taking a users database as an example, as the number of users increases, more shards are added to the cluster.",
        "translatedContent": "Sharding phân phối dữ liệu qua các cơ sở dữ liệu khác nhau sao cho mỗi cơ sở dữ liệu chỉ quản lý một phần của dữ liệu. Lấy ví dụ với cơ sở dữ liệu người dùng, khi số lượng người dùng tăng lên, nhiều shard hơn sẽ được thêm vào cụm."
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "Lfy7zn8jTo/EGEj0QfDdbDr9azAIO2YamEBn+y5moLk=",
        "originContent": "Similar to the advantages of [federation](#federation), sharding results in less read and write traffic, less replication, and more cache hits.  Index size is also reduced, which generally improves performance with faster queries.  If one shard goes down, the other shards are still operational, although you'll want to add some form of replication to avoid data loss.  Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.",
        "translatedContent": "Tương tự như lợi ích của [federation](#federation), sharding giúp giảm lưu lượng đọc và ghi, giảm việc nhân bản dữ liệu, và tăng tỷ lệ cache hit. Kích thước chỉ mục cũng được giảm, thường cải thiện hiệu năng với các truy vấn nhanh hơn. Nếu một shard gặp sự cố, các shard khác vẫn hoạt động, tuy nhiên bạn sẽ muốn thêm một số hình thức nhân bản để tránh mất dữ liệu. Giống như federation, không có một master trung tâm duy nhất serial hóa việc ghi, cho phép bạn ghi song song với thông lượng cao hơn."
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "izo5bEdM4FbdKop2HmZ4gLi9i5EiLAHVW8KiFBl4opw=",
        "originContent": "Common ways to shard a table of users is either through the user's last name initial or the user's geographic location.",
        "translatedContent": "Các cách phổ biến để shard bảng người dùng là dựa vào ký tự đầu của họ người dùng hoặc vị trí địa lý của người dùng."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "lCoMVSE1J92DI277I/r122+KSgnM23erK0vofboQIIo=",
        "originContent": "##### Disadvantage(s): sharding",
        "translatedContent": "##### Nhược điểm: sharding"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "SEhUSrJxZf54oC/CYWYhkQ0/9R5JuyXBkwI9sZ9c9Ng=",
        "originContent": "* You'll need to update your application logic to work with shards, which could result in complex SQL queries.",
        "translatedContent": "* Bạn sẽ cần cập nhật logic ứng dụng để làm việc với các shard, điều này có thể dẫn đến các truy vấn SQL phức tạp."
      },
      {
        "row": 15,
        "rowsha": "YX5AFXam6gkQuYYb0/60YswS8hSjDkjOH9u6QAYeOMM=",
        "originContent": "* Data distribution can become lopsided in a shard.  For example, a set of power users on a shard could result in increased load to that shard compared to others.",
        "translatedContent": "* Phân phối dữ liệu có thể trở nên mất cân đối trong một shard. Ví dụ, một nhóm người dùng mạnh trên một shard có thể dẫn đến tải tăng lên cho shard đó so với các shard khác."
      },
      {
        "row": 16,
        "rowsha": "dE4Jy2l1bIqQ18T4hE/k9C7j4b5ZZ9hnHGkmDpfkN7Y=",
        "originContent": "    * Rebalancing adds additional complexity.  A sharding function based on [consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) can reduce the amount of transferred data.",
        "translatedContent": "    * Cân bằng lại dữ liệu làm tăng độ phức tạp. Hàm sharding dựa trên [consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) có thể giảm lượng dữ liệu cần chuyển."
      },
      {
        "row": 17,
        "rowsha": "6n42TN5GtJy/2lHDi9RgSZg1qVpsVMO1xADU7+3gHX4=",
        "originContent": "* Joining data from multiple shards is more complex.",
        "translatedContent": "* Kết nối dữ liệu từ nhiều shard trở nên phức tạp hơn."
      },
      {
        "row": 18,
        "rowsha": "ipm6+/HtIOpd+hbYUvP/Bv1g29y4wvRWAJnMI2XW5tw=",
        "originContent": "* Sharding adds more hardware and additional complexity.",
        "translatedContent": "* Sharding thêm nhiều phần cứng và độ phức tạp bổ sung."
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "Fi+Z3mSn+uCejt4xgb3fkCV1ijHEcxXLLrzjHQqAOa0=",
        "originContent": "##### Source(s) and further reading: sharding",
        "translatedContent": "##### Nguồn và đọc thêm: sharding"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "itXuAmLWlCwpSKUui/Qqn9QGxUnp/FGJhe5mn9ZzB48=",
        "originContent": "* [The coming of the shard](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)",
        "translatedContent": "* [Sự xuất hiện của shard](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)"
      },
      {
        "row": 23,
        "rowsha": "HQ0nX3NLA+ABmND5wOZaYuHfjS1iR/UWAl9XzEPqgcQ=",
        "originContent": "* [Shard database architecture](https://en.wikipedia.org/wiki/Shard_(database_architecture))",
        "translatedContent": "* [Kiến trúc cơ sở dữ liệu shard](https://en.wikipedia.org/wiki/Shard_(database_architecture))"
      },
      {
        "row": 24,
        "rowsha": "qJZYEUpxy4rXFmMb9azcCni271IPtkDahT2V3dE7iA0=",
        "originContent": "* [Consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)",
        "translatedContent": "* [Consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "s57oiOl6dHavHY9NxVG6ALFu3iT0Ifyq/Pbc97i/NLM=",
        "originContent": "#### Denormalization",
        "translatedContent": "#### Denormalization"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "+1IDgptxiwSskgqndvkmmbVxaHmS7OAVhZpIwqKbKTQ=",
        "originContent": "Denormalization attempts to improve read performance at the expense of some write performance.  Redundant copies of the data are written in multiple tables to avoid expensive joins.  Some RDBMS such as [PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) and Oracle support [materialized views](https://en.wikipedia.org/wiki/Materialized_view) which handle the work of storing redundant information and keeping redundant copies consistent.",
        "translatedContent": "Denormalization cố gắng cải thiện hiệu năng đọc bằng cách hy sinh một phần hiệu năng ghi. Các bản sao dư thừa của dữ liệu được ghi vào nhiều bảng để tránh các phép nối đắt đỏ. Một số RDBMS như [PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) và Oracle hỗ trợ [materialized views](https://en.wikipedia.org/wiki/Materialized_view) giúp lưu trữ thông tin dư thừa và giữ các bản sao dư thừa nhất quán."
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "IAh+53HHkkxkwiNpxVIbMvxQGPwrzsTCQmsELK4gpDs=",
        "originContent": "Once data becomes distributed with techniques such as [federation](#federation) and [sharding](#sharding), managing joins across data centers further increases complexity.  Denormalization might circumvent the need for such complex joins.",
        "translatedContent": "Khi dữ liệu được phân phối bằng các kỹ thuật như [federation](#federation) và [sharding](#sharding), việc quản lý các phép nối qua các trung tâm dữ liệu càng làm tăng độ phức tạp. Denormalization có thể giúp tránh được nhu cầu thực hiện các phép nối phức tạp như vậy."
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "t3pn0RZ5W4Ja+hl9xB4HjVIiFfvPXFzMOeaq+3wUTbw=",
        "originContent": "In most systems, reads can heavily outnumber writes 100:1 or even 1000:1.  A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.",
        "translatedContent": "Trong hầu hết các hệ thống, số lần đọc có thể vượt xa số lần ghi với tỷ lệ 100:1 hoặc thậm chí 1000:1. Một lần đọc dẫn đến phép nối dữ liệu phức tạp có thể rất tốn kém, tiêu tốn nhiều thời gian cho các thao tác ổ đĩa."
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "Hbk59RevQ6Dv6Jf1E2dzsW81DkPlAJWNVC22YWW6etY=",
        "originContent": "##### Disadvantage(s): denormalization",
        "translatedContent": "##### Nhược điểm: denormalization"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "h7dALOvHjiThg/ehALJGlyLLjDuOa7Gpxawo/53DleU=",
        "originContent": "* Data is duplicated.",
        "translatedContent": "* Dữ liệu bị trùng lặp."
      },
      {
        "row": 37,
        "rowsha": "NUiSjydXB95eCLDbXyuj2BNExzPmu9KAho8rKYGMx/Q=",
        "originContent": "* Constraints can help redundant copies of information stay in sync, which increases complexity of the database design.",
        "translatedContent": "* Các ràng buộc có thể giúp các bản sao dư thừa của thông tin luôn đồng bộ, làm tăng độ phức tạp của thiết kế cơ sở dữ liệu."
      },
      {
        "row": 38,
        "rowsha": "cJ8O67v4dZrlrT43vM5IFSqWAYKP8ZDyarQYWVeBrEc=",
        "originContent": "* A denormalized database under heavy write load might perform worse than its normalized counterpart.",
        "translatedContent": "* Cơ sở dữ liệu denormalized dưới tải ghi lớn có thể hoạt động kém hơn so với cơ sở dữ liệu normalized."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "nnuCvraYRHI06NfCMt1HStO4iMVKfvEZIwMYtroGmMY=",
        "originContent": "###### Source(s) and further reading: denormalization",
        "translatedContent": "###### Nguồn và đọc thêm: denormalization"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 29,
    "Content": "\n* [Denormalization](https://en.wikipedia.org/wiki/Denormalization)\n\n#### SQL tuning\n\nSQL tuning is a broad topic and many [books](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) have been written as reference.\n\nIt's important to **benchmark** and **profile** to simulate and uncover bottlenecks.\n\n* **Benchmark** - Simulate high-load situations with tools such as [ab](http://httpd.apache.org/docs/2.2/programs/ab.html).\n* **Profile** - Enable tools such as the [slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) to help track performance issues.\n\nBenchmarking and profiling might point you to the following optimizations.\n\n##### Tighten up the schema\n\n* MySQL dumps to disk in contiguous blocks for fast access.\n* Use `CHAR` instead of `VARCHAR` for fixed-length fields.\n    * `CHAR` effectively allows for fast, random access, whereas with `VARCHAR`, you must find the end of a string before moving onto the next one.\n* Use `TEXT` for large blocks of text such as blog posts.  `TEXT` also allows for boolean searches.  Using a `TEXT` field results in storing a pointer on disk that is used to locate the text block.\n* Use `INT` for larger numbers up to 2^32 or 4 billion.\n* Use `DECIMAL` for currency to avoid floating point representation errors.\n* Avoid storing large `BLOBS`, store the location of where to get the object instead.\n* `VARCHAR(255)` is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.\n* Set the `NOT NULL` constraint where applicable to [improve search performance](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search).\n\n##### Use good indices\n\n* Columns that you are querying (`SELECT`, `GROUP BY`, `ORDER BY`, `JOIN`) could be faster with indices.\n* Indices are usually represented as self-balancing [B-tree](https://en.wikipedia.org/wiki/B-tree) that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.\n* Placing an index can keep the data in memory, requiring more space.\n* Writes could also be slower since the index also needs to be updated.\n* When loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.\n\n##### Avoid expensive joins\n\n* [Denormalize](#denormalization) where performance demands it.\n\n##### Partition tables\n",
    "ContentSha": "RC5xUXwhghEuq573LDD6+Is8QYupI3Y4Dn+nKYuNP3o=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n* [Phi chuẩn hóa (Denormalization)](https://vi.wikipedia.org/wiki/Denormalization)\n\n#### Tinh chỉnh SQL\n\nTinh chỉnh SQL là một chủ đề rộng lớn và nhiều [sách](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) đã được viết làm tài liệu tham khảo.\n\nĐiều quan trọng là phải **kiểm thử hiệu năng** và **phân tích hồ sơ** để mô phỏng và phát hiện các nút thắt cổ chai.\n\n* **Kiểm thử hiệu năng** - Mô phỏng tình huống tải cao với các công cụ như [ab](http://httpd.apache.org/docs/2.2/programs/ab.html).\n* **Phân tích hồ sơ** - Kích hoạt các công cụ như [slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) để giúp theo dõi các vấn đề về hiệu năng.\n\nKiểm thử hiệu năng và phân tích hồ sơ có thể giúp bạn xác định các tối ưu hóa sau.\n\n##### Siết chặt lược đồ\n\n* MySQL ghi ra đĩa thành các khối liên tiếp để truy cập nhanh.\n* Dùng `CHAR` thay vì `VARCHAR` cho các trường có độ dài cố định.\n    * `CHAR` thực sự cho phép truy cập ngẫu nhiên nhanh, trong khi với `VARCHAR`, bạn phải tìm điểm kết thúc của chuỗi trước khi chuyển sang chuỗi tiếp theo.\n* Dùng `TEXT` cho các khối văn bản lớn như bài đăng blog. `TEXT` cũng cho phép tìm kiếm kiểu boolean. Dùng trường `TEXT` sẽ lưu một con trỏ trên đĩa để xác định vị trí khối văn bản.\n* Dùng `INT` cho các số lớn lên đến 2^32 hoặc 4 tỷ.\n* Dùng `DECIMAL` cho tiền tệ để tránh lỗi biểu diễn số thực.\n* Tránh lưu trữ các `BLOB` lớn, thay vào đó lưu vị trí lấy đối tượng.\n* `VARCHAR(255)` là số lượng ký tự lớn nhất có thể được đếm trong một số 8 bit, thường tối đa hóa việc sử dụng một byte ở một số Hệ quản trị CSDL.\n* Đặt ràng buộc `NOT NULL` khi áp dụng để [cải thiện hiệu suất tìm kiếm](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search).\n\n##### Sử dụng chỉ mục tốt\n\n* Các cột mà bạn truy vấn (`SELECT`, `GROUP BY`, `ORDER BY`, `JOIN`) có thể nhanh hơn với chỉ mục.\n* Chỉ mục thường được biểu diễn dưới dạng [B-tree](https://en.wikipedia.org/wiki/B-tree) tự cân bằng giúp dữ liệu được sắp xếp và cho phép tìm kiếm, truy cập tuần tự, chèn, xóa trong thời gian logarit.\n* Đặt chỉ mục có thể giữ dữ liệu trong bộ nhớ, yêu cầu thêm không gian lưu trữ.\n* Việc ghi dữ liệu cũng có thể chậm hơn vì cần cập nhật chỉ mục.\n* Khi tải lượng lớn dữ liệu, có thể nhanh hơn nếu tắt chỉ mục, tải dữ liệu, rồi xây dựng lại chỉ mục.\n\n##### Tránh các phép nối tốn kém\n\n* [Phi chuẩn hóa](#denormalization) khi hiệu năng yêu cầu.\n\n##### Phân vùng bảng\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "iIyxeoiOMWug4ow1XbmqynlJ+PcmqBpyIDnezOOZUL0=",
        "originContent": "* [Denormalization](https://en.wikipedia.org/wiki/Denormalization)",
        "translatedContent": "* [Phi chuẩn hóa (Denormalization)](https://vi.wikipedia.org/wiki/Denormalization)"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "U5ndIFTCEShOejPdXAcWGYg52WXS+13jBS9xbWv7wMs=",
        "originContent": "#### SQL tuning",
        "translatedContent": "#### Tinh chỉnh SQL"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "5brMlLXsZCP6LeY90lPE/nA+F1R3Utnc7TWB1cMbKvY=",
        "originContent": "SQL tuning is a broad topic and many [books](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) have been written as reference.",
        "translatedContent": "Tinh chỉnh SQL là một chủ đề rộng lớn và nhiều [sách](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) đã được viết làm tài liệu tham khảo."
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "5u8i4iK+CoFzMuDptTzgAx+bnssPksaKCXkH86MCY4s=",
        "originContent": "It's important to **benchmark** and **profile** to simulate and uncover bottlenecks.",
        "translatedContent": "Điều quan trọng là phải **kiểm thử hiệu năng** và **phân tích hồ sơ** để mô phỏng và phát hiện các nút thắt cổ chai."
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "II+JElcbGGHyu2RJs5bHJ0InzuqF1/tz4JP7H5AEqdQ=",
        "originContent": "* **Benchmark** - Simulate high-load situations with tools such as [ab](http://httpd.apache.org/docs/2.2/programs/ab.html).",
        "translatedContent": "* **Kiểm thử hiệu năng** - Mô phỏng tình huống tải cao với các công cụ như [ab](http://httpd.apache.org/docs/2.2/programs/ab.html)."
      },
      {
        "row": 11,
        "rowsha": "HidKyGa3w0J9QeKvVFBjDdAuizjiBA95vkLhz73tUDU=",
        "originContent": "* **Profile** - Enable tools such as the [slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) to help track performance issues.",
        "translatedContent": "* **Phân tích hồ sơ** - Kích hoạt các công cụ như [slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) để giúp theo dõi các vấn đề về hiệu năng."
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "MxUDF1UOp7Uhj70JBdhUVQ5CaUUc2+NbpgkI6ApbKyA=",
        "originContent": "Benchmarking and profiling might point you to the following optimizations.",
        "translatedContent": "Kiểm thử hiệu năng và phân tích hồ sơ có thể giúp bạn xác định các tối ưu hóa sau."
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "u5IrR5ipsHN+pmd7KJM6DZ47AQY6O9z21yrakX+p7e4=",
        "originContent": "##### Tighten up the schema",
        "translatedContent": "##### Siết chặt lược đồ"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "tGSDpkjsV4aFG9uXbAK76iv8jrdgV/0HBJsT4UsIdwg=",
        "originContent": "* MySQL dumps to disk in contiguous blocks for fast access.",
        "translatedContent": "* MySQL ghi ra đĩa thành các khối liên tiếp để truy cập nhanh."
      },
      {
        "row": 18,
        "rowsha": "9gIPpL1647pzLPkBZ6AgMCiqSyaKaBKegN4/EvaGzm8=",
        "originContent": "* Use `CHAR` instead of `VARCHAR` for fixed-length fields.",
        "translatedContent": "* Dùng `CHAR` thay vì `VARCHAR` cho các trường có độ dài cố định."
      },
      {
        "row": 19,
        "rowsha": "lhkqcIlaheLGSENEe6oZyjGPgobHm6cwBHhZ9NafKqw=",
        "originContent": "    * `CHAR` effectively allows for fast, random access, whereas with `VARCHAR`, you must find the end of a string before moving onto the next one.",
        "translatedContent": "    * `CHAR` thực sự cho phép truy cập ngẫu nhiên nhanh, trong khi với `VARCHAR`, bạn phải tìm điểm kết thúc của chuỗi trước khi chuyển sang chuỗi tiếp theo."
      },
      {
        "row": 20,
        "rowsha": "0V8mWY0KW7QM7D0eAZ7QKic9h2Jg0KiEx5p8KVtnl6k=",
        "originContent": "* Use `TEXT` for large blocks of text such as blog posts.  `TEXT` also allows for boolean searches.  Using a `TEXT` field results in storing a pointer on disk that is used to locate the text block.",
        "translatedContent": "* Dùng `TEXT` cho các khối văn bản lớn như bài đăng blog. `TEXT` cũng cho phép tìm kiếm kiểu boolean. Dùng trường `TEXT` sẽ lưu một con trỏ trên đĩa để xác định vị trí khối văn bản."
      },
      {
        "row": 21,
        "rowsha": "t8hHr5wk/UHSmQQufr7dfbq6nktotJdiAiQLY+sE7OI=",
        "originContent": "* Use `INT` for larger numbers up to 2^32 or 4 billion.",
        "translatedContent": "* Dùng `INT` cho các số lớn lên đến 2^32 hoặc 4 tỷ."
      },
      {
        "row": 22,
        "rowsha": "hSaQIvpb16EPKhqsLrLsBcB1op6TeSWA67kBD2PKxFM=",
        "originContent": "* Use `DECIMAL` for currency to avoid floating point representation errors.",
        "translatedContent": "* Dùng `DECIMAL` cho tiền tệ để tránh lỗi biểu diễn số thực."
      },
      {
        "row": 23,
        "rowsha": "MtDcdxih3EmsrV7+ubmZO1KV7JJiCZSPEH635MXjasw=",
        "originContent": "* Avoid storing large `BLOBS`, store the location of where to get the object instead.",
        "translatedContent": "* Tránh lưu trữ các `BLOB` lớn, thay vào đó lưu vị trí lấy đối tượng."
      },
      {
        "row": 24,
        "rowsha": "T2aMXNnESv7wYsO/crJGAzFNtuk9/x5SWapccZkIwHE=",
        "originContent": "* `VARCHAR(255)` is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.",
        "translatedContent": "* `VARCHAR(255)` là số lượng ký tự lớn nhất có thể được đếm trong một số 8 bit, thường tối đa hóa việc sử dụng một byte ở một số Hệ quản trị CSDL."
      },
      {
        "row": 25,
        "rowsha": "UzsxCnaOGDxdp2upn2wCbaWJcNNgR9CLWJ2Pzmjy/6s=",
        "originContent": "* Set the `NOT NULL` constraint where applicable to [improve search performance](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search).",
        "translatedContent": "* Đặt ràng buộc `NOT NULL` khi áp dụng để [cải thiện hiệu suất tìm kiếm](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "Obb8RdGWv3wj8OLBsDSYQniNzl0LL16KDKeVQTWmSrk=",
        "originContent": "##### Use good indices",
        "translatedContent": "##### Sử dụng chỉ mục tốt"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "I3Z/8w9LMizBNk88O53iEkNM2kMwm5iUQVIO+PyuQpY=",
        "originContent": "* Columns that you are querying (`SELECT`, `GROUP BY`, `ORDER BY`, `JOIN`) could be faster with indices.",
        "translatedContent": "* Các cột mà bạn truy vấn (`SELECT`, `GROUP BY`, `ORDER BY`, `JOIN`) có thể nhanh hơn với chỉ mục."
      },
      {
        "row": 30,
        "rowsha": "L5R3v64NMHuCGa/ABwQ8pt0GLmmeRLG5zWxEy4G460I=",
        "originContent": "* Indices are usually represented as self-balancing [B-tree](https://en.wikipedia.org/wiki/B-tree) that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.",
        "translatedContent": "* Chỉ mục thường được biểu diễn dưới dạng [B-tree](https://en.wikipedia.org/wiki/B-tree) tự cân bằng giúp dữ liệu được sắp xếp và cho phép tìm kiếm, truy cập tuần tự, chèn, xóa trong thời gian logarit."
      },
      {
        "row": 31,
        "rowsha": "yviMqnF4X4iHYQz6ihAQYvmm5LPII9mblfqgtZUJuZw=",
        "originContent": "* Placing an index can keep the data in memory, requiring more space.",
        "translatedContent": "* Đặt chỉ mục có thể giữ dữ liệu trong bộ nhớ, yêu cầu thêm không gian lưu trữ."
      },
      {
        "row": 32,
        "rowsha": "fVT5ImvVq9tVwugCmbfwZ4dmJB3v0TJkT5xn8CQYbUA=",
        "originContent": "* Writes could also be slower since the index also needs to be updated.",
        "translatedContent": "* Việc ghi dữ liệu cũng có thể chậm hơn vì cần cập nhật chỉ mục."
      },
      {
        "row": 33,
        "rowsha": "3P9aEmuDPtDdcLFPTfOBZnyir28sz5DgZU1DIDE+DWY=",
        "originContent": "* When loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.",
        "translatedContent": "* Khi tải lượng lớn dữ liệu, có thể nhanh hơn nếu tắt chỉ mục, tải dữ liệu, rồi xây dựng lại chỉ mục."
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "pwtda6pPueokL8TZDWjw+GtxnDUI6u6d5i+Xp1kr54Y=",
        "originContent": "##### Avoid expensive joins",
        "translatedContent": "##### Tránh các phép nối tốn kém"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "TyrVGvzJe7Ma0vI+OREiBdD/TruYT5c6TFwW8PfedoE=",
        "originContent": "* [Denormalize](#denormalization) where performance demands it.",
        "translatedContent": "* [Phi chuẩn hóa](#denormalization) khi hiệu năng yêu cầu."
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "j/DHOl2CUihQ0aoZTeQnTlS3Bmv3WLUxHsyAyzQfsNY=",
        "originContent": "##### Partition tables",
        "translatedContent": "##### Phân vùng bảng"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 30,
    "Content": "* Break up a table by putting hot spots in a separate table to help keep it in memory.\n\n##### Tune the query cache\n\n* In some cases, the [query cache](https://dev.mysql.com/doc/refman/5.7/en/query-cache.html) could lead to [performance issues](https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/).\n\n##### Source(s) and further reading: SQL tuning\n\n* [Tips for optimizing MySQL queries](http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/)\n* [Is there a good reason i see VARCHAR(255) used so often?](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)\n* [How do null values affect performance?](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)\n* [Slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)\n\n### NoSQL\n\nNoSQL is a collection of data items represented in a **key-value store**, **document store**, **wide column store**, or a **graph database**.  Data is denormalized, and joins are generally done in the application code.  Most NoSQL stores lack true ACID transactions and favor [eventual consistency](#eventual-consistency).\n\n**BASE** is often used to describe the properties of NoSQL databases.  In comparison with the [CAP Theorem](#cap-theorem), BASE chooses availability over consistency.\n\n* **Basically available** - the system guarantees availability.\n* **Soft state** - the state of the system may change over time, even without input.\n* **Eventual consistency** - the system will become consistent over a period of time, given that the system doesn't receive input during that period.\n\nIn addition to choosing between [SQL or NoSQL](#sql-or-nosql), it is helpful to understand which type of NoSQL database best fits your use case(s).  We'll review **key-value stores**, **document stores**, **wide column stores**, and **graph databases** in the next section.\n\n#### Key-value store\n\n> Abstraction: hash table\n\nA key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD.  Data stores can maintain keys in [lexicographic order](https://en.wikipedia.org/wiki/Lexicographical_order), allowing efficient retrieval of key ranges.  Key-value stores can allow for storing of metadata with a value.\n\nKey-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer.  Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.\n\nA key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.\n\n##### Source(s) and further reading: key-value store\n\n* [Key-value database](https://en.wikipedia.org/wiki/Key-value_database)\n* [Disadvantages of key-value stores](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)\n* [Redis architecture](http://qnimate.com/overview-of-redis-architecture/)",
    "ContentSha": "+vnJh/M2dUlgEZ6CZbzhFf3VoeY7aJE4IGjH1bsbrm8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* Chia nhỏ một bảng bằng cách đưa các điểm nóng vào một bảng riêng biệt để giúp giữ nó trong bộ nhớ.\n\n##### Tinh chỉnh bộ nhớ đệm truy vấn\n\n* Trong một số trường hợp, [bộ nhớ đệm truy vấn](https://dev.mysql.com/doc/refman/5.7/en/query-cache.html) có thể dẫn đến [vấn đề hiệu năng](https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/).\n\n##### Nguồn và tài liệu đọc thêm: Tinh chỉnh SQL\n\n* [Mẹo tối ưu hóa truy vấn MySQL](http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/)\n* [Có lý do gì để VARCHAR(255) được sử dụng phổ biến như vậy?](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)\n* [Giá trị null ảnh hưởng đến hiệu suất như thế nào?](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)\n* [Nhật ký truy vấn chậm](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)\n\n### NoSQL\n\nNoSQL là tập hợp các mục dữ liệu được thể hiện bằng **key-value store**, **document store**, **wide column store**, hoặc **graph database**. Dữ liệu được phi chuẩn hóa và các phép nối thường được thực hiện trong mã ứng dụng. Hầu hết các kho NoSQL không có giao dịch ACID thực sự và ưu tiên [tính nhất quán cuối cùng](#eventual-consistency).\n\n**BASE** thường được dùng để mô tả các đặc tính của cơ sở dữ liệu NoSQL. So với [Định lý CAP](#cap-theorem), BASE chọn tính sẵn sàng thay vì tính nhất quán.\n\n* **Basically available** - hệ thống đảm bảo tính sẵn sàng.\n* **Soft state** - trạng thái của hệ thống có thể thay đổi theo thời gian, ngay cả khi không có đầu vào.\n* **Eventual consistency** - hệ thống sẽ trở nên nhất quán sau một khoảng thời gian, miễn là hệ thống không nhận thêm đầu vào trong khoảng thời gian đó.\n\nNgoài việc lựa chọn giữa [SQL hoặc NoSQL](#sql-or-nosql), việc hiểu loại cơ sở dữ liệu NoSQL nào phù hợp nhất với trường hợp sử dụng của bạn cũng rất hữu ích. Chúng ta sẽ xem xét **key-value store**, **document store**, **wide column store**, và **graph database** ở phần tiếp theo.\n\n#### Key-value store\n\n> Trừu tượng: bảng băm\n\nMột key-value store thường cho phép đọc và ghi với độ phức tạp O(1), thường được hỗ trợ bởi bộ nhớ hoặc SSD. Các kho dữ liệu có thể duy trì khóa theo [thứ tự từ điển](https://en.wikipedia.org/wiki/Lexicographical_order), cho phép truy xuất phạm vi khóa hiệu quả. Key-value store có thể lưu trữ siêu dữ liệu cùng với giá trị.\n\nKey-value store cung cấp hiệu năng cao và thường được dùng cho các mô hình dữ liệu đơn giản hoặc dữ liệu thay đổi nhanh, như lớp bộ nhớ đệm trong RAM. Vì chúng chỉ cung cấp một tập hợp thao tác hạn chế, độ phức tạp sẽ chuyển sang tầng ứng dụng nếu cần thêm thao tác.\n\nKey-value store là nền tảng cho các hệ thống phức tạp hơn như document store, và trong một số trường hợp, graph database.\n\n##### Nguồn và tài liệu đọc thêm: key-value store\n\n* [Cơ sở dữ liệu key-value](https://en.wikipedia.org/wiki/Key-value_database)\n* [Nhược điểm của key-value store](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)\n* [Kiến trúc Redis](http://qnimate.com/overview-of-redis-architecture/)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "fDJd9UP3ZkBQh55z5wCqO2ZC5iekS7iNMGJSEmOfTJo=",
        "originContent": "* Break up a table by putting hot spots in a separate table to help keep it in memory.",
        "translatedContent": "* Chia nhỏ một bảng bằng cách đưa các điểm nóng vào một bảng riêng biệt để giúp giữ nó trong bộ nhớ."
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "BC4S3RozMKOgb1UI3/WBh0eYNQqpReqQQW21Ohr1N2o=",
        "originContent": "##### Tune the query cache",
        "translatedContent": "##### Tinh chỉnh bộ nhớ đệm truy vấn"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "3Uk6ayLGRzDqrU9rKbpTOydn5wU3jTHQrbqyL6RcowA=",
        "originContent": "* In some cases, the [query cache](https://dev.mysql.com/doc/refman/5.7/en/query-cache.html) could lead to [performance issues](https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/).",
        "translatedContent": "* Trong một số trường hợp, [bộ nhớ đệm truy vấn](https://dev.mysql.com/doc/refman/5.7/en/query-cache.html) có thể dẫn đến [vấn đề hiệu năng](https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/)."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "a50PuCVHJ0Y+BkYY356Q6mzQMoUT3VRvizr6CovMsGQ=",
        "originContent": "##### Source(s) and further reading: SQL tuning",
        "translatedContent": "##### Nguồn và tài liệu đọc thêm: Tinh chỉnh SQL"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "wUTwxCwBGbPe0VO1BR1pqZ4rfb2NH1f9MDRNi2tIn/U=",
        "originContent": "* [Tips for optimizing MySQL queries](http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/)",
        "translatedContent": "* [Mẹo tối ưu hóa truy vấn MySQL](http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/)"
      },
      {
        "row": 10,
        "rowsha": "0ZV972rblZnm5jEwegux1gMAE4J+IcSqx4XmVFF31YU=",
        "originContent": "* [Is there a good reason i see VARCHAR(255) used so often?](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)",
        "translatedContent": "* [Có lý do gì để VARCHAR(255) được sử dụng phổ biến như vậy?](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)"
      },
      {
        "row": 11,
        "rowsha": "uIQOQpGW6bocvYblsIc43hxMQnaOvdi120zGiwT0gow=",
        "originContent": "* [How do null values affect performance?](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)",
        "translatedContent": "* [Giá trị null ảnh hưởng đến hiệu suất như thế nào?](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)"
      },
      {
        "row": 12,
        "rowsha": "/FNda9UueetEOGQSH4v3G+a2HM3In4GsZlwpz614WXQ=",
        "originContent": "* [Slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)",
        "translatedContent": "* [Nhật ký truy vấn chậm](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "kV3WP/Mo/6zSEkXz7rHo5EaqHrx2KCry3nNtiDqzpsA=",
        "originContent": "### NoSQL",
        "translatedContent": "### NoSQL"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "CEKp6caNMr4jfBbLWmcFki2vTCaNA+yjnw2hf39UVSk=",
        "originContent": "NoSQL is a collection of data items represented in a **key-value store**, **document store**, **wide column store**, or a **graph database**.  Data is denormalized, and joins are generally done in the application code.  Most NoSQL stores lack true ACID transactions and favor [eventual consistency](#eventual-consistency).",
        "translatedContent": "NoSQL là tập hợp các mục dữ liệu được thể hiện bằng **key-value store**, **document store**, **wide column store**, hoặc **graph database**. Dữ liệu được phi chuẩn hóa và các phép nối thường được thực hiện trong mã ứng dụng. Hầu hết các kho NoSQL không có giao dịch ACID thực sự và ưu tiên [tính nhất quán cuối cùng](#eventual-consistency)."
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "OolYsTg6lgsX5HZcwoJmeBzKZHleg2HAhGDBpNyrJfI=",
        "originContent": "**BASE** is often used to describe the properties of NoSQL databases.  In comparison with the [CAP Theorem](#cap-theorem), BASE chooses availability over consistency.",
        "translatedContent": "**BASE** thường được dùng để mô tả các đặc tính của cơ sở dữ liệu NoSQL. So với [Định lý CAP](#cap-theorem), BASE chọn tính sẵn sàng thay vì tính nhất quán."
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "chSarlSDBtUVuwDK7e26fiI5R5hTuGk0CbTUYJTMm+w=",
        "originContent": "* **Basically available** - the system guarantees availability.",
        "translatedContent": "* **Basically available** - hệ thống đảm bảo tính sẵn sàng."
      },
      {
        "row": 21,
        "rowsha": "3zSuAgJX6OHxsVDP//zz9GyjNMkot0vNrn8P6pP9E/Y=",
        "originContent": "* **Soft state** - the state of the system may change over time, even without input.",
        "translatedContent": "* **Soft state** - trạng thái của hệ thống có thể thay đổi theo thời gian, ngay cả khi không có đầu vào."
      },
      {
        "row": 22,
        "rowsha": "ceCH/qNFSLL/vJifbs54NePnn6y/pTbFop3uVG6rFKw=",
        "originContent": "* **Eventual consistency** - the system will become consistent over a period of time, given that the system doesn't receive input during that period.",
        "translatedContent": "* **Eventual consistency** - hệ thống sẽ trở nên nhất quán sau một khoảng thời gian, miễn là hệ thống không nhận thêm đầu vào trong khoảng thời gian đó."
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "PVvLz25MjW/34Y3pABr8GsX3KsWTVm02u/VV92C+WJ0=",
        "originContent": "In addition to choosing between [SQL or NoSQL](#sql-or-nosql), it is helpful to understand which type of NoSQL database best fits your use case(s).  We'll review **key-value stores**, **document stores**, **wide column stores**, and **graph databases** in the next section.",
        "translatedContent": "Ngoài việc lựa chọn giữa [SQL hoặc NoSQL](#sql-or-nosql), việc hiểu loại cơ sở dữ liệu NoSQL nào phù hợp nhất với trường hợp sử dụng của bạn cũng rất hữu ích. Chúng ta sẽ xem xét **key-value store**, **document store**, **wide column store**, và **graph database** ở phần tiếp theo."
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "AU4OrqfmzsHa8IVmkfad5gr3gPN07h7azjS3wSaZ8Iw=",
        "originContent": "#### Key-value store",
        "translatedContent": "#### Key-value store"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "jsk54oTGWttneDXu+knddGlH1u/75MMwNITE8GKeQkk=",
        "originContent": "> Abstraction: hash table",
        "translatedContent": "> Trừu tượng: bảng băm"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "ygti4CVTZaPSYssVx3m3kVVqfA2fjw7lUGjFMJSEsYc=",
        "originContent": "A key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD.  Data stores can maintain keys in [lexicographic order](https://en.wikipedia.org/wiki/Lexicographical_order), allowing efficient retrieval of key ranges.  Key-value stores can allow for storing of metadata with a value.",
        "translatedContent": "Một key-value store thường cho phép đọc và ghi với độ phức tạp O(1), thường được hỗ trợ bởi bộ nhớ hoặc SSD. Các kho dữ liệu có thể duy trì khóa theo [thứ tự từ điển](https://en.wikipedia.org/wiki/Lexicographical_order), cho phép truy xuất phạm vi khóa hiệu quả. Key-value store có thể lưu trữ siêu dữ liệu cùng với giá trị."
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "qi5SjJ2XGdneToPTz694QmBF5qG6Z70N0dZRtmGxV7g=",
        "originContent": "Key-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer.  Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.",
        "translatedContent": "Key-value store cung cấp hiệu năng cao và thường được dùng cho các mô hình dữ liệu đơn giản hoặc dữ liệu thay đổi nhanh, như lớp bộ nhớ đệm trong RAM. Vì chúng chỉ cung cấp một tập hợp thao tác hạn chế, độ phức tạp sẽ chuyển sang tầng ứng dụng nếu cần thêm thao tác."
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "TEEwNq1KrPGaVWvsxzFIQiZ/kvAwkxokKFSwEkDAz48=",
        "originContent": "A key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.",
        "translatedContent": "Key-value store là nền tảng cho các hệ thống phức tạp hơn như document store, và trong một số trường hợp, graph database."
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "E5C/yjA/ttJtcaXYiV6PkdciTfa6hTIqZ4r6wbKT3yc=",
        "originContent": "##### Source(s) and further reading: key-value store",
        "translatedContent": "##### Nguồn và tài liệu đọc thêm: key-value store"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "PWiaPe8hUnJ7hUARatj3ng0NgHEaVn+NkAK75z4SutA=",
        "originContent": "* [Key-value database](https://en.wikipedia.org/wiki/Key-value_database)",
        "translatedContent": "* [Cơ sở dữ liệu key-value](https://en.wikipedia.org/wiki/Key-value_database)"
      },
      {
        "row": 39,
        "rowsha": "8xvsqz2OoTlwWPcAb/4IKhFG1snW2pgPt+FiHzA96XI=",
        "originContent": "* [Disadvantages of key-value stores](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)",
        "translatedContent": "* [Nhược điểm của key-value store](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)"
      },
      {
        "row": 40,
        "rowsha": "Kz9g68oJXv0oJdikjqnf+ZcM7PIE8+ALmDbbOWHElzk=",
        "originContent": "* [Redis architecture](http://qnimate.com/overview-of-redis-architecture/)",
        "translatedContent": "* [Kiến trúc Redis](http://qnimate.com/overview-of-redis-architecture/)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 31,
    "Content": "* [Memcached architecture](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)\n\n#### Document store\n\n> Abstraction: key-value store with documents stored as values\n\nA document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object.  Document stores provide APIs or a query language to query based on the internal structure of the document itself.  *Note, many key-value stores include features for working with a value's metadata, blurring the lines between these two storage types.*\n\nBased on the underlying implementation, documents are organized by collections, tags, metadata, or directories.  Although documents can be organized or grouped together, documents may have fields that are completely different from each other.\n\nSome document stores like [MongoDB](https://www.mongodb.com/mongodb-architecture) and [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) also provide a SQL-like language to perform complex queries.  [DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) supports both key-values and documents.\n\nDocument stores provide high flexibility and are often used for working with occasionally changing data.\n\n##### Source(s) and further reading: document store\n\n* [Document-oriented database](https://en.wikipedia.org/wiki/Document-oriented_database)\n* [MongoDB architecture](https://www.mongodb.com/mongodb-architecture)\n* [CouchDB architecture](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)\n* [Elasticsearch architecture](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)\n\n#### Wide column store\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n16iOGk.png\">\n  <br/>\n  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>Source: SQL & NoSQL, a brief history</a></i>\n</p>\n\n> Abstraction: nested map `ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>`\n\nA wide column store's basic unit of data is a column (name/value pair).  A column can be grouped in column families (analogous to a SQL table).  Super column families further group column families.  You can access each column independently with a row key, and columns with the same row key form a row.  Each value contains a timestamp for versioning and for conflict resolution.\n\nGoogle introduced [Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) as the first wide column store, which influenced the open-source [HBase](https://www.edureka.co/blog/hbase-architecture/) often-used in the Hadoop ecosystem, and [Cassandra](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html) from Facebook.  Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.\n\nWide column stores offer high availability and high scalability.  They are often used for very large data sets.\n\n##### Source(s) and further reading: wide column store\n\n* [SQL & NoSQL, a brief history](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)",
    "ContentSha": "qChjAGddKNc8A4k6Ydpi6HXYPt34LJFKDxqqAKCkrXw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Kiến trúc Memcached](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)\n\n#### Kho lưu trữ tài liệu\n\n> Trừu tượng: kho lưu trữ key-value với tài liệu được lưu trữ dưới dạng giá trị\n\nKho lưu trữ tài liệu tập trung vào các tài liệu (XML, JSON, nhị phân, v.v.), trong đó một tài liệu lưu trữ toàn bộ thông tin cho một đối tượng nhất định. Kho lưu trữ tài liệu cung cấp API hoặc ngôn ngữ truy vấn để truy vấn dựa trên cấu trúc nội bộ của chính tài liệu đó. *Lưu ý, nhiều kho key-value cũng bao gồm các chức năng làm việc với siêu dữ liệu của giá trị, làm mờ ranh giới giữa hai loại lưu trữ này.*\n\nTùy thuộc vào cách triển khai bên dưới, tài liệu được tổ chức theo bộ sưu tập, thẻ, siêu dữ liệu hoặc thư mục. Mặc dù tài liệu có thể được tổ chức hoặc nhóm lại, các trường của tài liệu có thể hoàn toàn khác nhau giữa các tài liệu.\n\nMột số kho lưu trữ tài liệu như [MongoDB](https://www.mongodb.com/mongodb-architecture) và [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) còn cung cấp ngôn ngữ giống SQL để thực hiện các truy vấn phức tạp. [DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) hỗ trợ cả key-value và tài liệu.\n\nKho lưu trữ tài liệu mang lại tính linh hoạt cao và thường được sử dụng cho dữ liệu thay đổi không thường xuyên.\n\n##### Nguồn và đọc thêm: kho lưu trữ tài liệu\n\n* [Cơ sở dữ liệu hướng tài liệu](https://en.wikipedia.org/wiki/Document-oriented_database)\n* [Kiến trúc MongoDB](https://www.mongodb.com/mongodb-architecture)\n* [Kiến trúc CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)\n* [Kiến trúc Elasticsearch](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)\n\n#### Kho lưu trữ cột rộng\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n16iOGk.png\">\n  <br/>\n  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>Nguồn: SQL & NoSQL, lịch sử ngắn gọn</a></i>\n</p>\n\n> Trừu tượng: bản đồ lồng nhau `ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>`\n\nĐơn vị dữ liệu cơ bản của kho lưu trữ cột rộng là một cột (cặp tên/giá trị). Một cột có thể được nhóm thành các họ cột (tương tự như bảng trong SQL). Họ siêu cột tiếp tục nhóm các họ cột. Bạn có thể truy cập từng cột độc lập bằng khóa dòng, và các cột có cùng khóa dòng tạo thành một dòng. Mỗi giá trị chứa một dấu thời gian để phân phiên bản và giải quyết xung đột.\n\nGoogle đã giới thiệu [Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) là kho lưu trữ cột rộng đầu tiên, ảnh hưởng đến [HBase](https://www.edureka.co/blog/hbase-architecture/) mã nguồn mở thường dùng trong hệ sinh thái Hadoop, và [Cassandra](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html) của Facebook. Các kho như BigTable, HBase, và Cassandra duy trì các khóa theo thứ tự từ điển, cho phép truy xuất hiệu quả các dải khóa lựa chọn.\n\nKho lưu trữ cột rộng cung cấp tính sẵn sàng cao và khả năng mở rộng lớn. Chúng thường được sử dụng cho bộ dữ liệu rất lớn.\n\n##### Nguồn và đọc thêm: kho lưu trữ cột rộng\n\n* [SQL & NoSQL, lịch sử ngắn gọn](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "2FrPVpN2ZwP3B8OHC+V00E+qmNtshzxrs6v6iORaa+4=",
        "originContent": "* [Memcached architecture](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)",
        "translatedContent": "* [Kiến trúc Memcached](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "ehl5Zv++MpEJiI3f9zRPX7hJdULwxYItI8UrlQdSpEo=",
        "originContent": "#### Document store",
        "translatedContent": "#### Kho lưu trữ tài liệu"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "11vGJdH1VNomcdXCTch7VFR75wNM3Xrmvq75Ez8olio=",
        "originContent": "> Abstraction: key-value store with documents stored as values",
        "translatedContent": "> Trừu tượng: kho lưu trữ key-value với tài liệu được lưu trữ dưới dạng giá trị"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "Qv0EXN9SpfJbx7XgX2VQCHCL2r2dQ0gStwoJYSrTAT0=",
        "originContent": "A document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object.  Document stores provide APIs or a query language to query based on the internal structure of the document itself.  *Note, many key-value stores include features for working with a value's metadata, blurring the lines between these two storage types.*",
        "translatedContent": "Kho lưu trữ tài liệu tập trung vào các tài liệu (XML, JSON, nhị phân, v.v.), trong đó một tài liệu lưu trữ toàn bộ thông tin cho một đối tượng nhất định. Kho lưu trữ tài liệu cung cấp API hoặc ngôn ngữ truy vấn để truy vấn dựa trên cấu trúc nội bộ của chính tài liệu đó. *Lưu ý, nhiều kho key-value cũng bao gồm các chức năng làm việc với siêu dữ liệu của giá trị, làm mờ ranh giới giữa hai loại lưu trữ này.*"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "Lca2PhfpgcFpQwrhUnJR7/mRWsylfqi7UCkmJbWVcQA=",
        "originContent": "Based on the underlying implementation, documents are organized by collections, tags, metadata, or directories.  Although documents can be organized or grouped together, documents may have fields that are completely different from each other.",
        "translatedContent": "Tùy thuộc vào cách triển khai bên dưới, tài liệu được tổ chức theo bộ sưu tập, thẻ, siêu dữ liệu hoặc thư mục. Mặc dù tài liệu có thể được tổ chức hoặc nhóm lại, các trường của tài liệu có thể hoàn toàn khác nhau giữa các tài liệu."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "4vi4/Vf8Z4f1B0iOVgIOtUSfmXRaAkw4ycm0R/ABfj0=",
        "originContent": "Some document stores like [MongoDB](https://www.mongodb.com/mongodb-architecture) and [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) also provide a SQL-like language to perform complex queries.  [DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) supports both key-values and documents.",
        "translatedContent": "Một số kho lưu trữ tài liệu như [MongoDB](https://www.mongodb.com/mongodb-architecture) và [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) còn cung cấp ngôn ngữ giống SQL để thực hiện các truy vấn phức tạp. [DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) hỗ trợ cả key-value và tài liệu."
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "Ou3d0GkGAFJQy68Jz+zZW1iduw2//drPZPUljkvQeXM=",
        "originContent": "Document stores provide high flexibility and are often used for working with occasionally changing data.",
        "translatedContent": "Kho lưu trữ tài liệu mang lại tính linh hoạt cao và thường được sử dụng cho dữ liệu thay đổi không thường xuyên."
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "mF5FY4ez5bxPI2BDOdBhAPVR0vGRJuskK8GlQsRT7a0=",
        "originContent": "##### Source(s) and further reading: document store",
        "translatedContent": "##### Nguồn và đọc thêm: kho lưu trữ tài liệu"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "Lj/AI1FUQWn/HWULDdZdUGDhLMcOKERAz5Tg5s/PSwQ=",
        "originContent": "* [Document-oriented database](https://en.wikipedia.org/wiki/Document-oriented_database)",
        "translatedContent": "* [Cơ sở dữ liệu hướng tài liệu](https://en.wikipedia.org/wiki/Document-oriented_database)"
      },
      {
        "row": 18,
        "rowsha": "48ct8mBD8xBot6LutZO7SC8ZtlKdkDK34V56x7kuTZY=",
        "originContent": "* [MongoDB architecture](https://www.mongodb.com/mongodb-architecture)",
        "translatedContent": "* [Kiến trúc MongoDB](https://www.mongodb.com/mongodb-architecture)"
      },
      {
        "row": 19,
        "rowsha": "ba3ZjitYr2cPoSAe5cUKrHB4QqssIQKddE7XobzORmc=",
        "originContent": "* [CouchDB architecture](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)",
        "translatedContent": "* [Kiến trúc CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)"
      },
      {
        "row": 20,
        "rowsha": "5zWVuoQr71fVFyzl0gqzcC3G5KJPnqXmR4zmM9Dc5Sc=",
        "originContent": "* [Elasticsearch architecture](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)",
        "translatedContent": "* [Kiến trúc Elasticsearch](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "sPQV/pViqK0HZza/GwmBLLC+HY8JiqWL5jrTKm8GNEM=",
        "originContent": "#### Wide column store",
        "translatedContent": "#### Kho lưu trữ cột rộng"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 25,
        "rowsha": "xfWUb3nUMMoN4djxcMV07QR+hOsxkZIWMU3b8C2e/zI=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n16iOGk.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n16iOGk.png\">"
      },
      {
        "row": 26,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 27,
        "rowsha": "mtExIoNk0GrN1MU1bLs4dnPGykIM8ylGVxt0RNAHvsg=",
        "originContent": "  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>Source: SQL & NoSQL, a brief history</a></i>",
        "translatedContent": "  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>Nguồn: SQL & NoSQL, lịch sử ngắn gọn</a></i>"
      },
      {
        "row": 28,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "BmwIK2RuzhKfIKE7Q2io8/uIoE/mkmwX6ekHKxC37Jo=",
        "originContent": "> Abstraction: nested map `ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>`",
        "translatedContent": "> Trừu tượng: bản đồ lồng nhau `ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>`"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "cUQEPcHCbkvYCI3BpmmszKTCgz/rhlOi2ii3H822hGI=",
        "originContent": "A wide column store's basic unit of data is a column (name/value pair).  A column can be grouped in column families (analogous to a SQL table).  Super column families further group column families.  You can access each column independently with a row key, and columns with the same row key form a row.  Each value contains a timestamp for versioning and for conflict resolution.",
        "translatedContent": "Đơn vị dữ liệu cơ bản của kho lưu trữ cột rộng là một cột (cặp tên/giá trị). Một cột có thể được nhóm thành các họ cột (tương tự như bảng trong SQL). Họ siêu cột tiếp tục nhóm các họ cột. Bạn có thể truy cập từng cột độc lập bằng khóa dòng, và các cột có cùng khóa dòng tạo thành một dòng. Mỗi giá trị chứa một dấu thời gian để phân phiên bản và giải quyết xung đột."
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "YHSA0r9KXeDCNnFPIxi4/b8CROMFq5wALM7c0dLEf9U=",
        "originContent": "Google introduced [Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) as the first wide column store, which influenced the open-source [HBase](https://www.edureka.co/blog/hbase-architecture/) often-used in the Hadoop ecosystem, and [Cassandra](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html) from Facebook.  Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.",
        "translatedContent": "Google đã giới thiệu [Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) là kho lưu trữ cột rộng đầu tiên, ảnh hưởng đến [HBase](https://www.edureka.co/blog/hbase-architecture/) mã nguồn mở thường dùng trong hệ sinh thái Hadoop, và [Cassandra](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html) của Facebook. Các kho như BigTable, HBase, và Cassandra duy trì các khóa theo thứ tự từ điển, cho phép truy xuất hiệu quả các dải khóa lựa chọn."
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "Vr/6tnY6FGlM//oSMQ4lKD765JEcLAxuAYVqNN8uQws=",
        "originContent": "Wide column stores offer high availability and high scalability.  They are often used for very large data sets.",
        "translatedContent": "Kho lưu trữ cột rộng cung cấp tính sẵn sàng cao và khả năng mở rộng lớn. Chúng thường được sử dụng cho bộ dữ liệu rất lớn."
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "wTV4x4YRcpGn9X3CxXchj2v5SOFWDQblcxtODC2OHek=",
        "originContent": "##### Source(s) and further reading: wide column store",
        "translatedContent": "##### Nguồn và đọc thêm: kho lưu trữ cột rộng"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "BFw34s8jH3VIXmTOHkIjAGc6y/waazr0DBBDGeE86qo=",
        "originContent": "* [SQL & NoSQL, a brief history](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)",
        "translatedContent": "* [SQL & NoSQL, lịch sử ngắn gọn](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 32,
    "Content": "* [Bigtable architecture](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)\n* [HBase architecture](https://www.edureka.co/blog/hbase-architecture/)\n* [Cassandra architecture](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html)\n\n#### Graph database\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/fNcl65g.png\">\n  <br/>\n  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>Source: Graph database</a></i>\n</p>\n\n> Abstraction: graph\n\nIn a graph database, each node is a record and each arc is a relationship between two nodes.  Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.\n\nGraphs databases offer high performance for data models with complex relationships, such as a social network.  They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources.  Many graphs can only be accessed with [REST APIs](#representational-state-transfer-rest).\n\n##### Source(s) and further reading: graph\n\n* [Graph database](https://en.wikipedia.org/wiki/Graph_database)\n* [Neo4j](https://neo4j.com/)\n* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)\n\n#### Source(s) and further reading: NoSQL\n\n* [Explanation of base terminology](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)\n* [NoSQL databases a survey and decision guidance](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)\n* [Scalability](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n* [Introduction to NoSQL](https://www.youtube.com/watch?v=qI_g07C_Q5I)\n* [NoSQL patterns](http://horicky.blogspot.com/2009/11/nosql-patterns.html)\n\n### SQL or NoSQL\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wXGqG5f.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>Source: Transitioning from RDBMS to NoSQL</a></i>\n</p>\n",
    "ContentSha": "yvB08chNWcvF9yiu0b/QLR53EBOeWK574rgWXfnGOXg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Kiến trúc Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)\n* [Kiến trúc HBase](https://www.edureka.co/blog/hbase-architecture/)\n* [Kiến trúc Cassandra](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html)\n\n#### Cơ sở dữ liệu đồ thị\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/fNcl65g.png\">\n  <br/>\n  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>Nguồn: Cơ sở dữ liệu đồ thị</a></i>\n</p>\n\n> Trừu tượng: đồ thị\n\nTrong cơ sở dữ liệu đồ thị, mỗi nút là một bản ghi và mỗi cung là một mối quan hệ giữa hai nút. Cơ sở dữ liệu đồ thị được tối ưu hóa để biểu diễn các mối quan hệ phức tạp với nhiều khóa ngoại hoặc các quan hệ nhiều-nhiều.\n\nCơ sở dữ liệu đồ thị cung cấp hiệu năng cao cho các mô hình dữ liệu có mối quan hệ phức tạp, ví dụ như mạng xã hội. Chúng còn khá mới và chưa được sử dụng rộng rãi; có thể sẽ khó tìm công cụ và tài nguyên phát triển. Nhiều cơ sở dữ liệu đồ thị chỉ có thể truy cập qua [REST APIs](#representational-state-transfer-rest).\n\n##### Nguồn và tài liệu đọc thêm: đồ thị\n\n* [Cơ sở dữ liệu đồ thị](https://en.wikipedia.org/wiki/Graph_database)\n* [Neo4j](https://neo4j.com/)\n* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)\n\n#### Nguồn và tài liệu đọc thêm: NoSQL\n\n* [Giải thích các thuật ngữ cơ bản](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)\n* [Khảo sát và hướng dẫn quyết định về cơ sở dữ liệu NoSQL](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)\n* [Khả năng mở rộng](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n* [Giới thiệu về NoSQL](https://www.youtube.com/watch?v=qI_g07C_Q5I)\n* [Mẫu NoSQL](http://horicky.blogspot.com/2009/11/nosql-patterns.html)\n\n### SQL hay NoSQL\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wXGqG5f.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>Nguồn: Chuyển đổi từ RDBMS sang NoSQL</a></i>\n</p>\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "oppKQyS7hTiKzLly1J35kjtTZbIAW3jTCGFPbf00+ss=",
        "originContent": "* [Bigtable architecture](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)",
        "translatedContent": "* [Kiến trúc Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)"
      },
      {
        "row": 2,
        "rowsha": "sBxNvDNoR83xq2ze/NwVGRIZV5QaG+5C2w+GGUF5GIg=",
        "originContent": "* [HBase architecture](https://www.edureka.co/blog/hbase-architecture/)",
        "translatedContent": "* [Kiến trúc HBase](https://www.edureka.co/blog/hbase-architecture/)"
      },
      {
        "row": 3,
        "rowsha": "2OkslhsJOFtrSf9JY5+/wX6QqrfPa4K/6AgI6Fu9Dik=",
        "originContent": "* [Cassandra architecture](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html)",
        "translatedContent": "* [Kiến trúc Cassandra](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html)"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "A/exvQGsrUv6SaskzCJFXL9+mU1RN4e8BAmOFSNDHJg=",
        "originContent": "#### Graph database",
        "translatedContent": "#### Cơ sở dữ liệu đồ thị"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 8,
        "rowsha": "efx2DfpG+WMy5Dh4XIrLZKv0ftO5CSz+k8lKjFQcduk=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/fNcl65g.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/fNcl65g.png\">"
      },
      {
        "row": 9,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 10,
        "rowsha": "pHA0XuhToumG8ssLfqvCDtiQcQTqj7hZJ+vus5zcqtY=",
        "originContent": "  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>Source: Graph database</a></i>",
        "translatedContent": "  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>Nguồn: Cơ sở dữ liệu đồ thị</a></i>"
      },
      {
        "row": 11,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "B5XYw4d5xmRsSXMrCAkg2t74N49qLGkHoBXxUJiBN5U=",
        "originContent": "> Abstraction: graph",
        "translatedContent": "> Trừu tượng: đồ thị"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "d9ijzqJWUkTEbnGP/BuqSJv4JADbxf+rPHbmAr4SRoM=",
        "originContent": "In a graph database, each node is a record and each arc is a relationship between two nodes.  Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.",
        "translatedContent": "Trong cơ sở dữ liệu đồ thị, mỗi nút là một bản ghi và mỗi cung là một mối quan hệ giữa hai nút. Cơ sở dữ liệu đồ thị được tối ưu hóa để biểu diễn các mối quan hệ phức tạp với nhiều khóa ngoại hoặc các quan hệ nhiều-nhiều."
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "0eslzANH9S6otdcN6/ARJO0UvHLlvdCqXyvw5W8ue74=",
        "originContent": "Graphs databases offer high performance for data models with complex relationships, such as a social network.  They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources.  Many graphs can only be accessed with [REST APIs](#representational-state-transfer-rest).",
        "translatedContent": "Cơ sở dữ liệu đồ thị cung cấp hiệu năng cao cho các mô hình dữ liệu có mối quan hệ phức tạp, ví dụ như mạng xã hội. Chúng còn khá mới và chưa được sử dụng rộng rãi; có thể sẽ khó tìm công cụ và tài nguyên phát triển. Nhiều cơ sở dữ liệu đồ thị chỉ có thể truy cập qua [REST APIs](#representational-state-transfer-rest)."
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "ChQ2EP4rHz/V4P4At1vUfr6L3o0Kdq0Psm7kf9dqyAQ=",
        "originContent": "##### Source(s) and further reading: graph",
        "translatedContent": "##### Nguồn và tài liệu đọc thêm: đồ thị"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "EnWArZthLZt/xH7cpNoQsUzldz4G7Jaqtd/wck7pGFA=",
        "originContent": "* [Graph database](https://en.wikipedia.org/wiki/Graph_database)",
        "translatedContent": "* [Cơ sở dữ liệu đồ thị](https://en.wikipedia.org/wiki/Graph_database)"
      },
      {
        "row": 22,
        "rowsha": "Xw3sx9p3cFowTFPRLepCr1to6L9cWUpPvIwcnMCuZZs=",
        "originContent": "* [Neo4j](https://neo4j.com/)",
        "translatedContent": "* [Neo4j](https://neo4j.com/)"
      },
      {
        "row": 23,
        "rowsha": "voZsejvFVXv5Bhp0+/GdekeMhALDxY5faPGZ+RXJlDs=",
        "originContent": "* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)",
        "translatedContent": "* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "SOpsdGTFBJwXrY1cL4e02nOPKSJT7XISoU/KkSFq3vU=",
        "originContent": "#### Source(s) and further reading: NoSQL",
        "translatedContent": "#### Nguồn và tài liệu đọc thêm: NoSQL"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "6scKM49eKpe3crCEZ7B0ZGdxI68r94k1hFhhQS2DJdE=",
        "originContent": "* [Explanation of base terminology](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)",
        "translatedContent": "* [Giải thích các thuật ngữ cơ bản](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)"
      },
      {
        "row": 28,
        "rowsha": "kLy2iBcpBZrfskPfAx1o1ag3dAnXpcWXKRb7/OfoBU8=",
        "originContent": "* [NoSQL databases a survey and decision guidance](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)",
        "translatedContent": "* [Khảo sát và hướng dẫn quyết định về cơ sở dữ liệu NoSQL](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)"
      },
      {
        "row": 29,
        "rowsha": "oxpL3qPKJwclX96+k267P7nRRdvi8f35CwDkjvmKluc=",
        "originContent": "* [Scalability](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)",
        "translatedContent": "* [Khả năng mở rộng](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)"
      },
      {
        "row": 30,
        "rowsha": "z7l5ZUT1L0lyxKjUaPNk0X3bW92k2MPwLaAZOMImdGI=",
        "originContent": "* [Introduction to NoSQL](https://www.youtube.com/watch?v=qI_g07C_Q5I)",
        "translatedContent": "* [Giới thiệu về NoSQL](https://www.youtube.com/watch?v=qI_g07C_Q5I)"
      },
      {
        "row": 31,
        "rowsha": "eEgiGzsQIVncA+CX7dO3zjQJ3tEIpGDtM8/r1xs8hW8=",
        "originContent": "* [NoSQL patterns](http://horicky.blogspot.com/2009/11/nosql-patterns.html)",
        "translatedContent": "* [Mẫu NoSQL](http://horicky.blogspot.com/2009/11/nosql-patterns.html)"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "VQeHO1Z/deZdDzdY8R7UBEIprx4oR7GevCZIpwlL1mY=",
        "originContent": "### SQL or NoSQL",
        "translatedContent": "### SQL hay NoSQL"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 36,
        "rowsha": "P9SYTlACogcwjh4pjaUBsWqjGW0Aps9AnuMCg11+wxA=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wXGqG5f.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wXGqG5f.png\">"
      },
      {
        "row": 37,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 38,
        "rowsha": "nspJf+8/Rgg2yv4MUWP11lk5ha1obeW+w6B4mVDClZI=",
        "originContent": "  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>Source: Transitioning from RDBMS to NoSQL</a></i>",
        "translatedContent": "  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>Nguồn: Chuyển đổi từ RDBMS sang NoSQL</a></i>"
      },
      {
        "row": 39,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 33,
    "Content": "Reasons for **SQL**:\n\n* Structured data\n* Strict schema\n* Relational data\n* Need for complex joins\n* Transactions\n* Clear patterns for scaling\n* More established: developers, community, code, tools, etc\n* Lookups by index are very fast\n\nReasons for **NoSQL**:\n\n* Semi-structured data\n* Dynamic or flexible schema\n* Non-relational data\n* No need for complex joins\n* Store many TB (or PB) of data\n* Very data intensive workload\n* Very high throughput for IOPS\n\nSample data well-suited for NoSQL:\n\n* Rapid ingest of clickstream and log data\n* Leaderboard or scoring data\n* Temporary data, such as a shopping cart\n* Frequently accessed ('hot') tables\n* Metadata/lookup tables\n\n##### Source(s) and further reading: SQL or NoSQL\n\n* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)\n* [SQL vs NoSQL differences](https://www.sitepoint.com/sql-vs-nosql-differences/)\n\n## Cache\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Q6z24La.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>",
    "ContentSha": "s5JZtpzJOg6uZVhDykP9Uy+U/KEwjhNiySMSqZAIAwI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Lý do chọn **SQL**:\n\n* Dữ liệu có cấu trúc\n* Lược đồ nghiêm ngặt\n* Dữ liệu quan hệ\n* Cần kết hợp phức tạp (joins)\n* Giao dịch\n* Có các mô hình mở rộng rõ ràng\n* Được sử dụng lâu đời: nhiều lập trình viên, cộng đồng, mã nguồn, công cụ, v.v.\n* Tìm kiếm theo chỉ mục rất nhanh\n\nLý do chọn **NoSQL**:\n\n* Dữ liệu bán cấu trúc\n* Lược đồ động hoặc linh hoạt\n* Dữ liệu phi quan hệ\n* Không cần kết hợp phức tạp (joins)\n* Lưu trữ nhiều TB (hoặc PB) dữ liệu\n* Khối lượng công việc dữ liệu rất lớn\n* Thông lượng IOPS rất cao\n\nDữ liệu mẫu phù hợp với NoSQL:\n\n* Tiếp nhận nhanh dữ liệu clickstream và log\n* Dữ liệu bảng xếp hạng hoặc điểm số\n* Dữ liệu tạm thời, như giỏ hàng mua sắm\n* Các bảng truy cập thường xuyên ('nóng')\n* Bảng metadata/tra cứu\n\n##### Nguồn và đọc thêm: SQL hay NoSQL\n\n* [Mở rộng lên đến 10 triệu người dùng đầu tiên](https://www.youtube.com/watch?v=kKjm4ehYiMs)\n* [Sự khác biệt giữa SQL và NoSQL](https://www.sitepoint.com/sql-vs-nosql-differences/)\n\n## Bộ nhớ đệm (Cache)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Q6z24La.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Nguồn: Các mẫu thiết kế hệ thống có khả năng mở rộng</a></i>",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "r9icARjTs6CRhldSEqrk52fELAahztd24CNbBDqckdc=",
        "originContent": "Reasons for **SQL**:",
        "translatedContent": "Lý do chọn **SQL**:"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "nsGez4GlS2M5WbaY2RQTbpj761UCNiu6nSyqfGkX4p8=",
        "originContent": "* Structured data",
        "translatedContent": "* Dữ liệu có cấu trúc"
      },
      {
        "row": 4,
        "rowsha": "Iuu5GO2DPpMFiJPT5PGfTHfAXgT7xV5xdP8c6DyPB5s=",
        "originContent": "* Strict schema",
        "translatedContent": "* Lược đồ nghiêm ngặt"
      },
      {
        "row": 5,
        "rowsha": "HUBaARbChF/PiCJJ1udNB0GS2eX83GkMSf18kPtCnQA=",
        "originContent": "* Relational data",
        "translatedContent": "* Dữ liệu quan hệ"
      },
      {
        "row": 6,
        "rowsha": "KnrtO+QtbtXv0EpmnBci10AHRU9jjQENfZnLToJsxk0=",
        "originContent": "* Need for complex joins",
        "translatedContent": "* Cần kết hợp phức tạp (joins)"
      },
      {
        "row": 7,
        "rowsha": "HTCve+R7OMaL0NiwRsolx0zPPi6/ks6gQJ8wL2wyEas=",
        "originContent": "* Transactions",
        "translatedContent": "* Giao dịch"
      },
      {
        "row": 8,
        "rowsha": "1LKnc3OIp8XgBRyxpvkT8UiP/DOZBFOAJrSqTEzcHVE=",
        "originContent": "* Clear patterns for scaling",
        "translatedContent": "* Có các mô hình mở rộng rõ ràng"
      },
      {
        "row": 9,
        "rowsha": "KhNjEaE6va+/lp2cPz5MbD2p0FgtTFWzDYlpadUV+pM=",
        "originContent": "* More established: developers, community, code, tools, etc",
        "translatedContent": "* Được sử dụng lâu đời: nhiều lập trình viên, cộng đồng, mã nguồn, công cụ, v.v."
      },
      {
        "row": 10,
        "rowsha": "eqZ/qVtt5ln4BAOMBIZ8v2eEZ81PQqFKwVsYsitQHqk=",
        "originContent": "* Lookups by index are very fast",
        "translatedContent": "* Tìm kiếm theo chỉ mục rất nhanh"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "XtjexymiRaLEB5PD/GO9saUcXt2/ctWvdecC4gmsAz8=",
        "originContent": "Reasons for **NoSQL**:",
        "translatedContent": "Lý do chọn **NoSQL**:"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "jfjZxT9WDz6uQD4LzlwpuUO+yXdq+sJE2pkjgHL85vo=",
        "originContent": "* Semi-structured data",
        "translatedContent": "* Dữ liệu bán cấu trúc"
      },
      {
        "row": 15,
        "rowsha": "o/6aZfRBkR1LvcXnYjq2rw8pn3QkSWamSyAFCt1W39E=",
        "originContent": "* Dynamic or flexible schema",
        "translatedContent": "* Lược đồ động hoặc linh hoạt"
      },
      {
        "row": 16,
        "rowsha": "9zxImz4UeTSgBRB2xqiNRLFMaj0Be9g9fWVqarrA1ug=",
        "originContent": "* Non-relational data",
        "translatedContent": "* Dữ liệu phi quan hệ"
      },
      {
        "row": 17,
        "rowsha": "l0c/AdGBPz7+YCs2kKV9hy9eM0JnsQvw2kKhp1ornZo=",
        "originContent": "* No need for complex joins",
        "translatedContent": "* Không cần kết hợp phức tạp (joins)"
      },
      {
        "row": 18,
        "rowsha": "Gs8z2Fvxfb0tzA127YdrHm3Vf8aBf0k+4EI7mxR7wIU=",
        "originContent": "* Store many TB (or PB) of data",
        "translatedContent": "* Lưu trữ nhiều TB (hoặc PB) dữ liệu"
      },
      {
        "row": 19,
        "rowsha": "XphH60sQ2Z+QUWphTR4F5L6Z15ZfY/tECRCAWl63+4A=",
        "originContent": "* Very data intensive workload",
        "translatedContent": "* Khối lượng công việc dữ liệu rất lớn"
      },
      {
        "row": 20,
        "rowsha": "LIknBmmeEk34husWU16FXexMOl0fzKbq7aCQSonGux8=",
        "originContent": "* Very high throughput for IOPS",
        "translatedContent": "* Thông lượng IOPS rất cao"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "cKBnN4mSff8NVqx7wgjk50WW5sSpqIEOiOV5BZtaw9M=",
        "originContent": "Sample data well-suited for NoSQL:",
        "translatedContent": "Dữ liệu mẫu phù hợp với NoSQL:"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "F3WTjYqvpCzI26AojsXzX1JIHg1nWfq65jUHBmSr1FY=",
        "originContent": "* Rapid ingest of clickstream and log data",
        "translatedContent": "* Tiếp nhận nhanh dữ liệu clickstream và log"
      },
      {
        "row": 25,
        "rowsha": "ycongjgDljddo9S0Wr0S55KCE3VwxJuAZ+1JxslcO3g=",
        "originContent": "* Leaderboard or scoring data",
        "translatedContent": "* Dữ liệu bảng xếp hạng hoặc điểm số"
      },
      {
        "row": 26,
        "rowsha": "R1pEy9ERswONyFX36fUJ1nh3TU165svAjxRHn1ujLrs=",
        "originContent": "* Temporary data, such as a shopping cart",
        "translatedContent": "* Dữ liệu tạm thời, như giỏ hàng mua sắm"
      },
      {
        "row": 27,
        "rowsha": "hxhLh4MxDiKpDrhV5DGGdOKgYntTolHpXqvlnkk6058=",
        "originContent": "* Frequently accessed ('hot') tables",
        "translatedContent": "* Các bảng truy cập thường xuyên ('nóng')"
      },
      {
        "row": 28,
        "rowsha": "p+IkY/kzq8n2SlJgHjJUAeONckwU0g7c9NTiE9cMgJ0=",
        "originContent": "* Metadata/lookup tables",
        "translatedContent": "* Bảng metadata/tra cứu"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "onSL188uaP9uZHsK9Z3j7HOFPA79N5rHNA6FlH8F0ZU=",
        "originContent": "##### Source(s) and further reading: SQL or NoSQL",
        "translatedContent": "##### Nguồn và đọc thêm: SQL hay NoSQL"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "vkDetycwDenvATQ4NQZL68mF8E1QMw9OoWjyhccat6E=",
        "originContent": "* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)",
        "translatedContent": "* [Mở rộng lên đến 10 triệu người dùng đầu tiên](https://www.youtube.com/watch?v=kKjm4ehYiMs)"
      },
      {
        "row": 33,
        "rowsha": "3zX6NZi1G/7JVvf6nBwrkLUjBzEw8YiSp5kbefbdjRs=",
        "originContent": "* [SQL vs NoSQL differences](https://www.sitepoint.com/sql-vs-nosql-differences/)",
        "translatedContent": "* [Sự khác biệt giữa SQL và NoSQL](https://www.sitepoint.com/sql-vs-nosql-differences/)"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "3M2uXr5EI2fJlWn3BHJBrOUgoctJwV7HXpmkisGuQ0Y=",
        "originContent": "## Cache",
        "translatedContent": "## Bộ nhớ đệm (Cache)"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 38,
        "rowsha": "y4DiLrKCFwCKHihZp9RbrdSDzfHBzLDWX/q3YGaHY5M=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Q6z24La.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Q6z24La.png\">"
      },
      {
        "row": 39,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 40,
        "rowsha": "BlGpJr1aaS7U1ovkxsSc1S7ZO+WxTq/Ry9MM5AGpY3s=",
        "originContent": "  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>",
        "translatedContent": "  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Nguồn: Các mẫu thiết kế hệ thống có khả năng mở rộng</a></i>"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 34,
    "Content": "</p>\n\nCaching improves page load times and can reduce the load on your servers and databases.  In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.\n\nDatabases often benefit from a uniform distribution of reads and writes across its partitions.  Popular items can skew the distribution, causing bottlenecks.  Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.\n\n### Client caching\n\nCaches can be located on the client side (OS or browser), [server side](#reverse-proxy-web-server), or in a distinct cache layer.\n\n### CDN caching\n\n[CDNs](#content-delivery-network) are considered a type of cache.\n\n### Web server caching\n\n[Reverse proxies](#reverse-proxy-web-server) and caches such as [Varnish](https://www.varnish-cache.org/) can serve static and dynamic content directly.  Web servers can also cache requests, returning responses without having to contact application servers.\n\n### Database caching\n\nYour database usually includes some level of caching in a default configuration, optimized for a generic use case.  Tweaking these settings for specific usage patterns can further boost performance.\n\n### Application caching\n\nIn-memory caches such as Memcached and Redis are key-value stores between your application and your data storage.  Since the data is held in RAM, it is much faster than typical databases where data is stored on disk.  RAM is more limited than disk, so [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms) algorithms such as [least recently used (LRU)](https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)) can help invalidate 'cold' entries and keep 'hot' data in RAM.\n\nRedis has the following additional features:\n\n* Persistence option\n* Built-in data structures such as sorted sets and lists\n\nThere are multiple levels you can cache that fall into two general categories: **database queries** and **objects**:\n\n* Row level\n* Query-level\n* Fully-formed serializable objects\n* Fully-rendered HTML\n\nGenerally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.\n",
    "ContentSha": "PfUbgKkIJf45vxersAv0t5I8be53ZYhiGpd5NAhmomo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "</p>\n\nBộ nhớ đệm giúp cải thiện thời gian tải trang và có thể giảm tải cho máy chủ và cơ sở dữ liệu của bạn. Trong mô hình này, bộ phân phối sẽ kiểm tra xem yêu cầu đã được thực hiện trước đó chưa và cố gắng tìm kết quả trước đó để trả về, nhằm tiết kiệm việc thực thi thực tế.\n\nCơ sở dữ liệu thường hưởng lợi từ việc phân phối đều các thao tác đọc và ghi trên các phân vùng của nó. Những mục phổ biến có thể làm lệch phân phối, gây ra điểm nghẽn. Đặt bộ nhớ đệm phía trước cơ sở dữ liệu có thể giúp hấp thụ tải không đều và các đợt tăng đột biến lưu lượng truy cập.\n\n### Bộ nhớ đệm phía khách\n\nBộ nhớ đệm có thể được đặt ở phía khách (hệ điều hành hoặc trình duyệt), [phía máy chủ](#reverse-proxy-web-server), hoặc trong một tầng bộ nhớ đệm riêng biệt.\n\n### Bộ nhớ đệm CDN\n\n[CDN](#content-delivery-network) được xem là một loại bộ nhớ đệm.\n\n### Bộ nhớ đệm máy chủ web\n\n[Reverse proxy](#reverse-proxy-web-server) và các bộ nhớ đệm như [Varnish](https://www.varnish-cache.org/) có thể phục vụ nội dung tĩnh và động trực tiếp. Máy chủ web cũng có thể lưu bộ nhớ đệm các yêu cầu, trả về phản hồi mà không cần liên hệ với máy chủ ứng dụng.\n\n### Bộ nhớ đệm cơ sở dữ liệu\n\nCơ sở dữ liệu của bạn thường bao gồm một mức bộ nhớ đệm nào đó trong cấu hình mặc định, được tối ưu cho trường hợp sử dụng tổng quát. Tinh chỉnh các thiết lập này cho các mẫu sử dụng cụ thể có thể tăng hiệu suất hơn nữa.\n\n### Bộ nhớ đệm ứng dụng\n\nCác bộ nhớ đệm trong RAM như Memcached và Redis là các kho lưu trữ key-value nằm giữa ứng dụng của bạn và bộ lưu trữ dữ liệu. Vì dữ liệu được giữ trong RAM, nó nhanh hơn nhiều so với các cơ sở dữ liệu thông thường nơi dữ liệu được lưu trên ổ đĩa. RAM bị giới hạn hơn so với ổ đĩa, vì vậy các thuật toán [hủy bộ nhớ đệm](https://en.wikipedia.org/wiki/Cache_algorithms) như [ít được sử dụng gần đây nhất (LRU)](https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)) có thể giúp loại bỏ các mục 'lạnh' và giữ dữ liệu 'nóng' trong RAM.\n\nRedis có các tính năng bổ sung sau:\n\n* Tùy chọn lưu trữ bền vững\n* Các cấu trúc dữ liệu tích hợp như tập hợp có thứ tự và danh sách\n\nCó nhiều cấp độ bạn có thể lưu bộ nhớ đệm, chia thành hai loại chính: **truy vấn cơ sở dữ liệu** và **đối tượng**:\n\n* Cấp độ dòng\n* Cấp độ truy vấn\n* Đối tượng đã được tuần tự hóa hoàn chỉnh\n* HTML đã được render hoàn chỉnh\n\nThông thường, bạn nên tránh sử dụng bộ nhớ đệm dựa trên tệp, vì nó làm cho việc nhân bản và tự động mở rộng trở nên khó khăn hơn.\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "xqFXlOlQ6an1pd2cUPm0ctMQFxeroxxNltTfA2DnIyM=",
        "originContent": "Caching improves page load times and can reduce the load on your servers and databases.  In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.",
        "translatedContent": "Bộ nhớ đệm giúp cải thiện thời gian tải trang và có thể giảm tải cho máy chủ và cơ sở dữ liệu của bạn. Trong mô hình này, bộ phân phối sẽ kiểm tra xem yêu cầu đã được thực hiện trước đó chưa và cố gắng tìm kết quả trước đó để trả về, nhằm tiết kiệm việc thực thi thực tế."
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "nE3F+noONZj7UoncqopJcjs84GDX55Msqwtb2zKbtWQ=",
        "originContent": "Databases often benefit from a uniform distribution of reads and writes across its partitions.  Popular items can skew the distribution, causing bottlenecks.  Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.",
        "translatedContent": "Cơ sở dữ liệu thường hưởng lợi từ việc phân phối đều các thao tác đọc và ghi trên các phân vùng của nó. Những mục phổ biến có thể làm lệch phân phối, gây ra điểm nghẽn. Đặt bộ nhớ đệm phía trước cơ sở dữ liệu có thể giúp hấp thụ tải không đều và các đợt tăng đột biến lưu lượng truy cập."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "kU/uLpr+QUlPh4Q0obdTc8Jmc7gkP0Y1cAmtTjlGLag=",
        "originContent": "### Client caching",
        "translatedContent": "### Bộ nhớ đệm phía khách"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "oKi+pWvfZPQK26up66npGBI09cUq5gKlsZ5T+T+LHro=",
        "originContent": "Caches can be located on the client side (OS or browser), [server side](#reverse-proxy-web-server), or in a distinct cache layer.",
        "translatedContent": "Bộ nhớ đệm có thể được đặt ở phía khách (hệ điều hành hoặc trình duyệt), [phía máy chủ](#reverse-proxy-web-server), hoặc trong một tầng bộ nhớ đệm riêng biệt."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "IC+heR08nNMaNGEQF5zx/9QsVoeD/qhL9VQrwtwRE5k=",
        "originContent": "### CDN caching",
        "translatedContent": "### Bộ nhớ đệm CDN"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "yxckzTQIewKvqA1D6/g0klIsU3zn/CQ4iQs+2Hc1L0M=",
        "originContent": "[CDNs](#content-delivery-network) are considered a type of cache.",
        "translatedContent": "[CDN](#content-delivery-network) được xem là một loại bộ nhớ đệm."
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "Da9mLN7nGSzBo9bvYB9Yn2tFNd3cOoEAFtmAKOygrYg=",
        "originContent": "### Web server caching",
        "translatedContent": "### Bộ nhớ đệm máy chủ web"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "HIpASoiha1HioWiM3PEcd+xsZ2YHLgEn0/dmxs/SyZw=",
        "originContent": "[Reverse proxies](#reverse-proxy-web-server) and caches such as [Varnish](https://www.varnish-cache.org/) can serve static and dynamic content directly.  Web servers can also cache requests, returning responses without having to contact application servers.",
        "translatedContent": "[Reverse proxy](#reverse-proxy-web-server) và các bộ nhớ đệm như [Varnish](https://www.varnish-cache.org/) có thể phục vụ nội dung tĩnh và động trực tiếp. Máy chủ web cũng có thể lưu bộ nhớ đệm các yêu cầu, trả về phản hồi mà không cần liên hệ với máy chủ ứng dụng."
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "+peMktOW0HTWXcyD0CtKfyHJ76DbKqQNFMObh+eJTeE=",
        "originContent": "### Database caching",
        "translatedContent": "### Bộ nhớ đệm cơ sở dữ liệu"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "EYGPh9Nhj9Ttsme4rboJONsjd0H1Tz2/OEc3I1+Phyc=",
        "originContent": "Your database usually includes some level of caching in a default configuration, optimized for a generic use case.  Tweaking these settings for specific usage patterns can further boost performance.",
        "translatedContent": "Cơ sở dữ liệu của bạn thường bao gồm một mức bộ nhớ đệm nào đó trong cấu hình mặc định, được tối ưu cho trường hợp sử dụng tổng quát. Tinh chỉnh các thiết lập này cho các mẫu sử dụng cụ thể có thể tăng hiệu suất hơn nữa."
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "jHpYxhSgbZeRWpd+DxcA9rdGq82/3SCT4D3KfcnhkcA=",
        "originContent": "### Application caching",
        "translatedContent": "### Bộ nhớ đệm ứng dụng"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "WFZ2p6PV8YsGfZ4D+4AWBuJIe3Cx9di6exPEMWGnBoA=",
        "originContent": "In-memory caches such as Memcached and Redis are key-value stores between your application and your data storage.  Since the data is held in RAM, it is much faster than typical databases where data is stored on disk.  RAM is more limited than disk, so [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms) algorithms such as [least recently used (LRU)](https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)) can help invalidate 'cold' entries and keep 'hot' data in RAM.",
        "translatedContent": "Các bộ nhớ đệm trong RAM như Memcached và Redis là các kho lưu trữ key-value nằm giữa ứng dụng của bạn và bộ lưu trữ dữ liệu. Vì dữ liệu được giữ trong RAM, nó nhanh hơn nhiều so với các cơ sở dữ liệu thông thường nơi dữ liệu được lưu trên ổ đĩa. RAM bị giới hạn hơn so với ổ đĩa, vì vậy các thuật toán [hủy bộ nhớ đệm](https://en.wikipedia.org/wiki/Cache_algorithms) như [ít được sử dụng gần đây nhất (LRU)](https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)) có thể giúp loại bỏ các mục 'lạnh' và giữ dữ liệu 'nóng' trong RAM."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "bG9ZzlVhxVniO0NbUBc4MNnJnevmwh4iLIR6+7Ny5GA=",
        "originContent": "Redis has the following additional features:",
        "translatedContent": "Redis có các tính năng bổ sung sau:"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "oVSAe6bvySL9lZG8FBGnQ1zqUUlpTiTQIxmQqglSsD0=",
        "originContent": "* Persistence option",
        "translatedContent": "* Tùy chọn lưu trữ bền vững"
      },
      {
        "row": 30,
        "rowsha": "bIING+wl5vn04I6HuaJiJPmUXKMx6Sx6ybJ2DPPziQU=",
        "originContent": "* Built-in data structures such as sorted sets and lists",
        "translatedContent": "* Các cấu trúc dữ liệu tích hợp như tập hợp có thứ tự và danh sách"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "jqc3ntnaAq+YfXjWch+hYigLB+UJXKMNQFoEmZzJMPQ=",
        "originContent": "There are multiple levels you can cache that fall into two general categories: **database queries** and **objects**:",
        "translatedContent": "Có nhiều cấp độ bạn có thể lưu bộ nhớ đệm, chia thành hai loại chính: **truy vấn cơ sở dữ liệu** và **đối tượng**:"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "r15rT5lMkEakO0EooTXQ29PQYtrQ7vvP7LBqkv+u5J0=",
        "originContent": "* Row level",
        "translatedContent": "* Cấp độ dòng"
      },
      {
        "row": 35,
        "rowsha": "djUS3dKRSjn00ZXw0vh2aGhfXv2mMxRkxPojcjWnF1M=",
        "originContent": "* Query-level",
        "translatedContent": "* Cấp độ truy vấn"
      },
      {
        "row": 36,
        "rowsha": "NCUiwISIKs3RT5e8iBnTHyAONOcdxXJ3lZROujkUdHI=",
        "originContent": "* Fully-formed serializable objects",
        "translatedContent": "* Đối tượng đã được tuần tự hóa hoàn chỉnh"
      },
      {
        "row": 37,
        "rowsha": "UEQnDnI7uzJAICUlx0D0cfOE8Q2mc6PWRjPPyeOYCxs=",
        "originContent": "* Fully-rendered HTML",
        "translatedContent": "* HTML đã được render hoàn chỉnh"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "1B3O+coRkQPbq3TbZjD02NGcyBhw42EMqttGZvQr1h4=",
        "originContent": "Generally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.",
        "translatedContent": "Thông thường, bạn nên tránh sử dụng bộ nhớ đệm dựa trên tệp, vì nó làm cho việc nhân bản và tự động mở rộng trở nên khó khăn hơn."
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 35,
    "Content": "### Caching at the database query level\n\nWhenever you query the database, hash the query as a key and store the result to the cache.  This approach suffers from expiration issues:\n\n* Hard to delete a cached result with complex queries\n* If one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell\n\n### Caching at the object level\n\nSee your data as an object, similar to what you do with your application code.  Have your application assemble the dataset from the database into a class instance or a data structure(s):\n\n* Remove the object from cache if its underlying data has changed\n* Allows for asynchronous processing: workers assemble objects by consuming the latest cached object\n\nSuggestions of what to cache:\n\n* User sessions\n* Fully rendered web pages\n* Activity streams\n* User graph data\n\n### When to update the cache\n\nSince you can only store a limited amount of data in cache, you'll need to determine which cache update strategy works best for your use case.\n\n#### Cache-aside\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/ONjORqk.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>\n</p>\n\nThe application is responsible for reading and writing from storage.  The cache does not interact with storage directly.  The application does the following:\n\n* Look for entry in cache, resulting in a cache miss\n* Load entry from the database\n* Add entry to cache\n* Return entry\n",
    "ContentSha": "1LZ2C/EUSShYNdt1FP+/fZdVQMcH8WGFigSx+nEiAZI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Bộ nhớ đệm ở cấp độ truy vấn cơ sở dữ liệu\n\nBất cứ khi nào bạn truy vấn cơ sở dữ liệu, hãy băm truy vấn thành một khóa và lưu kết quả vào bộ nhớ đệm. Cách tiếp cận này gặp phải các vấn đề về hết hạn:\n\n* Khó xóa một kết quả đã lưu trong bộ nhớ đệm với các truy vấn phức tạp\n* Nếu một phần dữ liệu thay đổi như một ô trong bảng, bạn cần xóa tất cả các truy vấn đã lưu trong bộ nhớ đệm có thể chứa ô đã thay đổi\n\n### Bộ nhớ đệm ở cấp độ đối tượng\n\nXem dữ liệu của bạn như một đối tượng, giống như cách bạn làm với mã ứng dụng của mình.  Hãy để ứng dụng của bạn tập hợp bộ dữ liệu từ cơ sở dữ liệu thành một thể hiện lớp hoặc một cấu trúc dữ liệu:\n\n* Xóa đối tượng khỏi bộ nhớ đệm nếu dữ liệu cơ bản của nó đã thay đổi\n* Cho phép xử lý bất đồng bộ: các worker tập hợp đối tượng bằng cách lấy đối tượng đã lưu trong bộ nhớ đệm mới nhất\n\nCác đề xuất về những gì nên lưu trong bộ nhớ đệm:\n\n* Phiên người dùng\n* Các trang web đã được render đầy đủ\n* Luồng hoạt động\n* Dữ liệu đồ thị người dùng\n\n### Khi nào cập nhật bộ nhớ đệm\n\nVì bạn chỉ có thể lưu một lượng dữ liệu giới hạn trong bộ nhớ đệm, bạn sẽ cần xác định chiến lược cập nhật bộ nhớ đệm nào phù hợp nhất với trường hợp sử dụng của mình.\n\n#### Cache-aside\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/ONjORqk.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Nguồn: From cache to in-memory data grid</a></i>\n</p>\n\nỨng dụng chịu trách nhiệm đọc và ghi từ bộ lưu trữ. Bộ nhớ đệm không tương tác trực tiếp với bộ lưu trữ.  Ứng dụng sẽ thực hiện các bước sau:\n\n* Tìm kiếm mục trong bộ nhớ đệm, dẫn đến cache miss\n* Tải mục từ cơ sở dữ liệu\n* Thêm mục vào bộ nhớ đệm\n* Trả về mục\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "3YIk6GjhWrpUufW9u8BeDCc4h4hcG312WFNpokKP7gE=",
        "originContent": "### Caching at the database query level",
        "translatedContent": "### Bộ nhớ đệm ở cấp độ truy vấn cơ sở dữ liệu"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "iJJbvuK6zOgRABztRiHjNwU8YbqHMoW5zFzCB7Z1XBE=",
        "originContent": "Whenever you query the database, hash the query as a key and store the result to the cache.  This approach suffers from expiration issues:",
        "translatedContent": "Bất cứ khi nào bạn truy vấn cơ sở dữ liệu, hãy băm truy vấn thành một khóa và lưu kết quả vào bộ nhớ đệm. Cách tiếp cận này gặp phải các vấn đề về hết hạn:"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "Lb6BM7FztlpCZKQZsZdxkDo0gUdAUfaxzDPGwdMd1ZE=",
        "originContent": "* Hard to delete a cached result with complex queries",
        "translatedContent": "* Khó xóa một kết quả đã lưu trong bộ nhớ đệm với các truy vấn phức tạp"
      },
      {
        "row": 6,
        "rowsha": "VpV5XOW9LAQSNYGUUuv/B0olP8SfhOhjohfMiGprEqY=",
        "originContent": "* If one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell",
        "translatedContent": "* Nếu một phần dữ liệu thay đổi như một ô trong bảng, bạn cần xóa tất cả các truy vấn đã lưu trong bộ nhớ đệm có thể chứa ô đã thay đổi"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "fqoq5o7Te5RL0Ww7hGUP01PowL82X5Yjwvt1ZhirEgg=",
        "originContent": "### Caching at the object level",
        "translatedContent": "### Bộ nhớ đệm ở cấp độ đối tượng"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "t7op5c3DtAEeaWSFUCRDIrf3GZrGX3lHyIXHU8ZdezA=",
        "originContent": "See your data as an object, similar to what you do with your application code.  Have your application assemble the dataset from the database into a class instance or a data structure(s):",
        "translatedContent": "Xem dữ liệu của bạn như một đối tượng, giống như cách bạn làm với mã ứng dụng của mình.  Hãy để ứng dụng của bạn tập hợp bộ dữ liệu từ cơ sở dữ liệu thành một thể hiện lớp hoặc một cấu trúc dữ liệu:"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "kKOqH0Rj7ZDKFmxa/n0dgFFfcLmc7KP+Y/bIOM8QV68=",
        "originContent": "* Remove the object from cache if its underlying data has changed",
        "translatedContent": "* Xóa đối tượng khỏi bộ nhớ đệm nếu dữ liệu cơ bản của nó đã thay đổi"
      },
      {
        "row": 13,
        "rowsha": "LVCuQTNxLG+2HkJCAKPD/atJSe7UmRACMbO3svM/pUs=",
        "originContent": "* Allows for asynchronous processing: workers assemble objects by consuming the latest cached object",
        "translatedContent": "* Cho phép xử lý bất đồng bộ: các worker tập hợp đối tượng bằng cách lấy đối tượng đã lưu trong bộ nhớ đệm mới nhất"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "JO+wTDixSFsWPXbXW3gm3JCbxf4keaDPFqBagqcSnFs=",
        "originContent": "Suggestions of what to cache:",
        "translatedContent": "Các đề xuất về những gì nên lưu trong bộ nhớ đệm:"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "GtErxHgzu8lQW6zfeOjrQvpv6qHQcod8BbKFLR4+nO4=",
        "originContent": "* User sessions",
        "translatedContent": "* Phiên người dùng"
      },
      {
        "row": 18,
        "rowsha": "z6k7z0EcDKod7y5Evss5qYCd1T8yFOF3F8al8glt9jc=",
        "originContent": "* Fully rendered web pages",
        "translatedContent": "* Các trang web đã được render đầy đủ"
      },
      {
        "row": 19,
        "rowsha": "GRLvjkAFWRgkhA35jO4sqt87QSERzT09jxhRVFvzrDs=",
        "originContent": "* Activity streams",
        "translatedContent": "* Luồng hoạt động"
      },
      {
        "row": 20,
        "rowsha": "JTDc0t5tffnca/ox8stucQMCLXLF4rn3JZo55FqAeuY=",
        "originContent": "* User graph data",
        "translatedContent": "* Dữ liệu đồ thị người dùng"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "EQs6IK2UwdJGsDA46cF4pewCABsNnHaJ8nCXSYXDOAQ=",
        "originContent": "### When to update the cache",
        "translatedContent": "### Khi nào cập nhật bộ nhớ đệm"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "8XpBQLO0vnR+St0Ihro3VxfcA4lVtKxR6nHxZH+GPnw=",
        "originContent": "Since you can only store a limited amount of data in cache, you'll need to determine which cache update strategy works best for your use case.",
        "translatedContent": "Vì bạn chỉ có thể lưu một lượng dữ liệu giới hạn trong bộ nhớ đệm, bạn sẽ cần xác định chiến lược cập nhật bộ nhớ đệm nào phù hợp nhất với trường hợp sử dụng của mình."
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "52pofijyqLylVYR+JgfdyhSECnQB/2ww9jSqId5+qfI=",
        "originContent": "#### Cache-aside",
        "translatedContent": "#### Cache-aside"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 29,
        "rowsha": "qbwb9OF+6gCrIQDarjwnjaJ5/orzhjfFSZ0uJP2yP+Y=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/ONjORqk.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/ONjORqk.png\">"
      },
      {
        "row": 30,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 31,
        "rowsha": "USINg1pGG/U+9K+ntxVznHzWHt5Cf6mwA5Lf1aFR1Uk=",
        "originContent": "  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Nguồn: From cache to in-memory data grid</a></i>"
      },
      {
        "row": 32,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "62P0ezlyVrQA0aqJAqE75Pq6qmQsDRjHZBBAW0Nz/TM=",
        "originContent": "The application is responsible for reading and writing from storage.  The cache does not interact with storage directly.  The application does the following:",
        "translatedContent": "Ứng dụng chịu trách nhiệm đọc và ghi từ bộ lưu trữ. Bộ nhớ đệm không tương tác trực tiếp với bộ lưu trữ.  Ứng dụng sẽ thực hiện các bước sau:"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "OFE7VOChadOJUjgj9Em/a5aet/S7mBrXOeBhxO4G13Y=",
        "originContent": "* Look for entry in cache, resulting in a cache miss",
        "translatedContent": "* Tìm kiếm mục trong bộ nhớ đệm, dẫn đến cache miss"
      },
      {
        "row": 37,
        "rowsha": "uPyomhAgr01m+uLFmFlqmhP6tN+gNuDikYGP6ljOZZ8=",
        "originContent": "* Load entry from the database",
        "translatedContent": "* Tải mục từ cơ sở dữ liệu"
      },
      {
        "row": 38,
        "rowsha": "gHwr/3IpFIf/MVC2+zfRAnWRBPuDoveXCRYKw6fPmzI=",
        "originContent": "* Add entry to cache",
        "translatedContent": "* Thêm mục vào bộ nhớ đệm"
      },
      {
        "row": 39,
        "rowsha": "mtdSuveSKkOKt1wR97B79lcqaLNrmTSR+8I/XZbDjQs=",
        "originContent": "* Return entry",
        "translatedContent": "* Trả về mục"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 36,
    "Content": "```python\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\n```",
    "ContentSha": "oOOkxiaDDsfJgZibD4WyvNCLh494Kkw0zeQUjNF+dKA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```python\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
        "originContent": "```python",
        "translatedContent": "```python"
      },
      {
        "row": 2,
        "rowsha": "1GTyTA67Jo5g4PZ2eK+leytPvvxyri8GVlwBQpLqlpc=",
        "originContent": "def get_user(self, user_id):",
        "translatedContent": "def get_user(self, user_id):"
      },
      {
        "row": 3,
        "rowsha": "lgAPDcVXdojVaaGHgrVltToh2hjI0quE1+565ZNiOS8=",
        "originContent": "    user = cache.get(\"user.{0}\", user_id)",
        "translatedContent": "    user = cache.get(\"user.{0}\", user_id)"
      },
      {
        "row": 4,
        "rowsha": "W7owJTstAC/LAoEhQUmKo4a4zUm8zieRK0OeG7rv7DQ=",
        "originContent": "    if user is None:",
        "translatedContent": "    if user is None:"
      },
      {
        "row": 5,
        "rowsha": "oJzeyHhnfdAF3cIMLnK5Fr1PIjEwbNQmMiKcBcnGcF0=",
        "originContent": "        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)",
        "translatedContent": "        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)"
      },
      {
        "row": 6,
        "rowsha": "dldjFilRH6Yed931uKmj1QR8mJyToO+r+rha1/V/NA8=",
        "originContent": "        if user is not None:",
        "translatedContent": "        if user is not None:"
      },
      {
        "row": 7,
        "rowsha": "UBoSUThgYpW1SM3ScElKL1mgtgYgK5HFN0Wx/vPVxiQ=",
        "originContent": "            key = \"user.{0}\".format(user_id)",
        "translatedContent": "            key = \"user.{0}\".format(user_id)"
      },
      {
        "row": 8,
        "rowsha": "qNHAIqY71P/vY/a+mvSdtv+stVUYgWrnvstqlwNp9ok=",
        "originContent": "            cache.set(key, json.dumps(user))",
        "translatedContent": "            cache.set(key, json.dumps(user))"
      },
      {
        "row": 9,
        "rowsha": "0CwKuaTXupC467haU/xblkMlRi5Fc8rPbAJBpJD+TrE=",
        "originContent": "    return user",
        "translatedContent": "    return user"
      },
      {
        "row": 10,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 37,
    "Content": "\n[Memcached](https://memcached.org/) is generally used in this manner.\n\nSubsequent reads of data added to cache are fast.  Cache-aside is also referred to as lazy loading.  Only requested data is cached, which avoids filling up the cache with data that isn't requested.\n\n##### Disadvantage(s): cache-aside\n\n* Each cache miss results in three trips, which can cause a noticeable delay.\n* Data can become stale if it is updated in the database.  This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.\n* When a node fails, it is replaced by a new, empty node, increasing latency.\n\n#### Write-through\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/0vBc0hN.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\nThe application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:\n\n* Application adds/updates entry in cache\n* Cache synchronously writes entry to data store\n* Return\n\nApplication code:\n",
    "ContentSha": "fTUxdhUP8C+msOuO6oFCQBKVESfJlBRIv+xTex+NRH4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n[Memcached](https://memcached.org/) thường được sử dụng theo cách này.\n\nCác lần đọc dữ liệu tiếp theo được thêm vào bộ nhớ đệm sẽ rất nhanh. Cache-aside còn được gọi là lazy loading. Chỉ dữ liệu được yêu cầu mới được lưu vào cache, tránh làm đầy bộ nhớ đệm với dữ liệu không được yêu cầu.\n\n##### Nhược điểm: cache-aside\n\n* Mỗi lần cache miss sẽ tạo ra ba lượt truy cập, có thể gây ra độ trễ rõ rệt.\n* Dữ liệu có thể trở nên lỗi thời nếu được cập nhật trong cơ sở dữ liệu. Vấn đề này được giảm nhẹ bằng cách đặt thời gian sống (TTL) để buộc cập nhật lại mục trong cache, hoặc sử dụng write-through.\n* Khi một node bị lỗi, nó sẽ được thay thế bằng một node mới, rỗng, làm tăng độ trễ.\n\n#### Write-through\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/0vBc0hN.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Nguồn: Scalability, availability, stability, patterns</a></i>\n</p>\n\nỨng dụng sử dụng bộ nhớ đệm như kho lưu trữ dữ liệu chính, đọc và ghi dữ liệu vào đó, trong khi bộ nhớ đệm chịu trách nhiệm đọc và ghi vào cơ sở dữ liệu:\n\n* Ứng dụng thêm/cập nhật mục trong bộ nhớ đệm\n* Bộ nhớ đệm ghi mục vào kho dữ liệu một cách đồng bộ\n* Trả về\n\nMã ứng dụng:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "E4LHEdyL1DwD4IyYAty9Hb8gRIvsp+JJ5WRbEoFDNGU=",
        "originContent": "[Memcached](https://memcached.org/) is generally used in this manner.",
        "translatedContent": "[Memcached](https://memcached.org/) thường được sử dụng theo cách này."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "ZBzM67sYKm8MY5U3qOL36LExlLr2hg8g7s03Nl1X3J0=",
        "originContent": "Subsequent reads of data added to cache are fast.  Cache-aside is also referred to as lazy loading.  Only requested data is cached, which avoids filling up the cache with data that isn't requested.",
        "translatedContent": "Các lần đọc dữ liệu tiếp theo được thêm vào bộ nhớ đệm sẽ rất nhanh. Cache-aside còn được gọi là lazy loading. Chỉ dữ liệu được yêu cầu mới được lưu vào cache, tránh làm đầy bộ nhớ đệm với dữ liệu không được yêu cầu."
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "Hw958kRegOuxjCT94H5l8wJpZzNqECQ8GTLdn3iqEDk=",
        "originContent": "##### Disadvantage(s): cache-aside",
        "translatedContent": "##### Nhược điểm: cache-aside"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "9Rerkd9WfGEAGf3NLR62SDPSOpiw25soOiXvUxJFUt0=",
        "originContent": "* Each cache miss results in three trips, which can cause a noticeable delay.",
        "translatedContent": "* Mỗi lần cache miss sẽ tạo ra ba lượt truy cập, có thể gây ra độ trễ rõ rệt."
      },
      {
        "row": 9,
        "rowsha": "b3v63AxRU8hHaNcfACCeQyUxDUpy+0q9Ppq1bfQfUaA=",
        "originContent": "* Data can become stale if it is updated in the database.  This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.",
        "translatedContent": "* Dữ liệu có thể trở nên lỗi thời nếu được cập nhật trong cơ sở dữ liệu. Vấn đề này được giảm nhẹ bằng cách đặt thời gian sống (TTL) để buộc cập nhật lại mục trong cache, hoặc sử dụng write-through."
      },
      {
        "row": 10,
        "rowsha": "mMDjsWP12Ldo7MhVGRQn4hzZpem4HxQY6e/IkzTHaRw=",
        "originContent": "* When a node fails, it is replaced by a new, empty node, increasing latency.",
        "translatedContent": "* Khi một node bị lỗi, nó sẽ được thay thế bằng một node mới, rỗng, làm tăng độ trễ."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "4LfteySHoc23JvHTHYY/pfUiiD6WDkaFaTwzdChin5E=",
        "originContent": "#### Write-through",
        "translatedContent": "#### Write-through"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 15,
        "rowsha": "n8+iStPrY76OiWCe6wBH7DTpSJQerebBkcaZ7BvhzOI=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/0vBc0hN.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/0vBc0hN.png\">"
      },
      {
        "row": 16,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 17,
        "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
        "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Nguồn: Scalability, availability, stability, patterns</a></i>"
      },
      {
        "row": 18,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "iaS3/ToQt/6NgIEBO7U2UvWCtV8srR9pZbtnr69Mqp4=",
        "originContent": "The application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:",
        "translatedContent": "Ứng dụng sử dụng bộ nhớ đệm như kho lưu trữ dữ liệu chính, đọc và ghi dữ liệu vào đó, trong khi bộ nhớ đệm chịu trách nhiệm đọc và ghi vào cơ sở dữ liệu:"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "P8NHtHewWpHcRrd8ft5J9TGmEbXfHon0UmSDyNiqj8I=",
        "originContent": "* Application adds/updates entry in cache",
        "translatedContent": "* Ứng dụng thêm/cập nhật mục trong bộ nhớ đệm"
      },
      {
        "row": 23,
        "rowsha": "Of2RJIEL6O+bLxs8/CFA+F+XUYshUcsYsDtMbm46PCo=",
        "originContent": "* Cache synchronously writes entry to data store",
        "translatedContent": "* Bộ nhớ đệm ghi mục vào kho dữ liệu một cách đồng bộ"
      },
      {
        "row": 24,
        "rowsha": "dVCyv+Glf3q+P+oyQGZoDvq9yHHjMuG613l/zpxNvsY=",
        "originContent": "* Return",
        "translatedContent": "* Trả về"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "bTTEYmx8/NnzJ9Vj3S9YHRNHaN5nOGSpq8bv6m82Q/Y=",
        "originContent": "Application code:",
        "translatedContent": "Mã ứng dụng:"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 38,
    "Content": "```python\nset_user(12345, {\"foo\":\"bar\"})\n```",
    "ContentSha": "7tpMTtbDSdUbs+oC+Qf5dKLGCUAcRFUe6DfcgSYQP7c=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```python\nset_user(12345, {\"foo\":\"bar\"})\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
        "originContent": "```python",
        "translatedContent": "```python"
      },
      {
        "row": 2,
        "rowsha": "o6DQzApBJFvAFtmtUDJxboMSOdY5nLk7xoHa2SuH3mA=",
        "originContent": "set_user(12345, {\"foo\":\"bar\"})",
        "translatedContent": "set_user(12345, {\"foo\":\"bar\"})"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 39,
    "Content": "\nCache code:\n",
    "ContentSha": "3TQIz863VWmVTS8NeQVBQ2s9apIl1JpwXxyAqo7YRXU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nMã bộ nhớ đệm: \n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "3L7lF9r9ZpI05MJpCpovoGAJv4zxhwVP5HkvER24ftA=",
        "originContent": "Cache code:",
        "translatedContent": "Mã bộ nhớ đệm: "
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 40,
    "Content": "```python\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\n```",
    "ContentSha": "2/SVlo2Tq+z8vN6s72UuRvXSio2ONq8aOqxj7V/g+MY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```python\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "uDnRsrcDV2kZVI2wi9EA58m+F4ILdr1bvjhqNlB+wSc=",
        "originContent": "```python",
        "translatedContent": "```python"
      },
      {
        "row": 2,
        "rowsha": "Trrm302+1XC8RwVkNuANVpe6tv0gwcH/4UX+Dykdg4s=",
        "originContent": "def set_user(user_id, values):",
        "translatedContent": "def set_user(user_id, values):"
      },
      {
        "row": 3,
        "rowsha": "MOuaTi5rCF/Yaxfz2FKpHchMv6zR/sa49iVuy3ru07M=",
        "originContent": "    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)",
        "translatedContent": "    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)"
      },
      {
        "row": 4,
        "rowsha": "Wc94+sJoObKR2p220YZuIbcHHVhiiRF2v+qhvQqcHIw=",
        "originContent": "    cache.set(user_id, user)",
        "translatedContent": "    cache.set(user_id, user)"
      },
      {
        "row": 5,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 41,
    "Content": "\nWrite-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast.  Users are generally more tolerant of latency when updating data than reading data.  Data in the cache is not stale.\n\n##### Disadvantage(s): write through\n\n* When a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database.  Cache-aside in conjunction with write through can mitigate this issue.\n* Most data written might never be read, which can be minimized with a TTL.\n\n#### Write-behind (write-back)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/rgSrvjG.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\nIn write-behind, the application does the following:\n\n* Add/update entry in cache\n* Asynchronously write entry to the data store, improving write performance\n\n##### Disadvantage(s): write-behind\n\n* There could be data loss if the cache goes down prior to its contents hitting the data store.\n* It is more complex to implement write-behind than it is to implement cache-aside or write-through.\n\n#### Refresh-ahead\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/kxtjqgE.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>\n</p>\n\nYou can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.\n\nRefresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.\n\n##### Disadvantage(s): refresh-ahead\n",
    "ContentSha": "7f5A+XWrDoL377SvEQn7a+GkFngcY2VPIRUi5SDADy0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Ghi trực tiếp là một thao tác tổng thể chậm do thao tác ghi, nhưng các lần đọc sau đó đối với dữ liệu vừa được ghi thì nhanh. Người dùng thường dễ chấp nhận độ trễ khi cập nhật dữ liệu hơn là khi đọc dữ liệu. Dữ liệu trong bộ nhớ đệm không bị lỗi thời.\n\n##### Bất lợi: ghi trực tiếp\n\n* Khi một node mới được tạo ra do sự cố hoặc mở rộng, node mới sẽ không lưu vào bộ nhớ đệm các mục cho đến khi mục đó được cập nhật trong cơ sở dữ liệu. Kết hợp cache-aside với ghi trực tiếp có thể giảm thiểu vấn đề này.\n* Hầu hết dữ liệu được ghi có thể không bao giờ được đọc, điều này có thể được giảm thiểu với TTL.\n\n#### Ghi phía sau (ghi lại)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/rgSrvjG.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Nguồn: Scalability, availability, stability, patterns</a></i>\n</p>\n\nTrong ghi phía sau, ứng dụng thực hiện các bước sau:\n\n* Thêm/cập nhật mục trong bộ nhớ đệm\n* Ghi mục vào kho dữ liệu một cách bất đồng bộ, cải thiện hiệu năng ghi\n\n##### Bất lợi: ghi phía sau\n\n* Có thể mất dữ liệu nếu bộ nhớ đệm bị sập trước khi nội dung của nó được ghi vào kho dữ liệu.\n* Việc triển khai ghi phía sau phức tạp hơn so với cache-aside hoặc ghi trực tiếp.\n\n#### Làm mới trước (refresh-ahead)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/kxtjqgE.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Nguồn: From cache to in-memory data grid</a></i>\n</p>\n\nBạn có thể cấu hình bộ nhớ đệm để tự động làm mới bất kỳ mục bộ nhớ đệm nào vừa được truy cập trước khi nó hết hạn.\n\nLàm mới trước có thể giảm độ trễ so với đọc thông qua nếu bộ nhớ đệm dự đoán chính xác các mục sẽ cần trong tương lai.\n\n##### Bất lợi: làm mới trước\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Ghi trực tiếp là một thao tác tổng thể chậm do thao tác ghi, nhưng các lần đọc sau đó đối với dữ liệu vừa được ghi thì nhanh. Người dùng thường dễ chấp nhận độ trễ khi cập nhật dữ liệu hơn là khi đọc dữ liệu. Dữ liệu trong bộ nhớ đệm không bị lỗi thời."
      },
      {
        "row": 2,
        "rowsha": "CE1/1d+Be5iRcsEtg2TnmlemDty5WCN/17Lj5O9MhcM=",
        "originContent": "Write-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast.  Users are generally more tolerant of latency when updating data than reading data.  Data in the cache is not stale.",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "##### Bất lợi: ghi trực tiếp"
      },
      {
        "row": 4,
        "rowsha": "EGxa08OZ2bqhkrWVaz/IXBdXffsjNFcEm7q43ZRMMJM=",
        "originContent": "##### Disadvantage(s): write through",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Khi một node mới được tạo ra do sự cố hoặc mở rộng, node mới sẽ không lưu vào bộ nhớ đệm các mục cho đến khi mục đó được cập nhật trong cơ sở dữ liệu. Kết hợp cache-aside với ghi trực tiếp có thể giảm thiểu vấn đề này."
      },
      {
        "row": 6,
        "rowsha": "4OHzAIpImXTT5Vz9JzWpDxNTpN1FYjRW3koPv5qvJBY=",
        "originContent": "* When a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database.  Cache-aside in conjunction with write through can mitigate this issue.",
        "translatedContent": "* Hầu hết dữ liệu được ghi có thể không bao giờ được đọc, điều này có thể được giảm thiểu với TTL."
      },
      {
        "row": 7,
        "rowsha": "AnCZLTQp4CaSc7etrA2sFcw9k8G4T1KbSPOyXmM5ybA=",
        "originContent": "* Most data written might never be read, which can be minimized with a TTL.",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Ghi phía sau (ghi lại)"
      },
      {
        "row": 9,
        "rowsha": "T/W0y5JQxPt3g+w/ep0ap2PcTja8WgBYYr72Wk2W4i0=",
        "originContent": "#### Write-behind (write-back)",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 11,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/rgSrvjG.png\">"
      },
      {
        "row": 12,
        "rowsha": "XPPb1znn51Z2XnBlJIk46Lj2sI7ZAbdfUk/OvNCXFqI=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/rgSrvjG.png\">",
        "translatedContent": "  <br/>"
      },
      {
        "row": 13,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Nguồn: Scalability, availability, stability, patterns</a></i>"
      },
      {
        "row": 14,
        "rowsha": "Y4UtVV+Gje/kqp2WJQsqZRW9WcOeBq/+VkQNDWw/G4s=",
        "originContent": "  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>",
        "translatedContent": "</p>"
      },
      {
        "row": 15,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Trong ghi phía sau, ứng dụng thực hiện các bước sau:"
      },
      {
        "row": 17,
        "rowsha": "GgcOnlJYp0r45QdG3IodXPZS4HUAdFKtH9OmWeIkThA=",
        "originContent": "In write-behind, the application does the following:",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Thêm/cập nhật mục trong bộ nhớ đệm"
      },
      {
        "row": 19,
        "rowsha": "CFz4gaw6txqGu3xkMRoJSgSXQG2xSRLeYhagt9HEUWI=",
        "originContent": "* Add/update entry in cache",
        "translatedContent": "* Ghi mục vào kho dữ liệu một cách bất đồng bộ, cải thiện hiệu năng ghi"
      },
      {
        "row": 20,
        "rowsha": "SbAQdEBvRSvrJ2TKuulQkOZtaaHLA/vMmgipoOYTfT4=",
        "originContent": "* Asynchronously write entry to the data store, improving write performance",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "##### Bất lợi: ghi phía sau"
      },
      {
        "row": 22,
        "rowsha": "O2zvPHMR4bHAH/3OiL+ZpOLWc7Z7t9wEMc3wJuEvJSk=",
        "originContent": "##### Disadvantage(s): write-behind",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Có thể mất dữ liệu nếu bộ nhớ đệm bị sập trước khi nội dung của nó được ghi vào kho dữ liệu."
      },
      {
        "row": 24,
        "rowsha": "dwX0WPznoYrN7o0TjeaiCchqG8Rx9hdF8H8gaJr4HJs=",
        "originContent": "* There could be data loss if the cache goes down prior to its contents hitting the data store.",
        "translatedContent": "* Việc triển khai ghi phía sau phức tạp hơn so với cache-aside hoặc ghi trực tiếp."
      },
      {
        "row": 25,
        "rowsha": "RgQB15hkS5IOC02kJDLmHtd46nZsUP5ZqVDKCzG/U9A=",
        "originContent": "* It is more complex to implement write-behind than it is to implement cache-aside or write-through.",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Làm mới trước (refresh-ahead)"
      },
      {
        "row": 27,
        "rowsha": "p6mRRf3RClOyHXiVMMpCkKWDD/cWqheqx21QIPu5wuM=",
        "originContent": "#### Refresh-ahead",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 29,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/kxtjqgE.png\">"
      },
      {
        "row": 30,
        "rowsha": "sR/wAnITMjTa1mDcgY1Wp4Oqx67JSya1O9gxjgStZfg=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/kxtjqgE.png\">",
        "translatedContent": "  <br/>"
      },
      {
        "row": 31,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Nguồn: From cache to in-memory data grid</a></i>"
      },
      {
        "row": 32,
        "rowsha": "USINg1pGG/U+9K+ntxVznHzWHt5Cf6mwA5Lf1aFR1Uk=",
        "originContent": "  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>",
        "translatedContent": "</p>"
      },
      {
        "row": 33,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Bạn có thể cấu hình bộ nhớ đệm để tự động làm mới bất kỳ mục bộ nhớ đệm nào vừa được truy cập trước khi nó hết hạn."
      },
      {
        "row": 35,
        "rowsha": "crS+gv126gEJUk4dRg50TSuPdZa75Ffd1Bg7mjRzxc4=",
        "originContent": "You can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Làm mới trước có thể giảm độ trễ so với đọc thông qua nếu bộ nhớ đệm dự đoán chính xác các mục sẽ cần trong tương lai."
      },
      {
        "row": 37,
        "rowsha": "uTflbG0lK0Yw+LSuSkVmX6scHmqv4gxV8E8DdCtCAxg=",
        "originContent": "Refresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "##### Bất lợi: làm mới trước"
      },
      {
        "row": 39,
        "rowsha": "b0F0GxDH1yGv4h4mXVsqWiM7JkLTn2/dMWsI2zNyXhg=",
        "originContent": "##### Disadvantage(s): refresh-ahead",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 42,
    "Content": "* Not accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.\n\n### Disadvantage(s): cache\n\n* Need to maintain consistency between caches and the source of truth such as the database through [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms).\n* Cache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.\n* Need to make application changes such as adding Redis or memcached.\n\n### Source(s) and further reading\n\n* [From cache to in-memory data grid](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)\n* [Scalable system design patterns](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)\n* [Introduction to architecting systems for scale](http://lethain.com/introduction-to-architecting-systems-for-scale/)\n* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [Scalability](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n* [AWS ElastiCache strategies](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)\n* [Wikipedia](https://en.wikipedia.org/wiki/Cache_(computing))\n\n## Asynchronism\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/54GYsSx.png\">\n  <br/>\n  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>\n</p>\n\nAsynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line.  They can also help by doing time-consuming work in advance, such as periodic aggregation of data.\n\n### Message queues\n\nMessage queues receive, hold, and deliver messages.  If an operation is too slow to perform inline, you can use a message queue with the following workflow:\n\n* An application publishes a job to the queue, then notifies the user of job status\n* A worker picks up the job from the queue, processes it, then signals the job is complete\n\nThe user is not blocked and the job is processed in the background.  During this time, the client might optionally do a small amount of processing to make it seem like the task has completed.  For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.\n\n**[Redis](https://redis.io/)** is useful as a simple message broker but messages can be lost.\n\n**[RabbitMQ](https://www.rabbitmq.com/)** is popular but requires you to adapt to the 'AMQP' protocol and manage your own nodes.",
    "ContentSha": "m5CQKaSxoSpqZLBi9DEuTpec6TQ1PuzDQenhKpH7SUw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* Việc không dự đoán chính xác các mục nào có khả năng cần thiết trong tương lai có thể dẫn đến hiệu suất giảm hơn so với khi không sử dụng refresh-ahead.\n\n### Nhược điểm: bộ nhớ đệm\n\n* Cần duy trì tính nhất quán giữa các bộ nhớ đệm và nguồn dữ liệu gốc như cơ sở dữ liệu thông qua [làm mất hiệu lực bộ nhớ đệm](https://en.wikipedia.org/wiki/Cache_algorithms).\n* Làm mất hiệu lực bộ nhớ đệm là một vấn đề khó, có thêm sự phức tạp liên quan đến việc khi nào cần cập nhật bộ nhớ đệm.\n* Cần thay đổi ứng dụng như thêm Redis hoặc memcached.\n\n### Nguồn và tài liệu đọc thêm\n\n* [Từ cache đến in-memory data grid](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)\n* [Các mẫu thiết kế hệ thống có thể mở rộng](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)\n* [Giới thiệu về kiến trúc hệ thống để mở rộng](http://lethain.com/introduction-to-architecting-systems-for-scale/)\n* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [Scalability](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n* [Chiến lược AWS ElastiCache](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)\n* [Wikipedia](https://en.wikipedia.org/wiki/Cache_(computing))\n\n## Bất đồng bộ\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/54GYsSx.png\">\n  <br/>\n  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Nguồn: Giới thiệu về kiến trúc hệ thống để mở rộng</a></i>\n</p>\n\nLuồng công việc bất đồng bộ giúp giảm thời gian yêu cầu cho các thao tác tốn kém mà bình thường sẽ được thực hiện ngay lập tức. Chúng cũng có thể giúp thực hiện các công việc tốn nhiều thời gian trước, như tổng hợp dữ liệu định kỳ.\n\n### Hàng đợi tin nhắn\n\nHàng đợi tin nhắn nhận, giữ và chuyển phát tin nhắn. Nếu một thao tác quá chậm để thực hiện ngay, bạn có thể sử dụng hàng đợi tin nhắn với quy trình sau:\n\n* Ứng dụng gửi một công việc vào hàng đợi, sau đó thông báo cho người dùng về trạng thái công việc\n* Một worker nhận công việc từ hàng đợi, xử lý, rồi báo hiệu công việc đã hoàn thành\n\nNgười dùng không bị chặn và công việc được xử lý ở chế độ nền. Trong thời gian này, client có thể tùy ý thực hiện một số xử lý nhỏ để khiến tác vụ có vẻ như đã hoàn thành. Ví dụ, khi đăng tweet, tweet có thể được đăng ngay lập tức lên timeline của bạn, nhưng có thể mất một thời gian trước khi tweet của bạn thực sự được gửi đến tất cả người theo dõi.\n\n**[Redis](https://redis.io/)** hữu ích như một message broker đơn giản nhưng có thể bị mất tin nhắn.\n\n**[RabbitMQ](https://www.rabbitmq.com/)** phổ biến nhưng yêu cầu bạn phải thích nghi với giao thức 'AMQP' và tự quản lý các node.",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "mA2DF/x6CDm3GB3qhi7Rp0Xumunt5D5kgGLeFAHr1Ug=",
        "originContent": "* Not accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.",
        "translatedContent": "* Việc không dự đoán chính xác các mục nào có khả năng cần thiết trong tương lai có thể dẫn đến hiệu suất giảm hơn so với khi không sử dụng refresh-ahead."
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "Csc7g6X2mKrHFQci7dlHki88R2nKbZYT/JAz25ZMt3g=",
        "originContent": "### Disadvantage(s): cache",
        "translatedContent": "### Nhược điểm: bộ nhớ đệm"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "QvWcWGfBcihyZXaQeMeba0HZOu27t8zrK/k0+WrD3m0=",
        "originContent": "* Need to maintain consistency between caches and the source of truth such as the database through [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms).",
        "translatedContent": "* Cần duy trì tính nhất quán giữa các bộ nhớ đệm và nguồn dữ liệu gốc như cơ sở dữ liệu thông qua [làm mất hiệu lực bộ nhớ đệm](https://en.wikipedia.org/wiki/Cache_algorithms)."
      },
      {
        "row": 6,
        "rowsha": "BRMT7O2GQK3iYe2vOJA3c+v7V3R6l4DqgofDfTGzbaE=",
        "originContent": "* Cache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.",
        "translatedContent": "* Làm mất hiệu lực bộ nhớ đệm là một vấn đề khó, có thêm sự phức tạp liên quan đến việc khi nào cần cập nhật bộ nhớ đệm."
      },
      {
        "row": 7,
        "rowsha": "3OfBJ/Ckj6yFFBr6VwlU3HuA0UhYtUZ+0cipa0DCgTc=",
        "originContent": "* Need to make application changes such as adding Redis or memcached.",
        "translatedContent": "* Cần thay đổi ứng dụng như thêm Redis hoặc memcached."
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Nguồn và tài liệu đọc thêm"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "IC6+RAekNHtj59Xjcjk8Kuod0TL6VeYNrsCljJnJ1ow=",
        "originContent": "* [From cache to in-memory data grid](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)",
        "translatedContent": "* [Từ cache đến in-memory data grid](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)"
      },
      {
        "row": 12,
        "rowsha": "NjV6omClw7dGpYvjE2KTfiTbA9v++5aNx2Xf9W4RVxk=",
        "originContent": "* [Scalable system design patterns](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)",
        "translatedContent": "* [Các mẫu thiết kế hệ thống có thể mở rộng](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)"
      },
      {
        "row": 13,
        "rowsha": "dHi+Guuju5Gn3/DVSySxEHQfRY/um5lB5rke9wJBhFk=",
        "originContent": "* [Introduction to architecting systems for scale](http://lethain.com/introduction-to-architecting-systems-for-scale/)",
        "translatedContent": "* [Giới thiệu về kiến trúc hệ thống để mở rộng](http://lethain.com/introduction-to-architecting-systems-for-scale/)"
      },
      {
        "row": 14,
        "rowsha": "UVMSE1BpfAJjZtNGckenaHDWkkWMyRCmwx5PRWNWv7Q=",
        "originContent": "* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)",
        "translatedContent": "* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)"
      },
      {
        "row": 15,
        "rowsha": "vd74kSe6/W7OaZr725A+FRRLGrD4dHmOnzys9UCLzck=",
        "originContent": "* [Scalability](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)",
        "translatedContent": "* [Scalability](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)"
      },
      {
        "row": 16,
        "rowsha": "ggcDxxH5+pZY4D7KSFtSMPbvpKcToPCtSxEa11z2rIc=",
        "originContent": "* [AWS ElastiCache strategies](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)",
        "translatedContent": "* [Chiến lược AWS ElastiCache](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)"
      },
      {
        "row": 17,
        "rowsha": "nVgGXMw6JYC4OMhy7IHNwK8ovIbmhO7jg3jGAKJiku0=",
        "originContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Cache_(computing))",
        "translatedContent": "* [Wikipedia](https://en.wikipedia.org/wiki/Cache_(computing))"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "d/TAMehRkdoikoGI7oKPDOq6a5oLRR2DTlUlYBjki50=",
        "originContent": "## Asynchronism",
        "translatedContent": "## Bất đồng bộ"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 22,
        "rowsha": "Qf+4XI5PLk5j+VdTcUSc+eSi6yJI87Oq6jipuDhP7w4=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/54GYsSx.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/54GYsSx.png\">"
      },
      {
        "row": 23,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 24,
        "rowsha": "XKyWblIAaLweFNdYR7DY6+BG5VKu0ZN+qyUPrZFPuGw=",
        "originContent": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>",
        "translatedContent": "  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Nguồn: Giới thiệu về kiến trúc hệ thống để mở rộng</a></i>"
      },
      {
        "row": 25,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "MDDrykFu/8yiUROgJD2AL1OSgV17zd7bSTztM4nVGHQ=",
        "originContent": "Asynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line.  They can also help by doing time-consuming work in advance, such as periodic aggregation of data.",
        "translatedContent": "Luồng công việc bất đồng bộ giúp giảm thời gian yêu cầu cho các thao tác tốn kém mà bình thường sẽ được thực hiện ngay lập tức. Chúng cũng có thể giúp thực hiện các công việc tốn nhiều thời gian trước, như tổng hợp dữ liệu định kỳ."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "M8DBN4ku9XMEe3C3Dl7PelMQpG9dDBXkNWc0bvluiAc=",
        "originContent": "### Message queues",
        "translatedContent": "### Hàng đợi tin nhắn"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "OTLhE8cwKTAEuLzV3vAxxhXflo4n2LkdGyb7EaP880I=",
        "originContent": "Message queues receive, hold, and deliver messages.  If an operation is too slow to perform inline, you can use a message queue with the following workflow:",
        "translatedContent": "Hàng đợi tin nhắn nhận, giữ và chuyển phát tin nhắn. Nếu một thao tác quá chậm để thực hiện ngay, bạn có thể sử dụng hàng đợi tin nhắn với quy trình sau:"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "C7xhpqwwY+LqSvhSSO6YwoU6aieMfOj7cc30HyGEiu4=",
        "originContent": "* An application publishes a job to the queue, then notifies the user of job status",
        "translatedContent": "* Ứng dụng gửi một công việc vào hàng đợi, sau đó thông báo cho người dùng về trạng thái công việc"
      },
      {
        "row": 34,
        "rowsha": "EugvF5aMoCL3u+O4W6S1kZdCVnVpfHKDR+Lz3FOMux4=",
        "originContent": "* A worker picks up the job from the queue, processes it, then signals the job is complete",
        "translatedContent": "* Một worker nhận công việc từ hàng đợi, xử lý, rồi báo hiệu công việc đã hoàn thành"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "eqMcTCbtlQiP4+/1dQmkeN8TarhiXdjhQX5gYpEU/Kw=",
        "originContent": "The user is not blocked and the job is processed in the background.  During this time, the client might optionally do a small amount of processing to make it seem like the task has completed.  For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.",
        "translatedContent": "Người dùng không bị chặn và công việc được xử lý ở chế độ nền. Trong thời gian này, client có thể tùy ý thực hiện một số xử lý nhỏ để khiến tác vụ có vẻ như đã hoàn thành. Ví dụ, khi đăng tweet, tweet có thể được đăng ngay lập tức lên timeline của bạn, nhưng có thể mất một thời gian trước khi tweet của bạn thực sự được gửi đến tất cả người theo dõi."
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "qDVHi/dE4fuKbxsrWORF4lUXFClt6hIcACQ1UPJwlJM=",
        "originContent": "**[Redis](https://redis.io/)** is useful as a simple message broker but messages can be lost.",
        "translatedContent": "**[Redis](https://redis.io/)** hữu ích như một message broker đơn giản nhưng có thể bị mất tin nhắn."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "cZ62aoGhWXO8UUZ/T+Rb14mP4aEqe2bJ/xCk2AFOg4A=",
        "originContent": "**[RabbitMQ](https://www.rabbitmq.com/)** is popular but requires you to adapt to the 'AMQP' protocol and manage your own nodes.",
        "translatedContent": "**[RabbitMQ](https://www.rabbitmq.com/)** phổ biến nhưng yêu cầu bạn phải thích nghi với giao thức 'AMQP' và tự quản lý các node."
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 43,
    "Content": "\n**[Amazon SQS](https://aws.amazon.com/sqs/)** is hosted but can have high latency and has the possibility of messages being delivered twice.\n\n### Task queues\n\nTasks queues receive tasks and their related data, runs them, then delivers their results.  They can support scheduling and can be used to run computationally-intensive jobs in the background.\n\n**[Celery](https://docs.celeryproject.org/en/stable/)** has support for scheduling and primarily has python support.\n\n### Back pressure\n\nIf queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance.  [Back pressure](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html) can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue.  Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later.  Clients can retry the request at a later time, perhaps with [exponential backoff](https://en.wikipedia.org/wiki/Exponential_backoff).\n\n### Disadvantage(s): asynchronism\n\n* Use cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.\n\n### Source(s) and further reading\n\n* [It's all a numbers game](https://www.youtube.com/watch?v=1KRYH75wgy4)\n* [Applying back pressure when overloaded](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)\n* [Little's law](https://en.wikipedia.org/wiki/Little%27s_law)\n* [What is the difference between a message queue and a task queue?](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)\n\n## Communication\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/5KeocQs.jpg\">\n  <br/>\n  <i><a href=http://www.escotal.com/osilayer.html>Source: OSI 7 layer model</a></i>\n</p>\n\n### Hypertext transfer protocol (HTTP)\n\nHTTP is a method for encoding and transporting data between a client and a server.  It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request.  HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.\n\nA basic HTTP request consists of a verb (method) and a resource (endpoint).  Below are common HTTP verbs:\n\n| Verb | Description | Idempotent* | Safe | Cacheable |\n|---|---|---|---|---|",
    "ContentSha": "EQovDG9OkNb9dVypgpzwJggXSXWXdn7svWuM8fLZ6Es=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**[Amazon SQS](https://aws.amazon.com/sqs/)** là dịch vụ được lưu trữ nhưng có thể có độ trễ cao và có khả năng tin nhắn được gửi hai lần.\n\n### Hàng đợi tác vụ\n\nHàng đợi tác vụ nhận các tác vụ và dữ liệu liên quan, thực hiện chúng, sau đó trả về kết quả. Chúng có thể hỗ trợ lập lịch và được sử dụng để chạy các công việc tính toán nặng ở chế độ nền.\n\n**[Celery](https://docs.celeryproject.org/en/stable/)** hỗ trợ lập lịch và chủ yếu hỗ trợ python.\n\n### Áp lực ngược (Back pressure)\n\nNếu các hàng đợi bắt đầu tăng lên đáng kể, kích thước hàng đợi có thể lớn hơn bộ nhớ, dẫn đến lỗi bộ nhớ cache, đọc từ đĩa và hiệu suất chậm hơn. [Áp lực ngược](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html) có thể giúp bằng cách giới hạn kích thước hàng đợi, giữ tốc độ thông lượng cao và thời gian phản hồi tốt cho các công việc đã có trong hàng đợi. Khi hàng đợi đầy, khách hàng sẽ nhận được thông báo máy chủ bận hoặc mã trạng thái HTTP 503 để thử lại sau. Khách hàng có thể thử lại yêu cầu vào thời điểm sau, có thể với [phương pháp lùi theo cấp số nhân](https://en.wikipedia.org/wiki/Exponential_backoff).\n\n### Bất lợi: tính bất đồng bộ\n\n* Các trường hợp sử dụng như tính toán giá rẻ và quy trình thời gian thực có thể phù hợp hơn với hoạt động đồng bộ, vì việc đưa hàng đợi vào có thể gây ra độ trễ và phức tạp.\n\n### Nguồn và đọc thêm\n\n* [Tất cả là một trò chơi số](https://www.youtube.com/watch?v=1KRYH75wgy4)\n* [Áp dụng áp lực ngược khi quá tải](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)\n* [Định luật Little](https://en.wikipedia.org/wiki/Little%27s_law)\n* [Sự khác biệt giữa hàng đợi tin nhắn và hàng đợi tác vụ là gì?](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)\n\n## Giao tiếp\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/5KeocQs.jpg\">\n  <br/>\n  <i><a href=http://www.escotal.com/osilayer.html>Nguồn: Mô hình 7 lớp OSI</a></i>\n</p>\n\n### Giao thức truyền siêu văn bản (HTTP)\n\nHTTP là một phương thức để mã hóa và truyền dữ liệu giữa máy khách và máy chủ. Đây là giao thức yêu cầu/đáp ứng: máy khách gửi yêu cầu và máy chủ phản hồi với nội dung liên quan và thông tin trạng thái hoàn thành về yêu cầu. HTTP là tự chứa, cho phép yêu cầu và phản hồi đi qua nhiều bộ định tuyến và máy chủ trung gian thực hiện cân bằng tải, bộ nhớ đệm, mã hóa và nén.\n\nMột yêu cầu HTTP cơ bản gồm một động từ (phương thức) và một tài nguyên (điểm cuối). Dưới đây là các động từ HTTP phổ biến:\n\n| Động từ | Mô tả | Idempotent* | An toàn | Có thể lưu vào bộ đệm |\n|---|---|---|---|---|",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "JdJIiGblg1lo1Hv9lrZKrmri+H2PHGh+c4+AJHvC/Ho=",
        "originContent": "**[Amazon SQS](https://aws.amazon.com/sqs/)** is hosted but can have high latency and has the possibility of messages being delivered twice.",
        "translatedContent": "**[Amazon SQS](https://aws.amazon.com/sqs/)** là dịch vụ được lưu trữ nhưng có thể có độ trễ cao và có khả năng tin nhắn được gửi hai lần."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "Y+T9u9jvoNxoRasie9Z6deflBls+XhaieNZjB1pnDeY=",
        "originContent": "### Task queues",
        "translatedContent": "### Hàng đợi tác vụ"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "g97ihGpVqeeStuv7zKW/0/7HktMz8gl+wSP34LKZ//U=",
        "originContent": "Tasks queues receive tasks and their related data, runs them, then delivers their results.  They can support scheduling and can be used to run computationally-intensive jobs in the background.",
        "translatedContent": "Hàng đợi tác vụ nhận các tác vụ và dữ liệu liên quan, thực hiện chúng, sau đó trả về kết quả. Chúng có thể hỗ trợ lập lịch và được sử dụng để chạy các công việc tính toán nặng ở chế độ nền."
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "epToSKFhBbnR+JYYSSU5qT0EfnYi9TLI6TS8cN8M+jQ=",
        "originContent": "**[Celery](https://docs.celeryproject.org/en/stable/)** has support for scheduling and primarily has python support.",
        "translatedContent": "**[Celery](https://docs.celeryproject.org/en/stable/)** hỗ trợ lập lịch và chủ yếu hỗ trợ python."
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "k+wc+P+0qAAxGfVCT7qqi2V77ZPM8fBafrt1Yu8AmZ8=",
        "originContent": "### Back pressure",
        "translatedContent": "### Áp lực ngược (Back pressure)"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "l9TK3MvuxkfMvJhx+BJGaovzc0vhydAGWoqT6wBIamY=",
        "originContent": "If queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance.  [Back pressure](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html) can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue.  Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later.  Clients can retry the request at a later time, perhaps with [exponential backoff](https://en.wikipedia.org/wiki/Exponential_backoff).",
        "translatedContent": "Nếu các hàng đợi bắt đầu tăng lên đáng kể, kích thước hàng đợi có thể lớn hơn bộ nhớ, dẫn đến lỗi bộ nhớ cache, đọc từ đĩa và hiệu suất chậm hơn. [Áp lực ngược](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html) có thể giúp bằng cách giới hạn kích thước hàng đợi, giữ tốc độ thông lượng cao và thời gian phản hồi tốt cho các công việc đã có trong hàng đợi. Khi hàng đợi đầy, khách hàng sẽ nhận được thông báo máy chủ bận hoặc mã trạng thái HTTP 503 để thử lại sau. Khách hàng có thể thử lại yêu cầu vào thời điểm sau, có thể với [phương pháp lùi theo cấp số nhân](https://en.wikipedia.org/wiki/Exponential_backoff)."
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "X63xWFxSa6XT9YNTdHeNxsV6EBblOgijod7MwwC7tYs=",
        "originContent": "### Disadvantage(s): asynchronism",
        "translatedContent": "### Bất lợi: tính bất đồng bộ"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "ec9Q8eQZH4KE2XsUW8ol11Fjm3uixUZXXECvkThtgVk=",
        "originContent": "* Use cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.",
        "translatedContent": "* Các trường hợp sử dụng như tính toán giá rẻ và quy trình thời gian thực có thể phù hợp hơn với hoạt động đồng bộ, vì việc đưa hàng đợi vào có thể gây ra độ trễ và phức tạp."
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": "### Nguồn và đọc thêm"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "R9SWfMSjTpI8QJHjJquX5UA/v4OsQncdzgayeDDRp74=",
        "originContent": "* [It's all a numbers game](https://www.youtube.com/watch?v=1KRYH75wgy4)",
        "translatedContent": "* [Tất cả là một trò chơi số](https://www.youtube.com/watch?v=1KRYH75wgy4)"
      },
      {
        "row": 21,
        "rowsha": "CRHAxGVRxbex+UHiPc3ZG7mmL4tLGzuIg2gDhlsDE1g=",
        "originContent": "* [Applying back pressure when overloaded](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)",
        "translatedContent": "* [Áp dụng áp lực ngược khi quá tải](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)"
      },
      {
        "row": 22,
        "rowsha": "sD14bJ8RhOZ5uJX/QkYWP60UWvxVFD7sVsC5Rat1dDw=",
        "originContent": "* [Little's law](https://en.wikipedia.org/wiki/Little%27s_law)",
        "translatedContent": "* [Định luật Little](https://en.wikipedia.org/wiki/Little%27s_law)"
      },
      {
        "row": 23,
        "rowsha": "9pfppEwOQ+EYxw0upiLbIsT/46iBNzFDUTpRsQ3Hkqc=",
        "originContent": "* [What is the difference between a message queue and a task queue?](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)",
        "translatedContent": "* [Sự khác biệt giữa hàng đợi tin nhắn và hàng đợi tác vụ là gì?](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "JlMsLnBNoRqgF14jp1yqsxcMqoqezySPU/BE1WqWZw4=",
        "originContent": "## Communication",
        "translatedContent": "## Giao tiếp"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 28,
        "rowsha": "cgy9Hg4o9DiTMKPqK5aiYcJ6D2cTQHBFWnjrygxPnZo=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/5KeocQs.jpg\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/5KeocQs.jpg\">"
      },
      {
        "row": 29,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 30,
        "rowsha": "prm5d05a0esoU9cyHbrBQId3K1rE7HwyJ5IZQ03F8J4=",
        "originContent": "  <i><a href=http://www.escotal.com/osilayer.html>Source: OSI 7 layer model</a></i>",
        "translatedContent": "  <i><a href=http://www.escotal.com/osilayer.html>Nguồn: Mô hình 7 lớp OSI</a></i>"
      },
      {
        "row": 31,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "a1d+rg/Dzd1wjID96cxPpEkd4TMiBbmpcTJxciDcr2Q=",
        "originContent": "### Hypertext transfer protocol (HTTP)",
        "translatedContent": "### Giao thức truyền siêu văn bản (HTTP)"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "/9RA5UcFiUEXASj94438tLJBaifmqR26xRyJq475HpQ=",
        "originContent": "HTTP is a method for encoding and transporting data between a client and a server.  It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request.  HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.",
        "translatedContent": "HTTP là một phương thức để mã hóa và truyền dữ liệu giữa máy khách và máy chủ. Đây là giao thức yêu cầu/đáp ứng: máy khách gửi yêu cầu và máy chủ phản hồi với nội dung liên quan và thông tin trạng thái hoàn thành về yêu cầu. HTTP là tự chứa, cho phép yêu cầu và phản hồi đi qua nhiều bộ định tuyến và máy chủ trung gian thực hiện cân bằng tải, bộ nhớ đệm, mã hóa và nén."
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "g5LJ0P3PN1Du/SJYxHd02KofaBLGWmuffE5N0zUAJg0=",
        "originContent": "A basic HTTP request consists of a verb (method) and a resource (endpoint).  Below are common HTTP verbs:",
        "translatedContent": "Một yêu cầu HTTP cơ bản gồm một động từ (phương thức) và một tài nguyên (điểm cuối). Dưới đây là các động từ HTTP phổ biến:"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "cX+YhsBlONCGtFdxKCMRB59Gou5jB2wxxOhItY0FhqI=",
        "originContent": "| Verb | Description | Idempotent* | Safe | Cacheable |",
        "translatedContent": "| Động từ | Mô tả | Idempotent* | An toàn | Có thể lưu vào bộ đệm |"
      },
      {
        "row": 40,
        "rowsha": "Eq8A70vu0E6YMkp22XH5RBmpK3cxHPIWKQIONEm49Fc=",
        "originContent": "|---|---|---|---|---|",
        "translatedContent": "|---|---|---|---|---|"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 44,
    "Content": "| GET | Reads a resource | Yes | Yes | Yes |\n| POST | Creates a resource or trigger a process that handles data | No | No | Yes if response contains freshness info |\n| PUT | Creates or replace a resource | Yes | No | No |\n| PATCH | Partially updates a resource | No | No | Yes if response contains freshness info |\n| DELETE | Deletes a resource | Yes | No | No |\n\n*Can be called many times without different outcomes.\n\nHTTP is an application layer protocol relying on lower-level protocols such as **TCP** and **UDP**.\n\n#### Source(s) and further reading: HTTP\n\n* [What is HTTP?](https://www.nginx.com/resources/glossary/http/)\n* [Difference between HTTP and TCP](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)\n* [Difference between PUT and PATCH](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)\n\n### Transmission control protocol (TCP)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/JdAsdvG.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>\n</p>\n\nTCP is a connection-oriented protocol over an [IP network](https://en.wikipedia.org/wiki/Internet_Protocol).  Connection is established and terminated using a [handshake](https://en.wikipedia.org/wiki/Handshaking).  All packets sent are guaranteed to reach the destination in the original order and without corruption through:\n\n* Sequence numbers and [checksum fields](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation) for each packet\n* [Acknowledgement](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)) packets and automatic retransmission\n\nIf the sender does not receive a correct response, it will resend the packets.  If there are multiple timeouts, the connection is dropped.  TCP also implements [flow control](https://en.wikipedia.org/wiki/Flow_control_(data)) and [congestion control](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control).  These guarantees cause delays and generally result in less efficient transmission than UDP.\n\nTo ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage.  It can be expensive to have a large number of open connections between web server threads and say, a [memcached](https://memcached.org/) server.  [Connection pooling](https://en.wikipedia.org/wiki/Connection_pool) can help in addition to switching to UDP where applicable.\n\nTCP is useful for applications that require high reliability but are less time critical.  Some examples include web servers, database info, SMTP, FTP, and SSH.\n\nUse TCP over UDP when:\n\n* You need all of the data to arrive intact\n* You want to automatically make a best estimate use of the network throughput\n",
    "ContentSha": "EP5TmrahE1oj6DWbBMp+YEc76iteUbB8TKDGw6d8MFY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "| GET | Đọc một tài nguyên | Có | Có | Có |\n| POST | Tạo một tài nguyên hoặc kích hoạt một tiến trình xử lý dữ liệu | Không | Không | Có nếu phản hồi chứa thông tin độ tươi mới |\n| PUT | Tạo hoặc thay thế một tài nguyên | Có | Không | Không |\n| PATCH | Cập nhật một phần tài nguyên | Không | Không | Có nếu phản hồi chứa thông tin độ tươi mới |\n| DELETE | Xóa một tài nguyên | Có | Không | Không |\n\n*Có thể gọi nhiều lần mà không có kết quả khác biệt.\n\nHTTP là một giao thức tầng ứng dụng dựa vào các giao thức tầng thấp hơn như **TCP** và **UDP**.\n\n#### Nguồn và đọc thêm: HTTP\n\n* [HTTP là gì?](https://www.nginx.com/resources/glossary/http/)\n* [Sự khác biệt giữa HTTP và TCP](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)\n* [Sự khác biệt giữa PUT và PATCH](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)\n\n### Giao thức điều khiển truyền tải (TCP)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/JdAsdvG.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Nguồn: Cách làm game nhiều người chơi</a></i>\n</p>\n\nTCP là một giao thức hướng kết nối hoạt động trên [mạng IP](https://en.wikipedia.org/wiki/Internet_Protocol). Kết nối được thiết lập và kết thúc bằng cách sử dụng [bắt tay](https://en.wikipedia.org/wiki/Handshaking). Tất cả các gói gửi đi đều được đảm bảo đến đích theo đúng thứ tự ban đầu và không bị lỗi thông qua:\n\n* Số thứ tự và [trường kiểm tra tổng](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation) cho từng gói\n* Gói [xác nhận](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)) và tự động truyền lại\n\nNếu người gửi không nhận được phản hồi đúng, nó sẽ gửi lại các gói. Nếu có nhiều lần hết thời gian chờ, kết nối sẽ bị ngắt. TCP cũng thực hiện [kiểm soát luồng](https://en.wikipedia.org/wiki/Flow_control_(data)) và [kiểm soát tắc nghẽn](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control). Những đảm bảo này gây ra độ trễ và thường dẫn đến việc truyền dữ liệu kém hiệu quả hơn UDP.\n\nĐể đảm bảo thông lượng cao, các máy chủ web có thể giữ một số lượng lớn kết nối TCP mở, dẫn đến sử dụng bộ nhớ cao. Việc có nhiều kết nối mở giữa các luồng máy chủ web và ví dụ, một máy chủ [memcached](https://memcached.org/) có thể tốn kém. [Pooling kết nối](https://en.wikipedia.org/wiki/Connection_pool) có thể giúp ngoài việc chuyển sang UDP khi phù hợp.\n\nTCP hữu ích cho các ứng dụng đòi hỏi độ tin cậy cao nhưng không quá nhạy về thời gian. Một số ví dụ bao gồm máy chủ web, dữ liệu cơ sở dữ liệu, SMTP, FTP và SSH.\n\nSử dụng TCP thay vì UDP khi:\n\n* Bạn cần tất cả dữ liệu phải đến nguyên vẹn\n* Bạn muốn tự động ước lượng tối ưu băng thông mạng\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "TGyFO/0qOSRP36nOG1cXHODfm9tDzZLfm7iPg06K9vI=",
        "originContent": "| GET | Reads a resource | Yes | Yes | Yes |",
        "translatedContent": "| GET | Đọc một tài nguyên | Có | Có | Có |"
      },
      {
        "row": 2,
        "rowsha": "2VPrAMg3vxSjcopyCJIDtEu8ZVvJHTSa+dZHCjUPHgA=",
        "originContent": "| POST | Creates a resource or trigger a process that handles data | No | No | Yes if response contains freshness info |",
        "translatedContent": "| POST | Tạo một tài nguyên hoặc kích hoạt một tiến trình xử lý dữ liệu | Không | Không | Có nếu phản hồi chứa thông tin độ tươi mới |"
      },
      {
        "row": 3,
        "rowsha": "4CakkGA+YDAnjVY4tDAxPE89j2SUt+jktyy9ZKekEG4=",
        "originContent": "| PUT | Creates or replace a resource | Yes | No | No |",
        "translatedContent": "| PUT | Tạo hoặc thay thế một tài nguyên | Có | Không | Không |"
      },
      {
        "row": 4,
        "rowsha": "08X/dUgAT1I2nSu8dWExdPJ+9vBTBYHBiFJr/xEwumo=",
        "originContent": "| PATCH | Partially updates a resource | No | No | Yes if response contains freshness info |",
        "translatedContent": "| PATCH | Cập nhật một phần tài nguyên | Không | Không | Có nếu phản hồi chứa thông tin độ tươi mới |"
      },
      {
        "row": 5,
        "rowsha": "LzJ2h5JwoBwi3tSWTXzKLljCWH1GN05+I8RH64pLeMQ=",
        "originContent": "| DELETE | Deletes a resource | Yes | No | No |",
        "translatedContent": "| DELETE | Xóa một tài nguyên | Có | Không | Không |"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "BINJ1KjYGjUfLshYcaZMeOkOWoiR7pOvYK3vayiAKkU=",
        "originContent": "*Can be called many times without different outcomes.",
        "translatedContent": "*Có thể gọi nhiều lần mà không có kết quả khác biệt."
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "7Bgrh6sM5dgZQSrEmAOaOLvC6CGfznbDwyn9FFm3uzk=",
        "originContent": "HTTP is an application layer protocol relying on lower-level protocols such as **TCP** and **UDP**.",
        "translatedContent": "HTTP là một giao thức tầng ứng dụng dựa vào các giao thức tầng thấp hơn như **TCP** và **UDP**."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "E3FZxI6O3jf/PIfFp8xFd0jV000CAtdccq0NffUeIxM=",
        "originContent": "#### Source(s) and further reading: HTTP",
        "translatedContent": "#### Nguồn và đọc thêm: HTTP"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "fjDxTsBJkh+LmgKTk2qukVM5jWJ8jvCiLatVWQ2juaQ=",
        "originContent": "* [What is HTTP?](https://www.nginx.com/resources/glossary/http/)",
        "translatedContent": "* [HTTP là gì?](https://www.nginx.com/resources/glossary/http/)"
      },
      {
        "row": 14,
        "rowsha": "d+VJ0NR/tp+nzfMn5BKyjNmR0i65J1ljdQKe7Hn3I50=",
        "originContent": "* [Difference between HTTP and TCP](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)",
        "translatedContent": "* [Sự khác biệt giữa HTTP và TCP](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)"
      },
      {
        "row": 15,
        "rowsha": "UedXiXUaOm7A0p1Wm/YaeUal0LhGvcNVB/rYwsx91GU=",
        "originContent": "* [Difference between PUT and PATCH](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)",
        "translatedContent": "* [Sự khác biệt giữa PUT và PATCH](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "ALcjISRP9zOXkFXUsA+YjfY3rzS/n903LGIUuc5iZXw=",
        "originContent": "### Transmission control protocol (TCP)",
        "translatedContent": "### Giao thức điều khiển truyền tải (TCP)"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 20,
        "rowsha": "r49AzjR5KRMj7D0OMQhe9ZwGxV2UP13railym8NShC4=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/JdAsdvG.jpg\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/JdAsdvG.jpg\">"
      },
      {
        "row": 21,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 22,
        "rowsha": "HXYf1d9zCry3iPSfFm7t1CvBc5e2F1HTXv5za5UPbTQ=",
        "originContent": "  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>",
        "translatedContent": "  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Nguồn: Cách làm game nhiều người chơi</a></i>"
      },
      {
        "row": 23,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "M9vPLLY2qjR4D1S8I94xozAlTLGgadD4hasXPbIVLow=",
        "originContent": "TCP is a connection-oriented protocol over an [IP network](https://en.wikipedia.org/wiki/Internet_Protocol).  Connection is established and terminated using a [handshake](https://en.wikipedia.org/wiki/Handshaking).  All packets sent are guaranteed to reach the destination in the original order and without corruption through:",
        "translatedContent": "TCP là một giao thức hướng kết nối hoạt động trên [mạng IP](https://en.wikipedia.org/wiki/Internet_Protocol). Kết nối được thiết lập và kết thúc bằng cách sử dụng [bắt tay](https://en.wikipedia.org/wiki/Handshaking). Tất cả các gói gửi đi đều được đảm bảo đến đích theo đúng thứ tự ban đầu và không bị lỗi thông qua:"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "pmDWp3FWL4bXBnlIkmGVpSkCFDA/TMcbjGUNUFcsIkc=",
        "originContent": "* Sequence numbers and [checksum fields](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation) for each packet",
        "translatedContent": "* Số thứ tự và [trường kiểm tra tổng](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation) cho từng gói"
      },
      {
        "row": 28,
        "rowsha": "qEJdXdOEL3M0/qs9RfVmT652QP6Lc9NBFc3zFd3RDDY=",
        "originContent": "* [Acknowledgement](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)) packets and automatic retransmission",
        "translatedContent": "* Gói [xác nhận](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)) và tự động truyền lại"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "WvRExJpFOP4pnP/kJ/P8Qs8WU6ECM1UNW+5YCMDwRMM=",
        "originContent": "If the sender does not receive a correct response, it will resend the packets.  If there are multiple timeouts, the connection is dropped.  TCP also implements [flow control](https://en.wikipedia.org/wiki/Flow_control_(data)) and [congestion control](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control).  These guarantees cause delays and generally result in less efficient transmission than UDP.",
        "translatedContent": "Nếu người gửi không nhận được phản hồi đúng, nó sẽ gửi lại các gói. Nếu có nhiều lần hết thời gian chờ, kết nối sẽ bị ngắt. TCP cũng thực hiện [kiểm soát luồng](https://en.wikipedia.org/wiki/Flow_control_(data)) và [kiểm soát tắc nghẽn](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control). Những đảm bảo này gây ra độ trễ và thường dẫn đến việc truyền dữ liệu kém hiệu quả hơn UDP."
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "dvYUP2kDh9L02+I2XEk8LbiffmEXZojZ/Mhl7tJTNFc=",
        "originContent": "To ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage.  It can be expensive to have a large number of open connections between web server threads and say, a [memcached](https://memcached.org/) server.  [Connection pooling](https://en.wikipedia.org/wiki/Connection_pool) can help in addition to switching to UDP where applicable.",
        "translatedContent": "Để đảm bảo thông lượng cao, các máy chủ web có thể giữ một số lượng lớn kết nối TCP mở, dẫn đến sử dụng bộ nhớ cao. Việc có nhiều kết nối mở giữa các luồng máy chủ web và ví dụ, một máy chủ [memcached](https://memcached.org/) có thể tốn kém. [Pooling kết nối](https://en.wikipedia.org/wiki/Connection_pool) có thể giúp ngoài việc chuyển sang UDP khi phù hợp."
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "8dqcnwoFWhLyLb9tG1ZOGhi3odOsHaODgCC0Je6WTKI=",
        "originContent": "TCP is useful for applications that require high reliability but are less time critical.  Some examples include web servers, database info, SMTP, FTP, and SSH.",
        "translatedContent": "TCP hữu ích cho các ứng dụng đòi hỏi độ tin cậy cao nhưng không quá nhạy về thời gian. Một số ví dụ bao gồm máy chủ web, dữ liệu cơ sở dữ liệu, SMTP, FTP và SSH."
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "YZDTt32t4XojJEqQ48XTzHxCN0bvoKEoZp9Epo1mvXI=",
        "originContent": "Use TCP over UDP when:",
        "translatedContent": "Sử dụng TCP thay vì UDP khi:"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "GW7/nWqQj1GU5yUjsGF9KyWKXyc99bQ+Sb9rx/puxT0=",
        "originContent": "* You need all of the data to arrive intact",
        "translatedContent": "* Bạn cần tất cả dữ liệu phải đến nguyên vẹn"
      },
      {
        "row": 39,
        "rowsha": "x1rcMu+zs2DT6BUdnA0WD9/4+vV+mUubKuVKFzotFn4=",
        "originContent": "* You want to automatically make a best estimate use of the network throughput",
        "translatedContent": "* Bạn muốn tự động ước lượng tối ưu băng thông mạng"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 45,
    "Content": "### User datagram protocol (UDP)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yzDrJtA.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>\n</p>\n\nUDP is connectionless.  Datagrams (analogous to packets) are guaranteed only at the datagram level.  Datagrams might reach their destination out of order or not at all.  UDP does not support congestion control.  Without the guarantees that TCP support, UDP is generally more efficient.\n\nUDP can broadcast, sending datagrams to all devices on the subnet.  This is useful with [DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.\n\nUDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.\n\nUse UDP over TCP when:\n\n* You need the lowest latency\n* Late data is worse than loss of data\n* You want to implement your own error correction\n\n#### Source(s) and further reading: TCP and UDP\n\n* [Networking for game programming](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)\n* [Key differences between TCP and UDP protocols](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)\n* [Difference between TCP and UDP](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)\n* [Transmission control protocol](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)\n* [User datagram protocol](https://en.wikipedia.org/wiki/User_Datagram_Protocol)\n* [Scaling memcache at Facebook](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)\n\n### Remote procedure call (RPC)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/iF4Mkb5.png\">\n  <br/>\n  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>Source: Crack the system design interview</a></i>\n</p>\n\nIn an RPC, a client causes a procedure to execute on a different address space, usually a remote server.  The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program.  Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls.  Popular RPC frameworks include [Protobuf](https://developers.google.com/protocol-buffers/), [Thrift](https://thrift.apache.org/), and [Avro](https://avro.apache.org/docs/current/).\n\nRPC is a request-response protocol:",
    "ContentSha": "qWH5LAPvggn7k7ivyK8v6v8/pTXkZRoURbzBFakhSEM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Giao thức datagram người dùng (UDP)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yzDrJtA.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Nguồn: Cách tạo một trò chơi nhiều người chơi</a></i>\n</p>\n\nUDP là giao thức không kết nối. Datagram (tương tự như gói tin) chỉ được đảm bảo ở cấp độ datagram. Datagram có thể đến đích không theo thứ tự hoặc có thể không đến được. UDP không hỗ trợ kiểm soát tắc nghẽn. Không có các đảm bảo như TCP, UDP thường hiệu quả hơn.\n\nUDP có thể phát sóng, gửi datagram đến tất cả các thiết bị trong mạng con. Điều này hữu ích với [DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) vì máy khách chưa nhận được địa chỉ IP, do đó ngăn chặn việc TCP truyền dữ liệu mà không có địa chỉ IP.\n\nUDP kém tin cậy hơn nhưng hoạt động tốt trong các trường hợp sử dụng thời gian thực như VoIP, trò chuyện video, streaming và trò chơi nhiều người chơi thời gian thực.\n\nSử dụng UDP thay cho TCP khi:\n\n* Bạn cần độ trễ thấp nhất\n* Dữ liệu đến muộn còn tệ hơn dữ liệu bị mất\n* Bạn muốn tự triển khai cơ chế sửa lỗi\n\n#### Nguồn và đọc thêm: TCP và UDP\n\n* [Mạng cho lập trình game](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)\n* [Sự khác biệt chính giữa các giao thức TCP và UDP](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)\n* [Sự khác biệt giữa TCP và UDP](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)\n* [Giao thức điều khiển truyền tải](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)\n* [Giao thức datagram người dùng](https://en.wikipedia.org/wiki/User_Datagram_Protocol)\n* [Scaling memcache tại Facebook](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)\n\n### Gọi thủ tục từ xa (RPC)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/iF4Mkb5.png\">\n  <br/>\n  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>Nguồn: Crack the system design interview</a></i>\n</p>\n\nTrong RPC, một máy khách gây ra việc thực thi một thủ tục ở không gian địa chỉ khác, thường là máy chủ từ xa. Thủ tục này được mã hóa như một lời gọi thủ tục cục bộ, trừu tượng hóa chi tiết về cách giao tiếp với máy chủ khỏi chương trình máy khách. Các lời gọi từ xa thường chậm hơn và kém tin cậy hơn các lời gọi cục bộ, vì vậy nên phân biệt các lời gọi RPC với lời gọi cục bộ. Các framework RPC phổ biến bao gồm [Protobuf](https://developers.google.com/protocol-buffers/), [Thrift](https://thrift.apache.org/), và [Avro](https://avro.apache.org/docs/current/).\n\nRPC là giao thức yêu cầu-phản hồi:",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "N7sH1VbZ64oF2Sc8BgbDFAtrezrDV/9qa2IG1CyXjms=",
        "originContent": "### User datagram protocol (UDP)",
        "translatedContent": "### Giao thức datagram người dùng (UDP)"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 4,
        "rowsha": "6AvRqafPA8+4ZTKrrRPMVfoLkJxe07ACq1lh7sM+OXs=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yzDrJtA.jpg\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yzDrJtA.jpg\">"
      },
      {
        "row": 5,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 6,
        "rowsha": "HXYf1d9zCry3iPSfFm7t1CvBc5e2F1HTXv5za5UPbTQ=",
        "originContent": "  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>",
        "translatedContent": "  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Nguồn: Cách tạo một trò chơi nhiều người chơi</a></i>"
      },
      {
        "row": 7,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "RqNNtkuYA12Eho+nOWbrQ3Ox94hXes5ExSMQEn/bEjo=",
        "originContent": "UDP is connectionless.  Datagrams (analogous to packets) are guaranteed only at the datagram level.  Datagrams might reach their destination out of order or not at all.  UDP does not support congestion control.  Without the guarantees that TCP support, UDP is generally more efficient.",
        "translatedContent": "UDP là giao thức không kết nối. Datagram (tương tự như gói tin) chỉ được đảm bảo ở cấp độ datagram. Datagram có thể đến đích không theo thứ tự hoặc có thể không đến được. UDP không hỗ trợ kiểm soát tắc nghẽn. Không có các đảm bảo như TCP, UDP thường hiệu quả hơn."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "vV6FtTcpxMimUD2LUPWw1XpUQ7OmsUvSOiPjT5504ns=",
        "originContent": "UDP can broadcast, sending datagrams to all devices on the subnet.  This is useful with [DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.",
        "translatedContent": "UDP có thể phát sóng, gửi datagram đến tất cả các thiết bị trong mạng con. Điều này hữu ích với [DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) vì máy khách chưa nhận được địa chỉ IP, do đó ngăn chặn việc TCP truyền dữ liệu mà không có địa chỉ IP."
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "ony2lNZWVuFxsnQLSaFMI+FhvCqY5FJLhKiZw/IQb+4=",
        "originContent": "UDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.",
        "translatedContent": "UDP kém tin cậy hơn nhưng hoạt động tốt trong các trường hợp sử dụng thời gian thực như VoIP, trò chuyện video, streaming và trò chơi nhiều người chơi thời gian thực."
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "3vObY/NAqxnpRQqkZJXlK75psF70pTf7/obtoMsjCQs=",
        "originContent": "Use UDP over TCP when:",
        "translatedContent": "Sử dụng UDP thay cho TCP khi:"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "qmtvD6K86RUKKN64klY3ED9uL+TEwOFhCtSHD3bi48A=",
        "originContent": "* You need the lowest latency",
        "translatedContent": "* Bạn cần độ trễ thấp nhất"
      },
      {
        "row": 18,
        "rowsha": "RHP3XSKp36rAF0uk8/eyZsxuchAjs8u/lrGx/o2dh24=",
        "originContent": "* Late data is worse than loss of data",
        "translatedContent": "* Dữ liệu đến muộn còn tệ hơn dữ liệu bị mất"
      },
      {
        "row": 19,
        "rowsha": "Ztu1edQn6GWTqoemOEB/NUQUk3B8prQB0p7LuWjBh3c=",
        "originContent": "* You want to implement your own error correction",
        "translatedContent": "* Bạn muốn tự triển khai cơ chế sửa lỗi"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "Tt3c6DoKLiOfoMnUCquc8p86uMEslQwL0mcESVPOL4Y=",
        "originContent": "#### Source(s) and further reading: TCP and UDP",
        "translatedContent": "#### Nguồn và đọc thêm: TCP và UDP"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "tV3IFEsKT0nFMlnlkS61ay9+lAbkFBSlKJ2IN5y+DgM=",
        "originContent": "* [Networking for game programming](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)",
        "translatedContent": "* [Mạng cho lập trình game](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)"
      },
      {
        "row": 24,
        "rowsha": "gFfg8LiurZgQYQLk9ml+BNBRTmbpXu+wgi5X94pfdP0=",
        "originContent": "* [Key differences between TCP and UDP protocols](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)",
        "translatedContent": "* [Sự khác biệt chính giữa các giao thức TCP và UDP](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)"
      },
      {
        "row": 25,
        "rowsha": "gigJSz+KlSFZTEv+jdlqvA1HD0aZhHalwbRzOurSd1I=",
        "originContent": "* [Difference between TCP and UDP](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)",
        "translatedContent": "* [Sự khác biệt giữa TCP và UDP](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)"
      },
      {
        "row": 26,
        "rowsha": "1nzcV1W/P9kjlykVIdYvvM9S04Yj3U/y/UonQAVDHjc=",
        "originContent": "* [Transmission control protocol](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)",
        "translatedContent": "* [Giao thức điều khiển truyền tải](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)"
      },
      {
        "row": 27,
        "rowsha": "fUCM23+YfHtbejC6qiOBKINwAl5Cq6vbnhfZFCjN6aU=",
        "originContent": "* [User datagram protocol](https://en.wikipedia.org/wiki/User_Datagram_Protocol)",
        "translatedContent": "* [Giao thức datagram người dùng](https://en.wikipedia.org/wiki/User_Datagram_Protocol)"
      },
      {
        "row": 28,
        "rowsha": "72yn2I5zcpg4gDRaRVJrnnWBmOGTksdyuMt6+F7kaGQ=",
        "originContent": "* [Scaling memcache at Facebook](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)",
        "translatedContent": "* [Scaling memcache tại Facebook](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)"
      },
      {
        "row": 29,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "TpvcphzreA+D2fs7C+WUoqLUeOzo7hBb3EDb1VwWuX4=",
        "originContent": "### Remote procedure call (RPC)",
        "translatedContent": "### Gọi thủ tục từ xa (RPC)"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 33,
        "rowsha": "1Hf/ikluyw7YaJ0sm564Ctcpip2QMs87nD0dTNPGJ9E=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/iF4Mkb5.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/iF4Mkb5.png\">"
      },
      {
        "row": 34,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 35,
        "rowsha": "Kg1BMDt51XaKyTk190B6osJ4drj6axFIeUQDVjIEzTw=",
        "originContent": "  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>Source: Crack the system design interview</a></i>",
        "translatedContent": "  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>Nguồn: Crack the system design interview</a></i>"
      },
      {
        "row": 36,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "Bh0xTQtNeCassICqia4YNVI8C0Mz/uuX4aZs7+lPBTo=",
        "originContent": "In an RPC, a client causes a procedure to execute on a different address space, usually a remote server.  The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program.  Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls.  Popular RPC frameworks include [Protobuf](https://developers.google.com/protocol-buffers/), [Thrift](https://thrift.apache.org/), and [Avro](https://avro.apache.org/docs/current/).",
        "translatedContent": "Trong RPC, một máy khách gây ra việc thực thi một thủ tục ở không gian địa chỉ khác, thường là máy chủ từ xa. Thủ tục này được mã hóa như một lời gọi thủ tục cục bộ, trừu tượng hóa chi tiết về cách giao tiếp với máy chủ khỏi chương trình máy khách. Các lời gọi từ xa thường chậm hơn và kém tin cậy hơn các lời gọi cục bộ, vì vậy nên phân biệt các lời gọi RPC với lời gọi cục bộ. Các framework RPC phổ biến bao gồm [Protobuf](https://developers.google.com/protocol-buffers/), [Thrift](https://thrift.apache.org/), và [Avro](https://avro.apache.org/docs/current/)."
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "JLgTVfxoKqH6Y9n65AbdfJu37V5YaDE/cblAsmAV2V0=",
        "originContent": "RPC is a request-response protocol:",
        "translatedContent": "RPC là giao thức yêu cầu-phản hồi:"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 46,
    "Content": "\n* **Client program** - Calls the client stub procedure.  The parameters are pushed onto the stack like a local procedure call.\n* **Client stub procedure** - Marshals (packs) procedure id and arguments into a request message.\n* **Client communication module** - OS sends the message from the client to the server.\n* **Server communication module** - OS passes the incoming packets to the server stub procedure.\n* **Server stub procedure** -  Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.\n* The server response repeats the steps above in reverse order.\n\nSample RPC calls:\n",
    "ContentSha": "5PmI2LbQPBewUn/2iz277V+TkEFWqKJeqfFmrsij1fA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n* **Chương trình khách** - Gọi thủ tục stub phía khách. Các tham số được đẩy lên stack giống như một lời gọi thủ tục cục bộ.\n* **Thủ tục stub phía khách** - Đóng gói (marshals) id thủ tục và các tham số vào một thông điệp yêu cầu.\n* **Mô-đun truyền thông phía khách** - Hệ điều hành gửi thông điệp từ khách đến máy chủ.\n* **Mô-đun truyền thông phía máy chủ** - Hệ điều hành chuyển các gói tin đến thủ tục stub phía máy chủ.\n* **Thủ tục stub phía máy chủ** - Giải nén kết quả, gọi thủ tục máy chủ tương ứng với id thủ tục và truyền các tham số đã cho.\n* Phản hồi từ máy chủ lặp lại các bước trên theo thứ tự ngược lại.\n\nVí dụ các lời gọi RPC:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "8O05uDAChA70zCiBG9sXgO5VrTCf8R4weHrgpgcoCSs=",
        "originContent": "* **Client program** - Calls the client stub procedure.  The parameters are pushed onto the stack like a local procedure call.",
        "translatedContent": "* **Chương trình khách** - Gọi thủ tục stub phía khách. Các tham số được đẩy lên stack giống như một lời gọi thủ tục cục bộ."
      },
      {
        "row": 3,
        "rowsha": "GbXIX7WIFIPeiRqfbBM++S9dYT9xDC0+9uW9cgxHjWU=",
        "originContent": "* **Client stub procedure** - Marshals (packs) procedure id and arguments into a request message.",
        "translatedContent": "* **Thủ tục stub phía khách** - Đóng gói (marshals) id thủ tục và các tham số vào một thông điệp yêu cầu."
      },
      {
        "row": 4,
        "rowsha": "BWYroZdRLwCUEFxxMwFvjzy7Ns1ErZE1N0Nz9FgmteM=",
        "originContent": "* **Client communication module** - OS sends the message from the client to the server.",
        "translatedContent": "* **Mô-đun truyền thông phía khách** - Hệ điều hành gửi thông điệp từ khách đến máy chủ."
      },
      {
        "row": 5,
        "rowsha": "S/fO+YSTSutK2E6VTy5pV4OGJd4pwfNzirRU2ueyzA4=",
        "originContent": "* **Server communication module** - OS passes the incoming packets to the server stub procedure.",
        "translatedContent": "* **Mô-đun truyền thông phía máy chủ** - Hệ điều hành chuyển các gói tin đến thủ tục stub phía máy chủ."
      },
      {
        "row": 6,
        "rowsha": "2gMq52C+y+sizsihIlvOpXOKxVPMU8mtfPAagN9CUHM=",
        "originContent": "* **Server stub procedure** -  Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.",
        "translatedContent": "* **Thủ tục stub phía máy chủ** - Giải nén kết quả, gọi thủ tục máy chủ tương ứng với id thủ tục và truyền các tham số đã cho."
      },
      {
        "row": 7,
        "rowsha": "0VR3i+yK/Vy0pChQF2OAKrfWdgv88l/CXsr/CZP8IvE=",
        "originContent": "* The server response repeats the steps above in reverse order.",
        "translatedContent": "* Phản hồi từ máy chủ lặp lại các bước trên theo thứ tự ngược lại."
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "oecfAGdCYZHxDEX9adrH160grqb/jXAgiwG0Iki6dxs=",
        "originContent": "Sample RPC calls:",
        "translatedContent": "Ví dụ các lời gọi RPC:"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 47,
    "Content": "```\nGET /someoperation?data=anId\n\nPOST /anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n```",
    "ContentSha": "BYLxUnd5OWhXrWTwm++n0cxi7AnIAvtoL/RnYPfjXXk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nGET /someoperation?data=anId\n\nPOST /anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "9o9Gw4d/j+vk0jKMOWyMxhdaMlbGVjhZzltXeumS9gY=",
        "originContent": "GET /someoperation?data=anId",
        "translatedContent": "GET /someoperation?data=anId"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "BUr540FHvFI1WyZ5re+tyV5mxQTRGzME2luIG/NMObU=",
        "originContent": "POST /anotheroperation",
        "translatedContent": "POST /anotheroperation"
      },
      {
        "row": 5,
        "rowsha": "Ah+1ltuB5tAr89JYbuOYH+UZ8nXArJyna7zy67QJfZY=",
        "originContent": "{",
        "translatedContent": "{"
      },
      {
        "row": 6,
        "rowsha": "Xlr5/6Y2BcYHAFgzfrHXZR5GhOv4x5dlfZuJigo2+cI=",
        "originContent": "  \"data\":\"anId\";",
        "translatedContent": "  \"data\":\"anId\";"
      },
      {
        "row": 7,
        "rowsha": "cUiezwyh//arUr6YcQoloevjQMfDExnvWiwk9hYsjk4=",
        "originContent": "  \"anotherdata\": \"another value\"",
        "translatedContent": "  \"anotherdata\": \"another value\""
      },
      {
        "row": 8,
        "rowsha": "0Qs2qnSlm89KiBhYN/ZYr682Ru/yuxbDko0OkzXpRdI=",
        "originContent": "}",
        "translatedContent": "}"
      },
      {
        "row": 9,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 48,
    "Content": "\nRPC is focused on exposing behaviors.  RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.\n\nChoose a native library (aka SDK) when:\n\n* You know your target platform.\n* You want to control how your \"logic\" is accessed.\n* You want to control how error control happens off your library.\n* Performance and end user experience is your primary concern.\n\nHTTP APIs following **REST** tend to be used more often for public APIs.\n\n#### Disadvantage(s): RPC\n\n* RPC clients become tightly coupled to the service implementation.\n* A new API must be defined for every new operation or use case.\n* It can be difficult to debug RPC.\n* You might not be able to leverage existing technologies out of the box.  For example, it might require additional effort to ensure [RPC calls are properly cached](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/) on caching servers such as [Squid](http://www.squid-cache.org/).\n\n### Representational state transfer (REST)\n\nREST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server.  The server provides a representation of resources and actions that can either manipulate or get a new representation of resources.  All communication must be stateless and cacheable.\n\nThere are four qualities of a RESTful interface:\n\n* **Identify resources (URI in HTTP)** - use the same URI regardless of any operation.\n* **Change with representations (Verbs in HTTP)** - use verbs, headers, and body.\n* **Self-descriptive error message (status response in HTTP)** - Use status codes, don't reinvent the wheel.\n* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (HTML interface for HTTP)** - your web service should be fully accessible in a browser.\n\nSample REST calls:\n",
    "ContentSha": "Rt/8zO9jLRQq0DxNqYrouOd/1z3QvXPXQYsN4u7rca0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "RPC tập trung vào việc phơi bày các hành vi. RPC thường được sử dụng vì lý do hiệu năng trong giao tiếp nội bộ, vì bạn có thể tự tay xây dựng các lệnh gọi gốc phù hợp hơn với trường hợp sử dụng của mình.\n\nChọn thư viện gốc (hay còn gọi là SDK) khi:\n\n* Bạn biết nền tảng mục tiêu của mình.\n* Bạn muốn kiểm soát cách \"logic\" của mình được truy cập.\n* Bạn muốn kiểm soát cách kiểm soát lỗi xảy ra bên ngoài thư viện của mình.\n* Hiệu năng và trải nghiệm người dùng cuối là mối quan tâm chính của bạn.\n\nHTTP API tuân theo **REST** thường được sử dụng nhiều hơn cho các API công khai.\n\n#### Nhược điểm: RPC\n\n* Các client RPC trở nên phụ thuộc chặt chẽ vào cách triển khai dịch vụ.\n* Một API mới phải được định nghĩa cho mỗi thao tác hoặc trường hợp sử dụng mới.\n* Có thể khó gỡ lỗi RPC.\n* Bạn có thể không tận dụng được các công nghệ hiện có ngay lập tức. Ví dụ, có thể cần thêm nỗ lực để đảm bảo [các lệnh gọi RPC được lưu vào bộ nhớ đệm đúng cách](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/) trên các máy chủ cache như [Squid](http://www.squid-cache.org/).\n\n### Representational state transfer (REST)\n\nREST là một kiểu kiến trúc áp đặt mô hình client/server, trong đó client thao tác trên tập hợp các tài nguyên do server quản lý. Server cung cấp đại diện của tài nguyên và các hành động có thể thao tác hoặc lấy đại diện mới của tài nguyên đó. Mọi giao tiếp đều phải không trạng thái và có thể lưu vào bộ nhớ đệm.\n\nCó bốn đặc tính của một giao diện RESTful:\n\n* **Định danh tài nguyên (URI trong HTTP)** - sử dụng cùng một URI bất kể thao tác nào.\n* **Thay đổi theo đại diện (Động từ trong HTTP)** - sử dụng động từ, header và body.\n* **Thông điệp lỗi tự mô tả (phản hồi trạng thái trong HTTP)** - sử dụng mã trạng thái, không phát minh lại bánh xe.\n* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (giao diện HTML cho HTTP)** - dịch vụ web của bạn nên được truy cập đầy đủ qua trình duyệt.\n\nVí dụ các lệnh gọi REST:\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "RPC tập trung vào việc phơi bày các hành vi. RPC thường được sử dụng vì lý do hiệu năng trong giao tiếp nội bộ, vì bạn có thể tự tay xây dựng các lệnh gọi gốc phù hợp hơn với trường hợp sử dụng của mình."
      },
      {
        "row": 2,
        "rowsha": "XJmvYMRlWSnDjQjYP2ui67XuYG8HActWmFXcdAFv3M4=",
        "originContent": "RPC is focused on exposing behaviors.  RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Chọn thư viện gốc (hay còn gọi là SDK) khi:"
      },
      {
        "row": 4,
        "rowsha": "b3wdh/Hn8L4MFT8bGa1gL8AnjFxcN1+F2SGNi1TqX7I=",
        "originContent": "Choose a native library (aka SDK) when:",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Bạn biết nền tảng mục tiêu của mình."
      },
      {
        "row": 6,
        "rowsha": "uJL3emZyJfl5yDh4Er1chEMzq46VKHQTeL0qLkfzLY4=",
        "originContent": "* You know your target platform.",
        "translatedContent": "* Bạn muốn kiểm soát cách \"logic\" của mình được truy cập."
      },
      {
        "row": 7,
        "rowsha": "Xq1v/PmfbzqKdQwRjHEiIRxsBxtNf1jiYvI7/D3XCLM=",
        "originContent": "* You want to control how your \"logic\" is accessed.",
        "translatedContent": "* Bạn muốn kiểm soát cách kiểm soát lỗi xảy ra bên ngoài thư viện của mình."
      },
      {
        "row": 8,
        "rowsha": "P0vnwlPle89UFnvbmbXFYH9R2RqKrTs02/lk0NZ8w60=",
        "originContent": "* You want to control how error control happens off your library.",
        "translatedContent": "* Hiệu năng và trải nghiệm người dùng cuối là mối quan tâm chính của bạn."
      },
      {
        "row": 9,
        "rowsha": "jBa3h1I74Z1SKV5f2EAjwfnMPNpiBqn7AV6ViecCb8E=",
        "originContent": "* Performance and end user experience is your primary concern.",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "HTTP API tuân theo **REST** thường được sử dụng nhiều hơn cho các API công khai."
      },
      {
        "row": 11,
        "rowsha": "yzvC15CoAoDs5wkte0rrTmO7YMjWTV/jIvPSNTtgH7k=",
        "originContent": "HTTP APIs following **REST** tend to be used more often for public APIs.",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Nhược điểm: RPC"
      },
      {
        "row": 13,
        "rowsha": "SoH46EXpkYKXJKgdP/R8uKh6k6n+MILD+8xL24SuLJ4=",
        "originContent": "#### Disadvantage(s): RPC",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Các client RPC trở nên phụ thuộc chặt chẽ vào cách triển khai dịch vụ."
      },
      {
        "row": 15,
        "rowsha": "tQS05NMinO27MyU5u2MbvDRKRZJGUB9op0nP9Di7bfM=",
        "originContent": "* RPC clients become tightly coupled to the service implementation.",
        "translatedContent": "* Một API mới phải được định nghĩa cho mỗi thao tác hoặc trường hợp sử dụng mới."
      },
      {
        "row": 16,
        "rowsha": "l5j6OM09hEmUo3wJlObD77mcS4+mpTqeGg3Oi7gJiHU=",
        "originContent": "* A new API must be defined for every new operation or use case.",
        "translatedContent": "* Có thể khó gỡ lỗi RPC."
      },
      {
        "row": 17,
        "rowsha": "U51uxXEKBUVI1hu577h0ywcSPcYwdMb9XFkeuGXRLSs=",
        "originContent": "* It can be difficult to debug RPC.",
        "translatedContent": "* Bạn có thể không tận dụng được các công nghệ hiện có ngay lập tức. Ví dụ, có thể cần thêm nỗ lực để đảm bảo [các lệnh gọi RPC được lưu vào bộ nhớ đệm đúng cách](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/) trên các máy chủ cache như [Squid](http://www.squid-cache.org/)."
      },
      {
        "row": 18,
        "rowsha": "c5YPLxamKWj/01J5GHsA8gFP72pOoJsqI/BOahqDZlI=",
        "originContent": "* You might not be able to leverage existing technologies out of the box.  For example, it might require additional effort to ensure [RPC calls are properly cached](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/) on caching servers such as [Squid](http://www.squid-cache.org/).",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Representational state transfer (REST)"
      },
      {
        "row": 20,
        "rowsha": "5pggeKJjZ+c7PZml5/muDOwnelAohiVqSVXVOVh1v3I=",
        "originContent": "### Representational state transfer (REST)",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "REST là một kiểu kiến trúc áp đặt mô hình client/server, trong đó client thao tác trên tập hợp các tài nguyên do server quản lý. Server cung cấp đại diện của tài nguyên và các hành động có thể thao tác hoặc lấy đại diện mới của tài nguyên đó. Mọi giao tiếp đều phải không trạng thái và có thể lưu vào bộ nhớ đệm."
      },
      {
        "row": 22,
        "rowsha": "ybiHGclDiUTU1i5NEMzKiMmiD0+IZfJMSrWTQWhl1pU=",
        "originContent": "REST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server.  The server provides a representation of resources and actions that can either manipulate or get a new representation of resources.  All communication must be stateless and cacheable.",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Có bốn đặc tính của một giao diện RESTful:"
      },
      {
        "row": 24,
        "rowsha": "hhZokcRRYB1mLkIDrgS8VfZ9e59XUbWEojz33ZlR69E=",
        "originContent": "There are four qualities of a RESTful interface:",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* **Định danh tài nguyên (URI trong HTTP)** - sử dụng cùng một URI bất kể thao tác nào."
      },
      {
        "row": 26,
        "rowsha": "uJ0qD0K1wAh7fNvmdjo63o5UCdMXWt4F+ZtKLvNdw5Q=",
        "originContent": "* **Identify resources (URI in HTTP)** - use the same URI regardless of any operation.",
        "translatedContent": "* **Thay đổi theo đại diện (Động từ trong HTTP)** - sử dụng động từ, header và body."
      },
      {
        "row": 27,
        "rowsha": "Yw/738jxvx8UmeQv5Hy3qA3wgvJKCwN8obAIjFeUFqE=",
        "originContent": "* **Change with representations (Verbs in HTTP)** - use verbs, headers, and body.",
        "translatedContent": "* **Thông điệp lỗi tự mô tả (phản hồi trạng thái trong HTTP)** - sử dụng mã trạng thái, không phát minh lại bánh xe."
      },
      {
        "row": 28,
        "rowsha": "zMtVPV7bLYtyyVynFiAsYRdsVxV9dlMtB1hrIKTI+QA=",
        "originContent": "* **Self-descriptive error message (status response in HTTP)** - Use status codes, don't reinvent the wheel.",
        "translatedContent": "* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (giao diện HTML cho HTTP)** - dịch vụ web của bạn nên được truy cập đầy đủ qua trình duyệt."
      },
      {
        "row": 29,
        "rowsha": "LByvTxhA2T3N381ftDzf6Wpe23wtmVk0+7oEVwQxad4=",
        "originContent": "* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (HTML interface for HTTP)** - your web service should be fully accessible in a browser.",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Ví dụ các lệnh gọi REST:"
      },
      {
        "row": 31,
        "rowsha": "KvIhSTUImOsKTGRabyzgxRW844U1+6d81OKpdbnucfQ=",
        "originContent": "Sample REST calls:",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 49,
    "Content": "```\nGET /someresources/anId\n\nPUT /someresources/anId\n{\"anotherdata\": \"another value\"}\n```",
    "ContentSha": "LfYrdSaJCXPWw5FeIGqODwCXjq6vLSYullHQ6dtLt9M=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nGET /someresources/anId\n\nPUT /someresources/anId\n{\"anotherdata\": \"another value\"}\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "1GRtVOB4D6GHpC1Dk1mYucHdRAiFes0ouCrs7RMLCf4=",
        "originContent": "GET /someresources/anId",
        "translatedContent": "GET /someresources/anId"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "fC8PhqPjGqTRh7N13XkSfUPyUNgeWwoP6hGrrqqGJec=",
        "originContent": "PUT /someresources/anId",
        "translatedContent": "PUT /someresources/anId"
      },
      {
        "row": 5,
        "rowsha": "WIjnB5L308vhBg8hYgOvfJxtU6Hwf/CFxHNuLZ1l7B4=",
        "originContent": "{\"anotherdata\": \"another value\"}",
        "translatedContent": "{\"anotherdata\": \"another value\"}"
      },
      {
        "row": 6,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 50,
    "Content": "\nREST is focused on exposing data.  It minimizes the coupling between client/server and is often used for public HTTP APIs.  REST uses a more generic and uniform method of exposing resources through URIs, [representation through headers](https://github.com/for-GET/know-your-http-well/blob/master/headers.md), and actions through verbs such as GET, POST, PUT, DELETE, and PATCH.  Being stateless, REST is great for horizontal scaling and partitioning.\n\n#### Disadvantage(s): REST\n\n* With REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy.  For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path.  With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.\n* REST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn't fit your use case.  For example, moving expired documents to the archive folder might not cleanly fit within these verbs.\n* Fetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.\n* Over time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.\n\n### RPC and REST calls comparison\n\n| Operation | RPC | REST |\n|---|---|---|\n| Signup    | **POST** /signup | **POST** /persons |\n| Resign    | **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234 |\n| Read a person | **GET** /readPerson?personid=1234 | **GET** /persons/1234 |\n| Read a person’s items list | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items |\n| Add an item to a person’s items | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |\n| Update an item    | **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |\n| Delete an item | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456 |\n\n<p align=\"center\">\n  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>Source: Do you really know why you prefer REST over RPC</a></i>\n</p>\n\n#### Source(s) and further reading: REST and RPC\n\n* [Do you really know why you prefer REST over RPC](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)\n* [When are RPC-ish approaches more appropriate than REST?](http://programmers.stackexchange.com/a/181186)\n* [REST vs JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)\n* [Debunking the myths of RPC and REST](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)\n* [What are the drawbacks of using REST](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)\n* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Thrift](https://code.facebook.com/posts/1468950976659943/)\n* [Why REST for internal use and not RPC](http://arstechnica.com/civis/viewtopic.php?t=1190508)\n\n## Security\n\nThis section could use some updates.  Consider [contributing](#contributing)!",
    "ContentSha": "SY9oRc1IgrKNdRZI1YEjzyytSRn6DjylmnfEWHK6KsU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "REST tập trung vào việc cung cấp dữ liệu. Nó giảm thiểu sự kết nối chặt chẽ giữa client/server và thường được sử dụng cho các HTTP API công khai. REST sử dụng phương pháp cung cấp tài nguyên thông qua URI một cách tổng quát và đồng nhất, [biểu diễn qua các header](https://github.com/for-GET/know-your-http-well/blob/master/headers.md), và hành động qua các động từ như GET, POST, PUT, DELETE và PATCH. Là stateless, REST rất phù hợp cho mở rộng ngang và phân vùng.\n\n#### Nhược điểm: REST\n\n* Vì REST tập trung vào việc cung cấp dữ liệu, nó có thể không phù hợp nếu tài nguyên không được tổ chức hoặc truy cập một cách tự nhiên trong một hệ thống phân cấp đơn giản. Ví dụ, trả về tất cả các bản ghi cập nhật trong giờ qua phù hợp với một tập hợp sự kiện cụ thể không dễ dàng thể hiện dưới dạng một đường dẫn. Với REST, có khả năng phải thực hiện với sự kết hợp của đường dẫn URI, tham số truy vấn và có thể là phần thân yêu cầu.\n* REST thường dựa vào một vài động từ (GET, POST, PUT, DELETE và PATCH) mà đôi khi không phù hợp với trường hợp sử dụng của bạn. Ví dụ, di chuyển tài liệu hết hạn vào thư mục lưu trữ có thể không phù hợp một cách rõ ràng với các động từ này.\n* Việc lấy các tài nguyên phức tạp với cấu trúc phân cấp lồng nhau cần nhiều lần trao đổi giữa client và server để hiển thị một view duy nhất, ví dụ như lấy nội dung của một bài blog và các bình luận trên bài đó. Đối với các ứng dụng di động hoạt động trong điều kiện mạng thay đổi, nhiều lần trao đổi này là điều rất không mong muốn.\n* Theo thời gian, có thể có thêm nhiều trường dữ liệu được bổ sung vào phản hồi API và các client cũ sẽ nhận tất cả các trường dữ liệu mới, kể cả những trường mà chúng không cần, dẫn đến payload bị phình to và độ trễ lớn hơn.\n\n### So sánh các gọi RPC và REST\n\n| Hoạt động | RPC | REST |\n|---|---|---|\n| Đăng ký    | **POST** /signup | **POST** /persons |\n| Nghỉ việc    | **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234 |\n| Đọc thông tin một người | **GET** /readPerson?personid=1234 | **GET** /persons/1234 |\n| Đọc danh sách vật phẩm của một người | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items |\n| Thêm vật phẩm vào danh sách của một người | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |\n| Cập nhật vật phẩm    | **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |\n| Xóa vật phẩm | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456 |\n\n<p align=\"center\">\n  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>Nguồn: Bạn có thật sự biết vì sao bạn thích REST hơn RPC không</a></i>\n</p>\n\n#### Nguồn và tài liệu đọc thêm: REST và RPC\n\n* [Bạn có thật sự biết vì sao bạn thích REST hơn RPC không](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)\n* [Khi nào cách tiếp cận kiểu RPC phù hợp hơn REST?](http://programmers.stackexchange.com/a/181186)\n* [REST vs JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)\n* [Phá bỏ các huyền thoại về RPC và REST](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)\n* [Những bất lợi khi sử dụng REST](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)\n* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Thrift](https://code.facebook.com/posts/1468950976659943/)\n* [Tại sao REST dùng cho nội bộ mà không phải RPC](http://arstechnica.com/civis/viewtopic.php?t=1190508)\n\n## Bảo mật\n\nPhần này có thể cần cập nhật. Hãy cân nhắc [đóng góp](#contributing)!\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "REST tập trung vào việc cung cấp dữ liệu. Nó giảm thiểu sự kết nối chặt chẽ giữa client/server và thường được sử dụng cho các HTTP API công khai. REST sử dụng phương pháp cung cấp tài nguyên thông qua URI một cách tổng quát và đồng nhất, [biểu diễn qua các header](https://github.com/for-GET/know-your-http-well/blob/master/headers.md), và hành động qua các động từ như GET, POST, PUT, DELETE và PATCH. Là stateless, REST rất phù hợp cho mở rộng ngang và phân vùng."
      },
      {
        "row": 2,
        "rowsha": "UjrEsU6K4sQqwdT2LWPctmQJb5peHk5Ol9WmQtENbbA=",
        "originContent": "REST is focused on exposing data.  It minimizes the coupling between client/server and is often used for public HTTP APIs.  REST uses a more generic and uniform method of exposing resources through URIs, [representation through headers](https://github.com/for-GET/know-your-http-well/blob/master/headers.md), and actions through verbs such as GET, POST, PUT, DELETE, and PATCH.  Being stateless, REST is great for horizontal scaling and partitioning.",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Nhược điểm: REST"
      },
      {
        "row": 4,
        "rowsha": "p7Y4UGK+r8HoG//sCv+w6/O6TdLRPCWXnVdfOqv0bNQ=",
        "originContent": "#### Disadvantage(s): REST",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Vì REST tập trung vào việc cung cấp dữ liệu, nó có thể không phù hợp nếu tài nguyên không được tổ chức hoặc truy cập một cách tự nhiên trong một hệ thống phân cấp đơn giản. Ví dụ, trả về tất cả các bản ghi cập nhật trong giờ qua phù hợp với một tập hợp sự kiện cụ thể không dễ dàng thể hiện dưới dạng một đường dẫn. Với REST, có khả năng phải thực hiện với sự kết hợp của đường dẫn URI, tham số truy vấn và có thể là phần thân yêu cầu."
      },
      {
        "row": 6,
        "rowsha": "f7DgpbMc8WqILx6swpnSu/BNi9CdMM7YxXeW3AltWnA=",
        "originContent": "* With REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy.  For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path.  With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.",
        "translatedContent": "* REST thường dựa vào một vài động từ (GET, POST, PUT, DELETE và PATCH) mà đôi khi không phù hợp với trường hợp sử dụng của bạn. Ví dụ, di chuyển tài liệu hết hạn vào thư mục lưu trữ có thể không phù hợp một cách rõ ràng với các động từ này."
      },
      {
        "row": 7,
        "rowsha": "R0fatfAUG8Gsj/RJY1nvTjJ4JI3Q4odayLJM3R1n79o=",
        "originContent": "* REST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn't fit your use case.  For example, moving expired documents to the archive folder might not cleanly fit within these verbs.",
        "translatedContent": "* Việc lấy các tài nguyên phức tạp với cấu trúc phân cấp lồng nhau cần nhiều lần trao đổi giữa client và server để hiển thị một view duy nhất, ví dụ như lấy nội dung của một bài blog và các bình luận trên bài đó. Đối với các ứng dụng di động hoạt động trong điều kiện mạng thay đổi, nhiều lần trao đổi này là điều rất không mong muốn."
      },
      {
        "row": 8,
        "rowsha": "vkjpZQ9xt5H12UXRO8N6YeaZWa/dajwAT3E0n6t4rfM=",
        "originContent": "* Fetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.",
        "translatedContent": "* Theo thời gian, có thể có thêm nhiều trường dữ liệu được bổ sung vào phản hồi API và các client cũ sẽ nhận tất cả các trường dữ liệu mới, kể cả những trường mà chúng không cần, dẫn đến payload bị phình to và độ trễ lớn hơn."
      },
      {
        "row": 9,
        "rowsha": "M+CcXz+lhnxuMbyJ9ADp42PZCDm47kF7PuDsitv8ZQ4=",
        "originContent": "* Over time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### So sánh các gọi RPC và REST"
      },
      {
        "row": 11,
        "rowsha": "9+OFlAnB7eX/U58YzzyQmqBRblOi85+VjKC2+BQmeyM=",
        "originContent": "### RPC and REST calls comparison",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "| Hoạt động | RPC | REST |"
      },
      {
        "row": 13,
        "rowsha": "Mf0PJetf7lxPChdRyJhQx+/j59DO1racuKZYVwheSSY=",
        "originContent": "| Operation | RPC | REST |",
        "translatedContent": "|---|---|---|"
      },
      {
        "row": 14,
        "rowsha": "I8ygK3TzhkY++iR5bHqQEbDSyT8MOLTRXV0nYgW1m0M=",
        "originContent": "|---|---|---|",
        "translatedContent": "| Đăng ký    | **POST** /signup | **POST** /persons |"
      },
      {
        "row": 15,
        "rowsha": "yTX//Q9EnCRKE6Qtn1krLo7PsiICoBFPiL02dftV9ZQ=",
        "originContent": "| Signup    | **POST** /signup | **POST** /persons |",
        "translatedContent": "| Nghỉ việc    | **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234 |"
      },
      {
        "row": 16,
        "rowsha": "0XLsE4U1AOxHbuZ/7Amc1+zw9dDqkrxrz1jIbetVnC0=",
        "originContent": "| Resign    | **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234 |",
        "translatedContent": "| Đọc thông tin một người | **GET** /readPerson?personid=1234 | **GET** /persons/1234 |"
      },
      {
        "row": 17,
        "rowsha": "irK+A6tnAJjWFlB89T0T34b1gHxIdoAOvLDmroqZYf0=",
        "originContent": "| Read a person | **GET** /readPerson?personid=1234 | **GET** /persons/1234 |",
        "translatedContent": "| Đọc danh sách vật phẩm của một người | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items |"
      },
      {
        "row": 18,
        "rowsha": "lsOoD75NbDh5lhsMv1XM7OzeHTngLtRqfgOxyV8BDcw=",
        "originContent": "| Read a person’s items list | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items |",
        "translatedContent": "| Thêm vật phẩm vào danh sách của một người | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |"
      },
      {
        "row": 19,
        "rowsha": "oVrkLg1AxLWrSgrZ+Xu3avaUJshe0pNNwElTp/BqXZU=",
        "originContent": "| Add an item to a person’s items | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |",
        "translatedContent": "| Cập nhật vật phẩm    | **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |"
      },
      {
        "row": 20,
        "rowsha": "mTM/BJg2KQ6X0l1TfBZu0NjiJmhy0GkgEo8nPAZg7tY=",
        "originContent": "| Update an item    | **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |",
        "translatedContent": "| Xóa vật phẩm | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456 |"
      },
      {
        "row": 21,
        "rowsha": "8CDFHcYbXd6uQ+dN1EwifUWiRFqv3nBgaJLRs5F6FIk=",
        "originContent": "| Delete an item | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456 |",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 23,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>Nguồn: Bạn có thật sự biết vì sao bạn thích REST hơn RPC không</a></i>"
      },
      {
        "row": 24,
        "rowsha": "HAfihhgtDMMMGWw+/e4N3A82wb4Tz4ehjk9R6YOcIJk=",
        "originContent": "  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>Source: Do you really know why you prefer REST over RPC</a></i>",
        "translatedContent": "</p>"
      },
      {
        "row": 25,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Nguồn và tài liệu đọc thêm: REST và RPC"
      },
      {
        "row": 27,
        "rowsha": "UYm72VZMn8PSCIJv6b06yz6lccf375WzqWoutcGC8Tg=",
        "originContent": "#### Source(s) and further reading: REST and RPC",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [Bạn có thật sự biết vì sao bạn thích REST hơn RPC không](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)"
      },
      {
        "row": 29,
        "rowsha": "LaVRXjDwZbNeTQ6bds7sFcoujFMpEXjmyfzp0unK9Gg=",
        "originContent": "* [Do you really know why you prefer REST over RPC](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)",
        "translatedContent": "* [Khi nào cách tiếp cận kiểu RPC phù hợp hơn REST?](http://programmers.stackexchange.com/a/181186)"
      },
      {
        "row": 30,
        "rowsha": "2fbKAzDn0s5l7x0ZQcwVrS4+bEaCGdIsROQGaNjKqew=",
        "originContent": "* [When are RPC-ish approaches more appropriate than REST?](http://programmers.stackexchange.com/a/181186)",
        "translatedContent": "* [REST vs JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)"
      },
      {
        "row": 31,
        "rowsha": "/2VtiY8MXWTwYfpsAxQ8z/xBOVb/T5Wh9Dl5mjmxYdc=",
        "originContent": "* [REST vs JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)",
        "translatedContent": "* [Phá bỏ các huyền thoại về RPC và REST](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)"
      },
      {
        "row": 32,
        "rowsha": "KXjDNJk05eVv350Af7VwLStB6Rw2wR9Bchd83uVsv7k=",
        "originContent": "* [Debunking the myths of RPC and REST](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)",
        "translatedContent": "* [Những bất lợi khi sử dụng REST](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)"
      },
      {
        "row": 33,
        "rowsha": "uHIrlx66vBpTfYfo+BXmx2U/hmgTHthtH89FwhvhpZc=",
        "originContent": "* [What are the drawbacks of using REST](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)",
        "translatedContent": "* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)"
      },
      {
        "row": 34,
        "rowsha": "E8CKVfW4DaDVQHo21CF4Vsv7vGZieZXs0+mOiMdXKn0=",
        "originContent": "* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)",
        "translatedContent": "* [Thrift](https://code.facebook.com/posts/1468950976659943/)"
      },
      {
        "row": 35,
        "rowsha": "usr4rgpOtD5TCD8s+mY0eDBkk4N9S28XguVO90wRErQ=",
        "originContent": "* [Thrift](https://code.facebook.com/posts/1468950976659943/)",
        "translatedContent": "* [Tại sao REST dùng cho nội bộ mà không phải RPC](http://arstechnica.com/civis/viewtopic.php?t=1190508)"
      },
      {
        "row": 36,
        "rowsha": "3ARDAzXf0nXWHahJKYXwei1iCld+/7n5Mf2I2oLb24E=",
        "originContent": "* [Why REST for internal use and not RPC](http://arstechnica.com/civis/viewtopic.php?t=1190508)",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## Bảo mật"
      },
      {
        "row": 38,
        "rowsha": "UlQ9upvw00moCjWDduBZqkTiv0PRDG/mYeqnsF8DP6Q=",
        "originContent": "## Security",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Phần này có thể cần cập nhật. Hãy cân nhắc [đóng góp](#contributing)!"
      },
      {
        "row": 40,
        "rowsha": "hGuoiVXuNZwbF+Vqkb+CSlXMTMBmOBtR428NDwkzhFM=",
        "originContent": "This section could use some updates.  Consider [contributing](#contributing)!",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 51,
    "Content": "\nSecurity is a broad topic.  Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won't need to know more than the basics:\n\n* Encrypt in transit and at rest.\n* Sanitize all user inputs or any input parameters exposed to user to prevent [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) and [SQL injection](https://en.wikipedia.org/wiki/SQL_injection).\n* Use parameterized queries to prevent SQL injection.\n* Use the principle of [least privilege](https://en.wikipedia.org/wiki/Principle_of_least_privilege).\n\n### Source(s) and further reading\n\n* [API security checklist](https://github.com/shieldfy/API-Security-Checklist)\n* [Security guide for developers](https://github.com/FallibleInc/security-guide-for-developers)\n* [OWASP top ten](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)\n\n## Appendix\n\nYou'll sometimes be asked to do 'back-of-the-envelope' estimates.  For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take.  The **Powers of two table** and **Latency numbers every programmer should know** are handy references.\n\n### Powers of two table\n",
    "ContentSha": "lttd9OX13KgyFAZReRo/UiwT2DoGI4tHaEGVoAH3mCA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Bảo mật là một chủ đề rộng. Trừ khi bạn có kinh nghiệm đáng kể, có nền tảng về bảo mật, hoặc đang ứng tuyển vào vị trí yêu cầu kiến thức về bảo mật, bạn có lẽ chỉ cần biết những điều cơ bản sau:\n\n* Mã hóa dữ liệu khi truyền và khi lưu trữ.\n* Làm sạch tất cả dữ liệu đầu vào từ người dùng hoặc bất kỳ tham số nào được người dùng truy cập để ngăn chặn [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) và [SQL injection](https://en.wikipedia.org/wiki/SQL_injection).\n* Sử dụng truy vấn tham số hóa để ngăn SQL injection.\n* Áp dụng nguyên tắc [quyền hạn tối thiểu](https://en.wikipedia.org/wiki/Principle_of_least_privilege).\n\n### Nguồn và tài liệu đọc thêm\n\n* [Danh sách kiểm tra bảo mật API](https://github.com/shieldfy/API-Security-Checklist)\n* [Hướng dẫn bảo mật cho lập trình viên](https://github.com/FallibleInc/security-guide-for-developers)\n* [OWASP top ten](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)\n\n## Phụ lục\n\nĐôi khi bạn sẽ được yêu cầu ước lượng nhanh. Ví dụ, bạn có thể cần xác định mất bao lâu để tạo 100 ảnh thumbnail từ đĩa hoặc một cấu trúc dữ liệu sẽ tiêu tốn bao nhiêu bộ nhớ. **Bảng số mũ của hai** và **Các con số độ trễ mà lập trình viên nên biết** là những tài liệu tham khảo hữu ích.\n\n### Bảng số mũ của hai\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Bảo mật là một chủ đề rộng. Trừ khi bạn có kinh nghiệm đáng kể, có nền tảng về bảo mật, hoặc đang ứng tuyển vào vị trí yêu cầu kiến thức về bảo mật, bạn có lẽ chỉ cần biết những điều cơ bản sau:"
      },
      {
        "row": 2,
        "rowsha": "K4oRrOeVrITeujdLCk+lOdenPOKzRGSb36UkPMJXz00=",
        "originContent": "Security is a broad topic.  Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won't need to know more than the basics:",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Mã hóa dữ liệu khi truyền và khi lưu trữ."
      },
      {
        "row": 4,
        "rowsha": "1N05AULQ81FjW8EiPp0WF2uZ/vKEiXZ++GqlzpL6W04=",
        "originContent": "* Encrypt in transit and at rest.",
        "translatedContent": "* Làm sạch tất cả dữ liệu đầu vào từ người dùng hoặc bất kỳ tham số nào được người dùng truy cập để ngăn chặn [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) và [SQL injection](https://en.wikipedia.org/wiki/SQL_injection)."
      },
      {
        "row": 5,
        "rowsha": "xe+liYlsQD7KvZro/wts7hOfjIXPy9orxzW2Dxul1pY=",
        "originContent": "* Sanitize all user inputs or any input parameters exposed to user to prevent [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) and [SQL injection](https://en.wikipedia.org/wiki/SQL_injection).",
        "translatedContent": "* Sử dụng truy vấn tham số hóa để ngăn SQL injection."
      },
      {
        "row": 6,
        "rowsha": "l3A9LaiorRvDj5CkYgdXlCtb0dL45JML+LeM3RZSGCc=",
        "originContent": "* Use parameterized queries to prevent SQL injection.",
        "translatedContent": "* Áp dụng nguyên tắc [quyền hạn tối thiểu](https://en.wikipedia.org/wiki/Principle_of_least_privilege)."
      },
      {
        "row": 7,
        "rowsha": "gkN2qsP8lSs9FaRO+uU/kQh1RIHcF0dZJvVXrlVoHNM=",
        "originContent": "* Use the principle of [least privilege](https://en.wikipedia.org/wiki/Principle_of_least_privilege).",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Nguồn và tài liệu đọc thêm"
      },
      {
        "row": 9,
        "rowsha": "Ir/x9BavkYN//m+DChzVHhHZn1u4qzqyKpKQsBeaFAk=",
        "originContent": "### Source(s) and further reading",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [Danh sách kiểm tra bảo mật API](https://github.com/shieldfy/API-Security-Checklist)"
      },
      {
        "row": 11,
        "rowsha": "5jmefxmZg38vjMppEPVXB691ySxO2cF+eL8Ht20TTEs=",
        "originContent": "* [API security checklist](https://github.com/shieldfy/API-Security-Checklist)",
        "translatedContent": "* [Hướng dẫn bảo mật cho lập trình viên](https://github.com/FallibleInc/security-guide-for-developers)"
      },
      {
        "row": 12,
        "rowsha": "matLhM/u8xEF82O46b5QA7t//LnoEAuDYz9omxCwOL4=",
        "originContent": "* [Security guide for developers](https://github.com/FallibleInc/security-guide-for-developers)",
        "translatedContent": "* [OWASP top ten](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)"
      },
      {
        "row": 13,
        "rowsha": "9ewFrDAiXWR4C6F4egOg6TpLTcWO3Q2vtCR464sfzBE=",
        "originContent": "* [OWASP top ten](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## Phụ lục"
      },
      {
        "row": 15,
        "rowsha": "NY23TEBBgPFlNE5ad5aEgkJDKmBbORVrA3kzjJCOwek=",
        "originContent": "## Appendix",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Đôi khi bạn sẽ được yêu cầu ước lượng nhanh. Ví dụ, bạn có thể cần xác định mất bao lâu để tạo 100 ảnh thumbnail từ đĩa hoặc một cấu trúc dữ liệu sẽ tiêu tốn bao nhiêu bộ nhớ. **Bảng số mũ của hai** và **Các con số độ trễ mà lập trình viên nên biết** là những tài liệu tham khảo hữu ích."
      },
      {
        "row": 17,
        "rowsha": "Qk3gX0l5EZMii1z+NlOJ80sUfehGEfQhoNWjfzOAntc=",
        "originContent": "You'll sometimes be asked to do 'back-of-the-envelope' estimates.  For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take.  The **Powers of two table** and **Latency numbers every programmer should know** are handy references.",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Bảng số mũ của hai"
      },
      {
        "row": 19,
        "rowsha": "z/bxSXl1N06ql8Te1RnT8CK3EK7JyOw96sLejExgST0=",
        "originContent": "### Powers of two table",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 52,
    "Content": "```\nPower           Exact Value         Approx Value        Bytes\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n```",
    "ContentSha": "tY3s4yO7vTGsjW+GZNlakuBkrCR3FXNKe9N9AYlzPrU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nPower           Exact Value         Approx Value        Bytes\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "GopqSzaj/Su5MUJ6sORIeByErVFyL9MXiY+m0fWQ9aA=",
        "originContent": "Power           Exact Value         Approx Value        Bytes",
        "translatedContent": "Power           Exact Value         Approx Value        Bytes"
      },
      {
        "row": 3,
        "rowsha": "6u/Bs8w92r704jYI5bgL1lqyASIdtxwcZedxnegDHOk=",
        "originContent": "---------------------------------------------------------------",
        "translatedContent": "---------------------------------------------------------------"
      },
      {
        "row": 4,
        "rowsha": "Tipf9Cya0JVwFN0uuubYFjnt6J0egikpUvPfz1W9oBs=",
        "originContent": "7                             128",
        "translatedContent": "7                             128"
      },
      {
        "row": 5,
        "rowsha": "nhK7nUwQ9svong5x5wMmIKF1zstzTZMT7SmEXchi2cc=",
        "originContent": "8                             256",
        "translatedContent": "8                             256"
      },
      {
        "row": 6,
        "rowsha": "WWsaSUQwyxHtCJHzqdcxA4Iq0p15/45Fh7hIobekNqs=",
        "originContent": "10                           1024   1 thousand           1 KB",
        "translatedContent": "10                           1024   1 thousand           1 KB"
      },
      {
        "row": 7,
        "rowsha": "1oROUdvQdHSMnILjM7dRW8oXMYEk8gf+5nSwxZIWyIA=",
        "originContent": "16                         65,536                       64 KB",
        "translatedContent": "16                         65,536                       64 KB"
      },
      {
        "row": 8,
        "rowsha": "I/d5gNv+MTAgv97UDa2/MdyYAyisHzARXHqODLiomWA=",
        "originContent": "20                      1,048,576   1 million            1 MB",
        "translatedContent": "20                      1,048,576   1 million            1 MB"
      },
      {
        "row": 9,
        "rowsha": "OrMri/0cTHQ/b6bR5KrSxAO8R9Kh0zySbZfTfkkMkV4=",
        "originContent": "30                  1,073,741,824   1 billion            1 GB",
        "translatedContent": "30                  1,073,741,824   1 billion            1 GB"
      },
      {
        "row": 10,
        "rowsha": "NcALEgdudV60zfu4Ga6b4hHmRaE0CNg4WP/j5fXR3as=",
        "originContent": "32                  4,294,967,296                        4 GB",
        "translatedContent": "32                  4,294,967,296                        4 GB"
      },
      {
        "row": 11,
        "rowsha": "3fpv7VuqjwI+R6BQfXfU9jqXDMDjIQIMVCxHmSR7HYM=",
        "originContent": "40              1,099,511,627,776   1 trillion           1 TB",
        "translatedContent": "40              1,099,511,627,776   1 trillion           1 TB"
      },
      {
        "row": 12,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 53,
    "Content": "\n#### Source(s) and further reading\n\n* [Powers of two](https://en.wikipedia.org/wiki/Power_of_two)\n\n### Latency numbers every programmer should know\n",
    "ContentSha": "ppBLjl4GPpTTuZuZkRCmUB3lr0F/LbyDBiLBdXbuDDw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n#### Nguồn và tài liệu đọc thêm\n\n* [Lũy thừa của hai](https://vi.wikipedia.org/wiki/L%C5%A9y_th%E1%BB%ABa_c%E1%BB%A7a_hai)\n\n### Những con số độ trễ mà mọi lập trình viên nên biết\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "yAcCmKF4VrpEVdPP7QGvwQrQvx5nYqkLfEVqvhED8vU=",
        "originContent": "#### Source(s) and further reading",
        "translatedContent": "#### Nguồn và tài liệu đọc thêm"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "wE0BFHK40veitXHaEcnSQ1veDoeThQ5aNZHM1KSXSd4=",
        "originContent": "* [Powers of two](https://en.wikipedia.org/wiki/Power_of_two)",
        "translatedContent": "* [Lũy thừa của hai](https://vi.wikipedia.org/wiki/L%C5%A9y_th%E1%BB%ABa_c%E1%BB%A7a_hai)"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "ewtmvY/jbiB2g7/rm/0P600zgMFUaOWl6P9UwIHrsVo=",
        "originContent": "### Latency numbers every programmer should know",
        "translatedContent": "### Những con số độ trễ mà mọi lập trình viên nên biết"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 54,
    "Content": "```\nLatency Comparison Numbers\n--------------------------\nL1 cache reference                           0.5 ns\nBranch mispredict                            5   ns\nL2 cache reference                           7   ns                      14x L1 cache\nMutex lock/unlock                           25   ns\nMain memory reference                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory\nHDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n```",
    "ContentSha": "Cxjssj59JwVoJhpDLS31tIAyvakR0WQUIHZP4hMVLy8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nLatency Comparison Numbers\n--------------------------\nL1 cache reference                           0.5 ns\nBranch mispredict                            5   ns\nL2 cache reference                           7   ns                      14x L1 cache\nMutex lock/unlock                           25   ns\nMain memory reference                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory\nHDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "WJYZRpCB6wnwYROffRDVKf93tmQ4UBjDYHAvsZQIioQ=",
        "originContent": "Latency Comparison Numbers",
        "translatedContent": "Latency Comparison Numbers"
      },
      {
        "row": 3,
        "rowsha": "8t5X+uJxo5I5KHujp8euYVJYx46DJ4nFQeFNE8mdPn0=",
        "originContent": "--------------------------",
        "translatedContent": "--------------------------"
      },
      {
        "row": 4,
        "rowsha": "7XfckQls1iOKWuWDXWBh6cpyPQSNHBtfyfTfn2fr1vk=",
        "originContent": "L1 cache reference                           0.5 ns",
        "translatedContent": "L1 cache reference                           0.5 ns"
      },
      {
        "row": 5,
        "rowsha": "vUJ7vZsr/S4EdGeDR5raQ//fo6pYQGIRjgctBXyXgFs=",
        "originContent": "Branch mispredict                            5   ns",
        "translatedContent": "Branch mispredict                            5   ns"
      },
      {
        "row": 6,
        "rowsha": "orTU96fCnkTK5376SbB3HOk+15cpHbawxugjNOBpPLw=",
        "originContent": "L2 cache reference                           7   ns                      14x L1 cache",
        "translatedContent": "L2 cache reference                           7   ns                      14x L1 cache"
      },
      {
        "row": 7,
        "rowsha": "QoUE8gGYfwQpfH5OuRes1kgdNGj/aFG70jTIPTxWGPQ=",
        "originContent": "Mutex lock/unlock                           25   ns",
        "translatedContent": "Mutex lock/unlock                           25   ns"
      },
      {
        "row": 8,
        "rowsha": "QpqdJt3cEU01+klSGYFJgy5QUOJaN0IVGJ1tcKGmF7A=",
        "originContent": "Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache",
        "translatedContent": "Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache"
      },
      {
        "row": 9,
        "rowsha": "d4bOF13WOnZy9PYYBouzJ3EwqhG9ldAxkZhWMyDYBSk=",
        "originContent": "Compress 1K bytes with Zippy            10,000   ns       10 us",
        "translatedContent": "Compress 1K bytes with Zippy            10,000   ns       10 us"
      },
      {
        "row": 10,
        "rowsha": "l/i0TC4oQftOkDSmWDqDx+ntKBQFPmi2D66Lxc7qdX8=",
        "originContent": "Send 1 KB bytes over 1 Gbps network     10,000   ns       10 us",
        "translatedContent": "Send 1 KB bytes over 1 Gbps network     10,000   ns       10 us"
      },
      {
        "row": 11,
        "rowsha": "WePwXIdujqBjPNEZbwwO869ur7KZZv9PzVdlxKSsy3s=",
        "originContent": "Read 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD",
        "translatedContent": "Read 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD"
      },
      {
        "row": 12,
        "rowsha": "YyivgxFLG63fPQecacT4DOV5m7tHCxGxsB9VF7tx6Vs=",
        "originContent": "Read 1 MB sequentially from memory     250,000   ns      250 us",
        "translatedContent": "Read 1 MB sequentially from memory     250,000   ns      250 us"
      },
      {
        "row": 13,
        "rowsha": "BAsTJzwY4nXJMUTgUeqkO18Eg/Mm9GXpWZwOXVdmnr8=",
        "originContent": "Round trip within same datacenter      500,000   ns      500 us",
        "translatedContent": "Round trip within same datacenter      500,000   ns      500 us"
      },
      {
        "row": 14,
        "rowsha": "pXdZXL92bt2iQqo2YKkbB7UA6ooJC7KsxTRc+Q0qM7s=",
        "originContent": "Read 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory",
        "translatedContent": "Read 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory"
      },
      {
        "row": 15,
        "rowsha": "xgdUzRDydXfqQlqH+c2uR0dMhHe39UABDDdOAya3MeA=",
        "originContent": "HDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip",
        "translatedContent": "HDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip"
      },
      {
        "row": 16,
        "rowsha": "kSLIUD4vIrTPsLLrWl47S3hv0HSAlpjVFzcf9sBGYlg=",
        "originContent": "Read 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD",
        "translatedContent": "Read 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD"
      },
      {
        "row": 17,
        "rowsha": "vHFNdKf7v28hkTxbgL3Mf7dNJx2utjXc6wJ7Rvo6XTA=",
        "originContent": "Read 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD",
        "translatedContent": "Read 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD"
      },
      {
        "row": 18,
        "rowsha": "o0nE15MY0adAe9UgvDoZTs8ZsuvGYdAsSwgKlhl45Zg=",
        "originContent": "Send packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms",
        "translatedContent": "Send packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "inUlsUkvuEgz9cSmmzD0v7sTT5tma2GiwYctY9I0wIU=",
        "originContent": "Notes",
        "translatedContent": "Notes"
      },
      {
        "row": 21,
        "rowsha": "c74IfpMID55DaJK30YLfZjlLx52/XfEZ2TV99hseu/s=",
        "originContent": "-----",
        "translatedContent": "-----"
      },
      {
        "row": 22,
        "rowsha": "6bP4W1/q9qy3xELpuTLXs2kzSkmu37dOz6Y5nxIPhMw=",
        "originContent": "1 ns = 10^-9 seconds",
        "translatedContent": "1 ns = 10^-9 seconds"
      },
      {
        "row": 23,
        "rowsha": "W+dpQ0MorvVAqvoFpYY10s5X0Pj7XMLa39EJSQRcDgo=",
        "originContent": "1 us = 10^-6 seconds = 1,000 ns",
        "translatedContent": "1 us = 10^-6 seconds = 1,000 ns"
      },
      {
        "row": 24,
        "rowsha": "w4NW+K7skNvLWuOf9wFWt4GNszqCcYuXaXCQbXfLoQI=",
        "originContent": "1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns",
        "translatedContent": "1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns"
      },
      {
        "row": 25,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 55,
    "Content": "\nHandy metrics based on numbers above:\n\n* Read sequentially from HDD at 30 MB/s\n* Read sequentially from 1 Gbps Ethernet at 100 MB/s\n* Read sequentially from SSD at 1 GB/s\n* Read sequentially from main memory at 4 GB/s\n* 6-7 world-wide round trips per second\n* 2,000 round trips per second within a data center\n\n#### Latency numbers visualized\n\n![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)\n\n#### Source(s) and further reading\n\n* [Latency numbers every programmer should know - 1](https://gist.github.com/jboner/2841832)\n* [Latency numbers every programmer should know - 2](https://gist.github.com/hellerbarde/2843375)\n* [Designs, lessons, and advice from building large distributed systems](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)\n* [Software Engineering Advice from Building Large-Scale Distributed Systems](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)\n\n### Additional system design interview questions\n\n> Common system design interview questions, with links to resources on how to solve each.\n\n| Question | Reference(s) |\n|---|---|\n| Design a file sync service like Dropbox | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| Design a search engine like Google | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |\n| Design a scalable web crawler like Google | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |\n| Design Google docs | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |\n| Design a key-value store like Redis | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| Design a cache system like Memcached | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| Design a recommendation system like Amazon's | [hulu.com](https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |\n| Design a tinyurl system like Bitly | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |\n| Design a chat app like WhatsApp | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)\n| Design a picture sharing system like Instagram | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |\n| Design the Facebook news feed function | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |\n| Design the Facebook timeline function | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |\n| Design the Facebook chat function | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |",
    "ContentSha": "ufMEAJjeJvG/71zGm1ZrFnYShGruhPDGcpEQX8jnGIY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Các chỉ số hữu ích dựa trên các con số ở trên:\n\n* Đọc tuần tự từ HDD ở tốc độ 30 MB/s\n* Đọc tuần tự từ Ethernet 1 Gbps ở tốc độ 100 MB/s\n* Đọc tuần tự từ SSD ở tốc độ 1 GB/s\n* Đọc tuần tự từ bộ nhớ chính ở tốc độ 4 GB/s\n* 6-7 lượt đi/về toàn cầu mỗi giây\n* 2.000 lượt đi/về mỗi giây trong một trung tâm dữ liệu\n\n#### Hình minh họa các con số độ trễ\n\n![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)\n\n#### Nguồn và tài liệu đọc thêm\n\n* [Những con số độ trễ mà lập trình viên nên biết - 1](https://gist.github.com/jboner/2841832)\n* [Những con số độ trễ mà lập trình viên nên biết - 2](https://gist.github.com/hellerbarde/2843375)\n* [Thiết kế, bài học và lời khuyên khi xây dựng hệ thống phân tán lớn](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)\n* [Lời khuyên Kỹ thuật phần mềm từ việc xây dựng hệ thống phân tán quy mô lớn](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)\n\n### Các câu hỏi phỏng vấn thiết kế hệ thống bổ sung\n\n> Các câu hỏi phỏng vấn thiết kế hệ thống phổ biến, kèm liên kết đến tài liệu hướng dẫn cách giải.\n\n| Câu hỏi | Tài liệu tham khảo |\n|---|---|\n| Thiết kế dịch vụ đồng bộ tập tin như Dropbox | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| Thiết kế công cụ tìm kiếm như Google | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |\n| Thiết kế trình thu thập dữ liệu web có khả năng mở rộng như Google | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |\n| Thiết kế Google Docs | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |\n| Thiết kế kho key-value như Redis | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| Thiết kế hệ thống cache như Memcached | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| Thiết kế hệ thống đề xuất như Amazon | [hulu.com](https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |\n| Thiết kế hệ thống tinyurl như Bitly | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |\n| Thiết kế ứng dụng chat như WhatsApp | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)\n| Thiết kế hệ thống chia sẻ ảnh như Instagram | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |\n| Thiết kế chức năng news feed của Facebook | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |\n| Thiết kế chức năng timeline của Facebook | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |\n| Thiết kế chức năng chat của Facebook | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Các chỉ số hữu ích dựa trên các con số ở trên:"
      },
      {
        "row": 2,
        "rowsha": "eD9fecv8C1FtN9m3TkLw+2+24UTbtO6VqyvPg8JSNKw=",
        "originContent": "Handy metrics based on numbers above:",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* Đọc tuần tự từ HDD ở tốc độ 30 MB/s"
      },
      {
        "row": 4,
        "rowsha": "ht3OgnqSm5EBo9ukcpejXJ3LRFbCMx3PRpml/KISYoo=",
        "originContent": "* Read sequentially from HDD at 30 MB/s",
        "translatedContent": "* Đọc tuần tự từ Ethernet 1 Gbps ở tốc độ 100 MB/s"
      },
      {
        "row": 5,
        "rowsha": "u+lRSWNmLgQwNfqkilfz38jhLXNbB90sXSCly1F8ntc=",
        "originContent": "* Read sequentially from 1 Gbps Ethernet at 100 MB/s",
        "translatedContent": "* Đọc tuần tự từ SSD ở tốc độ 1 GB/s"
      },
      {
        "row": 6,
        "rowsha": "3kvwfvFyTWqDY8gLaD5uSrk/shDtsPk19jC0aMzSIVs=",
        "originContent": "* Read sequentially from SSD at 1 GB/s",
        "translatedContent": "* Đọc tuần tự từ bộ nhớ chính ở tốc độ 4 GB/s"
      },
      {
        "row": 7,
        "rowsha": "dqri5D/YDMthAEWEvYG+8h8gF6wyRdyakLuq/q0xnW0=",
        "originContent": "* Read sequentially from main memory at 4 GB/s",
        "translatedContent": "* 6-7 lượt đi/về toàn cầu mỗi giây"
      },
      {
        "row": 8,
        "rowsha": "xwZWw3s8vqU6oh1Th/KktklV4BA2B1x1gtyoGQqf0R0=",
        "originContent": "* 6-7 world-wide round trips per second",
        "translatedContent": "* 2.000 lượt đi/về mỗi giây trong một trung tâm dữ liệu"
      },
      {
        "row": 9,
        "rowsha": "CvuiLVzVw7LMUyJWWfONGFRImXtkB8UmBy6jycVPxWg=",
        "originContent": "* 2,000 round trips per second within a data center",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Hình minh họa các con số độ trễ"
      },
      {
        "row": 11,
        "rowsha": "ydjGPOgoiaNweMh64ZpijkNTmo1yw6vzz7mLiJGg6No=",
        "originContent": "#### Latency numbers visualized",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)"
      },
      {
        "row": 13,
        "rowsha": "o3/x85NDgw/RDVn0BOuVDqvLWU6gY7OKusFtztcurMM=",
        "originContent": "![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Nguồn và tài liệu đọc thêm"
      },
      {
        "row": 15,
        "rowsha": "yAcCmKF4VrpEVdPP7QGvwQrQvx5nYqkLfEVqvhED8vU=",
        "originContent": "#### Source(s) and further reading",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [Những con số độ trễ mà lập trình viên nên biết - 1](https://gist.github.com/jboner/2841832)"
      },
      {
        "row": 17,
        "rowsha": "vS16QYVy1MaWoRmtt+NizFbMPWPubKu+I3zkhXRhJIA=",
        "originContent": "* [Latency numbers every programmer should know - 1](https://gist.github.com/jboner/2841832)",
        "translatedContent": "* [Những con số độ trễ mà lập trình viên nên biết - 2](https://gist.github.com/hellerbarde/2843375)"
      },
      {
        "row": 18,
        "rowsha": "HVyW0cNcDHpFiJcBUaWWR3pOMsl/iT05gwK9ZLoHrro=",
        "originContent": "* [Latency numbers every programmer should know - 2](https://gist.github.com/hellerbarde/2843375)",
        "translatedContent": "* [Thiết kế, bài học và lời khuyên khi xây dựng hệ thống phân tán lớn](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)"
      },
      {
        "row": 19,
        "rowsha": "6fjPiL66amn4K0pQS3WFhMy5fRrvxY3JAWYq2zAn8wo=",
        "originContent": "* [Designs, lessons, and advice from building large distributed systems](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)",
        "translatedContent": "* [Lời khuyên Kỹ thuật phần mềm từ việc xây dựng hệ thống phân tán quy mô lớn](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)"
      },
      {
        "row": 20,
        "rowsha": "bBBcrkTrIq6iY9+ywuF1kRRPX1UlT4+kuOUTteAB5sY=",
        "originContent": "* [Software Engineering Advice from Building Large-Scale Distributed Systems](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Các câu hỏi phỏng vấn thiết kế hệ thống bổ sung"
      },
      {
        "row": 22,
        "rowsha": "hZhFNPm0q28sVvllxWZbdfO9NFGvFonhZVgwXs8qqOw=",
        "originContent": "### Additional system design interview questions",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "> Các câu hỏi phỏng vấn thiết kế hệ thống phổ biến, kèm liên kết đến tài liệu hướng dẫn cách giải."
      },
      {
        "row": 24,
        "rowsha": "mI7ePEuh8j6xgVO3ahSy4CFa7+K2O+Uhvh746ae+aXo=",
        "originContent": "> Common system design interview questions, with links to resources on how to solve each.",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "| Câu hỏi | Tài liệu tham khảo |"
      },
      {
        "row": 26,
        "rowsha": "sPgBeBncfP1LAM8d0Oknfw0PynNZzOgZYGioZCVO5Jo=",
        "originContent": "| Question | Reference(s) |",
        "translatedContent": "|---|---|"
      },
      {
        "row": 27,
        "rowsha": "QZm6RU1tOug2VxIMK7a9Z07vwN19PNTMhEFx3GclE1s=",
        "originContent": "|---|---|",
        "translatedContent": "| Thiết kế dịch vụ đồng bộ tập tin như Dropbox | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |"
      },
      {
        "row": 28,
        "rowsha": "nmBVhJPMTavYfzX7ghJ83vzClzHyKXLymzhZD5tlNA0=",
        "originContent": "| Design a file sync service like Dropbox | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |",
        "translatedContent": "| Thiết kế công cụ tìm kiếm như Google | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |"
      },
      {
        "row": 29,
        "rowsha": "34WvqZqAay+MKs5sSBbG7ouZI8wa1p2djhAzo33rWp8=",
        "originContent": "| Design a search engine like Google | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |",
        "translatedContent": "| Thiết kế trình thu thập dữ liệu web có khả năng mở rộng như Google | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |"
      },
      {
        "row": 30,
        "rowsha": "/6fqzF+UjOZUTEdkAgsWgOea4fAKWQiYR1IPxxH1e3E=",
        "originContent": "| Design a scalable web crawler like Google | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |",
        "translatedContent": "| Thiết kế Google Docs | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |"
      },
      {
        "row": 31,
        "rowsha": "Xs3hegP9jwc2bNH3wW2/aYK3SDbyTxg9SqpPi8nmExs=",
        "originContent": "| Design Google docs | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |",
        "translatedContent": "| Thiết kế kho key-value như Redis | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |"
      },
      {
        "row": 32,
        "rowsha": "olMvUlgDzkjGPqlZaBSTF0xvDvFeeI4/bQPr9qBAOKQ=",
        "originContent": "| Design a key-value store like Redis | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |",
        "translatedContent": "| Thiết kế hệ thống cache như Memcached | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |"
      },
      {
        "row": 33,
        "rowsha": "/Qpls+PP87/+NBAf3ckJhQSAtkbk9G1/zt1jM4Q9rkA=",
        "originContent": "| Design a cache system like Memcached | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |",
        "translatedContent": "| Thiết kế hệ thống đề xuất như Amazon | [hulu.com](https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |"
      },
      {
        "row": 34,
        "rowsha": "EZVuNe9bE9f1W2jnIz+XPDMTcM86b+GVv4C23g7As/A=",
        "originContent": "| Design a recommendation system like Amazon's | [hulu.com](https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |",
        "translatedContent": "| Thiết kế hệ thống tinyurl như Bitly | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |"
      },
      {
        "row": 35,
        "rowsha": "Dtq3j3ZuP6YMSQFRtZVaYgEzVGG2V+eID3ndmj1Ans0=",
        "originContent": "| Design a tinyurl system like Bitly | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |",
        "translatedContent": "| Thiết kế ứng dụng chat như WhatsApp | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)"
      },
      {
        "row": 36,
        "rowsha": "Ywzj+QdlwFGrDWOB50eIBrwnX/hpwLYPbE3wL42WStA=",
        "originContent": "| Design a chat app like WhatsApp | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)",
        "translatedContent": "| Thiết kế hệ thống chia sẻ ảnh như Instagram | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |"
      },
      {
        "row": 37,
        "rowsha": "b122D6DRoLAT3rPpXKu3RHXoE2SyEHvf7UWH+ULMnaI=",
        "originContent": "| Design a picture sharing system like Instagram | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |",
        "translatedContent": "| Thiết kế chức năng news feed của Facebook | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |"
      },
      {
        "row": 38,
        "rowsha": "n5wkhGcBv+VjeGTpQNIzKWXD4Ya0RgR9ohx8BUwIDLw=",
        "originContent": "| Design the Facebook news feed function | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |",
        "translatedContent": "| Thiết kế chức năng timeline của Facebook | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |"
      },
      {
        "row": 39,
        "rowsha": "dTNxBUvOh9/YOSQcS3ROtWSrbE4FHO4BBY314KA+qvM=",
        "originContent": "| Design the Facebook timeline function | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |",
        "translatedContent": "| Thiết kế chức năng chat của Facebook | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |"
      },
      {
        "row": 40,
        "rowsha": "Q1CaaqMvLArgnZ5ckZbSzNntPkWLZW/e6MusBSkqMJg=",
        "originContent": "| Design the Facebook chat function | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 56,
    "Content": "| Design a graph search function like Facebook's | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |\n| Design a content delivery network like CloudFlare | [figshare.com](https://figshare.com/articles/Globally_distributed_content_delivery/6605972) |\n| Design a trending topic system like Twitter's | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |\n| Design a random ID generation system | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |\n| Return the top k requests during a time interval | [cs.ucsb.edu](https://www.cs.ucsb.edu/sites/default/files/documents/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |\n| Design a system that serves data from multiple data centers | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |\n| Design an online multiplayer card game | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |\n| Design a garbage collection system | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |\n| Design an API rate limiter | [https://stripe.com/blog/](https://stripe.com/blog/rate-limiters) |\n| Design a Stock Exchange (like NASDAQ or Binance) | [Jane Street](https://youtu.be/b1e4t2k2KJY)<br/>[Golang Implementation](https://around25.com/blog/building-a-trading-engine-for-a-crypto-exchange/)<br/>[Go Implementation](http://bhomnick.net/building-a-simple-limit-order-in-go/) |\n| Add a system design question | [Contribute](#contributing) |\n\n### Real world architectures\n\n> Articles on how real world systems are designed.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/TcUo2fw.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>Source: Twitter timelines at scale</a></i>\n</p>\n\n**Don't focus on nitty gritty details for the following articles, instead:**\n\n* Identify shared principles, common technologies, and patterns within these articles\n* Study what problems are solved by each component, where it works, where it doesn't\n* Review the lessons learned\n\n|Type | System | Reference(s) |\n|---|---|---|\n| Data processing | **MapReduce** - Distributed data processing from Google | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |\n| Data processing | **Spark** - Distributed data processing from Databricks | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |\n| Data processing | **Storm** - Distributed data processing from Twitter | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |\n| | | |\n| Data store | **Bigtable** - Distributed column-oriented database from Google | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |\n| Data store | **HBase** - Open source implementation of Bigtable | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |\n| Data store | **Cassandra** - Distributed column-oriented database from Facebook | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)\n| Data store | **DynamoDB** - Document-oriented database from Amazon | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |\n| Data store | **MongoDB** - Document-oriented database | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |\n| Data store | **Spanner** - Globally-distributed database from Google | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |",
    "ContentSha": "5hNQndfbSnlP1RLa/GyRt8pzzHWJN34J9g6lOThi724=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "| Thiết kế một chức năng tìm kiếm đồ thị giống Facebook | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |\n| Thiết kế một mạng phân phối nội dung giống CloudFlare | [figshare.com](https://figshare.com/articles/Globally_distributed_content_delivery/6605972) |\n| Thiết kế hệ thống chủ đề thịnh hành giống Twitter | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |\n| Thiết kế hệ thống sinh ID ngẫu nhiên | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |\n| Trả về k yêu cầu hàng đầu trong một khoảng thời gian | [cs.ucsb.edu](https://www.cs.ucsb.edu/sites/default/files/documents/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |\n| Thiết kế hệ thống phục vụ dữ liệu từ nhiều trung tâm dữ liệu | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |\n| Thiết kế trò chơi bài đa người chơi trực tuyến | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |\n| Thiết kế hệ thống thu gom rác | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |\n| Thiết kế bộ giới hạn tần suất gọi API | [https://stripe.com/blog/](https://stripe.com/blog/rate-limiters) |\n| Thiết kế một Sàn giao dịch chứng khoán (như NASDAQ hoặc Binance) | [Jane Street](https://youtu.be/b1e4t2k2KJY)<br/>[Golang Implementation](https://around25.com/blog/building-a-trading-engine-for-a-crypto-exchange/)<br/>[Go Implementation](http://bhomnick.net/building-a-simple-limit-order-in-go/) |\n| Thêm một câu hỏi thiết kế hệ thống | [Đóng góp](#contributing) |\n\n### Kiến trúc thực tế\n\n> Các bài viết về cách hệ thống thực tế được thiết kế.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/TcUo2fw.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>Nguồn: Twitter timelines at scale</a></i>\n</p>\n\n**Đừng tập trung vào chi tiết vụn vặt trong các bài viết sau, thay vào đó:**\n\n* Xác định các nguyên lý chung, công nghệ phổ biến và mẫu thiết kế trong các bài viết này\n* Tìm hiểu các vấn đề được giải quyết bởi từng thành phần, điểm mạnh, điểm yếu\n* Xem lại các bài học kinh nghiệm\n\n|Loại | Hệ thống | Tài liệu tham khảo |\n|---|---|---|\n| Xử lý dữ liệu | **MapReduce** - Xử lý dữ liệu phân tán từ Google | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |\n| Xử lý dữ liệu | **Spark** - Xử lý dữ liệu phân tán từ Databricks | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |\n| Xử lý dữ liệu | **Storm** - Xử lý dữ liệu phân tán từ Twitter | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |\n| | | |\n| Kho dữ liệu | **Bigtable** - Cơ sở dữ liệu cột phân tán từ Google | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |\n| Kho dữ liệu | **HBase** - Triển khai mã nguồn mở của Bigtable | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |\n| Kho dữ liệu | **Cassandra** - Cơ sở dữ liệu cột phân tán từ Facebook | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)\n| Kho dữ liệu | **DynamoDB** - Cơ sở dữ liệu hướng tài liệu từ Amazon | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |\n| Kho dữ liệu | **MongoDB** - Cơ sở dữ liệu hướng tài liệu | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |\n| Kho dữ liệu | **Spanner** - Cơ sở dữ liệu phân tán toàn cầu từ Google | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "IT1XtJeBZae70/QHqrdlV4vAWb+QqI2jlmftFbWAElY=",
        "originContent": "| Design a graph search function like Facebook's | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |",
        "translatedContent": "| Thiết kế một chức năng tìm kiếm đồ thị giống Facebook | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |"
      },
      {
        "row": 2,
        "rowsha": "3jHFgkxGAhEskpPiYJjXKH5nb3N0Y9abHCZtryOfuyM=",
        "originContent": "| Design a content delivery network like CloudFlare | [figshare.com](https://figshare.com/articles/Globally_distributed_content_delivery/6605972) |",
        "translatedContent": "| Thiết kế một mạng phân phối nội dung giống CloudFlare | [figshare.com](https://figshare.com/articles/Globally_distributed_content_delivery/6605972) |"
      },
      {
        "row": 3,
        "rowsha": "dvC4Bb04KKuQAX/SE4QlhXtZn23ZcsJG+gGiIDQtGj8=",
        "originContent": "| Design a trending topic system like Twitter's | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |",
        "translatedContent": "| Thiết kế hệ thống chủ đề thịnh hành giống Twitter | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |"
      },
      {
        "row": 4,
        "rowsha": "0eNZVciq8x2bp425t+4qWN637WQuolv7FHB5tMar8HA=",
        "originContent": "| Design a random ID generation system | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |",
        "translatedContent": "| Thiết kế hệ thống sinh ID ngẫu nhiên | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |"
      },
      {
        "row": 5,
        "rowsha": "45+wk60ZP83bcmrcYyFcJSHT/lM18ANjO3WW5Go7/1k=",
        "originContent": "| Return the top k requests during a time interval | [cs.ucsb.edu](https://www.cs.ucsb.edu/sites/default/files/documents/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |",
        "translatedContent": "| Trả về k yêu cầu hàng đầu trong một khoảng thời gian | [cs.ucsb.edu](https://www.cs.ucsb.edu/sites/default/files/documents/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |"
      },
      {
        "row": 6,
        "rowsha": "KdkrqOeWJl9D6mzA7W/bK825APi/8xOv2edoQ4vcKNc=",
        "originContent": "| Design a system that serves data from multiple data centers | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |",
        "translatedContent": "| Thiết kế hệ thống phục vụ dữ liệu từ nhiều trung tâm dữ liệu | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |"
      },
      {
        "row": 7,
        "rowsha": "huC3QZhNOtFN3NwLfG4sZc9UCaubTh+yN9/uLxLixqo=",
        "originContent": "| Design an online multiplayer card game | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |",
        "translatedContent": "| Thiết kế trò chơi bài đa người chơi trực tuyến | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |"
      },
      {
        "row": 8,
        "rowsha": "i7BkWG/MMoMjuckb2GZ2oLIWSBm/rU/7yVG2pVenUEU=",
        "originContent": "| Design a garbage collection system | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |",
        "translatedContent": "| Thiết kế hệ thống thu gom rác | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |"
      },
      {
        "row": 9,
        "rowsha": "tyd71PZC9weXz3rApqnGoMUNNtWfeRrR/10kUsJKDJU=",
        "originContent": "| Design an API rate limiter | [https://stripe.com/blog/](https://stripe.com/blog/rate-limiters) |",
        "translatedContent": "| Thiết kế bộ giới hạn tần suất gọi API | [https://stripe.com/blog/](https://stripe.com/blog/rate-limiters) |"
      },
      {
        "row": 10,
        "rowsha": "CtSVzl/12DKjtMvkoqLL7rU3eGC6mgAPqC17fs5xZoE=",
        "originContent": "| Design a Stock Exchange (like NASDAQ or Binance) | [Jane Street](https://youtu.be/b1e4t2k2KJY)<br/>[Golang Implementation](https://around25.com/blog/building-a-trading-engine-for-a-crypto-exchange/)<br/>[Go Implementation](http://bhomnick.net/building-a-simple-limit-order-in-go/) |",
        "translatedContent": "| Thiết kế một Sàn giao dịch chứng khoán (như NASDAQ hoặc Binance) | [Jane Street](https://youtu.be/b1e4t2k2KJY)<br/>[Golang Implementation](https://around25.com/blog/building-a-trading-engine-for-a-crypto-exchange/)<br/>[Go Implementation](http://bhomnick.net/building-a-simple-limit-order-in-go/) |"
      },
      {
        "row": 11,
        "rowsha": "rxZ/1ZcyqiWhJo83Zu2JZADx1pvrsk1TTCEtxi+B8tg=",
        "originContent": "| Add a system design question | [Contribute](#contributing) |",
        "translatedContent": "| Thêm một câu hỏi thiết kế hệ thống | [Đóng góp](#contributing) |"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "Za1VkYtWyAeLgmA6imOd8gk60ytSu4VwYmu6crWZDag=",
        "originContent": "### Real world architectures",
        "translatedContent": "### Kiến trúc thực tế"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "TIT1XP70oOG3zxrI4jrv5VqD4QZnKaBWTJqDwgcaFlQ=",
        "originContent": "> Articles on how real world systems are designed.",
        "translatedContent": "> Các bài viết về cách hệ thống thực tế được thiết kế."
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "+/a9XmPwQixGFroME/GMEOLpReZZV4ARosR9orAplJY=",
        "originContent": "<p align=\"center\">",
        "translatedContent": "<p align=\"center\">"
      },
      {
        "row": 18,
        "rowsha": "s3tM/DD7OHnzlaZpiaduNV2zSpU1YQqMo3uR3fMD2pM=",
        "originContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/TcUo2fw.png\">",
        "translatedContent": "  <img src=\"https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/TcUo2fw.png\">"
      },
      {
        "row": 19,
        "rowsha": "fg0QoxpK2vHpC4Hk2JStz8AU27gMhcHNe3pAop2mDsA=",
        "originContent": "  <br/>",
        "translatedContent": "  <br/>"
      },
      {
        "row": 20,
        "rowsha": "Pw6wsGWicX588U1PD/OX9d8HlZ28pWRe0zZe1vMAy98=",
        "originContent": "  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>Source: Twitter timelines at scale</a></i>",
        "translatedContent": "  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>Nguồn: Twitter timelines at scale</a></i>"
      },
      {
        "row": 21,
        "rowsha": "dSdvPNAZSmR86FDDSF6tkQUCVfI9qmACHOR5tThOetY=",
        "originContent": "</p>",
        "translatedContent": "</p>"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "J0GGf6cvtCVUtLSo2amy0x1e3CCZKIWA/PskS93mKTQ=",
        "originContent": "**Don't focus on nitty gritty details for the following articles, instead:**",
        "translatedContent": "**Đừng tập trung vào chi tiết vụn vặt trong các bài viết sau, thay vào đó:**"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "xEQQ8Hj8/t2Cr5EKqxyF/jD2Y3/dEwbmweWFWfgsdt0=",
        "originContent": "* Identify shared principles, common technologies, and patterns within these articles",
        "translatedContent": "* Xác định các nguyên lý chung, công nghệ phổ biến và mẫu thiết kế trong các bài viết này"
      },
      {
        "row": 26,
        "rowsha": "X+LAbnAEjaTr3sVvbCiZ9y5rwJPeV7LDivxxNg0OI6c=",
        "originContent": "* Study what problems are solved by each component, where it works, where it doesn't",
        "translatedContent": "* Tìm hiểu các vấn đề được giải quyết bởi từng thành phần, điểm mạnh, điểm yếu"
      },
      {
        "row": 27,
        "rowsha": "MPX4qM5aUfJxw9M21X65qnIN8Lxi/laKp8DFjV0Kfgw=",
        "originContent": "* Review the lessons learned",
        "translatedContent": "* Xem lại các bài học kinh nghiệm"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "B3Sd8qryMj1Dp2eMPiLBsVrszXEejVpT96dKoUXu3/M=",
        "originContent": "|Type | System | Reference(s) |",
        "translatedContent": "|Loại | Hệ thống | Tài liệu tham khảo |"
      },
      {
        "row": 30,
        "rowsha": "I8ygK3TzhkY++iR5bHqQEbDSyT8MOLTRXV0nYgW1m0M=",
        "originContent": "|---|---|---|",
        "translatedContent": "|---|---|---|"
      },
      {
        "row": 31,
        "rowsha": "ndwepg+ynIt0WiFogpwQBqBSDNu2IzZau/9mdj8kNXE=",
        "originContent": "| Data processing | **MapReduce** - Distributed data processing from Google | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |",
        "translatedContent": "| Xử lý dữ liệu | **MapReduce** - Xử lý dữ liệu phân tán từ Google | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |"
      },
      {
        "row": 32,
        "rowsha": "K8K88AWwcvHKoRLmmMGtcXQ/G5NGMHTHTQx+cFO31T8=",
        "originContent": "| Data processing | **Spark** - Distributed data processing from Databricks | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |",
        "translatedContent": "| Xử lý dữ liệu | **Spark** - Xử lý dữ liệu phân tán từ Databricks | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |"
      },
      {
        "row": 33,
        "rowsha": "UI8l10rrPsV+pJxbvfkUJVKHiPFlWxuMZejNpfaihOM=",
        "originContent": "| Data processing | **Storm** - Distributed data processing from Twitter | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |",
        "translatedContent": "| Xử lý dữ liệu | **Storm** - Xử lý dữ liệu phân tán từ Twitter | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |"
      },
      {
        "row": 34,
        "rowsha": "p/ErXrnMGSZC77N6DnBjWAETa1ojTSEipbqwpQgRtH0=",
        "originContent": "| | | |",
        "translatedContent": "| | | |"
      },
      {
        "row": 35,
        "rowsha": "s10nia0DhWv01UO1oYnmM+58lFjbSlq1FrlHudaj+6E=",
        "originContent": "| Data store | **Bigtable** - Distributed column-oriented database from Google | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |",
        "translatedContent": "| Kho dữ liệu | **Bigtable** - Cơ sở dữ liệu cột phân tán từ Google | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |"
      },
      {
        "row": 36,
        "rowsha": "FbCZHlV+12FNAq6QAZT5mb4ruPuWfer6ozzWM9l8+jI=",
        "originContent": "| Data store | **HBase** - Open source implementation of Bigtable | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |",
        "translatedContent": "| Kho dữ liệu | **HBase** - Triển khai mã nguồn mở của Bigtable | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |"
      },
      {
        "row": 37,
        "rowsha": "EctBko8smWSUES8Qe7DIGyELviTCwHL/I3NeofnVg5w=",
        "originContent": "| Data store | **Cassandra** - Distributed column-oriented database from Facebook | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)",
        "translatedContent": "| Kho dữ liệu | **Cassandra** - Cơ sở dữ liệu cột phân tán từ Facebook | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)"
      },
      {
        "row": 38,
        "rowsha": "116lS0W90997w1whxX/8PlSu48bUzif3Y05j44r8mqc=",
        "originContent": "| Data store | **DynamoDB** - Document-oriented database from Amazon | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |",
        "translatedContent": "| Kho dữ liệu | **DynamoDB** - Cơ sở dữ liệu hướng tài liệu từ Amazon | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |"
      },
      {
        "row": 39,
        "rowsha": "qaUQcdPbdrR3ZWAswil875kJnzNZWk69hKNnF9OpT6A=",
        "originContent": "| Data store | **MongoDB** - Document-oriented database | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |",
        "translatedContent": "| Kho dữ liệu | **MongoDB** - Cơ sở dữ liệu hướng tài liệu | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |"
      },
      {
        "row": 40,
        "rowsha": "7mPnQzxpbjV0NUEW8XDi2rGyeDsGsoxhVdvTPh8tS20=",
        "originContent": "| Data store | **Spanner** - Globally-distributed database from Google | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |",
        "translatedContent": "| Kho dữ liệu | **Spanner** - Cơ sở dữ liệu phân tán toàn cầu từ Google | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 57,
    "Content": "| Data store | **Memcached** - Distributed memory caching system | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| Data store | **Redis** - Distributed memory caching system with persistence and value types | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| | | |\n| File system | **Google File System (GFS)** - Distributed file system | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |\n| File system | **Hadoop File System (HDFS)** - Open source implementation of GFS | [apache.org](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html) |\n| | | |\n| Misc | **Chubby** - Lock service for loosely-coupled distributed systems from Google | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |\n| Misc | **Dapper** - Distributed systems tracing infrastructure | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)\n| Misc | **Kafka** - Pub/sub message queue from LinkedIn | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |\n| Misc | **Zookeeper** - Centralized infrastructure and services enabling synchronization | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |\n| | Add an architecture | [Contribute](#contributing) |\n\n### Company architectures\n\n| Company | Reference(s) |\n|---|---|\n| Amazon | [Amazon architecture](http://highscalability.com/amazon-architecture) |\n| Cinchcast | [Producing 1,500 hours of audio every day](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |\n| DataSift | [Realtime datamining At 120,000 tweets per second](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |\n| Dropbox | [How we've scaled Dropbox](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| ESPN | [Operating At 100,000 duh nuh nuhs per second](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |\n| Google | [Google architecture](http://highscalability.com/google-architecture) |\n| Instagram | [14 million users, terabytes of photos](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[What powers Instagram](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |\n| Justin.tv | [Justin.Tv's live video broadcasting architecture](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |\n| Facebook | [Scaling memcached at Facebook](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Facebook’s distributed data store for the social graph](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Facebook’s photo storage](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf)<br/>[How Facebook Live Streams To 800,000 Simultaneous Viewers](http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html) |\n| Flickr | [Flickr architecture](http://highscalability.com/flickr-architecture) |\n| Mailbox | [From 0 to one million users in 6 weeks](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |\n| Netflix | [A 360 Degree View Of The Entire Netflix Stack](http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html)<br/>[Netflix: What Happens When You Press Play?](http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html) |\n| Pinterest | [From 0 To 10s of billions of page views a month](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[18 million visitors, 10x growth, 12 employees](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |\n| Playfish | [50 million monthly users and growing](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |\n| PlentyOfFish | [PlentyOfFish architecture](http://highscalability.com/plentyoffish-architecture) |\n| Salesforce | [How they handle 1.3 billion transactions a day](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |\n| Stack Overflow | [Stack Overflow architecture](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |\n| TripAdvisor | [40M visitors, 200M dynamic page views, 30TB data](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |\n| Tumblr | [15 billion page views a month](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |\n| Twitter | [Making Twitter 10000 percent faster](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[Storing 250 million tweets a day using MySQL](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150M active users, 300K QPS, a 22 MB/S firehose](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[Timelines at scale](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Big and small data at Twitter](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Operations at Twitter: scaling beyond 100 million users](https://www.youtube.com/watch?v=z8LU0Cj6BOU)<br/>[How Twitter Handles 3,000 Images Per Second](http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html) |\n| Uber | [How Uber scales their real-time market platform](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html)<br/>[Lessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories](http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html) |\n| WhatsApp | [The WhatsApp architecture Facebook bought for $19 billion](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |\n| YouTube | [YouTube scalability](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[YouTube architecture](http://highscalability.com/youtube-architecture) |\n",
    "ContentSha": "HJ43cGa2ts5Z1+EHjvCRBV9mq+PjUY5QXfwqLIs80oA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "| Kho dữ liệu | **Memcached** - Hệ thống bộ nhớ đệm phân tán | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| Kho dữ liệu | **Redis** - Hệ thống bộ nhớ đệm phân tán có khả năng lưu trữ lâu dài và kiểu giá trị | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| | | |\n| Hệ thống tập tin | **Google File System (GFS)** - Hệ thống tập tin phân tán | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |\n| Hệ thống tập tin | **Hadoop File System (HDFS)** - Phiên bản mã nguồn mở của GFS | [apache.org](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html) |\n| | | |\n| Khác | **Chubby** - Dịch vụ khóa cho các hệ thống phân tán liên kết lỏng của Google | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |\n| Khác | **Dapper** - Hạ tầng truy vết hệ thống phân tán | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)\n| Khác | **Kafka** - Hàng đợi thông điệp pub/sub từ LinkedIn | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |\n| Khác | **Zookeeper** - Hạ tầng và dịch vụ tập trung hỗ trợ đồng bộ hóa | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |\n| | Thêm kiến trúc | [Đóng góp](#contributing) |\n\n### Kiến trúc của các công ty\n\n| Công ty | Tham khảo |\n|---|---|\n| Amazon | [Kiến trúc Amazon](http://highscalability.com/amazon-architecture) |\n| Cinchcast | [Sản xuất 1.500 giờ âm thanh mỗi ngày](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |\n| DataSift | [Khai thác dữ liệu thời gian thực với 120.000 tweet mỗi giây](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |\n| Dropbox | [Cách Dropbox mở rộng quy mô](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| ESPN | [Vận hành với 100.000 duh nuh nuhs mỗi giây](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |\n| Google | [Kiến trúc Google](http://highscalability.com/google-architecture) |\n| Instagram | [14 triệu người dùng, hàng terabyte ảnh](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[Công nghệ phía sau Instagram](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |\n| Justin.tv | [Kiến trúc phát video trực tuyến của Justin.tv](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |\n| Facebook | [Mở rộng memcached tại Facebook](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Kho dữ liệu phân tán cho social graph của Facebook](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Lưu trữ ảnh của Facebook](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf)<br/>[Cách Facebook Live phát trực tiếp đến 800.000 người xem đồng thời](http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html) |\n| Flickr | [Kiến trúc Flickr](http://highscalability.com/flickr-architecture) |\n| Mailbox | [Từ 0 đến một triệu người dùng trong 6 tuần](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |\n| Netflix | [Toàn cảnh hệ thống Netflix](http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html)<br/>[Netflix: Chuyện gì xảy ra khi bạn nhấn Play?](http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html) |\n| Pinterest | [Từ 0 đến hàng chục tỷ lượt xem trang mỗi tháng](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[18 triệu khách truy cập, tăng trưởng 10 lần, 12 nhân viên](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |\n| Playfish | [50 triệu người dùng hàng tháng và tiếp tục tăng trưởng](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |\n| PlentyOfFish | [Kiến trúc PlentyOfFish](http://highscalability.com/plentyoffish-architecture) |\n| Salesforce | [Cách họ xử lý 1,3 tỷ giao dịch mỗi ngày](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |\n| Stack Overflow | [Kiến trúc Stack Overflow](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |\n| TripAdvisor | [40 triệu khách truy cập, 200 triệu lượt xem trang động, 30TB dữ liệu](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |\n| Tumblr | [15 tỷ lượt xem trang mỗi tháng](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |\n| Twitter | [Làm Twitter nhanh hơn 10.000 lần](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[Lưu trữ 250 triệu tweet mỗi ngày bằng MySQL](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150 triệu người dùng hoạt động, 300K QPS, 22 MB/S dữ liệu lớn](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[Timeline ở quy mô lớn](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Dữ liệu lớn và nhỏ tại Twitter](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Vận hành tại Twitter: mở rộng vượt quá 100 triệu người dùng](https://www.youtube.com/watch?v=z8LU0Cj6BOU)<br/>[Cách Twitter xử lý 3.000 ảnh mỗi giây](http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html) |\n| Uber | [Cách Uber mở rộng nền tảng thị trường thời gian thực](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html)<br/>[Bài học từ việc mở rộng Uber lên 2000 kỹ sư, 1000 dịch vụ, và 8000 kho Git](http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html) |\n| WhatsApp | [Kiến trúc WhatsApp mà Facebook mua với giá 19 tỷ USD](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |\n| YouTube | [Khả năng mở rộng của YouTube](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[Kiến trúc YouTube](http://highscalability.com/youtube-architecture) |\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "5XHl3BTnVxhA6zftceuIdcJIvqsoDjeQSPbwjAv1OmI=",
        "originContent": "| Data store | **Memcached** - Distributed memory caching system | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |",
        "translatedContent": "| Kho dữ liệu | **Memcached** - Hệ thống bộ nhớ đệm phân tán | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |"
      },
      {
        "row": 2,
        "rowsha": "so7UA0edsS9fachjwa/oV6wjIyUW7sypm0TmT+Fiylw=",
        "originContent": "| Data store | **Redis** - Distributed memory caching system with persistence and value types | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |",
        "translatedContent": "| Kho dữ liệu | **Redis** - Hệ thống bộ nhớ đệm phân tán có khả năng lưu trữ lâu dài và kiểu giá trị | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |"
      },
      {
        "row": 3,
        "rowsha": "p/ErXrnMGSZC77N6DnBjWAETa1ojTSEipbqwpQgRtH0=",
        "originContent": "| | | |",
        "translatedContent": "| | | |"
      },
      {
        "row": 4,
        "rowsha": "3oWxuRMPbHKQGsTECtKNryhofOr6iI3UBQLfrVK++00=",
        "originContent": "| File system | **Google File System (GFS)** - Distributed file system | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |",
        "translatedContent": "| Hệ thống tập tin | **Google File System (GFS)** - Hệ thống tập tin phân tán | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |"
      },
      {
        "row": 5,
        "rowsha": "A7fq9KC4kInUlQQ21YIv0jLmPYr+roXFYuEcv2sW5gU=",
        "originContent": "| File system | **Hadoop File System (HDFS)** - Open source implementation of GFS | [apache.org](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html) |",
        "translatedContent": "| Hệ thống tập tin | **Hadoop File System (HDFS)** - Phiên bản mã nguồn mở của GFS | [apache.org](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html) |"
      },
      {
        "row": 6,
        "rowsha": "p/ErXrnMGSZC77N6DnBjWAETa1ojTSEipbqwpQgRtH0=",
        "originContent": "| | | |",
        "translatedContent": "| | | |"
      },
      {
        "row": 7,
        "rowsha": "u2aPRWE0Ib9VuI4sc6M4gFcrEU/bN/j4mGDu6EaSMj8=",
        "originContent": "| Misc | **Chubby** - Lock service for loosely-coupled distributed systems from Google | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |",
        "translatedContent": "| Khác | **Chubby** - Dịch vụ khóa cho các hệ thống phân tán liên kết lỏng của Google | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |"
      },
      {
        "row": 8,
        "rowsha": "cbcggBPx8qCHeUtqfFOtRxhN+pPFNIGRxdjz02iMZiY=",
        "originContent": "| Misc | **Dapper** - Distributed systems tracing infrastructure | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)",
        "translatedContent": "| Khác | **Dapper** - Hạ tầng truy vết hệ thống phân tán | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)"
      },
      {
        "row": 9,
        "rowsha": "cCqZB2Hts8Iu7CNT2pKVQI8qB7IC0INbCbTQTyPHiDE=",
        "originContent": "| Misc | **Kafka** - Pub/sub message queue from LinkedIn | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |",
        "translatedContent": "| Khác | **Kafka** - Hàng đợi thông điệp pub/sub từ LinkedIn | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |"
      },
      {
        "row": 10,
        "rowsha": "KwS7raoMtjTNKhzqbPaXTnitrTKOi2D6FnNeLsY2X0c=",
        "originContent": "| Misc | **Zookeeper** - Centralized infrastructure and services enabling synchronization | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |",
        "translatedContent": "| Khác | **Zookeeper** - Hạ tầng và dịch vụ tập trung hỗ trợ đồng bộ hóa | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |"
      },
      {
        "row": 11,
        "rowsha": "dwWcrWXxdp2Vzr7uSHJkm2NAali9XO1T2Mu+aN78kh8=",
        "originContent": "| | Add an architecture | [Contribute](#contributing) |",
        "translatedContent": "| | Thêm kiến trúc | [Đóng góp](#contributing) |"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "afVdDjUEYMKR1hdy83bZUv3+vQrv4YVEx4BhpWdzehY=",
        "originContent": "### Company architectures",
        "translatedContent": "### Kiến trúc của các công ty"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "DC60NfhUoQRLMlpTp0kWWr69V8dGiHY0luvJerq6qAM=",
        "originContent": "| Company | Reference(s) |",
        "translatedContent": "| Công ty | Tham khảo |"
      },
      {
        "row": 16,
        "rowsha": "QZm6RU1tOug2VxIMK7a9Z07vwN19PNTMhEFx3GclE1s=",
        "originContent": "|---|---|",
        "translatedContent": "|---|---|"
      },
      {
        "row": 17,
        "rowsha": "hhzenP6hBNCHjVIR/V1z9i5u+6Gz215qDhZ4m/QO2ME=",
        "originContent": "| Amazon | [Amazon architecture](http://highscalability.com/amazon-architecture) |",
        "translatedContent": "| Amazon | [Kiến trúc Amazon](http://highscalability.com/amazon-architecture) |"
      },
      {
        "row": 18,
        "rowsha": "YTrqqn6zgSTZqU8rMEi6n4+jvU+QOfVmPKXNW2F2+fw=",
        "originContent": "| Cinchcast | [Producing 1,500 hours of audio every day](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |",
        "translatedContent": "| Cinchcast | [Sản xuất 1.500 giờ âm thanh mỗi ngày](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |"
      },
      {
        "row": 19,
        "rowsha": "pmVmY9IM5FLH1l7XSg05fh38ZP+My/OoiJGEAsbJ2qc=",
        "originContent": "| DataSift | [Realtime datamining At 120,000 tweets per second](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |",
        "translatedContent": "| DataSift | [Khai thác dữ liệu thời gian thực với 120.000 tweet mỗi giây](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |"
      },
      {
        "row": 20,
        "rowsha": "G+2ZKjeV2JEB4aNQe152thV5ADAdLRU7Lfe54ElB5HE=",
        "originContent": "| Dropbox | [How we've scaled Dropbox](https://www.youtube.com/watch?v=PE4gwstWhmc) |",
        "translatedContent": "| Dropbox | [Cách Dropbox mở rộng quy mô](https://www.youtube.com/watch?v=PE4gwstWhmc) |"
      },
      {
        "row": 21,
        "rowsha": "uAIZHPjhJZK6LQQ5UI6+M59o6/S1aAKX1WU0AeWah3w=",
        "originContent": "| ESPN | [Operating At 100,000 duh nuh nuhs per second](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |",
        "translatedContent": "| ESPN | [Vận hành với 100.000 duh nuh nuhs mỗi giây](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |"
      },
      {
        "row": 22,
        "rowsha": "SP3mC9R+ji63RBAx2cQqOnjM6sboxLcFrIGSWBYS/6o=",
        "originContent": "| Google | [Google architecture](http://highscalability.com/google-architecture) |",
        "translatedContent": "| Google | [Kiến trúc Google](http://highscalability.com/google-architecture) |"
      },
      {
        "row": 23,
        "rowsha": "dGy1y5O5qrjQs1u9xA9LeqqHTgVTFbF6lbuIR3EpKzc=",
        "originContent": "| Instagram | [14 million users, terabytes of photos](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[What powers Instagram](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |",
        "translatedContent": "| Instagram | [14 triệu người dùng, hàng terabyte ảnh](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[Công nghệ phía sau Instagram](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |"
      },
      {
        "row": 24,
        "rowsha": "E7hk2X4F3qX6sCaU9DXv2uit+2B/83/QzWD+BuYUmZ8=",
        "originContent": "| Justin.tv | [Justin.Tv's live video broadcasting architecture](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |",
        "translatedContent": "| Justin.tv | [Kiến trúc phát video trực tuyến của Justin.tv](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |"
      },
      {
        "row": 25,
        "rowsha": "fhu0F5wWKSUFgZ6Z+3S2C2xjHat9JsGYmvSOHbbETS0=",
        "originContent": "| Facebook | [Scaling memcached at Facebook](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Facebook’s distributed data store for the social graph](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Facebook’s photo storage](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf)<br/>[How Facebook Live Streams To 800,000 Simultaneous Viewers](http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html) |",
        "translatedContent": "| Facebook | [Mở rộng memcached tại Facebook](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Kho dữ liệu phân tán cho social graph của Facebook](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Lưu trữ ảnh của Facebook](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf)<br/>[Cách Facebook Live phát trực tiếp đến 800.000 người xem đồng thời](http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html) |"
      },
      {
        "row": 26,
        "rowsha": "0bQ7V/Spk+IOIWY21Az3B0IPLSb2XvVRJ4BKX6MPJ1M=",
        "originContent": "| Flickr | [Flickr architecture](http://highscalability.com/flickr-architecture) |",
        "translatedContent": "| Flickr | [Kiến trúc Flickr](http://highscalability.com/flickr-architecture) |"
      },
      {
        "row": 27,
        "rowsha": "75YrA6Pw4bf7N79fSBayp/x1JDqzYAAOBjmbZMs2awI=",
        "originContent": "| Mailbox | [From 0 to one million users in 6 weeks](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |",
        "translatedContent": "| Mailbox | [Từ 0 đến một triệu người dùng trong 6 tuần](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |"
      },
      {
        "row": 28,
        "rowsha": "IO+MNpPb3VV5H/2Q2HAJjxMqBLRUY9C2Z47mogK3c6E=",
        "originContent": "| Netflix | [A 360 Degree View Of The Entire Netflix Stack](http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html)<br/>[Netflix: What Happens When You Press Play?](http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html) |",
        "translatedContent": "| Netflix | [Toàn cảnh hệ thống Netflix](http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html)<br/>[Netflix: Chuyện gì xảy ra khi bạn nhấn Play?](http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html) |"
      },
      {
        "row": 29,
        "rowsha": "Y38/iHOhRdAeAOLjuN7Iqu+R0SyAotO75lftLR6Xky4=",
        "originContent": "| Pinterest | [From 0 To 10s of billions of page views a month](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[18 million visitors, 10x growth, 12 employees](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |",
        "translatedContent": "| Pinterest | [Từ 0 đến hàng chục tỷ lượt xem trang mỗi tháng](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[18 triệu khách truy cập, tăng trưởng 10 lần, 12 nhân viên](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |"
      },
      {
        "row": 30,
        "rowsha": "sdXZchVk+fXHbieeR7YkzNrXOSXQI9pH85SKqNXYb1s=",
        "originContent": "| Playfish | [50 million monthly users and growing](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |",
        "translatedContent": "| Playfish | [50 triệu người dùng hàng tháng và tiếp tục tăng trưởng](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |"
      },
      {
        "row": 31,
        "rowsha": "W3/WKAzVRbnjmYzbLKvAMSFwghIAZeqAf18j9sURMjM=",
        "originContent": "| PlentyOfFish | [PlentyOfFish architecture](http://highscalability.com/plentyoffish-architecture) |",
        "translatedContent": "| PlentyOfFish | [Kiến trúc PlentyOfFish](http://highscalability.com/plentyoffish-architecture) |"
      },
      {
        "row": 32,
        "rowsha": "dEm1aPwBE5fHjXbaHueprpg61DN02tc+kP5vCM0UXE8=",
        "originContent": "| Salesforce | [How they handle 1.3 billion transactions a day](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |",
        "translatedContent": "| Salesforce | [Cách họ xử lý 1,3 tỷ giao dịch mỗi ngày](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |"
      },
      {
        "row": 33,
        "rowsha": "AlMYLMWkR2SckN1bxYHEnGinX0CgwBIBQeGdhnDUXtA=",
        "originContent": "| Stack Overflow | [Stack Overflow architecture](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |",
        "translatedContent": "| Stack Overflow | [Kiến trúc Stack Overflow](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |"
      },
      {
        "row": 34,
        "rowsha": "sTX4sagugaGlsi7a5Mth9u0Gi0x8NTpvSZC+eo5Rt/Q=",
        "originContent": "| TripAdvisor | [40M visitors, 200M dynamic page views, 30TB data](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |",
        "translatedContent": "| TripAdvisor | [40 triệu khách truy cập, 200 triệu lượt xem trang động, 30TB dữ liệu](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |"
      },
      {
        "row": 35,
        "rowsha": "MazGU7vk/a3HuntQRFqVjcLtkBM4eUs3vR+7WUYZ8gw=",
        "originContent": "| Tumblr | [15 billion page views a month](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |",
        "translatedContent": "| Tumblr | [15 tỷ lượt xem trang mỗi tháng](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |"
      },
      {
        "row": 36,
        "rowsha": "/Ey9Rzzp0JSlMSBmO/ivB8C/+X3YgRSwEDxrVVOZdU4=",
        "originContent": "| Twitter | [Making Twitter 10000 percent faster](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[Storing 250 million tweets a day using MySQL](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150M active users, 300K QPS, a 22 MB/S firehose](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[Timelines at scale](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Big and small data at Twitter](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Operations at Twitter: scaling beyond 100 million users](https://www.youtube.com/watch?v=z8LU0Cj6BOU)<br/>[How Twitter Handles 3,000 Images Per Second](http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html) |",
        "translatedContent": "| Twitter | [Làm Twitter nhanh hơn 10.000 lần](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[Lưu trữ 250 triệu tweet mỗi ngày bằng MySQL](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150 triệu người dùng hoạt động, 300K QPS, 22 MB/S dữ liệu lớn](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[Timeline ở quy mô lớn](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Dữ liệu lớn và nhỏ tại Twitter](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Vận hành tại Twitter: mở rộng vượt quá 100 triệu người dùng](https://www.youtube.com/watch?v=z8LU0Cj6BOU)<br/>[Cách Twitter xử lý 3.000 ảnh mỗi giây](http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html) |"
      },
      {
        "row": 37,
        "rowsha": "MGU6qjE6IcUO6hi+Sa3VC6E1KwfhprKkrfRAShnjNqY=",
        "originContent": "| Uber | [How Uber scales their real-time market platform](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html)<br/>[Lessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories](http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html) |",
        "translatedContent": "| Uber | [Cách Uber mở rộng nền tảng thị trường thời gian thực](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html)<br/>[Bài học từ việc mở rộng Uber lên 2000 kỹ sư, 1000 dịch vụ, và 8000 kho Git](http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html) |"
      },
      {
        "row": 38,
        "rowsha": "tPlCk12VLKqhn+78/8N6L1w7nZ3UgWF8n79JDJydVAU=",
        "originContent": "| WhatsApp | [The WhatsApp architecture Facebook bought for $19 billion](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |",
        "translatedContent": "| WhatsApp | [Kiến trúc WhatsApp mà Facebook mua với giá 19 tỷ USD](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |"
      },
      {
        "row": 39,
        "rowsha": "02riQbnlEGZL2gp1kibVbVB3WgIIi+n4vcjqik9Ot0E=",
        "originContent": "| YouTube | [YouTube scalability](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[YouTube architecture](http://highscalability.com/youtube-architecture) |",
        "translatedContent": "| YouTube | [Khả năng mở rộng của YouTube](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[Kiến trúc YouTube](http://highscalability.com/youtube-architecture) |"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 58,
    "Content": "### Company engineering blogs\n\n> Architectures for companies you are interviewing with.\n>\n> Questions you encounter might be from the same domain.\n\n* [Airbnb Engineering](http://nerds.airbnb.com/)\n* [Atlassian Developers](https://developer.atlassian.com/blog/)\n* [AWS Blog](https://aws.amazon.com/blogs/aws/)\n* [Bitly Engineering Blog](http://word.bitly.com/)\n* [Box Blogs](https://blog.box.com/blog/category/engineering)\n* [Cloudera Developer Blog](http://blog.cloudera.com/)\n* [Dropbox Tech Blog](https://tech.dropbox.com/)\n* [Engineering at Quora](https://www.quora.com/q/quoraengineering)\n* [Ebay Tech Blog](http://www.ebaytechblog.com/)\n* [Evernote Tech Blog](https://blog.evernote.com/tech/)\n* [Etsy Code as Craft](http://codeascraft.com/)\n* [Facebook Engineering](https://www.facebook.com/Engineering)\n* [Flickr Code](http://code.flickr.net/)\n* [Foursquare Engineering Blog](http://engineering.foursquare.com/)\n* [GitHub Engineering Blog](https://github.blog/category/engineering)\n* [Google Research Blog](http://googleresearch.blogspot.com/)\n* [Groupon Engineering Blog](https://engineering.groupon.com/)\n* [Heroku Engineering Blog](https://engineering.heroku.com/)\n* [Hubspot Engineering Blog](http://product.hubspot.com/blog/topic/engineering)\n* [High Scalability](http://highscalability.com/)\n* [Instagram Engineering](http://instagram-engineering.tumblr.com/)\n* [Intel Software Blog](https://software.intel.com/en-us/blogs/)\n* [Jane Street Tech Blog](https://blogs.janestreet.com/category/ocaml/)\n* [LinkedIn Engineering](http://engineering.linkedin.com/blog)\n* [Microsoft Engineering](https://engineering.microsoft.com/)\n* [Microsoft Python Engineering](https://blogs.msdn.microsoft.com/pythonengineering/)\n* [Netflix Tech Blog](http://techblog.netflix.com/)\n* [Paypal Developer Blog](https://medium.com/paypal-engineering)\n* [Pinterest Engineering Blog](https://medium.com/@Pinterest_Engineering)\n* [Reddit Blog](http://www.redditblog.com/)\n* [Salesforce Engineering Blog](https://developer.salesforce.com/blogs/engineering/)\n* [Slack Engineering Blog](https://slack.engineering/)\n* [Spotify Labs](https://labs.spotify.com/)\n* [Stripe Engineering Blog](https://stripe.com/blog/engineering)",
    "ContentSha": "K2HaPjFBuIAolMM1jFJHWyWd16kC4a7w+PNnWCMvsfw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Blog kỹ thuật của các công ty\n\n> Kiến trúc của các công ty mà bạn đang phỏng vấn.\n>\n> Những câu hỏi bạn gặp phải có thể đến từ cùng một lĩnh vực.\n\n* [Airbnb Engineering](http://nerds.airbnb.com/)\n* [Atlassian Developers](https://developer.atlassian.com/blog/)\n* [AWS Blog](https://aws.amazon.com/blogs/aws/)\n* [Bitly Engineering Blog](http://word.bitly.com/)\n* [Box Blogs](https://blog.box.com/blog/category/engineering)\n* [Cloudera Developer Blog](http://blog.cloudera.com/)\n* [Dropbox Tech Blog](https://tech.dropbox.com/)\n* [Engineering at Quora](https://www.quora.com/q/quoraengineering)\n* [Ebay Tech Blog](http://www.ebaytechblog.com/)\n* [Evernote Tech Blog](https://blog.evernote.com/tech/)\n* [Etsy Code as Craft](http://codeascraft.com/)\n* [Facebook Engineering](https://www.facebook.com/Engineering)\n* [Flickr Code](http://code.flickr.net/)\n* [Foursquare Engineering Blog](http://engineering.foursquare.com/)\n* [GitHub Engineering Blog](https://github.blog/category/engineering)\n* [Google Research Blog](http://googleresearch.blogspot.com/)\n* [Groupon Engineering Blog](https://engineering.groupon.com/)\n* [Heroku Engineering Blog](https://engineering.heroku.com/)\n* [Hubspot Engineering Blog](http://product.hubspot.com/blog/topic/engineering)\n* [High Scalability](http://highscalability.com/)\n* [Instagram Engineering](http://instagram-engineering.tumblr.com/)\n* [Intel Software Blog](https://software.intel.com/en-us/blogs/)\n* [Jane Street Tech Blog](https://blogs.janestreet.com/category/ocaml/)\n* [LinkedIn Engineering](http://engineering.linkedin.com/blog)\n* [Microsoft Engineering](https://engineering.microsoft.com/)\n* [Microsoft Python Engineering](https://blogs.msdn.microsoft.com/pythonengineering/)\n* [Netflix Tech Blog](http://techblog.netflix.com/)\n* [Paypal Developer Blog](https://medium.com/paypal-engineering)\n* [Pinterest Engineering Blog](https://medium.com/@Pinterest_Engineering)\n* [Reddit Blog](http://www.redditblog.com/)\n* [Salesforce Engineering Blog](https://developer.salesforce.com/blogs/engineering/)\n* [Slack Engineering Blog](https://slack.engineering/)\n* [Spotify Labs](https://labs.spotify.com/)\n* [Stripe Engineering Blog](https://stripe.com/blog/engineering)",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "+d/bP9Q0vKv18RY6qyCwXgHABScWvkoM+7mqM2uwCqI=",
        "originContent": "### Company engineering blogs",
        "translatedContent": "### Blog kỹ thuật của các công ty"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "A6i+yCl04UINCArMDUyZyBKY1mjcYkWJO5BeEgTq75w=",
        "originContent": "> Architectures for companies you are interviewing with.",
        "translatedContent": "> Kiến trúc của các công ty mà bạn đang phỏng vấn."
      },
      {
        "row": 4,
        "rowsha": "YrZ+H2hbf+9RECAF3d0nd0vj/uOMQpZcU6qwNdC2siE=",
        "originContent": ">",
        "translatedContent": ">"
      },
      {
        "row": 5,
        "rowsha": "JNvk6ucNFdha+GdQzgmZacn0RVXBCuA0jxHX5ee12Mw=",
        "originContent": "> Questions you encounter might be from the same domain.",
        "translatedContent": "> Những câu hỏi bạn gặp phải có thể đến từ cùng một lĩnh vực."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "UHV9opLPfZCgVBfubQ9W/lgvvUW+fVYwTl/VrCl3hUU=",
        "originContent": "* [Airbnb Engineering](http://nerds.airbnb.com/)",
        "translatedContent": "* [Airbnb Engineering](http://nerds.airbnb.com/)"
      },
      {
        "row": 8,
        "rowsha": "m/k7rM7RVLOxuzRlYM+QMMHiW8xMJuidIO5ueZ0zq3s=",
        "originContent": "* [Atlassian Developers](https://developer.atlassian.com/blog/)",
        "translatedContent": "* [Atlassian Developers](https://developer.atlassian.com/blog/)"
      },
      {
        "row": 9,
        "rowsha": "PJRZgYAQp+tjdGtwVHXbCcdItRIqSzZl7b/9Pn0s4Q0=",
        "originContent": "* [AWS Blog](https://aws.amazon.com/blogs/aws/)",
        "translatedContent": "* [AWS Blog](https://aws.amazon.com/blogs/aws/)"
      },
      {
        "row": 10,
        "rowsha": "t2jO82JdhA4QFuHZxe+OfiEBImC7vYjc5HS0wsXuTag=",
        "originContent": "* [Bitly Engineering Blog](http://word.bitly.com/)",
        "translatedContent": "* [Bitly Engineering Blog](http://word.bitly.com/)"
      },
      {
        "row": 11,
        "rowsha": "kE1MwEVU89ovxRJBrbnjDfIjwTgvVHy+6HYksyil7HI=",
        "originContent": "* [Box Blogs](https://blog.box.com/blog/category/engineering)",
        "translatedContent": "* [Box Blogs](https://blog.box.com/blog/category/engineering)"
      },
      {
        "row": 12,
        "rowsha": "OGQ2cvxicM3vPbzOdPcT3MLeQk/ZBVO2MM1AHtjQUeI=",
        "originContent": "* [Cloudera Developer Blog](http://blog.cloudera.com/)",
        "translatedContent": "* [Cloudera Developer Blog](http://blog.cloudera.com/)"
      },
      {
        "row": 13,
        "rowsha": "Q/9bsAU0SigRCHts5JTnQEDOkLk/4HrdCSYztpL40x4=",
        "originContent": "* [Dropbox Tech Blog](https://tech.dropbox.com/)",
        "translatedContent": "* [Dropbox Tech Blog](https://tech.dropbox.com/)"
      },
      {
        "row": 14,
        "rowsha": "j2P1HftasHGpiUioRZovnI9iiN6ErtvyClLXPq5LHZ8=",
        "originContent": "* [Engineering at Quora](https://www.quora.com/q/quoraengineering)",
        "translatedContent": "* [Engineering at Quora](https://www.quora.com/q/quoraengineering)"
      },
      {
        "row": 15,
        "rowsha": "6c5JEVeT/WR0AoANf4VvFjkHHji/XDb0pL6ZhRtGdro=",
        "originContent": "* [Ebay Tech Blog](http://www.ebaytechblog.com/)",
        "translatedContent": "* [Ebay Tech Blog](http://www.ebaytechblog.com/)"
      },
      {
        "row": 16,
        "rowsha": "nzOMGeuct28CpUCr0qhoijft8HQTyAXueUVTnyyDFzU=",
        "originContent": "* [Evernote Tech Blog](https://blog.evernote.com/tech/)",
        "translatedContent": "* [Evernote Tech Blog](https://blog.evernote.com/tech/)"
      },
      {
        "row": 17,
        "rowsha": "awh9bS/FB3RCcZPbKa8uXkXeGmVBkqS5Huo2gxyyz6M=",
        "originContent": "* [Etsy Code as Craft](http://codeascraft.com/)",
        "translatedContent": "* [Etsy Code as Craft](http://codeascraft.com/)"
      },
      {
        "row": 18,
        "rowsha": "GYerm7k/P1bUlVNn2c6Vk1dQleF9pUB6RwXxwpPLfXk=",
        "originContent": "* [Facebook Engineering](https://www.facebook.com/Engineering)",
        "translatedContent": "* [Facebook Engineering](https://www.facebook.com/Engineering)"
      },
      {
        "row": 19,
        "rowsha": "bHmulJIVA7eSXLNyXEzC1WNyLVdAr/ihcJ+fmr5CpmI=",
        "originContent": "* [Flickr Code](http://code.flickr.net/)",
        "translatedContent": "* [Flickr Code](http://code.flickr.net/)"
      },
      {
        "row": 20,
        "rowsha": "HyvBL6IF62UuAW/Fda7VT198VYsevdwqAYRaAL/cu6E=",
        "originContent": "* [Foursquare Engineering Blog](http://engineering.foursquare.com/)",
        "translatedContent": "* [Foursquare Engineering Blog](http://engineering.foursquare.com/)"
      },
      {
        "row": 21,
        "rowsha": "6tsBAXNdj5peyhLqsL9yPkh5kcTSp9OFkSj+asqp24s=",
        "originContent": "* [GitHub Engineering Blog](https://github.blog/category/engineering)",
        "translatedContent": "* [GitHub Engineering Blog](https://github.blog/category/engineering)"
      },
      {
        "row": 22,
        "rowsha": "1RNafHm1h6TOW0xYbQ8av8+ZSzy84S2ru4jfP9Crvko=",
        "originContent": "* [Google Research Blog](http://googleresearch.blogspot.com/)",
        "translatedContent": "* [Google Research Blog](http://googleresearch.blogspot.com/)"
      },
      {
        "row": 23,
        "rowsha": "iTaM3R7fuGxZufQxtW0Rt5rns47rqtgDoxJ70JdKFQE=",
        "originContent": "* [Groupon Engineering Blog](https://engineering.groupon.com/)",
        "translatedContent": "* [Groupon Engineering Blog](https://engineering.groupon.com/)"
      },
      {
        "row": 24,
        "rowsha": "mkXS/TYVW8q2PX/zNgvIicOMnTk+kuYjwIgNvEwLU44=",
        "originContent": "* [Heroku Engineering Blog](https://engineering.heroku.com/)",
        "translatedContent": "* [Heroku Engineering Blog](https://engineering.heroku.com/)"
      },
      {
        "row": 25,
        "rowsha": "1eyOJPxW2akxU57S7ZsqziDyoLBGmcdrqMp//DK5JdU=",
        "originContent": "* [Hubspot Engineering Blog](http://product.hubspot.com/blog/topic/engineering)",
        "translatedContent": "* [Hubspot Engineering Blog](http://product.hubspot.com/blog/topic/engineering)"
      },
      {
        "row": 26,
        "rowsha": "wwR5ere/In8pGpzMdPm6wjCULk9GDLfa2ucjiM7hho4=",
        "originContent": "* [High Scalability](http://highscalability.com/)",
        "translatedContent": "* [High Scalability](http://highscalability.com/)"
      },
      {
        "row": 27,
        "rowsha": "8lLYkS8gDk7u6QLR7O/8I1GCPxWHHF0l1E9cJO8hAZ8=",
        "originContent": "* [Instagram Engineering](http://instagram-engineering.tumblr.com/)",
        "translatedContent": "* [Instagram Engineering](http://instagram-engineering.tumblr.com/)"
      },
      {
        "row": 28,
        "rowsha": "u+76hGKYmoLQ5HbdTMEpXPv0TjTErDAiKQIK1RBLIx8=",
        "originContent": "* [Intel Software Blog](https://software.intel.com/en-us/blogs/)",
        "translatedContent": "* [Intel Software Blog](https://software.intel.com/en-us/blogs/)"
      },
      {
        "row": 29,
        "rowsha": "cXNweXN9cAr4uUJ7wckQ4KgAiBWom9cIJj120dTlXr4=",
        "originContent": "* [Jane Street Tech Blog](https://blogs.janestreet.com/category/ocaml/)",
        "translatedContent": "* [Jane Street Tech Blog](https://blogs.janestreet.com/category/ocaml/)"
      },
      {
        "row": 30,
        "rowsha": "Z2BFDjGLdj5/0/yqRk6Goksl8BSuIz9EbUXUD+e/QRM=",
        "originContent": "* [LinkedIn Engineering](http://engineering.linkedin.com/blog)",
        "translatedContent": "* [LinkedIn Engineering](http://engineering.linkedin.com/blog)"
      },
      {
        "row": 31,
        "rowsha": "KErL/DkfP+IkrFUOEG/FSINw+vaIDZYGSV6cVsQ7jrs=",
        "originContent": "* [Microsoft Engineering](https://engineering.microsoft.com/)",
        "translatedContent": "* [Microsoft Engineering](https://engineering.microsoft.com/)"
      },
      {
        "row": 32,
        "rowsha": "C1KvRLDZbCnN83cPk+91CENnjCmMFXtMrVddf2xlgEw=",
        "originContent": "* [Microsoft Python Engineering](https://blogs.msdn.microsoft.com/pythonengineering/)",
        "translatedContent": "* [Microsoft Python Engineering](https://blogs.msdn.microsoft.com/pythonengineering/)"
      },
      {
        "row": 33,
        "rowsha": "gUfEW2XB6zbofz3d8ULsll5KBGAc/YXNkprWnnHfKMk=",
        "originContent": "* [Netflix Tech Blog](http://techblog.netflix.com/)",
        "translatedContent": "* [Netflix Tech Blog](http://techblog.netflix.com/)"
      },
      {
        "row": 34,
        "rowsha": "ez8RU0/0SkWeto/n5cd5QjhzYTE453CZE5s8z0VvUFM=",
        "originContent": "* [Paypal Developer Blog](https://medium.com/paypal-engineering)",
        "translatedContent": "* [Paypal Developer Blog](https://medium.com/paypal-engineering)"
      },
      {
        "row": 35,
        "rowsha": "p1/3zLsBrnU0+Nm3iO0sDgJjp6PT282ZnQ8cxSW7Ncw=",
        "originContent": "* [Pinterest Engineering Blog](https://medium.com/@Pinterest_Engineering)",
        "translatedContent": "* [Pinterest Engineering Blog](https://medium.com/@Pinterest_Engineering)"
      },
      {
        "row": 36,
        "rowsha": "/kFefDUbOxrsKQVJZBtPS+J8xtgIOcCm7qc7CuBZ/Rg=",
        "originContent": "* [Reddit Blog](http://www.redditblog.com/)",
        "translatedContent": "* [Reddit Blog](http://www.redditblog.com/)"
      },
      {
        "row": 37,
        "rowsha": "NNFiq6Nk+TJk7wrE5CD9nYuSTYxHh+17gAhDCGiedME=",
        "originContent": "* [Salesforce Engineering Blog](https://developer.salesforce.com/blogs/engineering/)",
        "translatedContent": "* [Salesforce Engineering Blog](https://developer.salesforce.com/blogs/engineering/)"
      },
      {
        "row": 38,
        "rowsha": "Ramdc++8GVEIlcL+ZE/BKkkMfOuU11fXg3BCd8CDtpw=",
        "originContent": "* [Slack Engineering Blog](https://slack.engineering/)",
        "translatedContent": "* [Slack Engineering Blog](https://slack.engineering/)"
      },
      {
        "row": 39,
        "rowsha": "tNzZ5+AcxfjbUCc4QDVq8BeFyaPSnbFBw/BbGurmofA=",
        "originContent": "* [Spotify Labs](https://labs.spotify.com/)",
        "translatedContent": "* [Spotify Labs](https://labs.spotify.com/)"
      },
      {
        "row": 40,
        "rowsha": "jr0V+3K56hlHl8kAVSQXGMvpfX6MuwpZG5fJUvrNoIQ=",
        "originContent": "* [Stripe Engineering Blog](https://stripe.com/blog/engineering)",
        "translatedContent": "* [Stripe Engineering Blog](https://stripe.com/blog/engineering)"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 59,
    "Content": "* [Twilio Engineering Blog](http://www.twilio.com/engineering)\n* [Twitter Engineering](https://blog.twitter.com/engineering/)\n* [Uber Engineering Blog](http://eng.uber.com/)\n* [Yahoo Engineering Blog](http://yahooeng.tumblr.com/)\n* [Yelp Engineering Blog](http://engineeringblog.yelp.com/)\n* [Zynga Engineering Blog](https://www.zynga.com/blogs/engineering)\n\n#### Source(s) and further reading\n\nLooking to add a blog?  To avoid duplicating work, consider adding your company blog to the following repo:\n\n* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)\n\n## Under development\n\nInterested in adding a section or helping complete one in-progress?  [Contribute](#contributing)!\n\n* Distributed computing with MapReduce\n* Consistent hashing\n* Scatter gather\n* [Contribute](#contributing)\n\n## Credits\n\nCredits and sources are provided throughout this repo.\n\nSpecial thanks to:\n\n* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)\n* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)\n* [High scalability](http://highscalability.com/)\n* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)\n* [shashank88/system_design](https://github.com/shashank88/system_design)\n* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)\n* [System design cheat sheet](https://gist.github.com/vasanthk/485d1c25737e8e72759f)\n* [A distributed systems reading list](http://dancres.github.io/Pages/)\n* [Cracking the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n\n## Contact info\n",
    "ContentSha": "Ybn7ZSN9UGUEPKyqpiStfZWdM+FBaEvnQtoViA95ahg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* [Twilio Engineering Blog](http://www.twilio.com/engineering)\n* [Twitter Engineering](https://blog.twitter.com/engineering/)\n* [Uber Engineering Blog](http://eng.uber.com/)\n* [Yahoo Engineering Blog](http://yahooeng.tumblr.com/)\n* [Yelp Engineering Blog](http://engineeringblog.yelp.com/)\n* [Zynga Engineering Blog](https://www.zynga.com/blogs/engineering)\n\n#### Nguồn và đọc thêm\n\nMuốn thêm blog? Để tránh trùng lặp công việc, hãy cân nhắc thêm blog công ty của bạn vào kho lưu trữ sau:\n\n* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)\n\n## Đang phát triển\n\nQuan tâm đến việc thêm một mục hoặc giúp hoàn thành một mục đang tiến hành? [Đóng góp](#contributing)!\n\n* Điện toán phân tán với MapReduce\n* Băm nhất quán\n* Scatter gather\n* [Đóng góp](#contributing)\n\n## Ghi công\n\nGhi công và nguồn được cung cấp xuyên suốt kho lưu trữ này.\n\nĐặc biệt cảm ơn:\n\n* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)\n* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)\n* [High scalability](http://highscalability.com/)\n* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)\n* [shashank88/system_design](https://github.com/shashank88/system_design)\n* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)\n* [System design cheat sheet](https://gist.github.com/vasanthk/485d1c25737e8e72759f)\n* [A distributed systems reading list](http://dancres.github.io/Pages/)\n* [Cracking the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n\n## Thông tin liên hệ\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "9d8FoS6iJakvwiyj7Um02JWjq3ky4jvljSxJwe3zNzA=",
        "originContent": "* [Twilio Engineering Blog](http://www.twilio.com/engineering)",
        "translatedContent": "* [Twilio Engineering Blog](http://www.twilio.com/engineering)"
      },
      {
        "row": 2,
        "rowsha": "sNzGmnHwtxr/Q220Ggut7OvB04pml4BQ47j14tzRol0=",
        "originContent": "* [Twitter Engineering](https://blog.twitter.com/engineering/)",
        "translatedContent": "* [Twitter Engineering](https://blog.twitter.com/engineering/)"
      },
      {
        "row": 3,
        "rowsha": "Kq7cxWenNWnImFOvBglnOeHQsNtJV2dGVcGg3APCIks=",
        "originContent": "* [Uber Engineering Blog](http://eng.uber.com/)",
        "translatedContent": "* [Uber Engineering Blog](http://eng.uber.com/)"
      },
      {
        "row": 4,
        "rowsha": "B5/Pqakkmh27cv7QeU0IpHdBYc0FT6XV9+cXBs+RNWs=",
        "originContent": "* [Yahoo Engineering Blog](http://yahooeng.tumblr.com/)",
        "translatedContent": "* [Yahoo Engineering Blog](http://yahooeng.tumblr.com/)"
      },
      {
        "row": 5,
        "rowsha": "4JOHDVmUaIWjipmhEOvcLQ3lQ5nvs931vBU95hjgt8s=",
        "originContent": "* [Yelp Engineering Blog](http://engineeringblog.yelp.com/)",
        "translatedContent": "* [Yelp Engineering Blog](http://engineeringblog.yelp.com/)"
      },
      {
        "row": 6,
        "rowsha": "T1962enxKZUq0pnv8Ya/Wt9ssKDMPk2oZ8eKrNC3Rx4=",
        "originContent": "* [Zynga Engineering Blog](https://www.zynga.com/blogs/engineering)",
        "translatedContent": "* [Zynga Engineering Blog](https://www.zynga.com/blogs/engineering)"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "yAcCmKF4VrpEVdPP7QGvwQrQvx5nYqkLfEVqvhED8vU=",
        "originContent": "#### Source(s) and further reading",
        "translatedContent": "#### Nguồn và đọc thêm"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "pa7M4b/LuEKtuN5IyhXdlTp4Gh71l9Ze7y2UNbxqsx4=",
        "originContent": "Looking to add a blog?  To avoid duplicating work, consider adding your company blog to the following repo:",
        "translatedContent": "Muốn thêm blog? Để tránh trùng lặp công việc, hãy cân nhắc thêm blog công ty của bạn vào kho lưu trữ sau:"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "+FnBxBwnup4/zgg2YLCOsM9mf8JZVRVQnxudS2OIs3E=",
        "originContent": "* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)",
        "translatedContent": "* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "t4tgwc7iQdiScrNNK5RufDiX0TR7zYkJijZRRf+7Clw=",
        "originContent": "## Under development",
        "translatedContent": "## Đang phát triển"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "wtfJgdYtoDEWhD+DNsA9eZKRmA1VEVSsc2jEUQPaBtE=",
        "originContent": "Interested in adding a section or helping complete one in-progress?  [Contribute](#contributing)!",
        "translatedContent": "Quan tâm đến việc thêm một mục hoặc giúp hoàn thành một mục đang tiến hành? [Đóng góp](#contributing)!"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "pqXmYpaIcX19vhzkd+FjJdMydXVVFY4A79+VXXKf3xw=",
        "originContent": "* Distributed computing with MapReduce",
        "translatedContent": "* Điện toán phân tán với MapReduce"
      },
      {
        "row": 19,
        "rowsha": "ZN/KzBCXwLH+ZbEPg0JzWfbkv6v0/kwMeEt+33taE0U=",
        "originContent": "* Consistent hashing",
        "translatedContent": "* Băm nhất quán"
      },
      {
        "row": 20,
        "rowsha": "mPIuzyd7cHCkpiQwHtxQvfEBhGD4TWn/NeOeFJ6PGzQ=",
        "originContent": "* Scatter gather",
        "translatedContent": "* Scatter gather"
      },
      {
        "row": 21,
        "rowsha": "1jbifZDheRab+sWwbsBpmbL8J80A6hHoEBa5cO7M3HU=",
        "originContent": "* [Contribute](#contributing)",
        "translatedContent": "* [Đóng góp](#contributing)"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "OtBYwndH58Q+LfPUO9DkPBo3A7SzyLFdEA2wIljgYwk=",
        "originContent": "## Credits",
        "translatedContent": "## Ghi công"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "c58XSdVMXQxZAM2ql4KvCUK63wftHWZTLmqp8TdRcE8=",
        "originContent": "Credits and sources are provided throughout this repo.",
        "translatedContent": "Ghi công và nguồn được cung cấp xuyên suốt kho lưu trữ này."
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "17xrnRFrxtbV2/VrEOM7MvNVU+4x1tdBoWQSX8P3fpo=",
        "originContent": "Special thanks to:",
        "translatedContent": "Đặc biệt cảm ơn:"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "pKl6P8KEQz4QNBAh9t4oR16uTBfQroZJNNwe+s+yLc8=",
        "originContent": "* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)",
        "translatedContent": "* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)"
      },
      {
        "row": 30,
        "rowsha": "7Hss598Sud5Bmvz1qJITtUR0Fhv509/XQ5L5lpMYkjM=",
        "originContent": "* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)",
        "translatedContent": "* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)"
      },
      {
        "row": 31,
        "rowsha": "yh+jRLedQHNmaPf7VIeLV1wTtoSg7Yy303JV2Br/zU0=",
        "originContent": "* [High scalability](http://highscalability.com/)",
        "translatedContent": "* [High scalability](http://highscalability.com/)"
      },
      {
        "row": 32,
        "rowsha": "lBRNLVtnyx2U9Y8S26esIEj6x3vknEXJAES+wiVadtE=",
        "originContent": "* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)",
        "translatedContent": "* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)"
      },
      {
        "row": 33,
        "rowsha": "2luTAoc7P89ojRQuuqyVSd3FyTDw48WmC8GM9qvxmaU=",
        "originContent": "* [shashank88/system_design](https://github.com/shashank88/system_design)",
        "translatedContent": "* [shashank88/system_design](https://github.com/shashank88/system_design)"
      },
      {
        "row": 34,
        "rowsha": "K4ksr7U4gNQeNxJQkcJ7xmu10zeY3o9NTHw8Z3MTPbg=",
        "originContent": "* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)",
        "translatedContent": "* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)"
      },
      {
        "row": 35,
        "rowsha": "1HD3BrjiKliRO0pgaGFzE0jUAIFm2QFHDM+5ul/hsUY=",
        "originContent": "* [System design cheat sheet](https://gist.github.com/vasanthk/485d1c25737e8e72759f)",
        "translatedContent": "* [System design cheat sheet](https://gist.github.com/vasanthk/485d1c25737e8e72759f)"
      },
      {
        "row": 36,
        "rowsha": "CpmLqSDpSe2fYMM40797BCoW7HkGCDhNfryYvgXUmsE=",
        "originContent": "* [A distributed systems reading list](http://dancres.github.io/Pages/)",
        "translatedContent": "* [A distributed systems reading list](http://dancres.github.io/Pages/)"
      },
      {
        "row": 37,
        "rowsha": "oVmANhd4jFgULLGXR4wRUoDY8ukoo3OHU5c79dZ6tFU=",
        "originContent": "* [Cracking the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)",
        "translatedContent": "* [Cracking the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "MIDKXf43yHmw05OTx26kHLZf4/APjvzy5C0k0OJV+/o=",
        "originContent": "## Contact info",
        "translatedContent": "## Thông tin liên hệ"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 60,
    "Content": "Feel free to contact me to discuss any issues, questions, or comments.\n\nMy contact info can be found on my [GitHub page](https://github.com/donnemartin).\n\n## License\n\n*I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).*\n\n    Copyright 2017 Donne Martin\n\n    Creative Commons Attribution 4.0 International License (CC BY 4.0)\n\n    http://creativecommons.org/licenses/by/4.0/\n",
    "ContentSha": "pZfW5OoDeEHMjsOQIbYzifgEtKuSRxAcRTUdmpdKaBQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Hãy liên hệ với tôi để thảo luận về bất kỳ vấn đề, câu hỏi hoặc ý kiến nào.\n\nThông tin liên hệ của tôi có thể được tìm thấy trên [trang GitHub của tôi](https://github.com/donnemartin).\n\n## Giấy phép\n\n*Tôi cung cấp mã nguồn và tài nguyên trong kho lưu trữ này cho bạn theo giấy phép nguồn mở. Vì đây là kho lưu trữ cá nhân của tôi, giấy phép bạn nhận được đối với mã nguồn và tài nguyên là từ tôi chứ không phải từ công ty tôi (Facebook).*\n\n    Bản quyền 2017 Donne Martin\n\n    Giấy phép Creative Commons Attribution 4.0 International License (CC BY 4.0)\n\n    http://creativecommons.org/licenses/by/4.0/\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "KIFlNpocCUk68IRsK1WzPRwq3G4wKqryvIGOrjVLshM=",
        "originContent": "Feel free to contact me to discuss any issues, questions, or comments.",
        "translatedContent": "Hãy liên hệ với tôi để thảo luận về bất kỳ vấn đề, câu hỏi hoặc ý kiến nào."
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "TQe2yubEtO0DQFi7wAUeaFm4xXwdbNpHKocxgOG0VLQ=",
        "originContent": "My contact info can be found on my [GitHub page](https://github.com/donnemartin).",
        "translatedContent": "Thông tin liên hệ của tôi có thể được tìm thấy trên [trang GitHub của tôi](https://github.com/donnemartin)."
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "bFSaVtsB4CHySNjaeCiaMZfT24b+DTbTM4HQ38cR6Lw=",
        "originContent": "## License",
        "translatedContent": "## Giấy phép"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "SBAKe7Nw6j0bI6GZ5M6BwWFUXXdUasWMKwS4gRwKvSo=",
        "originContent": "*I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).*",
        "translatedContent": "*Tôi cung cấp mã nguồn và tài nguyên trong kho lưu trữ này cho bạn theo giấy phép nguồn mở. Vì đây là kho lưu trữ cá nhân của tôi, giấy phép bạn nhận được đối với mã nguồn và tài nguyên là từ tôi chứ không phải từ công ty tôi (Facebook).*"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "pGO5RldFVlPTjaQxxap5djK7sEP3yb5ugIHRNoYfth8=",
        "originContent": "    Copyright 2017 Donne Martin",
        "translatedContent": "    Bản quyền 2017 Donne Martin"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "AyxdBnPDCPgTUzxBLwYO1XkDP8BtkFdJ8HJMPEPfCKg=",
        "originContent": "    Creative Commons Attribution 4.0 International License (CC BY 4.0)",
        "translatedContent": "    Giấy phép Creative Commons Attribution 4.0 International License (CC BY 4.0)"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "1RRg87FdQzsRvSePc+OSyFT0bl6EF/4Nmt5rbP9DJWU=",
        "originContent": "    http://creativecommons.org/licenses/by/4.0/",
        "translatedContent": "    http://creativecommons.org/licenses/by/4.0/"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]