[
  {
    "Id": 1,
    "Content": "# MASS: Multi-Agent Simulation Scaling  for Portfolio Construction\n\n📜 [Paper Link](https://arxiv.org/abs/2505.10278)\n\n## ✨ Overview\n\n![Overview of MASS](https://raw.githubusercontent.com/gta0804/MASS/main/img/MASS.pdf)\n\n## 📝 What You Need to Know\n\n1. Currently, we only provide a very [small subset](https://github.com/gta0804/MASS/tree/main/stock_disagreement/example_dataset) of the complete dataset for running MASS. The full dataset will be released after the review is completed.\n\n## 🧑‍💻Usage\n1. **dependency installation**",
    "ContentSha": "qBbfqoh6wQy0mZ/L4QMlQNaNuMz90ZMr7Q9OwdBcths=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<translate-content># MASS：用于投资组合构建的多代理仿真扩展\n\n📜 [论文链接](https://arxiv.org/abs/2505.10278)\n\n## ✨ 概览\n\n![MASS 概览](https://raw.githubusercontent.com/gta0804/MASS/main/img/MASS.pdf)\n\n## 📝 你需要知道的\n\n1. 目前，我们只提供了用于运行 MASS 的完整数据集中的一个非常[小子集](https://github.com/gta0804/MASS/tree/main/stock_disagreement/example_dataset)。完整数据集将在审稿完成后发布。\n\n## 🧑‍💻 使用方法\n1. **依赖安装**</translate-content>",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "oIXCaxh62tY+seURIWNDKFAs5cJd2I0VLIjYjPpwjqk=",
        "originContent": "# MASS: Multi-Agent Simulation Scaling  for Portfolio Construction",
        "translatedContent": "<translate-content># MASS：用于投资组合构建的多代理仿真扩展"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "cCnbv1x5aPaPvyc/x5oqoykJB/Sq1S5tPhc8oz0EZvo=",
        "originContent": "📜 [Paper Link](https://arxiv.org/abs/2505.10278)",
        "translatedContent": "📜 [论文链接](https://arxiv.org/abs/2505.10278)"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "hTDevtPkkq6C7EjLjw+IMPw5ECd5A1xHXUK+SaX4glA=",
        "originContent": "## ✨ Overview",
        "translatedContent": "## ✨ 概览"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "IqMIKxiSb9NeRvpBtTAmdtQ1OpM9fyek3gaGNyeryLs=",
        "originContent": "![Overview of MASS](https://raw.githubusercontent.com/gta0804/MASS/main/img/MASS.pdf)",
        "translatedContent": "![MASS 概览](https://raw.githubusercontent.com/gta0804/MASS/main/img/MASS.pdf)"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "SOltwkdM7MkABw2nSnlyZFu81pg6BFHTYngJN2j3zso=",
        "originContent": "## 📝 What You Need to Know",
        "translatedContent": "## 📝 你需要知道的"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "aZO2xc84wxJ6awkqNgccfBzEJP7S4kMNgi5lyA+OYpc=",
        "originContent": "1. Currently, we only provide a very [small subset](https://github.com/gta0804/MASS/tree/main/stock_disagreement/example_dataset) of the complete dataset for running MASS. The full dataset will be released after the review is completed.",
        "translatedContent": "1. 目前，我们只提供了用于运行 MASS 的完整数据集中的一个非常[小子集](https://github.com/gta0804/MASS/tree/main/stock_disagreement/example_dataset)。完整数据集将在审稿完成后发布。"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "Ai8gJI2Z76zCH56ObWKDylB8PKwRWcH3FVWIuIUMn/I=",
        "originContent": "## 🧑‍💻Usage",
        "translatedContent": "## 🧑‍💻 使用方法"
      },
      {
        "row": 14,
        "rowsha": "KI6+32xsiCJsu/sS5a4KyFlfBpXzM4Z4hbVZLk//7+8=",
        "originContent": "1. **dependency installation**",
        "translatedContent": "1. **依赖安装**</translate-content>"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "```\nconda create -n your_env_name python==3.10 -y\nconda activate your_env_name\npip install pdm\npdm install\n```",
    "ContentSha": "Gf4D045Pb7RpVFClBLPmPbOIqvAEGZIoY1+Xv2j5kBk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nconda create -n your_env_name python==3.10 -y\nconda activate your_env_name\npip install pdm\npdm install\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "1b8Qv/HMJd8HC8cEFi7Wd/1SMv1rHte+TzCQSz7lrmc=",
        "originContent": "conda create -n your_env_name python==3.10 -y",
        "translatedContent": "conda create -n your_env_name python==3.10 -y"
      },
      {
        "row": 3,
        "rowsha": "kpQUzd4b2kKqV4cE/vbW129hcLpcJCUwXq4y7lvQPbk=",
        "originContent": "conda activate your_env_name",
        "translatedContent": "conda activate your_env_name"
      },
      {
        "row": 4,
        "rowsha": "9ekhAJyA9cBfZodDbRvsicZb8gmfMxGtKKsKVmaE9d0=",
        "originContent": "pip install pdm",
        "translatedContent": "pip install pdm"
      },
      {
        "row": 5,
        "rowsha": "dSQIPw2mX4kUEmMTGFjNfXwyUmsHD7zHoxFlT3sSXfg=",
        "originContent": "pdm install",
        "translatedContent": "pdm install"
      },
      {
        "row": 6,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 3,
    "Content": "2. **dataset fetching**\nAfter fetching dataset, change all `ROOT_PATH` variables to your dataset directory.\nNow we release an example dataset on SSE 50 index.\n\n3. **Extend MASS on your own dataset**\nDue to time limit, our data source is limited. We encourage you to incorporate more data sources into MASS to get more significant performances, and we also encourage you to extend MASS beyond investment portfolio construction!\nYou can use your data sources step by step below:\n  - **Define your own data modality.**\n  In MASS, we pre-define multiple data modalities in [here](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/basic_agent.py#L42). You can change them into your own data sources. After changing your data sources, remember to change data loading  code [here](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/basic_agent.py#L165).",
    "ContentSha": "WnKKqdSRMDm3T/TpKbRpStZc4+hoGvmGJok8X7Zkz58=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "2. **数据集获取**  \n获取数据集后，将所有 `ROOT_PATH` 变量更改为您的数据集目录。  \n现在我们发布了一个基于 SSE 50 指数的示例数据集。  \n\n3. **在您自己的数据集上扩展 MASS**  \n由于时间限制，我们的数据源有限。我们鼓励您将更多数据源整合到 MASS 中，以获得更显著的性能提升，同时也鼓励您将 MASS 扩展到投资组合构建之外！  \n您可以按以下步骤使用您的数据源：  \n  - **定义您自己的数据模态。**  \n  在 MASS 中，我们在 [这里](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/basic_agent.py#L42) 预定义了多种数据模态。您可以将其更改为您自己的数据源。更改数据源后，记得修改数据加载代码，见 [这里](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/basic_agent.py#L165)。",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "ztHiRoJxU9/it+iyHHcLRYaLBl4dswcMr+J90p4ybSo=",
        "originContent": "2. **dataset fetching**",
        "translatedContent": "2. **数据集获取**  "
      },
      {
        "row": 2,
        "rowsha": "3FDBJxOw+68/Rt6jzemAuQve98GdAOw4OK7CD3pt7C0=",
        "originContent": "After fetching dataset, change all `ROOT_PATH` variables to your dataset directory.",
        "translatedContent": "获取数据集后，将所有 `ROOT_PATH` 变量更改为您的数据集目录。  "
      },
      {
        "row": 3,
        "rowsha": "MwjxMbSKjZ+9hremwjRwqkzEKkOjQ6T48vXp3tfgtc0=",
        "originContent": "Now we release an example dataset on SSE 50 index.",
        "translatedContent": "现在我们发布了一个基于 SSE 50 指数的示例数据集。  "
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "CM7F2pyuqQGFH+FtGCA7VcN0ZwiqX5/3n0/bs7isGV4=",
        "originContent": "3. **Extend MASS on your own dataset**",
        "translatedContent": "3. **在您自己的数据集上扩展 MASS**  "
      },
      {
        "row": 6,
        "rowsha": "eFkhNfDdNS5nyiqIGRlTKhOIiCM4w7ptDSS/IWh+TLw=",
        "originContent": "Due to time limit, our data source is limited. We encourage you to incorporate more data sources into MASS to get more significant performances, and we also encourage you to extend MASS beyond investment portfolio construction!",
        "translatedContent": "由于时间限制，我们的数据源有限。我们鼓励您将更多数据源整合到 MASS 中，以获得更显著的性能提升，同时也鼓励您将 MASS 扩展到投资组合构建之外！  "
      },
      {
        "row": 7,
        "rowsha": "iq3D+/FEoG/xwCQw7VBIr4BB6XGAN/7b5Lmbi0SmObA=",
        "originContent": "You can use your data sources step by step below:",
        "translatedContent": "您可以按以下步骤使用您的数据源：  "
      },
      {
        "row": 8,
        "rowsha": "0VAbdPVo2UtoMEyDxgeBYXlv3CRuBidei+N6jL1b+B8=",
        "originContent": "  - **Define your own data modality.**",
        "translatedContent": "  - **定义您自己的数据模态。**  "
      },
      {
        "row": 9,
        "rowsha": "1840yvQ9tBe3xiOaSN1lK5AltK1wty3YwvtnhsGejyE=",
        "originContent": "  In MASS, we pre-define multiple data modalities in [here](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/basic_agent.py#L42). You can change them into your own data sources. After changing your data sources, remember to change data loading  code [here](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/basic_agent.py#L165).",
        "translatedContent": "  在 MASS 中，我们在 [这里](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/basic_agent.py#L42) 预定义了多种数据模态。您可以将其更改为您自己的数据源。更改数据源后，记得修改数据加载代码，见 [这里](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/basic_agent.py#L165)。"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "  ```\n  class Modality(IntFlag):  \n      FUDAMENTAL_VALUTION = 0b00000001  \n      FUDAMENTAL_DIVIDEND = 0b00000010 \n      FUDAMENTAL_GROWTH = 0b000000100\n      FUDAMENTAL_QUALITY = 0b000001000\n      NEWS = 0b000010000      \n      BASE_DATA = 0b000100000  \n      CROSS_INDUSTRY_LABEL = 0b001000000\n      RISK_FACTOR = 0b010000000\n      PRICE_FEATURE = 0b100000000 \n  ```",
    "ContentSha": "5k/MuFihRH1YuETOFvJHgfY3jG6oYbT82JBEiAK/cW0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "  ```\n  class Modality(IntFlag):  \n      FUDAMENTAL_VALUTION = 0b00000001  \n      FUDAMENTAL_DIVIDEND = 0b00000010 \n      FUDAMENTAL_GROWTH = 0b000000100\n      FUDAMENTAL_QUALITY = 0b000001000\n      NEWS = 0b000010000      \n      BASE_DATA = 0b000100000  \n      CROSS_INDUSTRY_LABEL = 0b001000000\n      RISK_FACTOR = 0b010000000\n      PRICE_FEATURE = 0b100000000 \n  ```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "Rmhu4TMsMlOs89kmG4vhE8fUZ6zORB8jNyxbJF3O88I=",
        "originContent": "  ```",
        "translatedContent": "  ```"
      },
      {
        "row": 2,
        "rowsha": "hWK7IaAaaBut9t0O9a6oqCHsc+OmxEhBcDZwpNC+k6A=",
        "originContent": "  class Modality(IntFlag):  ",
        "translatedContent": "  class Modality(IntFlag):  "
      },
      {
        "row": 3,
        "rowsha": "dECHoGxl4zV65Vrgpdv0Pwq/SiqFC/5fB9ooZ3OWto4=",
        "originContent": "      FUDAMENTAL_VALUTION = 0b00000001  ",
        "translatedContent": "      FUDAMENTAL_VALUTION = 0b00000001  "
      },
      {
        "row": 4,
        "rowsha": "2HgO1hNx9cLuC50wMMbe2cr+OyHXKu7y7MShZDhpytk=",
        "originContent": "      FUDAMENTAL_DIVIDEND = 0b00000010 ",
        "translatedContent": "      FUDAMENTAL_DIVIDEND = 0b00000010 "
      },
      {
        "row": 5,
        "rowsha": "2ISLK+0kgeFOFRdm1C8B6uzU7cr8BjrGyNo88Ygb5zs=",
        "originContent": "      FUDAMENTAL_GROWTH = 0b000000100",
        "translatedContent": "      FUDAMENTAL_GROWTH = 0b000000100"
      },
      {
        "row": 6,
        "rowsha": "cxvKFaYvBNgROMZKYt/tGeLfchkmw5O+utgMgRvvIUA=",
        "originContent": "      FUDAMENTAL_QUALITY = 0b000001000",
        "translatedContent": "      FUDAMENTAL_QUALITY = 0b000001000"
      },
      {
        "row": 7,
        "rowsha": "woh3xrFs/GZRpLDiybae+RSAp5ze7BnJMH/+MTDsGgU=",
        "originContent": "      NEWS = 0b000010000      ",
        "translatedContent": "      NEWS = 0b000010000      "
      },
      {
        "row": 8,
        "rowsha": "YGGKVYl62/NA+yv1U/EBdmdE19bB4HWn5izxabOKVe0=",
        "originContent": "      BASE_DATA = 0b000100000  ",
        "translatedContent": "      BASE_DATA = 0b000100000  "
      },
      {
        "row": 9,
        "rowsha": "1KR9TB8UneWYxcrBAmF9zqGq6INEeLmHsEMGjp1HMMQ=",
        "originContent": "      CROSS_INDUSTRY_LABEL = 0b001000000",
        "translatedContent": "      CROSS_INDUSTRY_LABEL = 0b001000000"
      },
      {
        "row": 10,
        "rowsha": "c6laIq1/DCreE1u4+P0KX4bgYYu/xSXfoul0FPedWJg=",
        "originContent": "      RISK_FACTOR = 0b010000000",
        "translatedContent": "      RISK_FACTOR = 0b010000000"
      },
      {
        "row": 11,
        "rowsha": "xXQwQqEwFN7g6K9YeWQ0/P0TuNLdqeTMdW6zD/DQWLg=",
        "originContent": "      PRICE_FEATURE = 0b100000000 ",
        "translatedContent": "      PRICE_FEATURE = 0b100000000 "
      },
      {
        "row": 12,
        "rowsha": "Rmhu4TMsMlOs89kmG4vhE8fUZ6zORB8jNyxbJF3O88I=",
        "originContent": "  ```",
        "translatedContent": "  ```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 5,
    "Content": "  - **Use your own aggregation function.**\n  In MASS, we aggregate individual investor's decision by market disagreement hypothesis. In fact, you can use your own aggregation method. Change the code in [investor_analyzer.py](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/investment_analyzer.py) for your own aggregation function!\n  - **Use different optimizers**\n     In MASS, we use simulated annealing on agent distaribution optimization. We imeplement an optimzer framework in [agent_distribution.py](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/agent_distribution.py). You can define your own optimizer.\n  \n\n4. **Compute resources configuration.**\nWe use [Qwen2.5-72B-Instruct](https://huggingface.co/Qwen/Qwen2.5-72B-Instruct) as our foundation model. You can change your foundation model url [here](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/basic_agent.py#L57).\nFor SSE 50 and the default configuration, 80GiB RAM is needed. You can save memory overhead by adjusting the agent parallelism [here](https://github.com/gta0804/MASS/blob/main/stock_disagreement/exp/trainer.py#L148).\n\n5. **Running MASS**",
    "ContentSha": "TReXOH2UGnA8E+GVx6dzcqV0vvsylvTIbm+rOawqKPo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "- **使用您自己的聚合函数。**  \n  在MASS中，我们通过市场分歧假说聚合个体投资者的决策。实际上，您可以使用自己的聚合方法。请在[investor_analyzer.py](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/investment_analyzer.py)中修改代码以实现您自己的聚合函数！  \n  - **使用不同的优化器**  \n     在MASS中，我们在代理分布优化中使用模拟退火。我们在[agent_distribution.py](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/agent_distribution.py)中实现了一个优化器框架。您可以定义您自己的优化器。  \n  \n\n4. **计算资源配置。**  \n我们使用[Qwen2.5-72B-Instruct](https://huggingface.co/Qwen/Qwen2.5-72B-Instruct)作为基础模型。您可以在[这里](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/basic_agent.py#L57)更改您的基础模型URL。  \n对于SSE 50和默认配置，需80GiB内存。您可以通过调整[这里](https://github.com/gta0804/MASS/blob/main/stock_disagreement/exp/trainer.py#L148)的代理并行度来节省内存开销。  \n\n5. **运行MASS**",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "94fsC4K04Qs6s71xlvAGvOAK/1i7TWMr3z7lmzzrAIQ=",
        "originContent": "  - **Use your own aggregation function.**",
        "translatedContent": "- **使用您自己的聚合函数。**  "
      },
      {
        "row": 2,
        "rowsha": "9pTQFUgOFLoRrGR+Lo4t+9IFmMpHiHEdYrEHctmyC0E=",
        "originContent": "  In MASS, we aggregate individual investor's decision by market disagreement hypothesis. In fact, you can use your own aggregation method. Change the code in [investor_analyzer.py](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/investment_analyzer.py) for your own aggregation function!",
        "translatedContent": "  在MASS中，我们通过市场分歧假说聚合个体投资者的决策。实际上，您可以使用自己的聚合方法。请在[investor_analyzer.py](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/investment_analyzer.py)中修改代码以实现您自己的聚合函数！  "
      },
      {
        "row": 3,
        "rowsha": "MPzEkFtzqNA731+NxrO3Vcx8qyEhfTWmWBxJaFXIdqI=",
        "originContent": "  - **Use different optimizers**",
        "translatedContent": "  - **使用不同的优化器**  "
      },
      {
        "row": 4,
        "rowsha": "dJXWXNqnmZ5zKiahm0XWcAH59rFbUwvyKRFTKwxBd5o=",
        "originContent": "     In MASS, we use simulated annealing on agent distaribution optimization. We imeplement an optimzer framework in [agent_distribution.py](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/agent_distribution.py). You can define your own optimizer.",
        "translatedContent": "     在MASS中，我们在代理分布优化中使用模拟退火。我们在[agent_distribution.py](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/agent_distribution.py)中实现了一个优化器框架。您可以定义您自己的优化器。  "
      },
      {
        "row": 5,
        "rowsha": "bBefIeb2K2KQVdirQPRU7QLki2hWORNHO4V9NjjiOyg=",
        "originContent": "  ",
        "translatedContent": "  "
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "c1EoPfKIP3eEjPwC7i6DJMR9xPrln0QIXQuP+HmGOKg=",
        "originContent": "4. **Compute resources configuration.**",
        "translatedContent": "4. **计算资源配置。**  "
      },
      {
        "row": 8,
        "rowsha": "bXzSrzy2eVptptND18G0ZY1JZBr3yzqEMfYZk+vVtJI=",
        "originContent": "We use [Qwen2.5-72B-Instruct](https://huggingface.co/Qwen/Qwen2.5-72B-Instruct) as our foundation model. You can change your foundation model url [here](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/basic_agent.py#L57).",
        "translatedContent": "我们使用[Qwen2.5-72B-Instruct](https://huggingface.co/Qwen/Qwen2.5-72B-Instruct)作为基础模型。您可以在[这里](https://github.com/gta0804/MASS/blob/main/stock_disagreement/agent/basic_agent.py#L57)更改您的基础模型URL。  "
      },
      {
        "row": 9,
        "rowsha": "Ah4hUpa61F9pG8fGJ3+ArlL2Epc2lXyM/GV+qDBaqPY=",
        "originContent": "For SSE 50 and the default configuration, 80GiB RAM is needed. You can save memory overhead by adjusting the agent parallelism [here](https://github.com/gta0804/MASS/blob/main/stock_disagreement/exp/trainer.py#L148).",
        "translatedContent": "对于SSE 50和默认配置，需80GiB内存。您可以通过调整[这里](https://github.com/gta0804/MASS/blob/main/stock_disagreement/exp/trainer.py#L148)的代理并行度来节省内存开销。  "
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "ndE4y9qfG4+vXpY3zYm9TxQ7I9d3FneLoKX4m1wkBcg=",
        "originContent": "5. **Running MASS**",
        "translatedContent": "5. **运行MASS**"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 6,
    "Content": "```\npython stock_disagreement/main.py\n```",
    "ContentSha": "Lb0YYt/QnpQl5bqXJpMmoXseo7CytWl79R+NN4PNcOI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\npython stock_disagreement/main.py\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "BFUGBCJr3+U5HKUtoEwzrwz0MYy1s5jkgqYkL5dfVn4=",
        "originContent": "python stock_disagreement/main.py",
        "translatedContent": "python stock_disagreement/main.py"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 7,
    "Content": "",
    "ContentSha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]