[
  {
    "row": 1,
    "rowsha": "eUHOTp8bL8oxMczBDDPM2W/wrlUVwReOgBRh5RhwGvE=",
    "originContent": "# ronald-miniSpring Framework",
    "translatedContent": "# ronald-miniSpring フレームワーク"
  },
  {
    "row": 2,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 3,
    "rowsha": "ypLb8Y8HHLgc75O1C3ljrGTXEB8JSa6suRAOKVkv6ZE=",
    "originContent": "A lightweight Spring framework implementation that demonstrates core Spring principles and mechanisms. This project extracts and simplifies Spring's essential features while maintaining its fundamental architecture, making it an excellent learning resource for understanding Spring's internals.",
    "translatedContent": "コアなSpringの原則と仕組みを示す軽量のSpringフレームワーク実装です。このプロジェクトはSpringの本質的な機能を抽出・簡素化しつつ、その基本的なアーキテクチャを維持しており、Springの内部構造を理解するための優れた学習リソースとなっています。"
  },
  {
    "row": 4,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 5,
    "rowsha": "0vAhKmXWDMjukIwL5SlQVUPpA0O/4mj+5Mh4JxRDWaA=",
    "originContent": "## 🚀 Key Features",
    "translatedContent": "## 🚀 主な機能"
  },
  {
    "row": 6,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 7,
    "rowsha": "ksnE1ssu1Xoe0tJ6gZ1CI2yT59KKpFgwcOCu04RsCsk=",
    "originContent": "- **IoC Container**: Complete implementation of dependency injection and inversion of control",
    "translatedContent": "- **IoCコンテナ**: 依存性注入と制御の反転の完全実装"
  },
  {
    "row": 8,
    "rowsha": "g336I7nOK280geiBRejd2Mo1M6Qv76GYDDyZzi5bkyE=",
    "originContent": "- **AOP Framework**: Aspect-oriented programming with support for method interception and enhancement",
    "translatedContent": "- **AOPフレームワーク**: メソッドのインターセプトと拡張をサポートするアスペクト指向プログラミング"
  },
  {
    "row": 9,
    "rowsha": "k47xHG2i5ICv2XfF2bpb8jn2E+Vgz0XNXc4qRVH4pWk=",
    "originContent": "- **Bean Lifecycle**: Comprehensive bean lifecycle management (instantiation, initialization, destruction)",
    "translatedContent": "- **Beanライフサイクル**: インスタンス化、初期化、破棄を含む包括的なBeanライフサイクル管理"
  },
  {
    "row": 10,
    "rowsha": "jpR/lgjqqU8j2lU9Nrgce1sA1c/VjLJprOuQU0Q0zs8=",
    "originContent": "- **Resource Management**: Flexible resource loading system supporting classpath and file system",
    "translatedContent": "- **リソース管理**: クラスパスおよびファイルシステムをサポートする柔軟なリソース読み込みシステム"
  },
  {
    "row": 11,
    "rowsha": "QabhH89eCp+5sOebZpQzMCSkOv3KN1bDtt/h61G0zG4=",
    "originContent": "- **Event System**: Publish-subscribe pattern implementation for application events",
    "translatedContent": "- **イベントシステム**: アプリケーションイベントのためのパブリッシュ・サブスクライブパターン実装"
  },
  {
    "row": 12,
    "rowsha": "fK5WUzEhFKuhF6kWNa/qjrfjHTFpcxMrY84ZHodcqNM=",
    "originContent": "- **Type Conversion**: Robust type conversion system for basic and custom types",
    "translatedContent": "- **型変換**: 基本型およびカスタム型に対応した堅牢な型変換システム"
  },
  {
    "row": 13,
    "rowsha": "g1DL1Jl6JI4B7idGvGgfpOM8UEAEv9ptqA85Q2GGeKw=",
    "originContent": "- **XML Configuration**: Full XML configuration support with namespace handling",
    "translatedContent": "- **XML設定**: ネームスペース処理を含む完全なXML設定サポート"
  },
  {
    "row": 14,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 15,
    "rowsha": "kFSqUI2RP5FmrBAQXX6irex7jkbgkTmnTHF3ElupYos=",
    "originContent": "## 💡 Technical Highlights",
    "translatedContent": "## 💡 技術的ハイライト"
  },
  {
    "row": 16,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 17,
    "rowsha": "epamygvNn7TKzmAZACGXLqh7HBUVwzfiScjowj1+J6c=",
    "originContent": "### 1. Circular Dependency Resolution",
    "translatedContent": "### 1. 循環依存性の解決"
  },
  {
    "row": 18,
    "rowsha": "H4gsHBx2SfAkEs7j5fwcuopjI8HR7zWGjAV6yB5gCGw=",
    "originContent": "Implemented a sophisticated three-level cache mechanism to handle circular dependencies:",
    "translatedContent": "循環依存性を処理するために高度な三層キャッシュ機構を実装しました："
  },
  {
    "row": 19,
    "rowsha": "0jGJMRw2KLeNCK5UePj1HAf1xH3VMCNoMZlyAyHksok=",
    "originContent": "```java",
    "translatedContent": "```java"
  },
  {
    "row": 20,
    "rowsha": "0+PNZDo3kck6Ecwl9+QlSfUDm1Ase8nfyiqvYLDfXcU=",
    "originContent": "// Three-level cache structure",
    "translatedContent": "// Three-level cache structure"
  },
  {
    "row": 21,
    "rowsha": "MpCxsglD3q5FHoLvr78QMe/AmdZNfyAeCL5eIXG9nB0=",
    "originContent": "Map<String, Object> singletonObjects = new ConcurrentHashMap<>();      // Level 1: Fully initialized beans",
    "translatedContent": "Map<String, Object> singletonObjects = new ConcurrentHashMap<>();      // Level 1: Fully initialized beans"
  },
  {
    "row": 22,
    "rowsha": "PqgwxOjR6Wo7GO09ca6KPI3S2Hs6BNnCd0I7Cv4J6bY=",
    "originContent": "Map<String, Object> earlySingletonObjects = new HashMap<>();           // Level 2: Early exposed beans",
    "translatedContent": "Map<String, Object> earlySingletonObjects = new HashMap<>();           // Level 2: Early exposed beans"
  },
  {
    "row": 23,
    "rowsha": "G5jYlcR5AaIR5nGSZiZAt7ZCSMW3RQWKBrqZBNz3QL4=",
    "originContent": "Map<String, ObjectFactory<?>> singletonFactories = new HashMap<>();    // Level 3: Bean factories",
    "translatedContent": "Map<String, ObjectFactory<?>> singletonFactories = new HashMap<>();    // Level 3: Bean factories"
  },
  {
    "row": 24,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 25,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### 2. AOPの実装"
  },
  {
    "row": 26,
    "rowsha": "AnmxT+qltn4dIBxvc0rlxVF3fSgzC/qXzcUg0qotPeU=",
    "originContent": "### 2. AOP Implementation",
    "translatedContent": "- JDKおよびCGLIBの両方を使用した動的プロキシ生成"
  },
  {
    "row": 27,
    "rowsha": "UltMCdo0UpI79AKEzi8mu3GCoi4l7I14Eoc+p2ZqDv8=",
    "originContent": "- Dynamic proxy generation using both JDK and CGLIB",
    "translatedContent": "- AspectJポイントカット式のサポート"
  },
  {
    "row": 28,
    "rowsha": "8hDjeUuvdzCk8BzcOwVddCsqcjFJhwPpTTkIzvaHCcE=",
    "originContent": "- Support for AspectJ pointcut expressions",
    "translatedContent": "- 柔軟なアドバイス種類（Before、After、Around）"
  },
  {
    "row": 29,
    "rowsha": "jCPvSthQeRHXKPcQ8f3FSB/CfqFT9pjgKlDAcuRs4ts=",
    "originContent": "- Flexible advice types (Before, After, Around)",
    "translatedContent": ""
  },
  {
    "row": 30,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### 3. Beanライフサイクル管理"
  },
  {
    "row": 31,
    "rowsha": "FJ0qvtpndB24AxbjPsLMAFdq6flui7FLnSWOoFBUHa0=",
    "originContent": "### 3. Bean Lifecycle Management",
    "translatedContent": "- 完全なライフサイクルフック（InitializingBean、DisposableBean）"
  },
  {
    "row": 32,
    "rowsha": "zw9NiKTABHkvuXTYR++0X1xxyEsiSX0UNt7awajsCaY=",
    "originContent": "- Complete lifecycle hooks (InitializingBean, DisposableBean)",
    "translatedContent": "- カスタマイズ用のBeanPostProcessorサポート"
  },
  {
    "row": 33,
    "rowsha": "611a7gJ3IojhMRzeYnGWZusmRWJZcXM1AhSQRnQ/K10=",
    "originContent": "- BeanPostProcessor support for customization",
    "translatedContent": "- Awareインターフェース群の実装"
  },
  {
    "row": 34,
    "rowsha": "Tu8ddrkncmzUsD2TVz43so9VvpRc6ooRFyJwH26iKYc=",
    "originContent": "- Aware interface family implementation",
    "translatedContent": ""
  },
  {
    "row": 35,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## 🛠️ 技術スタック"
  },
  {
    "row": 36,
    "rowsha": "C7da05xtiBkDDLHHx7/xj6ezavbskMyMuV/BqhlRzXw=",
    "originContent": "## 🛠️ Technical Stack",
    "translatedContent": ""
  },
  {
    "row": 37,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "- **言語**: Java 17"
  },
  {
    "row": 38,
    "rowsha": "F9t3gBWATE+w95JnWK7bJ53c62lCf1AqAyQF8Lmrzhg=",
    "originContent": "- **Language**: Java 17",
    "translatedContent": "- **ビルドツール**: Maven 3.8.1"
  },
  {
    "row": 39,
    "rowsha": "8gaG5USUYUWFo34X8S5ON+wJ+7CGE7aAbG12UmSPLnY=",
    "originContent": "- **Build Tool**: Maven 3.8.1",
    "translatedContent": "- **テスト**: JUnit 5"
  },
  {
    "row": 40,
    "rowsha": "qhg2mTdoKHkdp1ydHV7RoTaECFmeLvn1SS5V0jxUwV0=",
    "originContent": "- **Testing**: JUnit 5",
    "translatedContent": "- **依存関係**:"
  },
  {
    "row": 41,
    "rowsha": "WtqHXjQ9JwWYF/5s8iI2eVr/eGAG1aRWeH10Azp43E4=",
    "originContent": "- **Dependencies**:",
    "translatedContent": "  - XML解析用のDOM4J"
  },
  {
    "row": 42,
    "rowsha": "JEEitD+O+PIc6Fx/bD8biMDhaWXOW55xtgDWVh438hA=",
    "originContent": "  - DOM4J for XML parsing",
    "translatedContent": "  - AOPプロキシ用のCGLIB"
  },
  {
    "row": 43,
    "rowsha": "lK9IZ3yb/tiNYeR2DsizYuvsyLbWMwXiS1IENAxcvnc=",
    "originContent": "  - CGLIB for AOP proxy",
    "translatedContent": "  - ポイントカット式用のAspectJ"
  },
  {
    "row": 44,
    "rowsha": "w2HjwAJeR22/+hFgBqfydX2ArdIBdbfbKni3nv0my+s=",
    "originContent": "  - AspectJ for pointcut expressions",
    "translatedContent": "  - ロギング用のLogback"
  },
  {
    "row": 45,
    "rowsha": "/d6l0T5ch2vuNOPUdIhpltVKd77j1sffRvP8Zz8WiOo=",
    "originContent": "  - Logback for logging",
    "translatedContent": ""
  },
  {
    "row": 46,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## 📋 プロジェクト構成"
  },
  {
    "row": 47,
    "rowsha": "zfaZHemlR3xhcEFAMcxg176G6DlEvTCt33LssovuxBU=",
    "originContent": "## 📋 Project Structure",
    "translatedContent": ""
  },
  {
    "row": 48,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 49,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 50,
    "rowsha": "IyZ9Ni9iRdTC1iwLQy2SPRaLKnK85gUH5Yq0BW23YEU=",
    "originContent": "src/main/java/com/minispring/",
    "translatedContent": "src/main/java/com/minispring/"
  },
  {
    "row": 51,
    "rowsha": "W6KUm/K5MgFNuTfoa33+humkAAHSk2nP9bf/sVnS0dU=",
    "originContent": "├── beans/          # IoC container implementation",
    "translatedContent": "├── beans/          # IoC container implementation"
  },
  {
    "row": 52,
    "rowsha": "K/mBWLy+M1PO6BnG+M+rVfYdVEDIBzNftlMUGqMWL1w=",
    "originContent": "├── context/        # Application context and event system",
    "translatedContent": "├── context/        # Application context and event system"
  },
  {
    "row": 53,
    "rowsha": "AhU9RcJcQbMwwHYloxf1oc4H/cK/KBGmGcXqtiJbbg4=",
    "originContent": "├── core/           # Core utilities and type conversion",
    "translatedContent": "├── core/           # Core utilities and type conversion"
  },
  {
    "row": 54,
    "rowsha": "4twnMnoyi9puN/CY4p96WjnnBNz44UyhAjYf1aIADX8=",
    "originContent": "├── aop/            # AOP framework implementation",
    "translatedContent": "├── aop/            # AOP framework implementation"
  },
  {
    "row": 55,
    "rowsha": "J64w7V8q1n9tdkz8DSck/ahWVPBoUU5iuW7Rw7mI23E=",
    "originContent": "└── web/            # Web-specific features",
    "translatedContent": "└── web/            # Web-specific features"
  },
  {
    "row": 56,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 57,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## 🎯 実装の詳細"
  },
  {
    "row": 58,
    "rowsha": "MrWkga484VbSPna0B2/E64cz57qLVRyNIJZaxqBS/rs=",
    "originContent": "## 🎯 Implementation Details",
    "translatedContent": ""
  },
  {
    "row": 59,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### IoCコンテナ"
  },
  {
    "row": 60,
    "rowsha": "Ms74jLyI7qpO0vRQzi9a7Z6Y1E1WnX78LrtKsIc37NM=",
    "originContent": "### IoC Container",
    "translatedContent": "- ビーン定義と登録システム"
  },
  {
    "row": 61,
    "rowsha": "xJEcMCculysE8OKVQqUAQ9J1x2f+T7YJVC9+2BvLi1E=",
    "originContent": "- Bean definition and registration system",
    "translatedContent": "- 依存性注入（コンストラクタおよびセッター）"
  },
  {
    "row": 62,
    "rowsha": "6ynzBhPKqHI8PuonyiZDv4/oJgfo40y2rzqxA/N8C7M=",
    "originContent": "- Dependency injection (constructor and setter)",
    "translatedContent": "- ビーンスコープ管理（シングルトン、プロトタイプ）"
  },
  {
    "row": 63,
    "rowsha": "wKKGTc6R3N7b7LMKzmEMi/DEX4i4CbcjtEduSfgDIZY=",
    "originContent": "- Bean scope management (singleton, prototype)",
    "translatedContent": "- プロパティ値の処理"
  },
  {
    "row": 64,
    "rowsha": "S4KafLv+oYWEuNHPrO86UrI9Y/ldun9oa2HhgkgSnJo=",
    "originContent": "- Property value handling",
    "translatedContent": ""
  },
  {
    "row": 65,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### AOPフレームワーク"
  },
  {
    "row": 66,
    "rowsha": "NcWH0PguIa2wIWwXJEXX7Jc3nw38nJOtsBTRfTKqdds=",
    "originContent": "### AOP Framework",
    "translatedContent": "- ポイントカット式の解析"
  },
  {
    "row": 67,
    "rowsha": "UC3l78HKWwyFNm3mEk5d6scDSXh1xPukNpHKynr8zTA=",
    "originContent": "- Pointcut expression parsing",
    "translatedContent": "- 動的プロキシ生成"
  },
  {
    "row": 68,
    "rowsha": "3r8Zf3GpJpH/P6s8jsxZp0EYV6llPdeQb6e4Rzx5fhI=",
    "originContent": "- Dynamic proxy generation",
    "translatedContent": "- メソッドのインターセプトと強化"
  },
  {
    "row": 69,
    "rowsha": "tFBDu70cHcC5tzzNFzeQYR8fHKgpLJq8UboStMk6faI=",
    "originContent": "- Method interception and enhancement",
    "translatedContent": "- AspectJ統合"
  },
  {
    "row": 70,
    "rowsha": "xP9b+sIdiH7qnBZ/RMGJkyIW8xVyBe1Ek29icsC7L+Y=",
    "originContent": "- AspectJ integration",
    "translatedContent": ""
  },
  {
    "row": 71,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### リソース管理"
  },
  {
    "row": 72,
    "rowsha": "wS3bhviBt+UMoT2iRZ/FQqcOZJiA13oBhbzUC+FZepE=",
    "originContent": "### Resource Management",
    "translatedContent": "- 統一されたリソース抽象化"
  },
  {
    "row": 73,
    "rowsha": "zPazF6jgvdOf3KUf0MmkQdfogm/ivRvQyD6btHWIVDs=",
    "originContent": "- Unified resource abstraction",
    "translatedContent": "- クラスパスおよびファイルシステム対応"
  },
  {
    "row": 74,
    "rowsha": "IAz+W3v8FA7QvZG7mYwmvChoQ+um/w2vGOoCYyTqu28=",
    "originContent": "- Classpath and file system support",
    "translatedContent": "- リソース読み込み戦略"
  },
  {
    "row": 75,
    "rowsha": "a08duzD/q5s5E4AiroQk2O/sh/jqIrorZhnjbLSeDEw=",
    "originContent": "- Resource loading strategies",
    "translatedContent": ""
  },
  {
    "row": 76,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## 🏗️ アーキテクチャ"
  },
  {
    "row": 77,
    "rowsha": "j7Qa/uOwz3Ij+Hnjokg/zzgtLQPmUlHkOFaMDL3tEog=",
    "originContent": "## 🏗️ Architecture",
    "translatedContent": ""
  },
  {
    "row": 78,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "フレームワークは関心の分離が明確なモジュラーアーキテクチャに従っています："
  },
  {
    "row": 79,
    "rowsha": "ELFoYlDARJLogolxSuYMtPpoOLy2Bu0CR0Qj3fJzEzQ=",
    "originContent": "The framework follows a modular architecture with clear separation of concerns:",
    "translatedContent": "1. **コアコンテナ**：ビーンとその依存関係を管理"
  },
  {
    "row": 80,
    "rowsha": "S0N3TxBw9GhJMQtZ3F8MwH8uXqo6c9qG8dLJGG2BhVw=",
    "originContent": "1. **Core Container**: Manages beans and their dependencies",
    "translatedContent": "2. **AOPモジュール**：アスペクト指向プログラミングを処理"
  },
  {
    "row": 81,
    "rowsha": "ZTOdt3gifZh2XC99hYHHRVdn6NdcBamHKPE2j730pqc=",
    "originContent": "2. **AOP Module**: Handles aspect-oriented programming",
    "translatedContent": "3. **コンテキストモジュール**：アプリケーションコンテキストとイベントシステムを提供"
  },
  {
    "row": 82,
    "rowsha": "lrN8gE0t3hqzpZxItJgMAYHX7zgcbvmXSWGjR6wFP2c=",
    "originContent": "3. **Context Module**: Provides application context and event system",
    "translatedContent": "4. **リソースモジュール**：リソースの読み込みとアクセスを管理"
  },
  {
    "row": 83,
    "rowsha": "8AMaIheJZmcZY1MAhz4a64gR6DPdiCfNjBJ9NzIZBKI=",
    "originContent": "4. **Resource Module**: Manages resource loading and access",
    "translatedContent": ""
  },
  {
    "row": 84,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## 🚀 はじめに"
  },
  {
    "row": 85,
    "rowsha": "aKVJgV9gnSk4MAp/Su+G/EZ8/96Lvx8p89GEoOBOwkQ=",
    "originContent": "## 🚀 Getting Started",
    "translatedContent": ""
  },
  {
    "row": 86,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 87,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 88,
    "rowsha": "vcegP1O5Wi602xAmQfzQtagZ/FNC0twX8fgwLKDkTWs=",
    "originContent": "# Clone the project",
    "translatedContent": "# Clone the project"
  },
  {
    "row": 89,
    "rowsha": "pJuiDHv95SVVIT5xNnepoesio80PDdTw6ej3m77u0EI=",
    "originContent": "git clone https://github.com/ronald-debugging/Ronald-miniSpring.git",
    "translatedContent": "git clone https://github.com/ronald-debugging/Ronald-miniSpring.git"
  },
  {
    "row": 90,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 91,
    "rowsha": "p4PyNwU9gtas4o0naPJERS2UODNwUmldWCpsuCDcKhA=",
    "originContent": "# Build the project",
    "translatedContent": "# Build the project"
  },
  {
    "row": 92,
    "rowsha": "sPMwpBw3VSmmefLPdISc8JgxSg7HNSLJtowN65WnZ74=",
    "originContent": "mvn clean install",
    "translatedContent": "mvn clean install"
  },
  {
    "row": 93,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 94,
    "rowsha": "tHNnyKNSkagtJZOFqKnkFV8ViCmgW+rly9Ij4SArNr4=",
    "originContent": "# Run tests",
    "translatedContent": "# Run tests"
  },
  {
    "row": 95,
    "rowsha": "qsV4MQIHqgL6bFk4VkA5jg+5+sNMeMtTW+sQeZwboh0=",
    "originContent": "mvn test",
    "translatedContent": "mvn test"
  },
  {
    "row": 96,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 97,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## 📚 学習リソース"
  },
  {
    "row": 98,
    "rowsha": "Z92SMUK5ouMhsXZptcbom9ALkMWuIpkHeHJuQhH7WSQ=",
    "originContent": "## 📚 Learning Resources",
    "translatedContent": ""
  },
  {
    "row": 99,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "- Spring Framework 公式ドキュメント"
  },
  {
    "row": 100,
    "rowsha": "RQnRVlxkAJ/G5oZRSVbiRSzsWOsVFOxfHPTHDMyhnqA=",
    "originContent": "- Spring Framework Official Documentation",
    "translatedContent": "- 「Spring Revealed」"
  },
  {
    "row": 101,
    "rowsha": "83PpzT0+YXDAvAQKiZ2JvSSAZ7nsUCnZed2J6LhSlbc=",
    "originContent": "- \"Spring Revealed\"",
    "translatedContent": "- 「Spring ソースコード深堀り解析」"
  },
  {
    "row": 102,
    "rowsha": "yn+z4Gt8lWL8RUbPFbQlOzBty1oVfyr0vxdrUE9HcQQ=",
    "originContent": "- \"Spring Source Code Deep Analysis\"",
    "translatedContent": ""
  },
  {
    "row": 103,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## 🔄 現状"
  },
  {
    "row": 104,
    "rowsha": "cN+rDB9GWW89lthn21QLOugu6kNKzD5kGqgfMbMv8XQ=",
    "originContent": "## 🔄 Current Status",
    "translatedContent": ""
  },
  {
    "row": 105,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "全てのコア機能は実装およびテスト済み："
  },
  {
    "row": 106,
    "rowsha": "1xQiD4sL0rD8gQYpCCexnx6GetCwAZM7H1kmSEVUM3k=",
    "originContent": "All core features have been implemented and tested:",
    "translatedContent": "- ✅ IoC コンテナ"
  },
  {
    "row": 107,
    "rowsha": "xpTQ/m//vaMKe/hJ8TLLbOW5pVRykX80FaaHyJdG8ak=",
    "originContent": "- ✅ IoC Container",
    "translatedContent": "- ✅ AOP フレームワーク"
  },
  {
    "row": 108,
    "rowsha": "AmMgQb72mZZSS3xueD+GQq3XpIZhhuRUVmAhLap1Ty0=",
    "originContent": "- ✅ AOP Framework",
    "translatedContent": "- ✅ Bean ライフサイクル"
  },
  {
    "row": 109,
    "rowsha": "CGX0RsN9pxLtvts1GzbDL7ZoGfbfG3Gos59TT8MYGqg=",
    "originContent": "- ✅ Bean Lifecycle",
    "translatedContent": "- ✅ リソース管理"
  },
  {
    "row": 110,
    "rowsha": "+BSkDrJGBLbHDNUcT506Xj5W3TEa9LkHljs6cpicXiY=",
    "originContent": "- ✅ Resource Management",
    "translatedContent": "- ✅ イベントシステム"
  },
  {
    "row": 111,
    "rowsha": "s8OMI7ZlnezsD8P/cSBqeb5J0zQLVk2XhBNSp5rNtWQ=",
    "originContent": "- ✅ Event System",
    "translatedContent": "- ✅ 型変換"
  },
  {
    "row": 112,
    "rowsha": "zp3GDzHtNJmskRa6XWKhWde9YW5qlmoSKLlBoPAOOCo=",
    "originContent": "- ✅ Type Conversion",
    "translatedContent": "- ✅ XML 設定"
  },
  {
    "row": 113,
    "rowsha": "mL7YEC0rJowVfo2KsXt3QPFt+Q+R29OIC37drMh+7Eo=",
    "originContent": "- ✅ XML Configuration",
    "translatedContent": "- ✅ 循環依存性の解決"
  },
  {
    "row": 114,
    "rowsha": "nsEsLjoD+0Pbie4rBv+rdynD0a5qgEmFypkeC3+sCXk=",
    "originContent": "- ✅ Circular Dependency Resolution",
    "translatedContent": ""
  },
  {
    "row": 115,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 116,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  }
]