[
  {
    "Id": 1,
    "Content": "\n<div align=\"right\">\n  <details>\n    <summary >ЁЯМР Language</summary>\n    <div>\n      <div align=\"center\">\n        <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=en\">English</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-CN\">чоАф╜Уф╕нцЦЗ</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-TW\">ч╣БщлФф╕нцЦЗ</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ja\">цЧецЬмшкЮ</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ko\">эХЬъ╡ньЦ┤</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=hi\">рд╣рд┐рдиреНрджреА</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=th\">р╣Др╕Чр╕в</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fr\">Fran├зais</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=de\">Deutsch</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=es\">Espa├▒ol</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=it\">Italiano</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ru\">╨а╤Г╤Б╤Б╨║╨╕╨╣</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pt\">Portugu├кs</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=nl\">Nederlands</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pl\">Polski</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ar\">╪з┘Д╪╣╪▒╪и┘К╪й</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fa\">┘Б╪з╪▒╪│█М</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=tr\">T├╝rk├зe</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=vi\">Tiс║┐ng Viс╗Зt</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=id\">Bahasa Indonesia</a>\n      </div>\n    </div>\n  </details>\n</div>\n\n<div align=\"center\">\n\n# ЁЯЪА No Time to Train!  \n### Training-Free Reference-Based Instance Segmentation  \n[![GitHub](https://img.shields.io/badge/%E2%80%8B-No%20Time%20To%20Train-black?logo=github)](https://github.com/miquel-espinosa/no-time-to-train)\n[![Website](https://img.shields.io/badge/ЁЯМР-Project%20Page-grey)](https://miquel-espinosa.github.io/no-time-to-train/)\n[![arXiv](https://img.shields.io/badge/arXiv-2507.02798-b31b1b)](https://arxiv.org/abs/2507.02798)\n\n**State-of-the-art (Papers with Code)**",
    "ContentSha": "lG1vuwmuqLt4d95/PBMz1H5HG0r+JfvC/FVnqNQvTnM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<div align=\"right\">\n  <details>\n    <summary >ЁЯМР ржнрж╛рж╖рж╛</summary>\n    <div>\n      <div align=\"center\">\n        <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=en\">ржЗржВрз░рж╛ржЬрзА</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-CN\">рж╕рж╣ржЬ ржЪрзАржи</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-TW\">ржкрз░ржорзНржкрз░рж╛ржЧржд ржЪрзАржи</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ja\">ржЬрж╛ржкрж╛ржирзА</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ko\">ржХрзЛрз░рж┐рзЯрж╛ржи</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=hi\">рж╣рж┐ржирзНржжрзА</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=th\">ржерж╛ржЗ</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fr\">ржлрз░рж╛ржЫрзА</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=de\">ржЬрж╛рз░рзНржорж╛ржи</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=es\">рж╕рзНржкрзЗржирж┐ржЫ</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=it\">ржЗржЯрж╛рж▓рж┐рзЯрж╛ржи</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ru\">рз░рж╛ржЫрж┐рзЯрж╛ржи</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pt\">ржкрз░рзНрждрзБржЧрзАржЬ</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=nl\">ржбрж╛ржЪ</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pl\">ржкрзЛрж▓рж┐ржЪ</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ar\">ржЖрз░ржмрзА</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fa\">ржлрж╛рз░рзНржЫрзА</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=tr\">рждрзБрз░рзНржХрзА</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=vi\">ржнрж┐рзЯрзЗржЯржирж╛ржорзА</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=id\">ржЗржгрзНржбрзЛржирзЗржЫрж┐рзЯрж╛ржи</a>\n      </div>\n    </div>\n  </details>\n</div>\n\n<div align=\"center\">\n\n# ЁЯЪА ржкрзНрз░рж╢рж┐ржХрзНрж╖ржгрз░ рж╕ржорзЯ ржирж╛ржЗ!  \n### ржкрзНрз░рж╢рж┐ржХрзНрж╖ржг-ржорзБржХрзНржд рз░рзЗржлрж╛рз░рзЗржЮрзНржЪ-ржнрж┐рждрзНрждрж┐ржХ ржЗржирж╖рзНржЯрзЗржирзНрж╕ ржЫрзЗржЧржорзЗржгрзНржЯрзЗржЪржи  \n[![GitHub](https://img.shields.io/badge/%E2%80%8B-No%20Time%20To%20Train-black?logo=github)](https://github.com/miquel-espinosa/no-time-to-train)\n[![Website](https://img.shields.io/badge/ЁЯМР-Project%20Page-grey)](https://miquel-espinosa.github.io/no-time-to-train/)\n[![arXiv](https://img.shields.io/badge/arXiv-2507.02798-b31b1b)](https://arxiv.org/abs/2507.02798)\n\n**ржЕрждрзНржпрж╛ржзрзБржирж┐ржХ (Papers with Code)**\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<div align=\"right\">"
      },
      {
        "row": 2,
        "rowsha": "cWgam+tnnXudu7i74+ahMEGk/A9dQS+EwWLAIfi3dHk=",
        "originContent": "<div align=\"right\">",
        "translatedContent": "  <details>"
      },
      {
        "row": 3,
        "rowsha": "orOcu5ARna/hb3RUkj6dBI8pHTM3WHeTvby17l5E0h0=",
        "originContent": "  <details>",
        "translatedContent": "    <summary >ЁЯМР ржнрж╛рж╖рж╛</summary>"
      },
      {
        "row": 4,
        "rowsha": "TtgkLzblnvP0q9aAIVXt6s2LczXjy5k+QvHKcU0/5Ms=",
        "originContent": "    <summary >ЁЯМР Language</summary>",
        "translatedContent": "    <div>"
      },
      {
        "row": 5,
        "rowsha": "fZtk4rPTAJEEslnbhSVkHEcPlsctYSzAV7CDPL3rJmA=",
        "originContent": "    <div>",
        "translatedContent": "      <div align=\"center\">"
      },
      {
        "row": 6,
        "rowsha": "9KQxOeJSigvTmGWO+mtnl8kZY9zQfueoy8sk4lYm09Q=",
        "originContent": "      <div align=\"center\">",
        "translatedContent": "        <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=en\">ржЗржВрз░рж╛ржЬрзА</a>"
      },
      {
        "row": 7,
        "rowsha": "G45/LutNWZI9vxtXslbbbHwCOULgzFXWYAhu/93l4zI=",
        "originContent": "        <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=en\">English</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-CN\">рж╕рж╣ржЬ ржЪрзАржи</a>"
      },
      {
        "row": 8,
        "rowsha": "Ats18u3YZRckavncoTKGYRiwpbiHfSctTBbIhjCGos0=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-CN\">чоАф╜Уф╕нцЦЗ</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-TW\">ржкрз░ржорзНржкрз░рж╛ржЧржд ржЪрзАржи</a>"
      },
      {
        "row": 9,
        "rowsha": "lEz2ylDdTMdB9rQtSXgGSpKBCBtWlYkWIREBeO0lors=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-TW\">ч╣БщлФф╕нцЦЗ</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ja\">ржЬрж╛ржкрж╛ржирзА</a>"
      },
      {
        "row": 10,
        "rowsha": "97L3ibJEnPIvjf8+YiCmr3atMgUFb6w4O/wC2/BA6/8=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ja\">цЧецЬмшкЮ</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ko\">ржХрзЛрз░рж┐рзЯрж╛ржи</a>"
      },
      {
        "row": 11,
        "rowsha": "3oFj7Mkpu+D6QswdcT3vKHKawPNXUF6RcbCVg2PWbsQ=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ko\">эХЬъ╡ньЦ┤</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=hi\">рж╣рж┐ржирзНржжрзА</a>"
      },
      {
        "row": 12,
        "rowsha": "ZF8CbRf3KWHXQPzg4G6ekXVvORqsWzEevfTrObmVBmE=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=hi\">рд╣рд┐рдиреНрджреА</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=th\">ржерж╛ржЗ</a>"
      },
      {
        "row": 13,
        "rowsha": "ZtyN4+DuHy9qVSeUKbBY2nye7JCV1FH5IIAYJ8iuxVA=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=th\">р╣Др╕Чр╕в</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fr\">ржлрз░рж╛ржЫрзА</a>"
      },
      {
        "row": 14,
        "rowsha": "wtzRxSgQuRAkU/Q1AiRlvOKvp5J8Dgi8+8ZAkYRT1Mk=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fr\">Fran├зais</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=de\">ржЬрж╛рз░рзНржорж╛ржи</a>"
      },
      {
        "row": 15,
        "rowsha": "5ok7LiijP07K5Z8qLgSjMWA+zgKpfufQnFwisBo9DLA=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=de\">Deutsch</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=es\">рж╕рзНржкрзЗржирж┐ржЫ</a>"
      },
      {
        "row": 16,
        "rowsha": "HvcD3nQvNLh4xFZRvMx9b+Bc5ka6E8sJLqrMtv6u4G8=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=es\">Espa├▒ol</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=it\">ржЗржЯрж╛рж▓рж┐рзЯрж╛ржи</a>"
      },
      {
        "row": 17,
        "rowsha": "r9VPV8xQaIWBEvGEal9OvJLNSS4zTgMiMbGN26yYZvI=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=it\">Italiano</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ru\">рз░рж╛ржЫрж┐рзЯрж╛ржи</a>"
      },
      {
        "row": 18,
        "rowsha": "Xy5Fhh1idYriSI/ExdPGiHIMK0rm7aPt0ZcqU6mVMlU=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ru\">╨а╤Г╤Б╤Б╨║╨╕╨╣</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pt\">ржкрз░рзНрждрзБржЧрзАржЬ</a>"
      },
      {
        "row": 19,
        "rowsha": "dbSyNaa/57ty5bbGG7pZQhxzdFEK8F/TaNhnyeOGOR0=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pt\">Portugu├кs</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=nl\">ржбрж╛ржЪ</a>"
      },
      {
        "row": 20,
        "rowsha": "kjU5Io0pZZRzjb5adc0mC1Suop9TAc8ftGlC3R7JYoI=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=nl\">Nederlands</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pl\">ржкрзЛрж▓рж┐ржЪ</a>"
      },
      {
        "row": 21,
        "rowsha": "xowAjymdhYslq9cLyCu6eUUTJCiVR2V1KJZMTFRR5+o=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pl\">Polski</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ar\">ржЖрз░ржмрзА</a>"
      },
      {
        "row": 22,
        "rowsha": "41MPPnS6gKxjrGVAF9Fkmpeu0lfZ/zjCHi/HKf9BCW4=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ar\">╪з┘Д╪╣╪▒╪и┘К╪й</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fa\">ржлрж╛рз░рзНржЫрзА</a>"
      },
      {
        "row": 23,
        "rowsha": "trPBM6f6uyK0oqDU92+2pGrjWXOlpBmlm34RAvqknvY=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fa\">┘Б╪з╪▒╪│█М</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=tr\">рждрзБрз░рзНржХрзА</a>"
      },
      {
        "row": 24,
        "rowsha": "I4vaUyHHnPcJ/do6ED/Bs8dDKau8rbGs7Lu4MlcK8Ho=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=tr\">T├╝rk├зe</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=vi\">ржнрж┐рзЯрзЗржЯржирж╛ржорзА</a>"
      },
      {
        "row": 25,
        "rowsha": "KuIxc2kpouXB+JvjrQsu7EjevEWN1zf7o+8wmwox9L0=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=vi\">Tiс║┐ng Viс╗Зt</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=id\">ржЗржгрзНржбрзЛржирзЗржЫрж┐рзЯрж╛ржи</a>"
      },
      {
        "row": 26,
        "rowsha": "YXMw4LVKVlCbi+Zhb3k7txrbP2uu14qlFi++jxrMsHM=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=id\">Bahasa Indonesia</a>",
        "translatedContent": "      </div>"
      },
      {
        "row": 27,
        "rowsha": "0OM5wNEm0TO56MEBvQzL7AUZM7/3OpgIeqRf2zFre3Q=",
        "originContent": "      </div>",
        "translatedContent": "    </div>"
      },
      {
        "row": 28,
        "rowsha": "fcjTfY+fs8YnY5slBs1sZvWPAqEQR7tzaBDO54skkGQ=",
        "originContent": "    </div>",
        "translatedContent": "  </details>"
      },
      {
        "row": 29,
        "rowsha": "+fQNH2ldI7UM/rqRscP3hUSWAmw1HvQ2wEKDN8JagT0=",
        "originContent": "  </details>",
        "translatedContent": "</div>"
      },
      {
        "row": 30,
        "rowsha": "qsMmUbEPVnxGG5tPJV1vsfpoWbU2jYvZpRr5IKshzyM=",
        "originContent": "</div>",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<div align=\"center\">"
      },
      {
        "row": 32,
        "rowsha": "94MDjHJY1ZLwHNTLIEUIfk7TMc9cq1L/1FmwhqBTe/k=",
        "originContent": "<div align=\"center\">",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "# ЁЯЪА ржкрзНрз░рж╢рж┐ржХрзНрж╖ржгрз░ рж╕ржорзЯ ржирж╛ржЗ!  "
      },
      {
        "row": 34,
        "rowsha": "M2z5PpMcecoVKOuL1SHlc+Nemsj5RhARR5H/VCXUbU4=",
        "originContent": "# ЁЯЪА No Time to Train!  ",
        "translatedContent": "### ржкрзНрз░рж╢рж┐ржХрзНрж╖ржг-ржорзБржХрзНржд рз░рзЗржлрж╛рз░рзЗржЮрзНржЪ-ржнрж┐рждрзНрждрж┐ржХ ржЗржирж╖рзНржЯрзЗржирзНрж╕ ржЫрзЗржЧржорзЗржгрзНржЯрзЗржЪржи  "
      },
      {
        "row": 35,
        "rowsha": "sBABAz4Jw3ska9lsdsi3rPgLmZF2UtZveFVXqUbPW4o=",
        "originContent": "### Training-Free Reference-Based Instance Segmentation  ",
        "translatedContent": "[![GitHub](https://img.shields.io/badge/%E2%80%8B-No%20Time%20To%20Train-black?logo=github)](https://github.com/miquel-espinosa/no-time-to-train)"
      },
      {
        "row": 36,
        "rowsha": "JtzwGnZRrNQ5I7E9S5GXrFkY4/D5xExLcZYAwT19D64=",
        "originContent": "[![GitHub](https://img.shields.io/badge/%E2%80%8B-No%20Time%20To%20Train-black?logo=github)](https://github.com/miquel-espinosa/no-time-to-train)",
        "translatedContent": "[![Website](https://img.shields.io/badge/ЁЯМР-Project%20Page-grey)](https://miquel-espinosa.github.io/no-time-to-train/)"
      },
      {
        "row": 37,
        "rowsha": "CRyX9LxzyIoLmrrOb7mTcL54XM1hKOGqkgq3VKhx5cE=",
        "originContent": "[![Website](https://img.shields.io/badge/ЁЯМР-Project%20Page-grey)](https://miquel-espinosa.github.io/no-time-to-train/)",
        "translatedContent": "[![arXiv](https://img.shields.io/badge/arXiv-2507.02798-b31b1b)](https://arxiv.org/abs/2507.02798)"
      },
      {
        "row": 38,
        "rowsha": "dt6HOwBuvdMzY99NMmrvjF5F1UqOV/FCSs2Eonn3jFg=",
        "originContent": "[![arXiv](https://img.shields.io/badge/arXiv-2507.02798-b31b1b)](https://arxiv.org/abs/2507.02798)",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "**ржЕрждрзНржпрж╛ржзрзБржирж┐ржХ (Papers with Code)**"
      },
      {
        "row": 40,
        "rowsha": "rSA9HSpS5rcIOZmSZRcPQKvvg2GUNxqsAdOWtJYdOHs=",
        "originContent": "**State-of-the-art (Papers with Code)**",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "\n[**_SOTA 1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/badge/State%20of%20the%20Art-Few--Shot%20Object%20Detection%20on%20MS--COCO%20(1--shot)-21CBCE?style=flat&logo=paperswithcode)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)\n\n[**_SOTA 10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/badge/State%20of%20the%20Art-Few--Shot%20Object%20Detection%20on%20MS--COCO%20(10--shot)-21CBCE?style=flat&logo=paperswithcode)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)\n\n[**_SOTA 30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/badge/State%20of%20the%20Art-Few--Shot%20Object%20Detection%20on%20MS--COCO%20(30--shot)-21CBCE?style=flat&logo=paperswithcode)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference)\n\n<!-- [**_SOTA 1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-1-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)\n\n[**_SOTA 10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-10-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)\n\n[**_SOTA 30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-30-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) -->\n\n</div>\n\n---\n\n> ЁЯЪи **Update (22nd July 2025):** Instructions for custom datasets have been added!\n> \n> ЁЯФФ **Update (16th July 2025):** Code has been updated with instructions!\n\n---\n\n## ЁЯУЛ Table of Contents\n\n- [ЁЯОп Highlights](#-highlights)\n- [ЁЯУЬ Abstract](#-abstract)\n- [ЁЯза Architecture](#-architecture)\n- [ЁЯЫая╕П Installation instructions](#я╕П-installation-instructions)\n  - [1. Clone the repository](#1-clone-the-repository)\n  - [2. Create conda environment](#2-create-conda-environment)\n  - [3. Install SAM2 and DinoV2](#3-install-sam2-and-dinov2)\n  - [4. Download datasets](#4-download-datasets)\n  - [5. Download SAM2 and DinoV2 checkpoints](#5-download-sam2-and-dinov2-checkpoints)\n- [ЁЯУК Inference code: Reproduce 30-shot SOTA results in Few-shot COCO](#-inference-code)\n  - [0. Create reference set](#0-create-reference-set)\n  - [1. Fill memory with references](#1-fill-memory-with-references)\n  - [2. Post-process memory bank](#2-post-process-memory-bank)\n  - [3. Inference on target images](#3-inference-on-target-images)\n  - [Results](#results)",
    "ContentSha": "+yQ5ol79RNsk2le3no6dLpgaMzuy0Nh4xdRCmVNp8FE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "[**_SOTA 1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/badge/State%20of%20the%20Art-Few--Shot%20Object%20Detection%20on%20MS--COCO%20(1--shot)-21CBCE?style=flat&logo=paperswithcode)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)\n\n[**_SOTA 10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/badge/State%20of%20the%20Art-Few--Shot%20Object%20Detection%20on%20MS--COCO%20(10--shot)-21CBCE?style=flat&logo=paperswithcode)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)\n\n[**_SOTA 30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/badge/State%20of%20the%20Art-Few--Shot%20Object%20Detection%20on%20MS--COCO%20(30--shot)-21CBCE?style=flat&logo=paperswithcode)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference)\n\n<!-- [**_SOTA 1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-1-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)\n\n[**_SOTA 10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-10-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)\n\n[**_SOTA 30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-30-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) -->\n\n</div>\n\n---\n\n> ЁЯЪи **ржЖржкржбрзЗржЯ (рзирзи ржЬрзБрж▓рж╛ржЗ рзирзжрзирзл):** ржХрж╛рж╖рзНржЯржо ржбрзЗржЯрж╛рж╕рзЗржЯрз░ ржирж┐рз░рзНржжрзЗрж╢ржирж╛ ржпрзЛржЧ ржХрз░рж╛ рж╣рзИржЫрзЗ!\n> \n> ЁЯФФ **ржЖржкржбрзЗржЯ (рззрзм ржЬрзБрж▓рж╛ржЗ рзирзжрзирзл):** ржХрзЛржбржЯрзЛ ржирж┐рз░рзНржжрзЗрж╢ржирж╛рж╕рж╣ ржЖржкржбрзЗржЯ ржХрз░рж╛ рж╣рзИржЫрзЗ!\n\n---\n\n## ЁЯУЛ рж╕рзВржЪрзАржкрждрзНрз░\n\n- [ЁЯОп ржорзВрж▓ ржмрзИрж╢рж┐рж╖рзНржЯрзНржп](#-highlights)\n- [ЁЯУЬ рж╕ржВржХрзНрж╖рзЗржк](#-abstract)\n- [ЁЯза рж╕рзНржерж╛ржкрждрзНржп](#-architecture)\n- [ЁЯЫая╕П ржЗржирж╖рзНржЯрж▓рзЗрж╢рзНржпржи ржирж┐рз░рзНржжрзЗрж╢ржирж╛](#я╕П-installation-instructions)\n  - [1. рз░рж┐ржк'ржЬрж┐ржЯ'рз░рзА ржХрзНрж▓рзЛржи ржХрз░ржХ](#1-clone-the-repository)\n  - [2. ржХржгрзНржбрж╛ ржкрз░рж┐рз▒рзЗрж╢ рж╕рзГрж╖рзНржЯрж┐ ржХрз░ржХ](#2-create-conda-environment)\n  - [3. SAM2 ржЖрз░рзБ DinoV2 ржЗржирж╖рзНржЯрж▓ ржХрз░ржХ](#3-install-sam2-and-dinov2)\n  - [4. ржбрзЗржЯрж╛рж╕рзЗржЯрж╕ржорзВрж╣ ржбрж╛ржЙржирж▓рзЛржб ржХрз░ржХ](#4-download-datasets)\n  - [5. SAM2 ржЖрз░рзБ DinoV2 ржЪрзЗржХржкржЗржгрзНржЯ ржбрж╛ржЙржирж▓рзЛржб ржХрз░ржХ](#5-download-sam2-and-dinov2-checkpoints)\n- [ЁЯУК ржЗржиржлрж╛рз░рзЗржирзНрж╕ ржХрзЛржб: Few-shot COCO-ржд рзйрзж-shot SOTA ржлрж▓рж╛ржлрж▓ ржкрзБржирз░рзБрзОржкрж╛ржжржи ржХрз░ржХ](#-inference-code)\n  - [0. рз░рзЗржлрж╛рз░рзЗржирзНрж╕ ржЫрзЗржЯ рж╕рзГрж╖рзНржЯрж┐ ржХрз░ржХ](#0-create-reference-set)\n  - [1. рз░рзЗржлрж╛рз░рзЗржирзНрж╕рзЗрз░рзЗ ржорзЗржо'рз░рж┐ ржкрзВрз░рзНржг ржХрз░ржХ](#1-fill-memory-with-references)\n  - [2. ржорзЗржо'рз░рж┐ ржмрзЗржВржХ ржк'рж╖рзНржЯ-ржкрзНрз░ржЪрзЗржЫ ржХрз░ржХ](#2-post-process-memory-bank)\n  - [3. рж▓ржХрзНрж╖рзНржп ржЪрж┐рждрзНрз░рж╕ржорзВрж╣ржд ржЗржиржлрж╛рз░рзЗржирзНрж╕ ржХрз░ржХ](#3-inference-on-target-images)\n  - [ржлрж▓рж╛ржлрж▓](#results)\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "[**_SOTA 1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/badge/State%20of%20the%20Art-Few--Shot%20Object%20Detection%20on%20MS--COCO%20(1--shot)-21CBCE?style=flat&logo=paperswithcode)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)"
      },
      {
        "row": 2,
        "rowsha": "vX9Z1+qZyC7/kZ0bOC7vbDJManiCGbXqZk8AgQ84qM0=",
        "originContent": "[**_SOTA 1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/badge/State%20of%20the%20Art-Few--Shot%20Object%20Detection%20on%20MS--COCO%20(1--shot)-21CBCE?style=flat&logo=paperswithcode)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "[**_SOTA 10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/badge/State%20of%20the%20Art-Few--Shot%20Object%20Detection%20on%20MS--COCO%20(10--shot)-21CBCE?style=flat&logo=paperswithcode)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)"
      },
      {
        "row": 4,
        "rowsha": "9mNYKE3Y0dXOTQkvb8trTyykMWIJMj3aYvs2wc7Dy/w=",
        "originContent": "[**_SOTA 10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/badge/State%20of%20the%20Art-Few--Shot%20Object%20Detection%20on%20MS--COCO%20(10--shot)-21CBCE?style=flat&logo=paperswithcode)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "[**_SOTA 30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/badge/State%20of%20the%20Art-Few--Shot%20Object%20Detection%20on%20MS--COCO%20(30--shot)-21CBCE?style=flat&logo=paperswithcode)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference)"
      },
      {
        "row": 6,
        "rowsha": "M73R//djgj0L2vtwCwYA8Jc2eOp2w4DNk1NVUZYGbTE=",
        "originContent": "[**_SOTA 30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/badge/State%20of%20the%20Art-Few--Shot%20Object%20Detection%20on%20MS--COCO%20(30--shot)-21CBCE?style=flat&logo=paperswithcode)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference)",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<!-- [**_SOTA 1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-1-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)"
      },
      {
        "row": 8,
        "rowsha": "4VnWzjwLPfuR2EgQFIxOj01ti/2HIoGSaFN8NvfL/fU=",
        "originContent": "<!-- [**_SOTA 1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-1-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "[**_SOTA 10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-10-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)"
      },
      {
        "row": 10,
        "rowsha": "5Vzq06fD98ehB9nIJb70JMck7pDlYhuPjdq4pjWemTg=",
        "originContent": "[**_SOTA 10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-10-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "[**_SOTA 30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-30-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) -->"
      },
      {
        "row": 12,
        "rowsha": "Lp3ysorCxnFgKmvnuiyj8llAyxsgKM6TkSxqVFkAtzo=",
        "originContent": "[**_SOTA 30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-30-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) -->",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "</div>"
      },
      {
        "row": 14,
        "rowsha": "qsMmUbEPVnxGG5tPJV1vsfpoWbU2jYvZpRr5IKshzyM=",
        "originContent": "</div>",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "---"
      },
      {
        "row": 16,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "> ЁЯЪи **ржЖржкржбрзЗржЯ (рзирзи ржЬрзБрж▓рж╛ржЗ рзирзжрзирзл):** ржХрж╛рж╖рзНржЯржо ржбрзЗржЯрж╛рж╕рзЗржЯрз░ ржирж┐рз░рзНржжрзЗрж╢ржирж╛ ржпрзЛржЧ ржХрз░рж╛ рж╣рзИржЫрзЗ!"
      },
      {
        "row": 18,
        "rowsha": "B69jZWG+7Bcf3XwTlCrLDq7zJ6R0P5Lb3miM6RyrST8=",
        "originContent": "> ЁЯЪи **Update (22nd July 2025):** Instructions for custom datasets have been added!",
        "translatedContent": "> "
      },
      {
        "row": 19,
        "rowsha": "7E+OPR98r724bpCLatg+QHrDaps++r2OJLVtgCKL5Ck=",
        "originContent": "> ",
        "translatedContent": "> ЁЯФФ **ржЖржкржбрзЗржЯ (рззрзм ржЬрзБрж▓рж╛ржЗ рзирзжрзирзл):** ржХрзЛржбржЯрзЛ ржирж┐рз░рзНржжрзЗрж╢ржирж╛рж╕рж╣ ржЖржкржбрзЗржЯ ржХрз░рж╛ рж╣рзИржЫрзЗ!"
      },
      {
        "row": 20,
        "rowsha": "NVfWm1HSMwF2EdXfgCXJYKpUZ1HZOJsRMEUiFhVdgqc=",
        "originContent": "> ЁЯФФ **Update (16th July 2025):** Code has been updated with instructions!",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "---"
      },
      {
        "row": 22,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## ЁЯУЛ рж╕рзВржЪрзАржкрждрзНрз░"
      },
      {
        "row": 24,
        "rowsha": "gI/1I87HHg3xh0//UJSFC6ZnF4rvkzKNqsRrROy4OT4=",
        "originContent": "## ЁЯУЛ Table of Contents",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "- [ЁЯОп ржорзВрж▓ ржмрзИрж╢рж┐рж╖рзНржЯрзНржп](#-highlights)"
      },
      {
        "row": 26,
        "rowsha": "nNQUAJIz1LHAKaPCqpOwlWw2V1U6+cxSwWn4SP47dYU=",
        "originContent": "- [ЁЯОп Highlights](#-highlights)",
        "translatedContent": "- [ЁЯУЬ рж╕ржВржХрзНрж╖рзЗржк](#-abstract)"
      },
      {
        "row": 27,
        "rowsha": "Yu2Tht6jyrgb81Dv2Lb3Od+nx0nyGk4T4cj16urKV2U=",
        "originContent": "- [ЁЯУЬ Abstract](#-abstract)",
        "translatedContent": "- [ЁЯза рж╕рзНржерж╛ржкрждрзНржп](#-architecture)"
      },
      {
        "row": 28,
        "rowsha": "QlUWr+r6i1bCNXq6zWF9xq7AP6VlaFB+55fzw1uHGh4=",
        "originContent": "- [ЁЯза Architecture](#-architecture)",
        "translatedContent": "- [ЁЯЫая╕П ржЗржирж╖рзНржЯрж▓рзЗрж╢рзНржпржи ржирж┐рз░рзНржжрзЗрж╢ржирж╛](#я╕П-installation-instructions)"
      },
      {
        "row": 29,
        "rowsha": "LvvjM2oWVjYs2n37JdP4KxJEfjrmlXfMHEYRmg3enOQ=",
        "originContent": "- [ЁЯЫая╕П Installation instructions](#я╕П-installation-instructions)",
        "translatedContent": "  - [1. рз░рж┐ржк'ржЬрж┐ржЯ'рз░рзА ржХрзНрж▓рзЛржи ржХрз░ржХ](#1-clone-the-repository)"
      },
      {
        "row": 30,
        "rowsha": "/PgPyQxwaS0cIQHgVFkC3ij55sWJZfYd1yCTh2nzruo=",
        "originContent": "  - [1. Clone the repository](#1-clone-the-repository)",
        "translatedContent": "  - [2. ржХржгрзНржбрж╛ ржкрз░рж┐рз▒рзЗрж╢ рж╕рзГрж╖рзНржЯрж┐ ржХрз░ржХ](#2-create-conda-environment)"
      },
      {
        "row": 31,
        "rowsha": "8sUHJDRIkb9dDdybJg2zcT82y2SDBjUvluSFGb9lVBM=",
        "originContent": "  - [2. Create conda environment](#2-create-conda-environment)",
        "translatedContent": "  - [3. SAM2 ржЖрз░рзБ DinoV2 ржЗржирж╖рзНржЯрж▓ ржХрз░ржХ](#3-install-sam2-and-dinov2)"
      },
      {
        "row": 32,
        "rowsha": "UVdxTXFnRSDBzVF4T2aUxvPHopcFMYmHxQaW1H6OPgE=",
        "originContent": "  - [3. Install SAM2 and DinoV2](#3-install-sam2-and-dinov2)",
        "translatedContent": "  - [4. ржбрзЗржЯрж╛рж╕рзЗржЯрж╕ржорзВрж╣ ржбрж╛ржЙржирж▓рзЛржб ржХрз░ржХ](#4-download-datasets)"
      },
      {
        "row": 33,
        "rowsha": "vmGLfIt0mS9Q/YAti3rKk4FenFiuiawcJga8eA1HvOo=",
        "originContent": "  - [4. Download datasets](#4-download-datasets)",
        "translatedContent": "  - [5. SAM2 ржЖрз░рзБ DinoV2 ржЪрзЗржХржкржЗржгрзНржЯ ржбрж╛ржЙржирж▓рзЛржб ржХрз░ржХ](#5-download-sam2-and-dinov2-checkpoints)"
      },
      {
        "row": 34,
        "rowsha": "JMFveg/CL8TprnWNKkURn6blL5NhMU16pmzjwIauENc=",
        "originContent": "  - [5. Download SAM2 and DinoV2 checkpoints](#5-download-sam2-and-dinov2-checkpoints)",
        "translatedContent": "- [ЁЯУК ржЗржиржлрж╛рз░рзЗржирзНрж╕ ржХрзЛржб: Few-shot COCO-ржд рзйрзж-shot SOTA ржлрж▓рж╛ржлрж▓ ржкрзБржирз░рзБрзОржкрж╛ржжржи ржХрз░ржХ](#-inference-code)"
      },
      {
        "row": 35,
        "rowsha": "4twIP/tovN+tEN+KOehWNX1x6ADAZktZhaU8S6q3qPk=",
        "originContent": "- [ЁЯУК Inference code: Reproduce 30-shot SOTA results in Few-shot COCO](#-inference-code)",
        "translatedContent": "  - [0. рз░рзЗржлрж╛рз░рзЗржирзНрж╕ ржЫрзЗржЯ рж╕рзГрж╖рзНржЯрж┐ ржХрз░ржХ](#0-create-reference-set)"
      },
      {
        "row": 36,
        "rowsha": "XAaZ2BUnk0iPaGrcahhfTfiRzOiOmWVMhXy0yS1URIo=",
        "originContent": "  - [0. Create reference set](#0-create-reference-set)",
        "translatedContent": "  - [1. рз░рзЗржлрж╛рз░рзЗржирзНрж╕рзЗрз░рзЗ ржорзЗржо'рз░рж┐ ржкрзВрз░рзНржг ржХрз░ржХ](#1-fill-memory-with-references)"
      },
      {
        "row": 37,
        "rowsha": "CtFWOMU1Fc9CVZLu2Rzmu0KND5cnswQEsU5Mp7Onhvc=",
        "originContent": "  - [1. Fill memory with references](#1-fill-memory-with-references)",
        "translatedContent": "  - [2. ржорзЗржо'рз░рж┐ ржмрзЗржВржХ ржк'рж╖рзНржЯ-ржкрзНрз░ржЪрзЗржЫ ржХрз░ржХ](#2-post-process-memory-bank)"
      },
      {
        "row": 38,
        "rowsha": "EJbJqD4ueSk6fQ0G3e/0zkWNB+NbmAqL7F5GXdil5cM=",
        "originContent": "  - [2. Post-process memory bank](#2-post-process-memory-bank)",
        "translatedContent": "  - [3. рж▓ржХрзНрж╖рзНржп ржЪрж┐рждрзНрз░рж╕ржорзВрж╣ржд ржЗржиржлрж╛рз░рзЗржирзНрж╕ ржХрз░ржХ](#3-inference-on-target-images)"
      },
      {
        "row": 39,
        "rowsha": "1oE+QeEAJ0TNP+C2O/r0QRzWRsbxz8Blj9YRkbZZZus=",
        "originContent": "  - [3. Inference on target images](#3-inference-on-target-images)",
        "translatedContent": "  - [ржлрж▓рж╛ржлрж▓](#results)"
      },
      {
        "row": 40,
        "rowsha": "0vQANuql7yEE1pWdHwSmSnQDu+2Y61IcAuCgVVNt9wU=",
        "originContent": "  - [Results](#results)",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 3,
    "Content": "- [ЁЯФН Custom dataset](#-custom-dataset)\n  - [0. Prepare a custom dataset тЫ╡ЁЯРж](#0-prepare-a-custom-dataset)\n  - [0.1 If only bbox annotations are available](#01-if-only-bbox-annotations-are-available)\n  - [0.2 Convert coco annotations to pickle file](#02-convert-coco-annotations-to-pickle-file)\n  - [1. Fill memory with references](#1-fill-memory-with-references)\n  - [2. Post-process memory bank](#2-post-process-memory-bank)\n- [ЁЯУЪ Citation](#-citation)\n\n\n## ЁЯОп Highlights\n- ЁЯТб **Training-Free**: No fine-tuning, no prompt engineeringтАФjust a reference image.  \n- ЁЯЦ╝я╕П **Reference-Based**: Segment new objects using just a few examples.  \n- ЁЯФе **SOTA Performance**: Outperforms previous training-free approaches on COCO, PASCAL VOC, and Cross-Domain FSOD.\n\n**Links:**\n- ЁЯз╛ [**arXiv Paper**](https://arxiv.org/abs/2507.02798)  \n- ЁЯМР [**Project Website**](https://miquel-espinosa.github.io/no-time-to-train/)  \n- ЁЯУИ [**Papers with Code**](https://paperswithcode.com/paper/no-time-to-train-training-free-reference)\n\n## ЁЯУЬ Abstract\n",
    "ContentSha": "HKE5vt8IwUJiOubYYPHCrRXZ3fqCpGqVFP3Xj5VV+p4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "- [ЁЯФН ржХрж╛рж╖рзНржЯржо ржбрзЗржЯрж╛рж╕рзЗржЯ](#-custom-dataset)\n  - [0. ржХрж╛рж╖рзНржЯржо ржбрзЗржЯрж╛рж╕рзЗржЯ ржкрзНрз░рж╕рзНрждрзБржд ржХрз░ржХ тЫ╡ЁЯРж](#0-prepare-a-custom-dataset)\n  - [0.1 ржХрзЗрз▒рж▓ bbox ржПржирзЛржЯрзЗрж╢рзНржмржи ржЙржкрж▓ржмрзНржз ржерж╛ржХрж┐рж▓рзЗ](#01-if-only-bbox-annotations-are-available)\n  - [0.2 coco ржПржирзЛржЯрзЗрж╢рзНржмржи pickle ржлрж╛ржЗрж▓рж▓рзИ рз░рзВржкрж╛ржирзНрждрз░ ржХрз░ржХ](#02-convert-coco-annotations-to-pickle-file)\n  - [1. ржорзЗржо'рз░рзАржд references ржнрз░рзНрждрж┐ ржХрз░ржХ](#1-fill-memory-with-references)\n  - [2. ржорзЗржо'рз░рж┐ ржмрзЗржВржХ post-process ржХрз░ржХ](#2-post-process-memory-bank)\n- [ЁЯУЪ ржЙржжрзНржзрзГрждрж┐](#-citation)\n\n\n## ЁЯОп ржорзВрж▓ ржмрж┐рж╖рзЯржмрж╕рзНрждрзБ\n- ЁЯТб **ржкрзНрз░рж╢рж┐ржХрзНрж╖ржг-рз░рж╣рж┐ржд**: ржкрзБржиржГ-ржкрзНрз░рж╢рж┐ржХрзНрж╖ржг ржирж╛ржЗ, prompt engineering ржирж╛ржЗтАФржХрзЗрз▒рж▓ ржПржЯрж╛ reference imageред  \n- ЁЯЦ╝я╕П **Reference-Based**: ржХрзЗржЗржЯрж╛ржорж╛ржи ржЙржжрж╛рж╣рз░ржг ржмрзНржпрз▒рж╣рж╛рз░ ржХрз░рж┐ ржирждрзБржи ржмрж╕рзНрждрзБ ржЪрзЗржЧржорзЗржгрзНржЯ ржХрз░ржХред  \n- ЁЯФе **SOTA Performance**: Training-free ржкржжрзНржзрждрж┐ рж╕ржорзВрж╣рждржХрзИ COCO, PASCAL VOC, ржЖрз░рзБ Cross-Domain FSOD-ржд ржЙрзОржХрзГрж╖рзНржЯ ржлрж▓рж╛ржлрж▓ред\n\n**рж▓рж┐ржВржХрж╕ржорзВрж╣:**\n- ЁЯз╛ [**arXiv ржкрзЗржкрж╛рз░**](https://arxiv.org/abs/2507.02798)  \n- ЁЯМР [**Project Website**](https://miquel-espinosa.github.io/no-time-to-train/)  \n- ЁЯУИ [**Papers with Code**](https://paperswithcode.com/paper/no-time-to-train-training-free-reference)\n\n## ЁЯУЬ ржкрзНрз░ржмржирзНржзрз░ рж╕ржВржХрзНрж╖рж┐ржкрзНрждрж╕рж╛рз░\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "5SOCYMb6Mc7UFPt7fW5/7Lk/oGmDIXGNMnIaAiyHGbA=",
        "originContent": "- [ЁЯФН Custom dataset](#-custom-dataset)",
        "translatedContent": "- [ЁЯФН ржХрж╛рж╖рзНржЯржо ржбрзЗржЯрж╛рж╕рзЗржЯ](#-custom-dataset)"
      },
      {
        "row": 2,
        "rowsha": "GMbLjwNZu2OPam7WwwgFxNIlZaCAoQrvEKgT5bfr4wo=",
        "originContent": "  - [0. Prepare a custom dataset тЫ╡ЁЯРж](#0-prepare-a-custom-dataset)",
        "translatedContent": "  - [0. ржХрж╛рж╖рзНржЯржо ржбрзЗржЯрж╛рж╕рзЗржЯ ржкрзНрз░рж╕рзНрждрзБржд ржХрз░ржХ тЫ╡ЁЯРж](#0-prepare-a-custom-dataset)"
      },
      {
        "row": 3,
        "rowsha": "pahrSq5eC+ZtBvhJBCOnwVsXCl3r6dbg5VVcHR60KgA=",
        "originContent": "  - [0.1 If only bbox annotations are available](#01-if-only-bbox-annotations-are-available)",
        "translatedContent": "  - [0.1 ржХрзЗрз▒рж▓ bbox ржПржирзЛржЯрзЗрж╢рзНржмржи ржЙржкрж▓ржмрзНржз ржерж╛ржХрж┐рж▓рзЗ](#01-if-only-bbox-annotations-are-available)"
      },
      {
        "row": 4,
        "rowsha": "EhEJKG9MX3xsHHBuay+P9xPmW+ZFKMXemPkZ3zZftRE=",
        "originContent": "  - [0.2 Convert coco annotations to pickle file](#02-convert-coco-annotations-to-pickle-file)",
        "translatedContent": "  - [0.2 coco ржПржирзЛржЯрзЗрж╢рзНржмржи pickle ржлрж╛ржЗрж▓рж▓рзИ рз░рзВржкрж╛ржирзНрждрз░ ржХрз░ржХ](#02-convert-coco-annotations-to-pickle-file)"
      },
      {
        "row": 5,
        "rowsha": "CtFWOMU1Fc9CVZLu2Rzmu0KND5cnswQEsU5Mp7Onhvc=",
        "originContent": "  - [1. Fill memory with references](#1-fill-memory-with-references)",
        "translatedContent": "  - [1. ржорзЗржо'рз░рзАржд references ржнрз░рзНрждрж┐ ржХрз░ржХ](#1-fill-memory-with-references)"
      },
      {
        "row": 6,
        "rowsha": "EJbJqD4ueSk6fQ0G3e/0zkWNB+NbmAqL7F5GXdil5cM=",
        "originContent": "  - [2. Post-process memory bank](#2-post-process-memory-bank)",
        "translatedContent": "  - [2. ржорзЗржо'рз░рж┐ ржмрзЗржВржХ post-process ржХрз░ржХ](#2-post-process-memory-bank)"
      },
      {
        "row": 7,
        "rowsha": "agiJTqQBkN7iJs7zNIHPQ5NaqAmNICzYGlCqSha4QuI=",
        "originContent": "- [ЁЯУЪ Citation](#-citation)",
        "translatedContent": "- [ЁЯУЪ ржЙржжрзНржзрзГрждрж┐](#-citation)"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "kIeGJFTQ5JJc/jXqjQ9PAg5wubcgfjTL2po5UNDrLQ8=",
        "originContent": "## ЁЯОп Highlights",
        "translatedContent": "## ЁЯОп ржорзВрж▓ ржмрж┐рж╖рзЯржмрж╕рзНрждрзБ"
      },
      {
        "row": 11,
        "rowsha": "4c0+fbJNN24hIJySSKght3OZNjxykoTxkukVFgkNZok=",
        "originContent": "- ЁЯТб **Training-Free**: No fine-tuning, no prompt engineeringтАФjust a reference image.  ",
        "translatedContent": "- ЁЯТб **ржкрзНрз░рж╢рж┐ржХрзНрж╖ржг-рз░рж╣рж┐ржд**: ржкрзБржиржГ-ржкрзНрз░рж╢рж┐ржХрзНрж╖ржг ржирж╛ржЗ, prompt engineering ржирж╛ржЗтАФржХрзЗрз▒рж▓ ржПржЯрж╛ reference imageред  "
      },
      {
        "row": 12,
        "rowsha": "177g7I1Hv/8E1qW/GKY8ESZKs1ERKa8lH2+eSJWPfys=",
        "originContent": "- ЁЯЦ╝я╕П **Reference-Based**: Segment new objects using just a few examples.  ",
        "translatedContent": "- ЁЯЦ╝я╕П **Reference-Based**: ржХрзЗржЗржЯрж╛ржорж╛ржи ржЙржжрж╛рж╣рз░ржг ржмрзНржпрз▒рж╣рж╛рз░ ржХрз░рж┐ ржирждрзБржи ржмрж╕рзНрждрзБ ржЪрзЗржЧржорзЗржгрзНржЯ ржХрз░ржХред  "
      },
      {
        "row": 13,
        "rowsha": "hJVC6fdp5vmCdow9OaINDAoUeIQFo+H4J7X39/laLuQ=",
        "originContent": "- ЁЯФе **SOTA Performance**: Outperforms previous training-free approaches on COCO, PASCAL VOC, and Cross-Domain FSOD.",
        "translatedContent": "- ЁЯФе **SOTA Performance**: Training-free ржкржжрзНржзрждрж┐ рж╕ржорзВрж╣рждржХрзИ COCO, PASCAL VOC, ржЖрз░рзБ Cross-Domain FSOD-ржд ржЙрзОржХрзГрж╖рзНржЯ ржлрж▓рж╛ржлрж▓ред"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "5t7uSO5Wec1VT7vt46wJD3xShwKEgg8Z6sc6sb/A3n4=",
        "originContent": "**Links:**",
        "translatedContent": "**рж▓рж┐ржВржХрж╕ржорзВрж╣:**"
      },
      {
        "row": 16,
        "rowsha": "mSZshukl7MsJrVvQ4IJvfrxptw7xbgh/UwGaEwRqCFk=",
        "originContent": "- ЁЯз╛ [**arXiv Paper**](https://arxiv.org/abs/2507.02798)  ",
        "translatedContent": "- ЁЯз╛ [**arXiv ржкрзЗржкрж╛рз░**](https://arxiv.org/abs/2507.02798)  "
      },
      {
        "row": 17,
        "rowsha": "aRS755BdZ7JdxnaQ39257Pg2fZoyNBuqId5PgA6rebk=",
        "originContent": "- ЁЯМР [**Project Website**](https://miquel-espinosa.github.io/no-time-to-train/)  ",
        "translatedContent": "- ЁЯМР [**Project Website**](https://miquel-espinosa.github.io/no-time-to-train/)  "
      },
      {
        "row": 18,
        "rowsha": "W0Ak9nAkjF7nVsfJUEtJvM6CVJHI9t7YMjCvBzmXZzo=",
        "originContent": "- ЁЯУИ [**Papers with Code**](https://paperswithcode.com/paper/no-time-to-train-training-free-reference)",
        "translatedContent": "- ЁЯУИ [**Papers with Code**](https://paperswithcode.com/paper/no-time-to-train-training-free-reference)"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "AdIRiroevVLawnTYJDBh2L1x5u8N8rbImLDszk/n52Q=",
        "originContent": "## ЁЯУЬ Abstract",
        "translatedContent": "## ЁЯУЬ ржкрзНрз░ржмржирзНржзрз░ рж╕ржВржХрзНрж╖рж┐ржкрзНрждрж╕рж╛рз░"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "> The performance of image segmentation models has historically been constrained by the high cost of collecting large-scale annotated data. The Segment Anything Model (SAM) alleviates this original problem through a promptable, semantics-agnostic, segmentation paradigm and yet still requires manual visual-prompts or complex domain-dependent prompt-generation rules to process a new image. Towards reducing this new burden, our work investigates the task of object segmentation when provided with, alternatively, only a small set of reference images. Our key insight is to leverage strong semantic priors, as learned by foundation models, to identify corresponding regions between a reference and a target image. We find that correspondences enable automatic generation of instance-level segmentation masks for downstream tasks and instantiate our ideas via a multi-stage, training-free method incorporating (1) memory bank construction; (2) representation aggregation and (3) semantic-aware feature matching. Our experiments show significant improvements on segmentation metrics, leading to state-of-the-art performance on COCO FSOD (36.8% nAP), PASCAL VOC Few-Shot (71.2% nAP50) and outperforming existing training-free approaches on the Cross-Domain FSOD benchmark (22.4% nAP).",
    "ContentSha": "f62KYkH46xSV0RKRpAlERSF/nhSETk2RE3WyAIz5gDw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "> The performance of image segmentation models has historically been constrained by the high cost of collecting large-scale annotated data. The Segment Anything Model (SAM) alleviates this original problem through a promptable, semantics-agnostic, segmentation paradigm and yet still requires manual visual-prompts or complex domain-dependent prompt-generation rules to process a new image. Towards reducing this new burden, our work investigates the task of object segmentation when provided with, alternatively, only a small set of reference images. Our key insight is to leverage strong semantic priors, as learned by foundation models, to identify corresponding regions between a reference and a target image. We find that correspondences enable automatic generation of instance-level segmentation masks for downstream tasks and instantiate our ideas via a multi-stage, training-free method incorporating (1) memory bank construction; (2) representation aggregation and (3) semantic-aware feature matching. Our experiments show significant improvements on segmentation metrics, leading to state-of-the-art performance on COCO FSOD (36.8% nAP), PASCAL VOC Few-Shot (71.2% nAP50) and outperforming existing training-free approaches on the Cross-Domain FSOD benchmark (22.4% nAP).",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "f62KYkH46xSV0RKRpAlERSF/nhSETk2RE3WyAIz5gDw=",
        "originContent": "> The performance of image segmentation models has historically been constrained by the high cost of collecting large-scale annotated data. The Segment Anything Model (SAM) alleviates this original problem through a promptable, semantics-agnostic, segmentation paradigm and yet still requires manual visual-prompts or complex domain-dependent prompt-generation rules to process a new image. Towards reducing this new burden, our work investigates the task of object segmentation when provided with, alternatively, only a small set of reference images. Our key insight is to leverage strong semantic priors, as learned by foundation models, to identify corresponding regions between a reference and a target image. We find that correspondences enable automatic generation of instance-level segmentation masks for downstream tasks and instantiate our ideas via a multi-stage, training-free method incorporating (1) memory bank construction; (2) representation aggregation and (3) semantic-aware feature matching. Our experiments show significant improvements on segmentation metrics, leading to state-of-the-art performance on COCO FSOD (36.8% nAP), PASCAL VOC Few-Shot (71.2% nAP50) and outperforming existing training-free approaches on the Cross-Domain FSOD benchmark (22.4% nAP).",
        "translatedContent": "> The performance of image segmentation models has historically been constrained by the high cost of collecting large-scale annotated data. The Segment Anything Model (SAM) alleviates this original problem through a promptable, semantics-agnostic, segmentation paradigm and yet still requires manual visual-prompts or complex domain-dependent prompt-generation rules to process a new image. Towards reducing this new burden, our work investigates the task of object segmentation when provided with, alternatively, only a small set of reference images. Our key insight is to leverage strong semantic priors, as learned by foundation models, to identify corresponding regions between a reference and a target image. We find that correspondences enable automatic generation of instance-level segmentation masks for downstream tasks and instantiate our ideas via a multi-stage, training-free method incorporating (1) memory bank construction; (2) representation aggregation and (3) semantic-aware feature matching. Our experiments show significant improvements on segmentation metrics, leading to state-of-the-art performance on COCO FSOD (36.8% nAP), PASCAL VOC Few-Shot (71.2% nAP50) and outperforming existing training-free approaches on the Cross-Domain FSOD benchmark (22.4% nAP)."
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 5,
    "Content": "\n![cdfsod-results-final-comic-sans-min](https://github.com/user-attachments/assets/ab302c02-c080-4042-99fc-0e181ba8abb9)\n\n\n## ЁЯза Architecture\n\n![training-free-architecture-comic-sans-min](https://github.com/user-attachments/assets/d84dd83a-505e-45a0-8ce3-98e1838017f9)\n\n\n## ЁЯЫая╕П Installation instructions\n\n### 1. Clone the repository\n",
    "ContentSha": "V4xbbzEUhNFOhqp3BaqWeY1MaXeaFR8RD3QR6DHJiVo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n![cdfsod-results-final-comic-sans-min](https://github.com/user-attachments/assets/ab302c02-c080-4042-99fc-0e181ba8abb9)\n\n\n## ЁЯза Architecture\n\n![training-free-architecture-comic-sans-min](https://github.com/user-attachments/assets/d84dd83a-505e-45a0-8ce3-98e1838017f9)\n\n\n## ЁЯЫая╕П Installation instructions\n\n### 1. Clone the repository\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "2cFS6Ni4+vEPr5/fIkHNwVjmXSVHJRpd3EN6igllMqk=",
        "originContent": "![cdfsod-results-final-comic-sans-min](https://github.com/user-attachments/assets/ab302c02-c080-4042-99fc-0e181ba8abb9)",
        "translatedContent": "![cdfsod-results-final-comic-sans-min](https://github.com/user-attachments/assets/ab302c02-c080-4042-99fc-0e181ba8abb9)"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "9ZwHLgVs/DMTWN3sszXIqi/Yn0AjwM/4BUudMPNrZrc=",
        "originContent": "## ЁЯза Architecture",
        "translatedContent": "## ЁЯза Architecture"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "9yA6/g3QCBAgAR0tQeKBpaJwjEB0LHNGgYaTP8Odie8=",
        "originContent": "![training-free-architecture-comic-sans-min](https://github.com/user-attachments/assets/d84dd83a-505e-45a0-8ce3-98e1838017f9)",
        "translatedContent": "![training-free-architecture-comic-sans-min](https://github.com/user-attachments/assets/d84dd83a-505e-45a0-8ce3-98e1838017f9)"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "waJ0INSC829ifiOOIlQMyceEvWq7ygQ1pzD67dJK+dU=",
        "originContent": "## ЁЯЫая╕П Installation instructions",
        "translatedContent": "## ЁЯЫая╕П Installation instructions"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "+xj0fCZBnnk1GY2rxUGAtpalIeN4JdfjLYAPNPmqklw=",
        "originContent": "### 1. Clone the repository",
        "translatedContent": "### 1. Clone the repository"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 6,
    "Content": "```bash\ngit clone https://github.com/miquel-espinosa/no-time-to-train.git\ncd no-time-to-train\n```",
    "ContentSha": "FqsX96SwjKeMnD8rrDrd4pfjW32n5SRf0jXIvB4WHz4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ngit clone https://github.com/miquel-espinosa/no-time-to-train.git\ncd no-time-to-train\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 7,
    "Content": "\n### 2. Create conda environment\n\nWe will create a conda environment with the required packages.",
    "ContentSha": "xkwDa/DvfDApk69cNg5ORagN7Utfcos+yCxRpQNn6gk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n### 2. ржХржирзНржбрж╛ ржкрз░рж┐ржмрзЗрж╢ рж╕рзГрж╖рзНржЯрж┐ ржХрз░ржХ\n\nржЖржорж┐рж╣ржБрждрзЗ ржкрзНрз░рзЯрзЛржЬржирзАрзЯ ржкрзЗржХрзЗржЬрж╕ржорзВрж╣рз░ рж╕рзИрждрзЗ ржПржЯрж╛ ржХржирзНржбрж╛ ржкрз░рж┐ржмрзЗрж╢ рж╕рзГрж╖рзНржЯрж┐ ржХрз░рж┐ржоред",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 8,
    "Content": "```bash\nconda env create -f environment.yml\nconda activate no-time-to-train\n```",
    "ContentSha": "W1AlselK7qAC1MpunsXhTPA8MG+kwjbpodKBkImFaio=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nconda env create -f environment.yml\nconda activate no-time-to-train\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 9,
    "Content": "\n### 3. Install SAM2 and DinoV2\n\nWe will install SAM2 and DinoV2 from source.",
    "ContentSha": "qhWNaaTVSpemTiKekSRF2dWJYxX636VdhL+lPiso28M=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n### рзй. SAM2 ржЖрз░рзБ DinoV2 ржЗржирж╖рзНржЯрж▓ ржХрз░ржХ\n\nржЖржорж┐ ржЙрзОрж╕рз░ ржкрз░рж╛ SAM2 ржЖрз░рзБ DinoV2 ржЗржирж╖рзНржЯрж▓ ржХрз░рж┐ржоред",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 10,
    "Content": "```bash\npip install -e .\ncd dinov2\npip install -e .\ncd ..\n```",
    "ContentSha": "dMsjJwa9nz+HHMLijmYZdlLh6FmDBGmNlHxywBzbEg4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npip install -e .\ncd dinov2\npip install -e .\ncd ..\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 11,
    "Content": "\n### 4. Download datasets\n\nPlease download COCO dataset and place it in `data/coco`\n\n### 5. Download SAM2 and DinoV2 checkpoints\n\nWe will download the exact SAM2 checkpoints used in the paper.\n(Note, however, that SAM2.1 checkpoints are already available and might perform better.)\n",
    "ContentSha": "LTXcwC9KGMiPIiBLXtQVF6Wdi9d19gVIUBX6F+tGTqE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n### рзк. ржбрзЗржЯрж╛ржЫрзЗржЯрж╕ржорзВрж╣ ржбрж╛ржЙржирж▓рзЛржб ржХрз░ржХ\n\nржЕржирзБржЧрзНрз░рж╣ ржХрз░рж┐ COCO ржбрзЗржЯрж╛ржЫрзЗржЯ ржбрж╛ржЙржирж▓рзЛржб ржХрз░рж┐ `data/coco` ржд рз░рж╛ржЦржХ\n\n### рзл. SAM2 ржЖрз░рзБ DinoV2 ржЪрзЗржХржкржЗржгрзНржЯрж╕ржорзВрж╣ ржбрж╛ржЙржирж▓рзЛржб ржХрз░ржХ\n\nржЖржорж┐ ржХрж╛ржХрждржд ржмрзНржпрз▒рж╣рзГржд ржарж┐ржХ SAM2 ржЪрзЗржХржкржЗржгрзНржЯрж╕ржорзВрж╣ ржбрж╛ржЙржирж▓рзЛржб ржХрз░рж┐ржоред\n(рждржерж╛ржкрж┐ржУ ржоржиржд рз░рж╛ржЦрж┐ржм, SAM2.1 ржЪрзЗржХржкржЗржгрзНржЯрж╕ржорзВрж╣ ржЗрждрж┐ржоржзрзНржпрзЗ ржЙржкрж▓ржмрзНржз ржЖрз░рзБ рж╕ржорзНржнрз▒ржд ржмрзЗржЫрж┐ ржнрж╛рж▓ржжрз░рзЗ ржХрж╛рз░рзНржпржХрз░рзА рж╣'ржм ржкрж╛рз░рзЗред)\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 12,
    "Content": "```bash\nmkdir -p checkpoints/dinov2\ncd checkpoints\nwget https://dl.fbaipublicfiles.com/segment_anything_2/072824/sam2_hiera_large.pt\ncd dinov2\nwget https://dl.fbaipublicfiles.com/dinov2/dinov2_vitl14/dinov2_vitl14_pretrain.pth\ncd ../..\n```",
    "ContentSha": "Q/LddAGtfunblX1eLTx7t3Vs+C74LtCdgP/HQ3gIJgk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nmkdir -p checkpoints/dinov2\ncd checkpoints\nwget https://dl.fbaipublicfiles.com/segment_anything_2/072824/sam2_hiera_large.pt\ncd dinov2\nwget https://dl.fbaipublicfiles.com/dinov2/dinov2_vitl14/dinov2_vitl14_pretrain.pth\ncd ../..\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 13,
    "Content": "\n\n## ЁЯУК Inference code\n\nтЪая╕П Disclaimer: This is research code тАФ expect a bit of chaos!\n\n### Reproducing 30-shot SOTA results in Few-shot COCO\n\nDefine useful variables and create a folder for results:\n",
    "ContentSha": "q8hVlrVr+ps2xB/JxM3tKtF/KxoLX4PepxohltYehb8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n\n## ЁЯУК ржЕржирзБржорж╛ржи ржХрзЛржб\n\nтЪая╕П рж╕рждрж░рзНржХрзАржХрз░ржг: ржПржЗржЯрзЛ ржЧрз▒рзЗрж╖ржгрж╛ ржХрзЛржб тАФ ржЕрж▓ржк ржмрж┐рж╢рзГржЩрзНржЦрж▓рж╛ ржЖрж╢рж╛ ржХрз░ржХ!\n\n### Few-shot COCO-ржд рзйрзж-рж╢рзНржмржЯ SOTA ржлрж▓рж╛ржлрж▓ ржкрзБржирз░рзБрждрзНржкрж╛ржжржи ржХрз░рж╛\n\nржкрзНрз░рзЯрзЛржЬржирзАрзЯ ржнрзЗрз░рж┐рзЯрзЗржмрж▓рж╕ржорзВрж╣ рж╕ржВржЬрзНржЮрж╛ ржХрз░ржХ ржЖрз░рзБ ржлрж▓рж╛ржлрж▓рз░ ржмрж╛ржмрзЗ ржПржЯрж╛ ржлрзЛрж▓рзНржбрж╛рз░ рж╕рзГрж╖рзНржЯрж┐ ржХрз░ржХ:\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 14,
    "Content": "```bash\nCONFIG=./no_time_to_train/new_exps/coco_fewshot_10shot_Sam2L.yaml\nCLASS_SPLIT=\"few_shot_classes\"\nRESULTS_DIR=work_dirs/few_shot_results\nSHOTS=30\nSEED=33\nGPUS=4\n\nmkdir -p $RESULTS_DIR\nFILENAME=few_shot_${SHOTS}shot_seed${SEED}.pkl\n```",
    "ContentSha": "R03PMGcFnYnvttqgfztGnWdoyJeXMyxFUN7tyR4kpy8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nCONFIG=./no_time_to_train/new_exps/coco_fewshot_10shot_Sam2L.yaml\nCLASS_SPLIT=\"few_shot_classes\"\nRESULTS_DIR=work_dirs/few_shot_results\nSHOTS=30\nSEED=33\nGPUS=4\n\nmkdir -p $RESULTS_DIR\nFILENAME=few_shot_${SHOTS}shot_seed${SEED}.pkl\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 15,
    "Content": "\n#### 0. Create reference set\n",
    "ContentSha": "1XrtmJBqIS+6/RHkWmwwopPgE4d3ho+bdPLXEG612YQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n#### рзж. ржЙржжрзНржмрзГрждрзНржд ржЫрзЗржЯ рж╕рзГрж╖рзНржЯрж┐ ржХрз░ржХ\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 16,
    "Content": "```bash\npython no_time_to_train/dataset/few_shot_sampling.py \\\n        --n-shot $SHOTS \\\n        --out-path ${RESULTS_DIR}/${FILENAME} \\\n        --seed $SEED \\\n        --dataset $CLASS_SPLIT\n```",
    "ContentSha": "XMsc+nj2n5gsZtjFdl6ErjVKLXgBoPIrungxtY9mDss=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython no_time_to_train/dataset/few_shot_sampling.py \\\n        --n-shot $SHOTS \\\n        --out-path ${RESULTS_DIR}/${FILENAME} \\\n        --seed $SEED \\\n        --dataset $CLASS_SPLIT\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 17,
    "Content": "\n#### 1. Fill memory with references\n",
    "ContentSha": "v8E00SBwAimb411iJf1DGyTZxexOPmC/xK0/B+XBH1g=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n#### рзз. рж╕рзНржорзГрждрж┐ рз░рзЗржлрж╛рз░рзЗржЮрзНржЪрзЗрз░рзЗ ржкрзВрз░ржг ржХрз░ржХ\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 18,
    "Content": "```bash\npython run_lightening.py test --config $CONFIG \\\n                              --model.test_mode fill_memory \\\n                              --out_path ${RESULTS_DIR}/memory.ckpt \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --model.init_args.dataset_cfgs.fill_memory.memory_pkl ${RESULTS_DIR}/${FILENAME} \\\n                              --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOTS \\\n                              --model.init_args.dataset_cfgs.fill_memory.class_split $CLASS_SPLIT \\\n                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\\n                              --trainer.devices $GPUS\n```",
    "ContentSha": "1pVePuzaIdQCE/Nx0VoaWhFswuB5Jh1Z68Cw/2D8RkM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython run_lightening.py test --config $CONFIG \\\n                              --model.test_mode fill_memory \\\n                              --out_path ${RESULTS_DIR}/memory.ckpt \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --model.init_args.dataset_cfgs.fill_memory.memory_pkl ${RESULTS_DIR}/${FILENAME} \\\n                              --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOTS \\\n                              --model.init_args.dataset_cfgs.fill_memory.class_split $CLASS_SPLIT \\\n                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\\n                              --trainer.devices $GPUS\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 19,
    "Content": "\n#### 2. Post-process memory bank\n",
    "ContentSha": "3A9quGczCnAQeUTcoJVGYLTQapI5nQ5aSj7AZIhGFJw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n#### 2. ржкрзЛрж╕рзНржЯ-ржкрзНрз░рж╕рзЗржЫ ржорзЗржо'рз░рж┐ ржмрзЗржВржХ\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 20,
    "Content": "```bash\npython run_lightening.py test --config $CONFIG \\\n                              --model.test_mode postprocess_memory \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --ckpt_path ${RESULTS_DIR}/memory.ckpt \\\n                              --out_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\\n                              --trainer.devices 1\n```",
    "ContentSha": "45qs8EyMtDUKs5A3rrQcJQXl6OIbI6s0rKOOnHmYURs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython run_lightening.py test --config $CONFIG \\\n                              --model.test_mode postprocess_memory \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --ckpt_path ${RESULTS_DIR}/memory.ckpt \\\n                              --out_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\\n                              --trainer.devices 1\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 21,
    "Content": "\n#### 3. Inference on target images\n",
    "ContentSha": "73CbGioqWaTULTrw0roBLoZCxgBgtmJVFDc7RHluH0g=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n#### рзй. рж▓ржХрзНрж╖рзНржп ржЪрж┐рждрзНрз░рж╕ржорзВрж╣ржд ржЕржирзБржорж╛ржи\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 22,
    "Content": "```bash\npython run_lightening.py test --config $CONFIG  \\\n                              --ckpt_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\\n                              --model.init_args.test_mode test \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --model.init_args.model_cfg.dataset_name $CLASS_SPLIT \\\n                              --model.init_args.dataset_cfgs.test.class_split $CLASS_SPLIT \\\n                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\\n                              --trainer.devices $GPUS\n```",
    "ContentSha": "vbKXVEs47fJ5oF8vLkHVM2ofFMx1hKBBgQF9JAgp2Jo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython run_lightening.py test --config $CONFIG  \\\n                              --ckpt_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\\n                              --model.init_args.test_mode test \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --model.init_args.model_cfg.dataset_name $CLASS_SPLIT \\\n                              --model.init_args.dataset_cfgs.test.class_split $CLASS_SPLIT \\\n                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\\n                              --trainer.devices $GPUS\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 23,
    "Content": "\nIf you'd like to see inference results online (as they are computed), add the argument:",
    "ContentSha": "Dp4E3gH6hSg659jJwzXukrsk5Jl8KA5ymhMGoz6L/wc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "ржпржжрж┐ ржЖржкрзБржирж┐ ржЕржирж▓рж╛ржЗржиржд ржЕржирзБржорж╛ржи ржлрж▓рж╛ржлрж▓рж╕ржорзВрж╣ (рждрзЗржУржБрж▓рзЛржХ ржЧржгржирж╛ рж╣рзЛрз▒рж╛ рж╕ржоржпрж╝ржд) ржЪрж╛ржм ржмрж┐ржЪрж╛рз░рзЗ, рждрзЗржирзНрждрзЗ ржпрзБржХрзНрждрж┐ ржпрзЛржЧ ржХрз░ржХ:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "ржпржжрж┐ ржЖржкрзБржирж┐ ржЕржирж▓рж╛ржЗржиржд ржЕржирзБржорж╛ржи ржлрж▓рж╛ржлрж▓рж╕ржорзВрж╣ (рждрзЗржУржБрж▓рзЛржХ ржЧржгржирж╛ рж╣рзЛрз▒рж╛ рж╕ржоржпрж╝ржд) ржЪрж╛ржм ржмрж┐ржЪрж╛рз░рзЗ, рждрзЗржирзНрждрзЗ ржпрзБржХрзНрждрж┐ ржпрзЛржЧ ржХрз░ржХ:"
      },
      {
        "row": 2,
        "rowsha": "q1WwQ7H3GQPxKawiFMnkb1cjQUXXvqfFmm5oXAhbyU8=",
        "originContent": "If you'd like to see inference results online (as they are computed), add the argument:",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 24,
    "Content": "```bash\n    --model.init_args.model_cfg.test.online_vis True\n```",
    "ContentSha": "mbu//ROEScsc0zLyvi3r1BPFxMrHWk/o7rqLvu03LTA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n    --model.init_args.model_cfg.test.online_vis True\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "c9alpTwcURWmU1gZuLnVR/OM0PfmLg3qTFht7/sBSww=",
        "originContent": "    --model.init_args.model_cfg.test.online_vis True",
        "translatedContent": "    --model.init_args.model_cfg.test.online_vis True"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 25,
    "Content": "To adjust the score threshold `score_thr` parameter, add the argument (for example, visualising all instances with score higher than `0.4`):",
    "ContentSha": "qweycVV6vcVlQTeQ2dS1zGx5GmbYXYcZs6oNjQhUwNI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "рж╕рзНржХ'рз░ ржерзНрз░рзЗрж╢рж╣'рж▓рзНржб `score_thr` ржкрз░рж╛ржорж┐рждрж┐ рж╕ржоржирзНржмржпрж╝ ржХрз░рж┐ржмрж▓рзИ, ржпрзБржХрзНрждрж┐ ржпрзЛржЧ ржХрз░ржХ (ржЙржжрж╛рж╣рз░ржгрж╕рзНржмрз░рзВржкрзЗ, рж╕ржХрж▓рзЛ ржЗржирж╖рзНржЯрзЗржирзНрж╕рз░ ржнрж┐ржЬрзБрз▒рзЗрж▓рж╛ржЗржЬрзЗрж╢рзНржпржи ржпрж╛рз░ рж╕рзНржХ'рз░ `0.4`рждржХрзИ ржмрзЗржЫрж┐):",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "qweycVV6vcVlQTeQ2dS1zGx5GmbYXYcZs6oNjQhUwNI=",
        "originContent": "To adjust the score threshold `score_thr` parameter, add the argument (for example, visualising all instances with score higher than `0.4`):",
        "translatedContent": "рж╕рзНржХ'рз░ ржерзНрз░рзЗрж╢рж╣'рж▓рзНржб `score_thr` ржкрз░рж╛ржорж┐рждрж┐ рж╕ржоржирзНржмржпрж╝ ржХрз░рж┐ржмрж▓рзИ, ржпрзБржХрзНрждрж┐ ржпрзЛржЧ ржХрз░ржХ (ржЙржжрж╛рж╣рз░ржгрж╕рзНржмрз░рзВржкрзЗ, рж╕ржХрж▓рзЛ ржЗржирж╖рзНржЯрзЗржирзНрж╕рз░ ржнрж┐ржЬрзБрз▒рзЗрж▓рж╛ржЗржЬрзЗрж╢рзНржпржи ржпрж╛рз░ рж╕рзНржХ'рз░ `0.4`рждржХрзИ ржмрзЗржЫрж┐):"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 26,
    "Content": "```bash\n    --model.init_args.model_cfg.test.vis_thr 0.4\n```",
    "ContentSha": "af/rWDR0jwUHbKw+uPDz7J5oeScBvpa9U5qwCYxo0Pg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n    --model.init_args.model_cfg.test.vis_thr 0.4\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "ykQ5v3h8sYF6owua8EYSDmY5P6ieD960w6lzZW3rsaE=",
        "originContent": "    --model.init_args.model_cfg.test.vis_thr 0.4",
        "translatedContent": "    --model.init_args.model_cfg.test.vis_thr 0.4"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 27,
    "Content": "Images will now be saved in `results_analysis/few_shot_classes/`. The image on the left shows the ground truth, the image on the right shows the segmented instances found by our training-free method.\n\nNote that in this example we are using the `few_shot_classes` split, thus, we should only expect to see segmented instances of the classes in this split (not all classes in COCO).\n\n#### Results\n\nAfter running all images in the validation set, you should obtain:\n",
    "ContentSha": "UYiVB+AwL2aAWVmV805O2tsw2jw3cL3t1ysHKuWCd28=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "ржПрждрж┐ржпрж╝рж╛ ржЫржмрж┐рж╕ржорзВрж╣ `results_analysis/few_shot_classes/`-ржд рж╕ржВрз░ржХрзНрж╖ржг ржХрз░рж╛ рж╣'ржмред ржмрж╛ржУржБржлрж╛рж▓рзЗ ржержХрж╛ ржЫржмрж┐ржЦржирзЗ ржЧрзНрз░рж╛ржЙржгрзНржб ржЯрзНрз░рзБрже ржжрзЗржЦрзБрз▒рж╛ржпрж╝, рж╕рзЛржБржлрж╛рж▓рзЗ ржержХрж╛ ржЫржмрж┐ржЦржирзЗ ржЖржорж╛рз░ ржкрзНрз░рж╢рж┐ржХрзНрж╖ржг-ржорзБржХрзНржд ржкржжрзНржзрждрж┐ржпрж╝рзЗ ржмрж┐ржЪрзНржЫрж┐ржирзНржи ржХрз░рж╛ ржЗржирж╖рзНржЯрзЗржирзНрж╕рж╕ржорзВрж╣ ржжрзЗржЦрзБрз▒рж╛ржпрж╝ред\n\nржоржиржд рз░рж╛ржЦрж┐ржм ржпрзЗ, ржПржЗ ржЙржжрж╛рж╣рз░ржгржд ржЖржорж┐ `few_shot_classes` ржмрж┐ржнрж╛ржЬржи ржмрзНржпрз▒рж╣рж╛рз░ ржХрз░рж┐ ржЖржЫрзЛржБ, рж╕рзЗржЗржмрж╛ржмрзЗ, ржЖржорж┐ ржХрзЗрз▒рж▓ ржПржЗ ржмрж┐ржнрж╛ржЬржирз░ рж╢рзНрз░рзЗржгрзАрж╕ржорзВрж╣рз░ ржмрж┐ржЪрзНржЫрж┐ржирзНржи ржЗржирж╖рзНржЯрзЗржирзНрж╕рж╕ржорзВрж╣рж╣рзЗ ржЖрж╢рж╛ ржХрз░рж┐ржм рж▓рж╛ржЧрж┐ржм (COCO-рз░ рж╕ржХрж▓рзЛ рж╢рзНрз░рзЗржгрзА ржирж╣ржпрж╝)ред\n\n#### ржлрж▓рж╛ржлрж▓рж╕ржорзВрж╣\n\nржнрзЗрж▓рж┐ржбрзЗрж╢рзНржпржи ржЫрзЗржЯрз░ рж╕ржХрж▓рзЛ ржЫржмрж┐ ржЪрж▓рзЛрз▒рж╛рз░ ржкрж╛ржЫржд, ржЖржкрзЛржирж╛рз░ рж▓рж╛ржн рж╣'ржм:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "GEvthXpgTrUG4klt5odBBg+yPrDSUgG4O0X6qagvPPc=",
        "originContent": "Images will now be saved in `results_analysis/few_shot_classes/`. The image on the left shows the ground truth, the image on the right shows the segmented instances found by our training-free method.",
        "translatedContent": "ржПрждрж┐ржпрж╝рж╛ ржЫржмрж┐рж╕ржорзВрж╣ `results_analysis/few_shot_classes/`-ржд рж╕ржВрз░ржХрзНрж╖ржг ржХрз░рж╛ рж╣'ржмред ржмрж╛ржУржБржлрж╛рж▓рзЗ ржержХрж╛ ржЫржмрж┐ржЦржирзЗ ржЧрзНрз░рж╛ржЙржгрзНржб ржЯрзНрз░рзБрже ржжрзЗржЦрзБрз▒рж╛ржпрж╝, рж╕рзЛржБржлрж╛рж▓рзЗ ржержХрж╛ ржЫржмрж┐ржЦржирзЗ ржЖржорж╛рз░ ржкрзНрз░рж╢рж┐ржХрзНрж╖ржг-ржорзБржХрзНржд ржкржжрзНржзрждрж┐ржпрж╝рзЗ ржмрж┐ржЪрзНржЫрж┐ржирзНржи ржХрз░рж╛ ржЗржирж╖рзНржЯрзЗржирзНрж╕рж╕ржорзВрж╣ ржжрзЗржЦрзБрз▒рж╛ржпрж╝ред"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "SovnZ9uxfKqQS4l5TvalD8KlZ1z6kB/LqxYQlkfqvfg=",
        "originContent": "Note that in this example we are using the `few_shot_classes` split, thus, we should only expect to see segmented instances of the classes in this split (not all classes in COCO).",
        "translatedContent": "ржоржиржд рз░рж╛ржЦрж┐ржм ржпрзЗ, ржПржЗ ржЙржжрж╛рж╣рз░ржгржд ржЖржорж┐ `few_shot_classes` ржмрж┐ржнрж╛ржЬржи ржмрзНржпрз▒рж╣рж╛рз░ ржХрз░рж┐ ржЖржЫрзЛржБ, рж╕рзЗржЗржмрж╛ржмрзЗ, ржЖржорж┐ ржХрзЗрз▒рж▓ ржПржЗ ржмрж┐ржнрж╛ржЬржирз░ рж╢рзНрз░рзЗржгрзАрж╕ржорзВрж╣рз░ ржмрж┐ржЪрзНржЫрж┐ржирзНржи ржЗржирж╖рзНржЯрзЗржирзНрж╕рж╕ржорзВрж╣рж╣рзЗ ржЖрж╢рж╛ ржХрз░рж┐ржм рж▓рж╛ржЧрж┐ржм (COCO-рз░ рж╕ржХрж▓рзЛ рж╢рзНрз░рзЗржгрзА ржирж╣ржпрж╝)ред"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "GViaw3FgQP0CiY45/FzC3sUybwvUQorojma5tDwKi+Q=",
        "originContent": "#### Results",
        "translatedContent": "#### ржлрж▓рж╛ржлрж▓рж╕ржорзВрж╣"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "zNb3sJjc7R1s7fDW8EZQdgmvGwmPYQrwHy8JzOlUtW0=",
        "originContent": "After running all images in the validation set, you should obtain:",
        "translatedContent": "ржнрзЗрж▓рж┐ржбрзЗрж╢рзНржпржи ржЫрзЗржЯрз░ рж╕ржХрж▓рзЛ ржЫржмрж┐ ржЪрж▓рзЛрз▒рж╛рз░ ржкрж╛ржЫржд, ржЖржкрзЛржирж╛рз░ рж▓рж╛ржн рж╣'ржм:"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 28,
    "Content": "```\nBBOX RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.368\n\nSEGM RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.342\n```",
    "ContentSha": "ch7itB3Sk8oLc3U+lNJGI3BV57wpOMkabTBsUiqzHDU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nBBOX RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.368\n\nSEGM RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.342\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 29,
    "Content": "---\n\n## ЁЯФН Custom dataset\n\nWe provide the instructions for running our pipeline on a custom dataset. Annotation format are always in COCO format.\n\n> **TLDR;** To directly see how to run full pipeline on *custom datasets*, find `scripts/matching_cdfsod_pipeline.sh` together with example scripts of CD-FSOD datasets (e.g. `scripts/dior_fish.sh`)\n\n### 0. Prepare a custom dataset тЫ╡ЁЯРж\n\nLet's imagine we want to detect **boats**тЫ╡ and **birds**ЁЯРж in a custom dataset. To use our method we will need:\n- At least 1 *annotated* reference image for each class (i.e. 1 reference image for boat and 1 reference image for bird)\n- Multiple target images to find instances of our desired classes.\n\nWe have prepared a toy script to create a custom dataset with coco images, for a **1-shot** setting.",
    "ContentSha": "IPUeWphY2t966UmztjMo0ja/aOT1Wd0H0rkyNv8xt9Y=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "---\n\n## ЁЯФН ржХрж╛рж╖рзНржЯржо ржбрзЗржЯрж╛ржЪрзЗржЯ\n\nржЖржорж╛рз░ ржкрж╛ржЗржкрж▓рж╛ржЗржиржЯрзЛ ржХрж╛рж╖рзНржЯржо ржбрзЗржЯрж╛ржЪрзЗржЯржд ржХрзЗржирзЗржжрз░рзЗ ржЪрж▓рж╛ржм ржкрж╛рз░рж┐ рждрж╛рз░ ржирж┐рз░рзНржжрзЗрж╢ржирж╛ ржЖржорж┐ ржжрж┐ржпрж╝рж╛ рж╣рзИржЫрзЗред ржПржирзЛржЯрзЗрж╢рзНржмржи ржлрз░рзНржорзЗржЯ рж╕ржжрж╛ржпрж╝ COCO ржлрз░рзНржорзЗржЯржд рж╣'ржм рж▓рж╛ржЧрзЗред\n\n> **TLDR;** *ржХрж╛рж╖рзНржЯржо ржбрзЗржЯрж╛ржЪрзЗржЯ* ржд рж╕ржорзНржкрзВрз░рзНржг ржкрж╛ржЗржкрж▓рж╛ржЗржи ржХрзЗржирзЗржжрз░рзЗ ржЪрж▓рж╛ржм ржкрж╛рз░рж┐ рж╕рзЗржпрж╝рж╛ рж╕рзЛржЬрж╛ржХрзИ ржЪрж╛ржмрж▓рзИ `scripts/matching_cdfsod_pipeline.sh` ржЖрз░рзБ CD-FSOD ржбрзЗржЯрж╛ржЪрзЗржЯрз░ ржЙржжрж╛рж╣рз░ржг рж╕рзНржХрзНрз░рж┐ржкрзНржЯ (ржпрзЗржирзЗ `scripts/dior_fish.sh`) ржЪрж╛ржУржХ\n\n### 0. ржПржЯрж╛ ржХрж╛рж╖рзНржЯржо ржбрзЗржЯрж╛ржЪрзЗржЯ ржкрзНрз░рж╕рзНрждрзБржд ржХрз░ржХ тЫ╡ЁЯРж\n\nржЪрж╛ржУржБ ржЖрж╣ржХ ржЖржорж┐ ржХрж▓рзНржкржирж╛ ржХрз░рзЛржБ ржпрзЗ ржЖржорж┐ ржПржЯрж╛ ржХрж╛рж╖рзНржЯржо ржбрзЗржЯрж╛ржЪрзЗржЯржд **ржирж╛ржУ**тЫ╡ ржЖрз░рзБ **ржЪрз░рж╛ржЗ**ЁЯРж ржЪрж┐ржирж╛ржХрзНржд ржХрз░рж┐ржм ржмрж┐ржЪрж╛рз░рж┐ржЫрзЛред ржЖржорж╛рз░ ржкржжрзНржзрждрж┐ ржмрзНржпрз▒рж╣рж╛рз░ ржХрз░рж┐ржмрж▓рзИ ржЖржкрзЛржирж╛рз░ ржкрзНрз░ржпрж╝рзЛржЬржи рж╣'ржм:\n- ржкрзНрз░рждрж┐ржЯрзЛ рж╢рзНрз░рзЗржгрзАрз░ ржмрж╛ржмрзЗ ржХржорзЗржУ рзз ржЯрж╛ *ржПржирзЛржЯрзЗржЯрзЗржб* рз░рзЗржлрж╛рз░рзЗржирзНрж╕ ржЪрж┐рждрзНрз░ (ржЕрз░рзНржерж╛рзО ржирж╛ржУрз░ ржмрж╛ржмрзЗ рзз ржЯрж╛ ржЖрз░рзБ ржЪрз░рж╛ржЗрз░ ржмрж╛ржмрзЗ рзз ржЯрж╛ рз░рзЗржлрж╛рз░рзЗржирзНрж╕ ржЪрж┐рждрзНрз░)\n- ржЖржорж╛рз░ ржЗржЪрзНржЫрж╛ ржХрз░рж╛ рж╢рзНрз░рзЗржгрзАрз░ ржЙржжрж╛рж╣рз░ржг ржмрж┐ржЪрж╛рз░рж┐ ржЙрж▓рж┐ржпрж╝рж╛ржмрж▓рзИ ржмрж╣рзБрждрзЛ рж▓ржХрзНрж╖рзНржп ржЪрж┐рждрзНрз░ред\n\nржЖржорж┐ coco images ржмрзНржпрз▒рж╣рж╛рз░ ржХрз░рж┐ ржХрж╛рж╖рзНржЯржо ржбрзЗржЯрж╛ржЪрзЗржЯ рждрзИржпрж╝рж╛рз░ ржХрз░рж┐ржмрж▓рзИ ржПржЯрж╛ рж╕рж╛ржзрж╛рз░ржг рж╕рзНржХрзНрз░рж┐ржкрзНржЯ ржкрзНрз░рж╕рзНрждрзБржд ржХрз░рж┐ржЫрзЛ, **1-shot** ржЫрзЗржЯрж┐ржВрз░ ржмрж╛ржмрзЗред",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 30,
    "Content": "```bash\nmkdir -p data/my_custom_dataset\npython scripts/make_custom_dataset.py\n```",
    "ContentSha": "QqoeCMR6ke4ax/152QCJr8NiqoIlKNt5rN0t2zxaRtM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nmkdir -p data/my_custom_dataset\npython scripts/make_custom_dataset.py\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "G4GWUMouk851VaXGy/N+6q8qNJtEWjSrhRSN8Xpt6GQ=",
        "originContent": "mkdir -p data/my_custom_dataset",
        "translatedContent": "mkdir -p data/my_custom_dataset"
      },
      {
        "row": 3,
        "rowsha": "8GdjT2hnHAzciaB7nwu8iA9eU/D2sXiZNmtzGv2pdLc=",
        "originContent": "python scripts/make_custom_dataset.py",
        "translatedContent": "python scripts/make_custom_dataset.py"
      },
      {
        "row": 4,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 31,
    "Content": "This will create a custom dataset with the following folder structure:",
    "ContentSha": "9JGOKHf/Hqbdn+b2OqaUnKIYD8GGf7jwfM9mTbUtoP4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "ржПржЗржЯрзЛ рждрж▓ржд ржжрж┐ржпрж╝рж╛ ржлрзЛрж▓рзНржбрж╛рз░ ржЧржаржиржЯрзЛрж╕рж╣ ржПржЯрж╛ ржХрж╛рж╖рзНржЯржо ржбрзЗржЯрж╛ржЪрзЗржЯ рж╕рзГрж╖рзНржЯрж┐ ржХрз░рж┐ржм:",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 32,
    "Content": "```\ndata/my_custom_dataset/\n    тФЬтФАтФА annotations/\n    тФВ   тФЬтФАтФА custom_references.json\n    тФВ   тФЬтФАтФА custom_targets.json\n    тФВ   тФФтФАтФА references_visualisations/\n    тФВ       тФЬтФАтФА bird_1.jpg\n    тФВ       тФФтФАтФА boat_1.jpg\n    тФФтФАтФА images/\n        тФЬтФАтФА 429819.jpg\n        тФЬтФАтФА 101435.jpg\n        тФФтФАтФА (all target and reference images)\n```",
    "ContentSha": "Bj/IFZkQUfkoGUwynry3llvasPwDhX0B0JgBYl9vuQE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\ndata/my_custom_dataset/\n    тФЬтФАтФА annotations/\n    тФВ   тФЬтФАтФА custom_references.json\n    тФВ   тФЬтФАтФА custom_targets.json\n    тФВ   тФФтФАтФА references_visualisations/\n    тФВ       тФЬтФАтФА bird_1.jpg\n    тФВ       тФФтФАтФА boat_1.jpg\n    тФФтФАтФА images/\n        тФЬтФАтФА 429819.jpg\n        тФЬтФАтФА 101435.jpg\n        тФФтФАтФА (all target and reference images)\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 33,
    "Content": "\n**Reference images visualisation (1-shot):**\n\n| 1-shot Reference Image for BIRD ЁЯРж | 1-shot Reference Image for BOAT тЫ╡ |\n|:---------------------------------:|:----------------------------------:|\n| <img src=\"https://github.com/user-attachments/assets/e59e580d-a7db-42ac-b386-892af211fc85\" alt=\"bird_1\" width=\"500\"/> | <img src=\"https://github.com/user-attachments/assets/f94ee025-ae37-4a45-9c3e-0cfe8f8cd2bc\" alt=\"boat_1\" width=\"500\"/> |\n\n\n### 0.1 If only bbox annotations are available\n\nWe also provide a script to generate instance-level segmentation masks by using SAM2. This is useful if you only have bounding box annotations available for the reference images.\n",
    "ContentSha": "24nxqSCUluTBmTCEJTeg5Xoe4qe7qXxstVNWjA2/zVk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "**рз░рзЗржлрж╛рз░рзЗржЮрзНржЪ ржЪрж┐рждрзНрз░рз░ ржнрж┐ржЬрзБрз▒рзЗрж▓рж╛ржЗржЬрзЗржЪржи (рзз-рж╢рзНржмржЯ):**\n\n| ржЪрз░рж╛ржЗрз░ ржмрж╛ржмрзЗ рзз-рж╢рзНржмржЯ рз░рзЗржлрж╛рз░рзЗржЮрзНржЪ ржЪрж┐рждрзНрз░ ЁЯРж | ржирж╛ржУрз░ ржмрж╛ржмрзЗ рзз-рж╢рзНржмржЯ рз░рзЗржлрж╛рз░рзЗржЮрзНржЪ ржЪрж┐рждрзНрз░ тЫ╡ |\n|:----------------------------------:|:-----------------------------------:|\n| <img src=\"https://github.com/user-attachments/assets/e59e580d-a7db-42ac-b386-892af211fc85\" alt=\"bird_1\" width=\"500\"/> | <img src=\"https://github.com/user-attachments/assets/f94ee025-ae37-4a45-9c3e-0cfe8f8cd2bc\" alt=\"boat_1\" width=\"500\"/> |\n\n\n### рзж.рзз ржХрзЗрз▒рж▓ bbox ржПржи'ржЯрзЗрж╢рзНржпржи ржЙржкрж▓ржмрзНржз ржерж╛ржХрж┐рж▓рзЗ\n\nржЖржорж┐ржпрж╝рзЗ SAM2 ржмрзНржпрз▒рж╣рж╛рз░ ржХрз░рж┐ ржЗржирж╖рзНржЯрзЗржирзНрж╕-рж▓рзЗржнрзЗрж▓ ржЫрзЗржЧржорзЗржгрзНржЯрзЗрж╢рзНржпржи ржорж╛рж╕рзНржХ рж╕рзГрж╖рзНржЯрж┐ ржХрз░рж╛рз░ ржмрж╛ржмрзЗ ржПржЯрж╛ рж╕рзНржХрзНрз░рж┐ржкрзНржЯрзЛ ржкрзНрз░ржжрж╛ржи ржХрз░рзЛржБред ржПржЗржЯрзЛ ржЙржкржпрзЛржЧрзА, ржпржжрж┐ ржЖржкрзБржирж┐ рз░рзЗржлрж╛рз░рзЗржЮрзНржЪ ржЪрж┐рждрзНрз░рж╕ржорзВрж╣рз░ ржмрж╛ржмрзЗ ржХрзЗрз▒рж▓ ржмрж╛ржЙржгрзНржбрж┐ржВ ржмржХрзНрж╕ ржПржи'ржЯрзЗрж╢рзНржпржирж╣рзЗ ржЙржкрж▓ржмрзНржз рз░рж╛ржЦрзЗред\n\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 34,
    "Content": "```bash\n# Download sam_h checkpoint. Feel free to use more recent checkpoints (note: code might need to be adapted)\nwget https://dl.fbaipublicfiles.com/segment_anything/sam_vit_h_4b8939.pth -O checkpoints/sam_vit_h_4b8939.pth\n# Run automatic instance segmentation from ground truth bounding boxes.\npython no_time_to_train/dataset/sam_bbox_to_segm_batch.py \\\n    --input_json data/my_custom_dataset/annotations/custom_references.json \\\n    --image_dir data/my_custom_dataset/images \\\n    --sam_checkpoint checkpoints/sam_vit_h_4b8939.pth \\\n    --model_type vit_h \\\n    --device cuda \\\n    --batch_size 8 \\\n    --visualize\n```",
    "ContentSha": "MZFLWMxUY4Y3eseQiE2eVYRMs3mR83iZMQq1RJqVFCc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n# Download sam_h checkpoint. Feel free to use more recent checkpoints (note: code might need to be adapted)\nwget https://dl.fbaipublicfiles.com/segment_anything/sam_vit_h_4b8939.pth -O checkpoints/sam_vit_h_4b8939.pth\n# Run automatic instance segmentation from ground truth bounding boxes.\npython no_time_to_train/dataset/sam_bbox_to_segm_batch.py \\\n    --input_json data/my_custom_dataset/annotations/custom_references.json \\\n    --image_dir data/my_custom_dataset/images \\\n    --sam_checkpoint checkpoints/sam_vit_h_4b8939.pth \\\n    --model_type vit_h \\\n    --device cuda \\\n    --batch_size 8 \\\n    --visualize\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 35,
    "Content": "\n**Reference images with instance-level segmentation masks (generated by SAM2 from gt bounding boxes, 1-shot):**\n\nVisualisation of the generated segmentation masks are saved in `data/my_custom_dataset/annotations/custom_references_with_SAM_segm/references_visualisations/`.\n\n\n| 1-shot Reference Image for BIRD ЁЯРж (automatically segmented with SAM) | 1-shot Reference Image for BOAT тЫ╡ (automatically segmented with SAM) |\n|:---------------------------------:|:----------------------------------:|\n| <img src=\"https://github.com/user-attachments/assets/65d38dc4-1454-43cd-9600-e8efc67b3a82\" alt=\"bird_1_with_SAM_segm\" width=\"500\"/> | <img src=\"https://github.com/user-attachments/assets/43a558ad-50ca-4715-8285-9aa3268843c6\" alt=\"boat_1_with_SAM_segm\" width=\"500\"/> |\n\n\n### 0.2 Convert coco annotations to pickle file\n",
    "ContentSha": "0a8ACnuaKmeocwoJUK+xvmctljcu8ZJdT00xJXlyJ5w=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "**ржЗржирж╖рзНржЯрзЗржирзНрж╕-рж╕рзНрждрз░рз░ ржЫрзЗржЧржорзЗржирзНржЯрзЗрж╢рзНржмржи ржорж╛ржХрзНрж╕ ржержХрж╛ рз░рзЗржлрж╛рз░рзЗржЮрзНржЪ ржЪрж┐рждрзНрз░рж╕ржорзВрж╣ (gt ржмрж╛ржЙржгрзНржбрж┐ржВ ржмржХрзНрж╕рз░ ржкрз░рж╛ SAM2 ржжрзНржмрж╛рз░рж╛ ржЙрзОржкржирзНржи, рзз-рж╢рзНржмржЯ):**\n\nржЙрзОржкржирзНржи ржХрз░рж╛ ржЫрзЗржЧржорзЗржирзНржЯрзЗрж╢рзНржмржи ржорж╛ржХрзНрж╕рз░ ржнрж┐ржЬрзБрз▒рж╛рж▓рж╛ржЗржЬрзЗржЪржи `data/my_custom_dataset/annotations/custom_references_with_SAM_segm/references_visualisations/` ржд рж╕ржВрз░ржХрзНрж╖ржг ржХрз░рж╛ рж╣рзИржЫрзЗред\n\n| ржЪрз░рж╛ржЗрз░ ржмрж╛ржмрзЗ рзз-рж╢рзНржмржЯ рз░рзЗржлрж╛рз░рзЗржЮрзНржЪ ржЪрж┐рждрзНрз░ ЁЯРж (рж╕рзНржмржпрж╝ржВржХрзНрз░рж┐ржпрж╝ржнрж╛рз▒рзЗ SAM ржжрзНржмрж╛рз░рж╛ ржЫрзЗржЧржорзЗржирзНржЯ ржХрз░рж╛) | ржирж╛ржУрз░ ржмрж╛ржмрзЗ рзз-рж╢рзНржмржЯ рз░рзЗржлрж╛рз░рзЗржЮрзНржЪ ржЪрж┐рждрзНрз░ тЫ╡ (рж╕рзНржмржпрж╝ржВржХрзНрз░рж┐ржпрж╝ржнрж╛рз▒рзЗ SAM ржжрзНржмрж╛рз░рж╛ ржЫрзЗржЧржорзЗржирзНржЯ ржХрз░рж╛) |\n|:---------------------------------:|:----------------------------------:|\n| <img src=\"https://github.com/user-attachments/assets/65d38dc4-1454-43cd-9600-e8efc67b3a82\" alt=\"bird_1_with_SAM_segm\" width=\"500\"/> | <img src=\"https://github.com/user-attachments/assets/43a558ad-50ca-4715-8285-9aa3268843c6\" alt=\"boat_1_with_SAM_segm\" width=\"500\"/> |\n\n\n### рзж.рзи ржХрзЛржХрзЛ ржПржирзЛржЯрзЗрж╢рзНржмржирж╕ржорзВрж╣ ржкрж┐ржХрж▓ ржлрж╛ржЗрж▓рж▓рзИ рз░рзВржкрж╛ржирзНрждрз░ ржХрз░рж╛\n\n\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 36,
    "Content": "```bash\npython no_time_to_train/dataset/coco_to_pkl.py \\\n    data/my_custom_dataset/annotations/custom_references_with_segm.json \\\n    data/my_custom_dataset/annotations/custom_references_with_segm.pkl \\\n    1\n```",
    "ContentSha": "PSo9jaMX0pVKgHl0ecq9duQGpy1rMpXUU1iB4a8YzJM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython no_time_to_train/dataset/coco_to_pkl.py \\\n    data/my_custom_dataset/annotations/custom_references_with_segm.json \\\n    data/my_custom_dataset/annotations/custom_references_with_segm.pkl \\\n    1\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 37,
    "Content": "\n### 1. Fill memory with references\n\nFirst, define useful variables and create a folder for results. For correct visualisation of labels, class names should be ordered by category id as appears in the json file. E.g. `bird` has category id `16`, `boat` has category id `9`. Thus, `CAT_NAMES=boat,bird`.\n",
    "ContentSha": "97iqG4pEnvNDE6ERpjfa2nL6RAtTIXJXwjJwqU/SNCg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n### рзз. рз░рзЗржлрж╛рз░рзЗржирзНрж╕рз░ рж╕рзИрждрзЗ ржорзЗржо'рз░рж┐ ржкрзВрз░ржг ржХрз░ржХ\n\nржкрзНрз░ржержорзЗ, ржЙржкржпрзЛржЧрзА ржнрзЗрз░рж┐ржпрж╝рзЗржмрж▓ рж╕ржВржЬрзНржЮрж╛ ржХрз░ржХ ржЖрз░рзБ ржлрж▓рж╛ржлрж▓рж╕ржорзВрж╣рз░ ржмрж╛ржмрзЗ ржПржЯрж╛ ржл'рж▓рзНржбрж╛рз░ рж╕рзГрж╖рзНржЯрж┐ ржХрз░ржХред рж▓рзЗржмрзЗрж▓рж╕ржорзВрж╣ рж╕ржарж┐ржХржнрж╛рз▒рзЗ ржжрзГрж╢рзНржпрж╛ржпрж╝рж┐ржд рж╣рзЛрз▒рж╛рз░ ржмрж╛ржмрзЗ, рж╢рзНрз░рзЗржгрзА ржирж╛ржорж╕ржорзВрж╣ ржХрзЗржЯрзЗржЧрз░рж┐ ржЖржЗ.ржбрж┐. ржЕржирзБрж╕рз░рж┐ json ржлрж╛ржЗрж▓ржд ржпрж┐ ржЕржирзБрж╕рз░рж┐ ржерж╛ржХрзЗ рж╕рзЗржЗ ржЕржирзБрж╕рж╛рз░рзЗ рж╕ржЬрзНржЬрж┐ржд рж╣'ржм рж▓рж╛ржЧрж┐ржмред ржпрзЗржирзЗ, `bird`-рз░ ржХрзЗржЯрзЗржЧрз░рж┐ ржЖржЗ.ржбрж┐. рж╣рзИржЫрзЗ `16`, `boat`-рз░ ржХрзЗржЯрзЗржЧрз░рж┐ ржЖржЗ.ржбрж┐. рж╣рзИржЫрзЗ `9`ред рж╕рзЗржЗржмрж╛ржмрзЗ, `CAT_NAMES=boat,bird`ред\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 38,
    "Content": "```bash\nDATASET_NAME=my_custom_dataset\nDATASET_PATH=data/my_custom_dataset\nCAT_NAMES=boat,bird\nCATEGORY_NUM=2\nSHOT=1\nYAML_PATH=no_time_to_train/pl_configs/matching_cdfsod_template.yaml\nPATH_TO_SAVE_CKPTS=./tmp_ckpts/my_custom_dataset\nmkdir -p $PATH_TO_SAVE_CKPTS\n```",
    "ContentSha": "mJIX4bJBaFbcwT8YfLR0V4w6qjU7MQEh3u6k2gtPrvw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nDATASET_NAME=my_custom_dataset\nDATASET_PATH=data/my_custom_dataset\nCAT_NAMES=boat,bird\nCATEGORY_NUM=2\nSHOT=1\nYAML_PATH=no_time_to_train/pl_configs/matching_cdfsod_template.yaml\nPATH_TO_SAVE_CKPTS=./tmp_ckpts/my_custom_dataset\nmkdir -p $PATH_TO_SAVE_CKPTS\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 39,
    "Content": "\nRun step 1:",
    "ContentSha": "PqClefvNhYLjlZsfjndNSKUJEy6R+goO4h/8KMDA1P0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nржзрж╛ржк рзз ржЪрж▓рж╛ржУ:",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 40,
    "Content": "```bash\npython run_lightening.py test --config $YAML_PATH \\\n    --model.test_mode fill_memory \\\n    --out_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory.pth \\\n    --model.init_args.dataset_cfgs.fill_memory.root $DATASET_PATH/images \\\n    --model.init_args.dataset_cfgs.fill_memory.json_file $DATASET_PATH/annotations/custom_references_with_segm.json \\\n    --model.init_args.dataset_cfgs.fill_memory.memory_pkl $DATASET_PATH/annotations/custom_references_with_segm.pkl \\\n    --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOT \\\n    --model.init_args.dataset_cfgs.fill_memory.cat_names $CAT_NAMES \\\n    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\\n    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\\n    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\\n    --trainer.devices 1\n```",
    "ContentSha": "wLZindeEKqrTUIIF55tL8lmaW4jWIZ2bdw6bj/1U9TU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython run_lightening.py test --config $YAML_PATH \\\n    --model.test_mode fill_memory \\\n    --out_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory.pth \\\n    --model.init_args.dataset_cfgs.fill_memory.root $DATASET_PATH/images \\\n    --model.init_args.dataset_cfgs.fill_memory.json_file $DATASET_PATH/annotations/custom_references_with_segm.json \\\n    --model.init_args.dataset_cfgs.fill_memory.memory_pkl $DATASET_PATH/annotations/custom_references_with_segm.pkl \\\n    --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOT \\\n    --model.init_args.dataset_cfgs.fill_memory.cat_names $CAT_NAMES \\\n    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\\n    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\\n    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\\n    --trainer.devices 1\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 41,
    "Content": "\n### 2. Post-process memory bank\n",
    "ContentSha": "39oOsuQIXM8TjT8ASLmZI0OpSbUSAT4d7YEHU7S2uqQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n### 2. ржкрзЛрж╖рзНржЯ-ржкрзНрз░рж╕рзЗржЫ ржорзЗржорз░рж┐ ржмрзЗржВржХ\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 42,
    "Content": "```bash\npython run_lightening.py test --config $YAML_PATH \\\n    --model.test_mode postprocess_memory \\\n    --ckpt_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory.pth \\\n    --out_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory_postprocessed.pth \\\n    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\\n    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\\n    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\\n    --trainer.devices 1\n```",
    "ContentSha": "49JIaRecImNonhL7aGKB3JsAkgDw76Irci38QcuVb8k=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython run_lightening.py test --config $YAML_PATH \\\n    --model.test_mode postprocess_memory \\\n    --ckpt_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory.pth \\\n    --out_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory_postprocessed.pth \\\n    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\\n    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\\n    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\\n    --trainer.devices 1\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 43,
    "Content": "\n### 3. Inference on target images\n\nIf `ONLINE_VIS` is set to True, prediction results will be saved in `results_analysis/my_custom_dataset/` and displayed as they are computed. NOTE that running with online visualisation is much slower.\n\nFeel free to change the score threshold `VIS_THR` to see more or less segmented instances.",
    "ContentSha": "iHMIprXo8OKpw9IBp/bgaLDyjCzJT/6l87G6FkpcZcY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n### рзй. рж▓ржХрзНрж╖рзНржп ржЪрж┐рждрзНрз░рж╕ржорзВрж╣ржд ржЕржирзБржорж╛ржи\n\nржпржжрж┐ `ONLINE_VIS` True рж╣рж┐ржЪрж╛ржкрзЗ ржЫрзЗржЯ ржХрз░рж╛ рж╣ржпрж╝, рждрзЗржирзНрждрзЗ ржкрзВрз░рзНржмрж╛ржирзБржорж╛ржи ржлрж▓рж╛ржлрж▓рж╕ржорзВрж╣ `results_analysis/my_custom_dataset/` ржд рж╕ржВрз░ржХрзНрж╖ржг ржХрз░рж╛ рж╣'ржм ржЖрз░рзБ ржЧржиржирж╛ ржХрз░рж╛рз░ рж▓ржЧрзЗ рж▓ржЧрзЗ ржкрзНрз░ржжрз░рзНрж╢ржи ржХрз░рж╛ рж╣'ржмред рж▓ржХрзНрж╖рзНржп ржХрз░ржХ ржпрзЗ ржЕржирж▓рж╛ржЗржи ржнрж┐ржЬрзБрз▒рж╛рж▓рж╛ржЗржЬрзЗрж╢рзНржпржирз░ рж╕рзИрждрзЗ ржЪрж▓рж╛рж▓рзЗ ржЗржпрж╝рж╛рз░ ржЧрждрж┐ ржмрж╣рзБ ржоржирзНржерз░ рж╣ржпрж╝ред\n\nржЖржкрзБржирж┐ ржЗржЪрзНржЫрж╛ ржХрз░рж┐рж▓рзЗ рж╕рзНржХ'рз░ ржерзНрз░рзЗрж╢рж╣тАЩрж▓рзНржб `VIS_THR` ржкрз░рж┐ржмрз░рзНрждржи ржХрз░рж┐ ржЕржзрж┐ржХ ржмрж╛ ржХржо ржЫрзЗржЧржорзЗржгрзНржЯ ржХрз░рж╛ ржЗржирж╖рзНржЯрзЗржирзНрж╕ ржжрзЗржЦрж┐ржм ржкрж╛рз░рзЗред",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 44,
    "Content": "```bash\nONLINE_VIS=True\nVIS_THR=0.4\npython run_lightening.py test --config $YAML_PATH \\\n    --model.test_mode test \\\n    --ckpt_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory_postprocessed.pth \\\n    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\\n    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\\n    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\\n    --model.init_args.model_cfg.test.imgs_path $DATASET_PATH/images \\\n    --model.init_args.model_cfg.test.online_vis $ONLINE_VIS \\\n    --model.init_args.model_cfg.test.vis_thr $VIS_THR \\\n    --model.init_args.dataset_cfgs.test.root $DATASET_PATH/images \\\n    --model.init_args.dataset_cfgs.test.json_file $DATASET_PATH/annotations/custom_targets.json \\\n    --model.init_args.dataset_cfgs.test.cat_names $CAT_NAMES \\\n    --trainer.devices 1\n```",
    "ContentSha": "WwpzFHhc6G71aipZFN/unoGoH913SXlW3RG98ipcK1k=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nONLINE_VIS=True\nVIS_THR=0.4\npython run_lightening.py test --config $YAML_PATH \\\n    --model.test_mode test \\\n    --ckpt_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory_postprocessed.pth \\\n    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\\n    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\\n    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\\n    --model.init_args.model_cfg.test.imgs_path $DATASET_PATH/images \\\n    --model.init_args.model_cfg.test.online_vis $ONLINE_VIS \\\n    --model.init_args.model_cfg.test.vis_thr $VIS_THR \\\n    --model.init_args.dataset_cfgs.test.root $DATASET_PATH/images \\\n    --model.init_args.dataset_cfgs.test.json_file $DATASET_PATH/annotations/custom_targets.json \\\n    --model.init_args.dataset_cfgs.test.cat_names $CAT_NAMES \\\n    --trainer.devices 1\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 45,
    "Content": "\n### Results\n\nPerformance metrics (with the exact same parameters as commands above) should be:\n",
    "ContentSha": "qUh629YPJLLYOXeHGSusGSWIYdfgfMGmHPttF+Zq0tU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n### ржлрж▓рж╛ржлрж▓\n\nржХрж╛рз░рзНржпрж╕ржорзНржкрж╛ржжржи ржорзЗржЯрзНрз░рж┐ржХрзНрж╕ (ржУржкрз░рз░ ржирж┐рз░рзНржжрзЗрж╢ржирж╛рж╕ржорзВрж╣рз░ ржПржХрзЗ ржПржХрзЗ ржкрз░рж╛ржорж┐рждрзНрз░рз░рзЗ) рж╣'ржм рж▓рж╛ржЧрж┐ржм:\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 46,
    "Content": "```\nBBOX RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.478\n\nSEGM RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.458\n```",
    "ContentSha": "EqM8BsGgWhI+q5ZgXp4DOk8Wayw3iQnYToBVZntlyVI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nBBOX RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.478\n\nSEGM RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.458\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 47,
    "Content": "\nVisual results are saved in `results_analysis/my_custom_dataset/`. Note that our method works for false negatives, that is, images that do not contain any instances of the desired classes.\n\n*Click images to enlarge тмЗя╕П*\n\n| Target image with boats тЫ╡ (left GT, right predictions) | Target image with birds ЁЯРж (left GT, right predictions) |\n|:----------------------:|:----------------------:|\n| ![000000459673](https://github.com/user-attachments/assets/678dc15a-dd3b-49d5-9287-6290da16aa6b) | ![000000407180](https://github.com/user-attachments/assets/fe306e48-af49-4d83-ac82-76fac6c456d1) |\n\n| Target image with boats and birds тЫ╡ЁЯРж (left GT, right predictions) | Target image without boats or birds ЁЯЪл (left GT, right predictions) |\n|:---------------------------------:|:----------------------------------:|\n| ![000000517410](https://github.com/user-attachments/assets/9849b227-7f43-43d7-81ea-58010a623ad5) | ![000000460598](https://github.com/user-attachments/assets/7587700c-e09d-4cf6-8590-3df129c2568e) |\n\n\n## ЁЯУЪ Citation\n\nIf you use this work, please cite us:\n",
    "ContentSha": "tEYR4ra1661R2TKfAxblzhr7EHrPwy5JI69dHQuD/mM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nржжрзГрж╢рзНржпржорж╛ржи ржлрж▓рж╛ржлрж▓рж╕ржорзВрж╣ `results_analysis/my_custom_dataset/`-ржд рж╕ржВрз░ржХрзНрж╖рж┐ржд рж╣ржпрж╝ред рж▓ржХрзНрж╖рзНржп ржХрз░ржХ ржпрзЗ, ржЖржорж╛рз░ ржкржжрзНржзрждрж┐ржЯрзЛ ржорж┐ржЫрж╛ ржЛржгрж╛рждрзНржоржХрж╕ржорзВрж╣рз░ ржмрж╛ржмрзЗ ржХрж╛ржо ржХрз░рзЗ, ржЕрз░рзНржерж╛рзО, рж╕рзЗржЗрж╕ржХрж▓ ржЪрж┐рждрзНрз░ ржптАЩржд ржкрзНрз░ржпрж╝рзЛржЬржирзАржпрж╝ рж╢рзНрз░рзЗржгрзАрж╕ржорзВрж╣рз░ ржХрзЛржирзЛ ржЙржжрж╛рж╣рз░ржг ржирж╛ржерж╛ржХрзЗред\n\n*ржЪрж┐рждрзНрз░рж╕ржорзВрж╣ ржбрж╛ржЩрз░ ржХрз░рж┐ржмрж▓рзИ ржХрзНрж▓рж┐ржХ ржХрз░ржХ тмЗя╕П*\n\n| ржирзМржХрж╛ ржержХрж╛ рж▓ржХрзНрж╖рзНржп ржЪрж┐рждрзНрз░ тЫ╡ (ржмрж╛ржУржБржлрж╛рж▓рзЗ GT, рж╕рзЛржБржлрж╛рж▓рзЗ ржЕржирзБржорж╛ржи) | ржЪрз░рж╛ржЗ ржержХрж╛ рж▓ржХрзНрж╖рзНржп ржЪрж┐рждрзНрз░ ЁЯРж (ржмрж╛ржУржБржлрж╛рж▓рзЗ GT, рж╕рзЛржБржлрж╛рж▓рзЗ ржЕржирзБржорж╛ржи) |\n|:----------------------:|:----------------------:|\n| ![000000459673](https://github.com/user-attachments/assets/678dc15a-dd3b-49d5-9287-6290da16aa6b) | ![000000407180](https://github.com/user-attachments/assets/fe306e48-af49-4d83-ac82-76fac6c456d1) |\n\n| ржирзМржХрж╛ ржЖрз░рзБ ржЪрз░рж╛ржЗ ржержХрж╛ рж▓ржХрзНрж╖рзНржп ржЪрж┐рждрзНрз░ тЫ╡ЁЯРж (ржмрж╛ржУржБржлрж╛рж▓рзЗ GT, рж╕рзЛржБржлрж╛рж▓рзЗ ржЕржирзБржорж╛ржи) | ржирзМржХрж╛ ржмрж╛ ржЪрз░рж╛ржЗ ржиржержХрж╛ рж▓ржХрзНрж╖рзНржп ржЪрж┐рждрзНрз░ ЁЯЪл (ржмрж╛ржУржБржлрж╛рж▓рзЗ GT, рж╕рзЛржБржлрж╛рж▓рзЗ ржЕржирзБржорж╛ржи) |\n|:---------------------------------:|:----------------------------------:|\n| ![000000517410](https://github.com/user-attachments/assets/9849b227-7f43-43d7-81ea-58010a623ad5) | ![000000460598](https://github.com/user-attachments/assets/7587700c-e09d-4cf6-8590-3df129c2568e) |\n\n\n## ЁЯУЪ ржЙржжрзНржзрзГрждрж┐\n\nржЖржкрзБржирж┐ ржПржЗ ржХрж╛ржо ржмрзНржпрз▒рж╣рж╛рз░ ржХрз░рж┐рж▓рзЗ, ржЕржирзБржЧрзНрз░рж╣ ржХрз░рж┐ ржЖржорж╛ржХ ржЙржжрзНржзрзГрждрж┐ ржжрж┐ржпрж╝ржХ:\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 48,
    "Content": "```bibtex\n@article{espinosa2025notimetotrain,\n  title={No time to train! Training-Free Reference-Based Instance Segmentation},\n  author={Miguel Espinosa and Chenhongyi Yang and Linus Ericsson and Steven McDonagh and Elliot J. Crowley},\n  journal={arXiv preprint arXiv:2507.02798},\n  year={2025},\n  primaryclass={cs.CV}\n}\n```",
    "ContentSha": "wkySuPRHWTRGorn0rwSBqyUnW5RNg9LVe0O7npcbKSs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bibtex\n@article{espinosa2025notimetotrain,\n  title={No time to train! Training-Free Reference-Based Instance Segmentation},\n  author={Miguel Espinosa and Chenhongyi Yang and Linus Ericsson and Steven McDonagh and Elliot J. Crowley},\n  journal={arXiv preprint arXiv:2507.02798},\n  year={2025},\n  primaryclass={cs.CV}\n}\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 49,
    "Content": "",
    "ContentSha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  }
]