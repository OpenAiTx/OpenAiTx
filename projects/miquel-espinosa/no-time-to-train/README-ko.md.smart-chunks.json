[
  {
    "Id": 1,
    "Content": "<div align=\"center\">\n\n# 🚀 No Time to Train!  \n### Training-Free Reference-Based Instance Segmentation  \n[![GitHub](https://img.shields.io/badge/%E2%80%8B-No%20Time%20To%20Train-black?logo=github)](https://github.com/miquel-espinosa/no-time-to-train)\n[![Website](https://img.shields.io/badge/🌐-Project%20Page-grey)](https://miquel-espinosa.github.io/no-time-to-train/)\n[![arXiv](https://img.shields.io/badge/arXiv-2507.02798-b31b1b)](https://arxiv.org/abs/2507.02798)\n\n**State-of-the-art (Papers with Code)**\n\n[**_1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-1-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)\n\n[**_10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-10-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)\n\n[**_30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-30-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference)\n\n</div>\n\n---\n\n> 🔔 **Update (July 2025):** Code has been updated with instructions!\n\n---\n\n## 📋 Table of Contents\n\n- [🎯 Highlights](#-highlights)\n- [📜 Abstract](#-abstract)\n- [🧠 Architecture](#-architecture)\n- [🛠️ Installation instructions](#️-installation-instructions)\n  - [1. Clone the repository](#1-clone-the-repository)\n  - [2. Create conda environment](#2-create-conda-environment)\n  - [3. Install SAM2 and DinoV2](#3-install-sam2-and-dinov2)\n  - [4. Download datasets](#4-download-datasets)\n  - [5. Download SAM2 and DinoV2 checkpoints](#5-download-sam2-and-dinov2-checkpoints)\n- [📊 Inference code: Reproduce 30-shot SOTA results in Few-shot COCO](#-inference-code)\n  - [0. Create reference set](#0-create-reference-set)\n  - [1. Fill memory with references](#1-fill-memory-with-references)\n  - [2. Post-process memory bank](#2-post-process-memory-bank)\n  - [3. Inference on target images](#3-inference-on-target-images)\n  - [Results](#results)\n- [🔍 Citation](#-citation)\n\n\n## 🎯 Highlights\n- 💡 **Training-Free**: No fine-tuning, no prompt engineering—just a reference image.  \n- 🖼️ **Reference-Based**: Segment new objects using just a few examples.  \n- 🔥 **SOTA Performance**: Outperforms previous training-free approaches on COCO, PASCAL VOC, and Cross-Domain FSOD.\n\n**Links:**\n- 🧾 [**arXiv Paper**](https://arxiv.org/abs/2507.02798)  \n- 🌐 [**Project Website**](https://miquel-espinosa.github.io/no-time-to-train/)  \n- 📈 [**Papers with Code**](https://paperswithcode.com/paper/no-time-to-train-training-free-reference)\n\n## 📜 Abstract\n\n> The performance of image segmentation models has historically been constrained by the high cost of collecting large-scale annotated data. The Segment Anything Model (SAM) alleviates this original problem through a promptable, semantics-agnostic, segmentation paradigm and yet still requires manual visual-prompts or complex domain-dependent prompt-generation rules to process a new image. Towards reducing this new burden, our work investigates the task of object segmentation when provided with, alternatively, only a small set of reference images. Our key insight is to leverage strong semantic priors, as learned by foundation models, to identify corresponding regions between a reference and a target image. We find that correspondences enable automatic generation of instance-level segmentation masks for downstream tasks and instantiate our ideas via a multi-stage, training-free method incorporating (1) memory bank construction; (2) representation aggregation and (3) semantic-aware feature matching. Our experiments show significant improvements on segmentation metrics, leading to state-of-the-art performance on COCO FSOD (36.8% nAP), PASCAL VOC Few-Shot (71.2% nAP50) and outperforming existing training-free approaches on the Cross-Domain FSOD benchmark (22.4% nAP).\n\n![cdfsod-results-final-comic-sans-min](https://github.com/user-attachments/assets/ab302c02-c080-4042-99fc-0e181ba8abb9)\n\n\n## 🧠 Architecture\n\n![training-free-architecture-comic-sans-min](https://github.com/user-attachments/assets/d84dd83a-505e-45a0-8ce3-98e1838017f9)\n\n\n## 🛠️ Installation instructions\n\n### 1. Clone the repository\n",
    "ContentSha": "KmqmDZEgjS9KWkNq4H00CX68aS2rG2rDU6Mj9HMNPBg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<div align=\"center\">\n\n# 🚀 훈련할 시간 없다!  \n### 훈련 없는 참조 기반 인스턴스 분할  \n[![GitHub](https://img.shields.io/badge/%E2%80%8B-No%20Time%20To%20Train-black?logo=github)](https://github.com/miquel-espinosa/no-time-to-train)\n[![Website](https://img.shields.io/badge/🌐-Project%20Page-grey)](https://miquel-espinosa.github.io/no-time-to-train/)\n[![arXiv](https://img.shields.io/badge/arXiv-2507.02798-b31b1b)](https://arxiv.org/abs/2507.02798)\n\n**최신 기술 (Papers with Code)**\n\n[**_1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-1-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)\n\n[**_10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-10-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)\n\n[**_30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-30-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference)\n\n</div>\n\n---\n\n> 🔔 **업데이트 (2025년 7월):** 코드가 업데이트되어 사용법이 추가되었습니다!\n\n---\n\n## 📋 목차\n\n- [🎯 주요 내용](#-highlights)\n- [📜 초록](#-abstract)\n- [🧠 아키텍처](#-architecture)\n- [🛠️ 설치 안내](#️-installation-instructions)\n  - [1. 저장소 복제](#1-clone-the-repository)\n  - [2. conda 환경 생성](#2-create-conda-environment)\n  - [3. SAM2 및 DinoV2 설치](#3-install-sam2-and-dinov2)\n  - [4. 데이터셋 다운로드](#4-download-datasets)\n  - [5. SAM2 및 DinoV2 체크포인트 다운로드](#5-download-sam2-and-dinov2-checkpoints)\n- [📊 추론 코드: Few-shot COCO에서 30-shot SOTA 결과 재현](#-inference-code)\n  - [0. 참조 세트 생성](#0-create-reference-set)\n  - [1. 메모리에 참조 채우기](#1-fill-memory-with-references)\n  - [2. 메모리 뱅크 후처리](#2-post-process-memory-bank)\n  - [3. 대상 이미지 추론](#3-inference-on-target-images)\n  - [결과](#results)\n- [🔍 인용](#-citation)\n\n\n## 🎯 주요 내용\n- 💡 **훈련 불필요**: 미세조정 없이, 프롬프트 설계 없이—오직 참조 이미지만으로.  \n- 🖼️ **참조 기반**: 몇 개의 예시만으로 새로운 객체 분할.  \n- 🔥 **최신 성능**: COCO, PASCAL VOC, Cross-Domain FSOD에서 기존 훈련 없는 방법들보다 뛰어난 성능.\n\n**링크:**\n- 🧾 [**arXiv 논문**](https://arxiv.org/abs/2507.02798)  \n- 🌐 [**프로젝트 웹사이트**](https://miquel-espinosa.github.io/no-time-to-train/)  \n- 📈 [**Papers with Code**](https://paperswithcode.com/paper/no-time-to-train-training-free-reference)\n\n## 📜 초록\n\n> 이미지 분할 모델의 성능은 역사적으로 대규모 주석 데이터 수집의 높은 비용에 의해 제한되어 왔습니다. Segment Anything Model (SAM)은 프롬프트 가능하고 의미론에 무관한 분할 패러다임을 통해 이 문제를 완화하지만, 여전히 새로운 이미지를 처리할 때 수동 시각 프롬프트나 복잡한 도메인 의존적 프롬프트 생성 규칙이 필요합니다. 이러한 부담을 줄이기 위해, 본 연구는 소량의 참조 이미지 세트만 제공되는 경우 객체 분할 작업을 조사합니다. 우리의 핵심 통찰은 파운데이션 모델이 학습한 강력한 의미론적 사전지식을 활용하여 참조 이미지와 대상 이미지 사이의 대응 영역을 식별하는 것입니다. 대응 관계를 통해 다운스트림 작업을 위한 인스턴스 수준 분할 마스크를 자동으로 생성할 수 있음을 발견했고, 이를 다단계 훈련 불필요 방법으로 구현했습니다: (1) 메모리 뱅크 구축; (2) 표현 집계; (3) 의미 인지 특징 매칭. 실험 결과, COCO FSOD (36.8% nAP), PASCAL VOC Few-Shot (71.2% nAP50)에서 상당한 분할 지표 개선을 보였으며, Cross-Domain FSOD 벤치마크에서 기존 훈련 불필요 접근법을 능가하는 성과(22.4% nAP)를 달성했습니다.\n\n![cdfsod-results-final-comic-sans-min](https://github.com/user-attachments/assets/ab302c02-c080-4042-99fc-0e181ba8abb9)\n\n\n## 🧠 아키텍처\n\n![training-free-architecture-comic-sans-min](https://github.com/user-attachments/assets/d84dd83a-505e-45a0-8ce3-98e1838017f9)\n\n\n## 🛠️ 설치 안내\n\n### 1. 저장소 복제\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "94MDjHJY1ZLwHNTLIEUIfk7TMc9cq1L/1FmwhqBTe/k=",
        "originContent": "<div align=\"center\">",
        "translatedContent": "<div align=\"center\">"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "M2z5PpMcecoVKOuL1SHlc+Nemsj5RhARR5H/VCXUbU4=",
        "originContent": "# 🚀 No Time to Train!  ",
        "translatedContent": "# 🚀 훈련할 시간 없다!  "
      },
      {
        "row": 4,
        "rowsha": "sBABAz4Jw3ska9lsdsi3rPgLmZF2UtZveFVXqUbPW4o=",
        "originContent": "### Training-Free Reference-Based Instance Segmentation  ",
        "translatedContent": "### 훈련 없는 참조 기반 인스턴스 분할  "
      },
      {
        "row": 5,
        "rowsha": "JtzwGnZRrNQ5I7E9S5GXrFkY4/D5xExLcZYAwT19D64=",
        "originContent": "[![GitHub](https://img.shields.io/badge/%E2%80%8B-No%20Time%20To%20Train-black?logo=github)](https://github.com/miquel-espinosa/no-time-to-train)",
        "translatedContent": "[![GitHub](https://img.shields.io/badge/%E2%80%8B-No%20Time%20To%20Train-black?logo=github)](https://github.com/miquel-espinosa/no-time-to-train)"
      },
      {
        "row": 6,
        "rowsha": "CRyX9LxzyIoLmrrOb7mTcL54XM1hKOGqkgq3VKhx5cE=",
        "originContent": "[![Website](https://img.shields.io/badge/🌐-Project%20Page-grey)](https://miquel-espinosa.github.io/no-time-to-train/)",
        "translatedContent": "[![Website](https://img.shields.io/badge/🌐-Project%20Page-grey)](https://miquel-espinosa.github.io/no-time-to-train/)"
      },
      {
        "row": 7,
        "rowsha": "dt6HOwBuvdMzY99NMmrvjF5F1UqOV/FCSs2Eonn3jFg=",
        "originContent": "[![arXiv](https://img.shields.io/badge/arXiv-2507.02798-b31b1b)](https://arxiv.org/abs/2507.02798)",
        "translatedContent": "[![arXiv](https://img.shields.io/badge/arXiv-2507.02798-b31b1b)](https://arxiv.org/abs/2507.02798)"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "rSA9HSpS5rcIOZmSZRcPQKvvg2GUNxqsAdOWtJYdOHs=",
        "originContent": "**State-of-the-art (Papers with Code)**",
        "translatedContent": "**최신 기술 (Papers with Code)**"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "RCygaktM60s/6Nh81Di5rEj1unH3qYQk6ssff9WZGD0=",
        "originContent": "[**_1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-1-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)",
        "translatedContent": "[**_1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-1-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "82JTokCfbaTp51wZ7KHE+TjQfG7++TxKu56PGDUWzKQ=",
        "originContent": "[**_10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-10-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)",
        "translatedContent": "[**_10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-10-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "WlDEHv6vhtwMRWtJdWk2Zcrv1cpAmLS/xftZ0Kkn+CE=",
        "originContent": "[**_30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-30-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference)",
        "translatedContent": "[**_30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-30-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference)"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "qsMmUbEPVnxGG5tPJV1vsfpoWbU2jYvZpRr5IKshzyM=",
        "originContent": "</div>",
        "translatedContent": "</div>"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": "---"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "oBzBP5J3FkKjjX4RYleGYQS6VLFBidTRmKTt+niYdjI=",
        "originContent": "> 🔔 **Update (July 2025):** Code has been updated with instructions!",
        "translatedContent": "> 🔔 **업데이트 (2025년 7월):** 코드가 업데이트되어 사용법이 추가되었습니다!"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": "---"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "gI/1I87HHg3xh0//UJSFC6ZnF4rvkzKNqsRrROy4OT4=",
        "originContent": "## 📋 Table of Contents",
        "translatedContent": "## 📋 목차"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "nNQUAJIz1LHAKaPCqpOwlWw2V1U6+cxSwWn4SP47dYU=",
        "originContent": "- [🎯 Highlights](#-highlights)",
        "translatedContent": "- [🎯 주요 내용](#-highlights)"
      },
      {
        "row": 28,
        "rowsha": "Yu2Tht6jyrgb81Dv2Lb3Od+nx0nyGk4T4cj16urKV2U=",
        "originContent": "- [📜 Abstract](#-abstract)",
        "translatedContent": "- [📜 초록](#-abstract)"
      },
      {
        "row": 29,
        "rowsha": "QlUWr+r6i1bCNXq6zWF9xq7AP6VlaFB+55fzw1uHGh4=",
        "originContent": "- [🧠 Architecture](#-architecture)",
        "translatedContent": "- [🧠 아키텍처](#-architecture)"
      },
      {
        "row": 30,
        "rowsha": "LvvjM2oWVjYs2n37JdP4KxJEfjrmlXfMHEYRmg3enOQ=",
        "originContent": "- [🛠️ Installation instructions](#️-installation-instructions)",
        "translatedContent": "- [🛠️ 설치 안내](#️-installation-instructions)"
      },
      {
        "row": 31,
        "rowsha": "/PgPyQxwaS0cIQHgVFkC3ij55sWJZfYd1yCTh2nzruo=",
        "originContent": "  - [1. Clone the repository](#1-clone-the-repository)",
        "translatedContent": "  - [1. 저장소 복제](#1-clone-the-repository)"
      },
      {
        "row": 32,
        "rowsha": "8sUHJDRIkb9dDdybJg2zcT82y2SDBjUvluSFGb9lVBM=",
        "originContent": "  - [2. Create conda environment](#2-create-conda-environment)",
        "translatedContent": "  - [2. conda 환경 생성](#2-create-conda-environment)"
      },
      {
        "row": 33,
        "rowsha": "UVdxTXFnRSDBzVF4T2aUxvPHopcFMYmHxQaW1H6OPgE=",
        "originContent": "  - [3. Install SAM2 and DinoV2](#3-install-sam2-and-dinov2)",
        "translatedContent": "  - [3. SAM2 및 DinoV2 설치](#3-install-sam2-and-dinov2)"
      },
      {
        "row": 34,
        "rowsha": "vmGLfIt0mS9Q/YAti3rKk4FenFiuiawcJga8eA1HvOo=",
        "originContent": "  - [4. Download datasets](#4-download-datasets)",
        "translatedContent": "  - [4. 데이터셋 다운로드](#4-download-datasets)"
      },
      {
        "row": 35,
        "rowsha": "JMFveg/CL8TprnWNKkURn6blL5NhMU16pmzjwIauENc=",
        "originContent": "  - [5. Download SAM2 and DinoV2 checkpoints](#5-download-sam2-and-dinov2-checkpoints)",
        "translatedContent": "  - [5. SAM2 및 DinoV2 체크포인트 다운로드](#5-download-sam2-and-dinov2-checkpoints)"
      },
      {
        "row": 36,
        "rowsha": "4twIP/tovN+tEN+KOehWNX1x6ADAZktZhaU8S6q3qPk=",
        "originContent": "- [📊 Inference code: Reproduce 30-shot SOTA results in Few-shot COCO](#-inference-code)",
        "translatedContent": "- [📊 추론 코드: Few-shot COCO에서 30-shot SOTA 결과 재현](#-inference-code)"
      },
      {
        "row": 37,
        "rowsha": "XAaZ2BUnk0iPaGrcahhfTfiRzOiOmWVMhXy0yS1URIo=",
        "originContent": "  - [0. Create reference set](#0-create-reference-set)",
        "translatedContent": "  - [0. 참조 세트 생성](#0-create-reference-set)"
      },
      {
        "row": 38,
        "rowsha": "CtFWOMU1Fc9CVZLu2Rzmu0KND5cnswQEsU5Mp7Onhvc=",
        "originContent": "  - [1. Fill memory with references](#1-fill-memory-with-references)",
        "translatedContent": "  - [1. 메모리에 참조 채우기](#1-fill-memory-with-references)"
      },
      {
        "row": 39,
        "rowsha": "EJbJqD4ueSk6fQ0G3e/0zkWNB+NbmAqL7F5GXdil5cM=",
        "originContent": "  - [2. Post-process memory bank](#2-post-process-memory-bank)",
        "translatedContent": "  - [2. 메모리 뱅크 후처리](#2-post-process-memory-bank)"
      },
      {
        "row": 40,
        "rowsha": "1oE+QeEAJ0TNP+C2O/r0QRzWRsbxz8Blj9YRkbZZZus=",
        "originContent": "  - [3. Inference on target images](#3-inference-on-target-images)",
        "translatedContent": "  - [3. 대상 이미지 추론](#3-inference-on-target-images)"
      },
      {
        "row": 41,
        "rowsha": "0vQANuql7yEE1pWdHwSmSnQDu+2Y61IcAuCgVVNt9wU=",
        "originContent": "  - [Results](#results)",
        "translatedContent": "  - [결과](#results)"
      },
      {
        "row": 42,
        "rowsha": "i1kInMqJFKqqK3fU81jxOA1aqo/+qKu0WGDwxCh710g=",
        "originContent": "- [🔍 Citation](#-citation)",
        "translatedContent": "- [🔍 인용](#-citation)"
      },
      {
        "row": 43,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 44,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 45,
        "rowsha": "kIeGJFTQ5JJc/jXqjQ9PAg5wubcgfjTL2po5UNDrLQ8=",
        "originContent": "## 🎯 Highlights",
        "translatedContent": "## 🎯 주요 내용"
      },
      {
        "row": 46,
        "rowsha": "4c0+fbJNN24hIJySSKght3OZNjxykoTxkukVFgkNZok=",
        "originContent": "- 💡 **Training-Free**: No fine-tuning, no prompt engineering—just a reference image.  ",
        "translatedContent": "- 💡 **훈련 불필요**: 미세조정 없이, 프롬프트 설계 없이—오직 참조 이미지만으로.  "
      },
      {
        "row": 47,
        "rowsha": "177g7I1Hv/8E1qW/GKY8ESZKs1ERKa8lH2+eSJWPfys=",
        "originContent": "- 🖼️ **Reference-Based**: Segment new objects using just a few examples.  ",
        "translatedContent": "- 🖼️ **참조 기반**: 몇 개의 예시만으로 새로운 객체 분할.  "
      },
      {
        "row": 48,
        "rowsha": "hJVC6fdp5vmCdow9OaINDAoUeIQFo+H4J7X39/laLuQ=",
        "originContent": "- 🔥 **SOTA Performance**: Outperforms previous training-free approaches on COCO, PASCAL VOC, and Cross-Domain FSOD.",
        "translatedContent": "- 🔥 **최신 성능**: COCO, PASCAL VOC, Cross-Domain FSOD에서 기존 훈련 없는 방법들보다 뛰어난 성능."
      },
      {
        "row": 49,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 50,
        "rowsha": "5t7uSO5Wec1VT7vt46wJD3xShwKEgg8Z6sc6sb/A3n4=",
        "originContent": "**Links:**",
        "translatedContent": "**링크:**"
      },
      {
        "row": 51,
        "rowsha": "mSZshukl7MsJrVvQ4IJvfrxptw7xbgh/UwGaEwRqCFk=",
        "originContent": "- 🧾 [**arXiv Paper**](https://arxiv.org/abs/2507.02798)  ",
        "translatedContent": "- 🧾 [**arXiv 논문**](https://arxiv.org/abs/2507.02798)  "
      },
      {
        "row": 52,
        "rowsha": "aRS755BdZ7JdxnaQ39257Pg2fZoyNBuqId5PgA6rebk=",
        "originContent": "- 🌐 [**Project Website**](https://miquel-espinosa.github.io/no-time-to-train/)  ",
        "translatedContent": "- 🌐 [**프로젝트 웹사이트**](https://miquel-espinosa.github.io/no-time-to-train/)  "
      },
      {
        "row": 53,
        "rowsha": "W0Ak9nAkjF7nVsfJUEtJvM6CVJHI9t7YMjCvBzmXZzo=",
        "originContent": "- 📈 [**Papers with Code**](https://paperswithcode.com/paper/no-time-to-train-training-free-reference)",
        "translatedContent": "- 📈 [**Papers with Code**](https://paperswithcode.com/paper/no-time-to-train-training-free-reference)"
      },
      {
        "row": 54,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 55,
        "rowsha": "AdIRiroevVLawnTYJDBh2L1x5u8N8rbImLDszk/n52Q=",
        "originContent": "## 📜 Abstract",
        "translatedContent": "## 📜 초록"
      },
      {
        "row": 56,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 57,
        "rowsha": "f62KYkH46xSV0RKRpAlERSF/nhSETk2RE3WyAIz5gDw=",
        "originContent": "> The performance of image segmentation models has historically been constrained by the high cost of collecting large-scale annotated data. The Segment Anything Model (SAM) alleviates this original problem through a promptable, semantics-agnostic, segmentation paradigm and yet still requires manual visual-prompts or complex domain-dependent prompt-generation rules to process a new image. Towards reducing this new burden, our work investigates the task of object segmentation when provided with, alternatively, only a small set of reference images. Our key insight is to leverage strong semantic priors, as learned by foundation models, to identify corresponding regions between a reference and a target image. We find that correspondences enable automatic generation of instance-level segmentation masks for downstream tasks and instantiate our ideas via a multi-stage, training-free method incorporating (1) memory bank construction; (2) representation aggregation and (3) semantic-aware feature matching. Our experiments show significant improvements on segmentation metrics, leading to state-of-the-art performance on COCO FSOD (36.8% nAP), PASCAL VOC Few-Shot (71.2% nAP50) and outperforming existing training-free approaches on the Cross-Domain FSOD benchmark (22.4% nAP).",
        "translatedContent": "> 이미지 분할 모델의 성능은 역사적으로 대규모 주석 데이터 수집의 높은 비용에 의해 제한되어 왔습니다. Segment Anything Model (SAM)은 프롬프트 가능하고 의미론에 무관한 분할 패러다임을 통해 이 문제를 완화하지만, 여전히 새로운 이미지를 처리할 때 수동 시각 프롬프트나 복잡한 도메인 의존적 프롬프트 생성 규칙이 필요합니다. 이러한 부담을 줄이기 위해, 본 연구는 소량의 참조 이미지 세트만 제공되는 경우 객체 분할 작업을 조사합니다. 우리의 핵심 통찰은 파운데이션 모델이 학습한 강력한 의미론적 사전지식을 활용하여 참조 이미지와 대상 이미지 사이의 대응 영역을 식별하는 것입니다. 대응 관계를 통해 다운스트림 작업을 위한 인스턴스 수준 분할 마스크를 자동으로 생성할 수 있음을 발견했고, 이를 다단계 훈련 불필요 방법으로 구현했습니다: (1) 메모리 뱅크 구축; (2) 표현 집계; (3) 의미 인지 특징 매칭. 실험 결과, COCO FSOD (36.8% nAP), PASCAL VOC Few-Shot (71.2% nAP50)에서 상당한 분할 지표 개선을 보였으며, Cross-Domain FSOD 벤치마크에서 기존 훈련 불필요 접근법을 능가하는 성과(22.4% nAP)를 달성했습니다."
      },
      {
        "row": 58,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 59,
        "rowsha": "2cFS6Ni4+vEPr5/fIkHNwVjmXSVHJRpd3EN6igllMqk=",
        "originContent": "![cdfsod-results-final-comic-sans-min](https://github.com/user-attachments/assets/ab302c02-c080-4042-99fc-0e181ba8abb9)",
        "translatedContent": "![cdfsod-results-final-comic-sans-min](https://github.com/user-attachments/assets/ab302c02-c080-4042-99fc-0e181ba8abb9)"
      },
      {
        "row": 60,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 61,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 62,
        "rowsha": "9ZwHLgVs/DMTWN3sszXIqi/Yn0AjwM/4BUudMPNrZrc=",
        "originContent": "## 🧠 Architecture",
        "translatedContent": "## 🧠 아키텍처"
      },
      {
        "row": 63,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 64,
        "rowsha": "9yA6/g3QCBAgAR0tQeKBpaJwjEB0LHNGgYaTP8Odie8=",
        "originContent": "![training-free-architecture-comic-sans-min](https://github.com/user-attachments/assets/d84dd83a-505e-45a0-8ce3-98e1838017f9)",
        "translatedContent": "![training-free-architecture-comic-sans-min](https://github.com/user-attachments/assets/d84dd83a-505e-45a0-8ce3-98e1838017f9)"
      },
      {
        "row": 65,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 66,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 67,
        "rowsha": "waJ0INSC829ifiOOIlQMyceEvWq7ygQ1pzD67dJK+dU=",
        "originContent": "## 🛠️ Installation instructions",
        "translatedContent": "## 🛠️ 설치 안내"
      },
      {
        "row": 68,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 69,
        "rowsha": "+xj0fCZBnnk1GY2rxUGAtpalIeN4JdfjLYAPNPmqklw=",
        "originContent": "### 1. Clone the repository",
        "translatedContent": "### 1. 저장소 복제"
      },
      {
        "row": 70,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "```bash\ngit clone https://github.com/miquel-espinosa/no-time-to-train.git\ncd no-time-to-train\n```",
    "ContentSha": "FqsX96SwjKeMnD8rrDrd4pfjW32n5SRf0jXIvB4WHz4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ngit clone https://github.com/miquel-espinosa/no-time-to-train.git\ncd no-time-to-train\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "tbrVsf75k5ek6PyY7IMQzbbdOzky3+/St8qtMWyJAOQ=",
        "originContent": "git clone https://github.com/miquel-espinosa/no-time-to-train.git",
        "translatedContent": "git clone https://github.com/miquel-espinosa/no-time-to-train.git"
      },
      {
        "row": 3,
        "rowsha": "Dl7fmEbfbE2QXIBTKk7nbKQuT4ZJ2UyiHvUOOSCyBkU=",
        "originContent": "cd no-time-to-train",
        "translatedContent": "cd no-time-to-train"
      },
      {
        "row": 4,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 3,
    "Content": "\n### 2. Create conda environment\n\nWe will create a conda environment with the required packages.",
    "ContentSha": "xkwDa/DvfDApk69cNg5ORagN7Utfcos+yCxRpQNn6gk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 2. conda 환경 생성\n\n필요한 패키지를 포함한 conda 환경을 생성합니다.\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 2. conda 환경 생성"
      },
      {
        "row": 2,
        "rowsha": "lOpP+fncE0WXjYFx4cEzWCuTp9dQPLazN03yoVLRZeM=",
        "originContent": "### 2. Create conda environment",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "필요한 패키지를 포함한 conda 환경을 생성합니다."
      },
      {
        "row": 4,
        "rowsha": "apgEk3XVnsZcRJz6wefmnhsIYbWgGvUIyN9CSvEDcT8=",
        "originContent": "We will create a conda environment with the required packages.",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "```bash\nconda env create -f environment.yml\nconda activate no-time-to-train\n```",
    "ContentSha": "W1AlselK7qAC1MpunsXhTPA8MG+kwjbpodKBkImFaio=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nconda env create -f environment.yml\nconda activate no-time-to-train\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "I3A/ExbOxC8ZCCVG6lc7LYw0eJGRMwCPlgAQFOQeAdM=",
        "originContent": "conda env create -f environment.yml",
        "translatedContent": "conda env create -f environment.yml"
      },
      {
        "row": 3,
        "rowsha": "gjlLu6PuYaZnp6enWqCzobQWQkuVX8IbATyXWvSHfek=",
        "originContent": "conda activate no-time-to-train",
        "translatedContent": "conda activate no-time-to-train"
      },
      {
        "row": 4,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 5,
    "Content": "\n### 3. Install SAM2 and DinoV2\n\nWe will install SAM2 and DinoV2 from source.",
    "ContentSha": "qhWNaaTVSpemTiKekSRF2dWJYxX636VdhL+lPiso28M=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 3. SAM2 및 DinoV2 설치\n\n우리는 SAM2와 DinoV2를 소스에서 설치할 것입니다.\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 3. SAM2 및 DinoV2 설치"
      },
      {
        "row": 2,
        "rowsha": "yMX8CuyR9OcpAk4bM8991r173DB3Irje6eG2vcjCIYA=",
        "originContent": "### 3. Install SAM2 and DinoV2",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "우리는 SAM2와 DinoV2를 소스에서 설치할 것입니다."
      },
      {
        "row": 4,
        "rowsha": "3tPCrhXejyiCxeNcWNbeCRYH+qRcPzfGX47SCPtKJM4=",
        "originContent": "We will install SAM2 and DinoV2 from source.",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 6,
    "Content": "```bash\npip install -e .\ncd dinov2\npip install -e .\ncd ..\n```",
    "ContentSha": "dMsjJwa9nz+HHMLijmYZdlLh6FmDBGmNlHxywBzbEg4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npip install -e .\ncd dinov2\npip install -e .\ncd ..\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "knVRIKwsU4emj9biFUgJoBjbMP5EER6U5AGxS0Ix1+Y=",
        "originContent": "pip install -e .",
        "translatedContent": "pip install -e ."
      },
      {
        "row": 3,
        "rowsha": "NQ0ej8baKapEzwmnRFlcv7gjhPiCFB4kkhzT4GBcZlg=",
        "originContent": "cd dinov2",
        "translatedContent": "cd dinov2"
      },
      {
        "row": 4,
        "rowsha": "knVRIKwsU4emj9biFUgJoBjbMP5EER6U5AGxS0Ix1+Y=",
        "originContent": "pip install -e .",
        "translatedContent": "pip install -e ."
      },
      {
        "row": 5,
        "rowsha": "7MeL2ie4MsaVajW98e6Pt1n4VCWp6MhdKO21I7tnefU=",
        "originContent": "cd ..",
        "translatedContent": "cd .."
      },
      {
        "row": 6,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 7,
    "Content": "\n### 4. Download datasets\n\nPlease download COCO dataset and place it in `data/coco`\n\n### 5. Download SAM2 and DinoV2 checkpoints\n\nWe will download the exact SAM2 checkpoints used in the paper.\n(Note, however, that SAM2.1 checkpoints are already available and might perform better.)\n",
    "ContentSha": "LTXcwC9KGMiPIiBLXtQVF6Wdi9d19gVIUBX6F+tGTqE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 4. 데이터셋 다운로드\n\nCOCO 데이터셋을 다운로드하여 `data/coco`에 저장하세요.\n\n### 5. SAM2 및 DinoV2 체크포인트 다운로드\n\n논문에서 사용된 정확한 SAM2 체크포인트를 다운로드할 것입니다.\n(단, SAM2.1 체크포인트는 이미 제공되고 있으며 더 나은 성능을 보일 수 있습니다.)\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 4. 데이터셋 다운로드"
      },
      {
        "row": 2,
        "rowsha": "TnKsydD0g8rcNXuf2/pg21KtCvG3bd/BIBBXFIENLQ4=",
        "originContent": "### 4. Download datasets",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "COCO 데이터셋을 다운로드하여 `data/coco`에 저장하세요."
      },
      {
        "row": 4,
        "rowsha": "2zbgqsOvy4sDNnLUnhoymwnPIv/ae3Ui1VZgcAlgH+E=",
        "originContent": "Please download COCO dataset and place it in `data/coco`",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 5. SAM2 및 DinoV2 체크포인트 다운로드"
      },
      {
        "row": 6,
        "rowsha": "gmre49s95+SZMe53R5lONlj1VC3sTkyr6tffYBd8QLc=",
        "originContent": "### 5. Download SAM2 and DinoV2 checkpoints",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "논문에서 사용된 정확한 SAM2 체크포인트를 다운로드할 것입니다."
      },
      {
        "row": 8,
        "rowsha": "kncAIotnzx052W61WDQLuqpzRXGOW8h+OVSNFbzu11I=",
        "originContent": "We will download the exact SAM2 checkpoints used in the paper.",
        "translatedContent": "(단, SAM2.1 체크포인트는 이미 제공되고 있으며 더 나은 성능을 보일 수 있습니다.)"
      },
      {
        "row": 9,
        "rowsha": "8EIrRjZVIY74ZhXR1Mz9WneKjrP9V3DP4zeC+fTSg8U=",
        "originContent": "(Note, however, that SAM2.1 checkpoints are already available and might perform better.)",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 8,
    "Content": "```bash\nmkdir -p checkpoints/dinov2\ncd checkpoints\nwget https://dl.fbaipublicfiles.com/segment_anything_2/072824/sam2_hiera_large.pt\ncd dinov2\nwget https://dl.fbaipublicfiles.com/dinov2/dinov2_vitl14/dinov2_vitl14_pretrain.pth\ncd ../..\n```",
    "ContentSha": "Q/LddAGtfunblX1eLTx7t3Vs+C74LtCdgP/HQ3gIJgk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nmkdir -p checkpoints/dinov2\ncd checkpoints\nwget https://dl.fbaipublicfiles.com/segment_anything_2/072824/sam2_hiera_large.pt\ncd dinov2\nwget https://dl.fbaipublicfiles.com/dinov2/dinov2_vitl14/dinov2_vitl14_pretrain.pth\ncd ../..\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "2L2/HwV6pokAc5a1omFOPufShCCcHIpelvlFvsUbUYw=",
        "originContent": "mkdir -p checkpoints/dinov2",
        "translatedContent": "mkdir -p checkpoints/dinov2"
      },
      {
        "row": 3,
        "rowsha": "o+Xrkchbtsfzr9w8hMHKc7XEZYucfiRdn8hnupQghvk=",
        "originContent": "cd checkpoints",
        "translatedContent": "cd checkpoints"
      },
      {
        "row": 4,
        "rowsha": "FdOgfI0xURW5Yp6nP8ljWr9hgV0P2Qdpxdm48QTRZvw=",
        "originContent": "wget https://dl.fbaipublicfiles.com/segment_anything_2/072824/sam2_hiera_large.pt",
        "translatedContent": "wget https://dl.fbaipublicfiles.com/segment_anything_2/072824/sam2_hiera_large.pt"
      },
      {
        "row": 5,
        "rowsha": "NQ0ej8baKapEzwmnRFlcv7gjhPiCFB4kkhzT4GBcZlg=",
        "originContent": "cd dinov2",
        "translatedContent": "cd dinov2"
      },
      {
        "row": 6,
        "rowsha": "4diCaY+DzTrFb1H7b/kpnKSLN1CHz6d4ZO1DKano/b8=",
        "originContent": "wget https://dl.fbaipublicfiles.com/dinov2/dinov2_vitl14/dinov2_vitl14_pretrain.pth",
        "translatedContent": "wget https://dl.fbaipublicfiles.com/dinov2/dinov2_vitl14/dinov2_vitl14_pretrain.pth"
      },
      {
        "row": 7,
        "rowsha": "AXl1r7R6XAAK2dSQ3eoCI6z0J2TVFfJLcs1JNhjaPvs=",
        "originContent": "cd ../..",
        "translatedContent": "cd ../.."
      },
      {
        "row": 8,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 9,
    "Content": "\n\n## 📊 Inference code\n\n⚠️ Disclaimer: This is research code — expect a bit of chaos!\n\n### Reproducing 30-shot SOTA results in Few-shot COCO\n\nDefine useful variables and create a folder for results:\n",
    "ContentSha": "q8hVlrVr+ps2xB/JxM3tKtF/KxoLX4PepxohltYehb8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<translate-content>\n\n## 📊 추론 코드\n\n⚠️ 면책 조항: 이 코드는 연구용입니다 — 약간의 혼란이 있을 수 있습니다!\n\n### Few-shot COCO에서 30-shot SOTA 결과 재현하기\n\n유용한 변수를 정의하고 결과를 위한 폴더를 만듭니다:\n</translate-content>",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<translate-content>"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "XICLEvra4KdP0kTfk74bH8u1qJFtnvPioycb5zJKgyk=",
        "originContent": "## 📊 Inference code",
        "translatedContent": "## 📊 추론 코드"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "xk/LIjHLiR5YZlHKyzZOnKzFVgm6TSziTEIKjw3Bwsw=",
        "originContent": "⚠️ Disclaimer: This is research code — expect a bit of chaos!",
        "translatedContent": "⚠️ 면책 조항: 이 코드는 연구용입니다 — 약간의 혼란이 있을 수 있습니다!"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "s+zp3s2gC7TqDz5zxog+bqEWpZhskPSoywmPoAHZbTI=",
        "originContent": "### Reproducing 30-shot SOTA results in Few-shot COCO",
        "translatedContent": "### Few-shot COCO에서 30-shot SOTA 결과 재현하기"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "kBPC0XHh4DAtp9CRehl1c1WxxxdQv7s6iNjBmTZnObU=",
        "originContent": "Define useful variables and create a folder for results:",
        "translatedContent": "유용한 변수를 정의하고 결과를 위한 폴더를 만듭니다:"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "</translate-content>"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 10,
    "Content": "```bash\nCONFIG=./dev_hongyi/new_exps/coco_fewshot_10shot_Sam2L.yaml\nCLASS_SPLIT=\"few_shot_classes\"\nRESULTS_DIR=work_dirs/few_shot_results\nSHOTS=30\nSEED=33\nGPUS=4\n\nmkdir -p $RESULTS_DIR\nFILENAME=few_shot_${SHOTS}shot_seed${SEED}.pkl\n```",
    "ContentSha": "wa26a//gYVB/bsm/Ss0Ef3c98keyPNk2i4K5U5mobw0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nCONFIG=./dev_hongyi/new_exps/coco_fewshot_10shot_Sam2L.yaml\nCLASS_SPLIT=\"few_shot_classes\"\nRESULTS_DIR=work_dirs/few_shot_results\nSHOTS=30\nSEED=33\nGPUS=4\n\nmkdir -p $RESULTS_DIR\nFILENAME=few_shot_${SHOTS}shot_seed${SEED}.pkl\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "kpkNTbMSbjTYeIL/+ezHt0/R0vzjGfe293P5xlFKFoM=",
        "originContent": "CONFIG=./dev_hongyi/new_exps/coco_fewshot_10shot_Sam2L.yaml",
        "translatedContent": "CONFIG=./dev_hongyi/new_exps/coco_fewshot_10shot_Sam2L.yaml"
      },
      {
        "row": 3,
        "rowsha": "5WMjYncByH/QOlhlQQF4FtfN3u8wjLndKxm7keS4yps=",
        "originContent": "CLASS_SPLIT=\"few_shot_classes\"",
        "translatedContent": "CLASS_SPLIT=\"few_shot_classes\""
      },
      {
        "row": 4,
        "rowsha": "8+9IFy0Ktvpr9OXcmwR7hFbTBllKChS7HJeJExKgf1c=",
        "originContent": "RESULTS_DIR=work_dirs/few_shot_results",
        "translatedContent": "RESULTS_DIR=work_dirs/few_shot_results"
      },
      {
        "row": 5,
        "rowsha": "OXdDwPWbHsxfYJ/JWQLsImG0nugF4Dx1u550vDW3zXM=",
        "originContent": "SHOTS=30",
        "translatedContent": "SHOTS=30"
      },
      {
        "row": 6,
        "rowsha": "TZCZPpxiYExF90wFUMh2SaiJ47wqIXbOS5sQprvua60=",
        "originContent": "SEED=33",
        "translatedContent": "SEED=33"
      },
      {
        "row": 7,
        "rowsha": "FIF/DKrsM63ZqjaUXSdXy4O0d4HvcXq+l6JN3AFA6Yg=",
        "originContent": "GPUS=4",
        "translatedContent": "GPUS=4"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "d4MFZP0817WEw/aGRG5ynYG5yhNx7V9bDTr4Alztgc0=",
        "originContent": "mkdir -p $RESULTS_DIR",
        "translatedContent": "mkdir -p $RESULTS_DIR"
      },
      {
        "row": 10,
        "rowsha": "EMUWO2w3mya0vHg6/YC8i555JVmIz0kJ3S8bBMbAJI4=",
        "originContent": "FILENAME=few_shot_${SHOTS}shot_seed${SEED}.pkl",
        "translatedContent": "FILENAME=few_shot_${SHOTS}shot_seed${SEED}.pkl"
      },
      {
        "row": 11,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 11,
    "Content": "\n#### 0. Create reference set\n",
    "ContentSha": "1XrtmJBqIS+6/RHkWmwwopPgE4d3ho+bdPLXEG612YQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "#### 0. 참조 세트 생성\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### 0. 참조 세트 생성"
      },
      {
        "row": 2,
        "rowsha": "hH5BL9r0JjuRESi5le8Alo5MmDKd1rArkPEpMYnBafU=",
        "originContent": "#### 0. Create reference set",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 12,
    "Content": "```bash\npython dev_hongyi/dataset/few_shot_sampling.py \\\n        --n-shot $SHOTS \\\n        --out-path ${RESULTS_DIR}/${FILENAME} \\\n        --seed $SEED \\\n        --dataset $CLASS_SPLIT\n```",
    "ContentSha": "K2qihfCvhm6MeL36HMpSbTp40eW4QWi72WesH1jKKP8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython dev_hongyi/dataset/few_shot_sampling.py \\\n        --n-shot $SHOTS \\\n        --out-path ${RESULTS_DIR}/${FILENAME} \\\n        --seed $SEED \\\n        --dataset $CLASS_SPLIT\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "V3PB0MIpK6ywAECN4qhhtH+Kws/O7W3K3C1x/EgzzjA=",
        "originContent": "python dev_hongyi/dataset/few_shot_sampling.py \\",
        "translatedContent": "python dev_hongyi/dataset/few_shot_sampling.py \\"
      },
      {
        "row": 3,
        "rowsha": "+skavTcONmIk4Z2Hocv42oEOFkuDVUnG8f+ryhqcFaU=",
        "originContent": "        --n-shot $SHOTS \\",
        "translatedContent": "        --n-shot $SHOTS \\"
      },
      {
        "row": 4,
        "rowsha": "8jXgrH+gZMvZYRQcNSg0cF811pg2RJnwePOy8VOW8eo=",
        "originContent": "        --out-path ${RESULTS_DIR}/${FILENAME} \\",
        "translatedContent": "        --out-path ${RESULTS_DIR}/${FILENAME} \\"
      },
      {
        "row": 5,
        "rowsha": "e5rbzhd5GZBQ2jYVYVa4pEa3+aPBgXgj3C4mIvqNgRk=",
        "originContent": "        --seed $SEED \\",
        "translatedContent": "        --seed $SEED \\"
      },
      {
        "row": 6,
        "rowsha": "8LI9BkSuTbQDKnVIEWkfgSrM6cL7ITEQqyf9jvAGyVM=",
        "originContent": "        --dataset $CLASS_SPLIT",
        "translatedContent": "        --dataset $CLASS_SPLIT"
      },
      {
        "row": 7,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 13,
    "Content": "\n#### 1. Fill memory with references\n",
    "ContentSha": "v8E00SBwAimb411iJf1DGyTZxexOPmC/xK0/B+XBH1g=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "#### 1. 참조로 메모리 채우기\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### 1. 참조로 메모리 채우기"
      },
      {
        "row": 2,
        "rowsha": "VJjwJCy879WjECoY4d+eG17YzmeTrrto37hfYBKLaRA=",
        "originContent": "#### 1. Fill memory with references",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 14,
    "Content": "```bash\npython run_lightening.py test --config $CONFIG \\\n                              --model.test_mode fill_memory \\\n                              --out_path ${RESULTS_DIR}/memory.ckpt \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --model.init_args.dataset_cfgs.fill_memory.memory_pkl ${RESULTS_DIR}/${FILENAME} \\\n                              --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOTS \\\n                              --model.init_args.dataset_cfgs.fill_memory.class_split $CLASS_SPLIT \\\n                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\\n                              --trainer.devices $GPUS\n```",
    "ContentSha": "1pVePuzaIdQCE/Nx0VoaWhFswuB5Jh1Z68Cw/2D8RkM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython run_lightening.py test --config $CONFIG \\\n                              --model.test_mode fill_memory \\\n                              --out_path ${RESULTS_DIR}/memory.ckpt \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --model.init_args.dataset_cfgs.fill_memory.memory_pkl ${RESULTS_DIR}/${FILENAME} \\\n                              --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOTS \\\n                              --model.init_args.dataset_cfgs.fill_memory.class_split $CLASS_SPLIT \\\n                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\\n                              --trainer.devices $GPUS\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "sjKkf7qJprqDCifDCeKiML4U2PDr9j5gLj3gE20DdAE=",
        "originContent": "python run_lightening.py test --config $CONFIG \\",
        "translatedContent": "python run_lightening.py test --config $CONFIG \\"
      },
      {
        "row": 3,
        "rowsha": "ZP/7jq3+HyOLABYaptMZ4UkHxjMLozBwIuTsx5SfJlM=",
        "originContent": "                              --model.test_mode fill_memory \\",
        "translatedContent": "                              --model.test_mode fill_memory \\"
      },
      {
        "row": 4,
        "rowsha": "dw035ZqART2iXO6AvszT6wOezFnXl3PS+gUk3q4qY3o=",
        "originContent": "                              --out_path ${RESULTS_DIR}/memory.ckpt \\",
        "translatedContent": "                              --out_path ${RESULTS_DIR}/memory.ckpt \\"
      },
      {
        "row": 5,
        "rowsha": "5vch6nc4gqD4Rkd98CLx0Ap2xtsYz2REiiv44rAYRdw=",
        "originContent": "                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\",
        "translatedContent": "                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\"
      },
      {
        "row": 6,
        "rowsha": "0PHssJRAZtRHX73Dtvygh3/6fNrYxLxWqAstmCMyQgg=",
        "originContent": "                              --model.init_args.dataset_cfgs.fill_memory.memory_pkl ${RESULTS_DIR}/${FILENAME} \\",
        "translatedContent": "                              --model.init_args.dataset_cfgs.fill_memory.memory_pkl ${RESULTS_DIR}/${FILENAME} \\"
      },
      {
        "row": 7,
        "rowsha": "+wWdzpR3uXAhp8X1rgG37xspe/EahtJfxneL4uRkvlk=",
        "originContent": "                              --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOTS \\",
        "translatedContent": "                              --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOTS \\"
      },
      {
        "row": 8,
        "rowsha": "N8VpeIr8NzJZlVU/IZxYF6XpTTQspBNrSTOX1elKNkE=",
        "originContent": "                              --model.init_args.dataset_cfgs.fill_memory.class_split $CLASS_SPLIT \\",
        "translatedContent": "                              --model.init_args.dataset_cfgs.fill_memory.class_split $CLASS_SPLIT \\"
      },
      {
        "row": 9,
        "rowsha": "QjlPBFBvAlBUuD4GuXpaF3LGpLUL/cLkONfDL2+sFYs=",
        "originContent": "                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\",
        "translatedContent": "                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\"
      },
      {
        "row": 10,
        "rowsha": "eTY+TKefFyJaYfJ0b74wqYldDauHZlSTXE3x5RxpKKY=",
        "originContent": "                              --trainer.devices $GPUS",
        "translatedContent": "                              --trainer.devices $GPUS"
      },
      {
        "row": 11,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 15,
    "Content": "\n#### 2. Post-process memory bank\n",
    "ContentSha": "3A9quGczCnAQeUTcoJVGYLTQapI5nQ5aSj7AZIhGFJw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "#### 2. 후처리 메모리 뱅크\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### 2. 후처리 메모리 뱅크"
      },
      {
        "row": 2,
        "rowsha": "5wpz+4IDdhauWTXukmxeDu1BBtr8Rutk3fCTPRJ6kdo=",
        "originContent": "#### 2. Post-process memory bank",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 16,
    "Content": "```bash\npython run_lightening.py test --config $CONFIG \\\n                              --model.test_mode postprocess_memory \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --ckpt_path ${RESULTS_DIR}/memory.ckpt \\\n                              --out_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\\n                              --trainer.devices 1\n```",
    "ContentSha": "45qs8EyMtDUKs5A3rrQcJQXl6OIbI6s0rKOOnHmYURs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython run_lightening.py test --config $CONFIG \\\n                              --model.test_mode postprocess_memory \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --ckpt_path ${RESULTS_DIR}/memory.ckpt \\\n                              --out_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\\n                              --trainer.devices 1\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "sjKkf7qJprqDCifDCeKiML4U2PDr9j5gLj3gE20DdAE=",
        "originContent": "python run_lightening.py test --config $CONFIG \\",
        "translatedContent": "python run_lightening.py test --config $CONFIG \\"
      },
      {
        "row": 3,
        "rowsha": "k4GegCcg6qSMgv/KAYugOdFO7uF83xGw6O3mpJAZzbg=",
        "originContent": "                              --model.test_mode postprocess_memory \\",
        "translatedContent": "                              --model.test_mode postprocess_memory \\"
      },
      {
        "row": 4,
        "rowsha": "5vch6nc4gqD4Rkd98CLx0Ap2xtsYz2REiiv44rAYRdw=",
        "originContent": "                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\",
        "translatedContent": "                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\"
      },
      {
        "row": 5,
        "rowsha": "Q1nlXXT5YTy4ssAtle/aPiuAUcNYPDAemDOwywO0Fgw=",
        "originContent": "                              --ckpt_path ${RESULTS_DIR}/memory.ckpt \\",
        "translatedContent": "                              --ckpt_path ${RESULTS_DIR}/memory.ckpt \\"
      },
      {
        "row": 6,
        "rowsha": "85isOovpZT33t6pHN3/+v5hrBRh/wmZ2rm7TrxUx4UQ=",
        "originContent": "                              --out_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\",
        "translatedContent": "                              --out_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\"
      },
      {
        "row": 7,
        "rowsha": "5gocY/vIqToA83Cw3I8Ogf5454LKg9lvtUKTMkfHl8c=",
        "originContent": "                              --trainer.devices 1",
        "translatedContent": "                              --trainer.devices 1"
      },
      {
        "row": 8,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 17,
    "Content": "\n#### 3. Inference on target images\n",
    "ContentSha": "73CbGioqWaTULTrw0roBLoZCxgBgtmJVFDc7RHluH0g=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "#### 3. 대상 이미지에 대한 추론\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### 3. 대상 이미지에 대한 추론"
      },
      {
        "row": 2,
        "rowsha": "o2OgK8Q2E1Gj8+JIlcmw3qqsz0GlAO6xoCiiTFPdOhg=",
        "originContent": "#### 3. Inference on target images",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 18,
    "Content": "```bash\npython run_lightening.py test --config $CONFIG  \\\n                              --ckpt_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\\n                              --model.init_args.test_mode test \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --model.init_args.model_cfg.dataset_name $CLASS_SPLIT \\\n                              --model.init_args.dataset_cfgs.test.class_split $CLASS_SPLIT \\\n                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\\n                              --trainer.devices $GPUS\n```",
    "ContentSha": "vbKXVEs47fJ5oF8vLkHVM2ofFMx1hKBBgQF9JAgp2Jo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython run_lightening.py test --config $CONFIG  \\\n                              --ckpt_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\\n                              --model.init_args.test_mode test \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --model.init_args.model_cfg.dataset_name $CLASS_SPLIT \\\n                              --model.init_args.dataset_cfgs.test.class_split $CLASS_SPLIT \\\n                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\\n                              --trainer.devices $GPUS\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "ETB4pryNkbKBYVDnMNAkZrg0RpYJHary0G8qBVNJC3c=",
        "originContent": "python run_lightening.py test --config $CONFIG  \\",
        "translatedContent": "python run_lightening.py test --config $CONFIG  \\"
      },
      {
        "row": 3,
        "rowsha": "eUba+f945Q4G+0uxC5riCwrALEBSMcCz1JxuhSqGN98=",
        "originContent": "                              --ckpt_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\",
        "translatedContent": "                              --ckpt_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\"
      },
      {
        "row": 4,
        "rowsha": "9Uq+z6KfS7DFbtmhkzTJtn74GXf2Pysn8ueNg7eUL14=",
        "originContent": "                              --model.init_args.test_mode test \\",
        "translatedContent": "                              --model.init_args.test_mode test \\"
      },
      {
        "row": 5,
        "rowsha": "5vch6nc4gqD4Rkd98CLx0Ap2xtsYz2REiiv44rAYRdw=",
        "originContent": "                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\",
        "translatedContent": "                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\"
      },
      {
        "row": 6,
        "rowsha": "ntyeqvEJGT6WzAwxh24Yg5f3S3WZUxgXL7gk4l4JZTc=",
        "originContent": "                              --model.init_args.model_cfg.dataset_name $CLASS_SPLIT \\",
        "translatedContent": "                              --model.init_args.model_cfg.dataset_name $CLASS_SPLIT \\"
      },
      {
        "row": 7,
        "rowsha": "KCYkWWbOWWD3gBRiHpYkXT2vsS5GlvwNtnh+M/r6F98=",
        "originContent": "                              --model.init_args.dataset_cfgs.test.class_split $CLASS_SPLIT \\",
        "translatedContent": "                              --model.init_args.dataset_cfgs.test.class_split $CLASS_SPLIT \\"
      },
      {
        "row": 8,
        "rowsha": "QjlPBFBvAlBUuD4GuXpaF3LGpLUL/cLkONfDL2+sFYs=",
        "originContent": "                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\",
        "translatedContent": "                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\"
      },
      {
        "row": 9,
        "rowsha": "eTY+TKefFyJaYfJ0b74wqYldDauHZlSTXE3x5RxpKKY=",
        "originContent": "                              --trainer.devices $GPUS",
        "translatedContent": "                              --trainer.devices $GPUS"
      },
      {
        "row": 10,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 19,
    "Content": "\nIf you'd like to see inference results online (as they are computed), uncomment lines 1746-1749 in `dev_hongyi/models/Sam2MatchingBaseline_noAMG.py` [here](https://github.com/miquel-espinosa/no-time-to-train/blob/main/dev_hongyi/models/Sam2MatchingBaseline_noAMG.py#L1746).\nAdjust the score threshold `score_thr` parameter as needed to see more or less segmented instances.\nImages will now be saved in `results_analysis/few_shot_classes/`. The image on the left shows the ground truth, the image on the right shows the segmented instances found by our training-free method.\n\nNote that in this example we are using the `few_shot_classes` split, thus, we should only expect to see segmented instances of the classes in this split (not all classes in COCO).\n\n#### Results\n\nAfter running all images in the validation set, you should obtain:\n",
    "ContentSha": "x9fRPbKX9OpVX4JU9oLmDQ6iuh83nP/sfCPBcoDR5MY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<translate-content>\n온라인으로 추론 결과를 실시간으로 확인하고 싶다면 `dev_hongyi/models/Sam2MatchingBaseline_noAMG.py` 파일의 1746-1749행의 주석을 해제하세요 [여기](https://github.com/miquel-espinosa/no-time-to-train/blob/main/dev_hongyi/models/Sam2MatchingBaseline_noAMG.py#L1746).\n더 많거나 적은 분할된 인스턴스를 보려면 `score_thr` 점수 임계값 파라미터를 필요에 따라 조정하세요.\n이미지는 이제 `results_analysis/few_shot_classes/`에 저장됩니다. 왼쪽 이미지는 실제 정답을, 오른쪽 이미지는 학습 없는 방법으로 찾은 분할 인스턴스를 보여줍니다.\n\n이 예제에서는 `few_shot_classes` 분할을 사용하므로, 이 분할에 포함된 클래스의 분할 인스턴스만 볼 수 있어야 합니다 (COCO의 모든 클래스는 아님).\n\n#### 결과\n\n검증 세트의 모든 이미지를 실행한 후에는 다음을 얻을 수 있습니다:\n</translate-content>",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<translate-content>"
      },
      {
        "row": 2,
        "rowsha": "ZpFkUH5ufhEqrvMUZKm88BkwPKcfXuarl00qWC4ePME=",
        "originContent": "If you'd like to see inference results online (as they are computed), uncomment lines 1746-1749 in `dev_hongyi/models/Sam2MatchingBaseline_noAMG.py` [here](https://github.com/miquel-espinosa/no-time-to-train/blob/main/dev_hongyi/models/Sam2MatchingBaseline_noAMG.py#L1746).",
        "translatedContent": "온라인으로 추론 결과를 실시간으로 확인하고 싶다면 `dev_hongyi/models/Sam2MatchingBaseline_noAMG.py` 파일의 1746-1749행의 주석을 해제하세요 [여기](https://github.com/miquel-espinosa/no-time-to-train/blob/main/dev_hongyi/models/Sam2MatchingBaseline_noAMG.py#L1746)."
      },
      {
        "row": 3,
        "rowsha": "t4ls82vV4doL4KQnV6GHrD5nhSB/5viegwhZKApCxv8=",
        "originContent": "Adjust the score threshold `score_thr` parameter as needed to see more or less segmented instances.",
        "translatedContent": "더 많거나 적은 분할된 인스턴스를 보려면 `score_thr` 점수 임계값 파라미터를 필요에 따라 조정하세요."
      },
      {
        "row": 4,
        "rowsha": "GEvthXpgTrUG4klt5odBBg+yPrDSUgG4O0X6qagvPPc=",
        "originContent": "Images will now be saved in `results_analysis/few_shot_classes/`. The image on the left shows the ground truth, the image on the right shows the segmented instances found by our training-free method.",
        "translatedContent": "이미지는 이제 `results_analysis/few_shot_classes/`에 저장됩니다. 왼쪽 이미지는 실제 정답을, 오른쪽 이미지는 학습 없는 방법으로 찾은 분할 인스턴스를 보여줍니다."
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "SovnZ9uxfKqQS4l5TvalD8KlZ1z6kB/LqxYQlkfqvfg=",
        "originContent": "Note that in this example we are using the `few_shot_classes` split, thus, we should only expect to see segmented instances of the classes in this split (not all classes in COCO).",
        "translatedContent": "이 예제에서는 `few_shot_classes` 분할을 사용하므로, 이 분할에 포함된 클래스의 분할 인스턴스만 볼 수 있어야 합니다 (COCO의 모든 클래스는 아님)."
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "GViaw3FgQP0CiY45/FzC3sUybwvUQorojma5tDwKi+Q=",
        "originContent": "#### Results",
        "translatedContent": "#### 결과"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "zNb3sJjc7R1s7fDW8EZQdgmvGwmPYQrwHy8JzOlUtW0=",
        "originContent": "After running all images in the validation set, you should obtain:",
        "translatedContent": "검증 세트의 모든 이미지를 실행한 후에는 다음을 얻을 수 있습니다:"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "</translate-content>"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 20,
    "Content": "```\nBBOX RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.368\n\nSEGM RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.342\n```",
    "ContentSha": "ch7itB3Sk8oLc3U+lNJGI3BV57wpOMkabTBsUiqzHDU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nBBOX RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.368\n\nSEGM RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.342\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "6+SoG/C1LE1K2E2idRgo0wLiNXuHXa/uEvPdviqcZF4=",
        "originContent": "BBOX RESULTS:",
        "translatedContent": "BBOX RESULTS:"
      },
      {
        "row": 3,
        "rowsha": "ci1ikhzu1jZ+iu7D+fKpog7c7MxkHcKNrRL32PWs2Wk=",
        "originContent": "  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.368",
        "translatedContent": "  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.368"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "z0XrQxBw6OrQM75a+IP8wO/pxxz5u27bzwWBQpAjoD8=",
        "originContent": "SEGM RESULTS:",
        "translatedContent": "SEGM RESULTS:"
      },
      {
        "row": 6,
        "rowsha": "MZx1mil79ZI21aGhlqeSdiNkRLvm1pPCWdtdsMehBqc=",
        "originContent": "  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.342",
        "translatedContent": "  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.342"
      },
      {
        "row": 7,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 21,
    "Content": "---\n\n\n## 🔍 Citation\n\nIf you use this work, please cite us:\n",
    "ContentSha": "tvuEGq1J142/zbvM+xk8m0fwL08niFD8TSPMYJQpUX0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "---\n\n\n## 🔍 Citation\n\nIf you use this work, please cite us:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": "---"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "beMNdQvIcq7fdOgtRspE9Mnhd3290HTAVVZ71OtaZqQ=",
        "originContent": "## 🔍 Citation",
        "translatedContent": "## 🔍 Citation"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "Sdz+BhK182S5kd+RgeXS3+k84ZIkUnXbkzFXsei1Tl0=",
        "originContent": "If you use this work, please cite us:",
        "translatedContent": "If you use this work, please cite us:"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 22,
    "Content": "```bibtex\n@article{espinosa2025notimetotrain,\n  title={No time to train! Training-Free Reference-Based Instance Segmentation},\n  author={Miguel Espinosa and Chenhongyi Yang and Linus Ericsson and Steven McDonagh and Elliot J. Crowley},\n  journal={arXiv preprint arXiv:2507.02798},\n  year={2025},\n  primaryclass={cs.CV}\n}\n```",
    "ContentSha": "wkySuPRHWTRGorn0rwSBqyUnW5RNg9LVe0O7npcbKSs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bibtex\n@article{espinosa2025notimetotrain,\n  title={No time to train! Training-Free Reference-Based Instance Segmentation},\n  author={Miguel Espinosa and Chenhongyi Yang and Linus Ericsson and Steven McDonagh and Elliot J. Crowley},\n  journal={arXiv preprint arXiv:2507.02798},\n  year={2025},\n  primaryclass={cs.CV}\n}\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "o+TmyQ6wneV6/FQB6aUlRSjIGr2/YLJtnz5uxBgsScQ=",
        "originContent": "```bibtex",
        "translatedContent": "```bibtex"
      },
      {
        "row": 2,
        "rowsha": "s6sdKlq+FapDEBZhZUDq+G4918Cky4rpXCxSdKsVAPE=",
        "originContent": "@article{espinosa2025notimetotrain,",
        "translatedContent": "@article{espinosa2025notimetotrain,"
      },
      {
        "row": 3,
        "rowsha": "YVMU3n0Xy5WQArvvvGUYSuOTV5YLOSQWimf2/h8/U28=",
        "originContent": "  title={No time to train! Training-Free Reference-Based Instance Segmentation},",
        "translatedContent": "  title={No time to train! Training-Free Reference-Based Instance Segmentation},"
      },
      {
        "row": 4,
        "rowsha": "CZDdQLZLa+yH29yRxuWt7WnU/lp6yUeXeTWSQDA59S0=",
        "originContent": "  author={Miguel Espinosa and Chenhongyi Yang and Linus Ericsson and Steven McDonagh and Elliot J. Crowley},",
        "translatedContent": "  author={Miguel Espinosa and Chenhongyi Yang and Linus Ericsson and Steven McDonagh and Elliot J. Crowley},"
      },
      {
        "row": 5,
        "rowsha": "E+ollg8V3/MceLcrKj2hqX41PIWcH8gp6W8gP5JSdA0=",
        "originContent": "  journal={arXiv preprint arXiv:2507.02798},",
        "translatedContent": "  journal={arXiv preprint arXiv:2507.02798},"
      },
      {
        "row": 6,
        "rowsha": "Ke27aPhsKHbgkUrooY2+2yT7HqHlYsKl8lWn5w6GeCs=",
        "originContent": "  year={2025},",
        "translatedContent": "  year={2025},"
      },
      {
        "row": 7,
        "rowsha": "w1rhH08TMWo8mClA/ZgVLTg6g0mRDav0IzUlNDWAm/I=",
        "originContent": "  primaryclass={cs.CV}",
        "translatedContent": "  primaryclass={cs.CV}"
      },
      {
        "row": 8,
        "rowsha": "0Qs2qnSlm89KiBhYN/ZYr682Ru/yuxbDko0OkzXpRdI=",
        "originContent": "}",
        "translatedContent": "}"
      },
      {
        "row": 9,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  }
]