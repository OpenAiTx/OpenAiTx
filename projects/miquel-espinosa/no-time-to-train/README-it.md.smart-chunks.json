[
  {
    "Id": 1,
    "Content": "\n<div align=\"right\">\n  <details>\n    <summary >üåê Language</summary>\n    <div>\n      <div align=\"center\">\n        <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=en\">English</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ja\">Êó•Êú¨Ë™û</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ko\">ÌïúÍµ≠Ïñ¥</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=th\">‡πÑ‡∏ó‡∏¢</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fr\">Fran√ßais</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=de\">Deutsch</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=es\">Espa√±ol</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=it\">Italiano</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ru\">–†—É—Å—Å–∫–∏–π</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pt\">Portugu√™s</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=nl\">Nederlands</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pl\">Polski</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=tr\">T√ºrk√ße</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=vi\">Ti·∫øng Vi·ªát</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=id\">Bahasa Indonesia</a>\n      </div>\n    </div>\n  </details>\n</div>\n\n<div align=\"center\">\n\n# üöÄ No Time to Train!  \n### Training-Free Reference-Based Instance Segmentation  \n[![GitHub](https://img.shields.io/badge/%E2%80%8B-No%20Time%20To%20Train-black?logo=github)](https://github.com/miquel-espinosa/no-time-to-train)\n[![Website](https://img.shields.io/badge/üåê-Project%20Page-grey)](https://miquel-espinosa.github.io/no-time-to-train/)\n[![arXiv](https://img.shields.io/badge/arXiv-2507.02798-b31b1b)](https://arxiv.org/abs/2507.02798)\n\n**State-of-the-art (Papers with Code)**\n\n[**_SOTA 1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-1-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)\n\n[**_SOTA 10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-10-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)\n\n[**_SOTA 30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-30-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference)\n\n</div>\n\n---\n\n> üö® **Update (22nd July 2025):** Instructions for custom datasets have been added!\n> \n> üîî **Update (16th July 2025):** Code has been updated with instructions!\n\n---\n\n## üìã Table of Contents\n\n- [üéØ Highlights](#-highlights)\n- [üìú Abstract](#-abstract)\n- [üß† Architecture](#-architecture)\n- [üõ†Ô∏è Installation instructions](#Ô∏è-installation-instructions)\n  - [1. Clone the repository](#1-clone-the-repository)\n  - [2. Create conda environment](#2-create-conda-environment)\n  - [3. Install SAM2 and DinoV2](#3-install-sam2-and-dinov2)\n  - [4. Download datasets](#4-download-datasets)\n  - [5. Download SAM2 and DinoV2 checkpoints](#5-download-sam2-and-dinov2-checkpoints)\n- [üìä Inference code: Reproduce 30-shot SOTA results in Few-shot COCO](#-inference-code)\n  - [0. Create reference set](#0-create-reference-set)\n  - [1. Fill memory with references](#1-fill-memory-with-references)\n  - [2. Post-process memory bank](#2-post-process-memory-bank)\n  - [3. Inference on target images](#3-inference-on-target-images)\n  - [Results](#results)\n- [üîç Custom dataset](#-custom-dataset)\n  - [0. Prepare a custom dataset ‚õµüê¶](#0-prepare-a-custom-dataset)\n  - [0.1 If only bbox annotations are available](#01-if-only-bbox-annotations-are-available)\n  - [0.2 Convert coco annotations to pickle file](#02-convert-coco-annotations-to-pickle-file)\n  - [1. Fill memory with references](#1-fill-memory-with-references)\n  - [2. Post-process memory bank](#2-post-process-memory-bank)\n- [üìö Citation](#-citation)\n\n\n## üéØ Highlights\n- üí° **Training-Free**: No fine-tuning, no prompt engineering‚Äîjust a reference image.  \n- üñºÔ∏è **Reference-Based**: Segment new objects using just a few examples.  \n- üî• **SOTA Performance**: Outperforms previous training-free approaches on COCO, PASCAL VOC, and Cross-Domain FSOD.\n\n**Links:**\n- üßæ [**arXiv Paper**](https://arxiv.org/abs/2507.02798)  \n- üåê [**Project Website**](https://miquel-espinosa.github.io/no-time-to-train/)  \n- üìà [**Papers with Code**](https://paperswithcode.com/paper/no-time-to-train-training-free-reference)\n\n## üìú Abstract\n\n> The performance of image segmentation models has historically been constrained by the high cost of collecting large-scale annotated data. The Segment Anything Model (SAM) alleviates this original problem through a promptable, semantics-agnostic, segmentation paradigm and yet still requires manual visual-prompts or complex domain-dependent prompt-generation rules to process a new image. Towards reducing this new burden, our work investigates the task of object segmentation when provided with, alternatively, only a small set of reference images. Our key insight is to leverage strong semantic priors, as learned by foundation models, to identify corresponding regions between a reference and a target image. We find that correspondences enable automatic generation of instance-level segmentation masks for downstream tasks and instantiate our ideas via a multi-stage, training-free method incorporating (1) memory bank construction; (2) representation aggregation and (3) semantic-aware feature matching. Our experiments show significant improvements on segmentation metrics, leading to state-of-the-art performance on COCO FSOD (36.8% nAP), PASCAL VOC Few-Shot (71.2% nAP50) and outperforming existing training-free approaches on the Cross-Domain FSOD benchmark (22.4% nAP).\n\n![cdfsod-results-final-comic-sans-min](https://github.com/user-attachments/assets/ab302c02-c080-4042-99fc-0e181ba8abb9)\n\n",
    "ContentSha": "A3YMMKHoCWcOr6/yAWOkf3HEH5vGHKT+Ib4eEwT+79M=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<div align=\"right\">\n  <details>\n    <summary >üåê Lingua</summary>\n    <div>\n      <div align=\"center\">\n        <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=en\">English</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ja\">Êó•Êú¨Ë™û</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ko\">ÌïúÍµ≠Ïñ¥</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=th\">‡πÑ‡∏ó‡∏¢</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fr\">Fran√ßais</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=de\">Deutsch</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=es\">Espa√±ol</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=it\">Italiano</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ru\">–†—É—Å—Å–∫–∏–π</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pt\">Portugu√™s</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=nl\">Nederlands</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pl\">Polski</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=tr\">T√ºrk√ße</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=vi\">Ti·∫øng Vi·ªát</a>\n        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=id\">Bahasa Indonesia</a>\n      </div>\n    </div>\n  </details>\n</div>\n\n<div align=\"center\">\n\n# üöÄ No Time to Train!  \n### Segmentazione di istanze basata su riferimento senza addestramento  \n[![GitHub](https://img.shields.io/badge/%E2%80%8B-No%20Time%20To%20Train-black?logo=github)](https://github.com/miquel-espinosa/no-time-to-train)\n[![Website](https://img.shields.io/badge/üåê-Project%20Page-grey)](https://miquel-espinosa.github.io/no-time-to-train/)\n[![arXiv](https://img.shields.io/badge/arXiv-2507.02798-b31b1b)](https://arxiv.org/abs/2507.02798)\n\n**Stato dell‚Äôarte (Papers with Code)**\n\n[**_SOTA 1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-1-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)\n\n[**_SOTA 10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-10-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)\n\n[**_SOTA 30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-30-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference)\n\n</div>\n\n---\n\n> üö® **Aggiornamento (22 luglio 2025):** Aggiunte istruzioni per dataset personalizzati!\n> \n> üîî **Aggiornamento (16 luglio 2025):** Il codice √® stato aggiornato con le istruzioni!\n\n---\n\n## üìã Indice\n\n- [üéØ Punti salienti](#-highlights)\n- [üìú Abstract](#-abstract)\n- [üß† Architettura](#-architecture)\n- [üõ†Ô∏è Istruzioni di installazione](#Ô∏è-installation-instructions)\n  - [1. Clonare il repository](#1-clone-the-repository)\n  - [2. Creare un ambiente conda](#2-create-conda-environment)\n  - [3. Installare SAM2 e DinoV2](#3-install-sam2-and-dinov2)\n  - [4. Scaricare i dataset](#4-download-datasets)\n  - [5. Scaricare i checkpoint di SAM2 e DinoV2](#5-download-sam2-and-dinov2-checkpoints)\n- [üìä Codice di inferenza: Riproduci risultati SOTA 30-shot in Few-shot COCO](#-inference-code)\n  - [0. Crea set di riferimento](#0-create-reference-set)\n  - [1. Riempire la memoria con i riferimenti](#1-fill-memory-with-references)\n  - [2. Post-elaborazione della banca di memoria](#2-post-process-memory-bank)\n  - [3. Inferenza sulle immagini target](#3-inference-on-target-images)\n  - [Risultati](#results)\n- [üîç Dataset personalizzato](#-custom-dataset)\n  - [0. Prepara un dataset personalizzato ‚õµüê¶](#0-prepare-a-custom-dataset)\n  - [0.1 Se sono disponibili solo annotazioni bbox](#01-if-only-bbox-annotations-are-available)\n  - [0.2 Converti le annotazioni coco in file pickle](#02-convert-coco-annotations-to-pickle-file)\n  - [1. Riempire la memoria con i riferimenti](#1-fill-memory-with-references)\n  - [2. Post-elaborazione della banca di memoria](#2-post-process-memory-bank)\n- [üìö Citazione](#-citation)\n\n\n## üéØ Punti salienti\n- üí° **Senza addestramento**: Nessun fine-tuning, nessun prompt engineering‚Äîsolo un‚Äôimmagine di riferimento.  \n- üñºÔ∏è **Basato su riferimento**: Segmenta nuovi oggetti usando solo pochi esempi.  \n- üî• **Prestazioni SOTA**: Supera i precedenti approcci senza addestramento su COCO, PASCAL VOC e Cross-Domain FSOD.\n\n**Link:**\n- üßæ [**Articolo arXiv**](https://arxiv.org/abs/2507.02798)  \n- üåê [**Sito del progetto**](https://miquel-espinosa.github.io/no-time-to-train/)  \n- üìà [**Papers with Code**](https://paperswithcode.com/paper/no-time-to-train-training-free-reference)\n\n## üìú Abstract\n\n> Le prestazioni dei modelli di segmentazione delle immagini sono state storicamente limitate dall‚Äôalto costo della raccolta di dati annotati su larga scala. Il Segment Anything Model (SAM) allevia questo problema originale tramite un paradigma di segmentazione promptabile e semanticamente agnostico, ma richiede ancora prompt visivi manuali o regole complesse di generazione prompt dipendenti dal dominio per elaborare una nuova immagine. Per ridurre questo nuovo onere, il nostro lavoro indaga il compito della segmentazione di oggetti fornendo, in alternativa, solo un piccolo set di immagini di riferimento. La nostra intuizione chiave √® sfruttare forti priors semantici, appresi dai foundation model, per identificare le regioni corrispondenti tra un‚Äôimmagine di riferimento e una target. Abbiamo scoperto che le corrispondenze permettono la generazione automatica di maschere di segmentazione a livello di istanza per task a valle, e concretizziamo le nostre idee tramite un metodo multistadio, senza addestramento, che incorpora (1) costruzione di una banca di memoria; (2) aggregazione delle rappresentazioni e (3) feature matching semanticamente consapevole. I nostri esperimenti mostrano notevoli miglioramenti nelle metriche di segmentazione, portando a prestazioni state-of-the-art su COCO FSOD (36,8% nAP), PASCAL VOC Few-Shot (71,2% nAP50) e superando gli approcci esistenti senza addestramento nel benchmark Cross-Domain FSOD (22,4% nAP).\n\n![cdfsod-results-final-comic-sans-min](https://github.com/user-attachments/assets/ab302c02-c080-4042-99fc-0e181ba8abb9)\n\n</translate-content>\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<div align=\"right\">"
      },
      {
        "row": 2,
        "rowsha": "cWgam+tnnXudu7i74+ahMEGk/A9dQS+EwWLAIfi3dHk=",
        "originContent": "<div align=\"right\">",
        "translatedContent": "  <details>"
      },
      {
        "row": 3,
        "rowsha": "orOcu5ARna/hb3RUkj6dBI8pHTM3WHeTvby17l5E0h0=",
        "originContent": "  <details>",
        "translatedContent": "    <summary >üåê Lingua</summary>"
      },
      {
        "row": 4,
        "rowsha": "TtgkLzblnvP0q9aAIVXt6s2LczXjy5k+QvHKcU0/5Ms=",
        "originContent": "    <summary >üåê Language</summary>",
        "translatedContent": "    <div>"
      },
      {
        "row": 5,
        "rowsha": "fZtk4rPTAJEEslnbhSVkHEcPlsctYSzAV7CDPL3rJmA=",
        "originContent": "    <div>",
        "translatedContent": "      <div align=\"center\">"
      },
      {
        "row": 6,
        "rowsha": "9KQxOeJSigvTmGWO+mtnl8kZY9zQfueoy8sk4lYm09Q=",
        "originContent": "      <div align=\"center\">",
        "translatedContent": "        <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=en\">English</a>"
      },
      {
        "row": 7,
        "rowsha": "G45/LutNWZI9vxtXslbbbHwCOULgzFXWYAhu/93l4zI=",
        "originContent": "        <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=en\">English</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a>"
      },
      {
        "row": 8,
        "rowsha": "Ats18u3YZRckavncoTKGYRiwpbiHfSctTBbIhjCGos0=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-CN\">ÁÆÄ‰Ωì‰∏≠Êñá</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a>"
      },
      {
        "row": 9,
        "rowsha": "lEz2ylDdTMdB9rQtSXgGSpKBCBtWlYkWIREBeO0lors=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=zh-TW\">ÁπÅÈ´î‰∏≠Êñá</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ja\">Êó•Êú¨Ë™û</a>"
      },
      {
        "row": 10,
        "rowsha": "97L3ibJEnPIvjf8+YiCmr3atMgUFb6w4O/wC2/BA6/8=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ja\">Êó•Êú¨Ë™û</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ko\">ÌïúÍµ≠Ïñ¥</a>"
      },
      {
        "row": 11,
        "rowsha": "3oFj7Mkpu+D6QswdcT3vKHKawPNXUF6RcbCVg2PWbsQ=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ko\">ÌïúÍµ≠Ïñ¥</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a>"
      },
      {
        "row": 12,
        "rowsha": "ZF8CbRf3KWHXQPzg4G6ekXVvORqsWzEevfTrObmVBmE=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=hi\">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=th\">‡πÑ‡∏ó‡∏¢</a>"
      },
      {
        "row": 13,
        "rowsha": "ZtyN4+DuHy9qVSeUKbBY2nye7JCV1FH5IIAYJ8iuxVA=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=th\">‡πÑ‡∏ó‡∏¢</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fr\">Fran√ßais</a>"
      },
      {
        "row": 14,
        "rowsha": "wtzRxSgQuRAkU/Q1AiRlvOKvp5J8Dgi8+8ZAkYRT1Mk=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fr\">Fran√ßais</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=de\">Deutsch</a>"
      },
      {
        "row": 15,
        "rowsha": "5ok7LiijP07K5Z8qLgSjMWA+zgKpfufQnFwisBo9DLA=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=de\">Deutsch</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=es\">Espa√±ol</a>"
      },
      {
        "row": 16,
        "rowsha": "HvcD3nQvNLh4xFZRvMx9b+Bc5ka6E8sJLqrMtv6u4G8=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=es\">Espa√±ol</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=it\">Italiano</a>"
      },
      {
        "row": 17,
        "rowsha": "r9VPV8xQaIWBEvGEal9OvJLNSS4zTgMiMbGN26yYZvI=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=it\">Italiano</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ru\">–†—É—Å—Å–∫–∏–π</a>"
      },
      {
        "row": 18,
        "rowsha": "Xy5Fhh1idYriSI/ExdPGiHIMK0rm7aPt0ZcqU6mVMlU=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ru\">–†—É—Å—Å–∫–∏–π</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pt\">Portugu√™s</a>"
      },
      {
        "row": 19,
        "rowsha": "dbSyNaa/57ty5bbGG7pZQhxzdFEK8F/TaNhnyeOGOR0=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pt\">Portugu√™s</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=nl\">Nederlands</a>"
      },
      {
        "row": 20,
        "rowsha": "kjU5Io0pZZRzjb5adc0mC1Suop9TAc8ftGlC3R7JYoI=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=nl\">Nederlands</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pl\">Polski</a>"
      },
      {
        "row": 21,
        "rowsha": "xowAjymdhYslq9cLyCu6eUUTJCiVR2V1KJZMTFRR5+o=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=pl\">Polski</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a>"
      },
      {
        "row": 22,
        "rowsha": "41MPPnS6gKxjrGVAF9Fkmpeu0lfZ/zjCHi/HKf9BCW4=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=ar\">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a>"
      },
      {
        "row": 23,
        "rowsha": "trPBM6f6uyK0oqDU92+2pGrjWXOlpBmlm34RAvqknvY=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=fa\">ŸÅÿßÿ±ÿ≥€å</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=tr\">T√ºrk√ße</a>"
      },
      {
        "row": 24,
        "rowsha": "I4vaUyHHnPcJ/do6ED/Bs8dDKau8rbGs7Lu4MlcK8Ho=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=tr\">T√ºrk√ße</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=vi\">Ti·∫øng Vi·ªát</a>"
      },
      {
        "row": 25,
        "rowsha": "KuIxc2kpouXB+JvjrQsu7EjevEWN1zf7o+8wmwox9L0=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=vi\">Ti·∫øng Vi·ªát</a>",
        "translatedContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=id\">Bahasa Indonesia</a>"
      },
      {
        "row": 26,
        "rowsha": "YXMw4LVKVlCbi+Zhb3k7txrbP2uu14qlFi++jxrMsHM=",
        "originContent": "        | <a href=\"https://openaitx.github.io/view.html?user=miquel-espinosa&project=no-time-to-train&lang=id\">Bahasa Indonesia</a>",
        "translatedContent": "      </div>"
      },
      {
        "row": 27,
        "rowsha": "0OM5wNEm0TO56MEBvQzL7AUZM7/3OpgIeqRf2zFre3Q=",
        "originContent": "      </div>",
        "translatedContent": "    </div>"
      },
      {
        "row": 28,
        "rowsha": "fcjTfY+fs8YnY5slBs1sZvWPAqEQR7tzaBDO54skkGQ=",
        "originContent": "    </div>",
        "translatedContent": "  </details>"
      },
      {
        "row": 29,
        "rowsha": "+fQNH2ldI7UM/rqRscP3hUSWAmw1HvQ2wEKDN8JagT0=",
        "originContent": "  </details>",
        "translatedContent": "</div>"
      },
      {
        "row": 30,
        "rowsha": "qsMmUbEPVnxGG5tPJV1vsfpoWbU2jYvZpRr5IKshzyM=",
        "originContent": "</div>",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<div align=\"center\">"
      },
      {
        "row": 32,
        "rowsha": "94MDjHJY1ZLwHNTLIEUIfk7TMc9cq1L/1FmwhqBTe/k=",
        "originContent": "<div align=\"center\">",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "# üöÄ No Time to Train!  "
      },
      {
        "row": 34,
        "rowsha": "M2z5PpMcecoVKOuL1SHlc+Nemsj5RhARR5H/VCXUbU4=",
        "originContent": "# üöÄ No Time to Train!  ",
        "translatedContent": "### Segmentazione di istanze basata su riferimento senza addestramento  "
      },
      {
        "row": 35,
        "rowsha": "sBABAz4Jw3ska9lsdsi3rPgLmZF2UtZveFVXqUbPW4o=",
        "originContent": "### Training-Free Reference-Based Instance Segmentation  ",
        "translatedContent": "[![GitHub](https://img.shields.io/badge/%E2%80%8B-No%20Time%20To%20Train-black?logo=github)](https://github.com/miquel-espinosa/no-time-to-train)"
      },
      {
        "row": 36,
        "rowsha": "JtzwGnZRrNQ5I7E9S5GXrFkY4/D5xExLcZYAwT19D64=",
        "originContent": "[![GitHub](https://img.shields.io/badge/%E2%80%8B-No%20Time%20To%20Train-black?logo=github)](https://github.com/miquel-espinosa/no-time-to-train)",
        "translatedContent": "[![Website](https://img.shields.io/badge/üåê-Project%20Page-grey)](https://miquel-espinosa.github.io/no-time-to-train/)"
      },
      {
        "row": 37,
        "rowsha": "CRyX9LxzyIoLmrrOb7mTcL54XM1hKOGqkgq3VKhx5cE=",
        "originContent": "[![Website](https://img.shields.io/badge/üåê-Project%20Page-grey)](https://miquel-espinosa.github.io/no-time-to-train/)",
        "translatedContent": "[![arXiv](https://img.shields.io/badge/arXiv-2507.02798-b31b1b)](https://arxiv.org/abs/2507.02798)"
      },
      {
        "row": 38,
        "rowsha": "dt6HOwBuvdMzY99NMmrvjF5F1UqOV/FCSs2Eonn3jFg=",
        "originContent": "[![arXiv](https://img.shields.io/badge/arXiv-2507.02798-b31b1b)](https://arxiv.org/abs/2507.02798)",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "**Stato dell‚Äôarte (Papers with Code)**"
      },
      {
        "row": 40,
        "rowsha": "rSA9HSpS5rcIOZmSZRcPQKvvg2GUNxqsAdOWtJYdOHs=",
        "originContent": "**State-of-the-art (Papers with Code)**",
        "translatedContent": ""
      },
      {
        "row": 41,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "[**_SOTA 1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-1-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)"
      },
      {
        "row": 42,
        "rowsha": "QJajRnLgXHtAu6TePeHAEPhmcS2Dzpw0NwKyPUogA2M=",
        "originContent": "[**_SOTA 1-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-1-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-1-shot?p=no-time-to-train-training-free-reference)",
        "translatedContent": ""
      },
      {
        "row": 43,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "[**_SOTA 10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-10-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)"
      },
      {
        "row": 44,
        "rowsha": "5Vzq06fD98ehB9nIJb70JMck7pDlYhuPjdq4pjWemTg=",
        "originContent": "[**_SOTA 10-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-10-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-10-shot?p=no-time-to-train-training-free-reference)",
        "translatedContent": ""
      },
      {
        "row": 45,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "[**_SOTA 30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-30-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference)"
      },
      {
        "row": 46,
        "rowsha": "fl5OuPF1t/corg6T4a1RDtYrNtUY7pmOPdcXzJhS7Ek=",
        "originContent": "[**_SOTA 30-shot_**](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference) | [![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/no-time-to-train-training-free-reference/few-shot-object-detection-on-ms-coco-30-shot)](https://paperswithcode.com/sota/few-shot-object-detection-on-ms-coco-30-shot?p=no-time-to-train-training-free-reference)",
        "translatedContent": ""
      },
      {
        "row": 47,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "</div>"
      },
      {
        "row": 48,
        "rowsha": "qsMmUbEPVnxGG5tPJV1vsfpoWbU2jYvZpRr5IKshzyM=",
        "originContent": "</div>",
        "translatedContent": ""
      },
      {
        "row": 49,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "---"
      },
      {
        "row": 50,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": ""
      },
      {
        "row": 51,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "> üö® **Aggiornamento (22 luglio 2025):** Aggiunte istruzioni per dataset personalizzati!"
      },
      {
        "row": 52,
        "rowsha": "B69jZWG+7Bcf3XwTlCrLDq7zJ6R0P5Lb3miM6RyrST8=",
        "originContent": "> üö® **Update (22nd July 2025):** Instructions for custom datasets have been added!",
        "translatedContent": "> "
      },
      {
        "row": 53,
        "rowsha": "7E+OPR98r724bpCLatg+QHrDaps++r2OJLVtgCKL5Ck=",
        "originContent": "> ",
        "translatedContent": "> üîî **Aggiornamento (16 luglio 2025):** Il codice √® stato aggiornato con le istruzioni!"
      },
      {
        "row": 54,
        "rowsha": "NVfWm1HSMwF2EdXfgCXJYKpUZ1HZOJsRMEUiFhVdgqc=",
        "originContent": "> üîî **Update (16th July 2025):** Code has been updated with instructions!",
        "translatedContent": ""
      },
      {
        "row": 55,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "---"
      },
      {
        "row": 56,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": ""
      },
      {
        "row": 57,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## üìã Indice"
      },
      {
        "row": 58,
        "rowsha": "gI/1I87HHg3xh0//UJSFC6ZnF4rvkzKNqsRrROy4OT4=",
        "originContent": "## üìã Table of Contents",
        "translatedContent": ""
      },
      {
        "row": 59,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "- [üéØ Punti salienti](#-highlights)"
      },
      {
        "row": 60,
        "rowsha": "nNQUAJIz1LHAKaPCqpOwlWw2V1U6+cxSwWn4SP47dYU=",
        "originContent": "- [üéØ Highlights](#-highlights)",
        "translatedContent": "- [üìú Abstract](#-abstract)"
      },
      {
        "row": 61,
        "rowsha": "Yu2Tht6jyrgb81Dv2Lb3Od+nx0nyGk4T4cj16urKV2U=",
        "originContent": "- [üìú Abstract](#-abstract)",
        "translatedContent": "- [üß† Architettura](#-architecture)"
      },
      {
        "row": 62,
        "rowsha": "QlUWr+r6i1bCNXq6zWF9xq7AP6VlaFB+55fzw1uHGh4=",
        "originContent": "- [üß† Architecture](#-architecture)",
        "translatedContent": "- [üõ†Ô∏è Istruzioni di installazione](#Ô∏è-installation-instructions)"
      },
      {
        "row": 63,
        "rowsha": "LvvjM2oWVjYs2n37JdP4KxJEfjrmlXfMHEYRmg3enOQ=",
        "originContent": "- [üõ†Ô∏è Installation instructions](#Ô∏è-installation-instructions)",
        "translatedContent": "  - [1. Clonare il repository](#1-clone-the-repository)"
      },
      {
        "row": 64,
        "rowsha": "/PgPyQxwaS0cIQHgVFkC3ij55sWJZfYd1yCTh2nzruo=",
        "originContent": "  - [1. Clone the repository](#1-clone-the-repository)",
        "translatedContent": "  - [2. Creare un ambiente conda](#2-create-conda-environment)"
      },
      {
        "row": 65,
        "rowsha": "8sUHJDRIkb9dDdybJg2zcT82y2SDBjUvluSFGb9lVBM=",
        "originContent": "  - [2. Create conda environment](#2-create-conda-environment)",
        "translatedContent": "  - [3. Installare SAM2 e DinoV2](#3-install-sam2-and-dinov2)"
      },
      {
        "row": 66,
        "rowsha": "UVdxTXFnRSDBzVF4T2aUxvPHopcFMYmHxQaW1H6OPgE=",
        "originContent": "  - [3. Install SAM2 and DinoV2](#3-install-sam2-and-dinov2)",
        "translatedContent": "  - [4. Scaricare i dataset](#4-download-datasets)"
      },
      {
        "row": 67,
        "rowsha": "vmGLfIt0mS9Q/YAti3rKk4FenFiuiawcJga8eA1HvOo=",
        "originContent": "  - [4. Download datasets](#4-download-datasets)",
        "translatedContent": "  - [5. Scaricare i checkpoint di SAM2 e DinoV2](#5-download-sam2-and-dinov2-checkpoints)"
      },
      {
        "row": 68,
        "rowsha": "JMFveg/CL8TprnWNKkURn6blL5NhMU16pmzjwIauENc=",
        "originContent": "  - [5. Download SAM2 and DinoV2 checkpoints](#5-download-sam2-and-dinov2-checkpoints)",
        "translatedContent": "- [üìä Codice di inferenza: Riproduci risultati SOTA 30-shot in Few-shot COCO](#-inference-code)"
      },
      {
        "row": 69,
        "rowsha": "4twIP/tovN+tEN+KOehWNX1x6ADAZktZhaU8S6q3qPk=",
        "originContent": "- [üìä Inference code: Reproduce 30-shot SOTA results in Few-shot COCO](#-inference-code)",
        "translatedContent": "  - [0. Crea set di riferimento](#0-create-reference-set)"
      },
      {
        "row": 70,
        "rowsha": "XAaZ2BUnk0iPaGrcahhfTfiRzOiOmWVMhXy0yS1URIo=",
        "originContent": "  - [0. Create reference set](#0-create-reference-set)",
        "translatedContent": "  - [1. Riempire la memoria con i riferimenti](#1-fill-memory-with-references)"
      },
      {
        "row": 71,
        "rowsha": "CtFWOMU1Fc9CVZLu2Rzmu0KND5cnswQEsU5Mp7Onhvc=",
        "originContent": "  - [1. Fill memory with references](#1-fill-memory-with-references)",
        "translatedContent": "  - [2. Post-elaborazione della banca di memoria](#2-post-process-memory-bank)"
      },
      {
        "row": 72,
        "rowsha": "EJbJqD4ueSk6fQ0G3e/0zkWNB+NbmAqL7F5GXdil5cM=",
        "originContent": "  - [2. Post-process memory bank](#2-post-process-memory-bank)",
        "translatedContent": "  - [3. Inferenza sulle immagini target](#3-inference-on-target-images)"
      },
      {
        "row": 73,
        "rowsha": "1oE+QeEAJ0TNP+C2O/r0QRzWRsbxz8Blj9YRkbZZZus=",
        "originContent": "  - [3. Inference on target images](#3-inference-on-target-images)",
        "translatedContent": "  - [Risultati](#results)"
      },
      {
        "row": 74,
        "rowsha": "0vQANuql7yEE1pWdHwSmSnQDu+2Y61IcAuCgVVNt9wU=",
        "originContent": "  - [Results](#results)",
        "translatedContent": "- [üîç Dataset personalizzato](#-custom-dataset)"
      },
      {
        "row": 75,
        "rowsha": "5SOCYMb6Mc7UFPt7fW5/7Lk/oGmDIXGNMnIaAiyHGbA=",
        "originContent": "- [üîç Custom dataset](#-custom-dataset)",
        "translatedContent": "  - [0. Prepara un dataset personalizzato ‚õµüê¶](#0-prepare-a-custom-dataset)"
      },
      {
        "row": 76,
        "rowsha": "GMbLjwNZu2OPam7WwwgFxNIlZaCAoQrvEKgT5bfr4wo=",
        "originContent": "  - [0. Prepare a custom dataset ‚õµüê¶](#0-prepare-a-custom-dataset)",
        "translatedContent": "  - [0.1 Se sono disponibili solo annotazioni bbox](#01-if-only-bbox-annotations-are-available)"
      },
      {
        "row": 77,
        "rowsha": "pahrSq5eC+ZtBvhJBCOnwVsXCl3r6dbg5VVcHR60KgA=",
        "originContent": "  - [0.1 If only bbox annotations are available](#01-if-only-bbox-annotations-are-available)",
        "translatedContent": "  - [0.2 Converti le annotazioni coco in file pickle](#02-convert-coco-annotations-to-pickle-file)"
      },
      {
        "row": 78,
        "rowsha": "EhEJKG9MX3xsHHBuay+P9xPmW+ZFKMXemPkZ3zZftRE=",
        "originContent": "  - [0.2 Convert coco annotations to pickle file](#02-convert-coco-annotations-to-pickle-file)",
        "translatedContent": "  - [1. Riempire la memoria con i riferimenti](#1-fill-memory-with-references)"
      },
      {
        "row": 79,
        "rowsha": "CtFWOMU1Fc9CVZLu2Rzmu0KND5cnswQEsU5Mp7Onhvc=",
        "originContent": "  - [1. Fill memory with references](#1-fill-memory-with-references)",
        "translatedContent": "  - [2. Post-elaborazione della banca di memoria](#2-post-process-memory-bank)"
      },
      {
        "row": 80,
        "rowsha": "EJbJqD4ueSk6fQ0G3e/0zkWNB+NbmAqL7F5GXdil5cM=",
        "originContent": "  - [2. Post-process memory bank](#2-post-process-memory-bank)",
        "translatedContent": "- [üìö Citazione](#-citation)"
      },
      {
        "row": 81,
        "rowsha": "agiJTqQBkN7iJs7zNIHPQ5NaqAmNICzYGlCqSha4QuI=",
        "originContent": "- [üìö Citation](#-citation)",
        "translatedContent": ""
      },
      {
        "row": 82,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 83,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## üéØ Punti salienti"
      },
      {
        "row": 84,
        "rowsha": "kIeGJFTQ5JJc/jXqjQ9PAg5wubcgfjTL2po5UNDrLQ8=",
        "originContent": "## üéØ Highlights",
        "translatedContent": "- üí° **Senza addestramento**: Nessun fine-tuning, nessun prompt engineering‚Äîsolo un‚Äôimmagine di riferimento.  "
      },
      {
        "row": 85,
        "rowsha": "4c0+fbJNN24hIJySSKght3OZNjxykoTxkukVFgkNZok=",
        "originContent": "- üí° **Training-Free**: No fine-tuning, no prompt engineering‚Äîjust a reference image.  ",
        "translatedContent": "- üñºÔ∏è **Basato su riferimento**: Segmenta nuovi oggetti usando solo pochi esempi.  "
      },
      {
        "row": 86,
        "rowsha": "177g7I1Hv/8E1qW/GKY8ESZKs1ERKa8lH2+eSJWPfys=",
        "originContent": "- üñºÔ∏è **Reference-Based**: Segment new objects using just a few examples.  ",
        "translatedContent": "- üî• **Prestazioni SOTA**: Supera i precedenti approcci senza addestramento su COCO, PASCAL VOC e Cross-Domain FSOD."
      },
      {
        "row": 87,
        "rowsha": "hJVC6fdp5vmCdow9OaINDAoUeIQFo+H4J7X39/laLuQ=",
        "originContent": "- üî• **SOTA Performance**: Outperforms previous training-free approaches on COCO, PASCAL VOC, and Cross-Domain FSOD.",
        "translatedContent": ""
      },
      {
        "row": 88,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "**Link:**"
      },
      {
        "row": 89,
        "rowsha": "5t7uSO5Wec1VT7vt46wJD3xShwKEgg8Z6sc6sb/A3n4=",
        "originContent": "**Links:**",
        "translatedContent": "- üßæ [**Articolo arXiv**](https://arxiv.org/abs/2507.02798)  "
      },
      {
        "row": 90,
        "rowsha": "mSZshukl7MsJrVvQ4IJvfrxptw7xbgh/UwGaEwRqCFk=",
        "originContent": "- üßæ [**arXiv Paper**](https://arxiv.org/abs/2507.02798)  ",
        "translatedContent": "- üåê [**Sito del progetto**](https://miquel-espinosa.github.io/no-time-to-train/)  "
      },
      {
        "row": 91,
        "rowsha": "aRS755BdZ7JdxnaQ39257Pg2fZoyNBuqId5PgA6rebk=",
        "originContent": "- üåê [**Project Website**](https://miquel-espinosa.github.io/no-time-to-train/)  ",
        "translatedContent": "- üìà [**Papers with Code**](https://paperswithcode.com/paper/no-time-to-train-training-free-reference)"
      },
      {
        "row": 92,
        "rowsha": "W0Ak9nAkjF7nVsfJUEtJvM6CVJHI9t7YMjCvBzmXZzo=",
        "originContent": "- üìà [**Papers with Code**](https://paperswithcode.com/paper/no-time-to-train-training-free-reference)",
        "translatedContent": ""
      },
      {
        "row": 93,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## üìú Abstract"
      },
      {
        "row": 94,
        "rowsha": "AdIRiroevVLawnTYJDBh2L1x5u8N8rbImLDszk/n52Q=",
        "originContent": "## üìú Abstract",
        "translatedContent": ""
      },
      {
        "row": 95,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "> Le prestazioni dei modelli di segmentazione delle immagini sono state storicamente limitate dall‚Äôalto costo della raccolta di dati annotati su larga scala. Il Segment Anything Model (SAM) allevia questo problema originale tramite un paradigma di segmentazione promptabile e semanticamente agnostico, ma richiede ancora prompt visivi manuali o regole complesse di generazione prompt dipendenti dal dominio per elaborare una nuova immagine. Per ridurre questo nuovo onere, il nostro lavoro indaga il compito della segmentazione di oggetti fornendo, in alternativa, solo un piccolo set di immagini di riferimento. La nostra intuizione chiave √® sfruttare forti priors semantici, appresi dai foundation model, per identificare le regioni corrispondenti tra un‚Äôimmagine di riferimento e una target. Abbiamo scoperto che le corrispondenze permettono la generazione automatica di maschere di segmentazione a livello di istanza per task a valle, e concretizziamo le nostre idee tramite un metodo multistadio, senza addestramento, che incorpora (1) costruzione di una banca di memoria; (2) aggregazione delle rappresentazioni e (3) feature matching semanticamente consapevole. I nostri esperimenti mostrano notevoli miglioramenti nelle metriche di segmentazione, portando a prestazioni state-of-the-art su COCO FSOD (36,8% nAP), PASCAL VOC Few-Shot (71,2% nAP50) e superando gli approcci esistenti senza addestramento nel benchmark Cross-Domain FSOD (22,4% nAP)."
      },
      {
        "row": 96,
        "rowsha": "f62KYkH46xSV0RKRpAlERSF/nhSETk2RE3WyAIz5gDw=",
        "originContent": "> The performance of image segmentation models has historically been constrained by the high cost of collecting large-scale annotated data. The Segment Anything Model (SAM) alleviates this original problem through a promptable, semantics-agnostic, segmentation paradigm and yet still requires manual visual-prompts or complex domain-dependent prompt-generation rules to process a new image. Towards reducing this new burden, our work investigates the task of object segmentation when provided with, alternatively, only a small set of reference images. Our key insight is to leverage strong semantic priors, as learned by foundation models, to identify corresponding regions between a reference and a target image. We find that correspondences enable automatic generation of instance-level segmentation masks for downstream tasks and instantiate our ideas via a multi-stage, training-free method incorporating (1) memory bank construction; (2) representation aggregation and (3) semantic-aware feature matching. Our experiments show significant improvements on segmentation metrics, leading to state-of-the-art performance on COCO FSOD (36.8% nAP), PASCAL VOC Few-Shot (71.2% nAP50) and outperforming existing training-free approaches on the Cross-Domain FSOD benchmark (22.4% nAP).",
        "translatedContent": ""
      },
      {
        "row": 97,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "![cdfsod-results-final-comic-sans-min](https://github.com/user-attachments/assets/ab302c02-c080-4042-99fc-0e181ba8abb9)"
      },
      {
        "row": 98,
        "rowsha": "2cFS6Ni4+vEPr5/fIkHNwVjmXSVHJRpd3EN6igllMqk=",
        "originContent": "![cdfsod-results-final-comic-sans-min](https://github.com/user-attachments/assets/ab302c02-c080-4042-99fc-0e181ba8abb9)",
        "translatedContent": ""
      },
      {
        "row": 99,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "</translate-content>"
      },
      {
        "row": 100,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "## üß† Architecture\n\n![training-free-architecture-comic-sans-min](https://github.com/user-attachments/assets/d84dd83a-505e-45a0-8ce3-98e1838017f9)\n\n\n## üõ†Ô∏è Installation instructions\n\n### 1. Clone the repository\n",
    "ContentSha": "rSaJgum9yNlMQc968MOltRnPxRgzf4eUKpG9TYMCv8s=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## üß† Architettura\n\n![training-free-architecture-comic-sans-min](https://github.com/user-attachments/assets/d84dd83a-505e-45a0-8ce3-98e1838017f9)\n\n\n## üõ†Ô∏è Istruzioni di installazione\n\n### 1. Clona il repository\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "9ZwHLgVs/DMTWN3sszXIqi/Yn0AjwM/4BUudMPNrZrc=",
        "originContent": "## üß† Architecture",
        "translatedContent": "## üß† Architettura"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "9yA6/g3QCBAgAR0tQeKBpaJwjEB0LHNGgYaTP8Odie8=",
        "originContent": "![training-free-architecture-comic-sans-min](https://github.com/user-attachments/assets/d84dd83a-505e-45a0-8ce3-98e1838017f9)",
        "translatedContent": "![training-free-architecture-comic-sans-min](https://github.com/user-attachments/assets/d84dd83a-505e-45a0-8ce3-98e1838017f9)"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "waJ0INSC829ifiOOIlQMyceEvWq7ygQ1pzD67dJK+dU=",
        "originContent": "## üõ†Ô∏è Installation instructions",
        "translatedContent": "## üõ†Ô∏è Istruzioni di installazione"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "+xj0fCZBnnk1GY2rxUGAtpalIeN4JdfjLYAPNPmqklw=",
        "originContent": "### 1. Clone the repository",
        "translatedContent": "### 1. Clona il repository"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 3,
    "Content": "```bash\ngit clone https://github.com/miquel-espinosa/no-time-to-train.git\ncd no-time-to-train\n```",
    "ContentSha": "FqsX96SwjKeMnD8rrDrd4pfjW32n5SRf0jXIvB4WHz4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ngit clone https://github.com/miquel-espinosa/no-time-to-train.git\ncd no-time-to-train\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 4,
    "Content": "\n### 2. Create conda environment\n\nWe will create a conda environment with the required packages.",
    "ContentSha": "xkwDa/DvfDApk69cNg5ORagN7Utfcos+yCxRpQNn6gk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 2. Crea l'ambiente conda\n\nCreeremo un ambiente conda con i pacchetti necessari.\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 5,
    "Content": "```bash\nconda env create -f environment.yml\nconda activate no-time-to-train\n```",
    "ContentSha": "W1AlselK7qAC1MpunsXhTPA8MG+kwjbpodKBkImFaio=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nconda env create -f environment.yml\nconda activate no-time-to-train\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 6,
    "Content": "\n### 3. Install SAM2 and DinoV2\n\nWe will install SAM2 and DinoV2 from source.",
    "ContentSha": "qhWNaaTVSpemTiKekSRF2dWJYxX636VdhL+lPiso28M=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 3. Installa SAM2 e DinoV2\n\nInstalleremo SAM2 e DinoV2 dal sorgente.\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 7,
    "Content": "```bash\npip install -e .\ncd dinov2\npip install -e .\ncd ..\n```",
    "ContentSha": "dMsjJwa9nz+HHMLijmYZdlLh6FmDBGmNlHxywBzbEg4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npip install -e .\ncd dinov2\npip install -e .\ncd ..\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 8,
    "Content": "\n### 4. Download datasets\n\nPlease download COCO dataset and place it in `data/coco`\n\n### 5. Download SAM2 and DinoV2 checkpoints\n\nWe will download the exact SAM2 checkpoints used in the paper.\n(Note, however, that SAM2.1 checkpoints are already available and might perform better.)\n",
    "ContentSha": "LTXcwC9KGMiPIiBLXtQVF6Wdi9d19gVIUBX6F+tGTqE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 4. Scarica i dataset\n\nPer favore scarica il dataset COCO e posizionalo in `data/coco`\n\n### 5. Scarica i checkpoint di SAM2 e DinoV2\n\nScaricheremo gli stessi checkpoint SAM2 utilizzati nell'articolo.\n(Tieni presente, tuttavia, che i checkpoint SAM2.1 sono gi√† disponibili e potrebbero offrire prestazioni migliori.)\n\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 9,
    "Content": "```bash\nmkdir -p checkpoints/dinov2\ncd checkpoints\nwget https://dl.fbaipublicfiles.com/segment_anything_2/072824/sam2_hiera_large.pt\ncd dinov2\nwget https://dl.fbaipublicfiles.com/dinov2/dinov2_vitl14/dinov2_vitl14_pretrain.pth\ncd ../..\n```",
    "ContentSha": "Q/LddAGtfunblX1eLTx7t3Vs+C74LtCdgP/HQ3gIJgk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nmkdir -p checkpoints/dinov2\ncd checkpoints\nwget https://dl.fbaipublicfiles.com/segment_anything_2/072824/sam2_hiera_large.pt\ncd dinov2\nwget https://dl.fbaipublicfiles.com/dinov2/dinov2_vitl14/dinov2_vitl14_pretrain.pth\ncd ../..\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 10,
    "Content": "\n\n## üìä Inference code\n\n‚ö†Ô∏è Disclaimer: This is research code ‚Äî expect a bit of chaos!\n\n### Reproducing 30-shot SOTA results in Few-shot COCO\n\nDefine useful variables and create a folder for results:\n",
    "ContentSha": "q8hVlrVr+ps2xB/JxM3tKtF/KxoLX4PepxohltYehb8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## üìä Codice di inferenza\n\n‚ö†Ô∏è Disclaimer: Questo √® codice di ricerca ‚Äî aspettatevi un po' di caos!\n\n### Riproduzione dei risultati SOTA a 30-shot su Few-shot COCO\n\nDefinire variabili utili e creare una cartella per i risultati:\n\n\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 11,
    "Content": "```bash\nCONFIG=./no_time_to_train/new_exps/coco_fewshot_10shot_Sam2L.yaml\nCLASS_SPLIT=\"few_shot_classes\"\nRESULTS_DIR=work_dirs/few_shot_results\nSHOTS=30\nSEED=33\nGPUS=4\n\nmkdir -p $RESULTS_DIR\nFILENAME=few_shot_${SHOTS}shot_seed${SEED}.pkl\n```",
    "ContentSha": "R03PMGcFnYnvttqgfztGnWdoyJeXMyxFUN7tyR4kpy8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nCONFIG=./no_time_to_train/new_exps/coco_fewshot_10shot_Sam2L.yaml\nCLASS_SPLIT=\"few_shot_classes\"\nRESULTS_DIR=work_dirs/few_shot_results\nSHOTS=30\nSEED=33\nGPUS=4\n\nmkdir -p $RESULTS_DIR\nFILENAME=few_shot_${SHOTS}shot_seed${SEED}.pkl\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "WKgTzRP/M6czfLtM2nLe2vcx3/Z/n+7I22wcqUq3mF8=",
        "originContent": "CONFIG=./no_time_to_train/new_exps/coco_fewshot_10shot_Sam2L.yaml",
        "translatedContent": "CONFIG=./no_time_to_train/new_exps/coco_fewshot_10shot_Sam2L.yaml"
      },
      {
        "row": 3,
        "rowsha": "5WMjYncByH/QOlhlQQF4FtfN3u8wjLndKxm7keS4yps=",
        "originContent": "CLASS_SPLIT=\"few_shot_classes\"",
        "translatedContent": "CLASS_SPLIT=\"few_shot_classes\""
      },
      {
        "row": 4,
        "rowsha": "8+9IFy0Ktvpr9OXcmwR7hFbTBllKChS7HJeJExKgf1c=",
        "originContent": "RESULTS_DIR=work_dirs/few_shot_results",
        "translatedContent": "RESULTS_DIR=work_dirs/few_shot_results"
      },
      {
        "row": 5,
        "rowsha": "OXdDwPWbHsxfYJ/JWQLsImG0nugF4Dx1u550vDW3zXM=",
        "originContent": "SHOTS=30",
        "translatedContent": "SHOTS=30"
      },
      {
        "row": 6,
        "rowsha": "TZCZPpxiYExF90wFUMh2SaiJ47wqIXbOS5sQprvua60=",
        "originContent": "SEED=33",
        "translatedContent": "SEED=33"
      },
      {
        "row": 7,
        "rowsha": "FIF/DKrsM63ZqjaUXSdXy4O0d4HvcXq+l6JN3AFA6Yg=",
        "originContent": "GPUS=4",
        "translatedContent": "GPUS=4"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "d4MFZP0817WEw/aGRG5ynYG5yhNx7V9bDTr4Alztgc0=",
        "originContent": "mkdir -p $RESULTS_DIR",
        "translatedContent": "mkdir -p $RESULTS_DIR"
      },
      {
        "row": 10,
        "rowsha": "EMUWO2w3mya0vHg6/YC8i555JVmIz0kJ3S8bBMbAJI4=",
        "originContent": "FILENAME=few_shot_${SHOTS}shot_seed${SEED}.pkl",
        "translatedContent": "FILENAME=few_shot_${SHOTS}shot_seed${SEED}.pkl"
      },
      {
        "row": 11,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 12,
    "Content": "\n#### 0. Create reference set\n",
    "ContentSha": "1XrtmJBqIS+6/RHkWmwwopPgE4d3ho+bdPLXEG612YQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "#### 0. Crea set di riferimento\n\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 13,
    "Content": "```bash\npython no_time_to_train/dataset/few_shot_sampling.py \\\n        --n-shot $SHOTS \\\n        --out-path ${RESULTS_DIR}/${FILENAME} \\\n        --seed $SEED \\\n        --dataset $CLASS_SPLIT\n```",
    "ContentSha": "XMsc+nj2n5gsZtjFdl6ErjVKLXgBoPIrungxtY9mDss=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython no_time_to_train/dataset/few_shot_sampling.py \\\n        --n-shot $SHOTS \\\n        --out-path ${RESULTS_DIR}/${FILENAME} \\\n        --seed $SEED \\\n        --dataset $CLASS_SPLIT\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "PRiOVyw7T5Sz/QCpc7h6O/pVrGGGe1h7h16m6Ht7880=",
        "originContent": "python no_time_to_train/dataset/few_shot_sampling.py \\",
        "translatedContent": "python no_time_to_train/dataset/few_shot_sampling.py \\"
      },
      {
        "row": 3,
        "rowsha": "+skavTcONmIk4Z2Hocv42oEOFkuDVUnG8f+ryhqcFaU=",
        "originContent": "        --n-shot $SHOTS \\",
        "translatedContent": "        --n-shot $SHOTS \\"
      },
      {
        "row": 4,
        "rowsha": "8jXgrH+gZMvZYRQcNSg0cF811pg2RJnwePOy8VOW8eo=",
        "originContent": "        --out-path ${RESULTS_DIR}/${FILENAME} \\",
        "translatedContent": "        --out-path ${RESULTS_DIR}/${FILENAME} \\"
      },
      {
        "row": 5,
        "rowsha": "e5rbzhd5GZBQ2jYVYVa4pEa3+aPBgXgj3C4mIvqNgRk=",
        "originContent": "        --seed $SEED \\",
        "translatedContent": "        --seed $SEED \\"
      },
      {
        "row": 6,
        "rowsha": "8LI9BkSuTbQDKnVIEWkfgSrM6cL7ITEQqyf9jvAGyVM=",
        "originContent": "        --dataset $CLASS_SPLIT",
        "translatedContent": "        --dataset $CLASS_SPLIT"
      },
      {
        "row": 7,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 14,
    "Content": "\n#### 1. Fill memory with references\n",
    "ContentSha": "v8E00SBwAimb411iJf1DGyTZxexOPmC/xK0/B+XBH1g=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "#### 1. Riempire la memoria con riferimenti\n\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 15,
    "Content": "```bash\npython run_lightening.py test --config $CONFIG \\\n                              --model.test_mode fill_memory \\\n                              --out_path ${RESULTS_DIR}/memory.ckpt \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --model.init_args.dataset_cfgs.fill_memory.memory_pkl ${RESULTS_DIR}/${FILENAME} \\\n                              --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOTS \\\n                              --model.init_args.dataset_cfgs.fill_memory.class_split $CLASS_SPLIT \\\n                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\\n                              --trainer.devices $GPUS\n```",
    "ContentSha": "1pVePuzaIdQCE/Nx0VoaWhFswuB5Jh1Z68Cw/2D8RkM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython run_lightening.py test --config $CONFIG \\\n                              --model.test_mode fill_memory \\\n                              --out_path ${RESULTS_DIR}/memory.ckpt \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --model.init_args.dataset_cfgs.fill_memory.memory_pkl ${RESULTS_DIR}/${FILENAME} \\\n                              --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOTS \\\n                              --model.init_args.dataset_cfgs.fill_memory.class_split $CLASS_SPLIT \\\n                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\\n                              --trainer.devices $GPUS\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 16,
    "Content": "\n#### 2. Post-process memory bank\n",
    "ContentSha": "3A9quGczCnAQeUTcoJVGYLTQapI5nQ5aSj7AZIhGFJw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "#### 2. Post-elaborazione della memoria di banco\n\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 17,
    "Content": "```bash\npython run_lightening.py test --config $CONFIG \\\n                              --model.test_mode postprocess_memory \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --ckpt_path ${RESULTS_DIR}/memory.ckpt \\\n                              --out_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\\n                              --trainer.devices 1\n```",
    "ContentSha": "45qs8EyMtDUKs5A3rrQcJQXl6OIbI6s0rKOOnHmYURs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython run_lightening.py test --config $CONFIG \\\n                              --model.test_mode postprocess_memory \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --ckpt_path ${RESULTS_DIR}/memory.ckpt \\\n                              --out_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\\n                              --trainer.devices 1\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 18,
    "Content": "\n#### 3. Inference on target images\n",
    "ContentSha": "73CbGioqWaTULTrw0roBLoZCxgBgtmJVFDc7RHluH0g=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "#### 3. Inferenza sulle immagini di destinazione\n\n",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  },
  {
    "Id": 19,
    "Content": "```bash\npython run_lightening.py test --config $CONFIG  \\\n                              --ckpt_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\\n                              --model.init_args.test_mode test \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --model.init_args.model_cfg.dataset_name $CLASS_SPLIT \\\n                              --model.init_args.dataset_cfgs.test.class_split $CLASS_SPLIT \\\n                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\\n                              --trainer.devices $GPUS\n```",
    "ContentSha": "vbKXVEs47fJ5oF8vLkHVM2ofFMx1hKBBgQF9JAgp2Jo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython run_lightening.py test --config $CONFIG  \\\n                              --ckpt_path ${RESULTS_DIR}/memory_postprocessed.ckpt \\\n                              --model.init_args.test_mode test \\\n                              --model.init_args.model_cfg.memory_bank_cfg.length $SHOTS \\\n                              --model.init_args.model_cfg.dataset_name $CLASS_SPLIT \\\n                              --model.init_args.dataset_cfgs.test.class_split $CLASS_SPLIT \\\n                              --trainer.logger.save_dir ${RESULTS_DIR}/ \\\n                              --trainer.devices $GPUS\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 20,
    "Content": "\nIf you'd like to see inference results online (as they are computed), uncomment lines 1746-1749 in `no_time_to_train/models/Sam2MatchingBaseline_noAMG.py` [here](https://github.com/miquel-espinosa/no-time-to-train/blob/main/no_time_to_train/models/Sam2MatchingBaseline_noAMG.py#L1746).\nAdjust the score threshold `score_thr` parameter as needed to see more or less segmented instances.\nImages will now be saved in `results_analysis/few_shot_classes/`. The image on the left shows the ground truth, the image on the right shows the segmented instances found by our training-free method.\n\nNote that in this example we are using the `few_shot_classes` split, thus, we should only expect to see segmented instances of the classes in this split (not all classes in COCO).\n\n#### Results\n\nAfter running all images in the validation set, you should obtain:\n",
    "ContentSha": "medzMxexFQJT2fGG5e8YEfmHZEa9eQ27lN3/GcxqnNU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Se desideri vedere i risultati dell'inferenza online (man mano che vengono calcolati), decommenta le righe 1746-1749 in `no_time_to_train/models/Sam2MatchingBaseline_noAMG.py` [qui](https://github.com/miquel-espinosa/no-time-to-train/blob/main/no_time_to_train/models/Sam2MatchingBaseline_noAMG.py#L1746).\nRegola il parametro della soglia del punteggio `score_thr` secondo necessit√† per visualizzare pi√π o meno istanze segmentate.\nLe immagini verranno ora salvate in `results_analysis/few_shot_classes/`. L'immagine a sinistra mostra la ground truth, l'immagine a destra mostra le istanze segmentate trovate dal nostro metodo senza training.\n\nNota che in questo esempio stiamo usando la suddivisione `few_shot_classes`, quindi dovremmo aspettarci di vedere solo istanze segmentate delle classi in questa suddivisione (non tutte le classi in COCO).\n\n#### Risultati\n\nDopo aver elaborato tutte le immagini nel set di validazione, dovresti ottenere:\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Se desideri vedere i risultati dell'inferenza online (man mano che vengono calcolati), decommenta le righe 1746-1749 in `no_time_to_train/models/Sam2MatchingBaseline_noAMG.py` [qui](https://github.com/miquel-espinosa/no-time-to-train/blob/main/no_time_to_train/models/Sam2MatchingBaseline_noAMG.py#L1746)."
      },
      {
        "row": 2,
        "rowsha": "E3YMGbl39CfFXHyTv8FVZgc4pHUbY3g2R7Uw34Aj3cM=",
        "originContent": "If you'd like to see inference results online (as they are computed), uncomment lines 1746-1749 in `no_time_to_train/models/Sam2MatchingBaseline_noAMG.py` [here](https://github.com/miquel-espinosa/no-time-to-train/blob/main/no_time_to_train/models/Sam2MatchingBaseline_noAMG.py#L1746).",
        "translatedContent": "Regola il parametro della soglia del punteggio `score_thr` secondo necessit√† per visualizzare pi√π o meno istanze segmentate."
      },
      {
        "row": 3,
        "rowsha": "t4ls82vV4doL4KQnV6GHrD5nhSB/5viegwhZKApCxv8=",
        "originContent": "Adjust the score threshold `score_thr` parameter as needed to see more or less segmented instances.",
        "translatedContent": "Le immagini verranno ora salvate in `results_analysis/few_shot_classes/`. L'immagine a sinistra mostra la ground truth, l'immagine a destra mostra le istanze segmentate trovate dal nostro metodo senza training."
      },
      {
        "row": 4,
        "rowsha": "GEvthXpgTrUG4klt5odBBg+yPrDSUgG4O0X6qagvPPc=",
        "originContent": "Images will now be saved in `results_analysis/few_shot_classes/`. The image on the left shows the ground truth, the image on the right shows the segmented instances found by our training-free method.",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Nota che in questo esempio stiamo usando la suddivisione `few_shot_classes`, quindi dovremmo aspettarci di vedere solo istanze segmentate delle classi in questa suddivisione (non tutte le classi in COCO)."
      },
      {
        "row": 6,
        "rowsha": "SovnZ9uxfKqQS4l5TvalD8KlZ1z6kB/LqxYQlkfqvfg=",
        "originContent": "Note that in this example we are using the `few_shot_classes` split, thus, we should only expect to see segmented instances of the classes in this split (not all classes in COCO).",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Risultati"
      },
      {
        "row": 8,
        "rowsha": "GViaw3FgQP0CiY45/FzC3sUybwvUQorojma5tDwKi+Q=",
        "originContent": "#### Results",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Dopo aver elaborato tutte le immagini nel set di validazione, dovresti ottenere:"
      },
      {
        "row": 10,
        "rowsha": "zNb3sJjc7R1s7fDW8EZQdgmvGwmPYQrwHy8JzOlUtW0=",
        "originContent": "After running all images in the validation set, you should obtain:",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 21,
    "Content": "```\nBBOX RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.368\n\nSEGM RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.342\n```",
    "ContentSha": "ch7itB3Sk8oLc3U+lNJGI3BV57wpOMkabTBsUiqzHDU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nBBOX RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.368\n\nSEGM RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.342\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 22,
    "Content": "---\n\n## üîç Custom dataset\n\nWe provide the instructions for running our pipeline on a custom dataset. Annotation format are always in COCO format.\n\n> **TLDR;** To directly see how to run full pipeline on *custom datasets*, find `scripts/matching_cdfsod_pipeline.sh` together with example scripts of CD-FSOD datasets (e.g. `scripts/dior_fish.sh`)\n\n### 0. Prepare a custom dataset ‚õµüê¶\n\nLet's imagine we want to detect **boats**‚õµ and **birds**üê¶ in a custom dataset. To use our method we will need:\n- At least 1 *annotated* reference image for each class (i.e. 1 reference image for boat and 1 reference image for bird)\n- Multiple target images to find instances of our desired classes.\n\nWe have prepared a toy script to create a custom dataset with coco images, for a **1-shot** setting.",
    "ContentSha": "IPUeWphY2t966UmztjMo0ja/aOT1Wd0H0rkyNv8xt9Y=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "---\n\n## üîç Dataset personalizzato\n\nForniamo le istruzioni per eseguire la nostra pipeline su un dataset personalizzato. Il formato delle annotazioni √® sempre in formato COCO.\n\n> **TLDR;** Per vedere direttamente come eseguire la pipeline completa su *dataset personalizzati*, consulta `scripts/matching_cdfsod_pipeline.sh` insieme agli script di esempio dei dataset CD-FSOD (ad es. `scripts/dior_fish.sh`)\n\n### 0. Prepara un dataset personalizzato ‚õµüê¶\n\nImmaginiamo di voler rilevare **barche**‚õµ e **uccelli**üê¶ in un dataset personalizzato. Per utilizzare il nostro metodo avremo bisogno di:\n- Almeno 1 immagine di riferimento *annotata* per ogni classe (cio√® 1 immagine di riferimento per barca e 1 per uccello)\n- Pi√π immagini target in cui trovare le istanze delle classi desiderate.\n\nAbbiamo preparato uno script di esempio per creare un dataset personalizzato con immagini COCO, per un'impostazione **1-shot**.",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": "---"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "c++nsSY1uuHM2PTk79oArrxzFD9twFf2RUpxyUv5PT0=",
        "originContent": "## üîç Custom dataset",
        "translatedContent": "## üîç Dataset personalizzato"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "MAlwFLx8Lvlyn748KRH0kzh8rE/DYBHDpQ+2sC0eRxc=",
        "originContent": "We provide the instructions for running our pipeline on a custom dataset. Annotation format are always in COCO format.",
        "translatedContent": "Forniamo le istruzioni per eseguire la nostra pipeline su un dataset personalizzato. Il formato delle annotazioni √® sempre in formato COCO."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "g/A7+opwMb5l0mddubzzp7XagdvfTl50evzXOnMuvgc=",
        "originContent": "> **TLDR;** To directly see how to run full pipeline on *custom datasets*, find `scripts/matching_cdfsod_pipeline.sh` together with example scripts of CD-FSOD datasets (e.g. `scripts/dior_fish.sh`)",
        "translatedContent": "> **TLDR;** Per vedere direttamente come eseguire la pipeline completa su *dataset personalizzati*, consulta `scripts/matching_cdfsod_pipeline.sh` insieme agli script di esempio dei dataset CD-FSOD (ad es. `scripts/dior_fish.sh`)"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "KHro+mInNkosu1BVTY/B0DZvjUq530BAko9eHiTGago=",
        "originContent": "### 0. Prepare a custom dataset ‚õµüê¶",
        "translatedContent": "### 0. Prepara un dataset personalizzato ‚õµüê¶"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "d+07pCYHzAJukxSdon/m8GnwOqIuFx1EJDbaWXALglg=",
        "originContent": "Let's imagine we want to detect **boats**‚õµ and **birds**üê¶ in a custom dataset. To use our method we will need:",
        "translatedContent": "Immaginiamo di voler rilevare **barche**‚õµ e **uccelli**üê¶ in un dataset personalizzato. Per utilizzare il nostro metodo avremo bisogno di:"
      },
      {
        "row": 12,
        "rowsha": "vPgQlcnfxb+AtocNeSdQgaaZn12UCNyr4evfd4/TRfM=",
        "originContent": "- At least 1 *annotated* reference image for each class (i.e. 1 reference image for boat and 1 reference image for bird)",
        "translatedContent": "- Almeno 1 immagine di riferimento *annotata* per ogni classe (cio√® 1 immagine di riferimento per barca e 1 per uccello)"
      },
      {
        "row": 13,
        "rowsha": "8z4gmUd99I0Sv8CpPAJpfXckJpzhNztwVNx4JPt7njQ=",
        "originContent": "- Multiple target images to find instances of our desired classes.",
        "translatedContent": "- Pi√π immagini target in cui trovare le istanze delle classi desiderate."
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "GjHyRb56gWXRAJfD5+sV+6+ryR+Y8leT3ZeMLIPSnqY=",
        "originContent": "We have prepared a toy script to create a custom dataset with coco images, for a **1-shot** setting.",
        "translatedContent": "Abbiamo preparato uno script di esempio per creare un dataset personalizzato con immagini COCO, per un'impostazione **1-shot**."
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 23,
    "Content": "```bash\npython scripts/make_custom_dataset.py\n```",
    "ContentSha": "Hjl+Pq3rFu2WuUdTIP37/i6uaUCEix81AF5Q9+tja9Y=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython scripts/make_custom_dataset.py\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "8GdjT2hnHAzciaB7nwu8iA9eU/D2sXiZNmtzGv2pdLc=",
        "originContent": "python scripts/make_custom_dataset.py",
        "translatedContent": "python scripts/make_custom_dataset.py"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 24,
    "Content": "This will create a custom dataset with the following folder structure:",
    "ContentSha": "9JGOKHf/Hqbdn+b2OqaUnKIYD8GGf7jwfM9mTbUtoP4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Questo creer√† un dataset personalizzato con la seguente struttura di cartelle:",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "9JGOKHf/Hqbdn+b2OqaUnKIYD8GGf7jwfM9mTbUtoP4=",
        "originContent": "This will create a custom dataset with the following folder structure:",
        "translatedContent": "Questo creer√† un dataset personalizzato con la seguente struttura di cartelle:"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 25,
    "Content": "```\ndata/my_custom_dataset/\n    ‚îú‚îÄ‚îÄ annotations/\n    ‚îÇ   ‚îú‚îÄ‚îÄ custom_references.json\n    ‚îÇ   ‚îú‚îÄ‚îÄ custom_targets.json\n    ‚îÇ   ‚îî‚îÄ‚îÄ references_visualisations/\n    ‚îÇ       ‚îú‚îÄ‚îÄ bird_1.jpg\n    ‚îÇ       ‚îî‚îÄ‚îÄ boat_1.jpg\n    ‚îî‚îÄ‚îÄ images/\n        ‚îú‚îÄ‚îÄ 429819.jpg\n        ‚îú‚îÄ‚îÄ 101435.jpg\n        ‚îî‚îÄ‚îÄ (all target and reference images)\n```",
    "ContentSha": "Bj/IFZkQUfkoGUwynry3llvasPwDhX0B0JgBYl9vuQE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\ndata/my_custom_dataset/\n    ‚îú‚îÄ‚îÄ annotations/\n    ‚îÇ   ‚îú‚îÄ‚îÄ custom_references.json\n    ‚îÇ   ‚îú‚îÄ‚îÄ custom_targets.json\n    ‚îÇ   ‚îî‚îÄ‚îÄ references_visualisations/\n    ‚îÇ       ‚îú‚îÄ‚îÄ bird_1.jpg\n    ‚îÇ       ‚îî‚îÄ‚îÄ boat_1.jpg\n    ‚îî‚îÄ‚îÄ images/\n        ‚îú‚îÄ‚îÄ 429819.jpg\n        ‚îú‚îÄ‚îÄ 101435.jpg\n        ‚îî‚îÄ‚îÄ (all target and reference images)\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "g1BN83A/ehF5MS3cmcONKhcnYFPUu9lx5tHNF7RqtSI=",
        "originContent": "data/my_custom_dataset/",
        "translatedContent": "data/my_custom_dataset/"
      },
      {
        "row": 3,
        "rowsha": "JvO/ShgGzuJttq/EWAFZRSRn/JbesI4bvNbBUz6w7MQ=",
        "originContent": "    ‚îú‚îÄ‚îÄ annotations/",
        "translatedContent": "    ‚îú‚îÄ‚îÄ annotations/"
      },
      {
        "row": 4,
        "rowsha": "QMlEzdwEPLlhl/ukBMpJZOaMr4IMdYztwgSTonnpoU0=",
        "originContent": "    ‚îÇ   ‚îú‚îÄ‚îÄ custom_references.json",
        "translatedContent": "    ‚îÇ   ‚îú‚îÄ‚îÄ custom_references.json"
      },
      {
        "row": 5,
        "rowsha": "PpmPL12w5fMZ3CGm5FjjahCv/J4JNUr0Aai2bMfLXmM=",
        "originContent": "    ‚îÇ   ‚îú‚îÄ‚îÄ custom_targets.json",
        "translatedContent": "    ‚îÇ   ‚îú‚îÄ‚îÄ custom_targets.json"
      },
      {
        "row": 6,
        "rowsha": "jDGPmsXeuTEZmdtm+l+/XyzJoB02g7c8EUyXzdmuYTA=",
        "originContent": "    ‚îÇ   ‚îî‚îÄ‚îÄ references_visualisations/",
        "translatedContent": "    ‚îÇ   ‚îî‚îÄ‚îÄ references_visualisations/"
      },
      {
        "row": 7,
        "rowsha": "nEm8OolecqyTavnDcEMwn3WYCxmuawRTK4w5T9fx8OA=",
        "originContent": "    ‚îÇ       ‚îú‚îÄ‚îÄ bird_1.jpg",
        "translatedContent": "    ‚îÇ       ‚îú‚îÄ‚îÄ bird_1.jpg"
      },
      {
        "row": 8,
        "rowsha": "TtFV9rdPVIry6eQjXCOP/TmimHnNUwWamUqTv6nJrMU=",
        "originContent": "    ‚îÇ       ‚îî‚îÄ‚îÄ boat_1.jpg",
        "translatedContent": "    ‚îÇ       ‚îî‚îÄ‚îÄ boat_1.jpg"
      },
      {
        "row": 9,
        "rowsha": "cfeiCGfWkC22HxUvUr4VbROSGr0v+PlwOQbyaowoLL8=",
        "originContent": "    ‚îî‚îÄ‚îÄ images/",
        "translatedContent": "    ‚îî‚îÄ‚îÄ images/"
      },
      {
        "row": 10,
        "rowsha": "GOIYZ07gjx4AFeBTE+p56PSQs8b0/Iz+VCaqukMBIN8=",
        "originContent": "        ‚îú‚îÄ‚îÄ 429819.jpg",
        "translatedContent": "        ‚îú‚îÄ‚îÄ 429819.jpg"
      },
      {
        "row": 11,
        "rowsha": "+x490YPlg8PM9q4wRBSVHAEl0MncbNR218UYuZwYvwQ=",
        "originContent": "        ‚îú‚îÄ‚îÄ 101435.jpg",
        "translatedContent": "        ‚îú‚îÄ‚îÄ 101435.jpg"
      },
      {
        "row": 12,
        "rowsha": "LSQZvdwBh/r3AcJktw0kXA1t2Z0a4MncxgJXMe86i0A=",
        "originContent": "        ‚îî‚îÄ‚îÄ (all target and reference images)",
        "translatedContent": "        ‚îî‚îÄ‚îÄ (all target and reference images)"
      },
      {
        "row": 13,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 26,
    "Content": "\n**Reference images visualisation (1-shot):**\n\n| 1-shot Reference Image for BIRD üê¶ | 1-shot Reference Image for BOAT ‚õµ |\n|:---------------------------------:|:----------------------------------:|\n| <img src=\"https://github.com/user-attachments/assets/e59e580d-a7db-42ac-b386-892af211fc85\" alt=\"bird_1\" width=\"500\"/> | <img src=\"https://github.com/user-attachments/assets/f94ee025-ae37-4a45-9c3e-0cfe8f8cd2bc\" alt=\"boat_1\" width=\"500\"/> |\n\n\n### 0.1 If only bbox annotations are available\n\nWe also provide a script to generate instance-level segmentation masks by using SAM2. This is useful if you only have bounding box annotations available for the reference images.\n",
    "ContentSha": "24nxqSCUluTBmTCEJTeg5Xoe4qe7qXxstVNWjA2/zVk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "**Visualizzazione delle immagini di riferimento (1-shot):**\n\n| Immagine di riferimento 1-shot per UCCELLO üê¶ | Immagine di riferimento 1-shot per BARCA ‚õµ |\n|:--------------------------------------------:|:-------------------------------------------:|\n| <img src=\"https://github.com/user-attachments/assets/e59e580d-a7db-42ac-b386-892af211fc85\" alt=\"bird_1\" width=\"500\"/> | <img src=\"https://github.com/user-attachments/assets/f94ee025-ae37-4a45-9c3e-0cfe8f8cd2bc\" alt=\"boat_1\" width=\"500\"/> |\n\n\n### 0.1 Se sono disponibili solo annotazioni bbox\n\nForniamo anche uno script per generare maschere di segmentazione a livello di istanza utilizzando SAM2. Questo √® utile se sono disponibili solo annotazioni di bounding box per le immagini di riferimento.\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "**Visualizzazione delle immagini di riferimento (1-shot):**"
      },
      {
        "row": 2,
        "rowsha": "i6GCcFGh4Kg8/LCH5JMfamjrChUuCaCaY+/ItU4ip9A=",
        "originContent": "**Reference images visualisation (1-shot):**",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "| Immagine di riferimento 1-shot per UCCELLO üê¶ | Immagine di riferimento 1-shot per BARCA ‚õµ |"
      },
      {
        "row": 4,
        "rowsha": "PCwZ6EV6ZiryMGK+vwdQk1Nxf+G3/KusRC+6zIcPaNU=",
        "originContent": "| 1-shot Reference Image for BIRD üê¶ | 1-shot Reference Image for BOAT ‚õµ |",
        "translatedContent": "|:--------------------------------------------:|:-------------------------------------------:|"
      },
      {
        "row": 5,
        "rowsha": "Y4n1UyevjWImE7udUo5tuu0S6hg7rtv9TgjCNanLYb4=",
        "originContent": "|:---------------------------------:|:----------------------------------:|",
        "translatedContent": "| <img src=\"https://github.com/user-attachments/assets/e59e580d-a7db-42ac-b386-892af211fc85\" alt=\"bird_1\" width=\"500\"/> | <img src=\"https://github.com/user-attachments/assets/f94ee025-ae37-4a45-9c3e-0cfe8f8cd2bc\" alt=\"boat_1\" width=\"500\"/> |"
      },
      {
        "row": 6,
        "rowsha": "pJfpVMs/UcrNUB+0WjrD3JQIaqsXg9tFEOVExrXXtjk=",
        "originContent": "| <img src=\"https://github.com/user-attachments/assets/e59e580d-a7db-42ac-b386-892af211fc85\" alt=\"bird_1\" width=\"500\"/> | <img src=\"https://github.com/user-attachments/assets/f94ee025-ae37-4a45-9c3e-0cfe8f8cd2bc\" alt=\"boat_1\" width=\"500\"/> |",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 0.1 Se sono disponibili solo annotazioni bbox"
      },
      {
        "row": 9,
        "rowsha": "zA208x5s0doTy5zcZFprJ3E+wszgv0mw+aRMrorAqzA=",
        "originContent": "### 0.1 If only bbox annotations are available",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Forniamo anche uno script per generare maschere di segmentazione a livello di istanza utilizzando SAM2. Questo √® utile se sono disponibili solo annotazioni di bounding box per le immagini di riferimento."
      },
      {
        "row": 11,
        "rowsha": "MUyOjT92lSujOaMFb6Ymg90Qk19zgHMK7N+k+6lKHS4=",
        "originContent": "We also provide a script to generate instance-level segmentation masks by using SAM2. This is useful if you only have bounding box annotations available for the reference images.",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 27,
    "Content": "```bash\n# Download sam_h checkpoint. Feel free to use more recent checkpoints (note: code might need to be adapted)\nwget https://dl.fbaipublicfiles.com/segment_anything/sam_vit_h_4b8939.pth -O checkpoints/sam_vit_h_4b8939.pth\n# Run automatic instance segmentation from ground truth bounding boxes.\npython no_time_to_train/dataset/sam_bbox_to_segm_batch.py \\\n    --input_json data/my_custom_dataset/annotations/custom_references.json \\\n    --image_dir data/my_custom_dataset/images \\\n    --sam_checkpoint checkpoints/sam_vit_h_4b8939.pth \\\n    --model_type vit_h \\\n    --device cuda \\\n    --batch_size 8 \\\n    --visualize\n```",
    "ContentSha": "MZFLWMxUY4Y3eseQiE2eVYRMs3mR83iZMQq1RJqVFCc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n# Download sam_h checkpoint. Feel free to use more recent checkpoints (note: code might need to be adapted)\nwget https://dl.fbaipublicfiles.com/segment_anything/sam_vit_h_4b8939.pth -O checkpoints/sam_vit_h_4b8939.pth\n# Run automatic instance segmentation from ground truth bounding boxes.\npython no_time_to_train/dataset/sam_bbox_to_segm_batch.py \\\n    --input_json data/my_custom_dataset/annotations/custom_references.json \\\n    --image_dir data/my_custom_dataset/images \\\n    --sam_checkpoint checkpoints/sam_vit_h_4b8939.pth \\\n    --model_type vit_h \\\n    --device cuda \\\n    --batch_size 8 \\\n    --visualize\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "q05KDYtZcnGfaA8t+UhcI7XcPf9ESLH3mHMW1UnENS4=",
        "originContent": "# Download sam_h checkpoint. Feel free to use more recent checkpoints (note: code might need to be adapted)",
        "translatedContent": "# Download sam_h checkpoint. Feel free to use more recent checkpoints (note: code might need to be adapted)"
      },
      {
        "row": 3,
        "rowsha": "Mlq983cHKR1PPCAix5SWPngGv4+vv2ytlY8vcUs5a9Y=",
        "originContent": "wget https://dl.fbaipublicfiles.com/segment_anything/sam_vit_h_4b8939.pth -O checkpoints/sam_vit_h_4b8939.pth",
        "translatedContent": "wget https://dl.fbaipublicfiles.com/segment_anything/sam_vit_h_4b8939.pth -O checkpoints/sam_vit_h_4b8939.pth"
      },
      {
        "row": 4,
        "rowsha": "ESj52g9uiq5mJN2OdxJU/8I1ucP89HML78Mxi57hzYc=",
        "originContent": "# Run automatic instance segmentation from ground truth bounding boxes.",
        "translatedContent": "# Run automatic instance segmentation from ground truth bounding boxes."
      },
      {
        "row": 5,
        "rowsha": "WrVdG5OYJmNdZbe4/lzWLTmdLJIfkZn6ERAmZ9botD8=",
        "originContent": "python no_time_to_train/dataset/sam_bbox_to_segm_batch.py \\",
        "translatedContent": "python no_time_to_train/dataset/sam_bbox_to_segm_batch.py \\"
      },
      {
        "row": 6,
        "rowsha": "GkoJwhS72I1vDdAnBwsabbNOnfPIdtClGSdySbNMR9M=",
        "originContent": "    --input_json data/my_custom_dataset/annotations/custom_references.json \\",
        "translatedContent": "    --input_json data/my_custom_dataset/annotations/custom_references.json \\"
      },
      {
        "row": 7,
        "rowsha": "UNJY8XchciEfwD+xveYX6JawAi9RLfA6DJPhF+uAwzQ=",
        "originContent": "    --image_dir data/my_custom_dataset/images \\",
        "translatedContent": "    --image_dir data/my_custom_dataset/images \\"
      },
      {
        "row": 8,
        "rowsha": "wJKlRU0e9IsgqnO9eLgfCwmOYDTPWM+ZzG9B5P7sfYc=",
        "originContent": "    --sam_checkpoint checkpoints/sam_vit_h_4b8939.pth \\",
        "translatedContent": "    --sam_checkpoint checkpoints/sam_vit_h_4b8939.pth \\"
      },
      {
        "row": 9,
        "rowsha": "tk9AcL//TbduYhVQgZX6NPlUcI9ccZbgr11e0CprtOg=",
        "originContent": "    --model_type vit_h \\",
        "translatedContent": "    --model_type vit_h \\"
      },
      {
        "row": 10,
        "rowsha": "dVEMHNQeW37GgzSELjY5cThg1FEfciqEeUA9vKPUjJY=",
        "originContent": "    --device cuda \\",
        "translatedContent": "    --device cuda \\"
      },
      {
        "row": 11,
        "rowsha": "rfhFUuuk/7IzRqrTESjB/O8QPteB6K0YtBKXBjjN5s8=",
        "originContent": "    --batch_size 8 \\",
        "translatedContent": "    --batch_size 8 \\"
      },
      {
        "row": 12,
        "rowsha": "0oxQ3C1Uwhk9yS0XuROh1kixkk3TGumt+n/ZWGYQsGs=",
        "originContent": "    --visualize",
        "translatedContent": "    --visualize"
      },
      {
        "row": 13,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 28,
    "Content": "\n**Reference images with instance-level segmentation masks (generated by SAM2 from gt bounding boxes, 1-shot):**\n\nVisualisation of the generated segmentation masks are saved in `data/my_custom_dataset/annotations/custom_references_with_SAM_segm/references_visualisations/`.\n\n\n| 1-shot Reference Image for BIRD üê¶ (automatically segmented with SAM) | 1-shot Reference Image for BOAT ‚õµ (automatically segmented with SAM) |\n|:---------------------------------:|:----------------------------------:|\n| <img src=\"https://github.com/user-attachments/assets/65d38dc4-1454-43cd-9600-e8efc67b3a82\" alt=\"bird_1_with_SAM_segm\" width=\"500\"/> | <img src=\"https://github.com/user-attachments/assets/43a558ad-50ca-4715-8285-9aa3268843c6\" alt=\"boat_1_with_SAM_segm\" width=\"500\"/> |\n\n\n### 0.2 Convert coco annotations to pickle file\n",
    "ContentSha": "0a8ACnuaKmeocwoJUK+xvmctljcu8ZJdT00xJXlyJ5w=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "**Immagini di riferimento con maschere di segmentazione a livello di istanza (generate da SAM2 dai riquadri gt, 1-shot):**\n\nLa visualizzazione delle maschere di segmentazione generate √® salvata in `data/my_custom_dataset/annotations/custom_references_with_SAM_segm/references_visualisations/`.\n\n\n| Immagine di riferimento 1-shot per UCCELLO üê¶ (segmentata automaticamente con SAM) | Immagine di riferimento 1-shot per BARCA ‚õµ (segmentata automaticamente con SAM) |\n|:---------------------------------:|:----------------------------------:|\n| <img src=\"https://github.com/user-attachments/assets/65d38dc4-1454-43cd-9600-e8efc67b3a82\" alt=\"bird_1_with_SAM_segm\" width=\"500\"/> | <img src=\"https://github.com/user-attachments/assets/43a558ad-50ca-4715-8285-9aa3268843c6\" alt=\"boat_1_with_SAM_segm\" width=\"500\"/> |\n\n\n### 0.2 Convertire annotazioni coco in file pickle\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "**Immagini di riferimento con maschere di segmentazione a livello di istanza (generate da SAM2 dai riquadri gt, 1-shot):**"
      },
      {
        "row": 2,
        "rowsha": "go4V4P6OzNA28iC0FMYGqlVmm7jK66MiYAm9OETXiJA=",
        "originContent": "**Reference images with instance-level segmentation masks (generated by SAM2 from gt bounding boxes, 1-shot):**",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "La visualizzazione delle maschere di segmentazione generate √® salvata in `data/my_custom_dataset/annotations/custom_references_with_SAM_segm/references_visualisations/`."
      },
      {
        "row": 4,
        "rowsha": "Ayu/Z6P/jzQ6WuPWqR7qlwFHYO7FNDTiMusbCybNf68=",
        "originContent": "Visualisation of the generated segmentation masks are saved in `data/my_custom_dataset/annotations/custom_references_with_SAM_segm/references_visualisations/`.",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "| Immagine di riferimento 1-shot per UCCELLO üê¶ (segmentata automaticamente con SAM) | Immagine di riferimento 1-shot per BARCA ‚õµ (segmentata automaticamente con SAM) |"
      },
      {
        "row": 7,
        "rowsha": "AY7pJ+gs67j2VcKPmW5gL3rafPb8dcKoi16JNkAWF3c=",
        "originContent": "| 1-shot Reference Image for BIRD üê¶ (automatically segmented with SAM) | 1-shot Reference Image for BOAT ‚õµ (automatically segmented with SAM) |",
        "translatedContent": "|:---------------------------------:|:----------------------------------:|"
      },
      {
        "row": 8,
        "rowsha": "Y4n1UyevjWImE7udUo5tuu0S6hg7rtv9TgjCNanLYb4=",
        "originContent": "|:---------------------------------:|:----------------------------------:|",
        "translatedContent": "| <img src=\"https://github.com/user-attachments/assets/65d38dc4-1454-43cd-9600-e8efc67b3a82\" alt=\"bird_1_with_SAM_segm\" width=\"500\"/> | <img src=\"https://github.com/user-attachments/assets/43a558ad-50ca-4715-8285-9aa3268843c6\" alt=\"boat_1_with_SAM_segm\" width=\"500\"/> |"
      },
      {
        "row": 9,
        "rowsha": "ToFAr2OF+sOEjtmJ9XoWnS7Gp5l64NmvifB/z71pOJU=",
        "originContent": "| <img src=\"https://github.com/user-attachments/assets/65d38dc4-1454-43cd-9600-e8efc67b3a82\" alt=\"bird_1_with_SAM_segm\" width=\"500\"/> | <img src=\"https://github.com/user-attachments/assets/43a558ad-50ca-4715-8285-9aa3268843c6\" alt=\"boat_1_with_SAM_segm\" width=\"500\"/> |",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 0.2 Convertire annotazioni coco in file pickle"
      },
      {
        "row": 12,
        "rowsha": "S5BXMpegeVtpKNlNSkjLxW9IItLUVddz6A6y9/+w8kI=",
        "originContent": "### 0.2 Convert coco annotations to pickle file",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 29,
    "Content": "```bash\npython no_time_to_train/dataset/coco_to_pkl.py \\\n    data/my_custom_dataset/annotations/custom_references_with_segm.json \\\n    data/my_custom_dataset/annotations/custom_references_with_segm.pkl \\\n    1\n```",
    "ContentSha": "PSo9jaMX0pVKgHl0ecq9duQGpy1rMpXUU1iB4a8YzJM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython no_time_to_train/dataset/coco_to_pkl.py \\\n    data/my_custom_dataset/annotations/custom_references_with_segm.json \\\n    data/my_custom_dataset/annotations/custom_references_with_segm.pkl \\\n    1\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "TbGvM4zPzbIM5U9vZ5XjuxBDvbQzfUkZGnIDQufFc1o=",
        "originContent": "python no_time_to_train/dataset/coco_to_pkl.py \\",
        "translatedContent": "python no_time_to_train/dataset/coco_to_pkl.py \\"
      },
      {
        "row": 3,
        "rowsha": "WHlcXrMSRh1i7gy8dOusGicXDjDos5/CkR99pJfua+w=",
        "originContent": "    data/my_custom_dataset/annotations/custom_references_with_segm.json \\",
        "translatedContent": "    data/my_custom_dataset/annotations/custom_references_with_segm.json \\"
      },
      {
        "row": 4,
        "rowsha": "7lB23E2gMRdMKTHeJ9TraRWnMPR2dK0G2vj0rm2Mn6Q=",
        "originContent": "    data/my_custom_dataset/annotations/custom_references_with_segm.pkl \\",
        "translatedContent": "    data/my_custom_dataset/annotations/custom_references_with_segm.pkl \\"
      },
      {
        "row": 5,
        "rowsha": "JNb3A7sOB4jdkplHzWKLL+BzjDL+5epLLkNJsC1+go8=",
        "originContent": "    1",
        "translatedContent": "    1"
      },
      {
        "row": 6,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 30,
    "Content": "\n### 1. Fill memory with references\n\nFirst, define useful variables and create a folder for results. For correct visualisation of labels, class names should be ordered by category id as appears in the json file. E.g. `bird` has category id `16`, `boat` has category id `9`. Thus, `CAT_NAMES=boat,bird`.\n",
    "ContentSha": "97iqG4pEnvNDE6ERpjfa2nL6RAtTIXJXwjJwqU/SNCg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 1. Riempire la memoria con riferimenti\n\nPer prima cosa, definire le variabili utili e creare una cartella per i risultati. Per una corretta visualizzazione delle etichette, i nomi delle classi devono essere ordinati in base all'id della categoria come appare nel file json. Ad esempio, `bird` ha id categoria `16`, `boat` ha id categoria `9`. Quindi, `CAT_NAMES=boat,bird`.\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 1. Riempire la memoria con riferimenti"
      },
      {
        "row": 2,
        "rowsha": "dVM+UDo+Uw9IUwOEyJzstEH7OKhe6S81hCddOammrrw=",
        "originContent": "### 1. Fill memory with references",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Per prima cosa, definire le variabili utili e creare una cartella per i risultati. Per una corretta visualizzazione delle etichette, i nomi delle classi devono essere ordinati in base all'id della categoria come appare nel file json. Ad esempio, `bird` ha id categoria `16`, `boat` ha id categoria `9`. Quindi, `CAT_NAMES=boat,bird`."
      },
      {
        "row": 4,
        "rowsha": "EPU38hEdpFeIBBC0wh+4XlWUsIjHWpOVoDsd7ERUuTw=",
        "originContent": "First, define useful variables and create a folder for results. For correct visualisation of labels, class names should be ordered by category id as appears in the json file. E.g. `bird` has category id `16`, `boat` has category id `9`. Thus, `CAT_NAMES=boat,bird`.",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 31,
    "Content": "```bash\nDATASET_NAME=my_custom_dataset\nDATASET_PATH=data/my_custom_dataset\nCAT_NAMES=boat,bird\nCATEGORY_NUM=2\nSHOT=1\nYAML_PATH=no_time_to_train/pl_configs/matching_cdfsod_template.yaml\nPATH_TO_SAVE_CKPTS=./tmp_ckpts/my_custom_dataset\nmkdir -p $PATH_TO_SAVE_CKPTS\n```",
    "ContentSha": "mJIX4bJBaFbcwT8YfLR0V4w6qjU7MQEh3u6k2gtPrvw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nDATASET_NAME=my_custom_dataset\nDATASET_PATH=data/my_custom_dataset\nCAT_NAMES=boat,bird\nCATEGORY_NUM=2\nSHOT=1\nYAML_PATH=no_time_to_train/pl_configs/matching_cdfsod_template.yaml\nPATH_TO_SAVE_CKPTS=./tmp_ckpts/my_custom_dataset\nmkdir -p $PATH_TO_SAVE_CKPTS\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "6EbR1s/RdVAlA0jAAfcSgXaq3O1JTzViziQ/jtzeEfs=",
        "originContent": "DATASET_NAME=my_custom_dataset",
        "translatedContent": "DATASET_NAME=my_custom_dataset"
      },
      {
        "row": 3,
        "rowsha": "rGjRieh72QyMmKr17wpaS+OJg4sC9nhvYevKRSxrQeg=",
        "originContent": "DATASET_PATH=data/my_custom_dataset",
        "translatedContent": "DATASET_PATH=data/my_custom_dataset"
      },
      {
        "row": 4,
        "rowsha": "QMJuj644G8GFlE7BYQ5ZTKhI6tAHbvf2/pBWPKGpWkQ=",
        "originContent": "CAT_NAMES=boat,bird",
        "translatedContent": "CAT_NAMES=boat,bird"
      },
      {
        "row": 5,
        "rowsha": "4OGQQ9kLf8nLXtcEqRxYNnJ+EVLYyJjIH/QNx4ohyOY=",
        "originContent": "CATEGORY_NUM=2",
        "translatedContent": "CATEGORY_NUM=2"
      },
      {
        "row": 6,
        "rowsha": "5kOLnAuFHyGkoAB8IJsgCTpnlrOaDAzdo1FNc7qm0Do=",
        "originContent": "SHOT=1",
        "translatedContent": "SHOT=1"
      },
      {
        "row": 7,
        "rowsha": "662dUxEa/PnuAPwL44NSRUQ5OAZkg0O5gVoEWE3qtjM=",
        "originContent": "YAML_PATH=no_time_to_train/pl_configs/matching_cdfsod_template.yaml",
        "translatedContent": "YAML_PATH=no_time_to_train/pl_configs/matching_cdfsod_template.yaml"
      },
      {
        "row": 8,
        "rowsha": "mdOBsd9Y7WimyNNrTHG419PGwTViTHX84Xlb5AbJreM=",
        "originContent": "PATH_TO_SAVE_CKPTS=./tmp_ckpts/my_custom_dataset",
        "translatedContent": "PATH_TO_SAVE_CKPTS=./tmp_ckpts/my_custom_dataset"
      },
      {
        "row": 9,
        "rowsha": "3wJA975allUjC6UMPZOg+uDEIue4MWNrkDkTqwr/6S8=",
        "originContent": "mkdir -p $PATH_TO_SAVE_CKPTS",
        "translatedContent": "mkdir -p $PATH_TO_SAVE_CKPTS"
      },
      {
        "row": 10,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 32,
    "Content": "\nRun step 1:",
    "ContentSha": "PqClefvNhYLjlZsfjndNSKUJEy6R+goO4h/8KMDA1P0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Esegui il passaggio 1:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Esegui il passaggio 1:"
      },
      {
        "row": 2,
        "rowsha": "ISOk9NSJV1zJWViaNnkce+GfURqkRViGhr76TjwQPWw=",
        "originContent": "Run step 1:",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 33,
    "Content": "```bash\npython run_lightening.py test --config $YAML_PATH \\\n    --model.test_mode fill_memory \\\n    --out_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory.pth \\\n    --model.init_args.dataset_cfgs.fill_memory.root $DATASET_PATH/images \\\n    --model.init_args.dataset_cfgs.fill_memory.json_file $DATASET_PATH/annotations/custom_references_with_segm.json \\\n    --model.init_args.dataset_cfgs.fill_memory.memory_pkl $DATASET_PATH/annotations/custom_references_with_segm.pkl \\\n    --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOT \\\n    --model.init_args.dataset_cfgs.fill_memory.cat_names $CAT_NAMES \\\n    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\\n    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\\n    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\\n    --trainer.devices 1\n```",
    "ContentSha": "wLZindeEKqrTUIIF55tL8lmaW4jWIZ2bdw6bj/1U9TU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython run_lightening.py test --config $YAML_PATH \\\n    --model.test_mode fill_memory \\\n    --out_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory.pth \\\n    --model.init_args.dataset_cfgs.fill_memory.root $DATASET_PATH/images \\\n    --model.init_args.dataset_cfgs.fill_memory.json_file $DATASET_PATH/annotations/custom_references_with_segm.json \\\n    --model.init_args.dataset_cfgs.fill_memory.memory_pkl $DATASET_PATH/annotations/custom_references_with_segm.pkl \\\n    --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOT \\\n    --model.init_args.dataset_cfgs.fill_memory.cat_names $CAT_NAMES \\\n    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\\n    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\\n    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\\n    --trainer.devices 1\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "3ETYk+lXCmWw9FFEJ+wILd+zQZjjy0tb7XEaA2ooWes=",
        "originContent": "python run_lightening.py test --config $YAML_PATH \\",
        "translatedContent": "python run_lightening.py test --config $YAML_PATH \\"
      },
      {
        "row": 3,
        "rowsha": "4kDefZj7Xm5fkgzQm1P1dBcvRNZ7ZKtsmsFU4x6XJXE=",
        "originContent": "    --model.test_mode fill_memory \\",
        "translatedContent": "    --model.test_mode fill_memory \\"
      },
      {
        "row": 4,
        "rowsha": "0mli+VvPvBzDp12pla/F2tuJkD6GtU62VvBvKmkgQ5E=",
        "originContent": "    --out_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory.pth \\",
        "translatedContent": "    --out_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory.pth \\"
      },
      {
        "row": 5,
        "rowsha": "+BumbXTQ220P4SshjpoA32nDp/jwiCWbKFKYVi5RYXc=",
        "originContent": "    --model.init_args.dataset_cfgs.fill_memory.root $DATASET_PATH/images \\",
        "translatedContent": "    --model.init_args.dataset_cfgs.fill_memory.root $DATASET_PATH/images \\"
      },
      {
        "row": 6,
        "rowsha": "0QT7QmjYkqhfRshvsrRJCFd1cBt2OEEaPr2ax0WhEPA=",
        "originContent": "    --model.init_args.dataset_cfgs.fill_memory.json_file $DATASET_PATH/annotations/custom_references_with_segm.json \\",
        "translatedContent": "    --model.init_args.dataset_cfgs.fill_memory.json_file $DATASET_PATH/annotations/custom_references_with_segm.json \\"
      },
      {
        "row": 7,
        "rowsha": "SWrctgl0L7Kdk4nV2WBDVityuZNXBo7ZP3vjpFq3q+Y=",
        "originContent": "    --model.init_args.dataset_cfgs.fill_memory.memory_pkl $DATASET_PATH/annotations/custom_references_with_segm.pkl \\",
        "translatedContent": "    --model.init_args.dataset_cfgs.fill_memory.memory_pkl $DATASET_PATH/annotations/custom_references_with_segm.pkl \\"
      },
      {
        "row": 8,
        "rowsha": "ajwBbsJuNblaKhLCmbsz4NzIAKPocJiMx8opaUw7JHc=",
        "originContent": "    --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOT \\",
        "translatedContent": "    --model.init_args.dataset_cfgs.fill_memory.memory_length $SHOT \\"
      },
      {
        "row": 9,
        "rowsha": "CMOv5nGBSogT0gO7wMGjvPW4XkomwTa82Tj0iD9Y3FQ=",
        "originContent": "    --model.init_args.dataset_cfgs.fill_memory.cat_names $CAT_NAMES \\",
        "translatedContent": "    --model.init_args.dataset_cfgs.fill_memory.cat_names $CAT_NAMES \\"
      },
      {
        "row": 10,
        "rowsha": "kjbTFgGn3Au3NL6CMgQDK2RpX6DraWPljNvBjaZwD/Q=",
        "originContent": "    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\",
        "translatedContent": "    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\"
      },
      {
        "row": 11,
        "rowsha": "I/do2Okczknn/9X/8y5Tan5Adh+bBdjM83mpNMTgU1Q=",
        "originContent": "    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\",
        "translatedContent": "    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\"
      },
      {
        "row": 12,
        "rowsha": "7Cn+uZ9khgahObEB4bul8QUBZse0UStnwto6jY94u64=",
        "originContent": "    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\",
        "translatedContent": "    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\"
      },
      {
        "row": 13,
        "rowsha": "MaGbj/BQoWys9ayvwnfa9LJa4GU85A541/zZC+Xlgzo=",
        "originContent": "    --trainer.devices 1",
        "translatedContent": "    --trainer.devices 1"
      },
      {
        "row": 14,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 34,
    "Content": "\n### 2. Post-process memory bank\n",
    "ContentSha": "39oOsuQIXM8TjT8ASLmZI0OpSbUSAT4d7YEHU7S2uqQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 2. Post-elaborazione della memoria di banco\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 2. Post-elaborazione della memoria di banco"
      },
      {
        "row": 2,
        "rowsha": "upu/IIO46Z0rr2jsRmGldSTJV3QFctSb/DgTPtXio6M=",
        "originContent": "### 2. Post-process memory bank",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 35,
    "Content": "```bash\npython run_lightening.py test --config $YAML_PATH \\\n    --model.test_mode postprocess_memory \\\n    --ckpt_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory.pth \\\n    --out_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory_postprocessed.pth \\\n    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\\n    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\\n    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\\n    --trainer.devices 1\n```",
    "ContentSha": "49JIaRecImNonhL7aGKB3JsAkgDw76Irci38QcuVb8k=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\npython run_lightening.py test --config $YAML_PATH \\\n    --model.test_mode postprocess_memory \\\n    --ckpt_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory.pth \\\n    --out_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory_postprocessed.pth \\\n    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\\n    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\\n    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\\n    --trainer.devices 1\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "3ETYk+lXCmWw9FFEJ+wILd+zQZjjy0tb7XEaA2ooWes=",
        "originContent": "python run_lightening.py test --config $YAML_PATH \\",
        "translatedContent": "python run_lightening.py test --config $YAML_PATH \\"
      },
      {
        "row": 3,
        "rowsha": "QyBvDr+4bNHf3YhnkI2tOdKG5Ir8unNUy84Oy7LLg44=",
        "originContent": "    --model.test_mode postprocess_memory \\",
        "translatedContent": "    --model.test_mode postprocess_memory \\"
      },
      {
        "row": 4,
        "rowsha": "j/l1HiCyheCHjgkpBW6m+KdI21vZf7mFvL0jDKI4veI=",
        "originContent": "    --ckpt_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory.pth \\",
        "translatedContent": "    --ckpt_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory.pth \\"
      },
      {
        "row": 5,
        "rowsha": "wAnBVDZ25p+aHkQ4F454ipbMJg95GkilCr1AcU9lnls=",
        "originContent": "    --out_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory_postprocessed.pth \\",
        "translatedContent": "    --out_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory_postprocessed.pth \\"
      },
      {
        "row": 6,
        "rowsha": "kjbTFgGn3Au3NL6CMgQDK2RpX6DraWPljNvBjaZwD/Q=",
        "originContent": "    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\",
        "translatedContent": "    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\"
      },
      {
        "row": 7,
        "rowsha": "I/do2Okczknn/9X/8y5Tan5Adh+bBdjM83mpNMTgU1Q=",
        "originContent": "    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\",
        "translatedContent": "    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\"
      },
      {
        "row": 8,
        "rowsha": "7Cn+uZ9khgahObEB4bul8QUBZse0UStnwto6jY94u64=",
        "originContent": "    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\",
        "translatedContent": "    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\"
      },
      {
        "row": 9,
        "rowsha": "MaGbj/BQoWys9ayvwnfa9LJa4GU85A541/zZC+Xlgzo=",
        "originContent": "    --trainer.devices 1",
        "translatedContent": "    --trainer.devices 1"
      },
      {
        "row": 10,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 36,
    "Content": "\n### 3. Inference on target images\n\nIf `ONLINE_VIS` is set to True, prediction results will be saved in `results_analysis/my_custom_dataset/` and displayed as they are computed. NOTE that running with online visualisation is much slower.\n\nFeel free to change the score threshold `VIS_THR` to see more or less segmented instances.",
    "ContentSha": "iHMIprXo8OKpw9IBp/bgaLDyjCzJT/6l87G6FkpcZcY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 3. Inferenza sulle immagini di destinazione\n\nSe `ONLINE_VIS` √® impostato su True, i risultati delle predizioni verranno salvati in `results_analysis/my_custom_dataset/` e visualizzati man mano che vengono calcolati. NOTA che l'esecuzione con la visualizzazione online √® molto pi√π lenta.\n\nSentiti libero di modificare la soglia di punteggio `VIS_THR` per visualizzare pi√π o meno istanze segmentate.\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 3. Inferenza sulle immagini di destinazione"
      },
      {
        "row": 2,
        "rowsha": "mgJPj3vIyTELe8bZmHn4RAZnA8e/rUDydk+y7d9nDPM=",
        "originContent": "### 3. Inference on target images",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Se `ONLINE_VIS` √® impostato su True, i risultati delle predizioni verranno salvati in `results_analysis/my_custom_dataset/` e visualizzati man mano che vengono calcolati. NOTA che l'esecuzione con la visualizzazione online √® molto pi√π lenta."
      },
      {
        "row": 4,
        "rowsha": "YM++GYWJ+d+mCXMS9tSUVlwWGrHkv3G/JLx27lurQ0U=",
        "originContent": "If `ONLINE_VIS` is set to True, prediction results will be saved in `results_analysis/my_custom_dataset/` and displayed as they are computed. NOTE that running with online visualisation is much slower.",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Sentiti libero di modificare la soglia di punteggio `VIS_THR` per visualizzare pi√π o meno istanze segmentate."
      },
      {
        "row": 6,
        "rowsha": "XNhHBadyh3RCBpAmQ14NYnkh3kQ6nLbAWUU5I0lwtn8=",
        "originContent": "Feel free to change the score threshold `VIS_THR` to see more or less segmented instances.",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 37,
    "Content": "```bash\nONLINE_VIS=True\nVIS_THR=0.4\npython run_lightening.py test --config $YAML_PATH \\\n    --model.test_mode test \\\n    --ckpt_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory_postprocessed.pth \\\n    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\\n    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\\n    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\\n    --model.init_args.model_cfg.test.imgs_path $DATASET_PATH/images \\\n    --model.init_args.model_cfg.test.online_vis $ONLINE_VIS \\\n    --model.init_args.model_cfg.test.vis_thr $VIS_THR \\\n    --model.init_args.dataset_cfgs.test.root $DATASET_PATH/images \\\n    --model.init_args.dataset_cfgs.test.json_file $DATASET_PATH/annotations/custom_targets.json \\\n    --model.init_args.dataset_cfgs.test.cat_names $CAT_NAMES \\\n    --trainer.devices 1\n```",
    "ContentSha": "WwpzFHhc6G71aipZFN/unoGoH913SXlW3RG98ipcK1k=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nONLINE_VIS=True\nVIS_THR=0.4\npython run_lightening.py test --config $YAML_PATH \\\n    --model.test_mode test \\\n    --ckpt_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory_postprocessed.pth \\\n    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\\n    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\\n    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\\n    --model.init_args.model_cfg.test.imgs_path $DATASET_PATH/images \\\n    --model.init_args.model_cfg.test.online_vis $ONLINE_VIS \\\n    --model.init_args.model_cfg.test.vis_thr $VIS_THR \\\n    --model.init_args.dataset_cfgs.test.root $DATASET_PATH/images \\\n    --model.init_args.dataset_cfgs.test.json_file $DATASET_PATH/annotations/custom_targets.json \\\n    --model.init_args.dataset_cfgs.test.cat_names $CAT_NAMES \\\n    --trainer.devices 1\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "WGBcZd0zRa3Ndb3B4Cto8FPNk/RHWaed8uTC0ML3O4E=",
        "originContent": "ONLINE_VIS=True",
        "translatedContent": "ONLINE_VIS=True"
      },
      {
        "row": 3,
        "rowsha": "5krZ6VW/qgaw+QJQLN5hJQeJBeEPGNkDgEgEnhoM4mw=",
        "originContent": "VIS_THR=0.4",
        "translatedContent": "VIS_THR=0.4"
      },
      {
        "row": 4,
        "rowsha": "3ETYk+lXCmWw9FFEJ+wILd+zQZjjy0tb7XEaA2ooWes=",
        "originContent": "python run_lightening.py test --config $YAML_PATH \\",
        "translatedContent": "python run_lightening.py test --config $YAML_PATH \\"
      },
      {
        "row": 5,
        "rowsha": "6w8acAVxmW7hu9y95om5xWKcLu2wjXlXl2dvcLUEcJs=",
        "originContent": "    --model.test_mode test \\",
        "translatedContent": "    --model.test_mode test \\"
      },
      {
        "row": 6,
        "rowsha": "YaLMccWSufRiTsk+GoOYdBhkbklyP1j280Pi7lKtRsc=",
        "originContent": "    --ckpt_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory_postprocessed.pth \\",
        "translatedContent": "    --ckpt_path $PATH_TO_SAVE_CKPTS/$DATASET_NAME\\_$SHOT\\_refs_memory_postprocessed.pth \\"
      },
      {
        "row": 7,
        "rowsha": "kjbTFgGn3Au3NL6CMgQDK2RpX6DraWPljNvBjaZwD/Q=",
        "originContent": "    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\",
        "translatedContent": "    --model.init_args.model_cfg.dataset_name $DATASET_NAME \\"
      },
      {
        "row": 8,
        "rowsha": "I/do2Okczknn/9X/8y5Tan5Adh+bBdjM83mpNMTgU1Q=",
        "originContent": "    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\",
        "translatedContent": "    --model.init_args.model_cfg.memory_bank_cfg.length $SHOT \\"
      },
      {
        "row": 9,
        "rowsha": "7Cn+uZ9khgahObEB4bul8QUBZse0UStnwto6jY94u64=",
        "originContent": "    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\",
        "translatedContent": "    --model.init_args.model_cfg.memory_bank_cfg.category_num $CATEGORY_NUM \\"
      },
      {
        "row": 10,
        "rowsha": "luARnBY3BdQKfvDusc5C+VfQhcBp8V+BVmLwiEPTKUo=",
        "originContent": "    --model.init_args.model_cfg.test.imgs_path $DATASET_PATH/images \\",
        "translatedContent": "    --model.init_args.model_cfg.test.imgs_path $DATASET_PATH/images \\"
      },
      {
        "row": 11,
        "rowsha": "qpyoXKVz4RnbnZze2KL2RjK0gSRWXt95oJNaBZD1bEM=",
        "originContent": "    --model.init_args.model_cfg.test.online_vis $ONLINE_VIS \\",
        "translatedContent": "    --model.init_args.model_cfg.test.online_vis $ONLINE_VIS \\"
      },
      {
        "row": 12,
        "rowsha": "fUMz1/fQEXaiRX4hCGfE9N4arkvkD6rOicTSB9VWcYk=",
        "originContent": "    --model.init_args.model_cfg.test.vis_thr $VIS_THR \\",
        "translatedContent": "    --model.init_args.model_cfg.test.vis_thr $VIS_THR \\"
      },
      {
        "row": 13,
        "rowsha": "MoOZFYQa8Ag3kZ6divllxD5zm5yN4Gy/uIxZnvqp3PY=",
        "originContent": "    --model.init_args.dataset_cfgs.test.root $DATASET_PATH/images \\",
        "translatedContent": "    --model.init_args.dataset_cfgs.test.root $DATASET_PATH/images \\"
      },
      {
        "row": 14,
        "rowsha": "RlD6aIIFbFSEhvLLIrzzrLEqZn7WK4nDxdeTjxg79Ig=",
        "originContent": "    --model.init_args.dataset_cfgs.test.json_file $DATASET_PATH/annotations/custom_targets.json \\",
        "translatedContent": "    --model.init_args.dataset_cfgs.test.json_file $DATASET_PATH/annotations/custom_targets.json \\"
      },
      {
        "row": 15,
        "rowsha": "ZtDMUaUxLXPpBBFvIym+KRaiUQ0Dbpk4jECkukD+kH4=",
        "originContent": "    --model.init_args.dataset_cfgs.test.cat_names $CAT_NAMES \\",
        "translatedContent": "    --model.init_args.dataset_cfgs.test.cat_names $CAT_NAMES \\"
      },
      {
        "row": 16,
        "rowsha": "MaGbj/BQoWys9ayvwnfa9LJa4GU85A541/zZC+Xlgzo=",
        "originContent": "    --trainer.devices 1",
        "translatedContent": "    --trainer.devices 1"
      },
      {
        "row": 17,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 38,
    "Content": "\n### Results\n\nPerformance metrics (with the exact same parameters as commands above) should be:\n",
    "ContentSha": "qUh629YPJLLYOXeHGSusGSWIYdfgfMGmHPttF+Zq0tU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Risultati\n\nLe metriche di prestazione (con gli stessi parametri esatti dei comandi sopra) dovrebbero essere:\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Risultati"
      },
      {
        "row": 2,
        "rowsha": "jhspU0cfIrqZXP0RXR/N+zf19GzZOz2btpytEUOWO7k=",
        "originContent": "### Results",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Le metriche di prestazione (con gli stessi parametri esatti dei comandi sopra) dovrebbero essere:"
      },
      {
        "row": 4,
        "rowsha": "/kQoe5fFRtSQPzT1XVVVB4OxEPdeZPjv1dOcFl09Ejg=",
        "originContent": "Performance metrics (with the exact same parameters as commands above) should be:",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 39,
    "Content": "```\nBBOX RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.478\n\nSEGM RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.458\n```",
    "ContentSha": "EqM8BsGgWhI+q5ZgXp4DOk8Wayw3iQnYToBVZntlyVI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nBBOX RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.478\n\nSEGM RESULTS:\n  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.458\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "6+SoG/C1LE1K2E2idRgo0wLiNXuHXa/uEvPdviqcZF4=",
        "originContent": "BBOX RESULTS:",
        "translatedContent": "BBOX RESULTS:"
      },
      {
        "row": 3,
        "rowsha": "w8vlcB9XTHgq9vJyE0FCA448H6vTy83RQ9Yx/uLjpqI=",
        "originContent": "  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.478",
        "translatedContent": "  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.478"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "z0XrQxBw6OrQM75a+IP8wO/pxxz5u27bzwWBQpAjoD8=",
        "originContent": "SEGM RESULTS:",
        "translatedContent": "SEGM RESULTS:"
      },
      {
        "row": 6,
        "rowsha": "d6JczVoefzJ6rfZBm3pZwOAipILEFggtbky+LaE2KeI=",
        "originContent": "  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.458",
        "translatedContent": "  Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.458"
      },
      {
        "row": 7,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 40,
    "Content": "\nVisual results are saved in `results_analysis/my_custom_dataset/`. Note that our method works for false negatives, that is, images that do not contain any instances of the desired classes.\n\n*Click images to enlarge ‚¨áÔ∏è*\n\n| Target image with boats ‚õµ (left GT, right predictions) | Target image with birds üê¶ (left GT, right predictions) |\n|:----------------------:|:----------------------:|\n| ![000000459673](https://github.com/user-attachments/assets/678dc15a-dd3b-49d5-9287-6290da16aa6b) | ![000000407180](https://github.com/user-attachments/assets/fe306e48-af49-4d83-ac82-76fac6c456d1) |\n\n| Target image with boats and birds ‚õµüê¶ (left GT, right predictions) | Target image without boats or birds üö´ (left GT, right predictions) |\n|:---------------------------------:|:----------------------------------:|\n| ![000000517410](https://github.com/user-attachments/assets/9849b227-7f43-43d7-81ea-58010a623ad5) | ![000000460598](https://github.com/user-attachments/assets/7587700c-e09d-4cf6-8590-3df129c2568e) |\n\n\n## üìö Citation\n\nIf you use this work, please cite us:\n",
    "ContentSha": "tEYR4ra1661R2TKfAxblzhr7EHrPwy5JI69dHQuD/mM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "I risultati visivi sono salvati in `results_analysis/my_custom_dataset/`. Nota che il nostro metodo funziona per i falsi negativi, cio√® immagini che non contengono istanze delle classi desiderate.\n\n*Clicca sulle immagini per ingrandirle ‚¨áÔ∏è*\n\n| Immagine target con barche ‚õµ (sinistra GT, destra predizioni) | Immagine target con uccelli üê¶ (sinistra GT, destra predizioni) |\n|:----------------------:|:----------------------:|\n| ![000000459673](https://github.com/user-attachments/assets/678dc15a-dd3b-49d5-9287-6290da16aa6b) | ![000000407180](https://github.com/user-attachments/assets/fe306e48-af49-4d83-ac82-76fac6c456d1) |\n\n| Immagine target con barche e uccelli ‚õµüê¶ (sinistra GT, destra predizioni) | Immagine target senza barche n√© uccelli üö´ (sinistra GT, destra predizioni) |\n|:---------------------------------:|:----------------------------------:|\n| ![000000517410](https://github.com/user-attachments/assets/9849b227-7f43-43d7-81ea-58010a623ad5) | ![000000460598](https://github.com/user-attachments/assets/7587700c-e09d-4cf6-8590-3df129c2568e) |\n\n\n## üìö Citazione\n\nSe utilizzi questo lavoro, per favore citaci:\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "I risultati visivi sono salvati in `results_analysis/my_custom_dataset/`. Nota che il nostro metodo funziona per i falsi negativi, cio√® immagini che non contengono istanze delle classi desiderate."
      },
      {
        "row": 2,
        "rowsha": "X46RkLr0xc4fVjLsh3+5n8+/o0lr6QyO+L9nSKBQV4Q=",
        "originContent": "Visual results are saved in `results_analysis/my_custom_dataset/`. Note that our method works for false negatives, that is, images that do not contain any instances of the desired classes.",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "*Clicca sulle immagini per ingrandirle ‚¨áÔ∏è*"
      },
      {
        "row": 4,
        "rowsha": "t/iH8aob7BF4fK0x2yCZG35WiObn34Cfeu7hiJbgixc=",
        "originContent": "*Click images to enlarge ‚¨áÔ∏è*",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "| Immagine target con barche ‚õµ (sinistra GT, destra predizioni) | Immagine target con uccelli üê¶ (sinistra GT, destra predizioni) |"
      },
      {
        "row": 6,
        "rowsha": "09LoW5/+HmQNNuv1HsyGDqI3jHJ/MgBDaBYzA1yCE/E=",
        "originContent": "| Target image with boats ‚õµ (left GT, right predictions) | Target image with birds üê¶ (left GT, right predictions) |",
        "translatedContent": "|:----------------------:|:----------------------:|"
      },
      {
        "row": 7,
        "rowsha": "IyklCY0MeEF5waQpoeIBXzM/xEOVgPeD+sMcc0cJ43c=",
        "originContent": "|:----------------------:|:----------------------:|",
        "translatedContent": "| ![000000459673](https://github.com/user-attachments/assets/678dc15a-dd3b-49d5-9287-6290da16aa6b) | ![000000407180](https://github.com/user-attachments/assets/fe306e48-af49-4d83-ac82-76fac6c456d1) |"
      },
      {
        "row": 8,
        "rowsha": "S9X1i0oxN25rLsl/h4T6JYjbn9NU2A66fFBAWLKA02A=",
        "originContent": "| ![000000459673](https://github.com/user-attachments/assets/678dc15a-dd3b-49d5-9287-6290da16aa6b) | ![000000407180](https://github.com/user-attachments/assets/fe306e48-af49-4d83-ac82-76fac6c456d1) |",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "| Immagine target con barche e uccelli ‚õµüê¶ (sinistra GT, destra predizioni) | Immagine target senza barche n√© uccelli üö´ (sinistra GT, destra predizioni) |"
      },
      {
        "row": 10,
        "rowsha": "T/Pj5KdGgDtayeKEULK4RM6IqAEBd2mYLdQVCnMy+L4=",
        "originContent": "| Target image with boats and birds ‚õµüê¶ (left GT, right predictions) | Target image without boats or birds üö´ (left GT, right predictions) |",
        "translatedContent": "|:---------------------------------:|:----------------------------------:|"
      },
      {
        "row": 11,
        "rowsha": "Y4n1UyevjWImE7udUo5tuu0S6hg7rtv9TgjCNanLYb4=",
        "originContent": "|:---------------------------------:|:----------------------------------:|",
        "translatedContent": "| ![000000517410](https://github.com/user-attachments/assets/9849b227-7f43-43d7-81ea-58010a623ad5) | ![000000460598](https://github.com/user-attachments/assets/7587700c-e09d-4cf6-8590-3df129c2568e) |"
      },
      {
        "row": 12,
        "rowsha": "tY6JoJEP1n5BpauHog+mbMDA8PEYokCeLx4tf42PH5U=",
        "originContent": "| ![000000517410](https://github.com/user-attachments/assets/9849b227-7f43-43d7-81ea-58010a623ad5) | ![000000460598](https://github.com/user-attachments/assets/7587700c-e09d-4cf6-8590-3df129c2568e) |",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## üìö Citazione"
      },
      {
        "row": 15,
        "rowsha": "+Uq50qMMSSaMQjIFg9QwW/hlCfK8kXMzFuQeuRAioXU=",
        "originContent": "## üìö Citation",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Se utilizzi questo lavoro, per favore citaci:"
      },
      {
        "row": 17,
        "rowsha": "Sdz+BhK182S5kd+RgeXS3+k84ZIkUnXbkzFXsei1Tl0=",
        "originContent": "If you use this work, please cite us:",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 41,
    "Content": "```bibtex\n@article{espinosa2025notimetotrain,\n  title={No time to train! Training-Free Reference-Based Instance Segmentation},\n  author={Miguel Espinosa and Chenhongyi Yang and Linus Ericsson and Steven McDonagh and Elliot J. Crowley},\n  journal={arXiv preprint arXiv:2507.02798},\n  year={2025},\n  primaryclass={cs.CV}\n}\n```",
    "ContentSha": "wkySuPRHWTRGorn0rwSBqyUnW5RNg9LVe0O7npcbKSs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bibtex\n@article{espinosa2025notimetotrain,\n  title={No time to train! Training-Free Reference-Based Instance Segmentation},\n  author={Miguel Espinosa and Chenhongyi Yang and Linus Ericsson and Steven McDonagh and Elliot J. Crowley},\n  journal={arXiv preprint arXiv:2507.02798},\n  year={2025},\n  primaryclass={cs.CV}\n}\n```",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": true
  },
  {
    "Id": 42,
    "Content": "",
    "ContentSha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "",
    "Status": "ok",
    "RowTranslations": [],
    "IsCodeBlock": false
  }
]