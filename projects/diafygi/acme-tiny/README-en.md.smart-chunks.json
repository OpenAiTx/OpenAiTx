[
  {
    "Id": 1,
    "Content": "# acme-tiny\n\n[![Tests](https://github.com/diafygi/acme-tiny/actions/workflows/full-tests-with-coverage.yml/badge.svg?branch=main)](https://github.com/diafygi/acme-tiny/actions/workflows/full-tests-with-coverage.yml)\n[![Coverage Status](https://coveralls.io/repos/github/diafygi/acme-tiny/badge.svg?branch=main)](https://coveralls.io/github/diafygi/acme-tiny?branch=main)\n\nThis is a tiny, auditable script that you can throw on your server to issue\nand renew [Let's Encrypt](https://letsencrypt.org/) certificates. Since it has\nto be run on your server and have access to your private Let's Encrypt account\nkey, I tried to make it as tiny as possible (currently less than 200 lines).\nThe only prerequisites are python and openssl.\n\n**PLEASE READ THE SOURCE CODE! YOU MUST TRUST IT WITH YOUR PRIVATE ACCOUNT KEY!**\n\n## Donate\n\nIf this script is useful to you, please donate to the EFF. I don't work there,\nbut they do fantastic work.\n\n[https://eff.org/donate/](https://eff.org/donate/)\n\n## How to use this script\n\nIf you already have a Let's Encrypt issued certificate and just want to renew,\nyou should only have to do Steps 3 and 6.\n\n### Step 1: Create a Let's Encrypt account private key (if you haven't already)\n\nYou must have a public key registered with Let's Encrypt and sign your requests\nwith the corresponding private key. If you don't understand what I just said,\nthis script likely isn't for you! Please use the official Let's Encrypt\n[client](https://github.com/letsencrypt/letsencrypt).\nTo accomplish this you need to initially create a key, that can be used by\nacme-tiny, to register an account for you and sign all following requests.\n",
    "ContentSha": "9g4I9OCse0H73RegEIefPzie9hwH1rwthC59oN/bRMM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<translate-content># acme-tiny\n\n[![Tests](https://github.com/diafygi/acme-tiny/actions/workflows/full-tests-with-coverage.yml/badge.svg?branch=main)](https://github.com/diafygi/acme-tiny/actions/workflows/full-tests-with-coverage.yml)\n[![Coverage Status](https://coveralls.io/repos/github/diafygi/acme-tiny/badge.svg?branch=main)](https://coveralls.io/github/diafygi/acme-tiny?branch=main)\n\nThis is a tiny, auditable script that you can throw on your server to issue\nand renew [Let's Encrypt](https://letsencrypt.org/) certificates. Since it has\nto be run on your server and have access to your private Let's Encrypt account\nkey, I tried to make it as tiny as possible (currently less than 200 lines).\nThe only prerequisites are python and openssl.\n\n**PLEASE READ THE SOURCE CODE! YOU MUST TRUST IT WITH YOUR PRIVATE ACCOUNT KEY!**\n\n## Donate\n\nIf this script is useful to you, please donate to the EFF. I don't work there,\nbut they do fantastic work.\n\n[https://eff.org/donate/](https://eff.org/donate/)\n\n## How to use this script\n\nIf you already have a Let's Encrypt issued certificate and just want to renew,\nyou should only have to do Steps 3 and 6.\n\n### Step 1: Create a Let's Encrypt account private key (if you haven't already)\n\nYou must have a public key registered with Let's Encrypt and sign your requests\nwith the corresponding private key. If you don't understand what I just said,\nthis script likely isn't for you! Please use the official Let's Encrypt\n[client](https://github.com/letsencrypt/letsencrypt).\nTo accomplish this you need to initially create a key, that can be used by\nacme-tiny, to register an account for you and sign all following requests.\n</translate-content>",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "DmlefAtuppBgLnp/6undjKPNqJ8BL2fhS2FjWgWRP5Y=",
        "originContent": "# acme-tiny",
        "translatedContent": "<translate-content># acme-tiny"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "cA4mL+F5XPFPqXpWp8yPVYLYicXWXRllIvd5/b1k0/Y=",
        "originContent": "[![Tests](https://github.com/diafygi/acme-tiny/actions/workflows/full-tests-with-coverage.yml/badge.svg?branch=main)](https://github.com/diafygi/acme-tiny/actions/workflows/full-tests-with-coverage.yml)",
        "translatedContent": "[![Tests](https://github.com/diafygi/acme-tiny/actions/workflows/full-tests-with-coverage.yml/badge.svg?branch=main)](https://github.com/diafygi/acme-tiny/actions/workflows/full-tests-with-coverage.yml)"
      },
      {
        "row": 4,
        "rowsha": "uDgJD/l3gCwSv+0Zw82nYB6ba5blRaPVb2wQ7jnsw2U=",
        "originContent": "[![Coverage Status](https://coveralls.io/repos/github/diafygi/acme-tiny/badge.svg?branch=main)](https://coveralls.io/github/diafygi/acme-tiny?branch=main)",
        "translatedContent": "[![Coverage Status](https://coveralls.io/repos/github/diafygi/acme-tiny/badge.svg?branch=main)](https://coveralls.io/github/diafygi/acme-tiny?branch=main)"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "AWKRbEcNqBsq4xz5oMnABgUYOnxRp40WoN3lkQeOtgk=",
        "originContent": "This is a tiny, auditable script that you can throw on your server to issue",
        "translatedContent": "This is a tiny, auditable script that you can throw on your server to issue"
      },
      {
        "row": 7,
        "rowsha": "t3zgOxnIIRitx65PC+cGjyf1Y1i5THR3JPdOI/XbhJM=",
        "originContent": "and renew [Let's Encrypt](https://letsencrypt.org/) certificates. Since it has",
        "translatedContent": "and renew [Let's Encrypt](https://letsencrypt.org/) certificates. Since it has"
      },
      {
        "row": 8,
        "rowsha": "hhFRfqhOd5yeDFVSpdEHdFbNOA+9ZcSKhbz2EmC9vTE=",
        "originContent": "to be run on your server and have access to your private Let's Encrypt account",
        "translatedContent": "to be run on your server and have access to your private Let's Encrypt account"
      },
      {
        "row": 9,
        "rowsha": "THAYTbaHHjzPDVTai0fZwYz/AsPUca0pWroGRyYQzEw=",
        "originContent": "key, I tried to make it as tiny as possible (currently less than 200 lines).",
        "translatedContent": "key, I tried to make it as tiny as possible (currently less than 200 lines)."
      },
      {
        "row": 10,
        "rowsha": "h8psHfp+QWmJ8TKhmDT3Ytg6b7z/TQuMuWBwKPOJmes=",
        "originContent": "The only prerequisites are python and openssl.",
        "translatedContent": "The only prerequisites are python and openssl."
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "Fs6hYXS6GY1DxHv8hFWBJ7SxyaUsmEV7ea/YqdN0Un8=",
        "originContent": "**PLEASE READ THE SOURCE CODE! YOU MUST TRUST IT WITH YOUR PRIVATE ACCOUNT KEY!**",
        "translatedContent": "**PLEASE READ THE SOURCE CODE! YOU MUST TRUST IT WITH YOUR PRIVATE ACCOUNT KEY!**"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "FNvaJIRsvZSjSfd1AKN5t1DSohP4YV++BeEW/C1EOJY=",
        "originContent": "## Donate",
        "translatedContent": "## Donate"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "hQImBRpkDSLdWvseyEH5iHGN/0qWdTzSn+WikhwS4vc=",
        "originContent": "If this script is useful to you, please donate to the EFF. I don't work there,",
        "translatedContent": "If this script is useful to you, please donate to the EFF. I don't work there,"
      },
      {
        "row": 17,
        "rowsha": "5i8toinVS84N1z94Vx75JPdx79JX6JZKLzQs7f45a7M=",
        "originContent": "but they do fantastic work.",
        "translatedContent": "but they do fantastic work."
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "Oo++vnu9Lra8O3uibE5jlQy0LeHoXzS1yL3sci05Q9w=",
        "originContent": "[https://eff.org/donate/](https://eff.org/donate/)",
        "translatedContent": "[https://eff.org/donate/](https://eff.org/donate/)"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "8LqRwR5xPi6TNykCgjacJMsUmVQKVcLmHS/4FP4LYBc=",
        "originContent": "## How to use this script",
        "translatedContent": "## How to use this script"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "XH/tP8PfpXbk0raisrByZwlbBbM+jhA14QaYwZYXQ90=",
        "originContent": "If you already have a Let's Encrypt issued certificate and just want to renew,",
        "translatedContent": "If you already have a Let's Encrypt issued certificate and just want to renew,"
      },
      {
        "row": 24,
        "rowsha": "CBLYpDC/6578r00mmaCnDAh9czbTwQeGnXzjDYE1xuw=",
        "originContent": "you should only have to do Steps 3 and 6.",
        "translatedContent": "you should only have to do Steps 3 and 6."
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "IVDglroyN2y8SDyZ3B13hk0kRSq95Cbc9W9n+qP44mY=",
        "originContent": "### Step 1: Create a Let's Encrypt account private key (if you haven't already)",
        "translatedContent": "### Step 1: Create a Let's Encrypt account private key (if you haven't already)"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "usjLWP9PpdEq/PruADJmoHFvF0gIMz4kLEPyM/dC+U4=",
        "originContent": "You must have a public key registered with Let's Encrypt and sign your requests",
        "translatedContent": "You must have a public key registered with Let's Encrypt and sign your requests"
      },
      {
        "row": 29,
        "rowsha": "7CTy4bhfTaWV0WHxmYKRuIyFDIZ3HLiTVk/FJsy+pHM=",
        "originContent": "with the corresponding private key. If you don't understand what I just said,",
        "translatedContent": "with the corresponding private key. If you don't understand what I just said,"
      },
      {
        "row": 30,
        "rowsha": "35/+8S2Utps+JVKS7yRokAb4DWgYE2hVFWKOs8Ssg/s=",
        "originContent": "this script likely isn't for you! Please use the official Let's Encrypt",
        "translatedContent": "this script likely isn't for you! Please use the official Let's Encrypt"
      },
      {
        "row": 31,
        "rowsha": "y49exrFlgoqNXEktvNNG3tWN99wccHyut9Fj8nGHwKk=",
        "originContent": "[client](https://github.com/letsencrypt/letsencrypt).",
        "translatedContent": "[client](https://github.com/letsencrypt/letsencrypt)."
      },
      {
        "row": 32,
        "rowsha": "HUNuS0xGRa+Tcs7FYT8SmA2SSGwl0AdW0nMquKoWlMs=",
        "originContent": "To accomplish this you need to initially create a key, that can be used by",
        "translatedContent": "To accomplish this you need to initially create a key, that can be used by"
      },
      {
        "row": 33,
        "rowsha": "zTt2wAGo5TasGhsH/9Sf2VxIymzO3Z6Xsie4ITXaGJo=",
        "originContent": "acme-tiny, to register an account for you and sign all following requests.",
        "translatedContent": "acme-tiny, to register an account for you and sign all following requests."
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "</translate-content>"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "```\nopenssl genrsa 4096 > account.key\n```",
    "ContentSha": "UCjHIUhY8T7jfPniUYwV2XMUL+1U3Gk22ZEKJrYKsjw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nopenssl genrsa 4096 > account.key\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "zMv/7mg7Sd+BGSI8glk5vtt/BX8aO4SsVKDckZ+ZUR4=",
        "originContent": "openssl genrsa 4096 > account.key",
        "translatedContent": "openssl genrsa 4096 > account.key"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 3,
    "Content": "\n#### Use existing Let's Encrypt key\n\nAlternatively you can convert your key, previously generated by the original\nLet's Encrypt client.\n\nThe private account key from the Let's Encrypt client is saved in the\n[JWK](https://tools.ietf.org/html/rfc7517) format. `acme-tiny` is using the PEM\nkey format. To convert the key, you can use the tool\n[conversion script](https://gist.github.com/JonLundy/f25c99ee0770e19dc595) by JonLundy:\n",
    "ContentSha": "U8Q6w4FRVvbmw8XO9EPuZ4jgDQ/XxEuI/WHt9/G046M=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "#### Use existing Let's Encrypt key\n\nAlternatively you can convert your key, previously generated by the original\nLet's Encrypt client.\n\nThe private account key from the Let's Encrypt client is saved in the\n[JWK](https://tools.ietf.org/html/rfc7517) format. `acme-tiny` is using the PEM\nkey format. To convert the key, you can use the tool\n[conversion script](https://gist.github.com/JonLundy/f25c99ee0770e19dc595) by JonLundy:\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "#### Use existing Let's Encrypt key"
      },
      {
        "row": 2,
        "rowsha": "MjamqRCV2c3yenmFFRLGN5i0HOuyzBb6pOBAZuw8low=",
        "originContent": "#### Use existing Let's Encrypt key",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Alternatively you can convert your key, previously generated by the original"
      },
      {
        "row": 4,
        "rowsha": "OP3Br82XWdo5/yleewF7a4O2fzVQ5jlej7y5ink81IE=",
        "originContent": "Alternatively you can convert your key, previously generated by the original",
        "translatedContent": "Let's Encrypt client."
      },
      {
        "row": 5,
        "rowsha": "ZKZkbkXcuI5gP38gnu7PVcT0q8ctDnZpyFE/QyAQK5Q=",
        "originContent": "Let's Encrypt client.",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "The private account key from the Let's Encrypt client is saved in the"
      },
      {
        "row": 7,
        "rowsha": "aMeY6+bjPoIL5hl02XoLzilNujYl5FznPeaycDO0o5w=",
        "originContent": "The private account key from the Let's Encrypt client is saved in the",
        "translatedContent": "[JWK](https://tools.ietf.org/html/rfc7517) format. `acme-tiny` is using the PEM"
      },
      {
        "row": 8,
        "rowsha": "6p0eWN8H1GyGRAdRNIOOTfDP8J3cQXF2XukP5t1c3xc=",
        "originContent": "[JWK](https://tools.ietf.org/html/rfc7517) format. `acme-tiny` is using the PEM",
        "translatedContent": "key format. To convert the key, you can use the tool"
      },
      {
        "row": 9,
        "rowsha": "Kr6llqM5E2/yRPY5rRE2XW8ktA4VUmPeZpYjBJycwkE=",
        "originContent": "key format. To convert the key, you can use the tool",
        "translatedContent": "[conversion script](https://gist.github.com/JonLundy/f25c99ee0770e19dc595) by JonLundy:"
      },
      {
        "row": 10,
        "rowsha": "IBEX8A2nc/lpkzwqn3t8DNEJjjIdkd4xZZ3cm6i6Qi4=",
        "originContent": "[conversion script](https://gist.github.com/JonLundy/f25c99ee0770e19dc595) by JonLundy:",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "```sh\n# Download the script\nwget -O - \"https://gist.githubusercontent.com/JonLundy/f25c99ee0770e19dc595/raw/6035c1c8938fae85810de6aad1ecf6e2db663e26/conv.py\" > conv.py\n\n# Copy your private key to your working directory\ncp /etc/letsencrypt/accounts/acme-v01.api.letsencrypt.org/directory/<id>/private_key.json private_key.json\n\n# Create a DER encoded private key\nopenssl asn1parse -noout -out private_key.der -genconf <(python2 conv.py private_key.json)\n\n# Convert to PEM\nopenssl rsa -in private_key.der -inform der > account.key\n```",
    "ContentSha": "tJMWMmy8gqRoZD+AKgBzWkgjwX32VOtt5SvTx0nPgG8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```sh\n# Download the script\nwget -O - \"https://gist.githubusercontent.com/JonLundy/f25c99ee0770e19dc595/raw/6035c1c8938fae85810de6aad1ecf6e2db663e26/conv.py\" > conv.py\n\n# Copy your private key to your working directory\ncp /etc/letsencrypt/accounts/acme-v01.api.letsencrypt.org/directory/<id>/private_key.json private_key.json\n\n# Create a DER encoded private key\nopenssl asn1parse -noout -out private_key.der -genconf <(python2 conv.py private_key.json)\n\n# Convert to PEM\nopenssl rsa -in private_key.der -inform der > account.key\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "ivgYKrHo9QnPgZYRA645sKpipVpw39MbuUN0CN9LfCA=",
        "originContent": "```sh",
        "translatedContent": "```sh"
      },
      {
        "row": 2,
        "rowsha": "C52eZIrDNIY/Iu1yzqudDjJWR3I5dt9h1jFkhIOB1eU=",
        "originContent": "# Download the script",
        "translatedContent": "# Download the script"
      },
      {
        "row": 3,
        "rowsha": "MA9jbYjwf+uBW8k6pS7uhcxsbiNLrnaXAuCEuFxZ/Dk=",
        "originContent": "wget -O - \"https://gist.githubusercontent.com/JonLundy/f25c99ee0770e19dc595/raw/6035c1c8938fae85810de6aad1ecf6e2db663e26/conv.py\" > conv.py",
        "translatedContent": "wget -O - \"https://gist.githubusercontent.com/JonLundy/f25c99ee0770e19dc595/raw/6035c1c8938fae85810de6aad1ecf6e2db663e26/conv.py\" > conv.py"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "R/3yCcj0Ylwc6CXyVjP4JEaGCa7ZFq7wYtWa7VC3tYI=",
        "originContent": "# Copy your private key to your working directory",
        "translatedContent": "# Copy your private key to your working directory"
      },
      {
        "row": 6,
        "rowsha": "LigU+gMay8E9RtVt8vQPBvJzAh+KobF/A+UEn4w8Xcc=",
        "originContent": "cp /etc/letsencrypt/accounts/acme-v01.api.letsencrypt.org/directory/<id>/private_key.json private_key.json",
        "translatedContent": "cp /etc/letsencrypt/accounts/acme-v01.api.letsencrypt.org/directory/<id>/private_key.json private_key.json"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "A34ASeQ91kEMxTXm8b4R5V30v5K2Vmpje7C5pEuzv1E=",
        "originContent": "# Create a DER encoded private key",
        "translatedContent": "# Create a DER encoded private key"
      },
      {
        "row": 9,
        "rowsha": "GPqPq3CXrf7GZDTWwN2QKcz+JZsgev69zXRZdEzmMUk=",
        "originContent": "openssl asn1parse -noout -out private_key.der -genconf <(python2 conv.py private_key.json)",
        "translatedContent": "openssl asn1parse -noout -out private_key.der -genconf <(python2 conv.py private_key.json)"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "ZCec4FBsCQN73YRtL18WL9vz0qzv5WSEpZjXc9YTlVA=",
        "originContent": "# Convert to PEM",
        "translatedContent": "# Convert to PEM"
      },
      {
        "row": 12,
        "rowsha": "50SRjCCMyDUDz9PvJ1EWlHV1wIVTl+4ZCc5/PHkidtE=",
        "originContent": "openssl rsa -in private_key.der -inform der > account.key",
        "translatedContent": "openssl rsa -in private_key.der -inform der > account.key"
      },
      {
        "row": 13,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 5,
    "Content": "\n### Step 2: Create a certificate signing request (CSR) for your domains.\n\nThe ACME protocol (what Let's Encrypt uses) requires a CSR file to be submitted\nto it, even for renewals. You can use the same CSR for multiple renewals. NOTE:\nyou can't use your account private key as your domain private key!\n",
    "ContentSha": "0uiw6TkLiLu/5wwrEPyAeu80mk+Q4g0jlrGDY6MLjwQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Step 2: Create a certificate signing request (CSR) for your domains.\n\nThe ACME protocol (what Let's Encrypt uses) requires a CSR file to be submitted\nto it, even for renewals. You can use the same CSR for multiple renewals. NOTE:\nyou can't use your account private key as your domain private key!\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Step 2: Create a certificate signing request (CSR) for your domains."
      },
      {
        "row": 2,
        "rowsha": "VMilB2B9CO54VFiBMgbZr1uLW6MkO5fi2UENSdGh2yQ=",
        "originContent": "### Step 2: Create a certificate signing request (CSR) for your domains.",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "The ACME protocol (what Let's Encrypt uses) requires a CSR file to be submitted"
      },
      {
        "row": 4,
        "rowsha": "P71buASwvz1pxPvvUcPeVr+4X1+mzgpHQbAAICxuvLs=",
        "originContent": "The ACME protocol (what Let's Encrypt uses) requires a CSR file to be submitted",
        "translatedContent": "to it, even for renewals. You can use the same CSR for multiple renewals. NOTE:"
      },
      {
        "row": 5,
        "rowsha": "ZrKySk2J7heqN6yoc45StfSLk6Gn0/w61M8SrzhZx/w=",
        "originContent": "to it, even for renewals. You can use the same CSR for multiple renewals. NOTE:",
        "translatedContent": "you can't use your account private key as your domain private key!"
      },
      {
        "row": 6,
        "rowsha": "/L/TldhJ37XhImGhAkugvT636eWrZLRakv/r5Vmu+0s=",
        "originContent": "you can't use your account private key as your domain private key!",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 6,
    "Content": "```\n# Generate a domain private key (if you haven't already)\nopenssl genrsa 4096 > domain.key\n```",
    "ContentSha": "YVj1F5qlf7mElxediS3LZ0Ywa7xf1ic4PTmsXZkiIVA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\n# Generate a domain private key (if you haven't already)\nopenssl genrsa 4096 > domain.key\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "YI4eqsQ/Slz6nLhtWLbHhBlF4RHGk+S4MFd2RDVdJwI=",
        "originContent": "# Generate a domain private key (if you haven't already)",
        "translatedContent": "# Generate a domain private key (if you haven't already)"
      },
      {
        "row": 3,
        "rowsha": "4kkjILvILR1qPecHuMcgr+vAvFzu7luZffRb+x+rRNU=",
        "originContent": "openssl genrsa 4096 > domain.key",
        "translatedContent": "openssl genrsa 4096 > domain.key"
      },
      {
        "row": 4,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 7,
    "Content": "",
    "ContentSha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 8,
    "Content": "```\n# For a single domain\nopenssl req -new -sha256 -key domain.key -subj \"/CN=yoursite.com\" > domain.csr\n\n# For multiple domains (use this one if you want both www.yoursite.com and yoursite.com)\nopenssl req -new -sha256 -key domain.key -subj \"/\" -addext \"subjectAltName = DNS:yoursite.com, DNS:www.yoursite.com\" > domain.csr\n\n# For multiple domains (same as above but works with openssl < 1.1.1)\nopenssl req -new -sha256 -key domain.key -subj \"/\" -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf \"[SAN]\\nsubjectAltName=DNS:yoursite.com,DNS:www.yoursite.com\")) > domain.csr\n```",
    "ContentSha": "OaaM91rgxJbxLEkiQwqErnRb0Qy9uK8BDvZDMPFNv4o=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\n# For a single domain\nopenssl req -new -sha256 -key domain.key -subj \"/CN=yoursite.com\" > domain.csr\n\n# For multiple domains (use this one if you want both www.yoursite.com and yoursite.com)\nopenssl req -new -sha256 -key domain.key -subj \"/\" -addext \"subjectAltName = DNS:yoursite.com, DNS:www.yoursite.com\" > domain.csr\n\n# For multiple domains (same as above but works with openssl < 1.1.1)\nopenssl req -new -sha256 -key domain.key -subj \"/\" -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf \"[SAN]\\nsubjectAltName=DNS:yoursite.com,DNS:www.yoursite.com\")) > domain.csr\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "osqe60TuV5RyE8xK7CC/6O8mSzBiXCGmHmB1Zc72+hQ=",
        "originContent": "# For a single domain",
        "translatedContent": "# For a single domain"
      },
      {
        "row": 3,
        "rowsha": "D7lfjbVOwzKAuoxOnMdnp/kVFem0xqVb0Kc40CDNeIc=",
        "originContent": "openssl req -new -sha256 -key domain.key -subj \"/CN=yoursite.com\" > domain.csr",
        "translatedContent": "openssl req -new -sha256 -key domain.key -subj \"/CN=yoursite.com\" > domain.csr"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "ldcVsC7oZKZPaoCA+0XqNB1vJEZxxm1t+w+RPtLPMJM=",
        "originContent": "# For multiple domains (use this one if you want both www.yoursite.com and yoursite.com)",
        "translatedContent": "# For multiple domains (use this one if you want both www.yoursite.com and yoursite.com)"
      },
      {
        "row": 6,
        "rowsha": "96whouZGcWvuzYSj7sTSV0ySXOnk/gtUmxUVu2wafdE=",
        "originContent": "openssl req -new -sha256 -key domain.key -subj \"/\" -addext \"subjectAltName = DNS:yoursite.com, DNS:www.yoursite.com\" > domain.csr",
        "translatedContent": "openssl req -new -sha256 -key domain.key -subj \"/\" -addext \"subjectAltName = DNS:yoursite.com, DNS:www.yoursite.com\" > domain.csr"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "n9wfeAt3O72n3FLJfR+kxMSHy37EZn0g94qRze7SSV0=",
        "originContent": "# For multiple domains (same as above but works with openssl < 1.1.1)",
        "translatedContent": "# For multiple domains (same as above but works with openssl < 1.1.1)"
      },
      {
        "row": 9,
        "rowsha": "XLyhxbThKb8RvSK0+W1Ndu40Y0KTr5j1WKDk0xXSoTo=",
        "originContent": "openssl req -new -sha256 -key domain.key -subj \"/\" -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf \"[SAN]\\nsubjectAltName=DNS:yoursite.com,DNS:www.yoursite.com\")) > domain.csr",
        "translatedContent": "openssl req -new -sha256 -key domain.key -subj \"/\" -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf \"[SAN]\\nsubjectAltName=DNS:yoursite.com,DNS:www.yoursite.com\")) > domain.csr"
      },
      {
        "row": 10,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 9,
    "Content": "\n### Step 3: Make your website host challenge files\n\nYou must prove you own the domains you want a certificate for, so Let's Encrypt\nrequires you host some files on them. This script will generate and write those\nfiles in the folder you specify, so all you need to do is make sure that this\nfolder is served under the \".well-known/acme-challenge/\" url path. NOTE: Let's\nEncrypt will perform a plain HTTP request to port 80 on your server, so you\nmust serve the challenge files via HTTP (a redirect to HTTPS is fine too).\n",
    "ContentSha": "udOiki800YpPLwWawvoNP/v5f20tZUomcxCXzE+4hWo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Step 3: Make your website host challenge files\n\nYou must prove you own the domains you want a certificate for, so Let's Encrypt\nrequires you host some files on them. This script will generate and write those\nfiles in the folder you specify, so all you need to do is make sure that this\nfolder is served under the \".well-known/acme-challenge/\" url path. NOTE: Let's\nEncrypt will perform a plain HTTP request to port 80 on your server, so you\nmust serve the challenge files via HTTP (a redirect to HTTPS is fine too).\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Step 3: Make your website host challenge files"
      },
      {
        "row": 2,
        "rowsha": "aXZU483dnxRcRQxfWui4C2yRIZQqDWUqZfzMToCIYh8=",
        "originContent": "### Step 3: Make your website host challenge files",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "You must prove you own the domains you want a certificate for, so Let's Encrypt"
      },
      {
        "row": 4,
        "rowsha": "VIn0vpbiA4SZvydbpZuN/gMaoYwku3ogx7xYS/bb7O8=",
        "originContent": "You must prove you own the domains you want a certificate for, so Let's Encrypt",
        "translatedContent": "requires you host some files on them. This script will generate and write those"
      },
      {
        "row": 5,
        "rowsha": "myGJgKmzrGG5y9nEptN7Vd4yud6y9SYxvi7tU9ruwwM=",
        "originContent": "requires you host some files on them. This script will generate and write those",
        "translatedContent": "files in the folder you specify, so all you need to do is make sure that this"
      },
      {
        "row": 6,
        "rowsha": "YCRumzsSuyGuV6ltIHSE7KFAb+CD9SxIVjhQ9GXKlDk=",
        "originContent": "files in the folder you specify, so all you need to do is make sure that this",
        "translatedContent": "folder is served under the \".well-known/acme-challenge/\" url path. NOTE: Let's"
      },
      {
        "row": 7,
        "rowsha": "8lbbAyy1kO6uojAcJCA4B+zk6bIwFIO3uspWwtom2kU=",
        "originContent": "folder is served under the \".well-known/acme-challenge/\" url path. NOTE: Let's",
        "translatedContent": "Encrypt will perform a plain HTTP request to port 80 on your server, so you"
      },
      {
        "row": 8,
        "rowsha": "erkLGE73WmopG43UUS1xGMIPoTw3R91s5MnumN87cVc=",
        "originContent": "Encrypt will perform a plain HTTP request to port 80 on your server, so you",
        "translatedContent": "must serve the challenge files via HTTP (a redirect to HTTPS is fine too)."
      },
      {
        "row": 9,
        "rowsha": "JDjJqsXiKv3+UwkwCn/XOZBoXGZLdVRjCWOenEWs5Jk=",
        "originContent": "must serve the challenge files via HTTP (a redirect to HTTPS is fine too).",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 10,
    "Content": "```\n# Make some challenge folder (modify to suit your needs)\nmkdir -p /var/www/challenges/\n```",
    "ContentSha": "GJnE6AGK2xXAct3VwAbnp485JfRqw9tfHUAygXRyy6o=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\n# Make some challenge folder (modify to suit your needs)\nmkdir -p /var/www/challenges/\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "sAoFqh2PUsLtLouUt4qhir4Uf29AIXn5GbhTnqk7B/U=",
        "originContent": "# Make some challenge folder (modify to suit your needs)",
        "translatedContent": "# Make some challenge folder (modify to suit your needs)"
      },
      {
        "row": 3,
        "rowsha": "Y17+QfRyXOk+AyEAG82KktdG6zsq4+gzmihWLlv4NZM=",
        "originContent": "mkdir -p /var/www/challenges/",
        "translatedContent": "mkdir -p /var/www/challenges/"
      },
      {
        "row": 4,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 11,
    "Content": "",
    "ContentSha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 12,
    "Content": "```nginx\n# Example for nginx\nserver {\n    listen 80;\n    server_name yoursite.com www.yoursite.com;\n\n    location /.well-known/acme-challenge/ {\n        alias /var/www/challenges/;\n        try_files $uri =404;\n    }\n\n    ...the rest of your config\n}\n```",
    "ContentSha": "K3Mqs7JWT+8JRzR+8YgOvTiK/8pAdNYsU9T28LdpaA4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```nginx\n# Example for nginx\nserver {\n    listen 80;\n    server_name yoursite.com www.yoursite.com;\n\n    location /.well-known/acme-challenge/ {\n        alias /var/www/challenges/;\n        try_files $uri =404;\n    }\n\n    ...the rest of your config\n}\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "h2c6dO6I1699FQWDd4mE57p/WRMdtsxwFI5oxZloIaQ=",
        "originContent": "```nginx",
        "translatedContent": "```nginx"
      },
      {
        "row": 2,
        "rowsha": "zRr1v0Tl4DxdfjySToQGieScWvhNwk/+ImIs3X321qE=",
        "originContent": "# Example for nginx",
        "translatedContent": "# Example for nginx"
      },
      {
        "row": 3,
        "rowsha": "AxCotRd0ZdTTaLiiqDRKszdJJ4svGTdVf6Cpgiw1rxg=",
        "originContent": "server {",
        "translatedContent": "server {"
      },
      {
        "row": 4,
        "rowsha": "QxDnEpfi7en4ZKwtHVM9iaUa8VSP3W89MecrWS8uMbU=",
        "originContent": "    listen 80;",
        "translatedContent": "    listen 80;"
      },
      {
        "row": 5,
        "rowsha": "xffKroDXi3EY+EGYp0Az7/jK0vRMIJCqoBfQpHxl1Sw=",
        "originContent": "    server_name yoursite.com www.yoursite.com;",
        "translatedContent": "    server_name yoursite.com www.yoursite.com;"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "2xW96HjKRUllc1irtgpO14P8D0fdZ0Yon1VwAZLkGYU=",
        "originContent": "    location /.well-known/acme-challenge/ {",
        "translatedContent": "    location /.well-known/acme-challenge/ {"
      },
      {
        "row": 8,
        "rowsha": "H9AyC9xNqzBpLjhMWnf8DeBJcRVnhkkHx6+GT7x3cYw=",
        "originContent": "        alias /var/www/challenges/;",
        "translatedContent": "        alias /var/www/challenges/;"
      },
      {
        "row": 9,
        "rowsha": "+rqKcyKcdOK2uLXStJQgp8gthdwYr8Fh75IQqA4fQS0=",
        "originContent": "        try_files $uri =404;",
        "translatedContent": "        try_files $uri =404;"
      },
      {
        "row": 10,
        "rowsha": "KNhneGFfavR7sbxPQPrOdWdJdo5REfEUz6I0pQYMJa8=",
        "originContent": "    }",
        "translatedContent": "    }"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "NwqmS9/WN8cYqc76XcvJbx7HlRxg/XHNGVZtusSsjFg=",
        "originContent": "    ...the rest of your config",
        "translatedContent": "    ...the rest of your config"
      },
      {
        "row": 13,
        "rowsha": "0Qs2qnSlm89KiBhYN/ZYr682Ru/yuxbDko0OkzXpRdI=",
        "originContent": "}",
        "translatedContent": "}"
      },
      {
        "row": 14,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 13,
    "Content": "\n### Step 4: Get a signed certificate!\n\nNow that you have setup your server and generated all the needed files, run this\nscript on your server with the permissions needed to write to the above folder\nand read your private account key and CSR.\n",
    "ContentSha": "k6JO5S7OKOFn3kHTGOsloDmoVTTt9Maf1MSJ4BeRfKs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Step 4: Get a signed certificate!\n\nNow that you have set up your server and generated all the necessary files, run this\nscript on your server with the permissions required to write to the above folder\nand read your private account key and CSR.\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Step 4: Get a signed certificate!"
      },
      {
        "row": 2,
        "rowsha": "McXY04yyG4TaWBti1Du+gmWZDhfxsfd4TJWME9XnPOs=",
        "originContent": "### Step 4: Get a signed certificate!",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Now that you have set up your server and generated all the necessary files, run this"
      },
      {
        "row": 4,
        "rowsha": "IAai5n8b2yZrIG8Ff8CYIgOV9JQaukkqFEE+Ri619hg=",
        "originContent": "Now that you have setup your server and generated all the needed files, run this",
        "translatedContent": "script on your server with the permissions required to write to the above folder"
      },
      {
        "row": 5,
        "rowsha": "Sflht0QMJ36EZ6/oOzhuyapAzyyAeRSbeKCf6r3+D08=",
        "originContent": "script on your server with the permissions needed to write to the above folder",
        "translatedContent": "and read your private account key and CSR."
      },
      {
        "row": 6,
        "rowsha": "/RLgSFxParqzUqKNp9rSOFNQvybiJsqJezRaV/JauWA=",
        "originContent": "and read your private account key and CSR.",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 14,
    "Content": "```\n# Run the script on your server\npython acme_tiny.py --account-key ./account.key --csr ./domain.csr --acme-dir /var/www/challenges/ > ./signed_chain.crt\n```",
    "ContentSha": "D7sAKLqA0nTS7glFc270bKj1KtuM7VtWq4WyZF8/1Mc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\n# Run the script on your server\npython acme_tiny.py --account-key ./account.key --csr ./domain.csr --acme-dir /var/www/challenges/ > ./signed_chain.crt\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "to534HE7Evv7TacjZW1Q3aDEpbT75WGw5yjqZ3C4RFE=",
        "originContent": "# Run the script on your server",
        "translatedContent": "# Run the script on your server"
      },
      {
        "row": 3,
        "rowsha": "YwXc+mLSBR0j1HVYms50jSeXvbM7dZQNzKQJCLrE4Wk=",
        "originContent": "python acme_tiny.py --account-key ./account.key --csr ./domain.csr --acme-dir /var/www/challenges/ > ./signed_chain.crt",
        "translatedContent": "python acme_tiny.py --account-key ./account.key --csr ./domain.csr --acme-dir /var/www/challenges/ > ./signed_chain.crt"
      },
      {
        "row": 4,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 15,
    "Content": "\n### Step 5: Install the certificate\n\nThe signed https certificate chain that is output by this script can be used along\nwith your private key to run an https server. You need to include them in the\nhttps settings in your web server's configuration. Here's an example on how to\nconfigure an nginx server:\n",
    "ContentSha": "4SVgKBmIijvj/xS/hAcXDXMKTylKM3v1u/75tpQX134=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Step 5: Install the certificate\n\nThe signed https certificate chain that is output by this script can be used along\nwith your private key to run an https server. You need to include them in the\nhttps settings in your web server's configuration. Here's an example on how to\nconfigure an nginx server:\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Step 5: Install the certificate"
      },
      {
        "row": 2,
        "rowsha": "IgnfUsqLdZlhsZBW6LzCrfQzGOR0DrZF2jQh2MY3smY=",
        "originContent": "### Step 5: Install the certificate",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "The signed https certificate chain that is output by this script can be used along"
      },
      {
        "row": 4,
        "rowsha": "6ezABkFwzwInnpOOLVst93FFlu8giCcMlAV1qqgaa5Q=",
        "originContent": "The signed https certificate chain that is output by this script can be used along",
        "translatedContent": "with your private key to run an https server. You need to include them in the"
      },
      {
        "row": 5,
        "rowsha": "1QPvgHYl3XD7T5cHayi8eTKsPr4T6+9aLKpyaNqai5E=",
        "originContent": "with your private key to run an https server. You need to include them in the",
        "translatedContent": "https settings in your web server's configuration. Here's an example on how to"
      },
      {
        "row": 6,
        "rowsha": "aSwdSBoenAeeeCvcrU5hdcuAx8ANS8wZRCSzTaZsn1U=",
        "originContent": "https settings in your web server's configuration. Here's an example on how to",
        "translatedContent": "configure an nginx server:"
      },
      {
        "row": 7,
        "rowsha": "RMX1PYLtRNI6x59QPR/lqUd+ZaxRRQlmOW14xziYVz4=",
        "originContent": "configure an nginx server:",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 16,
    "Content": "```nginx\nserver {\n    listen 443 ssl;\n    server_name yoursite.com www.yoursite.com;\n\n    ssl_certificate /path/to/signed_chain.crt;\n    ssl_certificate_key /path/to/domain.key;\n    ssl_session_timeout 5m;\n    ssl_protocols TLSv1.2;\n    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;\n    ssl_session_cache shared:SSL:50m;\n    ssl_dhparam /path/to/server.dhparam;\n    ssl_prefer_server_ciphers on;\n\n    ...the rest of your config\n}\n\nserver {\n    listen 80;\n    server_name yoursite.com www.yoursite.com;\n\n    location /.well-known/acme-challenge/ {\n        alias /var/www/challenges/;\n        try_files $uri =404;\n    }\n\n    ...the rest of your config\n}\n```",
    "ContentSha": "gpMHOxbCsoocjdyuMiJ+KZgJczSY4RCv2DO9S7eZ2eA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```nginx\nserver {\n    listen 443 ssl;\n    server_name yoursite.com www.yoursite.com;\n\n    ssl_certificate /path/to/signed_chain.crt;\n    ssl_certificate_key /path/to/domain.key;\n    ssl_session_timeout 5m;\n    ssl_protocols TLSv1.2;\n    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;\n    ssl_session_cache shared:SSL:50m;\n    ssl_dhparam /path/to/server.dhparam;\n    ssl_prefer_server_ciphers on;\n\n    ...the rest of your config\n}\n\nserver {\n    listen 80;\n    server_name yoursite.com www.yoursite.com;\n\n    location /.well-known/acme-challenge/ {\n        alias /var/www/challenges/;\n        try_files $uri =404;\n    }\n\n    ...the rest of your config\n}\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "h2c6dO6I1699FQWDd4mE57p/WRMdtsxwFI5oxZloIaQ=",
        "originContent": "```nginx",
        "translatedContent": "```nginx"
      },
      {
        "row": 2,
        "rowsha": "AxCotRd0ZdTTaLiiqDRKszdJJ4svGTdVf6Cpgiw1rxg=",
        "originContent": "server {",
        "translatedContent": "server {"
      },
      {
        "row": 3,
        "rowsha": "yjcB1Y+nYGSpdx1yjo7JNJLWAtUesFBrR9UHYr2uk3c=",
        "originContent": "    listen 443 ssl;",
        "translatedContent": "    listen 443 ssl;"
      },
      {
        "row": 4,
        "rowsha": "xffKroDXi3EY+EGYp0Az7/jK0vRMIJCqoBfQpHxl1Sw=",
        "originContent": "    server_name yoursite.com www.yoursite.com;",
        "translatedContent": "    server_name yoursite.com www.yoursite.com;"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "Sm81z1A1+x6AyfY+i3R9LHqpL3j70MpaWifdVffueuc=",
        "originContent": "    ssl_certificate /path/to/signed_chain.crt;",
        "translatedContent": "    ssl_certificate /path/to/signed_chain.crt;"
      },
      {
        "row": 7,
        "rowsha": "Ywr2nS4FdiDRagEeErxDgkY9gTF6cQiboV7vjZVI4pE=",
        "originContent": "    ssl_certificate_key /path/to/domain.key;",
        "translatedContent": "    ssl_certificate_key /path/to/domain.key;"
      },
      {
        "row": 8,
        "rowsha": "gMtmxFFz+kju15vbAUNbfBWY7zjY6F//mmOXkyjvLJM=",
        "originContent": "    ssl_session_timeout 5m;",
        "translatedContent": "    ssl_session_timeout 5m;"
      },
      {
        "row": 9,
        "rowsha": "YHNYsODJ3yU25eKo3EA+oqV6X8ydASbSVS/IsthN73c=",
        "originContent": "    ssl_protocols TLSv1.2;",
        "translatedContent": "    ssl_protocols TLSv1.2;"
      },
      {
        "row": 10,
        "rowsha": "TncrFunmbVMaiSprzeOkXaTT80aA0IhHqG6lvl39M4U=",
        "originContent": "    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;",
        "translatedContent": "    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;"
      },
      {
        "row": 11,
        "rowsha": "VOIc41xqygpo6SvcyK2sNJ7iO7ghXltv9ANVdKQc610=",
        "originContent": "    ssl_session_cache shared:SSL:50m;",
        "translatedContent": "    ssl_session_cache shared:SSL:50m;"
      },
      {
        "row": 12,
        "rowsha": "g9KfNDYJYtUHVRRUJREAtkTNtue/Bs6hBQe5rQDdm74=",
        "originContent": "    ssl_dhparam /path/to/server.dhparam;",
        "translatedContent": "    ssl_dhparam /path/to/server.dhparam;"
      },
      {
        "row": 13,
        "rowsha": "FZz9tH/2mPVCt6uja22SdUGCK1+yK0vTzBsAbkKv89o=",
        "originContent": "    ssl_prefer_server_ciphers on;",
        "translatedContent": "    ssl_prefer_server_ciphers on;"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "NwqmS9/WN8cYqc76XcvJbx7HlRxg/XHNGVZtusSsjFg=",
        "originContent": "    ...the rest of your config",
        "translatedContent": "    ...the rest of your config"
      },
      {
        "row": 16,
        "rowsha": "0Qs2qnSlm89KiBhYN/ZYr682Ru/yuxbDko0OkzXpRdI=",
        "originContent": "}",
        "translatedContent": "}"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "AxCotRd0ZdTTaLiiqDRKszdJJ4svGTdVf6Cpgiw1rxg=",
        "originContent": "server {",
        "translatedContent": "server {"
      },
      {
        "row": 19,
        "rowsha": "QxDnEpfi7en4ZKwtHVM9iaUa8VSP3W89MecrWS8uMbU=",
        "originContent": "    listen 80;",
        "translatedContent": "    listen 80;"
      },
      {
        "row": 20,
        "rowsha": "xffKroDXi3EY+EGYp0Az7/jK0vRMIJCqoBfQpHxl1Sw=",
        "originContent": "    server_name yoursite.com www.yoursite.com;",
        "translatedContent": "    server_name yoursite.com www.yoursite.com;"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "2xW96HjKRUllc1irtgpO14P8D0fdZ0Yon1VwAZLkGYU=",
        "originContent": "    location /.well-known/acme-challenge/ {",
        "translatedContent": "    location /.well-known/acme-challenge/ {"
      },
      {
        "row": 23,
        "rowsha": "H9AyC9xNqzBpLjhMWnf8DeBJcRVnhkkHx6+GT7x3cYw=",
        "originContent": "        alias /var/www/challenges/;",
        "translatedContent": "        alias /var/www/challenges/;"
      },
      {
        "row": 24,
        "rowsha": "+rqKcyKcdOK2uLXStJQgp8gthdwYr8Fh75IQqA4fQS0=",
        "originContent": "        try_files $uri =404;",
        "translatedContent": "        try_files $uri =404;"
      },
      {
        "row": 25,
        "rowsha": "KNhneGFfavR7sbxPQPrOdWdJdo5REfEUz6I0pQYMJa8=",
        "originContent": "    }",
        "translatedContent": "    }"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "NwqmS9/WN8cYqc76XcvJbx7HlRxg/XHNGVZtusSsjFg=",
        "originContent": "    ...the rest of your config",
        "translatedContent": "    ...the rest of your config"
      },
      {
        "row": 28,
        "rowsha": "0Qs2qnSlm89KiBhYN/ZYr682Ru/yuxbDko0OkzXpRdI=",
        "originContent": "}",
        "translatedContent": "}"
      },
      {
        "row": 29,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 17,
    "Content": "\n### Step 6: Setup an auto-renew cronjob\n\nCongrats! Your website is now using https! Unfortunately, Let's Encrypt\ncertificates only last for 90 days, so you need to renew them often. No worries!\nIt's automated! Just make a bash script and add it to your crontab (see below\nfor example script).\n\nExample of a `renew_cert.sh`:",
    "ContentSha": "VE13Kon7QeV6H6whYj0aPGJx2GhfrWoGrbMRDKGnq8w=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Step 6: Setup an auto-renew cronjob\n\nCongrats! Your website is now using https! Unfortunately, Let's Encrypt  \ncertificates only last for 90 days, so you need to renew them often. No worries!  \nIt's automated! Just make a bash script and add it to your crontab (see below  \nfor example script).  \n\nExample of a `renew_cert.sh`:\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### Step 6: Setup an auto-renew cronjob"
      },
      {
        "row": 2,
        "rowsha": "ou3ceDbJfV2BbpY79UQZMhvy1LqZkWts9pZBnqVmwFY=",
        "originContent": "### Step 6: Setup an auto-renew cronjob",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Congrats! Your website is now using https! Unfortunately, Let's Encrypt  "
      },
      {
        "row": 4,
        "rowsha": "XiSMcP0j7M2MO9vE6Fq1YPsJISBJSK91FnZ4b+YjCNw=",
        "originContent": "Congrats! Your website is now using https! Unfortunately, Let's Encrypt",
        "translatedContent": "certificates only last for 90 days, so you need to renew them often. No worries!  "
      },
      {
        "row": 5,
        "rowsha": "t8Ydlp/Xu74ui9mvO/ssRuvlstIrBMYmITEK4gTSIA0=",
        "originContent": "certificates only last for 90 days, so you need to renew them often. No worries!",
        "translatedContent": "It's automated! Just make a bash script and add it to your crontab (see below  "
      },
      {
        "row": 6,
        "rowsha": "xNFhkAg5IW1SiSETZhq2TdMgDv02s2ISq0amYXzE0+E=",
        "originContent": "It's automated! Just make a bash script and add it to your crontab (see below",
        "translatedContent": "for example script).  "
      },
      {
        "row": 7,
        "rowsha": "K4m1p2lCDhYbZb/CP4pC/lGn36cDGzdERPmRFkGXnRs=",
        "originContent": "for example script).",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Example of a `renew_cert.sh`:"
      },
      {
        "row": 9,
        "rowsha": "EIRrzKtZrgEl0jrRK1Hua9FfK7dcE3JZ7oHWGmJnNqY=",
        "originContent": "Example of a `renew_cert.sh`:",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 18,
    "Content": "```sh\n#!/usr/bin/sh\npython /path/to/acme_tiny.py --account-key /path/to/account.key --csr /path/to/domain.csr --acme-dir /var/www/challenges/ > /path/to/signed_chain.crt.tmp || exit\nmv /path/to/signed_chain.crt.tmp /path/to/signed_chain.crt\nservice nginx reload\n```",
    "ContentSha": "Yux3gCLMTSWiS4ZMRMiuodCibNk9gtXl6Ms85K7AX30=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```sh\n#!/usr/bin/sh\npython /path/to/acme_tiny.py --account-key /path/to/account.key --csr /path/to/domain.csr --acme-dir /var/www/challenges/ > /path/to/signed_chain.crt.tmp || exit\nmv /path/to/signed_chain.crt.tmp /path/to/signed_chain.crt\nservice nginx reload\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "ivgYKrHo9QnPgZYRA645sKpipVpw39MbuUN0CN9LfCA=",
        "originContent": "```sh",
        "translatedContent": "```sh"
      },
      {
        "row": 2,
        "rowsha": "DYTjsrbqABMuQY0qVR2yNh4CjB7Dd67ctgCmskDJSfY=",
        "originContent": "#!/usr/bin/sh",
        "translatedContent": "#!/usr/bin/sh"
      },
      {
        "row": 3,
        "rowsha": "gCKmuoH6O/OVDLLIBvhRN+tSzuFkrI0nxecRiP3czt4=",
        "originContent": "python /path/to/acme_tiny.py --account-key /path/to/account.key --csr /path/to/domain.csr --acme-dir /var/www/challenges/ > /path/to/signed_chain.crt.tmp || exit",
        "translatedContent": "python /path/to/acme_tiny.py --account-key /path/to/account.key --csr /path/to/domain.csr --acme-dir /var/www/challenges/ > /path/to/signed_chain.crt.tmp || exit"
      },
      {
        "row": 4,
        "rowsha": "D5hFPGQbSxXCPr10m71GF7565CYVYTPCTezzpgNvevE=",
        "originContent": "mv /path/to/signed_chain.crt.tmp /path/to/signed_chain.crt",
        "translatedContent": "mv /path/to/signed_chain.crt.tmp /path/to/signed_chain.crt"
      },
      {
        "row": 5,
        "rowsha": "W9jRVoaScftTCZkitcl1a1actPkD1ZEoOTZWEqXudOk=",
        "originContent": "service nginx reload",
        "translatedContent": "service nginx reload"
      },
      {
        "row": 6,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 19,
    "Content": "",
    "ContentSha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 20,
    "Content": "```\n# Example line in your crontab (runs once per month)\n0 0 1 * * /path/to/renew_cert.sh 2>> /var/log/acme_tiny.log\n```",
    "ContentSha": "Rx5OkKaqal1oFBJxhci4a0dd0yk7W1BcShVQHgLG5+o=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\n# Example line in your crontab (runs once per month)\n0 0 1 * * /path/to/renew_cert.sh 2>> /var/log/acme_tiny.log\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "aeF2c4SggIjSoA3yFw6M5cJQukvx73vGIAiGmBQox6w=",
        "originContent": "# Example line in your crontab (runs once per month)",
        "translatedContent": "# Example line in your crontab (runs once per month)"
      },
      {
        "row": 3,
        "rowsha": "9lmfs/ANefNW+PpCiM1/w0yV+lTMMb+TKrmfVIfTDa8=",
        "originContent": "0 0 1 * * /path/to/renew_cert.sh 2>> /var/log/acme_tiny.log",
        "translatedContent": "0 0 1 * * /path/to/renew_cert.sh 2>> /var/log/acme_tiny.log"
      },
      {
        "row": 4,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 21,
    "Content": "\n**NOTE:** Since Let's Encrypt's ACME v2 release (acme-tiny 4.0.0+), the intermediate\ncertificate is included in the issued certificate download, so you no longer have\nto independently download the intermediate certificate and concatenate it to your\nsigned certificate. If you have an shell script or Makefile using acme-tiny &lt;4.0 (e.g. before\n2018-03-17) with acme-tiny 4.0.0+, then you may be adding the intermediate\ncertificate to your signed_chain.crt twice (which\n[causes issues with at least GnuTLS 3.7.0](https://gitlab.com/gnutls/gnutls/-/issues/1131)\nbesides making the certificate slightly larger than it needs to be). To fix,\nsimply remove the bash code where you're downloading the intermediate and adding\nit to the acme-tiny certificate output.\n\n## Permissions\n\nThe biggest problem you'll likely come across while setting up and running this\nscript is permissions. You want to limit access to your account private key and\nchallenge web folder as much as possible. I'd recommend creating a user\nspecifically for handling this script, the account private key, and the\nchallenge folder. Then add the ability for that user to write to your installed\ncertificate file (e.g. `/path/to/signed_chain.crt`) and reload your webserver. That\nway, the cron script will do its thing, overwrite your old certificate, and\nreload your webserver without having permission to do anything else.\n\n**BE SURE TO:**\n* Backup your account private key (e.g. `account.key`)\n* Don't allow this script to be able to read your domain private key!\n* Don't allow this script to be run as root!\n\n## Staging Environment\n\nLet's Encrypt recommends testing new configurations against their staging servers,\nso when testing out your new setup, you can use\n`--directory-url https://acme-staging-v02.api.letsencrypt.org/directory`\nto issue fake test certificates instead of real ones from Let's Encrypt's production servers.\nSee [https://letsencrypt.org/docs/staging-environment/](https://letsencrypt.org/docs/staging-environment/)\nfor more details.\n\n## Feedback/Contributing\n\nThis project has a very, very limited scope and codebase. I'm happy to receive\nbug reports and pull requests, but please don't add any new features. This\nscript must stay under 200 lines of code to ensure it can be easily audited by\nanyone who wants to run it.\n\nIf you want to add features for your own setup to make things easier for you,\nplease do! It's open source, so feel free to fork it and modify as necessary.\n",
    "ContentSha": "84TYdcrdv2vcElvw3D6mE5LF6zrohdLiZYhDyk62ToE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "**NOTE:** Since Let's Encrypt's ACME v2 release (acme-tiny 4.0.0+), the intermediate\ncertificate is included in the issued certificate download, so you no longer have\nto independently download the intermediate certificate and concatenate it to your\nsigned certificate. If you have an shell script or Makefile using acme-tiny &lt;4.0 (e.g. before\n2018-03-17) with acme-tiny 4.0.0+, then you may be adding the intermediate\ncertificate to your signed_chain.crt twice (which\n[causes issues with at least GnuTLS 3.7.0](https://gitlab.com/gnutls/gnutls/-/issues/1131)\nbesides making the certificate slightly larger than it needs to be). To fix,\nsimply remove the bash code where you're downloading the intermediate and adding\nit to the acme-tiny certificate output.\n\n## Permissions\n\nThe biggest problem you'll likely come across while setting up and running this\nscript is permissions. You want to limit access to your account private key and\nchallenge web folder as much as possible. I'd recommend creating a user\nspecifically for handling this script, the account private key, and the\nchallenge folder. Then add the ability for that user to write to your installed\ncertificate file (e.g. `/path/to/signed_chain.crt`) and reload your webserver. That\nway, the cron script will do its thing, overwrite your old certificate, and\nreload your webserver without having permission to do anything else.\n\n**BE SURE TO:**\n* Backup your account private key (e.g. `account.key`)\n* Don't allow this script to be able to read your domain private key!\n* Don't allow this script to be run as root!\n\n## Staging Environment\n\nLet's Encrypt recommends testing new configurations against their staging servers,\nso when testing out your new setup, you can use\n`--directory-url https://acme-staging-v02.api.letsencrypt.org/directory`\nto issue fake test certificates instead of real ones from Let's Encrypt's production servers.\nSee [https://letsencrypt.org/docs/staging-environment/](https://letsencrypt.org/docs/staging-environment/)\nfor more details.\n\n## Feedback/Contributing\n\nThis project has a very, very limited scope and codebase. I'm happy to receive\nbug reports and pull requests, but please don't add any new features. This\nscript must stay under 200 lines of code to ensure it can be easily audited by\nanyone who wants to run it.\n\nIf you want to add features for your own setup to make things easier for you,\nplease do! It's open source, so feel free to fork it and modify as necessary.\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "**NOTE:** Since Let's Encrypt's ACME v2 release (acme-tiny 4.0.0+), the intermediate"
      },
      {
        "row": 2,
        "rowsha": "MA8NhCryTKOuM7c+ZMXYmjdxzT30w5k6m7/9xDlGrhI=",
        "originContent": "**NOTE:** Since Let's Encrypt's ACME v2 release (acme-tiny 4.0.0+), the intermediate",
        "translatedContent": "certificate is included in the issued certificate download, so you no longer have"
      },
      {
        "row": 3,
        "rowsha": "EkdD6ukF7tZnjMC7ARsti67fnx7DaeXDrEdWWdTJ7WQ=",
        "originContent": "certificate is included in the issued certificate download, so you no longer have",
        "translatedContent": "to independently download the intermediate certificate and concatenate it to your"
      },
      {
        "row": 4,
        "rowsha": "WmleS3aSuXd3coKoWMvNguYskQBrqP3lB4yo9Ah0ftU=",
        "originContent": "to independently download the intermediate certificate and concatenate it to your",
        "translatedContent": "signed certificate. If you have an shell script or Makefile using acme-tiny &lt;4.0 (e.g. before"
      },
      {
        "row": 5,
        "rowsha": "UMVCkXnGPXoNBbAhpqX9x7jq5JYGXvZxJlZ/d1zHCxM=",
        "originContent": "signed certificate. If you have an shell script or Makefile using acme-tiny &lt;4.0 (e.g. before",
        "translatedContent": "2018-03-17) with acme-tiny 4.0.0+, then you may be adding the intermediate"
      },
      {
        "row": 6,
        "rowsha": "LnZvhT0l10/pV2k8B0hB9numT2ddZDVF+QhT4XvQ4Ko=",
        "originContent": "2018-03-17) with acme-tiny 4.0.0+, then you may be adding the intermediate",
        "translatedContent": "certificate to your signed_chain.crt twice (which"
      },
      {
        "row": 7,
        "rowsha": "2/vJfUVPMzjASSa0LmJSSPCtHreHZYs/vqs3ybXCpR0=",
        "originContent": "certificate to your signed_chain.crt twice (which",
        "translatedContent": "[causes issues with at least GnuTLS 3.7.0](https://gitlab.com/gnutls/gnutls/-/issues/1131)"
      },
      {
        "row": 8,
        "rowsha": "t3UG1R1FBBWZNIYe87FHLS2YkgkzF5HA3Fa38jyeh7E=",
        "originContent": "[causes issues with at least GnuTLS 3.7.0](https://gitlab.com/gnutls/gnutls/-/issues/1131)",
        "translatedContent": "besides making the certificate slightly larger than it needs to be). To fix,"
      },
      {
        "row": 9,
        "rowsha": "HYGrznsatAbHb1A5wyy9ORFakvKv9KGxudVP82ddk7c=",
        "originContent": "besides making the certificate slightly larger than it needs to be). To fix,",
        "translatedContent": "simply remove the bash code where you're downloading the intermediate and adding"
      },
      {
        "row": 10,
        "rowsha": "xq6Fa54u0WZYJXVX0vNank+QIEPe2XlxKtmLX9Vhb38=",
        "originContent": "simply remove the bash code where you're downloading the intermediate and adding",
        "translatedContent": "it to the acme-tiny certificate output."
      },
      {
        "row": 11,
        "rowsha": "02tEPZGOv4P+KUN3m0QKdV1cAgW1h5tMjpKyX/mW6a8=",
        "originContent": "it to the acme-tiny certificate output.",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## Permissions"
      },
      {
        "row": 13,
        "rowsha": "pkb0aA3qFXj8Un+oWucSi33Aga9CvIY5BKZAd4ofCik=",
        "originContent": "## Permissions",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "The biggest problem you'll likely come across while setting up and running this"
      },
      {
        "row": 15,
        "rowsha": "vS2CtToRhvDxSdnGEpaxO103NmK3Y3iE5vMAk1ENtLc=",
        "originContent": "The biggest problem you'll likely come across while setting up and running this",
        "translatedContent": "script is permissions. You want to limit access to your account private key and"
      },
      {
        "row": 16,
        "rowsha": "B51AhahRG9j6AKkI3FjoUTb3dlHdPV334g/Hfpb6SUY=",
        "originContent": "script is permissions. You want to limit access to your account private key and",
        "translatedContent": "challenge web folder as much as possible. I'd recommend creating a user"
      },
      {
        "row": 17,
        "rowsha": "wy30l25OYtHwiwsgrgVME26mbrjfp1PXDR6j0VUNOYw=",
        "originContent": "challenge web folder as much as possible. I'd recommend creating a user",
        "translatedContent": "specifically for handling this script, the account private key, and the"
      },
      {
        "row": 18,
        "rowsha": "nrMtpL5HjoA1XOLPfNTeHfWcYceEd0XUgEJFivqeSOQ=",
        "originContent": "specifically for handling this script, the account private key, and the",
        "translatedContent": "challenge folder. Then add the ability for that user to write to your installed"
      },
      {
        "row": 19,
        "rowsha": "YgLaKAb+rXUKFwwt9tIEWfDI2NMIrU2emZvO7rg4bFA=",
        "originContent": "challenge folder. Then add the ability for that user to write to your installed",
        "translatedContent": "certificate file (e.g. `/path/to/signed_chain.crt`) and reload your webserver. That"
      },
      {
        "row": 20,
        "rowsha": "PKLD1MmH2aUzthZCbT/JBmcRNRnGeRbFGWpAUcSRIRI=",
        "originContent": "certificate file (e.g. `/path/to/signed_chain.crt`) and reload your webserver. That",
        "translatedContent": "way, the cron script will do its thing, overwrite your old certificate, and"
      },
      {
        "row": 21,
        "rowsha": "GfmlaA/fJDYLhX2151cgBSqvuw3EGdWLvn28PJ2w3cg=",
        "originContent": "way, the cron script will do its thing, overwrite your old certificate, and",
        "translatedContent": "reload your webserver without having permission to do anything else."
      },
      {
        "row": 22,
        "rowsha": "ngMX+6cgJuI0fTcHjWIcZYNm4/rsBcTOA+/7JuzHNdg=",
        "originContent": "reload your webserver without having permission to do anything else.",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "**BE SURE TO:**"
      },
      {
        "row": 24,
        "rowsha": "61DY+GePaN1jAxhkR4igXow+CHLGCLgiuvbRH6ps+64=",
        "originContent": "**BE SURE TO:**",
        "translatedContent": "* Backup your account private key (e.g. `account.key`)"
      },
      {
        "row": 25,
        "rowsha": "9S6uHjm5tag37qeNmuQaVO0ysNl754xxVrUbdCCHHAw=",
        "originContent": "* Backup your account private key (e.g. `account.key`)",
        "translatedContent": "* Don't allow this script to be able to read your domain private key!"
      },
      {
        "row": 26,
        "rowsha": "ordQMZbMZ7ehI4t70C8q/bP/MDHcXT5pca4nu3m1vyo=",
        "originContent": "* Don't allow this script to be able to read your domain private key!",
        "translatedContent": "* Don't allow this script to be run as root!"
      },
      {
        "row": 27,
        "rowsha": "Ug7jPL83+cMc4FMbgms7nu4stPfae1CFns611KrER6U=",
        "originContent": "* Don't allow this script to be run as root!",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## Staging Environment"
      },
      {
        "row": 29,
        "rowsha": "5T+QFJwQIdlcSLO2VK4S+ngSCFuMAsXoYLJym3L/QSM=",
        "originContent": "## Staging Environment",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "Let's Encrypt recommends testing new configurations against their staging servers,"
      },
      {
        "row": 31,
        "rowsha": "D9Izp/Lx9I9Go0hB5frKqervYVcuMBUpUGrKgY+14Nc=",
        "originContent": "Let's Encrypt recommends testing new configurations against their staging servers,",
        "translatedContent": "so when testing out your new setup, you can use"
      },
      {
        "row": 32,
        "rowsha": "dgDJxhqkFmskBRYPs0Yem8gIythMQ49ierdG2tPx5xM=",
        "originContent": "so when testing out your new setup, you can use",
        "translatedContent": "`--directory-url https://acme-staging-v02.api.letsencrypt.org/directory`"
      },
      {
        "row": 33,
        "rowsha": "BNETsYtQymwMcIQxEY2Z0g5lKM8WyuDYSQgKmjTpHo0=",
        "originContent": "`--directory-url https://acme-staging-v02.api.letsencrypt.org/directory`",
        "translatedContent": "to issue fake test certificates instead of real ones from Let's Encrypt's production servers."
      },
      {
        "row": 34,
        "rowsha": "8loWxfbI88SkL0bcVJAVcTPcaGOih7s/35Lv7arrfoo=",
        "originContent": "to issue fake test certificates instead of real ones from Let's Encrypt's production servers.",
        "translatedContent": "See [https://letsencrypt.org/docs/staging-environment/](https://letsencrypt.org/docs/staging-environment/)"
      },
      {
        "row": 35,
        "rowsha": "YQQjonlUKzFQIxtKKJfVLP7t08LlvW3/3Vh5n4vmtPw=",
        "originContent": "See [https://letsencrypt.org/docs/staging-environment/](https://letsencrypt.org/docs/staging-environment/)",
        "translatedContent": "for more details."
      },
      {
        "row": 36,
        "rowsha": "HbW/z7Q+bnBbvqY9uASDZbgcNBobDtNeBlArhnqL8sc=",
        "originContent": "for more details.",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## Feedback/Contributing"
      },
      {
        "row": 38,
        "rowsha": "HnZ6TE5c0ZDpzZdubuUu4A6Y9VtQyhM2TozFIWsIgnw=",
        "originContent": "## Feedback/Contributing",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "This project has a very, very limited scope and codebase. I'm happy to receive"
      },
      {
        "row": 40,
        "rowsha": "glq0+7r2knrHo03Xdc/L7MtqX0bBh36DxwjyhUHlZlg=",
        "originContent": "This project has a very, very limited scope and codebase. I'm happy to receive",
        "translatedContent": "bug reports and pull requests, but please don't add any new features. This"
      },
      {
        "row": 41,
        "rowsha": "yNSmadEUQ50p37N7wYL93nETkbKxk5mMsnG0214FozM=",
        "originContent": "bug reports and pull requests, but please don't add any new features. This",
        "translatedContent": "script must stay under 200 lines of code to ensure it can be easily audited by"
      },
      {
        "row": 42,
        "rowsha": "9a5m96UjyfiRnB4Ml07esTXsBgg1zRqaQ2Q7cC+JdhM=",
        "originContent": "script must stay under 200 lines of code to ensure it can be easily audited by",
        "translatedContent": "anyone who wants to run it."
      },
      {
        "row": 43,
        "rowsha": "Vnl0xN4lnjILdZK0nrnwFiVGlh4gKPWoRGjVes79aYI=",
        "originContent": "anyone who wants to run it.",
        "translatedContent": ""
      },
      {
        "row": 44,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "If you want to add features for your own setup to make things easier for you,"
      },
      {
        "row": 45,
        "rowsha": "GJwPs3j/L6ZgFNgWqwdFtMw5VDHT1h5m8+Rcu2/HLHQ=",
        "originContent": "If you want to add features for your own setup to make things easier for you,",
        "translatedContent": "please do! It's open source, so feel free to fork it and modify as necessary."
      },
      {
        "row": 46,
        "rowsha": "uT/a4BV61Fou/h6Uq16AJcigf58Eu3OnnQBZYbQ7Jq0=",
        "originContent": "please do! It's open source, so feel free to fork it and modify as necessary.",
        "translatedContent": ""
      },
      {
        "row": 47,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]