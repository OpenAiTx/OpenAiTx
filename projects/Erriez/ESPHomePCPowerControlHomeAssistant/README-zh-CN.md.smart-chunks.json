[
  {
    "Id": 1,
    "Content": "# ESPHome PC Power Control via Home Assistant\n\nThis project contains remote PC power control via HomeAssistant and ESPHome ESP8266/ESP32 boards.\n\nI use this project to power my PC based NAS remotely on and off via Home Assistant as alternative to Wake-On-Lan (WOL) which has known limitations.\n\n## Features\n\n* Control physical PC power button (front panel) connected to the motherboard:\n  * Turn PC power on from any power state such as `power-off/suspended/hybernate` (Behavior short press power button).\n  * Graceful `shutdown/suspend/hybernate` of the operating system (Behavior short press power button).\n  * Force power-off (Behavior long press power-button).\n* Read PC power on/off status from motherboard.\n* No operating system dependency.\n* Power/reset buttons front panel remains full functional.\n* User authorization via Homeassistant.\n* Use with any (micro/mini)-ATX computer motherboard.\n\nYoutube video:\n\n[![Youtube video](https://img.youtube.com/vi/rAcvqaPf830/0.jpg)](https://www.youtube.com/watch?v=rAcvqaPf830)\n\nHomeassistant screenshot:\n\n![Screenshot Home Assistant](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/ScreenshotHomeAssistant.jpg)\n\n## Differences Wake-On-Lan (WOL) magic packet\n\n[Wake-On-Lan (WOL)](https://en.wikipedia.org/wiki/Wake-on-LAN) is intended to turn computer power on remotely via Ethernet by sending a so called `magic packet`. This has several known limitations which are not applicable with this ESP project:\n\n* Wake-On-Lan (WOL) has **no authorization**! The WOL protocol has no functionality to provide a password or allow a specific computer to wake from. Any device on the same LAN can wake a PC by sending a magic packet. The ESP is password protected via Homeassistant.\n* Wake-On-Lan (WOL) can only `wake` a PC from suspend or power-off state. There is no shutdown/suspend functionality. \n* To put a Linux machine in `sleep` state, a SSH connection to the remote PC can be made for example by executing `pm-suspend` command (Install via `sudo apt install pm-utils`), reference [Ubuntu pm-action documentation](https://manpages.ubuntu.com/manpages/jammy/man8/pm-action.8.html). Disadvantages:\n  * Requires SSH login.\n  * Requires sudo rights.\n* Wake-On-Lan magic packets are ignored when connecting main power the first time to the power supply, even when WOL is activated in the BIOS. The reason is that WOL is disabled on most computers at first power on and requires activation by a running operating system before the PC responds on a magic packet to wake the computer. Reference: [Ubuntu Wake-On-Lan](https://help.ubuntu.com/community/WakeOnLan).\n* Running Homeassistant [Wake-On-Lan](https://www.home-assistant.io/integrations/wake_on_lan) in a Docker container cannot forward broadcast magic packets with a bridged network configuration. It requires an external Docker container as bridge to forward magic packages and is beyond the scope of Homeassistant. This is currently not included in Homeassistant documentation.\n\n## Hardware\n",
    "ContentSha": "4+5o8K3h7zGC7TZUWSB/BdOapghMrEYj9XCbd1amFrI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# ESPHome 通过 Home Assistant 控制 PC 电源\n\n本项目包含通过 HomeAssistant 和 ESPHome ESP8266/ESP32 板远程控制 PC 电源。\n\n我使用此项目通过 Home Assistant 远程开关我的 PC 作为 NAS 的电源，作为唤醒局域网（WOL）已知限制的替代方案。\n\n## 功能\n\n* 控制连接到主板的物理 PC 电源按钮（前面板）：\n  * 从任何电源状态如 `断电/挂起/休眠` 开启 PC 电源（短按电源按钮行为）。\n  * 操作系统的正常 `关机/挂起/休眠`（短按电源按钮行为）。\n  * 强制断电（长按电源按钮行为）。\n* 读取主板上的 PC 电源开/关状态。\n* 无操作系统依赖。\n* 前面板的电源/重置按钮保持完全功能。\n* 通过 Homeassistant 进行用户授权。\n* 适用于任何（微型/迷你）ATX 电脑主板。\n\nYoutube 视频：\n\n[![Youtube 视频](https://img.youtube.com/vi/rAcvqaPf830/0.jpg)](https://www.youtube.com/watch?v=rAcvqaPf830)\n\nHomeassistant 截图：\n\n![Home Assistant 截图](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/ScreenshotHomeAssistant.jpg)\n\n## 与唤醒局域网（WOL）魔术包的区别\n\n[唤醒局域网（WOL）](https://en.wikipedia.org/wiki/Wake-on-LAN)旨在通过以太网发送所谓的“魔术包”远程开启电脑电源。此方法存在若干已知限制，而本 ESP 项目不受这些限制影响：\n\n* 唤醒局域网（WOL）**无授权机制**！WOL 协议没有提供密码或允许特定计算机唤醒的功能。任何同一局域网内的设备均可通过发送魔术包唤醒 PC。ESP 通过 Homeassistant 进行密码保护。\n* 唤醒局域网（WOL）只能从挂起或断电状态 `唤醒` PC。没有关机/挂起功能。\n* 要使 Linux 机器进入 `睡眠` 状态，可以通过 SSH 连接远程 PC 并执行 `pm-suspend` 命令（通过 `sudo apt install pm-utils` 安装），参考 [Ubuntu pm-action 文档](https://manpages.ubuntu.com/manpages/jammy/man8/pm-action.8.html)。缺点：\n  * 需要 SSH 登录。\n  * 需要 sudo 权限。\n* 当首次连接主电源到电源供应器时，唤醒局域网魔术包会被忽略，即使 BIOS 中启用了 WOL。原因是多数电脑在首次开机时禁用 WOL，需要操作系统运行后激活，PC 才会响应魔术包以唤醒电脑。参考：[Ubuntu 唤醒局域网](https://help.ubuntu.com/community/WakeOnLan)。\n* 在 Docker 容器中运行 Homeassistant 的 [唤醒局域网](https://www.home-assistant.io/integrations/wake_on_lan) 无法使用桥接网络配置转发广播魔术包。它需要一个外部 Docker 容器作为桥接以转发魔术包，超出 Homeassistant 范围。目前 Homeassistant 文档中未包含此内容。\n\n## 硬件\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "B4a3bue/J18RQq5xNLnHMZcA4bnviLUynxxL9qTsR8c=",
        "originContent": "# ESPHome PC Power Control via Home Assistant",
        "translatedContent": "# ESPHome 通过 Home Assistant 控制 PC 电源"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "nZ02Huqhcdp3Gs+itpYq9Q1LeDZjz2B+92I42zNJXls=",
        "originContent": "This project contains remote PC power control via HomeAssistant and ESPHome ESP8266/ESP32 boards.",
        "translatedContent": "本项目包含通过 HomeAssistant 和 ESPHome ESP8266/ESP32 板远程控制 PC 电源。"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "t54lgEk4zZJE6w4k3/jKa+XIsggt6wXyTTNC/i2rXgY=",
        "originContent": "I use this project to power my PC based NAS remotely on and off via Home Assistant as alternative to Wake-On-Lan (WOL) which has known limitations.",
        "translatedContent": "我使用此项目通过 Home Assistant 远程开关我的 PC 作为 NAS 的电源，作为唤醒局域网（WOL）已知限制的替代方案。"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "nrVeE3oDH0tNFm9CX5stkYPKAaCrnePTkJZtrLHmoDg=",
        "originContent": "## Features",
        "translatedContent": "## 功能"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "BS1zFtxMA0whppJJSv1mC6BMhqGzpP99c2dC9KXJ4E8=",
        "originContent": "* Control physical PC power button (front panel) connected to the motherboard:",
        "translatedContent": "* 控制连接到主板的物理 PC 电源按钮（前面板）："
      },
      {
        "row": 10,
        "rowsha": "/2pF8Yd8vK8vfaN2NDwcrkUNJoyFUc3ZkLRwdSY6wA8=",
        "originContent": "  * Turn PC power on from any power state such as `power-off/suspended/hybernate` (Behavior short press power button).",
        "translatedContent": "  * 从任何电源状态如 `断电/挂起/休眠` 开启 PC 电源（短按电源按钮行为）。"
      },
      {
        "row": 11,
        "rowsha": "tNdd2mdARyTK6r4+TAzp3EGc6lsvoSX14jQlq3+rOLs=",
        "originContent": "  * Graceful `shutdown/suspend/hybernate` of the operating system (Behavior short press power button).",
        "translatedContent": "  * 操作系统的正常 `关机/挂起/休眠`（短按电源按钮行为）。"
      },
      {
        "row": 12,
        "rowsha": "xX6toGPxalVQsNQrpQM3BZs+IIx6DWMVI12A5xgfEh8=",
        "originContent": "  * Force power-off (Behavior long press power-button).",
        "translatedContent": "  * 强制断电（长按电源按钮行为）。"
      },
      {
        "row": 13,
        "rowsha": "9KT6O78SfZbwpWQxo98kUZ2d5iC/v4aGXVGK7EjVyKg=",
        "originContent": "* Read PC power on/off status from motherboard.",
        "translatedContent": "* 读取主板上的 PC 电源开/关状态。"
      },
      {
        "row": 14,
        "rowsha": "Rw7wx7jf6Y+6u3E35u9ai+VIaBiL/7BfK/CSEbE1i+o=",
        "originContent": "* No operating system dependency.",
        "translatedContent": "* 无操作系统依赖。"
      },
      {
        "row": 15,
        "rowsha": "HOtbVt+n+Ehkvogz8Ws0avYqjnj1+6pPKzwzOlrUnBo=",
        "originContent": "* Power/reset buttons front panel remains full functional.",
        "translatedContent": "* 前面板的电源/重置按钮保持完全功能。"
      },
      {
        "row": 16,
        "rowsha": "L7i7vMvJcFT916MH/l8Kn/qURH8Mqou2nMLM4OOLB2I=",
        "originContent": "* User authorization via Homeassistant.",
        "translatedContent": "* 通过 Homeassistant 进行用户授权。"
      },
      {
        "row": 17,
        "rowsha": "HZpdeKb2j6IAjQlYMM+nso1UJbU76hmSKsy278KecQk=",
        "originContent": "* Use with any (micro/mini)-ATX computer motherboard.",
        "translatedContent": "* 适用于任何（微型/迷你）ATX 电脑主板。"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "7spRdHnMRKYgLqG5/5TUfR8RntSmGG/k/i9Tp/xAbQI=",
        "originContent": "Youtube video:",
        "translatedContent": "Youtube 视频："
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "OlGrCpWrDM2Bj1PEPIYmVfuP1D27gnHxzUrDGpd73HY=",
        "originContent": "[![Youtube video](https://img.youtube.com/vi/rAcvqaPf830/0.jpg)](https://www.youtube.com/watch?v=rAcvqaPf830)",
        "translatedContent": "[![Youtube 视频](https://img.youtube.com/vi/rAcvqaPf830/0.jpg)](https://www.youtube.com/watch?v=rAcvqaPf830)"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "m89qGubi81MLYjIq1HFoVPmxSujfHA03Ac/W0N6iL+c=",
        "originContent": "Homeassistant screenshot:",
        "translatedContent": "Homeassistant 截图："
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "4Uucw5Fs20FexWp9nZwKerAmA3SNz42UB7bE8trmGNE=",
        "originContent": "![Screenshot Home Assistant](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/ScreenshotHomeAssistant.jpg)",
        "translatedContent": "![Home Assistant 截图](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/ScreenshotHomeAssistant.jpg)"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "aFhnvAVpHYbZcvOuR+Zn3OTwO9/DNXP93ie97Fu2O1Y=",
        "originContent": "## Differences Wake-On-Lan (WOL) magic packet",
        "translatedContent": "## 与唤醒局域网（WOL）魔术包的区别"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "m3tdEluQRnb3mKv59oOD37xauYci+M2rL/kqtf1sgR4=",
        "originContent": "[Wake-On-Lan (WOL)](https://en.wikipedia.org/wiki/Wake-on-LAN) is intended to turn computer power on remotely via Ethernet by sending a so called `magic packet`. This has several known limitations which are not applicable with this ESP project:",
        "translatedContent": "[唤醒局域网（WOL）](https://en.wikipedia.org/wiki/Wake-on-LAN)旨在通过以太网发送所谓的“魔术包”远程开启电脑电源。此方法存在若干已知限制，而本 ESP 项目不受这些限制影响："
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "6TgVKF0hKHEDpbqfAFUJ9iyrqlvhRzJ0X3VcUeV7/ds=",
        "originContent": "* Wake-On-Lan (WOL) has **no authorization**! The WOL protocol has no functionality to provide a password or allow a specific computer to wake from. Any device on the same LAN can wake a PC by sending a magic packet. The ESP is password protected via Homeassistant.",
        "translatedContent": "* 唤醒局域网（WOL）**无授权机制**！WOL 协议没有提供密码或允许特定计算机唤醒的功能。任何同一局域网内的设备均可通过发送魔术包唤醒 PC。ESP 通过 Homeassistant 进行密码保护。"
      },
      {
        "row": 32,
        "rowsha": "St68KR7FO2AXYH23/cxpMdo0G7TWWSBoAdgroCBsdtw=",
        "originContent": "* Wake-On-Lan (WOL) can only `wake` a PC from suspend or power-off state. There is no shutdown/suspend functionality. ",
        "translatedContent": "* 唤醒局域网（WOL）只能从挂起或断电状态 `唤醒` PC。没有关机/挂起功能。"
      },
      {
        "row": 33,
        "rowsha": "5Kbfh+x5R0sz8TETfhqxuod9pM5uVbLovk8mQBb9m8E=",
        "originContent": "* To put a Linux machine in `sleep` state, a SSH connection to the remote PC can be made for example by executing `pm-suspend` command (Install via `sudo apt install pm-utils`), reference [Ubuntu pm-action documentation](https://manpages.ubuntu.com/manpages/jammy/man8/pm-action.8.html). Disadvantages:",
        "translatedContent": "* 要使 Linux 机器进入 `睡眠` 状态，可以通过 SSH 连接远程 PC 并执行 `pm-suspend` 命令（通过 `sudo apt install pm-utils` 安装），参考 [Ubuntu pm-action 文档](https://manpages.ubuntu.com/manpages/jammy/man8/pm-action.8.html)。缺点："
      },
      {
        "row": 34,
        "rowsha": "DiG2ijLPKJiYr4a2tJtWMXJpstUGdYnb+Q7M4Fj1mtw=",
        "originContent": "  * Requires SSH login.",
        "translatedContent": "  * 需要 SSH 登录。"
      },
      {
        "row": 35,
        "rowsha": "NCbzt6Gfy+NRIKe7ff2dN7n4UjNt/ei4xa9iBivnsrY=",
        "originContent": "  * Requires sudo rights.",
        "translatedContent": "  * 需要 sudo 权限。"
      },
      {
        "row": 36,
        "rowsha": "3Tujj3NsQCaa+tEcuSL4PcD+wm7Bw7qmxrsWvIqWWEc=",
        "originContent": "* Wake-On-Lan magic packets are ignored when connecting main power the first time to the power supply, even when WOL is activated in the BIOS. The reason is that WOL is disabled on most computers at first power on and requires activation by a running operating system before the PC responds on a magic packet to wake the computer. Reference: [Ubuntu Wake-On-Lan](https://help.ubuntu.com/community/WakeOnLan).",
        "translatedContent": "* 当首次连接主电源到电源供应器时，唤醒局域网魔术包会被忽略，即使 BIOS 中启用了 WOL。原因是多数电脑在首次开机时禁用 WOL，需要操作系统运行后激活，PC 才会响应魔术包以唤醒电脑。参考：[Ubuntu 唤醒局域网](https://help.ubuntu.com/community/WakeOnLan)。"
      },
      {
        "row": 37,
        "rowsha": "FtzOOn/X/AICbbwyVolfpSUHFeJxwK3Cw4ViD7cCUAg=",
        "originContent": "* Running Homeassistant [Wake-On-Lan](https://www.home-assistant.io/integrations/wake_on_lan) in a Docker container cannot forward broadcast magic packets with a bridged network configuration. It requires an external Docker container as bridge to forward magic packages and is beyond the scope of Homeassistant. This is currently not included in Homeassistant documentation.",
        "translatedContent": "* 在 Docker 容器中运行 Homeassistant 的 [唤醒局域网](https://www.home-assistant.io/integrations/wake_on_lan) 无法使用桥接网络配置转发广播魔术包。它需要一个外部 Docker 容器作为桥接以转发魔术包，超出 Homeassistant 范围。目前 Homeassistant 文档中未包含此内容。"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "yhvK0dfVs4g26pyRaEAJslT47b5/wABWoK7s+rn1zuE=",
        "originContent": "## Hardware",
        "translatedContent": "## 硬件"
      },
      {
        "row": 40,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "The hardware consists of an ESP8266 or ESP32 and two IO pins, mounted on a PCI metal plate (see picture below). In my case I used an ESP8266 NodeMCU board. Theoretically any ESP8266 or ESP32 board can be used for this project.\n\n* One pin controls the power button by generating a long or short press\n* A second pin reads the motherboard power status.\n\n![Hardware](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/NodeMCU.jpg)\n\n## Schematic\n\nMy NAS is based on an Intel Core I7 ASRock Z97 ATX motherboard and contains standard 2.5mm 2x5 male headers:\n\n![Schematic](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/Schematic.png)\n\n**ATX header USB 2.0:**\n\nHeader `J1` pin 1 constant +5V power on pin 1, even when the PC is power-off and is used to power the NodeMCU. The ESP8266 or ESP32 is powered via an on-board 3V3 regulator.\n\n**ATX header System panel:**\n\nHeader `J2` contains the power, reset and GND pins:\n\n* Power button pin 6.\n  * Short press: Turn PC on or generate graceful shutdown.\n  * Long press: Generate hard power off.\n* Reset button pin 7.\n  * Used to read power status via the reset button pin:\n    * High: power-on\n    * Low: power-off\n* GND pin 5.\n\n* Pin `D1` is used to read the power status from the reset pin: High is on, Low is off. Resistor `R1` is used to minimize current when the IO pin is accidentally set to output.\n* Pin `D2` is used to pull the power button low to generate a short or long press. Transistor `Q1` is used for secure isolation between ESP8266 and motherboard.\n\nWarning: All ATX and ESP pins must be operating at 3V3.\n\n## Downloads\n\n* [KiCad schematic .SCH](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/kicad/ESP8266-ESPHome-PC-Power-HomeAssistant.pro)\n\n## Wiring",
    "ContentSha": "M0+BQf43QrBN7coO7V9k2Im2WOgKJC1fRZ1d3sb0JZg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "硬件包括一个ESP8266或ESP32和两个IO引脚，安装在PCI金属板上（见下图）。在我的案例中，我使用了一个ESP8266 NodeMCU开发板。理论上，任何ESP8266或ESP32开发板都可以用于此项目。\n\n* 一个引脚通过生成长按或短按来控制电源按钮\n* 第二个引脚读取主板电源状态。\n\n![Hardware](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/NodeMCU.jpg)\n\n## 原理图\n\n我的NAS基于Intel Core I7 ASRock Z97 ATX主板，包含标准2.5mm 2x5公头接头：\n\n![Schematic](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/Schematic.png)\n\n**ATX接口 USB 2.0：**\n\n接口`J1`第1针是常电+5V电源，即使PC关闭电源也有电，用于为NodeMCU供电。ESP8266或ESP32通过板载3V3稳压器供电。\n\n**ATX接口 系统面板：**\n\n接口`J2`包含电源、重置和接地引脚：\n\n* 电源按钮第6针。\n  * 短按：开机或生成优雅关机。\n  * 长按：生成硬关机。\n* 重置按钮第7针。\n  * 用于通过重置按钮引脚读取电源状态：\n    * 高电平：开机\n    * 低电平：关机\n* 接地第5针。\n\n* 引脚`D1`用于从重置引脚读取电源状态：高电平为开，低电平为关。电阻`R1`用于当IO引脚意外设置为输出时，最小化电流。\n* 引脚`D2`用于拉低电源按钮以生成短按或长按。晶体管`Q1`用于ESP8266与主板之间的安全隔离。\n\n警告：所有ATX和ESP引脚必须工作在3V3电压下。\n\n## 下载\n\n* [KiCad原理图 .SCH](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/kicad/ESP8266-ESPHome-PC-Power-HomeAssistant.pro)\n\n## 接线",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "5cPyKdNE7t6TVBVjqB3m1qxncMGGqf6308P8DWGY4jM=",
        "originContent": "The hardware consists of an ESP8266 or ESP32 and two IO pins, mounted on a PCI metal plate (see picture below). In my case I used an ESP8266 NodeMCU board. Theoretically any ESP8266 or ESP32 board can be used for this project.",
        "translatedContent": "硬件包括一个ESP8266或ESP32和两个IO引脚，安装在PCI金属板上（见下图）。在我的案例中，我使用了一个ESP8266 NodeMCU开发板。理论上，任何ESP8266或ESP32开发板都可以用于此项目。"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "PKuP2pnT594BcLO2meS4sLtQ1WzbPeF76bvJdrB9I9o=",
        "originContent": "* One pin controls the power button by generating a long or short press",
        "translatedContent": "* 一个引脚通过生成长按或短按来控制电源按钮"
      },
      {
        "row": 4,
        "rowsha": "lf/pcxKrbnSENpnHwDWdGFPTTZcbPSHvzTeJcXO8yJw=",
        "originContent": "* A second pin reads the motherboard power status.",
        "translatedContent": "* 第二个引脚读取主板电源状态。"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "3tJylBBGvpPSLrKlUwh27o3uGd1j11mIQg63nFnwruk=",
        "originContent": "![Hardware](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/NodeMCU.jpg)",
        "translatedContent": "![Hardware](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/NodeMCU.jpg)"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "lJeUi8rz9oeHtjFm9NKhzcOy81lYPThRWgbVUyZVhew=",
        "originContent": "## Schematic",
        "translatedContent": "## 原理图"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "trahjNu1vVE1PeQZ2ov7pLuK7pHqcw7aofclYpq0r4c=",
        "originContent": "My NAS is based on an Intel Core I7 ASRock Z97 ATX motherboard and contains standard 2.5mm 2x5 male headers:",
        "translatedContent": "我的NAS基于Intel Core I7 ASRock Z97 ATX主板，包含标准2.5mm 2x5公头接头："
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "Z5Qrw/rObQQ6oermSHQT41VBbNCQy8EZ9Q8c+eYYWbo=",
        "originContent": "![Schematic](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/Schematic.png)",
        "translatedContent": "![Schematic](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/Schematic.png)"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "CXQnPnDI5GcWfLsdeJwnTqRU2hM7UkUEDX8fJ/RVgyo=",
        "originContent": "**ATX header USB 2.0:**",
        "translatedContent": "**ATX接口 USB 2.0：**"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "ZvN/qeIIx6AVg21yTsGgJsatSZ64ko7fZxgFQZ45BgI=",
        "originContent": "Header `J1` pin 1 constant +5V power on pin 1, even when the PC is power-off and is used to power the NodeMCU. The ESP8266 or ESP32 is powered via an on-board 3V3 regulator.",
        "translatedContent": "接口`J1`第1针是常电+5V电源，即使PC关闭电源也有电，用于为NodeMCU供电。ESP8266或ESP32通过板载3V3稳压器供电。"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "5BUmJtbLPHX3gd+4/tUY90bfW0KsLmhkfoCOVc9YFdc=",
        "originContent": "**ATX header System panel:**",
        "translatedContent": "**ATX接口 系统面板：**"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "bJTfKT4N8YbW1z2+PYES3fyBhL3hX4b/6vJ28LHZyOc=",
        "originContent": "Header `J2` contains the power, reset and GND pins:",
        "translatedContent": "接口`J2`包含电源、重置和接地引脚："
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "n3peIBNFb0XYH2AU1EtFVe7cTwu22Nm43eW9rzxovW0=",
        "originContent": "* Power button pin 6.",
        "translatedContent": "* 电源按钮第6针。"
      },
      {
        "row": 23,
        "rowsha": "iUM2FlwC5+VVdXOZEg5fSZLGL1keLvEulR3zZeAWfjM=",
        "originContent": "  * Short press: Turn PC on or generate graceful shutdown.",
        "translatedContent": "  * 短按：开机或生成优雅关机。"
      },
      {
        "row": 24,
        "rowsha": "mh3L36d5kzy3E+sPCbqLm4XgVGqdpmM7cSVS2o0XCu8=",
        "originContent": "  * Long press: Generate hard power off.",
        "translatedContent": "  * 长按：生成硬关机。"
      },
      {
        "row": 25,
        "rowsha": "bMTriiiNswQLvjD/b4fQz2rhpYpftPlPDUbY2NjeNxU=",
        "originContent": "* Reset button pin 7.",
        "translatedContent": "* 重置按钮第7针。"
      },
      {
        "row": 26,
        "rowsha": "ZvWHcpETRAKiN4/Z3RiztSpT9+P4kfvTERG19FNhJsU=",
        "originContent": "  * Used to read power status via the reset button pin:",
        "translatedContent": "  * 用于通过重置按钮引脚读取电源状态："
      },
      {
        "row": 27,
        "rowsha": "jB6xo8mLIG7OIASE/h05ujGnqzUTobA48L+mfQM7b4g=",
        "originContent": "    * High: power-on",
        "translatedContent": "    * 高电平：开机"
      },
      {
        "row": 28,
        "rowsha": "J4HsocTVHKVA10M6onORNejKL8hTuEdRzK18hZ04+F0=",
        "originContent": "    * Low: power-off",
        "translatedContent": "    * 低电平：关机"
      },
      {
        "row": 29,
        "rowsha": "ukmxSOJBILaIwHn9lbz2k8xDdUx4k1eyXpombIXO9Ak=",
        "originContent": "* GND pin 5.",
        "translatedContent": "* 接地第5针。"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "iqzC3QtxQPPpagiqpLC34XbFlEeIAaUPgTCKXb/F8js=",
        "originContent": "* Pin `D1` is used to read the power status from the reset pin: High is on, Low is off. Resistor `R1` is used to minimize current when the IO pin is accidentally set to output.",
        "translatedContent": "* 引脚`D1`用于从重置引脚读取电源状态：高电平为开，低电平为关。电阻`R1`用于当IO引脚意外设置为输出时，最小化电流。"
      },
      {
        "row": 32,
        "rowsha": "NLE80tCQNSygW1WSWJDgsb7zLgRqIg5G+2ULZkuNkrw=",
        "originContent": "* Pin `D2` is used to pull the power button low to generate a short or long press. Transistor `Q1` is used for secure isolation between ESP8266 and motherboard.",
        "translatedContent": "* 引脚`D2`用于拉低电源按钮以生成短按或长按。晶体管`Q1`用于ESP8266与主板之间的安全隔离。"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "IJMsSzG7BsnD3+EShnKawIfok22VSHy+9PRYQrI0/C0=",
        "originContent": "Warning: All ATX and ESP pins must be operating at 3V3.",
        "translatedContent": "警告：所有ATX和ESP引脚必须工作在3V3电压下。"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "C6wYWjaRGyeLjlRf8jDHkU/uOhFyXQv0r5Fc65FtGis=",
        "originContent": "## Downloads",
        "translatedContent": "## 下载"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "znpU+n+8ABRwBLQthdTlHx0f/MgQJE53rnE2OUZ8NnM=",
        "originContent": "* [KiCad schematic .SCH](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/kicad/ESP8266-ESPHome-PC-Power-HomeAssistant.pro)",
        "translatedContent": "* [KiCad原理图 .SCH](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/kicad/ESP8266-ESPHome-PC-Power-HomeAssistant.pro)"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "qD6BcOE2rVcBOV0PyD9kuZ034p57DRt1GJNrD+MHoew=",
        "originContent": "## Wiring",
        "translatedContent": "## 接线"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 3,
    "Content": "\n![Wiring](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/Wiring.jpg)\n\nA DIY breakout PCB can be mounted at the system panel header to connect power button `SW1` and reset button `SW2`.\n\n## WiFi stability\n\nThere is sufficient space in an ATX computer case to mount the ESP board. However, the computer case is metal shielded, so the WiFi distance to the base station reduces. It is recommended to place the ESP outside the computer case when the WiFi connection is unstable or distance too low. An ESP32 may result in different WiFi connection stability, but overall it depends on the environment.\n\nESP8266 PCB mounted at the back of the PC case:\n\n![ESP PC mount](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/ESPMount.jpg)\n\n## Software updates\n\nThe ESPHome application firmware can be updated via USB connection (virtual serial port) or WiFi OTA (Over The Air update).\n\nUpdating the firmware via WiFi is enabled when configuring `ota` in the .yaml file. This requires a WiFi connection between host computer and ESP. OTA update does not work when the login from ESP to WiFi base station fails due to incorrect WiFi credentials. In this case an update via serial is required or via `ap` fallback as configured in the .yaml file.\n\n## ESPHome\n\nThe ESPHome application consists of the two Yaml files. One configuration file and a second `secrets.yaml` to store passwords.\n\nDocumentation:\n\n* [ESPHome GPIO Switch](https://esphome.io/components/switch/gpio.html)\n* [ESPHome Binary Sensor](https://esphome.io/components/binary_sensor/gpio.html)\n\n### Project configuration\n\nConfigure the following files:\n- [pc-power.yaml](https://github.com/Erriez/ESPHomePCPowerControlHomeAssistant/blob/master/pc-power.yaml): Configure `platform` and `board`.\n- [secrets.yaml](https://github.com/Erriez/ESPHomePCPowerControlHomeAssistant/blob/master/secrets.yaml): Configure WiFi SSID and passwords\n\nPlease refer to [ESPHome documentation](https://esphome.io/components/esphome.html) for more information about ESPHome YAML configuration.\n\n\n### Program ESP8266 or ESP32\n\nConnect USB cable to ESP8266 or ESP32 board and enter the following commands. (Examples are tested on Ubuntu). For more information, refer to [ESPHome.io](https://esphome.io/guides/getting_started_command_line.html).",
    "ContentSha": "BAYdIU+gd1U9HtTA93iP0y8fBtM/7o1irZRL/ZNgO88=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "![Wiring](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/Wiring.jpg)\n\n一个自制的分线板PCB可以安装在系统面板插针上，以连接电源按钮 `SW1` 和复位按钮 `SW2`。\n\n## WiFi 稳定性\n\nATX 电脑机箱内有足够空间安装 ESP 板。然而，电脑机箱为金属屏蔽，会减少与基站的 WiFi 距离。建议当 WiFi 连接不稳定或距离过近时，将 ESP 放置在电脑机箱外。ESP32 可能会带来不同的 WiFi 连接稳定性，但总体上取决于环境。\n\nESP8266 PCB 安装在电脑机箱背面：\n\n![ESP PC mount](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/ESPMount.jpg)\n\n## 软件更新\n\nESPHome 应用固件可以通过 USB 连接（虚拟串口）或 WiFi OTA（空中升级）进行更新。\n\n通过 WiFi 更新固件需要在 .yaml 文件中配置 `ota`，这要求主机电脑与 ESP 之间有 WiFi 连接。当 ESP 登录到 WiFi 基站失败（例如 WiFi 凭据错误）时，OTA 更新将无法使用。这种情况下需要通过串口更新，或者通过 .yaml 文件中配置的 `ap` 回退模式进行更新。\n\n## ESPHome\n\nESPHome 应用由两个 Yaml 文件组成。一个配置文件和第二个 `secrets.yaml` 用于存储密码。\n\n文档：\n\n* [ESPHome GPIO 开关](https://esphome.io/components/switch/gpio.html)\n* [ESPHome 二进制传感器](https://esphome.io/components/binary_sensor/gpio.html)\n\n### 项目配置\n\n配置以下文件：\n- [pc-power.yaml](https://github.com/Erriez/ESPHomePCPowerControlHomeAssistant/blob/master/pc-power.yaml)：配置 `platform` 和 `board`。\n- [secrets.yaml](https://github.com/Erriez/ESPHomePCPowerControlHomeAssistant/blob/master/secrets.yaml)：配置 WiFi SSID 和密码\n\n更多关于 ESPHome YAML 配置的信息，请参考 [ESPHome 文档](https://esphome.io/components/esphome.html)。\n\n### 编程 ESP8266 或 ESP32\n\n连接 USB 线到 ESP8266 或 ESP32 板，输入以下命令。（示例在 Ubuntu 上测试）。更多信息请参考 [ESPHome.io](https://esphome.io/guides/getting_started_command_line.html)。\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "![Wiring](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/Wiring.jpg)"
      },
      {
        "row": 2,
        "rowsha": "Lh4NOQmSvGLJ6PC/RhIUO0Bki47HS0sB2diK+Ga0jv4=",
        "originContent": "![Wiring](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/Wiring.jpg)",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "一个自制的分线板PCB可以安装在系统面板插针上，以连接电源按钮 `SW1` 和复位按钮 `SW2`。"
      },
      {
        "row": 4,
        "rowsha": "XZVqtQ40OijCSiVpjwgEujPUlkqLOChMvH9QCZrt43Q=",
        "originContent": "A DIY breakout PCB can be mounted at the system panel header to connect power button `SW1` and reset button `SW2`.",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## WiFi 稳定性"
      },
      {
        "row": 6,
        "rowsha": "lO6rQi5lZ0seuwUx2rvzqGaEYfMHsqObdUNr7s33IJ0=",
        "originContent": "## WiFi stability",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "ATX 电脑机箱内有足够空间安装 ESP 板。然而，电脑机箱为金属屏蔽，会减少与基站的 WiFi 距离。建议当 WiFi 连接不稳定或距离过近时，将 ESP 放置在电脑机箱外。ESP32 可能会带来不同的 WiFi 连接稳定性，但总体上取决于环境。"
      },
      {
        "row": 8,
        "rowsha": "2CMy8LYicb6y5pxx1NUNXlXCfisD2F5XivogNaNKHbc=",
        "originContent": "There is sufficient space in an ATX computer case to mount the ESP board. However, the computer case is metal shielded, so the WiFi distance to the base station reduces. It is recommended to place the ESP outside the computer case when the WiFi connection is unstable or distance too low. An ESP32 may result in different WiFi connection stability, but overall it depends on the environment.",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "ESP8266 PCB 安装在电脑机箱背面："
      },
      {
        "row": 10,
        "rowsha": "myPHyrGo4XZbSOqUmpXah6G1vRXDE6kTngO0z9nav48=",
        "originContent": "ESP8266 PCB mounted at the back of the PC case:",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "![ESP PC mount](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/ESPMount.jpg)"
      },
      {
        "row": 12,
        "rowsha": "Yk0oFO0yB7J4wp+X8DhOUr+ObJxI7nFDFK5jFGX22yQ=",
        "originContent": "![ESP PC mount](https://raw.githubusercontent.com/Erriez/ESPHomePCPowerControlHomeAssistant/master/images/ESPMount.jpg)",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## 软件更新"
      },
      {
        "row": 14,
        "rowsha": "cH1PD6fzQ0jDqLi6EATxcW026RrmnIdjmv08DqQsrP0=",
        "originContent": "## Software updates",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "ESPHome 应用固件可以通过 USB 连接（虚拟串口）或 WiFi OTA（空中升级）进行更新。"
      },
      {
        "row": 16,
        "rowsha": "/cbTwbSnWeDlTxTDR12IJrbxJSB+9AbZdTNOLFPoOLQ=",
        "originContent": "The ESPHome application firmware can be updated via USB connection (virtual serial port) or WiFi OTA (Over The Air update).",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "通过 WiFi 更新固件需要在 .yaml 文件中配置 `ota`，这要求主机电脑与 ESP 之间有 WiFi 连接。当 ESP 登录到 WiFi 基站失败（例如 WiFi 凭据错误）时，OTA 更新将无法使用。这种情况下需要通过串口更新，或者通过 .yaml 文件中配置的 `ap` 回退模式进行更新。"
      },
      {
        "row": 18,
        "rowsha": "Zpd6KNNZcyUrA+nFc7mRdsuih7YpysZT6YG9hcJnL4Y=",
        "originContent": "Updating the firmware via WiFi is enabled when configuring `ota` in the .yaml file. This requires a WiFi connection between host computer and ESP. OTA update does not work when the login from ESP to WiFi base station fails due to incorrect WiFi credentials. In this case an update via serial is required or via `ap` fallback as configured in the .yaml file.",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## ESPHome"
      },
      {
        "row": 20,
        "rowsha": "bZcg9OQ5ONdQjuIuq9tA/B3dZ5PxoTiHPxqsiT6NibM=",
        "originContent": "## ESPHome",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "ESPHome 应用由两个 Yaml 文件组成。一个配置文件和第二个 `secrets.yaml` 用于存储密码。"
      },
      {
        "row": 22,
        "rowsha": "X45lA1Cp0nJrUiuMk5E947pzgasLBcFZSzxs0zWZzbc=",
        "originContent": "The ESPHome application consists of the two Yaml files. One configuration file and a second `secrets.yaml` to store passwords.",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "文档："
      },
      {
        "row": 24,
        "rowsha": "VQ8wzkF2FsQRC3mWNJcQVZzSlinfuOvgyokyk7B59Hw=",
        "originContent": "Documentation:",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* [ESPHome GPIO 开关](https://esphome.io/components/switch/gpio.html)"
      },
      {
        "row": 26,
        "rowsha": "hR+gdwMfjSYMbD114VV0vDaeyF0kCbkJkd5LSNRF0YQ=",
        "originContent": "* [ESPHome GPIO Switch](https://esphome.io/components/switch/gpio.html)",
        "translatedContent": "* [ESPHome 二进制传感器](https://esphome.io/components/binary_sensor/gpio.html)"
      },
      {
        "row": 27,
        "rowsha": "zM0s9/h27wgdvFHesgG3fhO7NXMxWGgvs9TzEdxWFT4=",
        "originContent": "* [ESPHome Binary Sensor](https://esphome.io/components/binary_sensor/gpio.html)",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 项目配置"
      },
      {
        "row": 29,
        "rowsha": "jZhdTlF1S6Ry6Uf24i7+evL+t1bj+yNFQE76CQRlqgU=",
        "originContent": "### Project configuration",
        "translatedContent": ""
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "配置以下文件："
      },
      {
        "row": 31,
        "rowsha": "dmUVW4Usd7o83fwUglYojUDetPmCxM9D14qkX6Mvp2w=",
        "originContent": "Configure the following files:",
        "translatedContent": "- [pc-power.yaml](https://github.com/Erriez/ESPHomePCPowerControlHomeAssistant/blob/master/pc-power.yaml)：配置 `platform` 和 `board`。"
      },
      {
        "row": 32,
        "rowsha": "5N1qU5poOOWkQUQZqzufiSSdVu8UfetAUQ8BH+tm/80=",
        "originContent": "- [pc-power.yaml](https://github.com/Erriez/ESPHomePCPowerControlHomeAssistant/blob/master/pc-power.yaml): Configure `platform` and `board`.",
        "translatedContent": "- [secrets.yaml](https://github.com/Erriez/ESPHomePCPowerControlHomeAssistant/blob/master/secrets.yaml)：配置 WiFi SSID 和密码"
      },
      {
        "row": 33,
        "rowsha": "5bMTey0rdKoXggGHVBU9ISVo8De3BfbeSxEyv0ErtSg=",
        "originContent": "- [secrets.yaml](https://github.com/Erriez/ESPHomePCPowerControlHomeAssistant/blob/master/secrets.yaml): Configure WiFi SSID and passwords",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "更多关于 ESPHome YAML 配置的信息，请参考 [ESPHome 文档](https://esphome.io/components/esphome.html)。"
      },
      {
        "row": 35,
        "rowsha": "HzK4VCAAzTNnCDPUtHvwRxm/d1A9vEftaMEmvdS8Mns=",
        "originContent": "Please refer to [ESPHome documentation](https://esphome.io/components/esphome.html) for more information about ESPHome YAML configuration.",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 编程 ESP8266 或 ESP32"
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "4L3/LI6g3TMrs2TVZCfbob1SKYa5+YSws7w6bxkFM28=",
        "originContent": "### Program ESP8266 or ESP32",
        "translatedContent": "连接 USB 线到 ESP8266 或 ESP32 板，输入以下命令。（示例在 Ubuntu 上测试）。更多信息请参考 [ESPHome.io](https://esphome.io/guides/getting_started_command_line.html)。"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "CAJ+I8Xi3xVfWZCtt7WggP6sxZaV/bh/f0n5hWHHBsI=",
        "originContent": "Connect USB cable to ESP8266 or ESP32 board and enter the following commands. (Examples are tested on Ubuntu). For more information, refer to [ESPHome.io](https://esphome.io/guides/getting_started_command_line.html).",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "",
    "ContentSha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 5,
    "Content": "```bash\n# Clone this repository\n$ git clone git@github.com:Erriez/ESPHomePCPowerControlHomeAssistant.git\n\n# Install Python3 virtualenv\n$ sudo apt install python3-virtualenv\n\n# Create virtualenv\n$ virtualenv venv\n\n# Activate virtualenv\n$ source venv/bin/activate\n\n# Install ESPHome\n$ pip install esphome\n\n# Optional: Install platformio updates\n$ platformio platform update\n$ platformio upgrade\n\n# Optional: Add user permission serial port\n$ sudo usermod -a -G dialout <USERNAME>\n$ sudo reboot now\n\n# Check ESPHome installation\n$ esphome --help\n\n# Optional: Compile program without upload\n$ esphome compile pc-power.yaml\n\n# Upload program to ESP8266 or ESP32\n$ esphome run pc-power.yaml\n\n# Select serial port or WiFi to upload application\n\n# Check logs\n$ esphome logs pc-power.yaml\n```",
    "ContentSha": "ykgxbmCTgi4EWh01lRYgXM3WNZ4G5xHoVrh1KMYU6r4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n# Clone this repository\n$ git clone git@github.com:Erriez/ESPHomePCPowerControlHomeAssistant.git\n\n# Install Python3 virtualenv\n$ sudo apt install python3-virtualenv\n\n# Create virtualenv\n$ virtualenv venv\n\n# Activate virtualenv\n$ source venv/bin/activate\n\n# Install ESPHome\n$ pip install esphome\n\n# Optional: Install platformio updates\n$ platformio platform update\n$ platformio upgrade\n\n# Optional: Add user permission serial port\n$ sudo usermod -a -G dialout <USERNAME>\n$ sudo reboot now\n\n# Check ESPHome installation\n$ esphome --help\n\n# Optional: Compile program without upload\n$ esphome compile pc-power.yaml\n\n# Upload program to ESP8266 or ESP32\n$ esphome run pc-power.yaml\n\n# Select serial port or WiFi to upload application\n\n# Check logs\n$ esphome logs pc-power.yaml\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "FfyxfixqwnpInq0Xfs4gMI6UD6eB3RcxOdzb5OuQkqw=",
        "originContent": "# Clone this repository",
        "translatedContent": "# Clone this repository"
      },
      {
        "row": 3,
        "rowsha": "wIvFILmNy2vOJMhHP3k/sXpKg6jBQIl4Qf5lk3n3bbI=",
        "originContent": "$ git clone git@github.com:Erriez/ESPHomePCPowerControlHomeAssistant.git",
        "translatedContent": "$ git clone git@github.com:Erriez/ESPHomePCPowerControlHomeAssistant.git"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "hb252wEqBvzz+FkgpXbtRyNq19hxWaWgYxUrbatOtSY=",
        "originContent": "# Install Python3 virtualenv",
        "translatedContent": "# Install Python3 virtualenv"
      },
      {
        "row": 6,
        "rowsha": "o7EnxztiwhfPaA/zjE13AtIaK4ncbs0qi3xcnt2jKw4=",
        "originContent": "$ sudo apt install python3-virtualenv",
        "translatedContent": "$ sudo apt install python3-virtualenv"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "OdPZOahV9oQ6cUw2pgbF0agcD1wABj6WFa9etIumtiU=",
        "originContent": "# Create virtualenv",
        "translatedContent": "# Create virtualenv"
      },
      {
        "row": 9,
        "rowsha": "iEluOS0Dm2G7/U8jQKyDZy99tMYkRoBpYiyHdu7fpII=",
        "originContent": "$ virtualenv venv",
        "translatedContent": "$ virtualenv venv"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "+Op0atORHnSfQ/SBsHnGSNYWfJNJXTVC4MgENeCF2MA=",
        "originContent": "# Activate virtualenv",
        "translatedContent": "# Activate virtualenv"
      },
      {
        "row": 12,
        "rowsha": "qpXzW75m2qhId11iPeZo2jPrtiJjol3H/T1tJkLlTzk=",
        "originContent": "$ source venv/bin/activate",
        "translatedContent": "$ source venv/bin/activate"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "4gJxywQiLskE30SxkJ6gCpuhTfyvPeVxLB/FC0Gk+I8=",
        "originContent": "# Install ESPHome",
        "translatedContent": "# Install ESPHome"
      },
      {
        "row": 15,
        "rowsha": "KoeZmm8EJEP/IshxBWsJZXnriBPxKml2Q8LDBPwETuU=",
        "originContent": "$ pip install esphome",
        "translatedContent": "$ pip install esphome"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "lSwuYbUtBNaFFxeGAmPwYgrRVRSqv1dBuc3wkpSN/4E=",
        "originContent": "# Optional: Install platformio updates",
        "translatedContent": "# Optional: Install platformio updates"
      },
      {
        "row": 18,
        "rowsha": "2KS5QNPTEPwHKe56kP6jkOhRIlmQm9UojccDk66/qe8=",
        "originContent": "$ platformio platform update",
        "translatedContent": "$ platformio platform update"
      },
      {
        "row": 19,
        "rowsha": "2iAmtRiZJcxVEWAq4HkNEMEaFBSxDpcLdObGL0+vmM8=",
        "originContent": "$ platformio upgrade",
        "translatedContent": "$ platformio upgrade"
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 21,
        "rowsha": "VkQv5baQRhPVXnixBg6hnPCD/bKCnW0fBH3R6CHBils=",
        "originContent": "# Optional: Add user permission serial port",
        "translatedContent": "# Optional: Add user permission serial port"
      },
      {
        "row": 22,
        "rowsha": "NEjrYCxl81k6+z5M/4tXpgIhH8lvbPpueHOMdX8C8EA=",
        "originContent": "$ sudo usermod -a -G dialout <USERNAME>",
        "translatedContent": "$ sudo usermod -a -G dialout <USERNAME>"
      },
      {
        "row": 23,
        "rowsha": "xpE0X3oZzf7/LhK1LJ3biP9TCZzjVPYq7mrhW0GnACw=",
        "originContent": "$ sudo reboot now",
        "translatedContent": "$ sudo reboot now"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "i6ybRwKZBZXnpBCP6IphTkSngBn9F2uxVkO6kLU4tRs=",
        "originContent": "# Check ESPHome installation",
        "translatedContent": "# Check ESPHome installation"
      },
      {
        "row": 26,
        "rowsha": "sgRTlTYaVJ3piLw6sQMcd4RLrGonESPTSjKnh+ncBz0=",
        "originContent": "$ esphome --help",
        "translatedContent": "$ esphome --help"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "RPWhVWk4IjXQZmwSV+0nBgJiDNk5MkQcsJtX1vH/14M=",
        "originContent": "# Optional: Compile program without upload",
        "translatedContent": "# Optional: Compile program without upload"
      },
      {
        "row": 29,
        "rowsha": "BOrPHSZ9D0/TUd+WT9mLHl7f+fhbzc3ZKIEvTD4EXDU=",
        "originContent": "$ esphome compile pc-power.yaml",
        "translatedContent": "$ esphome compile pc-power.yaml"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "prJIETavCiA9iS/bXuaxi7dapwiC6QrLLqeovqBVZH8=",
        "originContent": "# Upload program to ESP8266 or ESP32",
        "translatedContent": "# Upload program to ESP8266 or ESP32"
      },
      {
        "row": 32,
        "rowsha": "lrGO0FTbTKKCdsOZeEY5cqYHR/bpEPlMNP0adF1Lf7U=",
        "originContent": "$ esphome run pc-power.yaml",
        "translatedContent": "$ esphome run pc-power.yaml"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "JxFtd6U1NrOUxa3cJnWirzTGAnq0aH67n8SFrkSn+rA=",
        "originContent": "# Select serial port or WiFi to upload application",
        "translatedContent": "# Select serial port or WiFi to upload application"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "7Fs8SML0O8kxV50H0oDFIgGUUfN1/yYQqdbsK7FzbRw=",
        "originContent": "# Check logs",
        "translatedContent": "# Check logs"
      },
      {
        "row": 37,
        "rowsha": "QOVxzLNvaFPe1zg3h8DoosRy4VYyucOIpBJGusroOXg=",
        "originContent": "$ esphome logs pc-power.yaml",
        "translatedContent": "$ esphome logs pc-power.yaml"
      },
      {
        "row": 38,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 6,
    "Content": "\n## Home Assistant configuration\n\nThis section describes Home Assistant configuration.\n\n### Register ESP device\n\n* `Configuration | Integrations: Add Integration: ESPHome`\n* Select hostname or IP address of the ESP device.\n* Enter password as configured in `secrets.yml` | `esphome_api_password`.\n\n### Homeassistant | Edit Dashboard | RAW Configuration Editor\n\nAdd PC power integration to a dashboard via raw edit:\n",
    "ContentSha": "+9RiSm1d1TIaM62ZTfFGN0pSYcp1JBrhMqOOsjcoPEA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n## Home Assistant 配置\n\n本节介绍 Home Assistant 的配置。\n\n### 注册 ESP 设备\n\n* `配置 | 集成：添加集成：ESPHome`\n* 选择 ESP 设备的主机名或 IP 地址。\n* 输入在 `secrets.yml` | `esphome_api_password` 中配置的密码。\n\n### Homeassistant | 编辑仪表盘 | 原始配置编辑器\n\n通过原始编辑将 PC 电源集成添加到仪表盘：\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "C8nHPZ1UpZedyET/mUerxiG7SlEMAoq+g5jj2wpLC9c=",
        "originContent": "## Home Assistant configuration",
        "translatedContent": "## Home Assistant 配置"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "zGSdxiJ8avon7iwp2bUrHWpyFUTdkBPWqMyilo/IQq8=",
        "originContent": "This section describes Home Assistant configuration.",
        "translatedContent": "本节介绍 Home Assistant 的配置。"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "erO6isZMx5oPHHa/h+I8wdQ8O5r9gvzwe7ioNeLWdtE=",
        "originContent": "### Register ESP device",
        "translatedContent": "### 注册 ESP 设备"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "CzwV3OBQfvj/rwLat+1KM1/HE1s+VYDFHhqAXn2K8Yg=",
        "originContent": "* `Configuration | Integrations: Add Integration: ESPHome`",
        "translatedContent": "* `配置 | 集成：添加集成：ESPHome`"
      },
      {
        "row": 9,
        "rowsha": "un7wDKdCca2FiCD3U4B35WUE09/+xYDaATOtq6PKIDY=",
        "originContent": "* Select hostname or IP address of the ESP device.",
        "translatedContent": "* 选择 ESP 设备的主机名或 IP 地址。"
      },
      {
        "row": 10,
        "rowsha": "7p/zKw5vSPG7mfckMYW9A3Q9SQhLxG7GeobEsvuFB0A=",
        "originContent": "* Enter password as configured in `secrets.yml` | `esphome_api_password`.",
        "translatedContent": "* 输入在 `secrets.yml` | `esphome_api_password` 中配置的密码。"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "HXKru7h8W7e2ekVEbFE+7ahXtv1lIq1n6CnjhMrcO7M=",
        "originContent": "### Homeassistant | Edit Dashboard | RAW Configuration Editor",
        "translatedContent": "### Homeassistant | 编辑仪表盘 | 原始配置编辑器"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "4m5UneDSZdOIRnK+Da4NrdFHve1dhoK/AXdc72OEBxg=",
        "originContent": "Add PC power integration to a dashboard via raw edit:",
        "translatedContent": "通过原始编辑将 PC 电源集成添加到仪表盘："
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 7,
    "Content": "```yaml\ntitle: Home\nviews:\n  - title: PC\n    path: pc\n    badges: []\n    cards:\n      - type: button\n        entity: switch.pc_power_toggle\n        show_name: true\n      - type: button\n        tap_action:\n          action: none\n        entity: binary_sensor.pc_power_state\n        hold_action:\n          action: none\n      - type: button\n        tap_action:\n          action: toggle\n        entity: switch.pc_hard_power_off\n        icon_height: 40px\n        show_state: false\n        show_name: true\n        show_icon: true\n```",
    "ContentSha": "u5fE/t6S+FZDDLcr7nVM9aBVaq+/oFA/O7Sp+0pQjfE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```yaml\ntitle: Home\nviews:\n  - title: PC\n    path: pc\n    badges: []\n    cards:\n      - type: button\n        entity: switch.pc_power_toggle\n        show_name: true\n      - type: button\n        tap_action:\n          action: none\n        entity: binary_sensor.pc_power_state\n        hold_action:\n          action: none\n      - type: button\n        tap_action:\n          action: toggle\n        entity: switch.pc_hard_power_off\n        icon_height: 40px\n        show_state: false\n        show_name: true\n        show_icon: true\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "j44LHi3pSrY0b4wzyxpEKhtiCf6KNOWjo40rIgmoT8Y=",
        "originContent": "```yaml",
        "translatedContent": "```yaml"
      },
      {
        "row": 2,
        "rowsha": "rrqyqsI7mEpe8vIqWXoJ3jy3vxVwcZVtpnWsPRf0mUI=",
        "originContent": "title: Home",
        "translatedContent": "title: Home"
      },
      {
        "row": 3,
        "rowsha": "WWyos9vRLnyEpo0hGPauXKN2GaaLJVzwmQj8+EDlACo=",
        "originContent": "views:",
        "translatedContent": "views:"
      },
      {
        "row": 4,
        "rowsha": "3fBON6GoHgHMcJW9ztoYa76+VvBhYdDD5/74yJZ4vL8=",
        "originContent": "  - title: PC",
        "translatedContent": "  - title: PC"
      },
      {
        "row": 5,
        "rowsha": "dqOte+gEPA9a4dNEx0PEkICOfmoKXI8ZNUpHeWJXqXs=",
        "originContent": "    path: pc",
        "translatedContent": "    path: pc"
      },
      {
        "row": 6,
        "rowsha": "Ic7kvdn5ZJAaNwJhxbHZ1qRej1dvDqiYJ+jcekZ1+uQ=",
        "originContent": "    badges: []",
        "translatedContent": "    badges: []"
      },
      {
        "row": 7,
        "rowsha": "M9SaDelGK7gRJq0Mqrz9Z++jlQGgQkNplaDqPLUMB0Y=",
        "originContent": "    cards:",
        "translatedContent": "    cards:"
      },
      {
        "row": 8,
        "rowsha": "rwJtziG1sXYaZOFXy+oIbq+g1Av23vSqlKMbblQKyCc=",
        "originContent": "      - type: button",
        "translatedContent": "      - type: button"
      },
      {
        "row": 9,
        "rowsha": "o0FHRUmw6Npd4G0sy+4EWjjVPpW1cZ4Xu2bkatXTuhQ=",
        "originContent": "        entity: switch.pc_power_toggle",
        "translatedContent": "        entity: switch.pc_power_toggle"
      },
      {
        "row": 10,
        "rowsha": "ZmNZpUrPLymDgPUwDozXQLx77f+HfepAiOh4h1IMiuk=",
        "originContent": "        show_name: true",
        "translatedContent": "        show_name: true"
      },
      {
        "row": 11,
        "rowsha": "rwJtziG1sXYaZOFXy+oIbq+g1Av23vSqlKMbblQKyCc=",
        "originContent": "      - type: button",
        "translatedContent": "      - type: button"
      },
      {
        "row": 12,
        "rowsha": "e/I4v4V3yiIVgmdP/Rs5Hf9ybEQtZ6RH0zWy9YggQ3s=",
        "originContent": "        tap_action:",
        "translatedContent": "        tap_action:"
      },
      {
        "row": 13,
        "rowsha": "roFNjN/9SNZhCRUi4CGkNdG/KoZwolVnaozSRf9S2kA=",
        "originContent": "          action: none",
        "translatedContent": "          action: none"
      },
      {
        "row": 14,
        "rowsha": "yYImzMUD66ByjjV6hJX3kv8upzavOh6RXCbEe4Zd1Pk=",
        "originContent": "        entity: binary_sensor.pc_power_state",
        "translatedContent": "        entity: binary_sensor.pc_power_state"
      },
      {
        "row": 15,
        "rowsha": "vztlUx0WiQdb633IzWJ8Z5QV8ZWTQVd1TInBMyqJGeo=",
        "originContent": "        hold_action:",
        "translatedContent": "        hold_action:"
      },
      {
        "row": 16,
        "rowsha": "roFNjN/9SNZhCRUi4CGkNdG/KoZwolVnaozSRf9S2kA=",
        "originContent": "          action: none",
        "translatedContent": "          action: none"
      },
      {
        "row": 17,
        "rowsha": "rwJtziG1sXYaZOFXy+oIbq+g1Av23vSqlKMbblQKyCc=",
        "originContent": "      - type: button",
        "translatedContent": "      - type: button"
      },
      {
        "row": 18,
        "rowsha": "e/I4v4V3yiIVgmdP/Rs5Hf9ybEQtZ6RH0zWy9YggQ3s=",
        "originContent": "        tap_action:",
        "translatedContent": "        tap_action:"
      },
      {
        "row": 19,
        "rowsha": "6K/0ZA4eqJ2MG8CyYCcIpoUvUEwM8K0M+yX1t5ETPbo=",
        "originContent": "          action: toggle",
        "translatedContent": "          action: toggle"
      },
      {
        "row": 20,
        "rowsha": "FJLUDu2coYyDhOminB1AFUWT0p5OAH+lsvj8hWdt7fs=",
        "originContent": "        entity: switch.pc_hard_power_off",
        "translatedContent": "        entity: switch.pc_hard_power_off"
      },
      {
        "row": 21,
        "rowsha": "OSL97MtId/5wdqNfpzLIXIXp/2DtdyxnFMuvj9LrZpc=",
        "originContent": "        icon_height: 40px",
        "translatedContent": "        icon_height: 40px"
      },
      {
        "row": 22,
        "rowsha": "p/xVrKurHgD8c7vVzaYs2lhB7UjGAMsyoHegBtlpXhY=",
        "originContent": "        show_state: false",
        "translatedContent": "        show_state: false"
      },
      {
        "row": 23,
        "rowsha": "ZmNZpUrPLymDgPUwDozXQLx77f+HfepAiOh4h1IMiuk=",
        "originContent": "        show_name: true",
        "translatedContent": "        show_name: true"
      },
      {
        "row": 24,
        "rowsha": "DC9o52uH4eZtq/lrlWv9aMuX9/6qy3Zms5nHpqTTmzg=",
        "originContent": "        show_icon: true",
        "translatedContent": "        show_icon: true"
      },
      {
        "row": 25,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 8,
    "Content": "\n## Version history\n\nRestart Home Assistant and ready to go!\n\n### Update 11 October 2024\n\nThe ESPHome YAML file format changed with [ESPHome version 2024.6.0](https://esphome.io/changelog/2024.6.0.html#). The old format generates errors like:\n",
    "ContentSha": "NYC3XlT0QnfLLDhA+BT25IlycVaroxfNlfi5r4SDoAk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n## 版本历史\n\n重启 Home Assistant 即可开始使用！\n\n### 2024年10月11日更新\n\nESPHome YAML 文件格式随着 [ESPHome 版本 2024.6.0](https://esphome.io/changelog/2024.6.0.html#) 发生了变化。旧格式会产生如下错误：\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "yWqr5+CxzEo7FT4ehME9pVIevNKQ+h6RRy8aABmtHug=",
        "originContent": "## Version history",
        "translatedContent": "## 版本历史"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "0Fsj5oFe+3V3SiD1Nk1fysxudjs7EyjYZhIzSq2iKgU=",
        "originContent": "Restart Home Assistant and ready to go!",
        "translatedContent": "重启 Home Assistant 即可开始使用！"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "VS5bO/dPC/li5FB+u4ziLvjGvYv1I7yHgTRKDoc64ps=",
        "originContent": "### Update 11 October 2024",
        "translatedContent": "### 2024年10月11日更新"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "65GBsYv6FI/OTINTtr+/LBXxgEhCAEyhGf7LqX5DI7A=",
        "originContent": "The ESPHome YAML file format changed with [ESPHome version 2024.6.0](https://esphome.io/changelog/2024.6.0.html#). The old format generates errors like:",
        "translatedContent": "ESPHome YAML 文件格式随着 [ESPHome 版本 2024.6.0](https://esphome.io/changelog/2024.6.0.html#) 发生了变化。旧格式会产生如下错误："
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 9,
    "Content": "```\n$ esphome compile ESPHomePCPowerControlHomeAssistant/pc-power.yaml\nINFO ESPHome 2024.9.2\nINFO Reading configuration ESPHomePCPowerControlHomeAssistant/pc-power.yaml...\nFailed config\n\nota.unknown: [source ESPHomePCPowerControlHomeAssistant/pc-power.yaml:27]\n\n  'ota' requires a 'platform' key but it was not specified.\n\nand:\n\nFailed config\n\nswitch.gpio: [source ESPHomePCPowerControlHomeAssistant/pc-power.yaml:30]\n\n  Pin 4 is used in multiple places.\n```",
    "ContentSha": "qbx3o9DdSldBrW3Ks4Y52JwDXHoYkHemJpG6JGEw7bQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\n$ esphome compile ESPHomePCPowerControlHomeAssistant/pc-power.yaml\nINFO ESPHome 2024.9.2\nINFO Reading configuration ESPHomePCPowerControlHomeAssistant/pc-power.yaml...\nFailed config\n\nota.unknown: [source ESPHomePCPowerControlHomeAssistant/pc-power.yaml:27]\n\n  'ota' requires a 'platform' key but it was not specified.\n\nand:\n\nFailed config\n\nswitch.gpio: [source ESPHomePCPowerControlHomeAssistant/pc-power.yaml:30]\n\n  Pin 4 is used in multiple places.\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "hE7Y9Py9udSpZhcV9FlB81t5bdgYco4Tw1orXTbo/Qc=",
        "originContent": "$ esphome compile ESPHomePCPowerControlHomeAssistant/pc-power.yaml",
        "translatedContent": "$ esphome compile ESPHomePCPowerControlHomeAssistant/pc-power.yaml"
      },
      {
        "row": 3,
        "rowsha": "yWGr6rDGT3MdS3MGfJzEqA9rGz6NuVauU+FNWnP6B7o=",
        "originContent": "INFO ESPHome 2024.9.2",
        "translatedContent": "INFO ESPHome 2024.9.2"
      },
      {
        "row": 4,
        "rowsha": "Qr4wp1gCMPauyPAfcPNYYVy+PtuWWIABxMEck+NyVI8=",
        "originContent": "INFO Reading configuration ESPHomePCPowerControlHomeAssistant/pc-power.yaml...",
        "translatedContent": "INFO Reading configuration ESPHomePCPowerControlHomeAssistant/pc-power.yaml..."
      },
      {
        "row": 5,
        "rowsha": "hntLF6qV3M5QbzMdhWbJzhYGFrn/HAY97GqMzlsO2kc=",
        "originContent": "Failed config",
        "translatedContent": "Failed config"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "Lvnbd7toWUdqUjIGFisr9/t10QXg9lt5FaNkA3WGwuU=",
        "originContent": "ota.unknown: [source ESPHomePCPowerControlHomeAssistant/pc-power.yaml:27]",
        "translatedContent": "ota.unknown: [source ESPHomePCPowerControlHomeAssistant/pc-power.yaml:27]"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "xf8ur2lVUvEO18ks61XTq3VR3p7swsrVoaZDA5Edctc=",
        "originContent": "  'ota' requires a 'platform' key but it was not specified.",
        "translatedContent": "  'ota' requires a 'platform' key but it was not specified."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "QslZW8TqXyuqKtIi4N3flebutPnC1KnGLf5pzBM02fQ=",
        "originContent": "and:",
        "translatedContent": "and:"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "hntLF6qV3M5QbzMdhWbJzhYGFrn/HAY97GqMzlsO2kc=",
        "originContent": "Failed config",
        "translatedContent": "Failed config"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "hPnncoSNXNXicWpaYqkCFtO8VNlECX9+p+i/z1jbngU=",
        "originContent": "switch.gpio: [source ESPHomePCPowerControlHomeAssistant/pc-power.yaml:30]",
        "translatedContent": "switch.gpio: [source ESPHomePCPowerControlHomeAssistant/pc-power.yaml:30]"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "CM0Xep4m2tojjCphr89b1OSTWsdQaTQpfNAgX8+PTLQ=",
        "originContent": "  Pin 4 is used in multiple places.",
        "translatedContent": "  Pin 4 is used in multiple places."
      },
      {
        "row": 18,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 10,
    "Content": "\nIn this case, please update to the new file format in this project.\n\n### Update 13 February 2022\n\n* The button pin timing controlled via Homeassistant scripts was not stable. The power pin control has been moved to the ESP firmware which generates a much more accurate timing.\n* Renamed the following names:\n  * Rename `switch.pc_power_button` to `switch.pc_power_toggle`.\n  * Rename `switch.pc_power_button_long_press` to `switch.pc_hard_power_off`.\n  * Rename `switch.pc_power_sense` to `switch.pc_power_state`.\n",
    "ContentSha": "mwMQlNKu1oN4jsXSE01e+R1kxPjG2Scpw9+dUPoAqBo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "在这种情况下，请在此项目中更新为新文件格式。\n\n### 2022年2月13日更新\n\n* 通过Homeassistant脚本控制的按钮引脚时序不稳定。电源引脚控制已移至ESP固件，生成更准确的时序。\n* 重命名以下名称：\n  * 将 `switch.pc_power_button` 重命名为 `switch.pc_power_toggle`。\n  * 将 `switch.pc_power_button_long_press` 重命名为 `switch.pc_hard_power_off`。\n  * 将 `switch.pc_power_sense` 重命名为 `switch.pc_power_state`。\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "在这种情况下，请在此项目中更新为新文件格式。"
      },
      {
        "row": 2,
        "rowsha": "Bs0CAp3wLEHX7bS2qAaBfXqH5Cv25olmy9rNYVcKeEo=",
        "originContent": "In this case, please update to the new file format in this project.",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "### 2022年2月13日更新"
      },
      {
        "row": 4,
        "rowsha": "d7Lm5UL3IzCO85/oQSAmWbhIAXlGk+XvHVitZiAO+Os=",
        "originContent": "### Update 13 February 2022",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "* 通过Homeassistant脚本控制的按钮引脚时序不稳定。电源引脚控制已移至ESP固件，生成更准确的时序。"
      },
      {
        "row": 6,
        "rowsha": "KpOiO5VeIKeid5FsJgZUM/Qku9a0/ogVnhHyOQDvM2U=",
        "originContent": "* The button pin timing controlled via Homeassistant scripts was not stable. The power pin control has been moved to the ESP firmware which generates a much more accurate timing.",
        "translatedContent": "* 重命名以下名称："
      },
      {
        "row": 7,
        "rowsha": "9ItDi+HB+Sj/nC/Nz87ZvAQD7/0kvxuITrL15J7vd9M=",
        "originContent": "* Renamed the following names:",
        "translatedContent": "  * 将 `switch.pc_power_button` 重命名为 `switch.pc_power_toggle`。"
      },
      {
        "row": 8,
        "rowsha": "sbv3D+Q7pmcAL/ZPPUfV0UP3/ygFHdBVXHuULC0vWTo=",
        "originContent": "  * Rename `switch.pc_power_button` to `switch.pc_power_toggle`.",
        "translatedContent": "  * 将 `switch.pc_power_button_long_press` 重命名为 `switch.pc_hard_power_off`。"
      },
      {
        "row": 9,
        "rowsha": "5HggicX4yqO5NKzh61X/Oc6EUxLp2FaSa2osKB7UXRk=",
        "originContent": "  * Rename `switch.pc_power_button_long_press` to `switch.pc_hard_power_off`.",
        "translatedContent": "  * 将 `switch.pc_power_sense` 重命名为 `switch.pc_power_state`。"
      },
      {
        "row": 10,
        "rowsha": "2Xtjvit7xcz2E+3HVTRL36RwOwCN3JzGcIS34VCqv6s=",
        "originContent": "  * Rename `switch.pc_power_sense` to `switch.pc_power_state`.",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]