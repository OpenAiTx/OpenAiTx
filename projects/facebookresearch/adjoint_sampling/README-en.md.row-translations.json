[
  {
    "row": 1,
    "rowsha": "VVyFW+JlupqU8lcIDv6YY//OuNz8iDcl2g3PpSIDPk8=",
    "originContent": "# Adjoint Sampling",
    "translatedContent": "<translate-content># Adjoint Sampling"
  },
  {
    "row": 2,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 3,
    "rowsha": "JfMMklBWda0F4BeDvFbN/aDG9BHRwFDs56ryV7bOUpE=",
    "originContent": "This repository contains the official implementation and experiments for Adjoint Sampling: Highly Scalable Diffusion",
    "translatedContent": "This repository contains the official implementation and experiments for Adjoint Sampling: Highly Scalable Diffusion"
  },
  {
    "row": 4,
    "rowsha": "2WMPkZzUCacSnM2h5LBt5RULW/eG/a9Cqg1frye4OSE=",
    "originContent": "Samplers via Adjoint Matching.",
    "translatedContent": "Samplers via Adjoint Matching."
  },
  {
    "row": 5,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 6,
    "rowsha": "ZhxZrP08+G2LA9MwbNjMhB2wVwb1jxCXaajPYLMLBV0=",
    "originContent": "Adjoint Sampling is a highly scalable diffusion-based sampling framework that learns to sample from unnormalized densities without any reference data. Adjoint Sampling is scalable with respect to the complexity of both the generative model and the energy function, allowing the use of state-of-the-art neural energy functions.",
    "translatedContent": "Adjoint Sampling is a highly scalable diffusion-based sampling framework that learns to sample from unnormalized densities without any reference data. Adjoint Sampling is scalable with respect to the complexity of both the generative model and the energy function, allowing the use of state-of-the-art neural energy functions."
  },
  {
    "row": 7,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 8,
    "rowsha": "HOS3DiQmnOlm32G9DRuFOyL299YU8M/Hnaqc+8ekiTE=",
    "originContent": "**[Arxiv](https://arxiv.org/abs/2504.11713) (Accepted in ICML 2025)**  ",
    "translatedContent": "**[Arxiv](https://arxiv.org/abs/2504.11713) (Accepted in ICML 2025)**  "
  },
  {
    "row": 9,
    "rowsha": "iiU8AEpslk+U6ffHAdo2JpIYsYDCUl5X6lu/UfGc8F0=",
    "originContent": "*Authors: _Aaron Havens, Benjamin Kurt Miller, Bing Yan, Carles Domingo-Enrich, Anuroop Sriram, Brandon Wood, Daniel Levine, Bin Hu, Brandon Amos, Brian Karrer, Xiang Fu, Guan-Horng Liu, Ricky T. Q. Chen_*",
    "translatedContent": "*Authors: _Aaron Havens, Benjamin Kurt Miller, Bing Yan, Carles Domingo-Enrich, Anuroop Sriram, Brandon Wood, Daniel Levine, Bin Hu, Brandon Amos, Brian Karrer, Xiang Fu, Guan-Horng Liu, Ricky T. Q. Chen_*"
  },
  {
    "row": 10,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 11,
    "rowsha": "w1LU7nV2A2lhI0x+lNngJd0b2HTwMAtn10S7RAQyNe0=",
    "originContent": "![](https://raw.githubusercontent.com/facebookresearch/adjoint_sampling/main/./assets/molecule_progression.png)",
    "translatedContent": "![](https://raw.githubusercontent.com/facebookresearch/adjoint_sampling/main/./assets/molecule_progression.png)"
  },
  {
    "row": 12,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 13,
    "rowsha": "qxvs3VeGrllEtJp11x8Z+VVLm4VGbmBoIcXXXMDPMeo=",
    "originContent": "We evaluate Adjoint Sampling on a new amortized conformer generation task using eSEN energy function and SPICE: A large-scale dataset of organic, drug-like molecules that provides molecular graph information—including atomic species and bond structure.",
    "translatedContent": "We evaluate Adjoint Sampling on a new amortized conformer generation task using eSEN energy function and SPICE: A large-scale dataset of organic, drug-like molecules that provides molecular graph information—including atomic species and bond structure."
  },
  {
    "row": 14,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 15,
    "rowsha": "oV0SUDvwD2VN8Gi9nlr2JZ2xcDrASmE2W5kc5SVX5eo=",
    "originContent": "## Installation",
    "translatedContent": "## Installation"
  },
  {
    "row": 16,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 17,
    "rowsha": "q9IyJ8Iy9V5xxmMekMylAu4lw58efB82FJkY2ILsOqs=",
    "originContent": "Install dependencies.",
    "translatedContent": "Install dependencies."
  },
  {
    "row": 18,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 19,
    "rowsha": "iD29onSEf6lIO9CirxUb31Ive/Deh4vA7IfKd6fcKMM=",
    "originContent": "micromamba env create -f environment.yml",
    "translatedContent": "micromamba env create -f environment.yml"
  },
  {
    "row": 20,
    "rowsha": "xCXAypvBv8AZAN24xAOjLNItIFi1+n3dPd3xF8zCmKQ=",
    "originContent": "micromamba activate adjoint_sampling",
    "translatedContent": "micromamba activate adjoint_sampling"
  },
  {
    "row": 21,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 22,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "To train against an energy model, you will need the [eSEN](https://arxiv.org/abs/2502.12147) checkpoint in our [Hugging Face repository](https://huggingface.co/facebook/adjoint_sampling). This will download automatically as you run the code, as long as you provide the `huggingface-cli` with a [token](https://huggingface.co/settings/tokens). You must first [apply for access to the repo](https://huggingface.co/facebook/adjoint_sampling) before the token will work."
  },
  {
    "row": 23,
    "rowsha": "IicFkgCNAtT0Ds+kleGwy0GYNIFT8EczLVeQ8wvFIbI=",
    "originContent": "To train against an energy model, you will need the [eSEN](https://arxiv.org/abs/2502.12147) checkpoint in our [Hugging Face repository](https://huggingface.co/facebook/adjoint_sampling). This will download automatically as you run the code, as long as you provide the `huggingface-cli` with a [token](https://huggingface.co/settings/tokens). You must first [apply for access to the repo](https://huggingface.co/facebook/adjoint_sampling) before the token will work.",
    "translatedContent": ""
  },
  {
    "row": 24,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 25,
    "rowsha": "W0Xvph8W4mkGNv9wDyTW95OKeoUVMbNfTuCBFhP7qTI=",
    "originContent": "huggingface-cli login",
    "translatedContent": "huggingface-cli login"
  },
  {
    "row": 26,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 27,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## Data"
  },
  {
    "row": 28,
    "rowsha": "hk1Jxtc/6V9/nnhudfaNyNb6PnE4dXTUXsuTbsjHZVA=",
    "originContent": "## Data",
    "translatedContent": ""
  },
  {
    "row": 29,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "The molecules are organized into rows in `data/{drugs_test,spice_test,spice_train}.txt` with three columns: Number of rotatable bonds, SMILES string, and hash. Finding the [CREST](https://github.com/crest-lab/crest) conformers for a molecule requires the hash. For a `{drugs,spice}` molecule with a `${hash}`, the conformers are written as concatenated `.xyz` blocks in a single text file below the directory `data/{drugs,spice}_test_conformers/${hash}`."
  },
  {
    "row": 30,
    "rowsha": "o2uv2SR4exn/4z/RGwaIx51P139VB+cE5MyfA7uFpQs=",
    "originContent": "The molecules are organized into rows in `data/{drugs_test,spice_test,spice_train}.txt` with three columns: Number of rotatable bonds, SMILES string, and hash. Finding the [CREST](https://github.com/crest-lab/crest) conformers for a molecule requires the hash. For a `{drugs,spice}` molecule with a `${hash}`, the conformers are written as concatenated `.xyz` blocks in a single text file below the directory `data/{drugs,spice}_test_conformers/${hash}`.",
    "translatedContent": ""
  },
  {
    "row": 31,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "The conformers in `drugs` are from [GEOM](https://github.com/learningmatter-mit/geom). The conformers in `spice` were computed by FAIR Chemistry."
  },
  {
    "row": 32,
    "rowsha": "7yqRG5VrXjCJfEQVjpN0tUV9a4/AaLA9rQPoJ+ZX0V0=",
    "originContent": "The conformers in `drugs` are from [GEOM](https://github.com/learningmatter-mit/geom). The conformers in `spice` were computed by FAIR Chemistry.",
    "translatedContent": ""
  },
  {
    "row": 33,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## Models"
  },
  {
    "row": 34,
    "rowsha": "AoHlaDPjZgb9nVglKkYRzMoAD9KpBtDB66w3Szti40I=",
    "originContent": "## Models",
    "translatedContent": ""
  },
  {
    "row": 35,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "All of our models are hosted on [Hugging Face](https://huggingface.co/facebook/adjoint_sampling). We provide a script to download the files to local directory `models`. Downloading models requires you to have a [token](https://huggingface.co/settings/tokens). You must first [apply for access to the repo](https://huggingface.co/facebook/adjoint_sampling) before downloading."
  },
  {
    "row": 36,
    "rowsha": "4R2rnwF3jfuk4aaURGTHEEhiqbhqO6CG2/PCOLjfTBo=",
    "originContent": "All of our models are hosted on [Hugging Face](https://huggingface.co/facebook/adjoint_sampling). We provide a script to download the files to local directory `models`. Downloading models requires you to have a [token](https://huggingface.co/settings/tokens). You must first [apply for access to the repo](https://huggingface.co/facebook/adjoint_sampling) before downloading.",
    "translatedContent": ""
  },
  {
    "row": 37,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 38,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 39,
    "rowsha": "fDieT0ZHDBgJpiVRdOjqOsZI6eN3BiHklLXjtKNeBj4=",
    "originContent": "python download_models.py",
    "translatedContent": "python download_models.py"
  },
  {
    "row": 40,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 41,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "Once the models are downloaded, you can copy the path for use in evaluation or for your own projects. The checkpoints can be identified:"
  },
  {
    "row": 42,
    "rowsha": "O6+sk5ZZdKOnGd5AwX+rJknMhbgQoLpCH8J84jgUHSw=",
    "originContent": "Once the models are downloaded, you can copy the path for use in evaluation or for your own projects. The checkpoints can be identified:",
    "translatedContent": ""
  },
  {
    "row": 43,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 44,
    "rowsha": "gk7kOir0l5Hcux4Xiu+u7Mw+F+yia2c79lkgt5DGY4g=",
    "originContent": "Cartesian AdjSampling             -   models/am/checkpoints/checkpoint_4999.pt",
    "translatedContent": "Cartesian AdjSampling             -   models/am/checkpoints/checkpoint_4999.pt"
  },
  {
    "row": 45,
    "rowsha": "WKl96ecfJkt9vJSVX6/a3mes74LSkM4wtiMy3d/B6ms=",
    "originContent": "Cartesian AdjSampling (+pretrain) -   models/bmam/checkpoints/checkpoint_4999.pt",
    "translatedContent": "Cartesian AdjSampling (+pretrain) -   models/bmam/checkpoints/checkpoint_4999.pt"
  },
  {
    "row": 46,
    "rowsha": "8zMWAt1KKi39XBlaHcze2rMpjXaOGZ9hD2LZeYse7F8=",
    "originContent": "Torsional AdjSampling             -   models/torsion/checkpoints/checkpoint_3000.pt",
    "translatedContent": "Torsional AdjSampling             -   models/torsion/checkpoints/checkpoint_3000.pt"
  },
  {
    "row": 47,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 48,
    "rowsha": "XK+pYd6Eavu8AZMgvSGIDlU6pGHT0n7LVy2hd9MNx/E=",
    "originContent": "Pretrained Cartesian              -   pretrain_for_bmam/checkpoints/checkpoint_2000.pt",
    "translatedContent": "Pretrained Cartesian              -   pretrain_for_bmam/checkpoints/checkpoint_2000.pt"
  },
  {
    "row": 49,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 50,
    "rowsha": "06GrozdNjHy89N8WQUMWaz4hTN0lTsMpKYw9N5aCNlk=",
    "originContent": "We provide `Pretrained Cartesian` for the purposes of training `Cartesian AdjSampling (+pretrain)`.",
    "translatedContent": "We provide `Pretrained Cartesian` for the purposes of training `Cartesian AdjSampling (+pretrain)`."
  },
  {
    "row": 51,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 52,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 53,
    "rowsha": "V8+JAT3FdE243Vafk5tMoiJRvuM4Q7vltonMZKk9yFM=",
    "originContent": "## Training on the SPICE datset",
    "translatedContent": "## Training on the SPICE dataset"
  },
  {
    "row": 54,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 55,
    "rowsha": "dmcn7YfjsKSaI/mOvX/YZP/ZJJD03IeG7dcYH/rV0DU=",
    "originContent": "We trained each model using 8 gpus over 72 hours. These commands will train the corresponding model.",
    "translatedContent": "We trained each model using 8 GPUs over 72 hours. These commands will train the corresponding model."
  },
  {
    "row": 56,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 57,
    "rowsha": "9bi3JyW7S58F0Viq+JxDSSuXeAxZkTFvz6dPpqamDXQ=",
    "originContent": "Run the following commands on a single node with many cpus **before** starting training! The second one is only necessary if you would like to train the Torsional AdjSampling model.",
    "translatedContent": "Run the following commands on a single node with many CPUs **before** starting training! The second one is only necessary if you would like to train the Torsional AdjSampling model."
  },
  {
    "row": 58,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 59,
    "rowsha": "FXNMzmuVUGopp0cES69CeHvftJ9SbWuNi1uw1yPxsAM=",
    "originContent": "python cache_dataset.py",
    "translatedContent": "python cache_dataset.py"
  },
  {
    "row": 60,
    "rowsha": "U2Y95saYXwPAH47A3bymc3vTps0vDonXw0t1bsGpZAk=",
    "originContent": "python cache_dataset.py --learn_torsions",
    "translatedContent": "python cache_dataset.py --learn_torsions"
  },
  {
    "row": 61,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 62,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "Our repository allows distributed training where shared files are put into a shared directory, known in the config as `shared_dir`. It is set as `/home/${oc.env:USER}` by default. It evaluates to `/home/${USER}` for training due to [hydra](https://hydra.cc/docs/intro/)'s variable expansion syntax."
  },
  {
    "row": 63,
    "rowsha": "gwmukjKLlNZe4q8bCfPyK+hnGqm1m2LYg2pkZYcAJbk=",
    "originContent": "Our repository allows distributed training where shared files are put into a shared directory, known in the config as `shared_dir`. It is set as `/home/${oc.env:USER}` by default. It evaluates to `/home/${USER}` for training due to [hydra](https://hydra.cc/docs/intro/)'s variable expansion syntax.",
    "translatedContent": ""
  },
  {
    "row": 64,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "##### Cartesian AdjSampling"
  },
  {
    "row": 65,
    "rowsha": "fcaKEg6yPapHQQxtrl7RZ3piy+ySsCRgfumJk4G1yeI=",
    "originContent": "##### Cartesian AdjSampling",
    "translatedContent": ""
  },
  {
    "row": 66,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 67,
    "rowsha": "o4hh33/rXpg20jvpTbirYWHUFlYhFfyZATR9kcSsbJg=",
    "originContent": "python train.py experiment=spice_cartesian",
    "translatedContent": "python train.py experiment=spice_cartesian"
  },
  {
    "row": 68,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 69,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "##### Cartesian AdjSampling (+pretrain)"
  },
  {
    "row": 70,
    "rowsha": "Nh7/Hl3vMdDRAmcQ3Hy4SMIMh8DtiSBZ4zWfn17UxZA=",
    "originContent": "##### Cartesian AdjSampling (+pretrain)",
    "translatedContent": ""
  },
  {
    "row": 71,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "This model requires sequential training. First, you must train the \"pretrained\" model using the first command. Then, you need to direct the second model to initialize from the first model with `init_model=...` pointing to the initial checkpoint. No error is raised if you fail to point to an `init_model`, but the model will not be pretrained."
  },
  {
    "row": 72,
    "rowsha": "RQbYHvO7R++FAvWG8beBPD979H58Sy1R3b38NaOHkTo=",
    "originContent": "This model requires sequential training. first you must train the \"pretrained\" model using the first command. Then, you need to direct the second model to initialize from the first model with `init_model=...` pointing to the initial checkpoint. No error is raised if you fail to point to an `init_model`, but the model will not be pretrained.",
    "translatedContent": ""
  },
  {
    "row": 73,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 74,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 75,
    "rowsha": "sCX/+ph4/tSXylbouB7JNktOmn15nvAJ5s3cFRGB5BY=",
    "originContent": "python train.py experiment=spice_cartesian_pretrain_for_bmam",
    "translatedContent": "python train.py experiment=spice_cartesian_pretrain_for_bmam"
  },
  {
    "row": 76,
    "rowsha": "0uycTEKOpglVDGxTojEaZstT1N2t/V38BWYTLvd5U7A=",
    "originContent": "python train.py experiment=spice_cartesian_bmam init_model=???",
    "translatedContent": "python train.py experiment=spice_cartesian_bmam init_model=???"
  },
  {
    "row": 77,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 78,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "##### Torsional AdjSampling"
  },
  {
    "row": 79,
    "rowsha": "Uoj9iFUtJQIsWNtGDoMEjRj+L7KcilWXtbF97fMH3Dc=",
    "originContent": "##### Torsional AdjSampling",
    "translatedContent": ""
  },
  {
    "row": 80,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 81,
    "rowsha": "hwtSl+mz+9TmAuSmv1JvP9Fg34Rr/rhh1EPtK6d89fY=",
    "originContent": "python train.py experiment=spice_torsion",
    "translatedContent": "python train.py experiment=spice_torsion"
  },
  {
    "row": 82,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 83,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## Evaluation"
  },
  {
    "row": 84,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "To evaluate the trained model, use `eval.py`. Reported results set `max_n_refs` to 512."
  },
  {
    "row": 85,
    "rowsha": "Lls8H2uTWGb5aqbRumacEGCmILhDJm7y1QAXsnORtIg=",
    "originContent": "## Evaluation",
    "translatedContent": ""
  },
  {
    "row": 86,
    "rowsha": "AUThqDdkr2WNjI5sPlE+l/wMfRItzIlZaBWOvtIbaSQ=",
    "originContent": "To evaluate the trained model, use `eval.py`. Reported results set `max_n_refs` to 512.",
    "translatedContent": ""
  },
  {
    "row": 87,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 88,
    "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
    "originContent": "```bash",
    "translatedContent": "```bash"
  },
  {
    "row": 89,
    "rowsha": "6VCAtONJ3bRUsYBVO9agvdm75uWWYiYdA1Zi0VGgXpo=",
    "originContent": "python eval.py \\",
    "translatedContent": "python eval.py \\"
  },
  {
    "row": 90,
    "rowsha": "rXDHZBmmqjcTMhiJBntpBVE2qOX0vO7RFi17gKJIFRw=",
    "originContent": "--test_mols data/spice_test.txt \\",
    "translatedContent": "--test_mols data/spice_test.txt \\"
  },
  {
    "row": 91,
    "rowsha": "BLZYO1TUztHRF2BW9lXaGjvfH1svpes7S4sJmEYpG04=",
    "originContent": "--true_confs data/spice_test_conformers \\",
    "translatedContent": "--true_confs data/spice_test_conformers \\"
  },
  {
    "row": 92,
    "rowsha": "uAoH+oyjpLDqW2ZGQsk+E3apXG3hXoV6MKzq3pv+Gho=",
    "originContent": "--save_path results \\",
    "translatedContent": "--save_path results \\"
  },
  {
    "row": 93,
    "rowsha": "wCyB+HGs3yZqtCOExDOYlGwG3cE+qcmBxXxU/CTfka8=",
    "originContent": "--checkpoint_path path/to/checkpoint.pt \\",
    "translatedContent": "--checkpoint_path path/to/checkpoint.pt \\"
  },
  {
    "row": 94,
    "rowsha": "jypSZBPyl0Cm9YwGuIyU6Yiaebq8qEBrtY4sMN+cYto=",
    "originContent": "--max_n_refs 512",
    "translatedContent": "--max_n_refs 512"
  },
  {
    "row": 95,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 96,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "It is possible to evaluate in a distributed manner as well, check out `eval_distributed.sh`."
  },
  {
    "row": 97,
    "rowsha": "BxeCJoK3AlIMJUu770SNwNnjeGQt1Nra5TSpHJ3vdFM=",
    "originContent": "It is possible to evaluate in a distributed manner as well, check out `eval_distributed.sh`.",
    "translatedContent": ""
  },
  {
    "row": 98,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 99,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## 📚 Citation"
  },
  {
    "row": 100,
    "rowsha": "+Uq50qMMSSaMQjIFg9QwW/hlCfK8kXMzFuQeuRAioXU=",
    "originContent": "## 📚 Citation",
    "translatedContent": ""
  },
  {
    "row": 101,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "If you find this code useful in your research or projects, please consider citing our research paper:"
  },
  {
    "row": 102,
    "rowsha": "P2QJ9jIJphBzRscNaY0Ex6Q7Ic6YMiUInYen+YlBWHk=",
    "originContent": "If you find this code useful in your research or projects, please consider citing our research paper:",
    "translatedContent": ""
  },
  {
    "row": 103,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 104,
    "rowsha": "o+TmyQ6wneV6/FQB6aUlRSjIGr2/YLJtnz5uxBgsScQ=",
    "originContent": "```bibtex",
    "translatedContent": "```bibtex"
  },
  {
    "row": 105,
    "rowsha": "2DPeZHs/zWEnKgJyaVR09Er1XWBASl9ywPoPwosx7FQ=",
    "originContent": "@article{adjoint_sampling,",
    "translatedContent": "@article{adjoint_sampling,"
  },
  {
    "row": 106,
    "rowsha": "SkAUw+uLrMCEytLr0VftWeM3K+kmqVPBatoW57Ihf9c=",
    "originContent": "  title={{A}djoint {S}ampling: Highly Scalable Diffusion Samplers via {A}djoint {M}atching},",
    "translatedContent": "  title={{A}djoint {S}ampling: Highly Scalable Diffusion Samplers via {A}djoint {M}atching},"
  },
  {
    "row": 107,
    "rowsha": "vCxQP8u6YdjlQKH7GWHRRNJGPhriHCJLkWQh6fveb1k=",
    "originContent": "  author={Havens, Aaron and Miller, Benjamin Kurt and Yan, Bing and Domingo-Enrich, Carles and Sriram, Anuroop and Wood, Brandon and Levine, Daniel and Hu, Bin and Amos, Brandon and Karrer, Brian and Fu, Xiang and Liu, Guan-Horng and Chen, Ricky T. Q.},",
    "translatedContent": "  author={Havens, Aaron and Miller, Benjamin Kurt and Yan, Bing and Domingo-Enrich, Carles and Sriram, Anuroop and Wood, Brandon and Levine, Daniel and Hu, Bin and Amos, Brandon and Karrer, Brian and Fu, Xiang and Liu, Guan-Horng and Chen, Ricky T. Q.},"
  },
  {
    "row": 108,
    "rowsha": "0fX8nzOfIgQZfsbXzIDm0YkyyfyDCP/YYR8bSpnGWTM=",
    "originContent": "  journal={International Conference on Machine Learning},",
    "translatedContent": "  journal={International Conference on Machine Learning},"
  },
  {
    "row": 109,
    "rowsha": "6oyqJVJ20XoZhlyGjaewQyTQsSBBtVAYmqUtTwjLbAg=",
    "originContent": "  year={2025}",
    "translatedContent": "  year={2025}"
  },
  {
    "row": 110,
    "rowsha": "0Qs2qnSlm89KiBhYN/ZYr682Ru/yuxbDko0OkzXpRdI=",
    "originContent": "}",
    "translatedContent": "}"
  },
  {
    "row": 111,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 112,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## License"
  },
  {
    "row": 113,
    "rowsha": "bFSaVtsB4CHySNjaeCiaMZfT24b+DTbTM4HQ38cR6Lw=",
    "originContent": "## License",
    "translatedContent": "This repository is licensed under the"
  },
  {
    "row": 114,
    "rowsha": "kvKkrEDcV3gtX/Qgig6rLYPjlcYULhXtlRYjGQEJ3Lo=",
    "originContent": "This repository is licensed under the",
    "translatedContent": "[CC BY-NC 4.0 License](https://creativecommons.org/licenses/by-nc/4.0/)."
  },
  {
    "row": 115,
    "rowsha": "RRq5h7WKvDR/FgEvegXlk4XMmoKNfYG0nO2bJBNOgRY=",
    "originContent": "[CC BY-NC 4.0 License](https://creativecommons.org/licenses/by-nc/4.0/).",
    "translatedContent": ""
  },
  {
    "row": 116,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "### Notice"
  },
  {
    "row": 117,
    "rowsha": "qzLYHO81/p3NgqsZ9wVk5Z4QtnlVqWpxgXFBjCFUoC8=",
    "originContent": "### Notice",
    "translatedContent": "The majority of Adjoint Sampling is licensed under CC-BY-NC, however portions of the project are available under separate license terms: [DEM](https://github.com/jarridrb/DEM), [EGNN](https://github.com/vgsatorras/egnn), [torsional-diffusion](https://github.com/gcorso/torsional-diffusion), [fairchem](https://github.com/FAIR-Chem/fairchem) are licensed under the MIT license. [SPICE](https://github.com/openmm/spice-dataset) and [GEOM](https://github.com/learningmatter-mit/geom) are licensed under the CC0 license."
  },
  {
    "row": 118,
    "rowsha": "8U2Gegu/L5dAnynCUmcuD3rpCXOe5d3c9W0jJeRgkTA=",
    "originContent": "The majority of Adjoint Sampling is licensed under CC-BY-NC, however portions of the project are available under separate license terms: [DEM](https://github.com/jarridrb/DEM), [EGNN](https://github.com/vgsatorras/egnn), [torsional-diffusion](https://github.com/gcorso/torsional-diffusion), [fairchem](https://github.com/FAIR-Chem/fairchem) are licensed under the MIT license. [SPICE](https://github.com/openmm/spice-dataset) and [GEOM](https://github.com/learningmatter-mit/geom) are licensed under the CC0 license.",
    "translatedContent": ""
  },
  {
    "row": 119,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  }
]