[
  {
    "Id": 1,
    "Content": "# 🖼️ HEIC Image Processing Tools\n\nA collection of Python tools for processing HEIC (High Efficiency Image Container) files, with a focus on HDR content extraction and EXR conversion.\n\n## 🛠️ Tools Overview\n\n### 1. gain_map_extract.py\nExtracts all components from HEIC files including:\n- Base images\n- HDR gain maps\n- Depth maps\n- Complete metadata (EXIF, XMP, ICC profiles)\n\n### 2. heic_to_exr.py\nConverts HEIC files to OpenEXR format:\n- Combines base image and gain map into HDR EXR using apples method\n- Preserves full dynamic range\n- Maintains metadata where possible\n- Supports batch processing\n",
    "ContentSha": "c9EHItkZ3cWwWq3l12y3Cqr/m3Msygc7E+YsxPzGSZ0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# 🖼️ HEIC画像処理ツール\n\nHEIC（High Efficiency Image Container）ファイルを処理するためのPythonツール集であり、HDRコンテンツの抽出とEXR変換に重点を置いています。\n\n## 🛠️ ツール概要\n\n### 1. gain_map_extract.py\nHEICファイルからすべてのコンポーネントを抽出します。内容は以下の通りです：\n- ベース画像\n- HDRゲインマップ\n- デプスマップ\n- 完全なメタデータ（EXIF、XMP、ICCプロファイル）\n\n### 2. heic_to_exr.py\nHEICファイルをOpenEXR形式に変換します：\n- ベース画像とゲインマップをAppleの方式でHDR EXRに統合\n- フルダイナミックレンジを保持\n- 可能な限りメタデータを維持\n- バッチ処理をサポート",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "### 3. merge_to_exr.sh\nShell script for batch processing:\n- Automates HEIC to EXR conversion\n- Handles multiple files\n- Provides progress feedback\n- Maintains directory structure\n\n## 🔧 Installation\n\n### Prerequisites\n- Python 3.8 or higher\n- pip (Python package manager)\n- Git (for cloning the repository)\n\n### macOS\n```bash\n# Install Homebrew if not already installed\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n\n# Install Python and OpenEXR dependencies",
    "ContentSha": "uAzF8rdR6MfoqJENF4y2T8lhy/sMSXhffexis8NFEkg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 3. merge_to_exr.sh\nバッチ処理用シェルスクリプト:\n- HEICからEXRへの変換を自動化\n- 複数ファイルの処理に対応\n- 進捗状況のフィードバックを提供\n- ディレクトリ構造を維持\n\n## 🔧 インストール\n\n### 必要条件\n- Python 3.8以上\n- pip（Pythonパッケージマネージャー）\n- Git（リポジトリのクローン用）\n\n### macOS\n```bash\n# Homebrewが未インストールの場合はインストール\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n\n# PythonおよびOpenEXRの依存関係をインストール",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "brew install python3 openexr\n\n# Clone the repository\ngit clone https://github.com/finnschi/heic-shenanigans.git\ncd heic-shenanigans\n\n# Create and activate virtual environment\npython3 -m venv venv\nsource venv/bin/activate\n\n# Install Python dependencies\npip install -r requirements.txt\n```\n\n### Linux (Ubuntu/Debian)\n```bash\n# Install system dependencies\nsudo apt-get update\nsudo apt-get install python3 python3-pip python3-venv openexr libopenexr-dev\n",
    "ContentSha": "jZ3bKsttp8mgvP4J9gGoZMwpoTRPqW26cSztuhwYGiA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "brew install python3 openexr\n\n# リポジトリのクローン\ngit clone https://github.com/finnschi/heic-shenanigans.git\ncd heic-shenanigans\n\n# 仮想環境の作成と有効化\npython3 -m venv venv\nsource venv/bin/activate\n\n# Python依存関係のインストール\npip install -r requirements.txt\n```\n\n### Linux (Ubuntu/Debian)\n```bash\n# システム依存関係のインストール\nsudo apt-get update\nsudo apt-get install python3 python3-pip python3-venv openexr libopenexr-dev\n",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "# Clone the repository\ngit clone https://github.com/finnschi/heic-shenanigans.git\ncd heic-shenanigans\n\n# Create and activate virtual environment\npython3 -m venv venv\nsource venv/bin/activate\n\n# Install Python dependencies\npip install -r requirements.txt\n```\n\n### Windows\n```powershell\n# Install Python from https://www.python.org/downloads/\n# Install Git from https://git-scm.com/download/win\n\n# Clone the repository\ngit clone https://github.com/finnschi/heic-shenanigans.git\ncd heic-shenanigans\n",
    "ContentSha": "h8L0yC35blKnOCOxmW48vJ96fMByD6xUwvyAnxFf7FI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# リポジトリをクローンする\ngit clone https://github.com/finnschi/heic-shenanigans.git\ncd heic-shenanigans\n\n# 仮想環境を作成して有効化する\npython3 -m venv venv\nsource venv/bin/activate\n\n# Python依存関係をインストールする\npip install -r requirements.txt\n```\n\n### Windows\n```powershell\n# https://www.python.org/downloads/ からPythonをインストール\n# https://git-scm.com/download/win からGitをインストール\n\n# リポジトリをクローンする\ngit clone https://github.com/finnschi/heic-shenanigans.git\ncd heic-shenanigans\n",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "# Create and activate virtual environment\npython -m venv venv\n.\\venv\\Scripts\\activate\n\n# Install Python dependencies\npip install -r requirements.txt\n```\n\n## 📋 Requirements\nAll required Python packages are listed in requirements.txt:\n- Pillow: Image processing library\n- pillow-heif: HEIC file support\n- numpy: Numerical operations\n- defusedxml: Safe XML parsing\n\nSystem dependencies (installed via package manager):\n- OpenEXR and OpenImageIO (oiiotool) for EXR file handling\n\n## 💻 Usage\n",
    "ContentSha": "9TWKRU6p14m07VozQWNHkGuiJXDtqo/MGPzx/UmvqbI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "",
    "Status": "error"
  },
  {
    "Id": 6,
    "Content": "### Gain Map Extraction\n```bash\npython gain_map_extract.py input.heic [--output-dir OUTPUT_DIR]\n```\n\n### HEIC to EXR Conversion\n```bash\npython heic_to_exr.py input.heic [--output-dir OUTPUT_DIR]\n```\n\n### Batch Processing\n```bash\n./merge_to_exr.sh input_directory output_directory\n```\n\n## 📁 Output Files\n\n### gain_map_extract.py outputs:\n- Base image: `{filename}_base.tiff`\n- Gain maps: `{filename}_gain_map_{id}.tiff`\n- Depth maps: `{filename}_depth_{index}.tiff`\n- Metadata: `{filename}_metadata.json`\n",
    "ContentSha": "SqApvcvt4uJvarPeEDOvr5DsRgtbesu4qnhpeM0k8f8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### ゲインマップ抽出\n```bash\npython gain_map_extract.py input.heic [--output-dir OUTPUT_DIR]\n```\n\n### HEICからEXRへの変換\n```bash\npython heic_to_exr.py input.heic [--output-dir OUTPUT_DIR]\n```\n\n### バッチ処理\n```bash\n./merge_to_exr.sh input_directory output_directory\n```\n\n## 📁 出力ファイル\n\n### gain_map_extract.py の出力:\n- ベース画像: `{filename}_base.tiff`\n- ゲインマップ: `{filename}_gain_map_{id}.tiff`\n- デプスマップ: `{filename}_depth_{index}.tiff`\n- メタデータ: `{filename}_metadata.json`\n",
    "Status": "ok"
  },
  {
    "Id": 7,
    "Content": "### heic_to_exr.py outputs:\n- HDR EXR file: `{filename}.exr`\n\n## 🔍 Advanced Usage\n\n### Metadata Handling\n- Binary data is base64 encoded\n- ICC profiles are maintained\n- EXIF data is preserved where possible\n\n### HDR Processing\n- Gain maps are properly scaled\n- Linear color space is maintained\n- Full dynamic range is preserved in EXR output\n\n## ⚠️ Known Limitations\n- Some HEIC variants may not be fully supported\n- Depth map extraction is limited to supported devices\n- Windows OpenEXR support may require additional configuration\n",
    "ContentSha": "mMK/AZzpBgn0oBPDUDqUTI2ejpIfdupchSbLmwaXpe4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### heic_to_exr.py の出力:\n- HDR EXR ファイル: `{filename}.exr`\n\n## 🔍 詳細な使い方\n\n### メタデータの取り扱い\n- バイナリデータは base64 エンコードされます\n- ICC プロファイルは維持されます\n- EXIF データは可能な限り保持されます\n\n### HDR 処理\n- ゲインマップは適切にスケーリングされます\n- 線形色空間が維持されます\n- EXR 出力で全ダイナミックレンジが保持されます\n\n## ⚠️ 既知の制限事項\n- 一部の HEIC バリアントは完全にはサポートされていない場合があります\n- デプスマップ抽出は対応デバイスに限定されます\n- Windows での OpenEXR サポートには追加の設定が必要な場合があります",
    "Status": "ok"
  },
  {
    "Id": 8,
    "Content": "## 🤝 Contributing\nContributions are welcome! Please feel free to submit a Pull Request.\n\n\n",
    "ContentSha": "//y7U/v0RJLV6jRB2ttYB6lt4osbl32LzIApNt265rE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## 🤝 貢献について\n貢献は大歓迎です！お気軽にプルリクエストを送ってください。\n\n",
    "Status": "ok"
  }
]