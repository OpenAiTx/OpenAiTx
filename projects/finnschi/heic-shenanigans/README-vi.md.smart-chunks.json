[
  {
    "Id": 1,
    "Content": "# üñºÔ∏è HEIC Image Processing Tools\n\nA collection of Python tools for processing HEIC (High Efficiency Image Container) files, with a focus on HDR content extraction and EXR conversion.\n\n## üõ†Ô∏è Tools Overview\n\n### 1. gain_map_extract.py\nExtracts all components from HEIC files including:\n- Base images\n- HDR gain maps\n- Depth maps\n- Complete metadata (EXIF, XMP, ICC profiles)\n\n### 2. heic_to_exr.py\nConverts HEIC files to OpenEXR format:\n- Combines base image and gain map into HDR EXR using apples method\n- Preserves full dynamic range\n- Maintains metadata where possible\n- Supports batch processing\n",
    "ContentSha": "c9EHItkZ3cWwWq3l12y3Cqr/m3Msygc7E+YsxPzGSZ0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# üñºÔ∏è C√¥ng C·ª• X·ª≠ L√Ω ·∫¢nh HEIC\n\nM·ªôt b·ªô c√¥ng c·ª• Python d√πng ƒë·ªÉ x·ª≠ l√Ω c√°c t·ªáp HEIC (High Efficiency Image Container), t·∫≠p trung v√†o vi·ªác tr√≠ch xu·∫•t n·ªôi dung HDR v√† chuy·ªÉn ƒë·ªïi sang ƒë·ªãnh d·∫°ng EXR.\n\n## üõ†Ô∏è T·ªïng Quan C√¥ng C·ª•\n\n### 1. gain_map_extract.py\nTr√≠ch xu·∫•t t·∫•t c·∫£ c√°c th√†nh ph·∫ßn t·ª´ t·ªáp HEIC bao g·ªìm:\n- ·∫¢nh g·ªëc\n- B·∫£n ƒë·ªì gain HDR\n- B·∫£n ƒë·ªì ƒë·ªô s√¢u\n- ƒê·∫ßy ƒë·ªß si√™u d·ªØ li·ªáu (EXIF, XMP, h·ªì s∆° ICC)\n\n### 2. heic_to_exr.py\nChuy·ªÉn ƒë·ªïi c√°c t·ªáp HEIC sang ƒë·ªãnh d·∫°ng OpenEXR:\n- K·∫øt h·ª£p ·∫£nh g·ªëc v√† b·∫£n ƒë·ªì gain th√†nh HDR EXR s·ª≠ d·ª•ng ph∆∞∆°ng ph√°p c·ªßa Apple\n- B·∫£o to√†n d·∫£i ƒë·ªông ƒë·∫ßy ƒë·ªß\n- Gi·ªØ nguy√™n si√™u d·ªØ li·ªáu n·∫øu c√≥ th·ªÉ\n- H·ªó tr·ª£ x·ª≠ l√Ω h√†ng lo·∫°t",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "### 3. merge_to_exr.sh\nShell script for batch processing:\n- Automates HEIC to EXR conversion\n- Handles multiple files\n- Provides progress feedback\n- Maintains directory structure\n\n## üîß Installation\n\n### Prerequisites\n- Python 3.8 or higher\n- pip (Python package manager)\n- Git (for cloning the repository)\n\n### macOS\n```bash\n# Install Homebrew if not already installed\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n\n# Install Python and OpenEXR dependencies",
    "ContentSha": "uAzF8rdR6MfoqJENF4y2T8lhy/sMSXhffexis8NFEkg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "",
    "Status": "error"
  },
  {
    "Id": 3,
    "Content": "brew install python3 openexr\n\n# Clone the repository\ngit clone https://github.com/finnschi/heic-shenanigans.git\ncd heic-shenanigans\n\n# Create and activate virtual environment\npython3 -m venv venv\nsource venv/bin/activate\n\n# Install Python dependencies\npip install -r requirements.txt\n```\n\n### Linux (Ubuntu/Debian)\n```bash\n# Install system dependencies\nsudo apt-get update\nsudo apt-get install python3 python3-pip python3-venv openexr libopenexr-dev\n",
    "ContentSha": "jZ3bKsttp8mgvP4J9gGoZMwpoTRPqW26cSztuhwYGiA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "brew install python3 openexr\n\n# Sao ch√©p kho l∆∞u tr·ªØ\ngit clone https://github.com/finnschi/heic-shenanigans.git\ncd heic-shenanigans\n\n# T·∫°o v√† k√≠ch ho·∫°t m√¥i tr∆∞·ªùng ·∫£o\npython3 -m venv venv\nsource venv/bin/activate\n\n# C√†i ƒë·∫∑t c√°c ph·ª• thu·ªôc Python\npip install -r requirements.txt\n```\n\n### Linux (Ubuntu/Debian)\n```bash\n# C√†i ƒë·∫∑t c√°c ph·ª• thu·ªôc h·ªá th·ªëng\nsudo apt-get update\nsudo apt-get install python3 python3-pip python3-venv openexr libopenexr-dev\n",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "# Clone the repository\ngit clone https://github.com/finnschi/heic-shenanigans.git\ncd heic-shenanigans\n\n# Create and activate virtual environment\npython3 -m venv venv\nsource venv/bin/activate\n\n# Install Python dependencies\npip install -r requirements.txt\n```\n\n### Windows\n```powershell\n# Install Python from https://www.python.org/downloads/\n# Install Git from https://git-scm.com/download/win\n\n# Clone the repository\ngit clone https://github.com/finnschi/heic-shenanigans.git\ncd heic-shenanigans\n",
    "ContentSha": "h8L0yC35blKnOCOxmW48vJ96fMByD6xUwvyAnxFf7FI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Sao ch√©p kho l∆∞u tr·ªØ\ngit clone https://github.com/finnschi/heic-shenanigans.git\ncd heic-shenanigans\n\n# T·∫°o v√† k√≠ch ho·∫°t m√¥i tr∆∞·ªùng ·∫£o\npython3 -m venv venv\nsource venv/bin/activate\n\n# C√†i ƒë·∫∑t c√°c ph·ª• thu·ªôc c·ªßa Python\npip install -r requirements.txt\n```\n\n### Windows\n```powershell\n# C√†i ƒë·∫∑t Python t·ª´ https://www.python.org/downloads/\n# C√†i ƒë·∫∑t Git t·ª´ https://git-scm.com/download/win\n\n# Sao ch√©p kho l∆∞u tr·ªØ\ngit clone https://github.com/finnschi/heic-shenanigans.git\ncd heic-shenanigans\n",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "# Create and activate virtual environment\npython -m venv venv\n.\\venv\\Scripts\\activate\n\n# Install Python dependencies\npip install -r requirements.txt\n```\n\n## üìã Requirements\nAll required Python packages are listed in requirements.txt:\n- Pillow: Image processing library\n- pillow-heif: HEIC file support\n- numpy: Numerical operations\n- defusedxml: Safe XML parsing\n\nSystem dependencies (installed via package manager):\n- OpenEXR and OpenImageIO (oiiotool) for EXR file handling\n\n## üíª Usage\n",
    "ContentSha": "9TWKRU6p14m07VozQWNHkGuiJXDtqo/MGPzx/UmvqbI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# T·∫°o v√† k√≠ch ho·∫°t m√¥i tr∆∞·ªùng ·∫£o\npython -m venv venv\n.\\venv\\Scripts\\activate\n\n# C√†i ƒë·∫∑t c√°c ph·ª• thu·ªôc Python\npip install -r requirements.txt\n```\n\n## üìã Y√™u c·∫ßu\nT·∫•t c·∫£ c√°c g√≥i Python c·∫ßn thi·∫øt ƒë∆∞·ª£c li·ªát k√™ trong requirements.txt:\n- Pillow: Th∆∞ vi·ªán x·ª≠ l√Ω ·∫£nh\n- pillow-heif: H·ªó tr·ª£ t·ªáp HEIC\n- numpy: Thao t√°c s·ªë h·ªçc\n- defusedxml: Ph√¢n t√≠ch c√∫ ph√°p XML an to√†n\n\nC√°c ph·ª• thu·ªôc h·ªá th·ªëng (c√†i ƒë·∫∑t qua tr√¨nh qu·∫£n l√Ω g√≥i):\n- OpenEXR v√† OpenImageIO (oiiotool) ƒë·ªÉ x·ª≠ l√Ω t·ªáp EXR\n\n## üíª C√°ch s·ª≠ d·ª•ng",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "### Gain Map Extraction\n```bash\npython gain_map_extract.py input.heic [--output-dir OUTPUT_DIR]\n```\n\n### HEIC to EXR Conversion\n```bash\npython heic_to_exr.py input.heic [--output-dir OUTPUT_DIR]\n```\n\n### Batch Processing\n```bash\n./merge_to_exr.sh input_directory output_directory\n```\n\n## üìÅ Output Files\n\n### gain_map_extract.py outputs:\n- Base image: `{filename}_base.tiff`\n- Gain maps: `{filename}_gain_map_{id}.tiff`\n- Depth maps: `{filename}_depth_{index}.tiff`\n- Metadata: `{filename}_metadata.json`\n",
    "ContentSha": "SqApvcvt4uJvarPeEDOvr5DsRgtbesu4qnhpeM0k8f8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### Tr√≠ch xu·∫•t Gain Map\n```bash\npython gain_map_extract.py input.heic [--output-dir OUTPUT_DIR]\n```\n\n### Chuy·ªÉn ƒë·ªïi HEIC sang EXR\n```bash\npython heic_to_exr.py input.heic [--output-dir OUTPUT_DIR]\n```\n\n### X·ª≠ l√Ω h√†ng lo·∫°t\n```bash\n./merge_to_exr.sh input_directory output_directory\n```\n\n## üìÅ C√°c t·∫≠p tin ƒë·∫ßu ra\n\n### gain_map_extract.py xu·∫•t ra:\n- ·∫¢nh n·ªÅn: `{filename}_base.tiff`\n- Gain maps: `{filename}_gain_map_{id}.tiff`\n- Depth maps: `{filename}_depth_{index}.tiff`\n- Metadata: `{filename}_metadata.json`\n",
    "Status": "ok"
  },
  {
    "Id": 7,
    "Content": "### heic_to_exr.py outputs:\n- HDR EXR file: `{filename}.exr`\n\n## üîç Advanced Usage\n\n### Metadata Handling\n- Binary data is base64 encoded\n- ICC profiles are maintained\n- EXIF data is preserved where possible\n\n### HDR Processing\n- Gain maps are properly scaled\n- Linear color space is maintained\n- Full dynamic range is preserved in EXR output\n\n## ‚ö†Ô∏è Known Limitations\n- Some HEIC variants may not be fully supported\n- Depth map extraction is limited to supported devices\n- Windows OpenEXR support may require additional configuration\n",
    "ContentSha": "mMK/AZzpBgn0oBPDUDqUTI2ejpIfdupchSbLmwaXpe4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### heic_to_exr.py xu·∫•t ra:\n- T·ªáp EXR HDR: `{filename}.exr`\n\n## üîç S·ª≠ D·ª•ng N√¢ng Cao\n\n### X·ª≠ L√Ω Si√™u D·ªØ Li·ªáu (Metadata)\n- D·ªØ li·ªáu nh·ªã ph√¢n ƒë∆∞·ª£c m√£ h√≥a base64\n- H·ªì s∆° ICC ƒë∆∞·ª£c gi·ªØ nguy√™n\n- D·ªØ li·ªáu EXIF ƒë∆∞·ª£c b·∫£o to√†n khi c√≥ th·ªÉ\n\n### X·ª≠ L√Ω HDR\n- B·∫£n ƒë·ªì gain ƒë∆∞·ª£c chia t·ª∑ l·ªá ch√≠nh x√°c\n- Kh√¥ng gian m√†u tuy·∫øn t√≠nh ƒë∆∞·ª£c duy tr√¨\n- To√†n b·ªô d·∫£i ƒë·ªông ƒë∆∞·ª£c gi·ªØ nguy√™n trong t·ªáp xu·∫•t EXR\n\n## ‚ö†Ô∏è C√°c Gi·ªõi H·∫°n ƒê√£ Bi·∫øt\n- M·ªôt s·ªë bi·∫øn th·ªÉ HEIC c√≥ th·ªÉ ch∆∞a ƒë∆∞·ª£c h·ªó tr·ª£ ho√†n to√†n\n- Vi·ªác tr√≠ch xu·∫•t b·∫£n ƒë·ªì ƒë·ªô s√¢u ch·ªâ gi·ªõi h·∫°n tr√™n c√°c thi·∫øt b·ªã ƒë∆∞·ª£c h·ªó tr·ª£\n- H·ªó tr·ª£ OpenEXR tr√™n Windows c√≥ th·ªÉ c·∫ßn c·∫•u h√¨nh b·ªï sung",
    "Status": "ok"
  },
  {
    "Id": 8,
    "Content": "## ü§ù Contributing\nContributions are welcome! Please feel free to submit a Pull Request.\n\n\n",
    "ContentSha": "//y7U/v0RJLV6jRB2ttYB6lt4osbl32LzIApNt265rE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## ü§ù ƒê√≥ng g√≥p\nCh√†o m·ª´ng m·ªçi ƒë√≥ng g√≥p! Vui l√≤ng g·ª≠i Pull Request.",
    "Status": "ok"
  }
]