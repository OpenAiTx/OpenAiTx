[
  {
    "Id": 1,
    "Content": "<a href=\"https://buymeacoffee.com/koromix\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/default-orange.png\" alt=\"Buy Me A Coffee\" height=\"41\" width=\"174\"></a>\n\n# Overview\n\nKoffi is a fast and easy-to-use C FFI module for Node.js, featuring:\n\n* Low-overhead and fast performance (see [benchmarks](https://koffi.dev/benchmarks))\n* Support for primitive and aggregate data types (structs and fixed-size arrays), both by reference (pointer) and by value\n* Javascript functions can be used as C callbacks (since 1.2.0)\n* Well-tested code base for popular OS/architecture combinations\n\nThe following combinations of OS and architectures __are officially supported and tested__ at the moment:\n\nISA / OS           | Windows     | Linux    | macOS       | FreeBSD     | OpenBSD\n------------------ | ----------- | -------- | ----------- | ----------- | --------\nx86 (IA32) [^1]    | ‚úÖ Yes      | ‚úÖ Yes   | ‚¨úÔ∏è *N/A*    | ‚úÖ Yes      | ‚úÖ Yes\nx86_64 (AMD64)     | ‚úÖ Yes      | ‚úÖ Yes   | ‚úÖ Yes      | ‚úÖ Yes      | ‚úÖ Yes\nARM32 LE [^2]      | ‚¨úÔ∏è *N/A*    | ‚úÖ Yes   | ‚¨úÔ∏è *N/A*    | üü® Probably | üü® Probably\nARM64 (AArch64) LE | ‚úÖ Yes      | ‚úÖ Yes   | ‚úÖ Yes      | ‚úÖ Yes      | üü® Probably\nRISC-V 64 [^3]     | ‚¨úÔ∏è *N/A*    | ‚úÖ Yes   | ‚¨úÔ∏è *N/A*    | üü® Probably | üü® Probably\n\n[^1]: The following call conventions are supported: cdecl, stdcall, MS fastcall, thiscall.\n[^2]: The prebuilt binary uses the hard float ABI and expects a VFP coprocessor. Build from source to use Koffi with a different ABI (softfp, soft).\n[^3]: The prebuilt binary uses the LP64D (double-precision float) ABI. The LP64 ABI is supported in theory if you build Koffi from source but this is untested. The LP64F ABI is not supported.\n\nUse the following links for more information:\n\n- Documentation: https://koffi.dev/\n- Changelog: https://koffi.dev/changelog\n- Source code: https://codeberg.org/Koromix/rygel/ (see below for an explanation)\n\n# Source code\n\nThis repository does not contain the code of Koffi but only exists as a front. For pratical reasons, I've started using a single repository for all my projects in 2018 because it is easier to manage.\n\nThe source code is available here: https://codeberg.org/Koromix/rygel/ (in the *src/koffi* subdirectory).\n\nMonorepositories have two killer features for me:\n\n* Cross-project refactoring",
    "ContentSha": "uwcH0Yxg3UVSry35W3CPZpfkOqsPhNPRIDAQq3zfoFc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<a href=\"https://buymeacoffee.com/koromix\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/default-orange.png\" alt=\"Buy Me A Coffee\" height=\"41\" width=\"174\"></a>\n\n# Aper√ßu\n\nKoffi est un module FFI C rapide et facile √† utiliser pour Node.js, offrant :\n\n* Faible surcharge et performance rapide (voir les [benchmarks](https://koffi.dev/benchmarks))\n* Support des types de donn√©es primitifs et agr√©g√©s (structs et tableaux de taille fixe), √† la fois par r√©f√©rence (pointeur) et par valeur\n* Les fonctions Javascript peuvent √™tre utilis√©es comme callbacks C (depuis la version 1.2.0)\n* Base de code bien test√©e pour les combinaisons OS/architecture populaires\n\nLes combinaisons suivantes d‚ÄôOS et d‚Äôarchitectures __sont officiellement support√©es et test√©es__ √† ce jour :\n\nISA / OS           | Windows     | Linux    | macOS       | FreeBSD     | OpenBSD\n------------------ | ----------- | -------- | ----------- | ----------- | --------\nx86 (IA32) [^1]    | ‚úÖ Oui      | ‚úÖ Oui   | ‚¨úÔ∏è *N/A*    | ‚úÖ Oui      | ‚úÖ Oui\nx86_64 (AMD64)     | ‚úÖ Oui      | ‚úÖ Oui   | ‚úÖ Oui      | ‚úÖ Oui      | ‚úÖ Oui\nARM32 LE [^2]      | ‚¨úÔ∏è *N/A*    | ‚úÖ Oui   | ‚¨úÔ∏è *N/A*    | üü® Probablement | üü® Probablement\nARM64 (AArch64) LE | ‚úÖ Oui      | ‚úÖ Oui   | ‚úÖ Oui      | ‚úÖ Oui      | üü® Probablement\nRISC-V 64 [^3]     | ‚¨úÔ∏è *N/A*    | ‚úÖ Oui   | ‚¨úÔ∏è *N/A*    | üü® Probablement | üü® Probablement\n\n[^1]: Les conventions d‚Äôappel suivantes sont support√©es : cdecl, stdcall, MS fastcall, thiscall.\n[^2]: Le binaire pr√©compil√© utilise l‚ÄôABI hard float et attend un coprocesseur VFP. Compilez depuis la source pour utiliser Koffi avec une ABI diff√©rente (softfp, soft).\n[^3]: Le binaire pr√©compil√© utilise l‚ÄôABI LP64D (float double pr√©cision). L‚ÄôABI LP64 est support√©e en th√©orie si vous compilez Koffi depuis la source mais cela n‚Äôa pas √©t√© test√©. L‚ÄôABI LP64F n‚Äôest pas support√©e.\n\nUtilisez les liens suivants pour plus d‚Äôinformations :\n\n- Documentation : https://koffi.dev/\n- Changelog : https://koffi.dev/changelog\n- Code source : https://codeberg.org/Koromix/rygel/ (voir ci-dessous pour une explication)\n\n# Code source\n\nCe d√©p√¥t ne contient pas le code de Koffi mais existe uniquement comme fa√ßade. Pour des raisons pratiques, j‚Äôai commenc√© √† utiliser un seul d√©p√¥t pour tous mes projets en 2018 car cela est plus facile √† g√©rer.\n\nLe code source est disponible ici : https://codeberg.org/Koromix/rygel/ (dans le sous-r√©pertoire *src/koffi*).\n\nLes monor√©pertoires ont deux fonctionnalit√©s cl√©s pour moi :\n\n* Refactorisation inter-projets",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "RGyYVC8JnTHZF0fnlyi91j9CPN0Q/4N+gOpuaMZ2Tso=",
        "originContent": "<a href=\"https://buymeacoffee.com/koromix\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/default-orange.png\" alt=\"Buy Me A Coffee\" height=\"41\" width=\"174\"></a>",
        "translatedContent": "<a href=\"https://buymeacoffee.com/koromix\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/default-orange.png\" alt=\"Buy Me A Coffee\" height=\"41\" width=\"174\"></a>"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "4ct9hhrs3178ur7dMe6XCFewLuyUDXLAhXSnsbO99YA=",
        "originContent": "# Overview",
        "translatedContent": "# Aper√ßu"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "5x4wGUfeCdrgRFpY19uVuwVhtAL1mkGCyjhs4D8VLe4=",
        "originContent": "Koffi is a fast and easy-to-use C FFI module for Node.js, featuring:",
        "translatedContent": "Koffi est un module FFI C rapide et facile √† utiliser pour Node.js, offrant :"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "wmmDK4bXZf41ug8HjPsJJB2nKrVWecq8JXsWOofi9QA=",
        "originContent": "* Low-overhead and fast performance (see [benchmarks](https://koffi.dev/benchmarks))",
        "translatedContent": "* Faible surcharge et performance rapide (voir les [benchmarks](https://koffi.dev/benchmarks))"
      },
      {
        "row": 8,
        "rowsha": "WpWQTkbUHuZT9+hDOWEfJ48AVNMgAoZEQG8a7vGQj6A=",
        "originContent": "* Support for primitive and aggregate data types (structs and fixed-size arrays), both by reference (pointer) and by value",
        "translatedContent": "* Support des types de donn√©es primitifs et agr√©g√©s (structs et tableaux de taille fixe), √† la fois par r√©f√©rence (pointeur) et par valeur"
      },
      {
        "row": 9,
        "rowsha": "Uj9TOEnNvislcvD9/9V3I5E7QiH6U4/QSF1Jp9v/kYQ=",
        "originContent": "* Javascript functions can be used as C callbacks (since 1.2.0)",
        "translatedContent": "* Les fonctions Javascript peuvent √™tre utilis√©es comme callbacks C (depuis la version 1.2.0)"
      },
      {
        "row": 10,
        "rowsha": "/4jgkFhFI+EZbRpTHR90bMuVyxyKtCZS+3ipgwyJqBU=",
        "originContent": "* Well-tested code base for popular OS/architecture combinations",
        "translatedContent": "* Base de code bien test√©e pour les combinaisons OS/architecture populaires"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "HEYsKuZDLGzZ6cKVwhvW4N/hsmhjm9+mADPO5sU47zA=",
        "originContent": "The following combinations of OS and architectures __are officially supported and tested__ at the moment:",
        "translatedContent": "Les combinaisons suivantes d‚ÄôOS et d‚Äôarchitectures __sont officiellement support√©es et test√©es__ √† ce jour :"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "EUwPAcp6I8AlDDlYIsMa90ONs18siEyyhwf+yA0Rrs4=",
        "originContent": "ISA / OS           | Windows     | Linux    | macOS       | FreeBSD     | OpenBSD",
        "translatedContent": "ISA / OS           | Windows     | Linux    | macOS       | FreeBSD     | OpenBSD"
      },
      {
        "row": 15,
        "rowsha": "4zTtNnAGIgx1lGRmfP5ESTf4TLg0ybmQoGIYxluQh7Y=",
        "originContent": "------------------ | ----------- | -------- | ----------- | ----------- | --------",
        "translatedContent": "------------------ | ----------- | -------- | ----------- | ----------- | --------"
      },
      {
        "row": 16,
        "rowsha": "Q7qhWkOxVh/Hm76Dno5vKXYaOu43IvTlrZckvrszA88=",
        "originContent": "x86 (IA32) [^1]    | ‚úÖ Yes      | ‚úÖ Yes   | ‚¨úÔ∏è *N/A*    | ‚úÖ Yes      | ‚úÖ Yes",
        "translatedContent": "x86 (IA32) [^1]    | ‚úÖ Oui      | ‚úÖ Oui   | ‚¨úÔ∏è *N/A*    | ‚úÖ Oui      | ‚úÖ Oui"
      },
      {
        "row": 17,
        "rowsha": "3cBORtYzlE2VKDr8YlVokN1DdUWNgZJSRjTAqm3oSDI=",
        "originContent": "x86_64 (AMD64)     | ‚úÖ Yes      | ‚úÖ Yes   | ‚úÖ Yes      | ‚úÖ Yes      | ‚úÖ Yes",
        "translatedContent": "x86_64 (AMD64)     | ‚úÖ Oui      | ‚úÖ Oui   | ‚úÖ Oui      | ‚úÖ Oui      | ‚úÖ Oui"
      },
      {
        "row": 18,
        "rowsha": "Z41Ewj4RO8WmFuFu5Tu45+CFf/R8jFl6ii4hTObO94Q=",
        "originContent": "ARM32 LE [^2]      | ‚¨úÔ∏è *N/A*    | ‚úÖ Yes   | ‚¨úÔ∏è *N/A*    | üü® Probably | üü® Probably",
        "translatedContent": "ARM32 LE [^2]      | ‚¨úÔ∏è *N/A*    | ‚úÖ Oui   | ‚¨úÔ∏è *N/A*    | üü® Probablement | üü® Probablement"
      },
      {
        "row": 19,
        "rowsha": "lRDFNm9Bk54BuiqE3jz5AvG1ph1mwv61b5FSjefWNSs=",
        "originContent": "ARM64 (AArch64) LE | ‚úÖ Yes      | ‚úÖ Yes   | ‚úÖ Yes      | ‚úÖ Yes      | üü® Probably",
        "translatedContent": "ARM64 (AArch64) LE | ‚úÖ Oui      | ‚úÖ Oui   | ‚úÖ Oui      | ‚úÖ Oui      | üü® Probablement"
      },
      {
        "row": 20,
        "rowsha": "rhB/lEV8AdEbUmXTZcmNBOTbbWg7w0lOYGVz2SX2VtQ=",
        "originContent": "RISC-V 64 [^3]     | ‚¨úÔ∏è *N/A*    | ‚úÖ Yes   | ‚¨úÔ∏è *N/A*    | üü® Probably | üü® Probably",
        "translatedContent": "RISC-V 64 [^3]     | ‚¨úÔ∏è *N/A*    | ‚úÖ Oui   | ‚¨úÔ∏è *N/A*    | üü® Probablement | üü® Probablement"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "Cc3gcpGL+EFHK6JyJUT6GGhtzZVw3QLeCFV4XoXQ31Q=",
        "originContent": "[^1]: The following call conventions are supported: cdecl, stdcall, MS fastcall, thiscall.",
        "translatedContent": "[^1]: Les conventions d‚Äôappel suivantes sont support√©es : cdecl, stdcall, MS fastcall, thiscall."
      },
      {
        "row": 23,
        "rowsha": "eQBVrhWmxnTTtG2HGDIgdMf2rwy0l7whZYje7cjTd88=",
        "originContent": "[^2]: The prebuilt binary uses the hard float ABI and expects a VFP coprocessor. Build from source to use Koffi with a different ABI (softfp, soft).",
        "translatedContent": "[^2]: Le binaire pr√©compil√© utilise l‚ÄôABI hard float et attend un coprocesseur VFP. Compilez depuis la source pour utiliser Koffi avec une ABI diff√©rente (softfp, soft)."
      },
      {
        "row": 24,
        "rowsha": "YryiO2Wv47pfsZNqLLOJveZiN/Qy6H9pAa9myz3LVGg=",
        "originContent": "[^3]: The prebuilt binary uses the LP64D (double-precision float) ABI. The LP64 ABI is supported in theory if you build Koffi from source but this is untested. The LP64F ABI is not supported.",
        "translatedContent": "[^3]: Le binaire pr√©compil√© utilise l‚ÄôABI LP64D (float double pr√©cision). L‚ÄôABI LP64 est support√©e en th√©orie si vous compilez Koffi depuis la source mais cela n‚Äôa pas √©t√© test√©. L‚ÄôABI LP64F n‚Äôest pas support√©e."
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "veK6SMvwJrcaZec71i/1wcukqFVFCSW057CK2UZMx9k=",
        "originContent": "Use the following links for more information:",
        "translatedContent": "Utilisez les liens suivants pour plus d‚Äôinformations :"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "8cArGpd/qe6BV4JhRlKC61dG8m1F3BMQYrKJTaBH25w=",
        "originContent": "- Documentation: https://koffi.dev/",
        "translatedContent": "- Documentation : https://koffi.dev/"
      },
      {
        "row": 29,
        "rowsha": "GenaM38Hjbb26qLmAXtv0Hiacxs9hqUSTJsEX97ZeAk=",
        "originContent": "- Changelog: https://koffi.dev/changelog",
        "translatedContent": "- Changelog : https://koffi.dev/changelog"
      },
      {
        "row": 30,
        "rowsha": "0XjE7uEYZCkja8CjAV05xx8mCusXijk2u9P3v0YJEuw=",
        "originContent": "- Source code: https://codeberg.org/Koromix/rygel/ (see below for an explanation)",
        "translatedContent": "- Code source : https://codeberg.org/Koromix/rygel/ (voir ci-dessous pour une explication)"
      },
      {
        "row": 31,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 32,
        "rowsha": "+a3E+lrkpozoR9RXrfwgGqZq+s7FO+pdZyehNheqhMU=",
        "originContent": "# Source code",
        "translatedContent": "# Code source"
      },
      {
        "row": 33,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 34,
        "rowsha": "+hn6wm+oQ77IMrvVx6kUYS6XV7ihbZNZFYSXYbaB5hk=",
        "originContent": "This repository does not contain the code of Koffi but only exists as a front. For pratical reasons, I've started using a single repository for all my projects in 2018 because it is easier to manage.",
        "translatedContent": "Ce d√©p√¥t ne contient pas le code de Koffi mais existe uniquement comme fa√ßade. Pour des raisons pratiques, j‚Äôai commenc√© √† utiliser un seul d√©p√¥t pour tous mes projets en 2018 car cela est plus facile √† g√©rer."
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "I1Pim82VLWqLsiu2ToNgOypRoPslpxBhGypxTNEFuNg=",
        "originContent": "The source code is available here: https://codeberg.org/Koromix/rygel/ (in the *src/koffi* subdirectory).",
        "translatedContent": "Le code source est disponible ici : https://codeberg.org/Koromix/rygel/ (dans le sous-r√©pertoire *src/koffi*)."
      },
      {
        "row": 37,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 38,
        "rowsha": "duc97wjuQEgpprH55+ApskjhSsBJui1y/524MXNAndw=",
        "originContent": "Monorepositories have two killer features for me:",
        "translatedContent": "Les monor√©pertoires ont deux fonctionnalit√©s cl√©s pour moi :"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "F0tisnpc8NUbba2XCh+Fl8DR2JrrgqurVTnwvHD9a1A=",
        "originContent": "* Cross-project refactoring",
        "translatedContent": "* Refactorisation inter-projets"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "* Simplified dependency management\n\nYou can find a more detailed rationale here: https://danluu.com/monorepo/\n\n# Build manually\n\nKoffi is built with a custom CMake-wrapper called CNoke, which also lives in the monorepository. Don't try to run CMake manually because it will fail.\n\nFollow the [documented build instructions](https://koffi.dev/contribute#build-from-source) to build Koffi from source.\n\n# License\n\nThis program is free software: you can redistribute it and/or modify it under the terms of the **MIT License**.\n\nFind more information here: https://choosealicense.com/licenses/mit/\n",
    "ContentSha": "JFTApetlgyfvUF6m7gejYRL+5oZrjNiiPTf/fC7g6FM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "* Gestion simplifi√©e des d√©pendances\n\nVous pouvez trouver une justification plus d√©taill√©e ici : https://danluu.com/monorepo/\n\n# Construire manuellement\n\nKoffi est construit avec un wrapper CMake personnalis√© appel√© CNoke, qui vit √©galement dans le monorepository. N‚Äôessayez pas d‚Äôex√©cuter CMake manuellement car cela √©chouera.\n\nSuivez les [instructions de construction document√©es](https://koffi.dev/contribute#build-from-source) pour construire Koffi √† partir des sources.\n\n# Licence\n\nCe programme est un logiciel libre : vous pouvez le redistribuer et/ou le modifier selon les termes de la **Licence MIT**.\n\nTrouvez plus d‚Äôinformations ici : https://choosealicense.com/licenses/mit/\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "IJk6BjkPnGy8k/syVVGVtKkAV1gi42R5s+5NSdwY9Cg=",
        "originContent": "* Simplified dependency management",
        "translatedContent": "* Gestion simplifi√©e des d√©pendances"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "J/JTcnjq5XPoQxTG3WVwxLoGka4Q1SrJv/K0OcOlQzo=",
        "originContent": "You can find a more detailed rationale here: https://danluu.com/monorepo/",
        "translatedContent": "Vous pouvez trouver une justification plus d√©taill√©e ici : https://danluu.com/monorepo/"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "8JFkojqzU/aFVzHkxpyB+joR+D4BE1Te4BwN7wzwH/o=",
        "originContent": "# Build manually",
        "translatedContent": "# Construire manuellement"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "t6ww6dDmKSodkcJVzOCrkU7xE65LuI1M0mvNd8Ch/rk=",
        "originContent": "Koffi is built with a custom CMake-wrapper called CNoke, which also lives in the monorepository. Don't try to run CMake manually because it will fail.",
        "translatedContent": "Koffi est construit avec un wrapper CMake personnalis√© appel√© CNoke, qui vit √©galement dans le monorepository. N‚Äôessayez pas d‚Äôex√©cuter CMake manuellement car cela √©chouera."
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "iw6F3RouBQoLdqe6t1u8quo42HcIU/8u46K6WW7IFj0=",
        "originContent": "Follow the [documented build instructions](https://koffi.dev/contribute#build-from-source) to build Koffi from source.",
        "translatedContent": "Suivez les [instructions de construction document√©es](https://koffi.dev/contribute#build-from-source) pour construire Koffi √† partir des sources."
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "7Qo8+NblMV+ve9U8YJCAOSzx5hR1PsQgmN0TGjFj2ls=",
        "originContent": "# License",
        "translatedContent": "# Licence"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "wXfO9KGkBMTvB1TCYMnGB0go0jKtQcfSsnNvH1j9TxI=",
        "originContent": "This program is free software: you can redistribute it and/or modify it under the terms of the **MIT License**.",
        "translatedContent": "Ce programme est un logiciel libre : vous pouvez le redistribuer et/ou le modifier selon les termes de la **Licence MIT**."
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "h3ZvtTjajVp31aqdme6s/a+cM95sJe6dwBn4RDHwYDU=",
        "originContent": "Find more information here: https://choosealicense.com/licenses/mit/",
        "translatedContent": "Trouvez plus d‚Äôinformations ici : https://choosealicense.com/licenses/mit/"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]