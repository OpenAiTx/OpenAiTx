{
  "id": 1,
  "origin": "CDN acceleration and security protection for this project are sponsored by Tencent EdgeOne.\n\n[![image](https://github.com/user-attachments/assets/059fed87-d415-41b0-a575-2423bf2d77e2)](https://edgeone.ai/?from=github)\n\nThe author of this project is colin1114.\n\n# 🚀 Clash 订阅转换器\n\n一个美观且功能强大的在线工具，用于将各种代理订阅链接转换为 Clash 配置格式。支持通过 Cloudflare Workers & Pages 自动部署，提供快速、可靠的订阅转换服务。\n\n## ✨ 功能特性\n\n- 🎨 **美观的现代化界面** - 采用渐变背景和卡片式设计\n- 🔄 **多协议支持** - 支持 V2Ray、VLESS、Shadowsocks、Trojan 等主流协议\n- ☁️ **云端部署** - 通过 Cloudflare Workers 实现全球CDN加速\n- 📱 **响应式设计** - 完美适配桌面端和移动端\n- ⚡ **快速转换** - 实时将订阅链接转换为 Clash 配置\n- 📋 **智能复制** - 支持一键复制生成的 YAML 配置，兼容各种浏览器\n- 📡 **订阅链接生成** - 自动生成可直接导入Clash的订阅链接\n- 🌐 **在线YAML访问** - 提供多种YAML文件访问方式：\n  - 📡 订阅链接：支持Clash客户端自动更新\n  - 🔗 在线查看：浏览器中直接查看配置内容\n  - 💾 文件下载：下载.yaml文件到本地\n  - ⚡ 快速访问：简化的下载链接\n- 🔧 **UTF-8支持** - 完美支持中文节点名称和配置\n- 🆓 **完全免费** - 基于 Cloudflare 免费服务，无使用限制\n\n## 📁 项目结构\n\n```\nclash/\n├── index.html              # 前端页面\n├── worker.js               # Cloudflare Worker 后端代码\n├── wrangler.jsonc          # Wrangler 配置文件\n├── _headers                # Cloudflare Pages HTTP头配置\n├── .github/\n│   └── workflows/\n│       └── deploy.yml      # GitHub Actions 部署配置\n├── README.md              # 项目说明文档\n└── package.json           # 项目配置文件\n```\n\n## 🚀 快速开始\n\n### 方法一：本地运行\n\n1. **克隆项目**\n   ```bash\n   git clone <repository-url>\n   cd clash\n   ```\n\n2. **启动本地服务器**\n   ```bash\n   # 使用 Python\n   python -m http.server 8000\n   \n   # 或使用 Node.js\n   npx serve .\n   ```\n\n3. **访问应用**\n   - 打开浏览器访问 `http://localhost:8000`\n   - 在本地环境下会显示示例配置\n\n### 方法二：Cloudflare Workers 部署\n\n#### 步骤1：创建 Worker\n\n1. 访问 [Cloudflare Workers](https://workers.cloudflare.com/)\n2. 注册/登录 Cloudflare 账户\n3. 点击 \"Create a Worker\"\n4. 将 `worker.js` 中的代码完整复制到编辑器中\n5. 点击 \"Save and Deploy\"\n\n#### 步骤2：使用 Wrangler CLI 部署\n\n```bash\n# 安装 Wrangler CLI\nnpm install -g wrangler\n\n# 登录到 Cloudflare\nwrangler login\n\n# 部署 Worker\nnpm run deploy:worker\n```\n\n#### 步骤3：配置域名（可选）\n\n1. 在 Worker 设置中添加自定义域名\n2. 或使用 Cloudflare 提供的默认域名\n\n### 方法三：Cloudflare Pages 部署\n\n#### 选项A：GitHub 集成（推荐）\n\n1. **准备仓库**\n   - 将代码推送到 GitHub 仓库\n   - 确保包含所有必要文件",
  "origin_sha": "jTqXmIrMxDG3dHdJiIIXLYHuKiIo9ZlvILpt3H+GGJY=",
  "translate": "تسریع CDN و حفاظت امنیتی این پروژه توسط Tencent EdgeOne حمایت می‌شود.\n\n[![image](https://github.com/user-attachments/assets/059fed87-d415-41b0-a575-2423bf2d77e2)](https://edgeone.ai/?from=github)\n\nنویسنده این پروژه colin1114 است.\n\n# 🚀 تبدیل‌گر اشتراک Clash\n\nیک ابزار آنلاین زیبا و قدرتمند برای تبدیل انواع لینک‌های اشتراک پروکسی به فرمت پیکربندی Clash. پشتیبانی از استقرار خودکار از طریق Cloudflare Workers & Pages، ارائه سرویس تبدیل اشتراک سریع و قابل اعتماد.\n\n## ✨ ویژگی‌ها\n\n- 🎨 **رابط کاربری مدرن و زیبا** - با پس‌زمینه گرادیانی و طراحی کارت‌محور\n- 🔄 **پشتیبانی از چندین پروتکل** - پشتیبانی از پروتکل‌های اصلی مانند V2Ray، VLESS، Shadowsocks، Trojan و غیره\n- ☁️ **استقرار ابری** - تسریع جهانی CDN با استفاده از Cloudflare Workers\n- 📱 **طراحی واکنش‌گرا** - سازگاری کامل با دسکتاپ و موبایل\n- ⚡ **تبدیل سریع** - تبدیل آنی لینک اشتراک به پیکربندی Clash\n- 📋 **کپی هوشمند** - پشتیبانی از کپی با یک کلیک پیکربندی YAML تولید شده، سازگار با انواع مرورگرها\n- 📡 **تولید لینک اشتراک** - تولید خودکار لینک اشتراکی که مستقیماً قابل وارد کردن در Clash است\n- 🌐 **دسترسی آنلاین به YAML** - ارائه روش‌های مختلف دسترسی به فایل YAML:\n  - 📡 لینک اشتراک: پشتیبانی از بروزرسانی خودکار کلاینت Clash\n  - 🔗 مشاهده آنلاین: مشاهده مستقیم محتوا در مرورگر\n  - 💾 دانلود فایل: دانلود فایل .yaml به صورت محلی\n  - ⚡ دسترسی سریع: لینک دانلود ساده‌شده\n- 🔧 **پشتیبانی UTF-8** - پشتیبانی کامل از نام و پیکربندی نودهای چینی\n- 🆓 **کاملاً رایگان** - بر پایه سرویس رایگان Cloudflare، بدون هیچ محدودیتی در استفاده\n\n## 📁 ساختار پروژه\n\n```\nclash/\n├── index.html              # صفحه فرانت‌اند\n├── worker.js               # کد بک‌اند Cloudflare Worker\n├── wrangler.jsonc          # فایل پیکربندی Wrangler\n├── _headers                # پیکربندی HTTP header برای Cloudflare Pages\n├── .github/\n│   └── workflows/\n│       └── deploy.yml      # پیکربندی استقرار GitHub Actions\n├── README.md              # مستندات توضیحات پروژه\n└── package.json           # فایل پیکربندی پروژه\n```\n\n## 🚀 شروع سریع\n\n### روش اول: اجرای محلی\n\n1. **کلون پروژه**\n   ```bash\n   git clone <repository-url>\n   cd clash\n   ```\n\n2. **راه‌اندازی سرور محلی**\n   ```bash\n   # با استفاده از Python\n   python -m http.server 8000\n   \n   # یا با استفاده از Node.js\n   npx serve .\n   ```\n\n3. **دسترسی به برنامه**\n   - مرورگر را باز کنید و به `http://localhost:8000` بروید\n   - در محیط محلی، پیکربندی نمونه نمایش داده می‌شود\n\n### روش دوم: استقرار Cloudflare Workers\n\n#### مرحله 1: ساخت Worker\n\n1. به [Cloudflare Workers](https://workers.cloudflare.com/) مراجعه کنید\n2. یک حساب کاربری Cloudflare بسازید/وارد شوید\n3. روی \"Create a Worker\" کلیک کنید\n4. کد موجود در `worker.js` را به طور کامل در ویرایشگر کپی کنید\n5. روی \"Save and Deploy\" کلیک کنید\n\n#### مرحله 2: استقرار با Wrangler CLI\n\n```bash\n# نصب Wrangler CLI\nnpm install -g wrangler\n\n# ورود به حساب Cloudflare\nwrangler login\n\n# استقرار Worker\nnpm run deploy:worker\n```\n\n#### مرحله 3: پیکربندی دامنه (اختیاری)\n\n1. افزودن دامنه دلخواه در تنظیمات Worker\n2. یا استفاده از دامنه پیش‌فرض ارائه شده توسط Cloudflare\n\n### روش سوم: استقرار Cloudflare Pages\n\n#### گزینه A: اتصال به GitHub (توصیه شده)\n\n1. **آماده‌سازی مخزن**\n   - کد را به مخزن GitHub ارسال کنید\n   - اطمینان حاصل کنید که همه فایل‌های مورد نیاز وجود دارند",
  "status": "ok"
}