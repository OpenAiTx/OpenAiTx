{
  "id": 2,
  "origin": "\n2. **创建 Pages 项目**\n   - 访问 [Cloudflare Pages](https://pages.cloudflare.com/)\n   - 连接你的 GitHub 仓库\n   - 选择项目仓库\n\n3. **构建设置**\n   - 构建命令：留空或 `echo \"No build required\"`\n   - 构建输出目录：`/`（根目录）\n   - 环境变量：无需设置\n\n#### 选项B：直接上传\n\n```bash\n# 使用 Wrangler Pages 部署\nnpm run deploy:pages\n```\n\n## 🛠️ 技术架构\n\n### 前端技术栈\n- **HTML5** - 现代化标记语言\n- **CSS3** - 响应式设计和动画效果\n- **Vanilla JavaScript** - 轻量级前端交互\n\n### 后端技术栈\n- **Cloudflare Workers** - 边缘计算平台\n- **Web APIs** - 标准的 Fetch API 和响应处理\n\n### 支持的协议格式\n- **VMess** - V2Ray 标准协议\n- **VLESS** - V2Ray 轻量协议（支持Reality）\n- **Shadowsocks** - 经典代理协议\n- **Trojan** - 新兴的代理协议\n\n### API 端点\n- `GET /` - 主页面\n- `POST /convert` - 订阅转换API\n- `GET /clash/{config-id}` - 获取YAML配置文件（订阅链接）\n- `GET /yaml/{config-id}` - 下载YAML配置文件\n- `OPTIONS /*` - CORS预检请求\n\n## 📖 使用指南\n\n### 基本使用\n\n1. **输入订阅链接**\n   - 将你的代理订阅链接粘贴到输入框中\n   - 支持 Base64 编码的订阅链接\n\n2. **设置配置名称**\n   - 可选择性地为配置文件设置自定义名称\n   - 默认为 \"My Clash Config\"\n\n3. **转换配置**\n   - 点击 \"转换订阅\" 按钮\n   - 等待转换完成\n\n4. **使用配置**\n   - 复制生成的 YAML 配置\n   - 导入到 Clash 客户端中使用\n\n5. **使用订阅链接（推荐）**\n   - 复制生成的订阅链接\n   - 在Clash客户端中添加订阅\n   - 配置会自动同步，无需手动更新\n\n### 高级配置\n\n生成的 Clash 配置包含以下特性：\n\n- **代理组策略**\n  - 🚀 节点选择 - 手动选择代理\n  - ♻️ 自动选择 - 延迟测试自动选择\n  - 🎯 全球直连 - 直接连接\n\n- **DNS 配置**\n  - 启用 DNS 解析\n  - 支持 fake-ip 模式\n  - 国内外 DNS 分流\n\n- **路由规则**\n  - 本地地址直连\n  - 国内 IP 直连\n  - 其他流量走代理\n\n## 🔧 部署故障排除\n\n### 常见问题\n\n#### 1. Wrangler 找不到入口点\n**错误信息**: `Missing entry-point to Worker script`\n\n**解决方案**: \n- 确保项目根目录有 `wrangler.jsonc` 文件\n- 检查 `wrangler.jsonc` 中的 `main` 字段指向 `worker.js`\n\n#### 2. GitHub Actions 部署失败\n**解决方案**:\n- 在 GitHub 仓库设置中添加以下 Secrets:",
  "origin_sha": "zr7tJc8hvOfDo46UzlFuACJMOON5tS4gQJwIF+1J9LU=",
  "translate": "2. **Create a Pages Project**\n   - Visit [Cloudflare Pages](https://pages.cloudflare.com/)\n   - Connect your GitHub repository\n   - Select the project repository\n\n3. **Build Settings**\n   - Build command: leave blank or use `echo \"No build required\"`\n   - Build output directory: `/` (root directory)\n   - Environment variables: no need to set\n\n#### Option B: Direct Upload\n\n```bash\n# Deploy using Wrangler Pages\nnpm run deploy:pages\n```\n\n## 🛠️ Technical Architecture\n\n### Frontend Tech Stack\n- **HTML5** - Modern markup language\n- **CSS3** - Responsive design and animation effects\n- **Vanilla JavaScript** - Lightweight frontend interaction\n\n### Backend Tech Stack\n- **Cloudflare Workers** - Edge computing platform\n- **Web APIs** - Standard Fetch API and response handling\n\n### Supported Protocols\n- **VMess** - V2Ray standard protocol\n- **VLESS** - V2Ray lightweight protocol (supports Reality)\n- **Shadowsocks** - Classic proxy protocol\n- **Trojan** - Emerging proxy protocol\n\n### API Endpoints\n- `GET /` - Main page\n- `POST /convert` - Subscription conversion API\n- `GET /clash/{config-id}` - Get YAML config file (subscription link)\n- `GET /yaml/{config-id}` - Download YAML config file\n- `OPTIONS /*` - CORS preflight requests\n\n## 📖 User Guide\n\n### Basic Usage\n\n1. **Enter Subscription Link**\n   - Paste your proxy subscription link into the input box\n   - Supports Base64-encoded subscription links\n\n2. **Set Configuration Name**\n   - Optionally set a custom name for the config file\n   - Defaults to \"My Clash Config\"\n\n3. **Convert Configuration**\n   - Click the \"Convert Subscription\" button\n   - Wait for the conversion to complete\n\n4. **Use Configuration**\n   - Copy the generated YAML config\n   - Import it into the Clash client for use\n\n5. **Use Subscription Link (Recommended)**\n   - Copy the generated subscription link\n   - Add the subscription in the Clash client\n   - Config will auto-sync, no manual update needed\n\n### Advanced Configuration\n\nThe generated Clash config includes the following features:\n\n- **Proxy Group Policies**\n  - 🚀 Node Selection - Manually select proxy\n  - ♻️ Auto Selection - Automatically select by latency test\n  - 🎯 Global Direct - Direct connection\n\n- **DNS Configuration**\n  - DNS resolution enabled\n  - Supports fake-ip mode\n  - Domestic and foreign DNS split\n\n- **Routing Rules**\n  - Local addresses direct connect\n  - Domestic IPs direct connect\n  - Other traffic goes through proxy\n\n## 🔧 Deployment Troubleshooting\n\n### Common Issues\n\n#### 1. Wrangler Cannot Find Entry Point\n**Error Message**: `Missing entry-point to Worker script`\n\n**Solution**: \n- Ensure the project root directory contains a `wrangler.jsonc` file\n- Check that the `main` field in `wrangler.jsonc` points to `worker.js`\n\n#### 2. GitHub Actions Deployment Fails\n**Solution**:\n- Add the following Secrets in your GitHub repository settings:",
  "status": "ok"
}