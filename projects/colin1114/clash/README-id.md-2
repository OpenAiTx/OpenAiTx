{
  "id": 2,
  "origin": "\n2. **创建 Pages 项目**\n   - 访问 [Cloudflare Pages](https://pages.cloudflare.com/)\n   - 连接你的 GitHub 仓库\n   - 选择项目仓库\n\n3. **构建设置**\n   - 构建命令：留空或 `echo \"No build required\"`\n   - 构建输出目录：`/`（根目录）\n   - 环境变量：无需设置\n\n#### 选项B：直接上传\n\n```bash\n# 使用 Wrangler Pages 部署\nnpm run deploy:pages\n```\n\n## 🛠️ 技术架构\n\n### 前端技术栈\n- **HTML5** - 现代化标记语言\n- **CSS3** - 响应式设计和动画效果\n- **Vanilla JavaScript** - 轻量级前端交互\n\n### 后端技术栈\n- **Cloudflare Workers** - 边缘计算平台\n- **Web APIs** - 标准的 Fetch API 和响应处理\n\n### 支持的协议格式\n- **VMess** - V2Ray 标准协议\n- **VLESS** - V2Ray 轻量协议（支持Reality）\n- **Shadowsocks** - 经典代理协议\n- **Trojan** - 新兴的代理协议\n\n### API 端点\n- `GET /` - 主页面\n- `POST /convert` - 订阅转换API\n- `GET /clash/{config-id}` - 获取YAML配置文件（订阅链接）\n- `GET /yaml/{config-id}` - 下载YAML配置文件\n- `OPTIONS /*` - CORS预检请求\n\n## 📖 使用指南\n\n### 基本使用\n\n1. **输入订阅链接**\n   - 将你的代理订阅链接粘贴到输入框中\n   - 支持 Base64 编码的订阅链接\n\n2. **设置配置名称**\n   - 可选择性地为配置文件设置自定义名称\n   - 默认为 \"My Clash Config\"\n\n3. **转换配置**\n   - 点击 \"转换订阅\" 按钮\n   - 等待转换完成\n\n4. **使用配置**\n   - 复制生成的 YAML 配置\n   - 导入到 Clash 客户端中使用\n\n5. **使用订阅链接（推荐）**\n   - 复制生成的订阅链接\n   - 在Clash客户端中添加订阅\n   - 配置会自动同步，无需手动更新\n\n### 高级配置\n\n生成的 Clash 配置包含以下特性：\n\n- **代理组策略**\n  - 🚀 节点选择 - 手动选择代理\n  - ♻️ 自动选择 - 延迟测试自动选择\n  - 🎯 全球直连 - 直接连接\n\n- **DNS 配置**\n  - 启用 DNS 解析\n  - 支持 fake-ip 模式\n  - 国内外 DNS 分流\n\n- **路由规则**\n  - 本地地址直连\n  - 国内 IP 直连\n  - 其他流量走代理\n\n## 🔧 部署故障排除\n\n### 常见问题\n\n#### 1. Wrangler 找不到入口点\n**错误信息**: `Missing entry-point to Worker script`\n\n**解决方案**: \n- 确保项目根目录有 `wrangler.jsonc` 文件\n- 检查 `wrangler.jsonc` 中的 `main` 字段指向 `worker.js`\n\n#### 2. GitHub Actions 部署失败\n**解决方案**:\n- 在 GitHub 仓库设置中添加以下 Secrets:",
  "origin_sha": "zr7tJc8hvOfDo46UzlFuACJMOON5tS4gQJwIF+1J9LU=",
  "translate": "2. **Membuat Proyek Pages**\n   - Kunjungi [Cloudflare Pages](https://pages.cloudflare.com/)\n   - Hubungkan repositori GitHub Anda\n   - Pilih repositori proyek\n\n3. **Pengaturan Build**\n   - Perintah build: Biarkan kosong atau `echo \"No build required\"`\n   - Direktori output build: `/` (direktori root)\n   - Variabel lingkungan: Tidak perlu diatur\n\n#### Opsi B: Unggah Langsung\n\n```bash\n# Deploy menggunakan Wrangler Pages\nnpm run deploy:pages\n```\n\n## 🛠️ Arsitektur Teknis\n\n### Teknologi Frontend\n- **HTML5** - Bahasa markup modern\n- **CSS3** - Desain responsif dan efek animasi\n- **Vanilla JavaScript** - Interaksi frontend ringan\n\n### Teknologi Backend\n- **Cloudflare Workers** - Platform komputasi edge\n- **Web APIs** - Standar Fetch API dan penanganan respons\n\n### Format Protokol yang Didukung\n- **VMess** - Protokol standar V2Ray\n- **VLESS** - Protokol ringan V2Ray (mendukung Reality)\n- **Shadowsocks** - Protokol proxy klasik\n- **Trojan** - Protokol proxy baru\n\n### Endpoint API\n- `GET /` - Halaman utama\n- `POST /convert` - API konversi langganan\n- `GET /clash/{config-id}` - Mengambil file konfigurasi YAML (tautan langganan)\n- `GET /yaml/{config-id}` - Mengunduh file konfigurasi YAML\n- `OPTIONS /*` - Permintaan preflight CORS\n\n## 📖 Panduan Penggunaan\n\n### Penggunaan Dasar\n\n1. **Masukkan Tautan Langganan**\n   - Tempelkan tautan langganan proxy Anda ke kolom input\n   - Mendukung tautan langganan yang dienkode Base64\n\n2. **Atur Nama Konfigurasi**\n   - Opsional untuk mengatur nama khusus file konfigurasi\n   - Secara default bernama \"My Clash Config\"\n\n3. **Konversi Konfigurasi**\n   - Klik tombol \"Konversi Langganan\"\n   - Tunggu hingga proses selesai\n\n4. **Gunakan Konfigurasi**\n   - Salin konfigurasi YAML yang dihasilkan\n   - Impor ke dalam aplikasi Clash client\n\n5. **Gunakan Tautan Langganan (Disarankan)**\n   - Salin tautan langganan yang dihasilkan\n   - Tambahkan langganan pada aplikasi Clash client\n   - Konfigurasi akan tersinkronisasi otomatis, tanpa perlu pembaruan manual\n\n### Konfigurasi Lanjutan\n\nKonfigurasi Clash yang dihasilkan memiliki fitur berikut:\n\n- **Kebijakan Grup Proxy**\n  - 🚀 Pemilihan node - Pilih proxy secara manual\n  - ♻️ Pemilihan otomatis - Uji latensi dan pilih otomatis\n  - 🎯 Koneksi langsung global - Koneksi langsung\n\n- **Konfigurasi DNS**\n  - DNS resolver diaktifkan\n  - Mendukung mode fake-ip\n  - DNS split untuk dalam dan luar negeri\n\n- **Aturan Routing**\n  - Alamat lokal koneksi langsung\n  - IP domestik koneksi langsung\n  - Lalu lintas lain melalui proxy\n\n## 🔧 Pemecahan Masalah Deployment\n\n### Masalah Umum\n\n#### 1. Wrangler Tidak Menemukan Entry Point\n**Pesan Error**: `Missing entry-point to Worker script`\n\n**Solusi**: \n- Pastikan terdapat file `wrangler.jsonc` di direktori root proyek\n- Periksa apakah field `main` di `wrangler.jsonc` mengarah ke `worker.js`\n\n#### 2. Deployment GitHub Actions Gagal\n**Solusi**:\n- Tambahkan Secrets berikut di pengaturan repositori GitHub:",
  "status": "ok"
}