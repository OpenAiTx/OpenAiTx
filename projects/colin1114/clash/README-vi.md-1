{
  "id": 1,
  "origin": "CDN acceleration and security protection for this project are sponsored by Tencent EdgeOne.\n\n[![image](https://github.com/user-attachments/assets/059fed87-d415-41b0-a575-2423bf2d77e2)](https://edgeone.ai/?from=github)\n\nThe author of this project is colin1114.\n\n# 🚀 Clash 订阅转换器\n\n一个美观且功能强大的在线工具，用于将各种代理订阅链接转换为 Clash 配置格式。支持通过 Cloudflare Workers & Pages 自动部署，提供快速、可靠的订阅转换服务。\n\n## ✨ 功能特性\n\n- 🎨 **美观的现代化界面** - 采用渐变背景和卡片式设计\n- 🔄 **多协议支持** - 支持 V2Ray、VLESS、Shadowsocks、Trojan 等主流协议\n- ☁️ **云端部署** - 通过 Cloudflare Workers 实现全球CDN加速\n- 📱 **响应式设计** - 完美适配桌面端和移动端\n- ⚡ **快速转换** - 实时将订阅链接转换为 Clash 配置\n- 📋 **智能复制** - 支持一键复制生成的 YAML 配置，兼容各种浏览器\n- 📡 **订阅链接生成** - 自动生成可直接导入Clash的订阅链接\n- 🌐 **在线YAML访问** - 提供多种YAML文件访问方式：\n  - 📡 订阅链接：支持Clash客户端自动更新\n  - 🔗 在线查看：浏览器中直接查看配置内容\n  - 💾 文件下载：下载.yaml文件到本地\n  - ⚡ 快速访问：简化的下载链接\n- 🔧 **UTF-8支持** - 完美支持中文节点名称和配置\n- 🆓 **完全免费** - 基于 Cloudflare 免费服务，无使用限制\n\n## 📁 项目结构\n\n```\nclash/\n├── index.html              # 前端页面\n├── worker.js               # Cloudflare Worker 后端代码\n├── wrangler.jsonc          # Wrangler 配置文件\n├── _headers                # Cloudflare Pages HTTP头配置\n├── .github/\n│   └── workflows/\n│       └── deploy.yml      # GitHub Actions 部署配置\n├── README.md              # 项目说明文档\n└── package.json           # 项目配置文件\n```\n\n## 🚀 快速开始\n\n### 方法一：本地运行\n\n1. **克隆项目**\n   ```bash\n   git clone <repository-url>\n   cd clash\n   ```\n\n2. **启动本地服务器**\n   ```bash\n   # 使用 Python\n   python -m http.server 8000\n   \n   # 或使用 Node.js\n   npx serve .\n   ```\n\n3. **访问应用**\n   - 打开浏览器访问 `http://localhost:8000`\n   - 在本地环境下会显示示例配置\n\n### 方法二：Cloudflare Workers 部署\n\n#### 步骤1：创建 Worker\n\n1. 访问 [Cloudflare Workers](https://workers.cloudflare.com/)\n2. 注册/登录 Cloudflare 账户\n3. 点击 \"Create a Worker\"\n4. 将 `worker.js` 中的代码完整复制到编辑器中\n5. 点击 \"Save and Deploy\"\n\n#### 步骤2：使用 Wrangler CLI 部署\n\n```bash\n# 安装 Wrangler CLI\nnpm install -g wrangler\n\n# 登录到 Cloudflare\nwrangler login\n\n# 部署 Worker\nnpm run deploy:worker\n```\n\n#### 步骤3：配置域名（可选）\n\n1. 在 Worker 设置中添加自定义域名\n2. 或使用 Cloudflare 提供的默认域名\n\n### 方法三：Cloudflare Pages 部署\n\n#### 选项A：GitHub 集成（推荐）\n\n1. **准备仓库**\n   - 将代码推送到 GitHub 仓库\n   - 确保包含所有必要文件",
  "origin_sha": "jTqXmIrMxDG3dHdJiIIXLYHuKiIo9ZlvILpt3H+GGJY=",
  "translate": "CDN tăng tốc và bảo vệ an ninh cho dự án này được tài trợ bởi Tencent EdgeOne.\n\n[![image](https://github.com/user-attachments/assets/059fed87-d415-41b0-a575-2423bf2d77e2)](https://edgeone.ai/?from=github)\n\nTác giả của dự án này là colin1114.\n\n# 🚀 Clash 订阅转换器\n\nMột công cụ trực tuyến đẹp mắt và mạnh mẽ, dùng để chuyển đổi các liên kết đăng ký proxy khác nhau sang định dạng cấu hình Clash. Hỗ trợ tự động triển khai qua Cloudflare Workers & Pages, cung cấp dịch vụ chuyển đổi đăng ký nhanh chóng, đáng tin cậy.\n\n## ✨ Tính năng\n\n- 🎨 **Giao diện hiện đại đẹp mắt** - Sử dụng nền chuyển màu và thiết kế dạng thẻ\n- 🔄 **Hỗ trợ đa giao thức** - Hỗ trợ các giao thức phổ biến như V2Ray, VLESS, Shadowsocks, Trojan, v.v.\n- ☁️ **Triển khai trên đám mây** - Thực hiện tăng tốc CDN toàn cầu qua Cloudflare Workers\n- 📱 **Thiết kế đáp ứng** - Tương thích hoàn hảo với cả máy tính để bàn và thiết bị di động\n- ⚡ **Chuyển đổi nhanh chóng** - Chuyển đổi liên kết đăng ký thành cấu hình Clash theo thời gian thực\n- 📋 **Sao chép thông minh** - Hỗ trợ sao chép cấu hình YAML đã tạo chỉ với một cú nhấp, tương thích nhiều trình duyệt\n- 📡 **Tạo liên kết đăng ký** - Tự động tạo liên kết đăng ký có thể nhập trực tiếp vào Clash\n- 🌐 **Truy cập YAML trực tuyến** - Cung cấp nhiều phương thức truy cập file YAML:\n  - 📡 Liên kết đăng ký: Hỗ trợ Clash client tự động cập nhật\n  - 🔗 Xem trực tuyến: Xem trực tiếp nội dung cấu hình trên trình duyệt\n  - 💾 Tải file: Tải file .yaml về máy\n  - ⚡ Truy cập nhanh: Liên kết tải xuống rút gọn\n- 🔧 **Hỗ trợ UTF-8** - Hỗ trợ hoàn hảo tên node và cấu hình tiếng Trung\n- 🆓 **Hoàn toàn miễn phí** - Dựa trên dịch vụ miễn phí của Cloudflare, không giới hạn sử dụng\n\n## 📁 Cấu trúc dự án\n\n```\nclash/\n├── index.html              # Trang giao diện phía trước\n├── worker.js               # Mã nguồn backend Cloudflare Worker\n├── wrangler.jsonc          # File cấu hình Wrangler\n├── _headers                # Cấu hình HTTP header cho Cloudflare Pages\n├── .github/\n│   └── workflows/\n│       └── deploy.yml      # Cấu hình triển khai GitHub Actions\n├── README.md              # Tài liệu hướng dẫn dự án\n└── package.json           # File cấu hình dự án\n```\n\n## 🚀 Bắt đầu nhanh\n\n### Cách 1: Chạy tại máy cục bộ\n\n1. **Clone dự án**\n   ```bash\n   git clone <repository-url>\n   cd clash\n   ```\n\n2. **Khởi động máy chủ cục bộ**\n   ```bash\n   # Dùng Python\n   python -m http.server 8000\n   \n   # Hoặc dùng Node.js\n   npx serve .\n   ```\n\n3. **Truy cập ứng dụng**\n   - Mở trình duyệt và truy cập `http://localhost:8000`\n   - Sẽ hiển thị cấu hình mẫu trong môi trường cục bộ\n\n### Cách 2: Triển khai trên Cloudflare Workers\n\n#### Bước 1: Tạo Worker\n\n1. Truy cập [Cloudflare Workers](https://workers.cloudflare.com/)\n2. Đăng ký/đăng nhập tài khoản Cloudflare\n3. Nhấn \"Create a Worker\"\n4. Sao chép toàn bộ mã trong `worker.js` vào trình chỉnh sửa\n5. Nhấn \"Save and Deploy\"\n\n#### Bước 2: Triển khai bằng Wrangler CLI\n\n```bash\n# Cài đặt Wrangler CLI\nnpm install -g wrangler\n\n# Đăng nhập Cloudflare\nwrangler login\n\n# Triển khai Worker\nnpm run deploy:worker\n```\n\n#### Bước 3: Cấu hình tên miền (tùy chọn)\n\n1. Thêm tên miền tùy chỉnh trong phần cài đặt Worker\n2. Hoặc sử dụng tên miền mặc định do Cloudflare cung cấp\n\n### Cách 3: Triển khai trên Cloudflare Pages\n\n#### Lựa chọn A: Tích hợp GitHub (khuyến nghị)\n\n1. **Chuẩn bị kho mã**\n   - Đẩy mã nguồn lên kho GitHub\n   - Đảm bảo bao gồm đầy đủ các tệp cần thiết",
  "status": "ok"
}