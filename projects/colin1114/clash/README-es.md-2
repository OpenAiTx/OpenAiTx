{
  "id": 2,
  "origin": "\n2. **创建 Pages 项目**\n   - 访问 [Cloudflare Pages](https://pages.cloudflare.com/)\n   - 连接你的 GitHub 仓库\n   - 选择项目仓库\n\n3. **构建设置**\n   - 构建命令：留空或 `echo \"No build required\"`\n   - 构建输出目录：`/`（根目录）\n   - 环境变量：无需设置\n\n#### 选项B：直接上传\n\n```bash\n# 使用 Wrangler Pages 部署\nnpm run deploy:pages\n```\n\n## 🛠️ 技术架构\n\n### 前端技术栈\n- **HTML5** - 现代化标记语言\n- **CSS3** - 响应式设计和动画效果\n- **Vanilla JavaScript** - 轻量级前端交互\n\n### 后端技术栈\n- **Cloudflare Workers** - 边缘计算平台\n- **Web APIs** - 标准的 Fetch API 和响应处理\n\n### 支持的协议格式\n- **VMess** - V2Ray 标准协议\n- **VLESS** - V2Ray 轻量协议（支持Reality）\n- **Shadowsocks** - 经典代理协议\n- **Trojan** - 新兴的代理协议\n\n### API 端点\n- `GET /` - 主页面\n- `POST /convert` - 订阅转换API\n- `GET /clash/{config-id}` - 获取YAML配置文件（订阅链接）\n- `GET /yaml/{config-id}` - 下载YAML配置文件\n- `OPTIONS /*` - CORS预检请求\n\n## 📖 使用指南\n\n### 基本使用\n\n1. **输入订阅链接**\n   - 将你的代理订阅链接粘贴到输入框中\n   - 支持 Base64 编码的订阅链接\n\n2. **设置配置名称**\n   - 可选择性地为配置文件设置自定义名称\n   - 默认为 \"My Clash Config\"\n\n3. **转换配置**\n   - 点击 \"转换订阅\" 按钮\n   - 等待转换完成\n\n4. **使用配置**\n   - 复制生成的 YAML 配置\n   - 导入到 Clash 客户端中使用\n\n5. **使用订阅链接（推荐）**\n   - 复制生成的订阅链接\n   - 在Clash客户端中添加订阅\n   - 配置会自动同步，无需手动更新\n\n### 高级配置\n\n生成的 Clash 配置包含以下特性：\n\n- **代理组策略**\n  - 🚀 节点选择 - 手动选择代理\n  - ♻️ 自动选择 - 延迟测试自动选择\n  - 🎯 全球直连 - 直接连接\n\n- **DNS 配置**\n  - 启用 DNS 解析\n  - 支持 fake-ip 模式\n  - 国内外 DNS 分流\n\n- **路由规则**\n  - 本地地址直连\n  - 国内 IP 直连\n  - 其他流量走代理\n\n## 🔧 部署故障排除\n\n### 常见问题\n\n#### 1. Wrangler 找不到入口点\n**错误信息**: `Missing entry-point to Worker script`\n\n**解决方案**: \n- 确保项目根目录有 `wrangler.jsonc` 文件\n- 检查 `wrangler.jsonc` 中的 `main` 字段指向 `worker.js`\n\n#### 2. GitHub Actions 部署失败\n**解决方案**:\n- 在 GitHub 仓库设置中添加以下 Secrets:",
  "origin_sha": "zr7tJc8hvOfDo46UzlFuACJMOON5tS4gQJwIF+1J9LU=",
  "translate": "2. **Crear un proyecto de Pages**\n   - Visita [Cloudflare Pages](https://pages.cloudflare.com/)\n   - Conecta tu repositorio de GitHub\n   - Selecciona el repositorio del proyecto\n\n3. **Configuración de compilación**\n   - Comando de compilación: Déjalo en blanco o `echo \"No build required\"`\n   - Directorio de salida de compilación: `/` (directorio raíz)\n   - Variables de entorno: No es necesario configurarlas\n\n#### Opción B: Subida directa\n\n```bash\n# Desplegar usando Wrangler Pages\nnpm run deploy:pages\n```\n\n## 🛠️ Arquitectura técnica\n\n### Stack tecnológico frontend\n- **HTML5** - Lenguaje de marcado moderno\n- **CSS3** - Diseño responsivo y efectos de animación\n- **Vanilla JavaScript** - Interacción frontend ligera\n\n### Stack tecnológico backend\n- **Cloudflare Workers** - Plataforma de computación en el borde\n- **Web APIs** - Fetch API estándar y manejo de respuestas\n\n### Protocolos soportados\n- **VMess** - Protocolo estándar de V2Ray\n- **VLESS** - Protocolo ligero de V2Ray (soporta Reality)\n- **Shadowsocks** - Protocolo de proxy clásico\n- **Trojan** - Protocolo de proxy emergente\n\n### Endpoints de API\n- `GET /` - Página principal\n- `POST /convert` - API de conversión de suscripciones\n- `GET /clash/{config-id}` - Obtener archivo de configuración YAML (enlace de suscripción)\n- `GET /yaml/{config-id}` - Descargar archivo de configuración YAML\n- `OPTIONS /*` - Solicitudes preflight de CORS\n\n## 📖 Guía de uso\n\n### Uso básico\n\n1. **Introduce el enlace de suscripción**\n   - Pega tu enlace de suscripción de proxy en el cuadro de entrada\n   - Soporta enlaces de suscripción codificados en Base64\n\n2. **Configura el nombre de la configuración**\n   - Opcionalmente, puedes establecer un nombre personalizado para el archivo de configuración\n   - El valor predeterminado es \"My Clash Config\"\n\n3. **Convierte la configuración**\n   - Haz clic en el botón \"Convertir suscripción\"\n   - Espera a que termine la conversión\n\n4. **Usa la configuración**\n   - Copia la configuración YAML generada\n   - Importe en el cliente Clash para su uso\n\n5. **Usa el enlace de suscripción (recomendado)**\n   - Copia el enlace de suscripción generado\n   - Añádelo como suscripción en el cliente Clash\n   - La configuración se sincronizará automáticamente, no es necesario actualizar manualmente\n\n### Configuración avanzada\n\nLa configuración de Clash generada incluye las siguientes características:\n\n- **Políticas de grupo de proxy**\n  - 🚀 Selección de nodo - Selección manual del proxy\n  - ♻️ Selección automática - Selección automática por prueba de latencia\n  - 🎯 Conexión directa global - Conexión directa\n\n- **Configuración de DNS**\n  - Resolución DNS habilitada\n  - Soporta modo fake-ip\n  - Enrutamiento DNS para China/exterior\n\n- **Reglas de enrutamiento**\n  - Direcciones locales en conexión directa\n  - IPs chinas en conexión directa\n  - El resto del tráfico pasa por el proxy\n\n## 🔧 Solución de problemas de despliegue\n\n### Preguntas frecuentes\n\n#### 1. Wrangler no encuentra el punto de entrada\n**Mensaje de error**: `Missing entry-point to Worker script`\n\n**Solución**:\n- Asegúrate de que existe el archivo `wrangler.jsonc` en el directorio raíz del proyecto\n- Verifica que el campo `main` en `wrangler.jsonc` apunte a `worker.js`\n\n#### 2. Fallo en el despliegue con GitHub Actions\n**Solución**:\n- Añade los siguientes Secrets en la configuración del repositorio de GitHub:",
  "status": "ok"
}