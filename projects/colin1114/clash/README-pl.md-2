{
  "id": 2,
  "origin": "\n2. **创建 Pages 项目**\n   - 访问 [Cloudflare Pages](https://pages.cloudflare.com/)\n   - 连接你的 GitHub 仓库\n   - 选择项目仓库\n\n3. **构建设置**\n   - 构建命令：留空或 `echo \"No build required\"`\n   - 构建输出目录：`/`（根目录）\n   - 环境变量：无需设置\n\n#### 选项B：直接上传\n\n```bash\n# 使用 Wrangler Pages 部署\nnpm run deploy:pages\n```\n\n## 🛠️ 技术架构\n\n### 前端技术栈\n- **HTML5** - 现代化标记语言\n- **CSS3** - 响应式设计和动画效果\n- **Vanilla JavaScript** - 轻量级前端交互\n\n### 后端技术栈\n- **Cloudflare Workers** - 边缘计算平台\n- **Web APIs** - 标准的 Fetch API 和响应处理\n\n### 支持的协议格式\n- **VMess** - V2Ray 标准协议\n- **VLESS** - V2Ray 轻量协议（支持Reality）\n- **Shadowsocks** - 经典代理协议\n- **Trojan** - 新兴的代理协议\n\n### API 端点\n- `GET /` - 主页面\n- `POST /convert` - 订阅转换API\n- `GET /clash/{config-id}` - 获取YAML配置文件（订阅链接）\n- `GET /yaml/{config-id}` - 下载YAML配置文件\n- `OPTIONS /*` - CORS预检请求\n\n## 📖 使用指南\n\n### 基本使用\n\n1. **输入订阅链接**\n   - 将你的代理订阅链接粘贴到输入框中\n   - 支持 Base64 编码的订阅链接\n\n2. **设置配置名称**\n   - 可选择性地为配置文件设置自定义名称\n   - 默认为 \"My Clash Config\"\n\n3. **转换配置**\n   - 点击 \"转换订阅\" 按钮\n   - 等待转换完成\n\n4. **使用配置**\n   - 复制生成的 YAML 配置\n   - 导入到 Clash 客户端中使用\n\n5. **使用订阅链接（推荐）**\n   - 复制生成的订阅链接\n   - 在Clash客户端中添加订阅\n   - 配置会自动同步，无需手动更新\n\n### 高级配置\n\n生成的 Clash 配置包含以下特性：\n\n- **代理组策略**\n  - 🚀 节点选择 - 手动选择代理\n  - ♻️ 自动选择 - 延迟测试自动选择\n  - 🎯 全球直连 - 直接连接\n\n- **DNS 配置**\n  - 启用 DNS 解析\n  - 支持 fake-ip 模式\n  - 国内外 DNS 分流\n\n- **路由规则**\n  - 本地地址直连\n  - 国内 IP 直连\n  - 其他流量走代理\n\n## 🔧 部署故障排除\n\n### 常见问题\n\n#### 1. Wrangler 找不到入口点\n**错误信息**: `Missing entry-point to Worker script`\n\n**解决方案**: \n- 确保项目根目录有 `wrangler.jsonc` 文件\n- 检查 `wrangler.jsonc` 中的 `main` 字段指向 `worker.js`\n\n#### 2. GitHub Actions 部署失败\n**解决方案**:\n- 在 GitHub 仓库设置中添加以下 Secrets:",
  "origin_sha": "zr7tJc8hvOfDo46UzlFuACJMOON5tS4gQJwIF+1J9LU=",
  "translate": "2. **Utwórz projekt Pages**\n   - Odwiedź [Cloudflare Pages](https://pages.cloudflare.com/)\n   - Połącz swoje repozytorium GitHub\n   - Wybierz repozytorium projektu\n\n3. **Ustawienia budowania**\n   - Komenda budowania: pozostaw puste lub `echo \"No build required\"`\n   - Katalog wyjściowy budowania: `/` (katalog główny)\n   - Zmienne środowiskowe: nie wymagają ustawienia\n\n#### Opcja B: Bezpośrednie przesyłanie\n\n```bash\n# Wdrażanie za pomocą Wrangler Pages\nnpm run deploy:pages\n```\n\n## 🛠️ Architektura techniczna\n\n### Stos technologiczny frontendu\n- **HTML5** - nowoczesny język znaczników\n- **CSS3** - responsywny design i efekty animacji\n- **Vanilla JavaScript** - lekka interakcja frontendowa\n\n### Stos technologiczny backendu\n- **Cloudflare Workers** - platforma obliczeń brzegowych\n- **Web APIs** - standardowe Fetch API i obsługa odpowiedzi\n\n### Obsługiwane formaty protokołów\n- **VMess** - standardowy protokół V2Ray\n- **VLESS** - lekki protokół V2Ray (obsługa Reality)\n- **Shadowsocks** - klasyczny protokół proxy\n- **Trojan** - nowoczesny protokół proxy\n\n### Punkty końcowe API\n- `GET /` - strona główna\n- `POST /convert` - API konwersji subskrypcji\n- `GET /clash/{config-id}` - pobierz plik konfiguracyjny YAML (link subskrypcji)\n- `GET /yaml/{config-id}` - pobierz plik konfiguracyjny YAML\n- `OPTIONS /*` - zapytania wstępne CORS\n\n## 📖 Instrukcja użytkowania\n\n### Podstawowe użycie\n\n1. **Wprowadź link subskrypcji**\n   - Wklej swój link subskrypcji proxy do pola wejściowego\n   - Obsługa linków subskrypcji zakodowanych Base64\n\n2. **Ustaw nazwę konfiguracji**\n   - Opcjonalnie ustaw własną nazwę pliku konfiguracyjnego\n   - Domyślnie \"My Clash Config\"\n\n3. **Konwertuj konfigurację**\n   - Kliknij przycisk \"Konwertuj subskrypcję\"\n   - Poczekaj na zakończenie konwersji\n\n4. **Użyj konfiguracji**\n   - Skopiuj wygenerowaną konfigurację YAML\n   - Zaimportuj do klienta Clash\n\n5. **Użyj linku subskrypcji (zalecane)**\n   - Skopiuj wygenerowany link subskrypcji\n   - Dodaj subskrypcję w kliencie Clash\n   - Konfiguracja będzie synchronizowana automatycznie, bez ręcznej aktualizacji\n\n### Zaawansowana konfiguracja\n\nWygenerowana konfiguracja Clash zawiera następujące funkcje:\n\n- **Polityka grup proxy**\n  - 🚀 Wybór węzła - ręczny wybór proxy\n  - ♻️ Automatyczny wybór - automatyczny wybór na podstawie testu opóźnień\n  - 🎯 Globalne połączenie bezpośrednie - połączenie bezpośrednie\n\n- **Konfiguracja DNS**\n  - Włączona obsługa rozwiązywania DNS\n  - Obsługa trybu fake-ip\n  - Rozdzielenie DNS krajowego i zagranicznego\n\n- **Zasady routingu**\n  - Bezpośrednie połączenie z adresami lokalnymi\n  - Bezpośrednie połączenie z krajowymi adresami IP\n  - Pozostały ruch przez proxy\n\n## 🔧 Rozwiązywanie problemów z wdrożeniem\n\n### Najczęstsze problemy\n\n#### 1. Wrangler nie znajduje punktu wejścia\n**Komunikat o błędzie**: `Missing entry-point to Worker script`\n\n**Rozwiązanie**: \n- Upewnij się, że w katalogu głównym projektu znajduje się plik `wrangler.jsonc`\n- Sprawdź, czy pole `main` w `wrangler.jsonc` wskazuje na `worker.js`\n\n#### 2. Niepowodzenie wdrożenia przez GitHub Actions\n**Rozwiązanie**:\n- Dodaj następujące sekrety w ustawieniach repozytorium GitHub:",
  "status": "ok"
}