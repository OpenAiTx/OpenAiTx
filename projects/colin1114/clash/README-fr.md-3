{
  "id": 3,
  "origin": "  - `CLOUDFLARE_API_TOKEN`: Cloudflare API 令牌\n  - `CLOUDFLARE_ACCOUNT_ID`: Cloudflare 账户 ID\n\n#### 3. Pages 构建失败\n**解决方案**:\n- 设置构建命令为空或 `echo \"No build required\"`\n- 确保构建输出目录设置为 `/`\n\n### 部署配置文件说明\n\n- **`wrangler.jsonc`**: Wrangler CLI 配置，用于 Worker 部署\n- **`_headers`**: Cloudflare Pages HTTP 头配置\n- **`.github/workflows/deploy.yml`**: GitHub Actions 自动部署配置\n\n## 🔧 自定义配置\n\n### 修改代理组\n\n可以编辑 `worker.js` 中的 `convertToClash` 函数来自定义代理组：\n\n```javascript\n'proxy-groups': [\n  {\n    name: '🚀 节点选择',\n    type: 'select',\n    proxies: ['♻️ 自动选择', '🎯 全球直连', ...proxyNames]\n  },\n  // 添加更多代理组...\n]\n```\n\n### 自定义路由规则\n\n修改 `rules` 数组来添加自定义路由规则：\n\n```javascript\nrules: [\n  'DOMAIN-SUFFIX,youtube.com,🚀 节点选择',\n  'DOMAIN-SUFFIX,local,DIRECT',\n  // 添加更多规则...\n]\n```\n\n## 📊 性能特性\n\n- **全球CDN** - Cloudflare 覆盖全球的边缘节点\n- **快速响应** - 平均响应时间 < 100ms\n- **高可用性** - 99.9% 服务可用性\n- **免费额度** - 每天 100,000 次请求\n\n## 🔒 安全说明\n\n- **数据隐私** - 订阅数据仅在转换过程中使用，不会被存储\n- **HTTPS 加密** - 所有通信均通过 HTTPS 加密\n- **开源透明** - 完整源代码公开，可自行审查\n\n## 🤝 贡献指南\n\n欢迎提交 Issue 和 Pull Request！\n\n1. Fork 本仓库\n2. 创建特性分支 (`git checkout -b feature/AmazingFeature`)\n3. 提交更改 (`git commit -m 'Add some AmazingFeature'`)\n4. 推送到分支 (`git push origin feature/AmazingFeature`)\n5. 开启 Pull Request\n\n## 📝 更新日志\n\n### v1.1.0\n- ✅ 新增VLESS协议支持（包括Reality安全传输）\n- ✅ 改进协议兼容性\n\n### v1.0.0\n- ✅ 基础订阅转换功能\n- ✅ 美观的用户界面\n- ✅ Cloudflare Workers 支持\n- ✅ 多协议支持（VMess、Shadowsocks、Trojan）\n- ✅ 响应式设计\n- ✅ 一键复制功能\n\n## 📞 支持与反馈\n\n如果你在使用过程中遇到问题或有建议，请：\n\n1. 查看本 README 文档\n2. 提交 [Issue](../../issues)\n3. 发起 [Discussion](../../discussions)\n\n## 📄 许可证\n\n本项目采用 MIT 许可证 - 详见 [LICENSE](LICENSE) 文件\n\n## 🙏 致谢\n\n- [Cloudflare Workers](https://workers.cloudflare.com/) - 提供边缘计算平台\n- [Clash](https://github.com/Dreamacro/clash) - 优秀的代理客户端\n- 所有贡献者和用户的支持\n\n---\n",
  "origin_sha": "OBVe/wIjCJcRAoFg0kLWPb2gTufys6R1b/Opf9Paybg=",
  "translate": "  - `CLOUDFLARE_API_TOKEN` : Jeton API Cloudflare\n  - `CLOUDFLARE_ACCOUNT_ID` : ID du compte Cloudflare\n\n#### 3. Échec de la construction des Pages\n**Solution** :\n- Définir la commande de construction comme vide ou `echo \"No build required\"`\n- S'assurer que le répertoire de sortie de la construction est `/`\n\n### Description des fichiers de configuration de déploiement\n\n- **`wrangler.jsonc`** : Configuration du CLI Wrangler, utilisée pour le déploiement Worker\n- **`_headers`** : Configuration des en-têtes HTTP de Cloudflare Pages\n- **`.github/workflows/deploy.yml`** : Configuration de déploiement automatique GitHub Actions\n\n## 🔧 Configuration personnalisée\n\n### Modifier les groupes de proxy\n\nVous pouvez éditer la fonction `convertToClash` dans `worker.js` pour personnaliser les groupes de proxy :\n\n```javascript\n'proxy-groups': [\n  {\n    name: '🚀 Sélection de nœud',\n    type: 'select',\n    proxies: ['♻️ Sélection automatique', '🎯 Connexion globale directe', ...proxyNames]\n  },\n  // Ajouter plus de groupes de proxy...\n]\n```\n\n### Règles de routage personnalisées\n\nModifiez le tableau `rules` pour ajouter des règles de routage personnalisées :\n\n```javascript\nrules: [\n  'DOMAIN-SUFFIX,youtube.com,🚀 Sélection de nœud',\n  'DOMAIN-SUFFIX,local,DIRECT',\n  // Ajouter plus de règles...\n]\n```\n\n## 📊 Caractéristiques de performance\n\n- **CDN mondial** - Nœuds Edge Cloudflare couvrant le monde entier\n- **Réponse rapide** - Temps de réponse moyen < 100 ms\n- **Haute disponibilité** - Disponibilité du service à 99,9 %\n- **Quota gratuit** - 100 000 requêtes par jour\n\n## 🔒 Informations de sécurité\n\n- **Confidentialité des données** - Les données d'abonnement sont uniquement utilisées pendant la conversion et ne sont pas stockées\n- **Chiffrement HTTPS** - Toutes les communications sont chiffrées via HTTPS\n- **Transparence open source** - Code source complet disponible pour audit\n\n## 🤝 Guide de contribution\n\nLes Issues et Pull Requests sont les bienvenus !\n\n1. Forkez ce dépôt\n2. Créez une branche de fonctionnalité (`git checkout -b feature/AmazingFeature`)\n3. Commitez vos modifications (`git commit -m 'Add some AmazingFeature'`)\n4. Poussez la branche (`git push origin feature/AmazingFeature`)\n5. Ouvrez une Pull Request\n\n## 📝 Journal des modifications\n\n### v1.1.0\n- ✅ Ajout du support du protocole VLESS (y compris transport sécurisé Reality)\n- ✅ Amélioration de la compatibilité des protocoles\n\n### v1.0.0\n- ✅ Fonction de conversion d’abonnement de base\n- ✅ Interface utilisateur esthétique\n- ✅ Support Cloudflare Workers\n- ✅ Prise en charge multi-protocoles (VMess, Shadowsocks, Trojan)\n- ✅ Design responsive\n- ✅ Fonction de copie en un clic\n\n## 📞 Support et retours\n\nSi vous rencontrez des problèmes ou avez des suggestions lors de l'utilisation :\n\n1. Consultez ce document README\n2. Soumettez une [Issue](../../issues)\n3. Lancez une [Discussion](../../discussions)\n\n## 📄 Licence\n\nCe projet est sous licence MIT - voir le fichier [LICENSE](LICENSE) pour plus de détails\n\n## 🙏 Remerciements\n\n- [Cloudflare Workers](https://workers.cloudflare.com/) - Plateforme de calcul en périphérie\n- [Clash](https://github.com/Dreamacro/clash) - Excellent client proxy\n- Merci à tous les contributeurs et utilisateurs pour leur soutien\n\n---",
  "status": "ok"
}