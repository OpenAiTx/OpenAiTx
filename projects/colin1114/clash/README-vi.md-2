{
  "id": 2,
  "origin": "\n2. **创建 Pages 项目**\n   - 访问 [Cloudflare Pages](https://pages.cloudflare.com/)\n   - 连接你的 GitHub 仓库\n   - 选择项目仓库\n\n3. **构建设置**\n   - 构建命令：留空或 `echo \"No build required\"`\n   - 构建输出目录：`/`（根目录）\n   - 环境变量：无需设置\n\n#### 选项B：直接上传\n\n```bash\n# 使用 Wrangler Pages 部署\nnpm run deploy:pages\n```\n\n## 🛠️ 技术架构\n\n### 前端技术栈\n- **HTML5** - 现代化标记语言\n- **CSS3** - 响应式设计和动画效果\n- **Vanilla JavaScript** - 轻量级前端交互\n\n### 后端技术栈\n- **Cloudflare Workers** - 边缘计算平台\n- **Web APIs** - 标准的 Fetch API 和响应处理\n\n### 支持的协议格式\n- **VMess** - V2Ray 标准协议\n- **VLESS** - V2Ray 轻量协议（支持Reality）\n- **Shadowsocks** - 经典代理协议\n- **Trojan** - 新兴的代理协议\n\n### API 端点\n- `GET /` - 主页面\n- `POST /convert` - 订阅转换API\n- `GET /clash/{config-id}` - 获取YAML配置文件（订阅链接）\n- `GET /yaml/{config-id}` - 下载YAML配置文件\n- `OPTIONS /*` - CORS预检请求\n\n## 📖 使用指南\n\n### 基本使用\n\n1. **输入订阅链接**\n   - 将你的代理订阅链接粘贴到输入框中\n   - 支持 Base64 编码的订阅链接\n\n2. **设置配置名称**\n   - 可选择性地为配置文件设置自定义名称\n   - 默认为 \"My Clash Config\"\n\n3. **转换配置**\n   - 点击 \"转换订阅\" 按钮\n   - 等待转换完成\n\n4. **使用配置**\n   - 复制生成的 YAML 配置\n   - 导入到 Clash 客户端中使用\n\n5. **使用订阅链接（推荐）**\n   - 复制生成的订阅链接\n   - 在Clash客户端中添加订阅\n   - 配置会自动同步，无需手动更新\n\n### 高级配置\n\n生成的 Clash 配置包含以下特性：\n\n- **代理组策略**\n  - 🚀 节点选择 - 手动选择代理\n  - ♻️ 自动选择 - 延迟测试自动选择\n  - 🎯 全球直连 - 直接连接\n\n- **DNS 配置**\n  - 启用 DNS 解析\n  - 支持 fake-ip 模式\n  - 国内外 DNS 分流\n\n- **路由规则**\n  - 本地地址直连\n  - 国内 IP 直连\n  - 其他流量走代理\n\n## 🔧 部署故障排除\n\n### 常见问题\n\n#### 1. Wrangler 找不到入口点\n**错误信息**: `Missing entry-point to Worker script`\n\n**解决方案**: \n- 确保项目根目录有 `wrangler.jsonc` 文件\n- 检查 `wrangler.jsonc` 中的 `main` 字段指向 `worker.js`\n\n#### 2. GitHub Actions 部署失败\n**解决方案**:\n- 在 GitHub 仓库设置中添加以下 Secrets:",
  "origin_sha": "zr7tJc8hvOfDo46UzlFuACJMOON5tS4gQJwIF+1J9LU=",
  "translate": "2. **Tạo dự án Pages**\n   - Truy cập [Cloudflare Pages](https://pages.cloudflare.com/)\n   - Kết nối kho lưu trữ GitHub của bạn\n   - Chọn kho lưu trữ dự án\n\n3. **Cài đặt xây dựng**\n   - Lệnh xây dựng: Để trống hoặc `echo \"No build required\"`\n   - Thư mục đầu ra xây dựng: `/` (thư mục gốc)\n   - Biến môi trường: Không cần thiết lập\n\n#### Lựa chọn B: Tải lên trực tiếp\n\n```bash\n# Triển khai bằng Wrangler Pages\nnpm run deploy:pages\n```\n\n## 🛠️ Kiến trúc kỹ thuật\n\n### Ngăn xếp công nghệ Frontend\n- **HTML5** - Ngôn ngữ đánh dấu hiện đại\n- **CSS3** - Thiết kế đáp ứng và hiệu ứng động\n- **Vanilla JavaScript** - Tương tác frontend nhẹ\n\n### Ngăn xếp công nghệ Backend\n- **Cloudflare Workers** - Nền tảng điện toán biên\n- **Web APIs** - Chuẩn Fetch API và xử lý phản hồi\n\n### Định dạng giao thức hỗ trợ\n- **VMess** - Giao thức tiêu chuẩn V2Ray\n- **VLESS** - Giao thức nhẹ V2Ray (hỗ trợ Reality)\n- **Shadowsocks** - Giao thức proxy kinh điển\n- **Trojan** - Giao thức proxy mới nổi\n\n### Các endpoint API\n- `GET /` - Trang chính\n- `POST /convert` - API chuyển đổi đăng ký\n- `GET /clash/{config-id}` - Lấy file cấu hình YAML (liên kết đăng ký)\n- `GET /yaml/{config-id}` - Tải về file cấu hình YAML\n- `OPTIONS /*` - Yêu cầu kiểm tra trước CORS\n\n## 📖 Hướng dẫn sử dụng\n\n### Sử dụng cơ bản\n\n1. **Nhập liên kết đăng ký**\n   - Dán liên kết đăng ký proxy của bạn vào ô nhập\n   - Hỗ trợ liên kết đăng ký mã hóa Base64\n\n2. **Đặt tên cấu hình**\n   - Tùy chọn đặt tên tùy chỉnh cho file cấu hình\n   - Mặc định là \"My Clash Config\"\n\n3. **Chuyển đổi cấu hình**\n   - Nhấn nút \"Chuyển đổi đăng ký\"\n   - Chờ quá trình chuyển đổi hoàn tất\n\n4. **Sử dụng cấu hình**\n   - Sao chép file cấu hình YAML đã tạo\n   - Nhập vào ứng dụng Clash để sử dụng\n\n5. **Sử dụng liên kết đăng ký (khuyến nghị)**\n   - Sao chép liên kết đăng ký đã tạo\n   - Thêm vào ứng dụng Clash dưới dạng đăng ký\n   - Cấu hình sẽ tự động đồng bộ, không cần cập nhật thủ công\n\n### Cấu hình nâng cao\n\nFile cấu hình Clash được tạo ra có các đặc điểm sau:\n\n- **Chính sách nhóm proxy**\n  - 🚀 Chọn nút - Chọn proxy thủ công\n  - ♻️ Tự động chọn - Kiểm tra độ trễ tự động chọn\n  - 🎯 Kết nối trực tiếp toàn cầu - Kết nối trực tiếp\n\n- **Cấu hình DNS**\n  - Bật phân giải DNS\n  - Hỗ trợ chế độ fake-ip\n  - Phân luồng DNS trong nước và quốc tế\n\n- **Quy tắc định tuyến**\n  - Địa chỉ nội bộ kết nối trực tiếp\n  - IP trong nước kết nối trực tiếp\n  - Các lưu lượng khác đi qua proxy\n\n## 🔧 Khắc phục sự cố triển khai\n\n### Các vấn đề phổ biến\n\n#### 1. Wrangler không tìm thấy điểm bắt đầu\n**Thông báo lỗi**: `Missing entry-point to Worker script`\n\n**Giải pháp**: \n- Đảm bảo thư mục gốc dự án có file `wrangler.jsonc`\n- Kiểm tra trường `main` trong `wrangler.jsonc` trỏ đến `worker.js`\n\n#### 2. Triển khai GitHub Actions thất bại\n**Giải pháp**:\n- Thêm các Secrets sau trong phần thiết lập kho lưu trữ GitHub:",
  "status": "ok"
}