{
  "id": 9,
  "origin": "\n**A**: Observables may be a good idea for some things, but they don't solve the problems that Signals aim to solve. As described above, observables or other publish/subscribe mechanisms are not a complete solution to many types of UI programming, due to too much error-prone configuration work for developers, and wasted work due to lack of laziness, among other issues.\n\n**Q**: Why are Signals being proposed in TC39 rather than DOM, given that most applications of it are web-based?\n\n**A**: Some coauthors of this proposal are interested in non-web UI environments as a goal, but these days, either venue may be suitable for that, as web APIs are being more frequently implemented outside the web. Ultimately, Signals don't need to depend on any DOM APIs, so either way works. If someone has a strong reason for this group to switch, please let us know in an issue. For now, all contributors have signed the TC39 intellectual property agreements, and the plan is to present this to TC39.\n\n**Q**: How long is it going to take until I can use standard Signals?\n\n**A**: A polyfill is already available, but it's best to not rely on its stability, as this API evolves during its review process. In some months or a year, a high-quality, high-performance stable polyfill should be usable, but this will still be subject to committee revisions and not yet standard. Following the typical trajectory of a TC39 proposal, it is expected to take at least 2-3 years at an absolute minimum for Signals to be natively available across all browsers going back a few versions, such that polyfills are not needed.\n\n**Q**: How will we prevent standardizing the wrong kind of Signals too soon, just like {{JS/web feature that you don't like}}?\n\n**A**: The authors of this proposal plan to go the extra mile with prototyping and proving things out prior to requesting stage advancement at TC39. See \"Status and development plan\" above. If you see gaps in this plan or opportunities for improvement, please file an issue explaining.\n",
  "translate": "**A**: オブザーバブルは一部の用途には良いアイデアかもしれませんが、Signals が解決しようとしている問題を解決できるわけではありません。上記の通り、オブザーバブルや他のパブリッシュ/サブスクライブ機構は、多くの種類のUIプログラミングに対して完全な解決策とはなりません。これは、開発者による設定作業がエラーを誘発しやすくなったり、遅延評価がないことによる無駄な処理が発生したりするなどの問題があるためです。\n\n**Q**: Signals のほとんどの用途がウェブベースであるにもかかわらず、なぜ TC39 で提案されているのでしょうか？DOM で提案されない理由は？\n\n**A**: この提案の共著者の中には、非ウェブUI環境を目標として興味を持っている者もいますが、近年ではどちらの場でも適しているといえます。なぜなら、ウェブAPIがウェブ以外でも頻繁に実装されるようになってきているからです。最終的に、SignalsはDOM APIに依存する必要はありませんので、どちらでも機能します。このグループが切り替えるべき強い理由があれば、issueでお知らせください。現時点では、すべてのコントリビューターがTC39の知的財産契約に署名しており、TC39に提出する計画です。\n\n**Q**: 標準の Signals を使えるようになるまで、どれくらいかかりますか？\n\n**A**: ポリフィルはすでに利用可能ですが、このAPIはレビューの過程で進化するため、その安定性に依存しない方が良いでしょう。数ヶ月から1年もすれば、高品質・高性能で安定したポリフィルが使えるようになるはずですが、これも委員会の改訂があり標準にはなりません。TC39の提案がたどる典型的な流れでは、Signalsがすべてのブラウザでネイティブに利用でき、ポリフィルが不要になるまでには、最低でも2～3年はかかると見込まれます。\n\n**Q**: {{JS/あなたが好ましく思わないウェブ機能}}のように、間違った種類のSignalsが早まって標準化されてしまうのをどう防ぐのですか？\n\n**A**: この提案の著者たちは、TC39でのステージ昇格を申請する前に、プロトタイピングや実証に特に注力する計画です。詳細は上記の「Status and development plan」をご覧ください。もしこの計画に抜け漏れや改善点を見つけた場合は、ぜひissueで説明してください。",
  "status": "ok"
}