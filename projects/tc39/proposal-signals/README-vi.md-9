{
  "id": 9,
  "origin": "\n**A**: Observables may be a good idea for some things, but they don't solve the problems that Signals aim to solve. As described above, observables or other publish/subscribe mechanisms are not a complete solution to many types of UI programming, due to too much error-prone configuration work for developers, and wasted work due to lack of laziness, among other issues.\n\n**Q**: Why are Signals being proposed in TC39 rather than DOM, given that most applications of it are web-based?\n\n**A**: Some coauthors of this proposal are interested in non-web UI environments as a goal, but these days, either venue may be suitable for that, as web APIs are being more frequently implemented outside the web. Ultimately, Signals don't need to depend on any DOM APIs, so either way works. If someone has a strong reason for this group to switch, please let us know in an issue. For now, all contributors have signed the TC39 intellectual property agreements, and the plan is to present this to TC39.\n\n**Q**: How long is it going to take until I can use standard Signals?\n\n**A**: A polyfill is already available, but it's best to not rely on its stability, as this API evolves during its review process. In some months or a year, a high-quality, high-performance stable polyfill should be usable, but this will still be subject to committee revisions and not yet standard. Following the typical trajectory of a TC39 proposal, it is expected to take at least 2-3 years at an absolute minimum for Signals to be natively available across all browsers going back a few versions, such that polyfills are not needed.\n\n**Q**: How will we prevent standardizing the wrong kind of Signals too soon, just like {{JS/web feature that you don't like}}?\n\n**A**: The authors of this proposal plan to go the extra mile with prototyping and proving things out prior to requesting stage advancement at TC39. See \"Status and development plan\" above. If you see gaps in this plan or opportunities for improvement, please file an issue explaining.\n",
  "translate": "**A**: Observables có thể là một ý tưởng tốt cho một số trường hợp, nhưng chúng không giải quyết được những vấn đề mà Signals hướng đến. Như đã mô tả ở trên, observables hoặc các cơ chế publish/subscribe khác không phải là giải pháp hoàn chỉnh cho nhiều loại lập trình giao diện người dùng, do có quá nhiều cấu hình dễ gây lỗi cho lập trình viên và lãng phí tài nguyên do thiếu tính lười biếng, cùng các vấn đề khác.\n\n**Q**: Tại sao Signals lại được đề xuất ở TC39 thay vì DOM, khi mà hầu hết các ứng dụng của nó đều dựa trên web?\n\n**A**: Một số đồng tác giả của đề xuất này quan tâm đến các môi trường giao diện người dùng ngoài web như một mục tiêu, nhưng ngày nay, bất kỳ nơi nào đều có thể phù hợp, vì các API web ngày càng được triển khai bên ngoài web. Cuối cùng, Signals không cần phụ thuộc vào bất kỳ API DOM nào, vì vậy cách nào cũng được. Nếu ai đó có lý do đủ mạnh để nhóm này chuyển hướng, xin hãy cho chúng tôi biết bằng cách mở một issue. Hiện tại, tất cả các cộng tác viên đều đã ký các thỏa thuận về sở hữu trí tuệ của TC39, và kế hoạch là trình bày điều này với TC39.\n\n**Q**: Sẽ mất bao lâu để tôi có thể sử dụng Signals tiêu chuẩn?\n\n**A**: Một polyfill đã có sẵn, nhưng tốt nhất là không nên dựa vào tính ổn định của nó, vì API này vẫn đang được phát triển trong quá trình rà soát. Trong vài tháng hoặc một năm tới, một polyfill ổn định, chất lượng cao, hiệu năng tốt nên có thể sử dụng, nhưng nó vẫn sẽ chịu sự sửa đổi của hội đồng và chưa phải là tiêu chuẩn. Theo lộ trình điển hình của một đề xuất TC39, dự kiến ​​sẽ mất ít nhất 2-3 năm ở mức tối thiểu để Signals có mặt nguyên bản trên tất cả các trình duyệt (kể cả các phiên bản cũ), để không còn cần polyfill nữa.\n\n**Q**: Làm thế nào để chúng ta ngăn không cho việc tiêu chuẩn hóa nhầm loại Signals quá sớm, giống như {{JS/web feature mà bạn không thích}}?\n\n**A**: Các tác giả của đề xuất này dự định sẽ làm thêm các nguyên mẫu và chứng minh thực tiễn trước khi đề nghị nâng cấp giai đoạn tại TC39. Xem phần \"Status and development plan\" ở trên. Nếu bạn thấy có lỗ hổng trong kế hoạch này hoặc có cơ hội cải thiện, hãy gửi một issue giải thích.",
  "status": "ok"
}