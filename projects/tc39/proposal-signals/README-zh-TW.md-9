{
  "id": 9,
  "origin": "\n**A**: Observables may be a good idea for some things, but they don't solve the problems that Signals aim to solve. As described above, observables or other publish/subscribe mechanisms are not a complete solution to many types of UI programming, due to too much error-prone configuration work for developers, and wasted work due to lack of laziness, among other issues.\n\n**Q**: Why are Signals being proposed in TC39 rather than DOM, given that most applications of it are web-based?\n\n**A**: Some coauthors of this proposal are interested in non-web UI environments as a goal, but these days, either venue may be suitable for that, as web APIs are being more frequently implemented outside the web. Ultimately, Signals don't need to depend on any DOM APIs, so either way works. If someone has a strong reason for this group to switch, please let us know in an issue. For now, all contributors have signed the TC39 intellectual property agreements, and the plan is to present this to TC39.\n\n**Q**: How long is it going to take until I can use standard Signals?\n\n**A**: A polyfill is already available, but it's best to not rely on its stability, as this API evolves during its review process. In some months or a year, a high-quality, high-performance stable polyfill should be usable, but this will still be subject to committee revisions and not yet standard. Following the typical trajectory of a TC39 proposal, it is expected to take at least 2-3 years at an absolute minimum for Signals to be natively available across all browsers going back a few versions, such that polyfills are not needed.\n\n**Q**: How will we prevent standardizing the wrong kind of Signals too soon, just like {{JS/web feature that you don't like}}?\n\n**A**: The authors of this proposal plan to go the extra mile with prototyping and proving things out prior to requesting stage advancement at TC39. See \"Status and development plan\" above. If you see gaps in this plan or opportunities for improvement, please file an issue explaining.\n",
  "translate": "**A**：Observables 對某些事情來說可能是個好主意，但它們無法解決 Signals 旨在解決的問題。如上所述，observables 或其他發布/訂閱機制並不是許多型態 UI 程式設計的完整解決方案，因為對開發者來說需要進行大量容易出錯的設定，且由於缺乏惰性會導致工作浪費，以及其他問題。\n\n**Q**：既然 Signals 的大多數應用都是基於網頁，為什麼要在 TC39 而不是 DOM 提出 Signals？\n\n**A**：本提案的一些共同作者有興趣將其作為非網頁 UI 環境的目標，但現在，無論在哪個場合都可能適用，因為網頁 API 越來越常在網頁以外的地方實作。最終，Signals 不需要依賴任何 DOM API，因此兩種方式都可以。如果有人有充分理由讓這個小組轉換場合，請在 issue 中告訴我們。目前，所有貢獻者都已簽署 TC39 的智慧財產權協議，計畫是向 TC39 提案。\n\n**Q**：要多久我才能使用標準的 Signals？\n\n**A**：polyfill 已經可以使用，但最好不要依賴其穩定性，因為該 API 在審查過程中會不斷演化。幾個月或一年後，應該會有高品質、高效能且穩定的 polyfill 可用，但這仍會受到委員會的修訂，尚未成為標準。根據 TC39 提案的典型進程，預計至少需要 2-3 年，Signals 才能在所有主流瀏覽器上原生可用（含回溯幾個版本），屆時就不再需要 polyfill。\n\n**Q**：我們將如何防止太早標準化錯誤類型的 Signals，就像 {{你不喜歡的 JS/網頁功能}} 那樣？\n\n**A**：本提案作者計畫在向 TC39 申請階段提升前，進行額外的原型實作與驗證。請參見上方「狀態與開發計畫」。如果你發現這個計畫有漏洞或改進空間，請提交 issue 說明。",
  "status": "ok"
}