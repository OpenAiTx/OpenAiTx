{
  "id": 9,
  "origin": "\n**A**: Observables may be a good idea for some things, but they don't solve the problems that Signals aim to solve. As described above, observables or other publish/subscribe mechanisms are not a complete solution to many types of UI programming, due to too much error-prone configuration work for developers, and wasted work due to lack of laziness, among other issues.\n\n**Q**: Why are Signals being proposed in TC39 rather than DOM, given that most applications of it are web-based?\n\n**A**: Some coauthors of this proposal are interested in non-web UI environments as a goal, but these days, either venue may be suitable for that, as web APIs are being more frequently implemented outside the web. Ultimately, Signals don't need to depend on any DOM APIs, so either way works. If someone has a strong reason for this group to switch, please let us know in an issue. For now, all contributors have signed the TC39 intellectual property agreements, and the plan is to present this to TC39.\n\n**Q**: How long is it going to take until I can use standard Signals?\n\n**A**: A polyfill is already available, but it's best to not rely on its stability, as this API evolves during its review process. In some months or a year, a high-quality, high-performance stable polyfill should be usable, but this will still be subject to committee revisions and not yet standard. Following the typical trajectory of a TC39 proposal, it is expected to take at least 2-3 years at an absolute minimum for Signals to be natively available across all browsers going back a few versions, such that polyfills are not needed.\n\n**Q**: How will we prevent standardizing the wrong kind of Signals too soon, just like {{JS/web feature that you don't like}}?\n\n**A**: The authors of this proposal plan to go the extra mile with prototyping and proving things out prior to requesting stage advancement at TC39. See \"Status and development plan\" above. If you see gaps in this plan or opportunities for improvement, please file an issue explaining.\n",
  "translate": "**A**：可观察对象（Observables）在某些场景下可能是个好主意，但它们并不能解决信号（Signals）所要解决的问题。如上所述，可观察对象或其他发布/订阅机制并不能完全解决许多类型的 UI 编程问题，因为它们对开发者来说需要过多容易出错的配置工作，并且由于缺乏惰性，会造成大量无谓的工作，还有其他问题。\n\n**Q**：既然大多数应用场景都基于 Web，为什么要在 TC39 而不是 DOM 中提出信号（Signals）的提案？\n\n**A**：本提案的一些合著者也对非 Web 的 UI 环境感兴趣，不过目前无论哪个途径都适合，因为 Web API 现在越来越多地在 Web 之外实现。最终，信号（Signals）并不需要依赖任何 DOM API，因此两种方式都可行。如果有人有充分理由让本小组转向其他途径，请在 issue 中告知。目前，所有贡献者都已签署 TC39 的知识产权协议，计划是在 TC39 进行提交。\n\n**Q**：要多久才能用上标准的信号（Signals）？\n\n**A**：目前已经有 Polyfill 可用，但最好不要依赖其稳定性，因为该 API 在评审过程中还会不断演变。几个月或一年后，应该能使用高质量、高性能、稳定的 Polyfill，但这仍将受委员会修订影响，尚未成为标准。按照 TC39 提案的典型进程，预计至少还需要 2-3 年，所有主流浏览器原生支持信号（Signals）才会成为现实，到那时才不再需要 Polyfill。\n\n**Q**：我们如何防止像 {{你不喜欢的 JS/web 特性}} 那样过早标准化了错误的信号（Signals）？\n\n**A**：本提案的作者计划在请求 TC39 阶段推进之前，额外投入精力进行原型开发和验证。请参见上文的“状态与开发计划”。如果你发现该计划存在漏洞或改进空间，请提交 issue 详细说明。",
  "status": "ok"
}