{
  "id": 9,
  "origin": "\n**A**: Observables may be a good idea for some things, but they don't solve the problems that Signals aim to solve. As described above, observables or other publish/subscribe mechanisms are not a complete solution to many types of UI programming, due to too much error-prone configuration work for developers, and wasted work due to lack of laziness, among other issues.\n\n**Q**: Why are Signals being proposed in TC39 rather than DOM, given that most applications of it are web-based?\n\n**A**: Some coauthors of this proposal are interested in non-web UI environments as a goal, but these days, either venue may be suitable for that, as web APIs are being more frequently implemented outside the web. Ultimately, Signals don't need to depend on any DOM APIs, so either way works. If someone has a strong reason for this group to switch, please let us know in an issue. For now, all contributors have signed the TC39 intellectual property agreements, and the plan is to present this to TC39.\n\n**Q**: How long is it going to take until I can use standard Signals?\n\n**A**: A polyfill is already available, but it's best to not rely on its stability, as this API evolves during its review process. In some months or a year, a high-quality, high-performance stable polyfill should be usable, but this will still be subject to committee revisions and not yet standard. Following the typical trajectory of a TC39 proposal, it is expected to take at least 2-3 years at an absolute minimum for Signals to be natively available across all browsers going back a few versions, such that polyfills are not needed.\n\n**Q**: How will we prevent standardizing the wrong kind of Signals too soon, just like {{JS/web feature that you don't like}}?\n\n**A**: The authors of this proposal plan to go the extra mile with prototyping and proving things out prior to requesting stage advancement at TC39. See \"Status and development plan\" above. If you see gaps in this plan or opportunities for improvement, please file an issue explaining.\n",
  "translate": "**A**: Observable อาจเป็นแนวคิดที่ดีสำหรับบางสิ่ง แต่พวกมันไม่ได้แก้ปัญหาที่ Signals ตั้งใจจะแก้ไข ดังที่อธิบายไว้ข้างต้น Observable หรือกลไก publish/subscribe อื่น ๆ ไม่ใช่ทางออกที่สมบูรณ์สำหรับการเขียนโปรแกรม UI หลายประเภท เนื่องจากต้องมีการตั้งค่าที่เสี่ยงต่อความผิดพลาดมากสำหรับนักพัฒนา และเกิดการทำงานที่สูญเปล่าเนื่องจากขาดความขี้เกียจ (laziness) ในกระบวนการทำงาน เป็นต้น\n\n**Q**: ทำไม Signals ถึงถูกเสนอใน TC39 แทนที่จะเป็น DOM ทั้งที่การใช้งานส่วนใหญ่เป็นแบบเว็บ?\n\n**A**: ผู้ร่วมเขียนข้อเสนอนี้บางคนมีความสนใจในสภาพแวดล้อม UI ที่ไม่ใช่เว็บเป็นเป้าหมายด้วย แต่ทุกวันนี้ไม่ว่าช่องทางไหนก็เหมาะสมได้ เพราะ web API มักถูกนำไปใช้ในสภาพแวดล้อมนอกเว็บบ่อยขึ้น สุดท้ายแล้ว Signals ไม่จำเป็นต้องขึ้นกับ DOM API ใด ๆ ดังนั้นไม่ว่าจะทางใดก็ใช้ได้ หากใครมีเหตุผลที่หนักแน่นว่ากลุ่มนี้ควรเปลี่ยนไปอีกทางหนึ่ง โปรดแจ้งให้เราทราบใน issue สำหรับตอนนี้ ผู้ร่วมเขียนทุกคนได้ลงนามในข้อตกลงทรัพย์สินทางปัญญาของ TC39 แล้ว และแผนคือจะนำเสนอนี้ต่อ TC39\n\n**Q**: จะใช้เวลานานแค่ไหนจนกว่าฉันจะสามารถใช้ Signals มาตรฐานได้?\n\n**A**: ขณะนี้มี polyfill ให้ใช้งานอยู่แล้ว แต่ไม่ควรพึ่งพาความเสถียรของมัน เนื่องจาก API นี้ยังคงพัฒนาและปรับเปลี่ยนระหว่างขั้นตอนการรีวิว อีกไม่กี่เดือนหรือหนึ่งปีข้างหน้า อาจมี polyfill ที่มีคุณภาพสูง เสถียร และประสิทธิภาพดีให้ใช้งานได้ แต่ก็ยังขึ้นอยู่กับการปรับแก้ของคณะกรรมการและยังไม่ถือเป็นมาตรฐาน ตามแนวทางปกติของข้อเสนอ TC39 คาดว่าจะใช้เวลาอย่างน้อย 2-3 ปีเป็นขั้นต่ำที่สุด กว่า Signals จะถูกนำไปใช้งานโดยเนทีฟในเบราว์เซอร์ทุกตัว (ย้อนหลังได้อีกไม่กี่เวอร์ชัน) โดยไม่ต้องพึ่ง polyfill\n\n**Q**: เราจะป้องกันไม่ให้เกิดมาตรฐาน Signals ที่ผิดประเภทเร็วเกินไป เหมือนกับ {{JS/web feature ที่คุณไม่ชอบ}} ได้อย่างไร?\n\n**A**: ผู้เขียนข้อเสนอนี้มีแผนจะทำงานต้นแบบและพิสูจน์แนวคิดอย่างละเอียดก่อนขอเลื่อนขั้นใน TC39 ดูหัวข้อ \"สถานะและแผนการพัฒนา\" ข้างต้น หากคุณเห็นช่องว่างในแผนนี้หรือโอกาสในการปรับปรุง โปรดแจ้งปัญหา (issue) พร้อมอธิบายด้วย",
  "status": "ok"
}