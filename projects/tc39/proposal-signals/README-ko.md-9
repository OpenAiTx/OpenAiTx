{
  "id": 9,
  "origin": "\n**A**: Observables may be a good idea for some things, but they don't solve the problems that Signals aim to solve. As described above, observables or other publish/subscribe mechanisms are not a complete solution to many types of UI programming, due to too much error-prone configuration work for developers, and wasted work due to lack of laziness, among other issues.\n\n**Q**: Why are Signals being proposed in TC39 rather than DOM, given that most applications of it are web-based?\n\n**A**: Some coauthors of this proposal are interested in non-web UI environments as a goal, but these days, either venue may be suitable for that, as web APIs are being more frequently implemented outside the web. Ultimately, Signals don't need to depend on any DOM APIs, so either way works. If someone has a strong reason for this group to switch, please let us know in an issue. For now, all contributors have signed the TC39 intellectual property agreements, and the plan is to present this to TC39.\n\n**Q**: How long is it going to take until I can use standard Signals?\n\n**A**: A polyfill is already available, but it's best to not rely on its stability, as this API evolves during its review process. In some months or a year, a high-quality, high-performance stable polyfill should be usable, but this will still be subject to committee revisions and not yet standard. Following the typical trajectory of a TC39 proposal, it is expected to take at least 2-3 years at an absolute minimum for Signals to be natively available across all browsers going back a few versions, such that polyfills are not needed.\n\n**Q**: How will we prevent standardizing the wrong kind of Signals too soon, just like {{JS/web feature that you don't like}}?\n\n**A**: The authors of this proposal plan to go the extra mile with prototyping and proving things out prior to requesting stage advancement at TC39. See \"Status and development plan\" above. If you see gaps in this plan or opportunities for improvement, please file an issue explaining.\n",
  "translate": "**A**: 옵저버블은 어떤 것들에 대해 좋은 아이디어일 수 있지만, 시그널이 해결하려는 문제를 해결하지는 못합니다. 위에서 설명한 바와 같이, 옵저버블이나 다른 publish/subscribe 메커니즘은 많은 유형의 UI 프로그래밍에 대해 완전한 솔루션이 아닙니다. 그 이유는 개발자에게 너무 많은 오류가 발생하기 쉬운 구성 작업을 요구하고, 게으름(laziness)이 부족해 낭비되는 작업이 발생하는 등 여러 문제가 있기 때문입니다.\n\n**Q**: 대부분의 적용 사례가 웹 기반임에도 불구하고, 왜 시그널은 DOM이 아니라 TC39에서 제안되고 있나요?\n\n**A**: 이 제안의 일부 공동 저자는 목표로 웹이 아닌 UI 환경에도 관심이 있습니다. 하지만 요즘에는 웹 API가 웹 외부에서도 더 자주 구현되고 있기 때문에, 어느 쪽이든 적합할 수 있습니다. 궁극적으로 시그널은 어떤 DOM API에도 의존할 필요가 없으므로, 어느 쪽이든 동작합니다. 만약 이 그룹이 전환해야 할 강력한 이유가 있다면, 이슈로 알려주시기 바랍니다. 현재로서는 모든 기여자가 TC39 지적 재산권 계약서에 서명했으며, 이 제안을 TC39에 제출할 계획입니다.\n\n**Q**: 표준 시그널을 실제로 사용할 수 있으려면 얼마나 걸릴까요?\n\n**A**: 폴리필은 이미 제공되고 있지만, 이 API가 검토 과정에서 계속 발전하고 있기 때문에 안정성에 의존하는 것은 최선이 아닙니다. 몇 개월 또는 1년 정도 후에는 고품질, 고성능의 안정적인 폴리필을 사용할 수 있을 것으로 예상되지만, 이 역시 위원회 수정 사항이 적용될 수 있고 아직 표준은 아닙니다. TC39 제안의 일반적인 진행 경로를 따를 경우, 폴리필이 필요하지 않을 정도로 모든 브라우저(몇 버전 전까지 포함)에 네이티브로 시그널이 제공되기까지는 최소 2~3년 이상이 걸릴 것으로 예상됩니다.\n\n**Q**: {{JS/마음에 들지 않는 웹 기능}}처럼 잘못된 종류의 시그널이 너무 빨리 표준화되는 것을 어떻게 막을 수 있나요?\n\n**A**: 이 제안의 작성자들은 TC39에서 단계 진입을 요청하기 전에 프로토타이핑과 검증에 더욱 노력을 기울일 계획입니다. 위의 \"상태 및 개발 계획\"을 참고하세요. 이 계획에 빈틈이 있거나 개선 기회가 보인다면, 설명을 포함해 이슈로 남겨주세요.",
  "status": "ok"
}