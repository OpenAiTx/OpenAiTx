{
  "id": 1,
  "origin": "![Gitcontainer](https://raw.githubusercontent.com/cyclotruc/gitcontainer/main/docs/image.png)\n\n# Gitcontainer 🐳\n\n**Turn any GitHub repository into a production-ready Docker container with AI-powered Dockerfile generation.**\n\n[![MIT License](https://img.shields.io/badge/License-MIT-green.svg)](https://choosealicense.com/licenses/mit/)\n[![Python 3.9+](https://img.shields.io/badge/python-3.9+-blue.svg)](https://www.python.org/downloads/)\n[![FastAPI](https://img.shields.io/badge/FastAPI-0.68+-00a393.svg)](https://fastapi.tiangolo.com/)\n\nGitcontainer is an AI-powered web application that automatically generates production-ready Dockerfiles by analyzing GitHub repositories. Simply paste a GitHub URL and get a tailored Dockerfile with intelligent base image selection, dependency management, and Docker best practices.\n\n## 🌟 Quick Access\n\nSimply replace `github.com` with `gitcontainer.com` in any GitHub repository URL to instantly access the Dockerfile generation page for that repository.\n\nFor example:\n```\nhttps://github.com/username/repo  →  https://gitcontainer.com/username/repo\n```\n\n## ✨ Features\n\n- **🔄 Instant URL Access**: Just replace 'github.com' with 'gitcontainer.com' in any GitHub URL\n- **🤖 AI-Powered Analysis**: Uses OpenAI GPT-4 to analyze repository structure and generate intelligent Dockerfiles\n- **⚡ Real-time Streaming**: Watch the AI generate your Dockerfile in real-time with WebSocket streaming\n- **🎯 Smart Detection**: Automatically detects technology stacks (Python, Node.js, Java, Go, etc.)\n- **🔧 Production-Ready**: Generates Dockerfiles following best practices with proper security, multi-stage builds, and optimization\n- **📋 Additional Instructions**: Add custom requirements for specialized environments\n- **📄 Docker Compose**: Automatically suggests docker-compose.yml for complex applications\n- **🎨 Modern UI**: Clean, responsive interface with Monaco editor for syntax highlighting\n- **📱 Mobile Friendly**: Works seamlessly on desktop and mobile devices\n\n## 🚀 Quick Start\n\n### Prerequisites\n\n- Python 3.9 or higher\n- Git\n- OpenAI API key\n\n### Installation\n\n1. **Clone the repository:**\n   ```bash\n   git clone https://github.com/cyclotruc/gitcontainer.git\n   cd gitcontainer\n   ```\n\n2. **Install dependencies:**\n   ```bash\n   pip install -r requirements.txt\n   ```\n\n3. **Set up environment variables:**\n   ```bash\n   # Create .env file\n   echo \"OPENAI_API_KEY=your_openai_api_key_here\" > .env\n   ```\n\n4. **Run the application:**\n   ```bash\n   python app.py\n   ```\n\n5. **Open your browser:**\n   Navigate to `http://localhost:8000`\n\n## 🛠️ How It Works\n\n1. **URL Processing**: Access any repository by replacing 'github.com' with 'gitcontainer.com' in the URL\n2. **Repository Cloning**: Gitcontainer clones the GitHub repository locally using Git\n3. **Code Analysis**: Uses [gitingest](https://github.com/cyclotruc/gitingest) to analyze the repository structure and extract relevant information\n4. **AI Generation**: Sends the analysis to OpenAI GPT-4 with specialized prompts for Dockerfile generation\n5. **Smart Optimization**: The AI considers:\n   - Technology stack detection\n   - Dependency management\n   - Security best practices\n   - Multi-stage builds when beneficial\n   - Port configuration\n   - Environment variables\n   - Health checks\n\n## 📁 Project Structure\n\n```\ncyclotruc-gitcontainer/\n├── app.py                 # Main FastAPI application\n├── requirements.txt       # Python dependencies\n├── .env                  # Environment variables (create this)\n├── static/               # Static assets (icons, CSS)\n├── templates/\n│   └── index.jinja       # Main HTML template\n└── tools/                # Core functionality modules\n    ├── __init__.py\n    ├── create_container.py  # AI Dockerfile generation\n    ├── git_operations.py    # GitHub repository cloning\n    └── gitingest.py        # Repository analysis\n```\n",
  "origin_sha": "2Kx7T2O6AIyfCMQIH5hRrimkSCQb/noMCAe+9k5GlBM=",
  "translate": "![Gitcontainer](https://raw.githubusercontent.com/cyclotruc/gitcontainer/main/docs/image.png)\n\n# گیت‌کانتینر 🐳\n\n**هر مخزن GitHub را با تولید داکرفایل هوشمند مبتنی بر هوش مصنوعی به یک کانتینر Docker آماده تولید تبدیل کنید.**\n\n[![MIT License](https://img.shields.io/badge/License-MIT-green.svg)](https://choosealicense.com/licenses/mit/)\n[![Python 3.9+](https://img.shields.io/badge/python-3.9+-blue.svg)](https://www.python.org/downloads/)\n[![FastAPI](https://img.shields.io/badge/FastAPI-0.68+-00a393.svg)](https://fastapi.tiangolo.com/)\n\nگیت‌کانتینر یک برنامه وب مبتنی بر هوش مصنوعی است که با تحلیل مخازن GitHub، به‌طور خودکار داکرفایل‌های آماده تولید ایجاد می‌کند. فقط کافیست یک URL گیت‌هاب را وارد کنید تا یک داکرفایل متناسب با انتخاب هوشمند تصویر پایه، مدیریت وابستگی‌ها و رعایت بهترین شیوه‌های Docker دریافت کنید.\n\n## 🌟 دسترسی سریع\n\nکافیست در هر URL مخزن GitHub، `github.com` را با `gitcontainer.com` جایگزین کنید تا بلافاصله به صفحه تولید داکرفایل آن مخزن دسترسی پیدا کنید.\n\nبرای مثال:\n```\nhttps://github.com/username/repo  →  https://gitcontainer.com/username/repo\n```\n\n## ✨ قابلیت‌ها\n\n- **🔄 دسترسی سریع با URL**: فقط 'github.com' را با 'gitcontainer.com' در هر URL گیت‌هاب جایگزین کنید\n- **🤖 تحلیل هوشمند با هوش مصنوعی**: استفاده از OpenAI GPT-4 برای تحلیل ساختار مخزن و تولید داکرفایل هوشمند\n- **⚡ پخش زنده**: مشاهده تولید داکرفایل توسط هوش مصنوعی به صورت لحظه‌ای با WebSocket\n- **🎯 تشخیص هوشمند فناوری**: شناسایی خودکار تکنولوژی‌ها (پایتون، Node.js، جاوا، Go و غیره)\n- **🔧 آماده تولید**: تولید داکرفایل بر اساس بهترین شیوه‌ها با امنیت مناسب، بیلد چندمرحله‌ای و بهینه‌سازی\n- **📋 دستورالعمل‌های اضافی**: افزودن نیازمندی‌های سفارشی برای محیط‌های خاص\n- **📄 Docker Compose**: پیشنهاد خودکار docker-compose.yml برای برنامه‌های پیچیده\n- **🎨 رابط کاربری مدرن**: رابط تمیز و واکنش‌گرا با ویرایشگر Monaco برای برجسته‌سازی کد\n- **📱 سازگاری با موبایل**: عملکرد روان در دسکتاپ و دستگاه‌های موبایل\n\n## 🚀 شروع سریع\n\n### پیش‌نیازها\n\n- پایتون 3.9 یا بالاتر\n- Git\n- کلید API اوپن‌اِی‌آی\n\n### نصب\n\n1. **کلون کردن مخزن:**\n   ```bash\n   git clone https://github.com/cyclotruc/gitcontainer.git\n   cd gitcontainer\n   ```\n\n2. **نصب وابستگی‌ها:**\n   ```bash\n   pip install -r requirements.txt\n   ```\n\n3. **تنظیم متغیرهای محیطی:**\n   ```bash\n   # ساخت فایل .env\n   echo \"OPENAI_API_KEY=your_openai_api_key_here\" > .env\n   ```\n\n4. **اجرای برنامه:**\n   ```bash\n   python app.py\n   ```\n\n5. **باز کردن مرورگر:**\n   به `http://localhost:8000` مراجعه کنید\n\n## 🛠️ نحوه عملکرد\n\n1. **پردازش URL**: دسترسی به هر مخزن با جایگزینی 'github.com' با 'gitcontainer.com' در URL\n2. **کلون کردن مخزن**: گیت‌کانتینر مخزن GitHub را با استفاده از Git به صورت محلی کلون می‌کند\n3. **تحلیل کد**: با استفاده از [gitingest](https://github.com/cyclotruc/gitingest) ساختار مخزن را تحلیل و اطلاعات مرتبط را استخراج می‌کند\n4. **تولید با هوش مصنوعی**: تحلیل به OpenAI GPT-4 با پرامپت‌های تخصصی برای تولید داکرفایل ارسال می‌شود\n5. **بهینه‌سازی هوشمند**: هوش مصنوعی موارد زیر را در نظر می‌گیرد:\n   - شناسایی فناوری‌ها\n   - مدیریت وابستگی‌ها\n   - بهترین شیوه‌های امنیتی\n   - بیلد چندمرحله‌ای در صورت نیاز\n   - پیکربندی پورت‌ها\n   - متغیرهای محیطی\n   - health check\n\n## 📁 ساختار پروژه\n\n```\ncyclotruc-gitcontainer/\n├── app.py                 # برنامه اصلی FastAPI\n├── requirements.txt       # وابستگی‌های پایتون\n├── .env                  # متغیرهای محیطی (ایجاد کنید)\n├── static/               # فایل‌های استاتیک (آیکون، CSS)\n├── templates/\n│   └── index.jinja       # قالب اصلی HTML\n└── tools/                # ماژول‌های عملکردی اصلی\n    ├── __init__.py\n    ├── create_container.py  # تولید داکرفایل با هوش مصنوعی\n    ├── git_operations.py    # کلون مخزن GitHub\n    └── gitingest.py        # تحلیل مخزن\n```",
  "status": "ok"
}