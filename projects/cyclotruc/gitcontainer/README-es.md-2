{
  "id": 2,
  "origin": "## 🔧 Configuration\n\n### Environment Variables\n\n| Variable | Description | Required |\n|----------|-------------|----------|\n| `OPENAI_API_KEY` | Your OpenAI API key | Yes |\n| `PORT` | Server port (default: 8000) | No |\n| `HOST` | Server host (default: 0.0.0.0) | No |\n\n### Advanced Usage\n\nYou can use the tools programmatically:\n\n```python\nfrom tools import clone_repo_tool, gitingest_tool, create_container_tool\nimport asyncio\n\nasync def generate_dockerfile(github_url):\n    # Clone repository\n    clone_result = await clone_repo_tool(github_url)\n    \n    # Analyze with gitingest\n    analysis = await gitingest_tool(clone_result['local_path'])\n    \n    # Generate Dockerfile\n    dockerfile = await create_container_tool(\n        gitingest_summary=analysis['summary'],\n        gitingest_tree=analysis['tree'],\n        gitingest_content=analysis['content']\n    )\n    \n    return dockerfile\n\n# Usage\nresult = asyncio.run(generate_dockerfile(\"https://github.com/user/repo\"))\nprint(result['dockerfile'])\n```\n\n## 🎨 Customization\n\n### Adding Custom Instructions\n\nUse the \"Additional instructions\" feature to customize generation:\n\n- `\"Use Alpine Linux for smaller image size\"`\n- `\"Include Redis and PostgreSQL\"`\n- `\"Optimize for production deployment\"`\n- `\"Add development tools for debugging\"`\n\n## 📝 License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## 🙏 Acknowledgments\n\n- **[OpenAI](https://openai.com/)** for providing the GPT-4 API\n- **[gitingest](https://github.com/cyclotruc/gitingest)** for repository analysis capabilities\n- **[FastAPI](https://fastapi.tiangolo.com/)** for the excellent web framework\n- **[Monaco Editor](https://microsoft.github.io/monaco-editor/)** for code syntax highlighting\n\n## 🔗 Links\n\n- **GitHub Repository**: [https://github.com/cyclotruc/gitcontainer](https://github.com/cyclotruc/gitcontainer)\n- **Demo**: Try it live with example repositories\n- **Issues**: [Report bugs or request features](https://github.com/cyclotruc/gitcontainer/issues)\n\n---\n\n**Made with ❤️ by [Romain Courtois](https://github.com/cyclotruc)**\n\n*Turn any repository into a container in seconds!*",
  "origin_sha": "3JQ1X9vch4E/c8oWTX7bz47yaMLKRFr/2Tcnh9fXVCk=",
  "translate": "## 🔧 Configuración\n\n### Variables de Entorno\n\n| Variable | Descripción | Requerido |\n|----------|-------------|-----------|\n| `OPENAI_API_KEY` | Tu clave API de OpenAI | Sí |\n| `PORT` | Puerto del servidor (por defecto: 8000) | No |\n| `HOST` | Host del servidor (por defecto: 0.0.0.0) | No |\n\n### Uso Avanzado\n\nPuedes usar las herramientas de forma programática:\n\n```python\nfrom tools import clone_repo_tool, gitingest_tool, create_container_tool\nimport asyncio\n\nasync def generate_dockerfile(github_url):\n    # Clonar repositorio\n    clone_result = await clone_repo_tool(github_url)\n    \n    # Analizar con gitingest\n    analysis = await gitingest_tool(clone_result['local_path'])\n    \n    # Generar Dockerfile\n    dockerfile = await create_container_tool(\n        gitingest_summary=analysis['summary'],\n        gitingest_tree=analysis['tree'],\n        gitingest_content=analysis['content']\n    )\n    \n    return dockerfile\n\n# Uso\nresult = asyncio.run(generate_dockerfile(\"https://github.com/user/repo\"))\nprint(result['dockerfile'])\n```\n\n## 🎨 Personalización\n\n### Añadir Instrucciones Personalizadas\n\nUtiliza la función \"Instrucciones adicionales\" para personalizar la generación:\n\n- `\"Usar Alpine Linux para un tamaño de imagen más pequeño\"`\n- `\"Incluir Redis y PostgreSQL\"`\n- `\"Optimizar para despliegue en producción\"`\n- `\"Agregar herramientas de desarrollo para depuración\"`\n\n## 📝 Licencia\n\nEste proyecto está licenciado bajo la Licencia MIT - consulta el archivo [LICENSE](LICENSE) para más detalles.\n\n## 🙏 Agradecimientos\n\n- **[OpenAI](https://openai.com/)** por proveer la API de GPT-4\n- **[gitingest](https://github.com/cyclotruc/gitingest)** por las capacidades de análisis de repositorios\n- **[FastAPI](https://fastapi.tiangolo.com/)** por el excelente framework web\n- **[Monaco Editor](https://microsoft.github.io/monaco-editor/)** por el resaltado de sintaxis de código\n\n## 🔗 Enlaces\n\n- **Repositorio GitHub**: [https://github.com/cyclotruc/gitcontainer](https://github.com/cyclotruc/gitcontainer)\n- **Demostración**: Pruébalo en vivo con repositorios de ejemplo\n- **Incidencias**: [Reporta errores o solicita funciones](https://github.com/cyclotruc/gitcontainer/issues)\n\n---\n\n**Hecho con ❤️ por [Romain Courtois](https://github.com/cyclotruc)**\n\n*¡Convierte cualquier repositorio en un contenedor en segundos!*",
  "status": "ok"
}