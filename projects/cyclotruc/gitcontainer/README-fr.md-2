{
  "id": 2,
  "origin": "## üîß Configuration\n\n### Environment Variables\n\n| Variable | Description | Required |\n|----------|-------------|----------|\n| `OPENAI_API_KEY` | Your OpenAI API key | Yes |\n| `PORT` | Server port (default: 8000) | No |\n| `HOST` | Server host (default: 0.0.0.0) | No |\n\n### Advanced Usage\n\nYou can use the tools programmatically:\n\n```python\nfrom tools import clone_repo_tool, gitingest_tool, create_container_tool\nimport asyncio\n\nasync def generate_dockerfile(github_url):\n    # Clone repository\n    clone_result = await clone_repo_tool(github_url)\n    \n    # Analyze with gitingest\n    analysis = await gitingest_tool(clone_result['local_path'])\n    \n    # Generate Dockerfile\n    dockerfile = await create_container_tool(\n        gitingest_summary=analysis['summary'],\n        gitingest_tree=analysis['tree'],\n        gitingest_content=analysis['content']\n    )\n    \n    return dockerfile\n\n# Usage\nresult = asyncio.run(generate_dockerfile(\"https://github.com/user/repo\"))\nprint(result['dockerfile'])\n```\n\n## üé® Customization\n\n### Adding Custom Instructions\n\nUse the \"Additional instructions\" feature to customize generation:\n\n- `\"Use Alpine Linux for smaller image size\"`\n- `\"Include Redis and PostgreSQL\"`\n- `\"Optimize for production deployment\"`\n- `\"Add development tools for debugging\"`\n\n## üìù License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## üôè Acknowledgments\n\n- **[OpenAI](https://openai.com/)** for providing the GPT-4 API\n- **[gitingest](https://github.com/cyclotruc/gitingest)** for repository analysis capabilities\n- **[FastAPI](https://fastapi.tiangolo.com/)** for the excellent web framework\n- **[Monaco Editor](https://microsoft.github.io/monaco-editor/)** for code syntax highlighting\n\n## üîó Links\n\n- **GitHub Repository**: [https://github.com/cyclotruc/gitcontainer](https://github.com/cyclotruc/gitcontainer)\n- **Demo**: Try it live with example repositories\n- **Issues**: [Report bugs or request features](https://github.com/cyclotruc/gitcontainer/issues)\n\n---\n\n**Made with ‚ù§Ô∏è by [Romain Courtois](https://github.com/cyclotruc)**\n\n*Turn any repository into a container in seconds!*",
  "origin_sha": "3JQ1X9vch4E/c8oWTX7bz47yaMLKRFr/2Tcnh9fXVCk=",
  "translate": "## üîß Configuration\n\n### Variables d'environnement\n\n| Variable | Description | Obligatoire |\n|----------|-------------|-------------|\n| `OPENAI_API_KEY` | Votre cl√© API OpenAI | Oui |\n| `PORT` | Port du serveur (d√©faut : 8000) | Non |\n| `HOST` | H√¥te du serveur (d√©faut : 0.0.0.0) | Non |\n\n### Utilisation avanc√©e\n\nVous pouvez utiliser les outils de mani√®re programmatique :\n\n```python\nfrom tools import clone_repo_tool, gitingest_tool, create_container_tool\nimport asyncio\n\nasync def generate_dockerfile(github_url):\n    # Cloner le d√©p√¥t\n    clone_result = await clone_repo_tool(github_url)\n    \n    # Analyser avec gitingest\n    analysis = await gitingest_tool(clone_result['local_path'])\n    \n    # G√©n√©rer le Dockerfile\n    dockerfile = await create_container_tool(\n        gitingest_summary=analysis['summary'],\n        gitingest_tree=analysis['tree'],\n        gitingest_content=analysis['content']\n    )\n    \n    return dockerfile\n\n# Utilisation\nresult = asyncio.run(generate_dockerfile(\"https://github.com/user/repo\"))\nprint(result['dockerfile'])\n```\n\n## üé® Personnalisation\n\n### Ajouter des instructions personnalis√©es\n\nUtilisez la fonctionnalit√© \"Instructions suppl√©mentaires\" pour personnaliser la g√©n√©ration :\n\n- `\"Utiliser Alpine Linux pour une taille d‚Äôimage r√©duite\"`\n- `\"Inclure Redis et PostgreSQL\"`\n- `\"Optimiser pour un d√©ploiement en production\"`\n- `\"Ajouter des outils de d√©veloppement pour le d√©bogage\"`\n\n## üìù Licence\n\nCe projet est sous licence MIT - voir le fichier [LICENSE](LICENSE) pour plus de d√©tails.\n\n## üôè Remerciements\n\n- **[OpenAI](https://openai.com/)** pour la mise √† disposition de l‚ÄôAPI GPT-4\n- **[gitingest](https://github.com/cyclotruc/gitingest)** pour les capacit√©s d‚Äôanalyse de d√©p√¥ts\n- **[FastAPI](https://fastapi.tiangolo.com/)** pour l‚Äôexcellent framework web\n- **[Monaco Editor](https://microsoft.github.io/monaco-editor/)** pour la coloration syntaxique du code\n\n## üîó Liens\n\n- **D√©p√¥t GitHub** : [https://github.com/cyclotruc/gitcontainer](https://github.com/cyclotruc/gitcontainer)\n- **D√©mo** : Essayez-le en direct avec des d√©p√¥ts d‚Äôexemple\n- **Issues** : [Signaler des bugs ou demander des fonctionnalit√©s](https://github.com/cyclotruc/gitcontainer/issues)\n\n---\n\n**R√©alis√© avec ‚ù§Ô∏è par [Romain Courtois](https://github.com/cyclotruc)**\n\n*Transformez n‚Äôimporte quel d√©p√¥t en conteneur en quelques secondes !*",
  "status": "ok"
}