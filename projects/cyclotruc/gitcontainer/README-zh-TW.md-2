{
  "id": 2,
  "origin": "## 🔧 Configuration\n\n### Environment Variables\n\n| Variable | Description | Required |\n|----------|-------------|----------|\n| `OPENAI_API_KEY` | Your OpenAI API key | Yes |\n| `PORT` | Server port (default: 8000) | No |\n| `HOST` | Server host (default: 0.0.0.0) | No |\n\n### Advanced Usage\n\nYou can use the tools programmatically:\n\n```python\nfrom tools import clone_repo_tool, gitingest_tool, create_container_tool\nimport asyncio\n\nasync def generate_dockerfile(github_url):\n    # Clone repository\n    clone_result = await clone_repo_tool(github_url)\n    \n    # Analyze with gitingest\n    analysis = await gitingest_tool(clone_result['local_path'])\n    \n    # Generate Dockerfile\n    dockerfile = await create_container_tool(\n        gitingest_summary=analysis['summary'],\n        gitingest_tree=analysis['tree'],\n        gitingest_content=analysis['content']\n    )\n    \n    return dockerfile\n\n# Usage\nresult = asyncio.run(generate_dockerfile(\"https://github.com/user/repo\"))\nprint(result['dockerfile'])\n```\n\n## 🎨 Customization\n\n### Adding Custom Instructions\n\nUse the \"Additional instructions\" feature to customize generation:\n\n- `\"Use Alpine Linux for smaller image size\"`\n- `\"Include Redis and PostgreSQL\"`\n- `\"Optimize for production deployment\"`\n- `\"Add development tools for debugging\"`\n\n## 📝 License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## 🙏 Acknowledgments\n\n- **[OpenAI](https://openai.com/)** for providing the GPT-4 API\n- **[gitingest](https://github.com/cyclotruc/gitingest)** for repository analysis capabilities\n- **[FastAPI](https://fastapi.tiangolo.com/)** for the excellent web framework\n- **[Monaco Editor](https://microsoft.github.io/monaco-editor/)** for code syntax highlighting\n\n## 🔗 Links\n\n- **GitHub Repository**: [https://github.com/cyclotruc/gitcontainer](https://github.com/cyclotruc/gitcontainer)\n- **Demo**: Try it live with example repositories\n- **Issues**: [Report bugs or request features](https://github.com/cyclotruc/gitcontainer/issues)\n\n---\n\n**Made with ❤️ by [Romain Courtois](https://github.com/cyclotruc)**\n\n*Turn any repository into a container in seconds!*",
  "origin_sha": "3JQ1X9vch4E/c8oWTX7bz47yaMLKRFr/2Tcnh9fXVCk=",
  "translate": "## 🔧 設定\n\n### 環境變數\n\n| 變數 | 說明 | 是否必填 |\n|------|------|----------|\n| `OPENAI_API_KEY` | 你的 OpenAI API 金鑰 | 是 |\n| `PORT` | 伺服器埠（預設：8000） | 否 |\n| `HOST` | 伺服器主機（預設：0.0.0.0） | 否 |\n\n### 進階用法\n\n你可以以程式化方式使用這些工具：\n\n```python\nfrom tools import clone_repo_tool, gitingest_tool, create_container_tool\nimport asyncio\n\nasync def generate_dockerfile(github_url):\n    # 複製儲存庫\n    clone_result = await clone_repo_tool(github_url)\n    \n    # 使用 gitingest 分析\n    analysis = await gitingest_tool(clone_result['local_path'])\n    \n    # 產生 Dockerfile\n    dockerfile = await create_container_tool(\n        gitingest_summary=analysis['summary'],\n        gitingest_tree=analysis['tree'],\n        gitingest_content=analysis['content']\n    )\n    \n    return dockerfile\n\n# 用法\nresult = asyncio.run(generate_dockerfile(\"https://github.com/user/repo\"))\nprint(result['dockerfile'])\n```\n\n## 🎨 自訂\n\n### 新增自訂指令\n\n使用「額外指令」功能來自訂產生內容：\n\n- `\"使用 Alpine Linux 以減小映像檔大小\"`\n- `\"包含 Redis 和 PostgreSQL\"`\n- `\"最佳化為生產環境部署\"`\n- `\"加入開發工具以便除錯\"`\n\n## 📝 授權\n\n本專案採用 MIT License 授權 - 詳情請參閱 [LICENSE](LICENSE) 檔案。\n\n## 🙏 鳴謝\n\n- **[OpenAI](https://openai.com/)** 提供 GPT-4 API\n- **[gitingest](https://github.com/cyclotruc/gitingest)** 提供儲存庫分析功能\n- **[FastAPI](https://fastapi.tiangolo.com/)** 優秀的 Web 框架\n- **[Monaco Editor](https://microsoft.github.io/monaco-editor/)** 程式碼語法高亮\n\n## 🔗 連結\n\n- **GitHub 儲存庫**： [https://github.com/cyclotruc/gitcontainer](https://github.com/cyclotruc/gitcontainer)\n- **Demo**：以範例儲存庫線上試用\n- **問題回報**： [回報錯誤或提出功能需求](https://github.com/cyclotruc/gitcontainer/issues)\n\n---\n\n**由 [Romain Courtois](https://github.com/cyclotruc) ❤️ 製作**\n\n*讓任何儲存庫在幾秒內變成容器！*",
  "status": "ok"
}