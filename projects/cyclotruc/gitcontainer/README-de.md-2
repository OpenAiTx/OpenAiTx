{
  "id": 2,
  "origin": "## üîß Configuration\n\n### Environment Variables\n\n| Variable | Description | Required |\n|----------|-------------|----------|\n| `OPENAI_API_KEY` | Your OpenAI API key | Yes |\n| `PORT` | Server port (default: 8000) | No |\n| `HOST` | Server host (default: 0.0.0.0) | No |\n\n### Advanced Usage\n\nYou can use the tools programmatically:\n\n```python\nfrom tools import clone_repo_tool, gitingest_tool, create_container_tool\nimport asyncio\n\nasync def generate_dockerfile(github_url):\n    # Clone repository\n    clone_result = await clone_repo_tool(github_url)\n    \n    # Analyze with gitingest\n    analysis = await gitingest_tool(clone_result['local_path'])\n    \n    # Generate Dockerfile\n    dockerfile = await create_container_tool(\n        gitingest_summary=analysis['summary'],\n        gitingest_tree=analysis['tree'],\n        gitingest_content=analysis['content']\n    )\n    \n    return dockerfile\n\n# Usage\nresult = asyncio.run(generate_dockerfile(\"https://github.com/user/repo\"))\nprint(result['dockerfile'])\n```\n\n## üé® Customization\n\n### Adding Custom Instructions\n\nUse the \"Additional instructions\" feature to customize generation:\n\n- `\"Use Alpine Linux for smaller image size\"`\n- `\"Include Redis and PostgreSQL\"`\n- `\"Optimize for production deployment\"`\n- `\"Add development tools for debugging\"`\n\n## üìù License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## üôè Acknowledgments\n\n- **[OpenAI](https://openai.com/)** for providing the GPT-4 API\n- **[gitingest](https://github.com/cyclotruc/gitingest)** for repository analysis capabilities\n- **[FastAPI](https://fastapi.tiangolo.com/)** for the excellent web framework\n- **[Monaco Editor](https://microsoft.github.io/monaco-editor/)** for code syntax highlighting\n\n## üîó Links\n\n- **GitHub Repository**: [https://github.com/cyclotruc/gitcontainer](https://github.com/cyclotruc/gitcontainer)\n- **Demo**: Try it live with example repositories\n- **Issues**: [Report bugs or request features](https://github.com/cyclotruc/gitcontainer/issues)\n\n---\n\n**Made with ‚ù§Ô∏è by [Romain Courtois](https://github.com/cyclotruc)**\n\n*Turn any repository into a container in seconds!*",
  "origin_sha": "3JQ1X9vch4E/c8oWTX7bz47yaMLKRFr/2Tcnh9fXVCk=",
  "translate": "## üîß Konfiguration\n\n### Umgebungsvariablen\n\n| Variable | Beschreibung | Erforderlich |\n|----------|--------------|--------------|\n| `OPENAI_API_KEY` | Dein OpenAI API-Schl√ºssel | Ja |\n| `PORT` | Server-Port (Standard: 8000) | Nein |\n| `HOST` | Server-Host (Standard: 0.0.0.0) | Nein |\n\n### Erweiterte Nutzung\n\nDu kannst die Tools programmatisch verwenden:\n\n```python\nfrom tools import clone_repo_tool, gitingest_tool, create_container_tool\nimport asyncio\n\nasync def generate_dockerfile(github_url):\n    # Repository klonen\n    clone_result = await clone_repo_tool(github_url)\n    \n    # Mit gitingest analysieren\n    analysis = await gitingest_tool(clone_result['local_path'])\n    \n    # Dockerfile generieren\n    dockerfile = await create_container_tool(\n        gitingest_summary=analysis['summary'],\n        gitingest_tree=analysis['tree'],\n        gitingest_content=analysis['content']\n    )\n    \n    return dockerfile\n\n# Verwendung\nresult = asyncio.run(generate_dockerfile(\"https://github.com/user/repo\"))\nprint(result['dockerfile'])\n```\n\n## üé® Anpassung\n\n### Hinzuf√ºgen benutzerdefinierter Anweisungen\n\nNutze die Funktion ‚ÄûZus√§tzliche Anweisungen‚Äú, um die Generierung anzupassen:\n\n- `\"Verwende Alpine Linux f√ºr kleinere Image-Gr√∂√üe\"`\n- `\"F√ºge Redis und PostgreSQL hinzu\"`\n- `\"F√ºr Produktionseinsatz optimieren\"`\n- `\"Entwicklungstools zum Debuggen hinzuf√ºgen\"`\n\n## üìù Lizenz\n\nDieses Projekt steht unter der MIT-Lizenz ‚Äì siehe die [LICENSE](LICENSE) Datei f√ºr Details.\n\n## üôè Danksagungen\n\n- **[OpenAI](https://openai.com/)** f√ºr die Bereitstellung der GPT-4 API\n- **[gitingest](https://github.com/cyclotruc/gitingest)** f√ºr die Repository-Analyse-Funktionen\n- **[FastAPI](https://fastapi.tiangolo.com/)** f√ºr das ausgezeichnete Web-Framework\n- **[Monaco Editor](https://microsoft.github.io/monaco-editor/)** f√ºr Syntax-Highlighting im Code\n\n## üîó Links\n\n- **GitHub Repository**: [https://github.com/cyclotruc/gitcontainer](https://github.com/cyclotruc/gitcontainer)\n- **Demo**: Probiere es live mit Beispiel-Repositories aus\n- **Issues**: [Fehler melden oder Funktionen anfordern](https://github.com/cyclotruc/gitcontainer/issues)\n\n---\n\n**Erstellt mit ‚ù§Ô∏è von [Romain Courtois](https://github.com/cyclotruc)**\n\n*Verwandle jedes Repository in Sekunden in einen Container!*",
  "status": "ok"
}