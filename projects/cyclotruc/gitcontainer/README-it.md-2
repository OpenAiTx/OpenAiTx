{
  "id": 2,
  "origin": "## üîß Configuration\n\n### Environment Variables\n\n| Variable | Description | Required |\n|----------|-------------|----------|\n| `OPENAI_API_KEY` | Your OpenAI API key | Yes |\n| `PORT` | Server port (default: 8000) | No |\n| `HOST` | Server host (default: 0.0.0.0) | No |\n\n### Advanced Usage\n\nYou can use the tools programmatically:\n\n```python\nfrom tools import clone_repo_tool, gitingest_tool, create_container_tool\nimport asyncio\n\nasync def generate_dockerfile(github_url):\n    # Clone repository\n    clone_result = await clone_repo_tool(github_url)\n    \n    # Analyze with gitingest\n    analysis = await gitingest_tool(clone_result['local_path'])\n    \n    # Generate Dockerfile\n    dockerfile = await create_container_tool(\n        gitingest_summary=analysis['summary'],\n        gitingest_tree=analysis['tree'],\n        gitingest_content=analysis['content']\n    )\n    \n    return dockerfile\n\n# Usage\nresult = asyncio.run(generate_dockerfile(\"https://github.com/user/repo\"))\nprint(result['dockerfile'])\n```\n\n## üé® Customization\n\n### Adding Custom Instructions\n\nUse the \"Additional instructions\" feature to customize generation:\n\n- `\"Use Alpine Linux for smaller image size\"`\n- `\"Include Redis and PostgreSQL\"`\n- `\"Optimize for production deployment\"`\n- `\"Add development tools for debugging\"`\n\n## üìù License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## üôè Acknowledgments\n\n- **[OpenAI](https://openai.com/)** for providing the GPT-4 API\n- **[gitingest](https://github.com/cyclotruc/gitingest)** for repository analysis capabilities\n- **[FastAPI](https://fastapi.tiangolo.com/)** for the excellent web framework\n- **[Monaco Editor](https://microsoft.github.io/monaco-editor/)** for code syntax highlighting\n\n## üîó Links\n\n- **GitHub Repository**: [https://github.com/cyclotruc/gitcontainer](https://github.com/cyclotruc/gitcontainer)\n- **Demo**: Try it live with example repositories\n- **Issues**: [Report bugs or request features](https://github.com/cyclotruc/gitcontainer/issues)\n\n---\n\n**Made with ‚ù§Ô∏è by [Romain Courtois](https://github.com/cyclotruc)**\n\n*Turn any repository into a container in seconds!*",
  "origin_sha": "3JQ1X9vch4E/c8oWTX7bz47yaMLKRFr/2Tcnh9fXVCk=",
  "translate": "## üîß Configurazione\n\n### Variabili d'Ambiente\n\n| Variabile | Descrizione | Obbligatorio |\n|-----------|-------------|--------------|\n| `OPENAI_API_KEY` | La tua chiave API di OpenAI | S√¨ |\n| `PORT` | Porta del server (default: 8000) | No |\n| `HOST` | Host del server (default: 0.0.0.0) | No |\n\n### Utilizzo Avanzato\n\nPuoi usare gli strumenti programmaticamente:\n\n```python\nfrom tools import clone_repo_tool, gitingest_tool, create_container_tool\nimport asyncio\n\nasync def generate_dockerfile(github_url):\n    # Clona il repository\n    clone_result = await clone_repo_tool(github_url)\n    \n    # Analizza con gitingest\n    analysis = await gitingest_tool(clone_result['local_path'])\n    \n    # Genera Dockerfile\n    dockerfile = await create_container_tool(\n        gitingest_summary=analysis['summary'],\n        gitingest_tree=analysis['tree'],\n        gitingest_content=analysis['content']\n    )\n    \n    return dockerfile\n\n# Utilizzo\nresult = asyncio.run(generate_dockerfile(\"https://github.com/user/repo\"))\nprint(result['dockerfile'])\n```\n\n## üé® Personalizzazione\n\n### Aggiunta di Istruzioni Personalizzate\n\nUsa la funzione \"Istruzioni aggiuntive\" per personalizzare la generazione:\n\n- `\"Usa Alpine Linux per una dimensione dell'immagine pi√π piccola\"`\n- `\"Includi Redis e PostgreSQL\"`\n- `\"Ottimizza per il deployment in produzione\"`\n- `\"Aggiungi strumenti di sviluppo per il debugging\"`\n\n## üìù Licenza\n\nQuesto progetto √® rilasciato sotto licenza MIT - vedi il file [LICENSE](LICENSE) per i dettagli.\n\n## üôè Ringraziamenti\n\n- **[OpenAI](https://openai.com/)** per aver fornito l'API GPT-4\n- **[gitingest](https://github.com/cyclotruc/gitingest)** per le capacit√† di analisi dei repository\n- **[FastAPI](https://fastapi.tiangolo.com/)** per l'eccellente framework web\n- **[Monaco Editor](https://microsoft.github.io/monaco-editor/)** per l'evidenziazione della sintassi del codice\n\n## üîó Link\n\n- **Repository GitHub**: [https://github.com/cyclotruc/gitcontainer](https://github.com/cyclotruc/gitcontainer)\n- **Demo**: Provalo dal vivo con repository di esempio\n- **Problemi**: [Segnala bug o richiedi funzionalit√†](https://github.com/cyclotruc/gitcontainer/issues)\n\n---\n\n**Creato con ‚ù§Ô∏è da [Romain Courtois](https://github.com/cyclotruc)**\n\n*Trasforma qualsiasi repository in un container in pochi secondi!*",
  "status": "ok"
}