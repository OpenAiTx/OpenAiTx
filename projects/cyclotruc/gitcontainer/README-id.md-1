{
  "id": 1,
  "origin": "![Gitcontainer](https://raw.githubusercontent.com/cyclotruc/gitcontainer/main/docs/image.png)\n\n# Gitcontainer 🐳\n\n**Turn any GitHub repository into a production-ready Docker container with AI-powered Dockerfile generation.**\n\n[![MIT License](https://img.shields.io/badge/License-MIT-green.svg)](https://choosealicense.com/licenses/mit/)\n[![Python 3.9+](https://img.shields.io/badge/python-3.9+-blue.svg)](https://www.python.org/downloads/)\n[![FastAPI](https://img.shields.io/badge/FastAPI-0.68+-00a393.svg)](https://fastapi.tiangolo.com/)\n\nGitcontainer is an AI-powered web application that automatically generates production-ready Dockerfiles by analyzing GitHub repositories. Simply paste a GitHub URL and get a tailored Dockerfile with intelligent base image selection, dependency management, and Docker best practices.\n\n## 🌟 Quick Access\n\nSimply replace `github.com` with `gitcontainer.com` in any GitHub repository URL to instantly access the Dockerfile generation page for that repository.\n\nFor example:\n```\nhttps://github.com/username/repo  →  https://gitcontainer.com/username/repo\n```\n\n## ✨ Features\n\n- **🔄 Instant URL Access**: Just replace 'github.com' with 'gitcontainer.com' in any GitHub URL\n- **🤖 AI-Powered Analysis**: Uses OpenAI GPT-4 to analyze repository structure and generate intelligent Dockerfiles\n- **⚡ Real-time Streaming**: Watch the AI generate your Dockerfile in real-time with WebSocket streaming\n- **🎯 Smart Detection**: Automatically detects technology stacks (Python, Node.js, Java, Go, etc.)\n- **🔧 Production-Ready**: Generates Dockerfiles following best practices with proper security, multi-stage builds, and optimization\n- **📋 Additional Instructions**: Add custom requirements for specialized environments\n- **📄 Docker Compose**: Automatically suggests docker-compose.yml for complex applications\n- **🎨 Modern UI**: Clean, responsive interface with Monaco editor for syntax highlighting\n- **📱 Mobile Friendly**: Works seamlessly on desktop and mobile devices\n\n## 🚀 Quick Start\n\n### Prerequisites\n\n- Python 3.9 or higher\n- Git\n- OpenAI API key\n\n### Installation\n\n1. **Clone the repository:**\n   ```bash\n   git clone https://github.com/cyclotruc/gitcontainer.git\n   cd gitcontainer\n   ```\n\n2. **Install dependencies:**\n   ```bash\n   pip install -r requirements.txt\n   ```\n\n3. **Set up environment variables:**\n   ```bash\n   # Create .env file\n   echo \"OPENAI_API_KEY=your_openai_api_key_here\" > .env\n   ```\n\n4. **Run the application:**\n   ```bash\n   python app.py\n   ```\n\n5. **Open your browser:**\n   Navigate to `http://localhost:8000`\n\n## 🛠️ How It Works\n\n1. **URL Processing**: Access any repository by replacing 'github.com' with 'gitcontainer.com' in the URL\n2. **Repository Cloning**: Gitcontainer clones the GitHub repository locally using Git\n3. **Code Analysis**: Uses [gitingest](https://github.com/cyclotruc/gitingest) to analyze the repository structure and extract relevant information\n4. **AI Generation**: Sends the analysis to OpenAI GPT-4 with specialized prompts for Dockerfile generation\n5. **Smart Optimization**: The AI considers:\n   - Technology stack detection\n   - Dependency management\n   - Security best practices\n   - Multi-stage builds when beneficial\n   - Port configuration\n   - Environment variables\n   - Health checks\n\n## 📁 Project Structure\n\n```\ncyclotruc-gitcontainer/\n├── app.py                 # Main FastAPI application\n├── requirements.txt       # Python dependencies\n├── .env                  # Environment variables (create this)\n├── static/               # Static assets (icons, CSS)\n├── templates/\n│   └── index.jinja       # Main HTML template\n└── tools/                # Core functionality modules\n    ├── __init__.py\n    ├── create_container.py  # AI Dockerfile generation\n    ├── git_operations.py    # GitHub repository cloning\n    └── gitingest.py        # Repository analysis\n```\n",
  "origin_sha": "2Kx7T2O6AIyfCMQIH5hRrimkSCQb/noMCAe+9k5GlBM=",
  "translate": "![Gitcontainer](https://raw.githubusercontent.com/cyclotruc/gitcontainer/main/docs/image.png)\n\n# Gitcontainer 🐳\n\n**Ubah repositori GitHub apa pun menjadi Docker container siap produksi dengan pembuatan Dockerfile bertenaga AI.**\n\n[![MIT License](https://img.shields.io/badge/License-MIT-green.svg)](https://choosealicense.com/licenses/mit/)\n[![Python 3.9+](https://img.shields.io/badge/python-3.9+-blue.svg)](https://www.python.org/downloads/)\n[![FastAPI](https://img.shields.io/badge/FastAPI-0.68+-00a393.svg)](https://fastapi.tiangolo.com/)\n\nGitcontainer adalah aplikasi web bertenaga AI yang secara otomatis menghasilkan Dockerfile siap produksi dengan menganalisis repositori GitHub. Cukup tempel URL GitHub dan dapatkan Dockerfile yang disesuaikan dengan pemilihan base image yang cerdas, manajemen dependensi, dan praktik terbaik Docker.\n\n## 🌟 Akses Cepat\n\nCukup ganti `github.com` dengan `gitcontainer.com` pada URL repositori GitHub apa pun untuk langsung mengakses halaman pembuatan Dockerfile untuk repositori tersebut.\n\nContoh:\n```\nhttps://github.com/username/repo  →  https://gitcontainer.com/username/repo\n```\n\n## ✨ Fitur\n\n- **🔄 Akses URL Instan**: Cukup ganti 'github.com' dengan 'gitcontainer.com' di URL GitHub apa pun\n- **🤖 Analisis Berbasis AI**: Menggunakan OpenAI GPT-4 untuk menganalisis struktur repositori dan membuat Dockerfile cerdas\n- **⚡ Streaming Real-time**: Saksikan AI membuat Dockerfile Anda secara real-time dengan streaming WebSocket\n- **🎯 Deteksi Cerdas**: Secara otomatis mendeteksi stack teknologi (Python, Node.js, Java, Go, dll.)\n- **🔧 Siap Produksi**: Menghasilkan Dockerfile mengikuti praktik terbaik dengan keamanan, multi-stage build, dan optimasi yang tepat\n- **📋 Instruksi Tambahan**: Tambahkan kebutuhan khusus untuk lingkungan yang spesifik\n- **📄 Docker Compose**: Secara otomatis menyarankan docker-compose.yml untuk aplikasi kompleks\n- **🎨 UI Modern**: Antarmuka bersih dan responsif dengan editor Monaco untuk penyorotan sintaks\n- **📱 Ramah Mobile**: Bekerja mulus di perangkat desktop dan seluler\n\n## 🚀 Mulai Cepat\n\n### Prasyarat\n\n- Python 3.9 atau lebih tinggi\n- Git\n- Kunci API OpenAI\n\n### Instalasi\n\n1. **Clone repositori:**\n   ```bash\n   git clone https://github.com/cyclotruc/gitcontainer.git\n   cd gitcontainer\n   ```\n\n2. **Instal dependensi:**\n   ```bash\n   pip install -r requirements.txt\n   ```\n\n3. **Siapkan variabel lingkungan:**\n   ```bash\n   # Buat file .env\n   echo \"OPENAI_API_KEY=your_openai_api_key_here\" > .env\n   ```\n\n4. **Jalankan aplikasi:**\n   ```bash\n   python app.py\n   ```\n\n5. **Buka browser Anda:**\n   Akses `http://localhost:8000`\n\n## 🛠️ Cara Kerja\n\n1. **Pemrosesan URL**: Akses repositori apa pun dengan mengganti 'github.com' dengan 'gitcontainer.com' di URL\n2. **Kloning Repositori**: Gitcontainer mengkloning repositori GitHub secara lokal menggunakan Git\n3. **Analisis Kode**: Menggunakan [gitingest](https://github.com/cyclotruc/gitingest) untuk menganalisis struktur repositori dan mengekstrak informasi relevan\n4. **Pembuatan AI**: Mengirimkan hasil analisis ke OpenAI GPT-4 dengan prompt khusus untuk pembuatan Dockerfile\n5. **Optimasi Cerdas**: AI mempertimbangkan:\n   - Deteksi stack teknologi\n   - Manajemen dependensi\n   - Praktik terbaik keamanan\n   - Multi-stage build jika menguntungkan\n   - Konfigurasi port\n   - Variabel lingkungan\n   - Health check\n\n## 📁 Struktur Proyek\n\n```\ncyclotruc-gitcontainer/\n├── app.py                 # Aplikasi utama FastAPI\n├── requirements.txt       # Dependensi Python\n├── .env                  # Variabel lingkungan (buat file ini)\n├── static/               # Aset statis (ikon, CSS)\n├── templates/\n│   └── index.jinja       # Template HTML utama\n└── tools/                # Modul fungsi inti\n    ├── __init__.py\n    ├── create_container.py  # Pembuatan Dockerfile berbasis AI\n    ├── git_operations.py    # Kloning repositori GitHub\n    └── gitingest.py        # Analisis repositori\n```",
  "status": "ok"
}