{
  "id": 1,
  "origin": "![Gitcontainer](https://raw.githubusercontent.com/cyclotruc/gitcontainer/main/docs/image.png)\n\n# Gitcontainer 🐳\n\n**Turn any GitHub repository into a production-ready Docker container with AI-powered Dockerfile generation.**\n\n[![MIT License](https://img.shields.io/badge/License-MIT-green.svg)](https://choosealicense.com/licenses/mit/)\n[![Python 3.9+](https://img.shields.io/badge/python-3.9+-blue.svg)](https://www.python.org/downloads/)\n[![FastAPI](https://img.shields.io/badge/FastAPI-0.68+-00a393.svg)](https://fastapi.tiangolo.com/)\n\nGitcontainer is an AI-powered web application that automatically generates production-ready Dockerfiles by analyzing GitHub repositories. Simply paste a GitHub URL and get a tailored Dockerfile with intelligent base image selection, dependency management, and Docker best practices.\n\n## 🌟 Quick Access\n\nSimply replace `github.com` with `gitcontainer.com` in any GitHub repository URL to instantly access the Dockerfile generation page for that repository.\n\nFor example:\n```\nhttps://github.com/username/repo  →  https://gitcontainer.com/username/repo\n```\n\n## ✨ Features\n\n- **🔄 Instant URL Access**: Just replace 'github.com' with 'gitcontainer.com' in any GitHub URL\n- **🤖 AI-Powered Analysis**: Uses OpenAI GPT-4 to analyze repository structure and generate intelligent Dockerfiles\n- **⚡ Real-time Streaming**: Watch the AI generate your Dockerfile in real-time with WebSocket streaming\n- **🎯 Smart Detection**: Automatically detects technology stacks (Python, Node.js, Java, Go, etc.)\n- **🔧 Production-Ready**: Generates Dockerfiles following best practices with proper security, multi-stage builds, and optimization\n- **📋 Additional Instructions**: Add custom requirements for specialized environments\n- **📄 Docker Compose**: Automatically suggests docker-compose.yml for complex applications\n- **🎨 Modern UI**: Clean, responsive interface with Monaco editor for syntax highlighting\n- **📱 Mobile Friendly**: Works seamlessly on desktop and mobile devices\n\n## 🚀 Quick Start\n\n### Prerequisites\n\n- Python 3.9 or higher\n- Git\n- OpenAI API key\n\n### Installation\n\n1. **Clone the repository:**\n   ```bash\n   git clone https://github.com/cyclotruc/gitcontainer.git\n   cd gitcontainer\n   ```\n\n2. **Install dependencies:**\n   ```bash\n   pip install -r requirements.txt\n   ```\n\n3. **Set up environment variables:**\n   ```bash\n   # Create .env file\n   echo \"OPENAI_API_KEY=your_openai_api_key_here\" > .env\n   ```\n\n4. **Run the application:**\n   ```bash\n   python app.py\n   ```\n\n5. **Open your browser:**\n   Navigate to `http://localhost:8000`\n\n## 🛠️ How It Works\n\n1. **URL Processing**: Access any repository by replacing 'github.com' with 'gitcontainer.com' in the URL\n2. **Repository Cloning**: Gitcontainer clones the GitHub repository locally using Git\n3. **Code Analysis**: Uses [gitingest](https://github.com/cyclotruc/gitingest) to analyze the repository structure and extract relevant information\n4. **AI Generation**: Sends the analysis to OpenAI GPT-4 with specialized prompts for Dockerfile generation\n5. **Smart Optimization**: The AI considers:\n   - Technology stack detection\n   - Dependency management\n   - Security best practices\n   - Multi-stage builds when beneficial\n   - Port configuration\n   - Environment variables\n   - Health checks\n\n## 📁 Project Structure\n\n```\ncyclotruc-gitcontainer/\n├── app.py                 # Main FastAPI application\n├── requirements.txt       # Python dependencies\n├── .env                  # Environment variables (create this)\n├── static/               # Static assets (icons, CSS)\n├── templates/\n│   └── index.jinja       # Main HTML template\n└── tools/                # Core functionality modules\n    ├── __init__.py\n    ├── create_container.py  # AI Dockerfile generation\n    ├── git_operations.py    # GitHub repository cloning\n    └── gitingest.py        # Repository analysis\n```\n",
  "origin_sha": "2Kx7T2O6AIyfCMQIH5hRrimkSCQb/noMCAe+9k5GlBM=",
  "translate": "![Gitcontainer](https://raw.githubusercontent.com/cyclotruc/gitcontainer/main/docs/image.png)\n\n# Gitcontainer 🐳\n\n**모든 GitHub 저장소를 AI 기반 Dockerfile 생성으로 프로덕션 준비가 완료된 Docker 컨테이너로 변환하세요.**\n\n[![MIT License](https://img.shields.io/badge/License-MIT-green.svg)](https://choosealicense.com/licenses/mit/)\n[![Python 3.9+](https://img.shields.io/badge/python-3.9+-blue.svg)](https://www.python.org/downloads/)\n[![FastAPI](https://img.shields.io/badge/FastAPI-0.68+-00a393.svg)](https://fastapi.tiangolo.com/)\n\nGitcontainer는 GitHub 저장소를 분석하여 프로덕션 환경에 적합한 Dockerfile을 자동으로 생성하는 AI 기반 웹 애플리케이션입니다. GitHub URL을 붙여넣기만 하면, 지능적인 베이스 이미지 선택, 의존성 관리, Docker 모범 사례가 적용된 맞춤형 Dockerfile을 얻을 수 있습니다.\n\n## 🌟 빠른 접근\n\n어떤 GitHub 저장소 URL이든 `github.com`을 `gitcontainer.com`으로 바꿔 입력하면 해당 저장소의 Dockerfile 생성 페이지로 즉시 이동합니다.\n\n예시:\n```\nhttps://github.com/username/repo  →  https://gitcontainer.com/username/repo\n```\n\n## ✨ 주요 기능\n\n- **🔄 즉시 URL 접근**: 모든 GitHub URL에서 'github.com'을 'gitcontainer.com'으로만 교체\n- **🤖 AI 기반 분석**: OpenAI GPT-4를 사용하여 저장소 구조를 분석하고 지능적인 Dockerfile 생성\n- **⚡ 실시간 스트리밍**: WebSocket 스트리밍으로 AI가 Dockerfile을 생성하는 과정을 실시간으로 확인\n- **🎯 스마트 감지**: 기술 스택 자동 감지(Python, Node.js, Java, Go 등)\n- **🔧 프로덕션 준비**: 보안, 멀티스테이지 빌드, 최적화 등 Docker 모범 사례를 적용한 Dockerfile 생성\n- **📋 추가 지시사항**: 특수 환경을 위한 사용자 정의 요구사항 추가 가능\n- **📄 Docker Compose**: 복잡한 애플리케이션에 대해 docker-compose.yml 자동 제안\n- **🎨 현대적 UI**: 구문 강조를 위한 Monaco 에디터가 적용된 깔끔하고 반응형 인터페이스\n- **📱 모바일 친화적**: 데스크톱과 모바일에서 모두 원활하게 작동\n\n## 🚀 빠른 시작\n\n### 사전 준비 사항\n\n- Python 3.9 이상\n- Git\n- OpenAI API 키\n\n### 설치 방법\n\n1. **저장소 클론:**\n   ```bash\n   git clone https://github.com/cyclotruc/gitcontainer.git\n   cd gitcontainer\n   ```\n\n2. **의존성 설치:**\n   ```bash\n   pip install -r requirements.txt\n   ```\n\n3. **환경 변수 설정:**\n   ```bash\n   # .env 파일 생성\n   echo \"OPENAI_API_KEY=your_openai_api_key_here\" > .env\n   ```\n\n4. **애플리케이션 실행:**\n   ```bash\n   python app.py\n   ```\n\n5. **브라우저 열기:**\n   `http://localhost:8000`으로 이동\n\n## 🛠️ 작동 방식\n\n1. **URL 처리**: URL에서 'github.com'을 'gitcontainer.com'으로 바꿔 저장소에 접근\n2. **저장소 클론**: Gitcontainer가 Git을 이용해 해당 GitHub 저장소를 로컬로 클론\n3. **코드 분석**: [gitingest](https://github.com/cyclotruc/gitingest)를 사용해 저장소 구조 분석 및 관련 정보 추출\n4. **AI 생성**: 분석 결과를 OpenAI GPT-4에 전달하여 Dockerfile 생성에 특화된 프롬프트로 요청\n5. **스마트 최적화**: AI가 다음 항목을 고려하여 생성\n   - 기술 스택 감지\n   - 의존성 관리\n   - 보안 모범 사례\n   - 멀티스테이지 빌드 활용\n   - 포트 설정\n   - 환경 변수\n   - 헬스 체크\n\n## 📁 프로젝트 구조\n\n```\ncyclotruc-gitcontainer/\n├── app.py                 # FastAPI 메인 애플리케이션\n├── requirements.txt       # Python 의존성 목록\n├── .env                  # 환경 변수 파일(직접 생성)\n├── static/               # 정적 에셋(아이콘, CSS)\n├── templates/\n│   └── index.jinja       # 메인 HTML 템플릿\n└── tools/                # 핵심 기능 모듈\n    ├── __init__.py\n    ├── create_container.py  # AI Dockerfile 생성\n    ├── git_operations.py    # GitHub 저장소 클론\n    └── gitingest.py        # 저장소 분석\n```\n",
  "status": "ok"
}