{
  "id": 2,
  "origin": "## üîß Configuration\n\n### Environment Variables\n\n| Variable | Description | Required |\n|----------|-------------|----------|\n| `OPENAI_API_KEY` | Your OpenAI API key | Yes |\n| `PORT` | Server port (default: 8000) | No |\n| `HOST` | Server host (default: 0.0.0.0) | No |\n\n### Advanced Usage\n\nYou can use the tools programmatically:\n\n```python\nfrom tools import clone_repo_tool, gitingest_tool, create_container_tool\nimport asyncio\n\nasync def generate_dockerfile(github_url):\n    # Clone repository\n    clone_result = await clone_repo_tool(github_url)\n    \n    # Analyze with gitingest\n    analysis = await gitingest_tool(clone_result['local_path'])\n    \n    # Generate Dockerfile\n    dockerfile = await create_container_tool(\n        gitingest_summary=analysis['summary'],\n        gitingest_tree=analysis['tree'],\n        gitingest_content=analysis['content']\n    )\n    \n    return dockerfile\n\n# Usage\nresult = asyncio.run(generate_dockerfile(\"https://github.com/user/repo\"))\nprint(result['dockerfile'])\n```\n\n## üé® Customization\n\n### Adding Custom Instructions\n\nUse the \"Additional instructions\" feature to customize generation:\n\n- `\"Use Alpine Linux for smaller image size\"`\n- `\"Include Redis and PostgreSQL\"`\n- `\"Optimize for production deployment\"`\n- `\"Add development tools for debugging\"`\n\n## üìù License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## üôè Acknowledgments\n\n- **[OpenAI](https://openai.com/)** for providing the GPT-4 API\n- **[gitingest](https://github.com/cyclotruc/gitingest)** for repository analysis capabilities\n- **[FastAPI](https://fastapi.tiangolo.com/)** for the excellent web framework\n- **[Monaco Editor](https://microsoft.github.io/monaco-editor/)** for code syntax highlighting\n\n## üîó Links\n\n- **GitHub Repository**: [https://github.com/cyclotruc/gitcontainer](https://github.com/cyclotruc/gitcontainer)\n- **Demo**: Try it live with example repositories\n- **Issues**: [Report bugs or request features](https://github.com/cyclotruc/gitcontainer/issues)\n\n---\n\n**Made with ‚ù§Ô∏è by [Romain Courtois](https://github.com/cyclotruc)**\n\n*Turn any repository into a container in seconds!*",
  "origin_sha": "3JQ1X9vch4E/c8oWTX7bz47yaMLKRFr/2Tcnh9fXVCk=",
  "translate": "## üîß C·∫•u h√¨nh\n\n### Bi·∫øn M√¥i Tr∆∞·ªùng\n\n| Bi·∫øn      | M√¥ t·∫£                            | B·∫Øt bu·ªôc |\n|-----------|----------------------------------|----------|\n| `OPENAI_API_KEY` | Kh√≥a API OpenAI c·ªßa b·∫°n           | C√≥       |\n| `PORT`    | C·ªïng m√°y ch·ªß (m·∫∑c ƒë·ªãnh: 8000)    | Kh√¥ng    |\n| `HOST`    | ƒê·ªãa ch·ªâ m√°y ch·ªß (m·∫∑c ƒë·ªãnh: 0.0.0.0) | Kh√¥ng |\n\n### S·ª≠ D·ª•ng N√¢ng Cao\n\nB·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng c√°c c√¥ng c·ª• b·∫±ng m√£ l·∫≠p tr√¨nh:\n\n```python\nfrom tools import clone_repo_tool, gitingest_tool, create_container_tool\nimport asyncio\n\nasync def generate_dockerfile(github_url):\n    # Sao ch√©p kho l∆∞u tr·ªØ\n    clone_result = await clone_repo_tool(github_url)\n    \n    # Ph√¢n t√≠ch v·ªõi gitingest\n    analysis = await gitingest_tool(clone_result['local_path'])\n    \n    # T·∫°o Dockerfile\n    dockerfile = await create_container_tool(\n        gitingest_summary=analysis['summary'],\n        gitingest_tree=analysis['tree'],\n        gitingest_content=analysis['content']\n    )\n    \n    return dockerfile\n\n# S·ª≠ d·ª•ng\nresult = asyncio.run(generate_dockerfile(\"https://github.com/user/repo\"))\nprint(result['dockerfile'])\n```\n\n## üé® T√πy bi·∫øn\n\n### Th√™m H∆∞·ªõng D·∫´n T√πy Ch·ªânh\n\nS·ª≠ d·ª•ng t√≠nh nƒÉng \"Additional instructions\" ƒë·ªÉ t√πy ch·ªânh qu√° tr√¨nh t·∫°o:\n\n- `\"S·ª≠ d·ª•ng Alpine Linux ƒë·ªÉ gi·∫£m k√≠ch th∆∞·ªõc image\"`\n- `\"Bao g·ªìm Redis v√† PostgreSQL\"`\n- `\"T·ªëi ∆∞u h√≥a cho tri·ªÉn khai m√¥i tr∆∞·ªùng s·∫£n xu·∫•t\"`\n- `\"Th√™m c√°c c√¥ng c·ª• ph√°t tri·ªÉn ƒë·ªÉ g·ª° l·ªói\"`\n\n## üìù Gi·∫•y ph√©p\n\nD·ª± √°n n√†y ƒë∆∞·ª£c c·∫•p ph√©p theo MIT License - xem t·ªáp [LICENSE](LICENSE) ƒë·ªÉ bi·∫øt chi ti·∫øt.\n\n## üôè L·ªùi c·∫£m ∆°n\n\n- **[OpenAI](https://openai.com/)** ƒë√£ cung c·∫•p API GPT-4\n- **[gitingest](https://github.com/cyclotruc/gitingest)** cho kh·∫£ nƒÉng ph√¢n t√≠ch kho l∆∞u tr·ªØ\n- **[FastAPI](https://fastapi.tiangolo.com/)** cho framework web xu·∫•t s·∫Øc\n- **[Monaco Editor](https://microsoft.github.io/monaco-editor/)** cho t√≠nh nƒÉng t√¥ m√†u c√∫ ph√°p m√£ ngu·ªìn\n\n## üîó Li√™n k·∫øt\n\n- **Kho l∆∞u tr·ªØ GitHub**: [https://github.com/cyclotruc/gitcontainer](https://github.com/cyclotruc/gitcontainer)\n- **Demo**: D√πng th·ª≠ tr·ª±c ti·∫øp v·ªõi c√°c kho l∆∞u tr·ªØ m·∫´u\n- **V·∫•n ƒë·ªÅ**: [B√°o l·ªói ho·∫∑c y√™u c·∫ßu t√≠nh nƒÉng](https://github.com/cyclotruc/gitcontainer/issues)\n\n---\n\n**ƒê∆∞·ª£c t·∫°o v·ªõi ‚ù§Ô∏è b·ªüi [Romain Courtois](https://github.com/cyclotruc)**\n\n*Bi·∫øn b·∫•t k·ª≥ kho l∆∞u tr·ªØ n√†o th√†nh container ch·ªâ trong v√†i gi√¢y!*",
  "status": "ok"
}