{
  "id": 1,
  "origin": "# Spegel – Reflect the web through AI\n\nAutomatically rewrites the websites into markdown optimised for viewing in the terminal.\nRead intro blog post [here](https://simedw.com/2025/06/23/introducing-spegel/)\n\nThis is a proof-of-concept, bugs are to be expected but feel free to raise an issue or pull request.\n\n##  Screenshot\nSometimes you don't want to read through someone's life story just to get to a recipe\n![Recipe Example](https://simedw.com/2025/06/23/introducing-spegel/images/recipe_example.png)\n\n\n## Installation\n\nRequires Python 3.11+\n\n```\npip install spegel\n```\nor clone the repo and install it editable mode\n\n```bash\n# Clone and enter the directory\n$ git clone <repo-url>\n$ cd spegel\n\n# Install dependencies and the CLI\n$ pip install -e .\n```\n\n## API Keys\nSpegel is currently only support Gemini 2.5 Flash, to use it you need to provide your API key in the env\n\n```\nGEMINI_API_KEY=...\n```\n\n\n## Usage\n\n### Launch the browser\n\n```bash\nspegel                # Start with welcome screen\nspegel bbc.com        # Open a URL immediately\n```\n\nOr, equivalently:\n\n```bash\npython -m spegel      # Start with welcome screen\npython -m spegel bbc.com\n```\n\n### Basic controls\n- `/`         – Open URL input\n- `Tab`/`Shift+Tab` – Cycle links\n- `Enter`     – Open selected link\n- `e`         – Edit LLM prompt for current view\n- `b`         – Go back\n- `q`         – Quit\n\n## Editing settings\n\nSpegel loads settings from a TOML config file. You can customize views, prompts, and UI options.\n\n**Config file search order:**\n1. `./.spegel.toml` (current directory)\n2. `~/.spegel.toml`\n3. `~/.config/spegel/config.toml`\n\nTo edit settings:\n1. Copy the example config:\n   ```bash\n   cp example_config.toml .spegel.toml\n   # or create ~/.spegel.toml\n   ```\n2. Edit `.spegel.toml` in your favorite editor.\n\nExample snippet:\n```toml\n[settings]\ndefault_view = \"terminal\"\napp_title = \"Spegel\"\n\n[[views]]\nid = \"raw\"\nname = \"Raw View\"\nprompt = \"\"\n\n[[views]]\nid = \"terminal\"\nname = \"Terminal\"\nprompt = \"Transform this webpage into the perfect terminal browsing experience! ...\"\n```\n\n---\n\nFor more, see the code or open an issue!\n",
  "origin_sha": "A924GMaD+MTBrT3EcaDxJXtVHlP6OOmrn+tQIZcENvU=",
  "translate": "# Spegel – AI를 통한 웹 반영\n\n웹사이트를 자동으로 마크다운으로 변환하여 터미널에서 최적화된 형태로 보여줍니다.  \n소개 블로그 글은 [여기](https://simedw.com/2025/06/23/introducing-spegel/)에서 읽어보세요.\n\n이 프로젝트는 개념 증명(proof-of-concept) 단계이며, 버그가 있을 수 있습니다. 이슈나 풀 리퀘스트는 언제든 환영합니다.\n\n##  스크린샷\n때로는 누군가의 인생 이야기를 읽지 않고도 레시피에 바로 접근하고 싶을 때가 있습니다  \n![Recipe Example](https://simedw.com/2025/06/23/introducing-spegel/images/recipe_example.png)\n\n## 설치\n\nPython 3.11 이상이 필요합니다.\n\n```\npip install spegel\n```\n또는 저장소를 클론하여 editable 모드로 설치할 수 있습니다.\n\n```bash\n# 저장소를 클론하고 디렉토리로 이동\n$ git clone <repo-url>\n$ cd spegel\n\n# 의존성과 CLI 설치\n$ pip install -e .\n```\n\n## API 키\nSpegel은 현재 Gemini 2.5 Flash만 지원합니다. 사용하려면 환경 변수에 API 키를 제공해야 합니다.\n\n```\nGEMINI_API_KEY=...\n```\n\n## 사용법\n\n### 브라우저 실행\n\n```bash\nspegel                # 시작 화면으로 실행\nspegel bbc.com        # 즉시 URL 열기\n```\n\n또는, 다음과 같이 사용할 수도 있습니다:\n\n```bash\npython -m spegel      # 시작 화면으로 실행\npython -m spegel bbc.com\n```\n\n### 기본 컨트롤\n- `/`         – URL 입력창 열기\n- `Tab`/`Shift+Tab` – 링크 순환\n- `Enter`     – 선택한 링크 열기\n- `e`         – 현재 보기의 LLM 프롬프트 편집\n- `b`         – 뒤로 가기\n- `q`         – 종료\n\n## 설정 편집\n\nSpegel은 TOML 구성 파일에서 설정을 불러옵니다. 뷰, 프롬프트, UI 옵션을 커스터마이즈할 수 있습니다.\n\n**설정 파일 검색 순서:**  \n1. `./.spegel.toml` (현재 디렉토리)\n2. `~/.spegel.toml`\n3. `~/.config/spegel/config.toml`\n\n설정을 편집하려면:  \n1. 예시 구성 파일 복사:\n   ```bash\n   cp example_config.toml .spegel.toml\n   # 또는 ~/.spegel.toml 생성\n   ```\n2. 선호하는 편집기로 `.spegel.toml` 파일을 편집하세요.\n\n예시 스니펫:\n```toml\n[settings]\ndefault_view = \"terminal\"\napp_title = \"Spegel\"\n\n[[views]]\nid = \"raw\"\nname = \"Raw View\"\nprompt = \"\"\n\n[[views]]\nid = \"terminal\"\nname = \"Terminal\"\nprompt = \"Transform this webpage into the perfect terminal browsing experience! ...\"\n```\n\n---\n\n자세한 내용은 코드 참고 또는 이슈를 남겨주세요!",
  "status": "ok"
}