{
  "id": 1,
  "origin": "# Spegel – Reflect the web through AI\n\nAutomatically rewrites the websites into markdown optimised for viewing in the terminal.\nRead intro blog post [here](https://simedw.com/2025/06/23/introducing-spegel/)\n\nThis is a proof-of-concept, bugs are to be expected but feel free to raise an issue or pull request.\n\n##  Screenshot\nSometimes you don't want to read through someone's life story just to get to a recipe\n![Recipe Example](https://simedw.com/2025/06/23/introducing-spegel/images/recipe_example.png)\n\n\n## Installation\n\nRequires Python 3.11+\n\n```\npip install spegel\n```\nor clone the repo and install it editable mode\n\n```bash\n# Clone and enter the directory\n$ git clone <repo-url>\n$ cd spegel\n\n# Install dependencies and the CLI\n$ pip install -e .\n```\n\n## API Keys\nSpegel is currently only support Gemini 2.5 Flash, to use it you need to provide your API key in the env\n\n```\nGEMINI_API_KEY=...\n```\n\n\n## Usage\n\n### Launch the browser\n\n```bash\nspegel                # Start with welcome screen\nspegel bbc.com        # Open a URL immediately\n```\n\nOr, equivalently:\n\n```bash\npython -m spegel      # Start with welcome screen\npython -m spegel bbc.com\n```\n\n### Basic controls\n- `/`         – Open URL input\n- `Tab`/`Shift+Tab` – Cycle links\n- `Enter`     – Open selected link\n- `e`         – Edit LLM prompt for current view\n- `b`         – Go back\n- `q`         – Quit\n\n## Editing settings\n\nSpegel loads settings from a TOML config file. You can customize views, prompts, and UI options.\n\n**Config file search order:**\n1. `./.spegel.toml` (current directory)\n2. `~/.spegel.toml`\n3. `~/.config/spegel/config.toml`\n\nTo edit settings:\n1. Copy the example config:\n   ```bash\n   cp example_config.toml .spegel.toml\n   # or create ~/.spegel.toml\n   ```\n2. Edit `.spegel.toml` in your favorite editor.\n\nExample snippet:\n```toml\n[settings]\ndefault_view = \"terminal\"\napp_title = \"Spegel\"\n\n[[views]]\nid = \"raw\"\nname = \"Raw View\"\nprompt = \"\"\n\n[[views]]\nid = \"terminal\"\nname = \"Terminal\"\nprompt = \"Transform this webpage into the perfect terminal browsing experience! ...\"\n```\n\n---\n\nFor more, see the code or open an issue!\n",
  "origin_sha": "A924GMaD+MTBrT3EcaDxJXtVHlP6OOmrn+tQIZcENvU=",
  "translate": "# Spegel – Reflektiere das Web durch KI\n\nSchreibt Webseiten automatisch in Markdown um, optimiert für die Anzeige im Terminal.\nEinführenden Blogbeitrag [hier lesen](https://simedw.com/2025/06/23/introducing-spegel/)\n\nDies ist ein Proof-of-Concept, Fehler sind zu erwarten, aber du kannst gerne ein Issue erstellen oder einen Pull Request stellen.\n\n## Screenshot\nManchmal möchte man nicht die ganze Lebensgeschichte von jemandem lesen, nur um an ein Rezept zu kommen\n![Rezeptbeispiel](https://simedw.com/2025/06/23/introducing-spegel/images/recipe_example.png)\n\n## Installation\n\nBenötigt Python 3.11+\n\n```\npip install spegel\n```\noder klone das Repository und installiere es im Editiermodus\n\n```bash\n# Klonen und Verzeichnis betreten\n$ git clone <repo-url>\n$ cd spegel\n\n# Abhängigkeiten und CLI installieren\n$ pip install -e .\n```\n\n## API-Schlüssel\nSpegel unterstützt derzeit nur Gemini 2.5 Flash. Um es zu nutzen, musst du deinen API-Schlüssel in der Umgebung bereitstellen\n\n```\nGEMINI_API_KEY=...\n```\n\n## Verwendung\n\n### Browser starten\n\n```bash\nspegel                # Startet mit dem Begrüßungsbildschirm\nspegel bbc.com        # Öffnet sofort eine URL\n```\n\nOder, gleichwertig:\n\n```bash\npython -m spegel      # Startet mit dem Begrüßungsbildschirm\npython -m spegel bbc.com\n```\n\n### Grundlegende Steuerung\n- `/`         – URL-Eingabe öffnen\n- `Tab`/`Shift+Tab` – Links durchlaufen\n- `Enter`     – Ausgewählten Link öffnen\n- `e`         – LLM-Prompt für aktuelle Ansicht bearbeiten\n- `b`         – Zurückgehen\n- `q`         – Beenden\n\n## Einstellungen bearbeiten\n\nSpegel lädt Einstellungen aus einer TOML-Konfigurationsdatei. Du kannst Ansichten, Prompts und UI-Optionen anpassen.\n\n**Reihenfolge der Konfigurationsdatei-Suche:**\n1. `./.spegel.toml` (aktuelles Verzeichnis)\n2. `~/.spegel.toml`\n3. `~/.config/spegel/config.toml`\n\nUm Einstellungen zu bearbeiten:\n1. Beispielkonfiguration kopieren:\n   ```bash\n   cp example_config.toml .spegel.toml\n   # oder erstelle ~/.spegel.toml\n   ```\n2. Bearbeite `.spegel.toml` in deinem bevorzugten Editor.\n\nBeispiel-Ausschnitt:\n```toml\n[settings]\ndefault_view = \"terminal\"\napp_title = \"Spegel\"\n\n[[views]]\nid = \"raw\"\nname = \"Raw View\"\nprompt = \"\"\n\n[[views]]\nid = \"terminal\"\nname = \"Terminal\"\nprompt = \"Transformiere diese Webseite in das perfekte Terminal-Browsing-Erlebnis! ...\"\n```\n\n---\n\nFür mehr Informationen sieh dir den Code an oder öffne ein Issue!",
  "status": "ok"
}