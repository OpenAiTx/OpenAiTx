{
  "id": 1,
  "origin": "# üé∂ ThinkSound\n\n<p align=\"center\">\n  If you find this project useful, a star ‚≠ê on GitHub would be greatly appreciated!\n</p>\n\n<p align=\"center\">\n  <a href=\"https://arxiv.org/pdf/2506.21448\">\n    <img src=\"https://img.shields.io/badge/arXiv-2506.21448-b31b1b.svg\" alt=\"arXiv\"/>\n  </a>\n  &nbsp;\n  <a href=\"https://thinksound-project.github.io/\">\n    <img src=\"https://img.shields.io/badge/Online%20Demo-üåê-blue\" alt=\"Online Demo\"/>\n  </a>\n  &nbsp;\n  <a href=\"https://huggingface.co/spaces/FunAudioLLM/ThinkSound\">\n    <img src=\"https://img.shields.io/badge/HuggingFace-Spaces-orange?logo=huggingface\" alt=\"Hugging Face\"/>\n  </a>\n  &nbsp;\n  <a href=\"https://modelscope.cn/studios/iic/ThinkSound\">\n    <img src=\"https://img.shields.io/badge/ModelScope-Âú®Á∫ø‰ΩìÈ™å-green\" alt=\"ModelScope\"/>\n  </a>\n</p>\n\n---\n\n**ThinkSound** is a unified Any2Audio generation framework with flow matching guided by Chain-of-Thought (CoT) reasoning.\n\nPyTorch implementation for multimodal audio generation and editing: generate or edit audio from video, text, and audio, powered by step-by-step reasoning from Multimodal Large Language Models (MLLMs).\n\n![Teaser](https://raw.githubusercontent.com/FunAudioLLM/ThinkSound/master/assets/figs/fig1_teaser.png)\n---\n\n## üì∞ News\n- **2025.07** &nbsp; üî•Online demo on [Hugging Face Spaces](https://huggingface.co/spaces/FunAudioLLM/ThinkSound) and [ModelScope](https://modelscope.cn/studios/iic/ThinkSound) for interactive experience!\n- **2025.07** &nbsp; üî•Released inference scripts and web interface; \n- **2025.06** &nbsp; üî•[ThinkSound paper](https://arxiv.org/pdf/2506.21448) released on arXiv!\n- **2025.06** &nbsp; üî•[Online Demo](http://thinksound-project.github.io/) is live - try it now!\n\n---\n\n## üöÄ Features\n\n- **Any2Audio**: Generate audio from arbitrary modalities ‚Äî video, text, audio, or their combinations.\n- **Video-to-Audio SOTA**: Achieves state-of-the-art results on multiple V2A benchmarks.\n- **CoT-Driven Reasoning**: Chain-of-Thought reasoning for compositional and controllable audio generation via MLLMs.\n- **Interactive Object-centric Editing**: Refine or edit specific sound events by clicking on visual objects or using text instructions.\n- **Unified Framework**: One foundation model supports generation, editing, and interactive workflow.\n\n---\n\n## ‚ú® Method Overview\n\nThinkSound decomposes audio generation and editing into three interactive stages, all guided by MLLM-based Chain-of-Thought (CoT) reasoning:\n\n1. **Foley Generation:** Generate foundational, semantically and temporally aligned soundscapes from video.\n2. **Object-Centric Refinement:** Refine or add sounds for user-specified objects via clicks or regions in the video.\n3. **Targeted Audio Editing:** Modify generated audio using high-level natural language instructions.\n\n![ThinkSound Overview](https://raw.githubusercontent.com/FunAudioLLM/ThinkSound/master/assets/figs/fig3_model.png)\n<!-- A large-scale CoT-annotated dataset (**AudioCoT**) is used to train both the reasoning module and the unified audio foundation model.\n![AudioCoT Pipeline](https://raw.githubusercontent.com/FunAudioLLM/ThinkSound/master/assets/figs/fig2_dataset.png) -->\n\n---\n\n## ‚ö° Quick Start\n\n**Environment Preparation:**\n```bash\ngit clone https://github.com/liuhuadai/ThinkSound.git\ncd ThinkSound\npip install -r requirements.txt\nconda install -y -c conda-forge 'ffmpeg<7'\n# Download pretrained weights https://huggingface.co/liuhuadai/ThinkSound to Directory ckpts/\n# model weights can be also downloaded from https://www.modelscope.cn/models/iic/ThinkSound\ngit lfs install\ngit clone https://huggingface.co/liuhuadai/ThinkSound ckpts\n```\n\n**Make it executable**\n```bash\nchmod +x scripts/demo.sh\n```\n\n**Run the script**\n```bash\n./scripts/demo.sh <video_path> <caption> <CoT description>\n```\n\n\n### Web Interface Usage\n\nFor an interactive experience, launch the Gradio web interface:\n\n```bash\npython app.py\n```\n\n---\n",
  "origin_sha": "vYi4X/38TyDFihDOfSBGZIgKnu2bd0a73Iz5+m+7pd0=",
  "translate": "# üé∂ ThinkSound\n\n<p align=\"center\">\n  Se voc√™ achar este projeto √∫til, uma estrela ‚≠ê no GitHub ser√° muito apreciada!\n</p>\n\n<p align=\"center\">\n  <a href=\"https://arxiv.org/pdf/2506.21448\">\n    <img src=\"https://img.shields.io/badge/arXiv-2506.21448-b31b1b.svg\" alt=\"arXiv\"/>\n  </a>\n  &nbsp;\n  <a href=\"https://thinksound-project.github.io/\">\n    <img src=\"https://img.shields.io/badge/Online%20Demo-üåê-blue\" alt=\"Online Demo\"/>\n  </a>\n  &nbsp;\n  <a href=\"https://huggingface.co/spaces/FunAudioLLM/ThinkSound\">\n    <img src=\"https://img.shields.io/badge/HuggingFace-Spaces-orange?logo=huggingface\" alt=\"Hugging Face\"/>\n  </a>\n  &nbsp;\n  <a href=\"https://modelscope.cn/studios/iic/ThinkSound\">\n    <img src=\"https://img.shields.io/badge/ModelScope-Âú®Á∫ø‰ΩìÈ™å-green\" alt=\"ModelScope\"/>\n  </a>\n</p>\n\n---\n\n**ThinkSound** √© uma estrutura unificada de gera√ß√£o Any2Audio com correspond√™ncia de fluxo guiada por racioc√≠nio Chain-of-Thought (CoT).\n\nImplementa√ß√£o em PyTorch para gera√ß√£o e edi√ß√£o de √°udio multimodal: gere ou edite √°udio a partir de v√≠deo, texto e √°udio, impulsionado por racioc√≠nio passo a passo de Grandes Modelos de Linguagem Multimodal (MLLMs).\n\n![Teaser](https://raw.githubusercontent.com/FunAudioLLM/ThinkSound/master/assets/figs/fig1_teaser.png)\n---\n\n## üì∞ Novidades\n- **2025.07** &nbsp; üî•Demo online em [Hugging Face Spaces](https://huggingface.co/spaces/FunAudioLLM/ThinkSound) e [ModelScope](https://modelscope.cn/studios/iic/ThinkSound) para experi√™ncia interativa!\n- **2025.07** &nbsp; üî•Scripts de infer√™ncia e interface web lan√ßados;\n- **2025.06** &nbsp; üî•[Artigo ThinkSound](https://arxiv.org/pdf/2506.21448) publicado no arXiv!\n- **2025.06** &nbsp; üî•[Demo Online](http://thinksound-project.github.io/) dispon√≠vel - experimente agora!\n\n---\n\n## üöÄ Funcionalidades\n\n- **Any2Audio**: Gere √°udio a partir de modalidades arbitr√°rias ‚Äî v√≠deo, texto, √°udio ou suas combina√ß√µes.\n- **Video-to-Audio SOTA**: Alcan√ßa resultados de ponta em m√∫ltiplos benchmarks V2A.\n- **Racioc√≠nio CoT-Driven**: Racioc√≠nio Chain-of-Thought para gera√ß√£o de √°udio composicional e control√°vel via MLLMs.\n- **Edi√ß√£o Interativa Centrada em Objetos**: Refine ou edite eventos sonoros espec√≠ficos clicando em objetos visuais ou usando instru√ß√µes de texto.\n- **Estrutura Unificada**: Um modelo de base suporta gera√ß√£o, edi√ß√£o e fluxo de trabalho interativo.\n\n---\n\n## ‚ú® Vis√£o Geral do M√©todo\n\nThinkSound decomp√µe a gera√ß√£o e edi√ß√£o de √°udio em tr√™s etapas interativas, todas guiadas por racioc√≠nio Chain-of-Thought (CoT) baseado em MLLM:\n\n1. **Gera√ß√£o Foley:** Gera√ß√£o de paisagens sonoras fundamentais, semanticamente e temporalmente alinhadas a partir do v√≠deo.\n2. **Refinamento Centrado em Objetos:** Refine ou adicione sons para objetos especificados pelo usu√°rio via cliques ou regi√µes no v√≠deo.\n3. **Edi√ß√£o de √Åudio Direcionada:** Modifique o √°udio gerado usando instru√ß√µes em linguagem natural de alto n√≠vel.\n\n![ThinkSound Overview](https://raw.githubusercontent.com/FunAudioLLM/ThinkSound/master/assets/figs/fig3_model.png)\n<!-- Um conjunto de dados em larga escala anotado com CoT (**AudioCoT**) √© usado para treinar tanto o m√≥dulo de racioc√≠nio quanto o modelo de base de √°udio unificado.\n![AudioCoT Pipeline](https://raw.githubusercontent.com/FunAudioLLM/ThinkSound/master/assets/figs/fig2_dataset.png) -->\n\n---\n\n## ‚ö° In√≠cio R√°pido\n\n**Prepara√ß√£o do Ambiente:**\n```bash\ngit clone https://github.com/liuhuadai/ThinkSound.git\ncd ThinkSound\npip install -r requirements.txt\nconda install -y -c conda-forge 'ffmpeg<7'\n# Baixe os pesos pr√©-treinados em https://huggingface.co/liuhuadai/ThinkSound para o diret√≥rio ckpts/\n# Os pesos do modelo tamb√©m podem ser baixados de https://www.modelscope.cn/models/iic/ThinkSound\ngit lfs install\ngit clone https://huggingface.co/liuhuadai/ThinkSound ckpts\n```\n\n**Torne execut√°vel**\n```bash\nchmod +x scripts/demo.sh\n```\n\n**Execute o script**\n```bash\n./scripts/demo.sh <video_path> <caption> <CoT description>\n```\n\n\n### Uso da Interface Web\n\nPara uma experi√™ncia interativa, inicie a interface web Gradio:\n\n```bash\npython app.py\n```\n\n---",
  "status": "ok"
}