{
  "id": 1,
  "origin": "# 🎶 ThinkSound\n\n<p align=\"center\">\n  If you find this project useful, a star ⭐ on GitHub would be greatly appreciated!\n</p>\n\n<p align=\"center\">\n  <a href=\"https://arxiv.org/pdf/2506.21448\">\n    <img src=\"https://img.shields.io/badge/arXiv-2506.21448-b31b1b.svg\" alt=\"arXiv\"/>\n  </a>\n  &nbsp;\n  <a href=\"https://thinksound-project.github.io/\">\n    <img src=\"https://img.shields.io/badge/Online%20Demo-🌐-blue\" alt=\"Online Demo\"/>\n  </a>\n  &nbsp;\n  <a href=\"https://huggingface.co/spaces/FunAudioLLM/ThinkSound\">\n    <img src=\"https://img.shields.io/badge/HuggingFace-Spaces-orange?logo=huggingface\" alt=\"Hugging Face\"/>\n  </a>\n  &nbsp;\n  <a href=\"https://modelscope.cn/studios/iic/ThinkSound\">\n    <img src=\"https://img.shields.io/badge/ModelScope-在线体验-green\" alt=\"ModelScope\"/>\n  </a>\n</p>\n\n---\n\n**ThinkSound** is a unified Any2Audio generation framework with flow matching guided by Chain-of-Thought (CoT) reasoning.\n\nPyTorch implementation for multimodal audio generation and editing: generate or edit audio from video, text, and audio, powered by step-by-step reasoning from Multimodal Large Language Models (MLLMs).\n\n![Teaser](https://raw.githubusercontent.com/FunAudioLLM/ThinkSound/master/assets/figs/fig1_teaser.png)\n---\n\n## 📰 News\n- **2025.07** &nbsp; 🔥Online demo on [Hugging Face Spaces](https://huggingface.co/spaces/FunAudioLLM/ThinkSound) and [ModelScope](https://modelscope.cn/studios/iic/ThinkSound) for interactive experience!\n- **2025.07** &nbsp; 🔥Released inference scripts and web interface; \n- **2025.06** &nbsp; 🔥[ThinkSound paper](https://arxiv.org/pdf/2506.21448) released on arXiv!\n- **2025.06** &nbsp; 🔥[Online Demo](http://thinksound-project.github.io/) is live - try it now!\n\n---\n\n## 🚀 Features\n\n- **Any2Audio**: Generate audio from arbitrary modalities — video, text, audio, or their combinations.\n- **Video-to-Audio SOTA**: Achieves state-of-the-art results on multiple V2A benchmarks.\n- **CoT-Driven Reasoning**: Chain-of-Thought reasoning for compositional and controllable audio generation via MLLMs.\n- **Interactive Object-centric Editing**: Refine or edit specific sound events by clicking on visual objects or using text instructions.\n- **Unified Framework**: One foundation model supports generation, editing, and interactive workflow.\n\n---\n\n## ✨ Method Overview\n\nThinkSound decomposes audio generation and editing into three interactive stages, all guided by MLLM-based Chain-of-Thought (CoT) reasoning:\n\n1. **Foley Generation:** Generate foundational, semantically and temporally aligned soundscapes from video.\n2. **Object-Centric Refinement:** Refine or add sounds for user-specified objects via clicks or regions in the video.\n3. **Targeted Audio Editing:** Modify generated audio using high-level natural language instructions.\n\n![ThinkSound Overview](https://raw.githubusercontent.com/FunAudioLLM/ThinkSound/master/assets/figs/fig3_model.png)\n<!-- A large-scale CoT-annotated dataset (**AudioCoT**) is used to train both the reasoning module and the unified audio foundation model.\n![AudioCoT Pipeline](https://raw.githubusercontent.com/FunAudioLLM/ThinkSound/master/assets/figs/fig2_dataset.png) -->\n\n---\n\n## ⚡ Quick Start\n\n**Environment Preparation:**\n```bash\ngit clone https://github.com/liuhuadai/ThinkSound.git\ncd ThinkSound\npip install -r requirements.txt\nconda install -y -c conda-forge 'ffmpeg<7'\n# Download pretrained weights https://huggingface.co/liuhuadai/ThinkSound to Directory ckpts/\n# model weights can be also downloaded from https://www.modelscope.cn/models/iic/ThinkSound\ngit lfs install\ngit clone https://huggingface.co/liuhuadai/ThinkSound ckpts\n```\n\n**Make it executable**\n```bash\nchmod +x scripts/demo.sh\n```\n\n**Run the script**\n```bash\n./scripts/demo.sh <video_path> <caption> <CoT description>\n```\n\n\n### Web Interface Usage\n\nFor an interactive experience, launch the Gradio web interface:\n\n```bash\npython app.py\n```\n\n---\n",
  "origin_sha": "vYi4X/38TyDFihDOfSBGZIgKnu2bd0a73Iz5+m+7pd0=",
  "translate": "# 🎶 ThinkSound\n\n<p align=\"center\">\n  Eğer bu projeyi faydalı bulduysanız, GitHub'da bir yıldız ⭐ bırakmanız çok memnun edici olurdu!\n</p>\n\n<p align=\"center\">\n  <a href=\"https://arxiv.org/pdf/2506.21448\">\n    <img src=\"https://img.shields.io/badge/arXiv-2506.21448-b31b1b.svg\" alt=\"arXiv\"/>\n  </a>\n  &nbsp;\n  <a href=\"https://thinksound-project.github.io/\">\n    <img src=\"https://img.shields.io/badge/Online%20Demo-🌐-blue\" alt=\"Online Demo\"/>\n  </a>\n  &nbsp;\n  <a href=\"https://huggingface.co/spaces/FunAudioLLM/ThinkSound\">\n    <img src=\"https://img.shields.io/badge/HuggingFace-Spaces-orange?logo=huggingface\" alt=\"Hugging Face\"/>\n  </a>\n  &nbsp;\n  <a href=\"https://modelscope.cn/studios/iic/ThinkSound\">\n    <img src=\"https://img.shields.io/badge/ModelScope-在线体验-green\" alt=\"ModelScope\"/>\n  </a>\n</p>\n\n---\n\n**ThinkSound**, Zincirleme Düşünce (CoT) akıl yürütme ile yönlendirilen flow-matching tabanlı birleşik bir Any2Audio üretim çerçevesidir.\n\nGörüntü, metin ve ses girdilerinden ses üretimi veya düzenlemesi için PyTorch implementasyonu: Multimodal Büyük Dil Modelleri (MLLM) üzerinden adım adım akıl yürütme ile güçlendirilmiştir.\n\n![Teaser](https://raw.githubusercontent.com/FunAudioLLM/ThinkSound/master/assets/figs/fig1_teaser.png)\n---\n\n## 📰 Haberler\n- **2025.07** &nbsp; 🔥[Hugging Face Spaces](https://huggingface.co/spaces/FunAudioLLM/ThinkSound) ve [ModelScope](https://modelscope.cn/studios/iic/ThinkSound) üzerinde etkileşimli deneyim için çevrim içi demo yayında!\n- **2025.07** &nbsp; 🔥Çıkarım (inference) betikleri ve web arayüzü yayınlandı;\n- **2025.06** &nbsp; 🔥[ThinkSound makalesi](https://arxiv.org/pdf/2506.21448) arXiv'de yayınlandı!\n- **2025.06** &nbsp; 🔥[Çevrim İçi Demo](http://thinksound-project.github.io/) yayında - hemen deneyin!\n\n---\n\n## 🚀 Özellikler\n\n- **Any2Audio**: Rastgele modlardan — video, metin, ses veya bunların kombinasyonlarından — ses üretimi.\n- **Video'dan Sese SOTA**: Birçok V2A (Video to Audio) benchmark'ında en son teknoloji (state-of-the-art) sonuçlar.\n- **CoT Tabanlı Akıl Yürütme**: MLLM'ler ile adım adım zincirleme düşünce akıl yürütmesiyle bileşen tabanlı ve kontrol edilebilir ses üretimi.\n- **Etkileşimli Nesne Merkezli Düzenleme**: Görsel nesnelere tıklayarak veya metin talimatlarıyla belirli ses olaylarını düzenleyin veya iyileştirin.\n- **Birleşik Çerçeve**: Tek bir temel model ile üretim, düzenleme ve etkileşimli iş akışı desteği.\n\n---\n\n## ✨ Yöntem Genel Bakışı\n\nThinkSound, ses üretimi ve düzenleme işlemini, tamamı MLLM tabanlı Zincirleme Düşünce (CoT) akıl yürütme ile yönlendirilen üç etkileşimli aşamaya ayırır:\n\n1. **Foley Üretimi:** Videodan anlamca ve zamansal olarak hizalı temel ses manzaraları üretir.\n2. **Nesne Merkezli İyileştirme:** Kullanıcı tarafından belirtilen nesneler için video üzerinde tıklama veya bölge seçimi ile sesleri iyileştirin veya ekleyin.\n3. **Hedefli Ses Düzenleme:** Üretilen sesi yüksek seviyeli doğal dil talimatlarıyla düzenleyin.\n\n![ThinkSound Overview](https://raw.githubusercontent.com/FunAudioLLM/ThinkSound/master/assets/figs/fig3_model.png)\n<!-- Geniş çaplı CoT ile açıklamalı bir veri kümesi (**AudioCoT**), hem akıl yürütme modülünü hem de birleşik ses temel modelini eğitmek için kullanılır.\n![AudioCoT Pipeline](https://raw.githubusercontent.com/FunAudioLLM/ThinkSound/master/assets/figs/fig2_dataset.png) -->\n\n---\n\n## ⚡ Hızlı Başlangıç\n\n**Ortam Hazırlığı:**\n```bash\ngit clone https://github.com/liuhuadai/ThinkSound.git\ncd ThinkSound\npip install -r requirements.txt\nconda install -y -c conda-forge 'ffmpeg<7'\n# Önceden eğitilmiş ağırlıkları https://huggingface.co/liuhuadai/ThinkSound adresinden ckpts/ dizinine indirin\n# Model ağırlıkları ayrıca https://www.modelscope.cn/models/iic/ThinkSound adresinden indirilebilir\ngit lfs install\ngit clone https://huggingface.co/liuhuadai/ThinkSound ckpts\n```\n\n**Çalıştırılabilir yapın**\n```bash\nchmod +x scripts/demo.sh\n```\n\n**Betik çalıştırma**\n```bash\n./scripts/demo.sh <video_yolu> <altyazı> <CoT açıklaması>\n```\n\n\n### Web Arayüzü Kullanımı\n\nEtkileşimli bir deneyim için Gradio web arayüzünü başlatın:\n\n```bash\npython app.py\n```\n\n---",
  "status": "ok"
}