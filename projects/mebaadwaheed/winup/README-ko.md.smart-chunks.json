[
  {
    "Id": 1,
    "Content": "![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen)\n![Python 3.9+](https://img.shields.io/badge/python-3.9%2B-blue)\n![Component Driven](https://img.shields.io/badge/architecture-component--driven-orange)\n![Desktop App](https://img.shields.io/badge/platform-desktop-lightgrey)\n![CLI Support](https://img.shields.io/badge/CLI-supported-critical)\n![Live Reload](https://img.shields.io/badge/live--reload-enabled-blue)\n\n## Image Examples\n\n![image](https://github.com/user-attachments/assets/81d016e9-e10a-4438-ab94-99b6d76b8efe)\n\n![image](https://github.com/user-attachments/assets/154dc3f4-ea8c-4f6f-84d3-88c7ab74a46f)\n\n![image](https://github.com/user-attachments/assets/2318f701-6ec8-4402-abcc-40c879bf1a10)\n\n# WinUp 🚀\n\n## Make sure to download the Latest Stable Release (LSR) and not the latest/LFR! Current LSR: 2.4.9\n\n`pip install winup==2.4.9`\n\n**A ridiculously Pythonic and powerful framework for building beautiful desktop applications.**\n\nWinUp is a modern UI framework for Python that wraps the power of PySide6 (Qt) in a simple, declarative, and developer-friendly API. It's designed to let you build applications faster, write cleaner code, and enjoy the development process.\n\n### ✨ Now with Web Support!\nWinUp now also supports building fully interactive, stateful web applications using the same Python-centric, component-based approach. The web module uses FastAPI and WebSockets under the hood to bring the simplicity of WinUp to the browser.\n\n[Web Documentation](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/web/README.md)\n\n> **Disclaimer:** Web support is an optional feature. To use it, you must install the web dependencies:\n> ```bash\n> pip install \"winup[web]\"\n> ```\n\n[Contributing](https://raw.githubusercontent.com/mebaadwaheed/winup/main/CONTRIBUTING.md)\n[Changelog](https://raw.githubusercontent.com/mebaadwaheed/winup/main/CHANGELOG.md)\n[License](LICENSE)\n\n---\n\n## Why WinUp? (Instead of raw PySide6 or Tkinter)\n\nDesktop development in Python can feel clunky. WinUp was built to fix that.\n\n| Feature                 | WinUp Way ✨                                                                   | Raw PySide6 / Tkinter Way 😟                                                                |\n| ----------------------- | ------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------- |\n| **Layouts**             | `ui.Column(children=[...])`, `ui.Row(children=[...])`                          | `QVBoxLayout()`, `QHBoxLayout()`, `layout.addWidget()`, `pack()`, `grid()`                  |\n| **Styling**             | `props={\"background-color\": \"blue\", \"font-size\": \"16px\"}`                      | Manual QSS strings, `widget.setStyleSheet(...)`, complex style objects.                     |\n| **State Management**    | `state.bind(widget, \"prop\", \"key\")`                                            | Manual callback functions, getters/setters, `StringVar()`, boilerplate everywhere.          |\n| **Two-Way Binding**     | `state.bind_two_way(input_widget, \"key\")`                                      | Non-existent. Requires manual `on_change` handlers to update state and UI.                  |\n| **Developer Tools**     | **Built-in Hot Reloading**, code profiler, and window tools out of the box.    | Non-existent. Restart the entire app for every single UI change.                            |\n| **Code Structure**      | Reusable, self-contained components with `@component`.                         | Often leads to large, monolithic classes or procedural scripts.                             |\n\n**In short, WinUp provides the \"killer features\" of modern web frameworks (like React or Vue) for the desktop, saving you time and letting you focus on what matters: your application's logic.**\n\n# 🧊 WinUp vs 🧱 PyEdifice (Reddit User Request)\n\n| Feature                          | WinUp      | PyEdifice                        |\n|----------------------------------|--------------------------------------|----------------------------------|\n| 🧱 Architecture                  | React-style + state       | React-style + state              |\n| 🌐 Built-in Routing              | ✅ Yes (`Router(routes={...})`)      | ❌ No built-in routing            |\n| ♻️ Lifecycle Hooks               | ✅ `on_mount`, `on_unmount`, etc.    | ⚠️ Limited (`did_mount`, etc.)   |\n| 🎨 Theming / Styling System     | ✅ Global & Scoped themes             | ❌ Manual CSS injection           |\n| 🔲 Layout Options                | ✅ Row, Column, Grid, Stack, Flexbox | ⚠️ Mostly Box & HBox/VBox         |\n| 🎞️ Animations                   | ✅ Built-in (fade, scale, etc.)      | ❌ None built-in                  |\n| 🔁 Hot Reloading (LHR)          | ✅ Stable + fast (`loadup dev`)      | ⚠️ Experimental, limited support  |\n| 📦 Packaging                    | ✅ With LoadUp (PyInstaller-based)   | ❌ Must integrate PyInstaller manually |\n| 🧩 Component Reusability        | ✅ High, declarative                 | ✅ High                           |\n| 🛠 Developer Tooling            | ✅ DevTools planned, Inspector soon  | ❌ None yet                       |\n| 📱 Mobile Support               | ❌ Not yet                           | ❌ Not supported                  |\n| 🧠 Learning Curve               | ✅ Easy for Python+React users       | ✅ Easy but less tooling          |\n\n> ✅ = Built-in or robust  \n> ⚠️ = Partial or limited  \n> ❌ = Missing entirely\n---\n\n## Core Features\n\n*   **Declarative & Pythonic UI:** Build complex layouts with simple `Row` and `Column` objects instead of clunky box layouts.\n*   **Component-Based Architecture:** Use the `@component` decorator to create modular and reusable UI widgets from simple functions.\n*   **Powerful Styling System:** Style your widgets with simple Python dictionaries using `props`. Create global \"CSS-like\" classes with `style.add_style_dict`.\n*   **Full Application Shell:** Build professional applications with a declarative API for `MenuBar`, `ToolBar`, `StatusBar`, and `SystemTrayIcon`.\n*   **Asynchronous Task Runner:** Run long-running operations in the background without freezing your UI using the simple `@tasks.run` decorator.\n*   **Performance by Default:** Includes an opt-in `@memo` decorator to cache component renders and prevent needless re-computation.\n*   **Advanced Extensibility:**\n    *   **Widget Factory:** Replace any default widget with your own custom implementation (e.g., C++ based) using `ui.register_widget()`.\n    *   **Multiple Windows:** Create and manage multiple independent windows for complex applications like tool palettes or music players.\n*   **Reactive State Management:**\n    *   **One-Way Binding:** Automatically update your UI when your data changes with `state.bind()`.\n    *   **Two-Way Binding:** Effortlessly sync input widgets with your state using `state.bind_two_way()`.\n    *   **Subscriptions:** Trigger any function in response to state changes with `state.subscribe()`.\n*   **Developer-Friendly Tooling:**\n    *   **Hot Reloading:** See your UI changes instantly without restarting your app.\n    *   **Profiler:** Easily measure the performance of any function with the `@profiler.measure()` decorator.\n    *   **Window Tools:** Center, flash, or manage your application window with ease.\n*   **Built-in Routing:** Easily create multi-page applications with an intuitive, state-driven router.\n*   **Flexible Data Layer:** Includes simple, consistent connectors for SQLite, PostgreSQL, MySQL, MongoDB, and Firebase.\n",
    "ContentSha": "w09qruI2OvKyZsT85mfUWp93jNWtf2/ypIr3xKugT60=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen)\n![Python 3.9+](https://img.shields.io/badge/python-3.9%2B-blue)\n![Component Driven](https://img.shields.io/badge/architecture-component--driven-orange)\n![Desktop App](https://img.shields.io/badge/platform-desktop-lightgrey)\n![CLI Support](https://img.shields.io/badge/CLI-supported-critical)\n![Live Reload](https://img.shields.io/badge/live--reload-enabled-blue)\n\n## 이미지 예시\n\n![image](https://github.com/user-attachments/assets/81d016e9-e10a-4438-ab94-99b6d76b8efe)\n\n![image](https://github.com/user-attachments/assets/154dc3f4-ea8c-4f6f-84d3-88c7ab74a46f)\n\n![image](https://github.com/user-attachments/assets/2318f701-6ec8-4402-abcc-40c879bf1a10)\n\n# WinUp 🚀\n\n## 반드시 최신 안정 버전(LSR)을 다운로드하세요, 최신/LFR가 아닙니다! 현재 LSR: 2.4.9\n\n`pip install winup==2.4.9`\n\n**아주 파이써닉하고 강력한 아름다운 데스크탑 애플리케이션 구축 프레임워크입니다.**\n\nWinUp은 PySide6(Qt)의 강력함을 간단하고 선언적이며 개발자 친화적인 API로 감싼 현대적인 Python UI 프레임워크입니다. 더 빠르게 애플리케이션을 구축하고, 코드를 더 깔끔하게 작성하며, 개발 과정을 즐기도록 설계되었습니다.\n\n### ✨ 이제 웹 지원도 제공합니다!\nWinUp은 이제 동일한 Python 중심의 컴포넌트 기반 접근법으로 완전한 인터랙티브 상태 기반 웹 애플리케이션도 빌드할 수 있습니다. 웹 모듈은 FastAPI와 WebSockets를 내부적으로 사용하여 WinUp의 간결함을 브라우저에 제공합니다.\n\n[웹 문서](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/web/README.md)\n\n> **면책 조항:** 웹 지원은 선택적 기능입니다. 사용하려면 웹 종속성을 설치해야 합니다:\n> ```bash\n> pip install \"winup[web]\"\n> ```\n\n[기여하기](https://raw.githubusercontent.com/mebaadwaheed/winup/main/CONTRIBUTING.md)\n[변경 로그](https://raw.githubusercontent.com/mebaadwaheed/winup/main/CHANGELOG.md)\n[라이선스](LICENSE)\n\n---\n\n## 왜 WinUp인가? (원시 PySide6 또는 Tkinter 대신)\n\nPython에서 데스크탑 개발은 답답할 수 있습니다. WinUp은 이를 해결하기 위해 만들어졌습니다.\n\n| 기능                      | WinUp 방식 ✨                                                              | 원시 PySide6 / Tkinter 방식 😟                                                      |\n| ------------------------ | ------------------------------------------------------------------------- | ---------------------------------------------------------------------------------- |\n| **레이아웃**             | `ui.Column(children=[...])`, `ui.Row(children=[...])`                     | `QVBoxLayout()`, `QHBoxLayout()`, `layout.addWidget()`, `pack()`, `grid()`         |\n| **스타일링**             | `props={\"background-color\": \"blue\", \"font-size\": \"16px\"}`                 | 수동 QSS 문자열, `widget.setStyleSheet(...)`, 복잡한 스타일 객체들                  |\n| **상태 관리**            | `state.bind(widget, \"prop\", \"key\")`                                       | 수동 콜백 함수, 게터/세터, `StringVar()`, 여기저기 보일러플레이트                   |\n| **양방향 바인딩**         | `state.bind_two_way(input_widget, \"key\")`                                 | 없음. 상태와 UI를 업데이트하기 위한 수동 `on_change` 핸들러 필요                   |\n| **개발자 도구**          | **내장 핫 리로딩**, 코드 프로파일러, 윈도우 도구 기본 제공                   | 없음. UI 변경마다 앱 전체를 재시작해야 함                                         |\n| **코드 구조**            | `@component`로 재사용 가능하고 독립적인 컴포넌트                            | 종종 거대하고 단일 클래스 또는 절차적 스크립트로 이어짐                            |\n\n**요약하면, WinUp은 현대 웹 프레임워크(React, Vue 등)의 \"킬러 기능\"을 데스크탑에 제공하여 시간을 절약하고 애플리케이션 로직에 집중할 수 있도록 합니다.**\n\n# 🧊 WinUp vs 🧱 PyEdifice (Reddit 사용자 요청)\n\n| 기능                           | WinUp                                | PyEdifice                           |\n|-------------------------------|------------------------------------|-----------------------------------|\n| 🧱 아키텍처                   | React 스타일 + 상태                 | React 스타일 + 상태                |\n| 🌐 내장 라우팅                | ✅ 있음 (`Router(routes={...})`)   | ❌ 내장 라우팅 없음                |\n| ♻️ 라이프사이클 훅            | ✅ `on_mount`, `on_unmount` 등      | ⚠️ 제한적 (`did_mount` 등)          |\n| 🎨 테마 / 스타일링 시스템    | ✅ 전역 및 범위 테마                | ❌ 수동 CSS 주입                   |\n| 🔲 레이아웃 옵션             | ✅ Row, Column, Grid, Stack, Flexbox | ⚠️ 주로 Box 및 HBox/VBox           |\n| 🎞️ 애니메이션               | ✅ 내장(fade, scale 등)             | ❌ 내장 애니메이션 없음             |\n| 🔁 핫 리로딩 (LHR)           | ✅ 안정적 + 빠름 (`loadup dev`)     | ⚠️ 실험적, 제한적 지원             |\n| 📦 패키징                   | ✅ LoadUp(PyInstaller 기반) 포함    | ❌ PyInstaller 수동 통합 필요       |\n| 🧩 컴포넌트 재사용성        | ✅ 높음, 선언적                    | ✅ 높음                           |\n| 🛠 개발자 도구              | ✅ DevTools 예정, 곧 Inspector 출시  | ❌ 아직 없음                      |\n| 📱 모바일 지원              | ❌ 아직 지원 안 함                 | ❌ 지원 안 함                     |\n| 🧠 학습 곡선                | ✅ Python+React 사용자에 쉬움       | ✅ 쉬우나 도구는 적음              |\n\n> ✅ = 내장 또는 견고함  \n> ⚠️ = 부분적 또는 제한적  \n> ❌ = 전혀 없음\n---\n\n## 핵심 기능\n\n*   **선언적이고 파이써닉한 UI:** 복잡한 레이아웃을 어색한 박스 레이아웃 대신 간단한 `Row`와 `Column` 객체로 구축하세요.\n*   **컴포넌트 기반 아키텍처:** `@component` 데코레이터로 간단한 함수에서 모듈식 재사용 UI 위젯을 만드세요.\n*   **강력한 스타일링 시스템:** `props`로 간단한 파이썬 딕셔너리를 사용해 위젯을 스타일링하세요. `style.add_style_dict`로 전역 \"CSS 같은\" 클래스도 만드세요.\n*   **완전한 애플리케이션 셸:** `MenuBar`, `ToolBar`, `StatusBar`, `SystemTrayIcon`을 위한 선언적 API로 전문적인 애플리케이션을 빌드하세요.\n*   **비동기 작업 실행기:** 간단한 `@tasks.run` 데코레이터로 UI를 멈추지 않고 백그라운드에서 장시간 작업을 실행하세요.\n*   **기본 제공 성능 최적화:** 컴포넌트 렌더링을 캐시하고 불필요한 재계산을 방지하는 선택적 `@memo` 데코레이터 포함.\n*   **고급 확장성:**\n    *   **위젯 팩토리:** `ui.register_widget()`로 기본 위젯을 사용자 정의 구현(예: C++ 기반)으로 교체 가능.\n    *   **다중 창:** 툴 팔레트나 음악 플레이어 같은 복잡한 애플리케이션을 위해 독립 창 여러 개 생성 및 관리 가능.\n*   **반응형 상태 관리:**\n    *   **단방향 바인딩:** `state.bind()`으로 데이터 변경 시 UI 자동 업데이트.\n    *   **양방향 바인딩:** `state.bind_two_way()`로 입력 위젯과 상태를 손쉽게 동기화.\n    *   **구독:** `state.subscribe()`로 상태 변경에 따라 함수 트리거.\n*   **개발자 친화적 도구:**\n    *   **핫 리로딩:** 앱 재시작 없이 UI 변경 즉시 반영.\n    *   **프로파일러:** `@profiler.measure()` 데코레이터로 함수 성능 측정 용이.\n    *   **윈도우 도구:** 앱 창 중앙 배치, 깜박임, 관리 간편.\n*   **내장 라우팅:** 직관적이고 상태 기반 라우터로 다중 페이지 앱 쉽게 생성.\n*   **유연한 데이터 레이어:** SQLite, PostgreSQL, MySQL, MongoDB, Firebase용 간단하고 일관된 커넥터 포함.\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "jnst6EbmeevWWhDEkbfOMSx8W15njwEy7umodMJdfNc=",
        "originContent": "![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen)",
        "translatedContent": "![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen)"
      },
      {
        "row": 2,
        "rowsha": "FrAqwJg+kwZcbplQpecPRXAuPaa8CfxeFQy3bb1T/bQ=",
        "originContent": "![Python 3.9+](https://img.shields.io/badge/python-3.9%2B-blue)",
        "translatedContent": "![Python 3.9+](https://img.shields.io/badge/python-3.9%2B-blue)"
      },
      {
        "row": 3,
        "rowsha": "x63ttfcKLH+IoG9nJIAnXT9XtcsK1MpjIX9zRetbwJ8=",
        "originContent": "![Component Driven](https://img.shields.io/badge/architecture-component--driven-orange)",
        "translatedContent": "![Component Driven](https://img.shields.io/badge/architecture-component--driven-orange)"
      },
      {
        "row": 4,
        "rowsha": "tN5xuYulzJUkweu+0CY751S9B1DkMnbsYwRl6+mqfyQ=",
        "originContent": "![Desktop App](https://img.shields.io/badge/platform-desktop-lightgrey)",
        "translatedContent": "![Desktop App](https://img.shields.io/badge/platform-desktop-lightgrey)"
      },
      {
        "row": 5,
        "rowsha": "XL4IM3t8f2UZ3KQ1lrBf1EWKCrfsUzcJUeintJUzJTw=",
        "originContent": "![CLI Support](https://img.shields.io/badge/CLI-supported-critical)",
        "translatedContent": "![CLI Support](https://img.shields.io/badge/CLI-supported-critical)"
      },
      {
        "row": 6,
        "rowsha": "4QE/B6qp62gYQmanWVExHs4BggiGfiuWVdDbhLPPiwo=",
        "originContent": "![Live Reload](https://img.shields.io/badge/live--reload-enabled-blue)",
        "translatedContent": "![Live Reload](https://img.shields.io/badge/live--reload-enabled-blue)"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "FLGQ6JdtHDk7rgBJwvd7alQ7tXCrH3be40L8EIKaIoY=",
        "originContent": "## Image Examples",
        "translatedContent": "## 이미지 예시"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "/7AW2Hx5YWnLb5UNIGY0Glq0uwVzPmoLHitmgC5UnJQ=",
        "originContent": "![image](https://github.com/user-attachments/assets/81d016e9-e10a-4438-ab94-99b6d76b8efe)",
        "translatedContent": "![image](https://github.com/user-attachments/assets/81d016e9-e10a-4438-ab94-99b6d76b8efe)"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "kUudTpnqV9GeC9HQJ/+Fn4HwlQRe8LPN8Dn7W+A0j0w=",
        "originContent": "![image](https://github.com/user-attachments/assets/154dc3f4-ea8c-4f6f-84d3-88c7ab74a46f)",
        "translatedContent": "![image](https://github.com/user-attachments/assets/154dc3f4-ea8c-4f6f-84d3-88c7ab74a46f)"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "BA1bi+Fo9aMtOeioqkV7rGfM+t0XhNFvdVw/0G/MfRE=",
        "originContent": "![image](https://github.com/user-attachments/assets/2318f701-6ec8-4402-abcc-40c879bf1a10)",
        "translatedContent": "![image](https://github.com/user-attachments/assets/2318f701-6ec8-4402-abcc-40c879bf1a10)"
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 16,
        "rowsha": "crJNL9RYh9syt0IhT844woohBSFpLfb5l7Nof8hUPDc=",
        "originContent": "# WinUp 🚀",
        "translatedContent": "# WinUp 🚀"
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 18,
        "rowsha": "PTbn1SsqjuwVbxDsp9VvKkjrL6ilJx/koz1rFIw5YLA=",
        "originContent": "## Make sure to download the Latest Stable Release (LSR) and not the latest/LFR! Current LSR: 2.4.9",
        "translatedContent": "## 반드시 최신 안정 버전(LSR)을 다운로드하세요, 최신/LFR가 아닙니다! 현재 LSR: 2.4.9"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "S2PnPyPdjEFTgv528dB4Zqwo42JNsQ/oSJ4Ey5bcrS4=",
        "originContent": "`pip install winup==2.4.9`",
        "translatedContent": "`pip install winup==2.4.9`"
      },
      {
        "row": 21,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 22,
        "rowsha": "THueTOWNrJ0UxQg1D7HTeoP7y9RI3JJ74AGiebJASV8=",
        "originContent": "**A ridiculously Pythonic and powerful framework for building beautiful desktop applications.**",
        "translatedContent": "**아주 파이써닉하고 강력한 아름다운 데스크탑 애플리케이션 구축 프레임워크입니다.**"
      },
      {
        "row": 23,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 24,
        "rowsha": "5aVhXBQg0lDieW2tI7r0NHMn4UC7UPZ0FUjeFGpYvh4=",
        "originContent": "WinUp is a modern UI framework for Python that wraps the power of PySide6 (Qt) in a simple, declarative, and developer-friendly API. It's designed to let you build applications faster, write cleaner code, and enjoy the development process.",
        "translatedContent": "WinUp은 PySide6(Qt)의 강력함을 간단하고 선언적이며 개발자 친화적인 API로 감싼 현대적인 Python UI 프레임워크입니다. 더 빠르게 애플리케이션을 구축하고, 코드를 더 깔끔하게 작성하며, 개발 과정을 즐기도록 설계되었습니다."
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "GEt4buRQAvEZzloy3VWen/+abSDf4BWvbkqlIvfQ5w8=",
        "originContent": "### ✨ Now with Web Support!",
        "translatedContent": "### ✨ 이제 웹 지원도 제공합니다!"
      },
      {
        "row": 27,
        "rowsha": "GHR5WPIVOdTUuT0uT378rsCV769e+28p+rxRv3kyQ3Q=",
        "originContent": "WinUp now also supports building fully interactive, stateful web applications using the same Python-centric, component-based approach. The web module uses FastAPI and WebSockets under the hood to bring the simplicity of WinUp to the browser.",
        "translatedContent": "WinUp은 이제 동일한 Python 중심의 컴포넌트 기반 접근법으로 완전한 인터랙티브 상태 기반 웹 애플리케이션도 빌드할 수 있습니다. 웹 모듈은 FastAPI와 WebSockets를 내부적으로 사용하여 WinUp의 간결함을 브라우저에 제공합니다."
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "JVcoKLQlsBdwUfTrHoixHyU9E99BPc1coifVuGas02Q=",
        "originContent": "[Web Documentation](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/web/README.md)",
        "translatedContent": "[웹 문서](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/web/README.md)"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "qg9ThESP/oovS1BSFdlm1t7oXPJJX8PA9L7oVKHyaiA=",
        "originContent": "> **Disclaimer:** Web support is an optional feature. To use it, you must install the web dependencies:",
        "translatedContent": "> **면책 조항:** 웹 지원은 선택적 기능입니다. 사용하려면 웹 종속성을 설치해야 합니다:"
      },
      {
        "row": 32,
        "rowsha": "wdkEOeFso6tqiT11qRgwNFig8+xjxbk3wJKCvpYihdM=",
        "originContent": "> ```bash",
        "translatedContent": "> ```bash"
      },
      {
        "row": 33,
        "rowsha": "kVEHMdz9VIIc2isf2Ffo79SzTNEHLouv1PhVmu8GalE=",
        "originContent": "> pip install \"winup[web]\"",
        "translatedContent": "> pip install \"winup[web]\""
      },
      {
        "row": 34,
        "rowsha": "MSWTuK53TAylT2dLwAgGiANzYPowZK3H1tOGCQeahfM=",
        "originContent": "> ```",
        "translatedContent": "> ```"
      },
      {
        "row": 35,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 36,
        "rowsha": "8u79hJ6MS+MgeK+gp2deSnrWlvUnaN+ev2hYWeT9uW4=",
        "originContent": "[Contributing](https://raw.githubusercontent.com/mebaadwaheed/winup/main/CONTRIBUTING.md)",
        "translatedContent": "[기여하기](https://raw.githubusercontent.com/mebaadwaheed/winup/main/CONTRIBUTING.md)"
      },
      {
        "row": 37,
        "rowsha": "7t6PR7OeUJUpnET5mNKuW1zdjYowswO/rduWq5Tp9yQ=",
        "originContent": "[Changelog](https://raw.githubusercontent.com/mebaadwaheed/winup/main/CHANGELOG.md)",
        "translatedContent": "[변경 로그](https://raw.githubusercontent.com/mebaadwaheed/winup/main/CHANGELOG.md)"
      },
      {
        "row": 38,
        "rowsha": "67ZCWP9e/+lsjcOvH4A4v4lIUUbW3lemk9/fRbOIrM8=",
        "originContent": "[License](LICENSE)",
        "translatedContent": "[라이선스](LICENSE)"
      },
      {
        "row": 39,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 40,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": "---"
      },
      {
        "row": 41,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 42,
        "rowsha": "9ixXi27NsEam79TN+j89qs3QnJGlGg7AZT9kMGSuslQ=",
        "originContent": "## Why WinUp? (Instead of raw PySide6 or Tkinter)",
        "translatedContent": "## 왜 WinUp인가? (원시 PySide6 또는 Tkinter 대신)"
      },
      {
        "row": 43,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 44,
        "rowsha": "LR658YRBCQo2bNnnUTO5JgFeOOoleVO5QBmsOsNOcFI=",
        "originContent": "Desktop development in Python can feel clunky. WinUp was built to fix that.",
        "translatedContent": "Python에서 데스크탑 개발은 답답할 수 있습니다. WinUp은 이를 해결하기 위해 만들어졌습니다."
      },
      {
        "row": 45,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 46,
        "rowsha": "Y1sxQFXwYgtlwKsIW40U7Dvon5/nYEqyOWhkqwICQBM=",
        "originContent": "| Feature                 | WinUp Way ✨                                                                   | Raw PySide6 / Tkinter Way 😟                                                                |",
        "translatedContent": "| 기능                      | WinUp 방식 ✨                                                              | 원시 PySide6 / Tkinter 방식 😟                                                      |"
      },
      {
        "row": 47,
        "rowsha": "nr3zUPxI/Z5hWQHcGKLNDokFU6x+X27+AuLTpnEORyM=",
        "originContent": "| ----------------------- | ------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------- |",
        "translatedContent": "| ------------------------ | ------------------------------------------------------------------------- | ---------------------------------------------------------------------------------- |"
      },
      {
        "row": 48,
        "rowsha": "hAvUHLUfI8Kk6OAb98y04bAmk7Ep3zYjscPCvN0vsBg=",
        "originContent": "| **Layouts**             | `ui.Column(children=[...])`, `ui.Row(children=[...])`                          | `QVBoxLayout()`, `QHBoxLayout()`, `layout.addWidget()`, `pack()`, `grid()`                  |",
        "translatedContent": "| **레이아웃**             | `ui.Column(children=[...])`, `ui.Row(children=[...])`                     | `QVBoxLayout()`, `QHBoxLayout()`, `layout.addWidget()`, `pack()`, `grid()`         |"
      },
      {
        "row": 49,
        "rowsha": "JASk758HuNjMOQadrpSGSNb/UQCoVrEddqllNPctE/8=",
        "originContent": "| **Styling**             | `props={\"background-color\": \"blue\", \"font-size\": \"16px\"}`                      | Manual QSS strings, `widget.setStyleSheet(...)`, complex style objects.                     |",
        "translatedContent": "| **스타일링**             | `props={\"background-color\": \"blue\", \"font-size\": \"16px\"}`                 | 수동 QSS 문자열, `widget.setStyleSheet(...)`, 복잡한 스타일 객체들                  |"
      },
      {
        "row": 50,
        "rowsha": "zB+cuOf5R7RjjbrpQjuZxmC7wiwjOD/5cW26YJiacHo=",
        "originContent": "| **State Management**    | `state.bind(widget, \"prop\", \"key\")`                                            | Manual callback functions, getters/setters, `StringVar()`, boilerplate everywhere.          |",
        "translatedContent": "| **상태 관리**            | `state.bind(widget, \"prop\", \"key\")`                                       | 수동 콜백 함수, 게터/세터, `StringVar()`, 여기저기 보일러플레이트                   |"
      },
      {
        "row": 51,
        "rowsha": "gfpJm+2AfIX/dcJ3Te9Qdb/tcwfigvEspI0AkEZqw+s=",
        "originContent": "| **Two-Way Binding**     | `state.bind_two_way(input_widget, \"key\")`                                      | Non-existent. Requires manual `on_change` handlers to update state and UI.                  |",
        "translatedContent": "| **양방향 바인딩**         | `state.bind_two_way(input_widget, \"key\")`                                 | 없음. 상태와 UI를 업데이트하기 위한 수동 `on_change` 핸들러 필요                   |"
      },
      {
        "row": 52,
        "rowsha": "XzemkvL+k72miu9k2Cuu29twgvFkDjfDIznKg7g0Thk=",
        "originContent": "| **Developer Tools**     | **Built-in Hot Reloading**, code profiler, and window tools out of the box.    | Non-existent. Restart the entire app for every single UI change.                            |",
        "translatedContent": "| **개발자 도구**          | **내장 핫 리로딩**, 코드 프로파일러, 윈도우 도구 기본 제공                   | 없음. UI 변경마다 앱 전체를 재시작해야 함                                         |"
      },
      {
        "row": 53,
        "rowsha": "1uYtX+uvHJ+KUiYD0coxNmTc4QV7cJEJHDxY/1GApXE=",
        "originContent": "| **Code Structure**      | Reusable, self-contained components with `@component`.                         | Often leads to large, monolithic classes or procedural scripts.                             |",
        "translatedContent": "| **코드 구조**            | `@component`로 재사용 가능하고 독립적인 컴포넌트                            | 종종 거대하고 단일 클래스 또는 절차적 스크립트로 이어짐                            |"
      },
      {
        "row": 54,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 55,
        "rowsha": "9+t6/xXlbLzpy+aJPnlzn4QkPMqU21Hys6meGOx8ESQ=",
        "originContent": "**In short, WinUp provides the \"killer features\" of modern web frameworks (like React or Vue) for the desktop, saving you time and letting you focus on what matters: your application's logic.**",
        "translatedContent": "**요약하면, WinUp은 현대 웹 프레임워크(React, Vue 등)의 \"킬러 기능\"을 데스크탑에 제공하여 시간을 절약하고 애플리케이션 로직에 집중할 수 있도록 합니다.**"
      },
      {
        "row": 56,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 57,
        "rowsha": "rOVX/+aq6PpjH1fJhg4LPnWQAr6K7k39Vn/THvvqpn0=",
        "originContent": "# 🧊 WinUp vs 🧱 PyEdifice (Reddit User Request)",
        "translatedContent": "# 🧊 WinUp vs 🧱 PyEdifice (Reddit 사용자 요청)"
      },
      {
        "row": 58,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 59,
        "rowsha": "E2ObyiKtYq94LTmvmj2+MriCtMU25fdmSILTU7U0WUY=",
        "originContent": "| Feature                          | WinUp      | PyEdifice                        |",
        "translatedContent": "| 기능                           | WinUp                                | PyEdifice                           |"
      },
      {
        "row": 60,
        "rowsha": "+mn0OZBElhUrHt62FPH/ROkOhyCJdrf/nC+ye0fPbeI=",
        "originContent": "|----------------------------------|--------------------------------------|----------------------------------|",
        "translatedContent": "|-------------------------------|------------------------------------|-----------------------------------|"
      },
      {
        "row": 61,
        "rowsha": "ywMRkS8XY0NMYt6eJVUvYmb5LO7ZP/5MiHxHVIxy0oM=",
        "originContent": "| 🧱 Architecture                  | React-style + state       | React-style + state              |",
        "translatedContent": "| 🧱 아키텍처                   | React 스타일 + 상태                 | React 스타일 + 상태                |"
      },
      {
        "row": 62,
        "rowsha": "gtC1ojTqgR4yPPmUmMIQ15RYjXsdFUCeHbc5L5TSvfg=",
        "originContent": "| 🌐 Built-in Routing              | ✅ Yes (`Router(routes={...})`)      | ❌ No built-in routing            |",
        "translatedContent": "| 🌐 내장 라우팅                | ✅ 있음 (`Router(routes={...})`)   | ❌ 내장 라우팅 없음                |"
      },
      {
        "row": 63,
        "rowsha": "b5BfNLr8Sx5AysZtOdOGhjzLDU0XQHbqVu8rMd5mDos=",
        "originContent": "| ♻️ Lifecycle Hooks               | ✅ `on_mount`, `on_unmount`, etc.    | ⚠️ Limited (`did_mount`, etc.)   |",
        "translatedContent": "| ♻️ 라이프사이클 훅            | ✅ `on_mount`, `on_unmount` 등      | ⚠️ 제한적 (`did_mount` 등)          |"
      },
      {
        "row": 64,
        "rowsha": "TU4MAR0mqp1DMRSii2bHwpZ3y+Preeiy9dvJm+QW7pk=",
        "originContent": "| 🎨 Theming / Styling System     | ✅ Global & Scoped themes             | ❌ Manual CSS injection           |",
        "translatedContent": "| 🎨 테마 / 스타일링 시스템    | ✅ 전역 및 범위 테마                | ❌ 수동 CSS 주입                   |"
      },
      {
        "row": 65,
        "rowsha": "zfmpiuxd0N4FtdtJ5HqsEzosgO/3h2S9qJXfjRrIbVQ=",
        "originContent": "| 🔲 Layout Options                | ✅ Row, Column, Grid, Stack, Flexbox | ⚠️ Mostly Box & HBox/VBox         |",
        "translatedContent": "| 🔲 레이아웃 옵션             | ✅ Row, Column, Grid, Stack, Flexbox | ⚠️ 주로 Box 및 HBox/VBox           |"
      },
      {
        "row": 66,
        "rowsha": "hHtMEb7QFUqlJuuR+wEbYVMYHtXRNub/+rjxDFU5Z94=",
        "originContent": "| 🎞️ Animations                   | ✅ Built-in (fade, scale, etc.)      | ❌ None built-in                  |",
        "translatedContent": "| 🎞️ 애니메이션               | ✅ 내장(fade, scale 등)             | ❌ 내장 애니메이션 없음             |"
      },
      {
        "row": 67,
        "rowsha": "pCw2ete79XzyiaasNNxWBe5CjbkB2pDpeJJ3+MjdvSI=",
        "originContent": "| 🔁 Hot Reloading (LHR)          | ✅ Stable + fast (`loadup dev`)      | ⚠️ Experimental, limited support  |",
        "translatedContent": "| 🔁 핫 리로딩 (LHR)           | ✅ 안정적 + 빠름 (`loadup dev`)     | ⚠️ 실험적, 제한적 지원             |"
      },
      {
        "row": 68,
        "rowsha": "2nFPzMCVb2k6vbs84TeZvs8FxZ/ksTOyT2s+161DqJE=",
        "originContent": "| 📦 Packaging                    | ✅ With LoadUp (PyInstaller-based)   | ❌ Must integrate PyInstaller manually |",
        "translatedContent": "| 📦 패키징                   | ✅ LoadUp(PyInstaller 기반) 포함    | ❌ PyInstaller 수동 통합 필요       |"
      },
      {
        "row": 69,
        "rowsha": "u0zduuSC2mlP211Zp9+o5RA6Es0BbLwcxcxuJsY+SuQ=",
        "originContent": "| 🧩 Component Reusability        | ✅ High, declarative                 | ✅ High                           |",
        "translatedContent": "| 🧩 컴포넌트 재사용성        | ✅ 높음, 선언적                    | ✅ 높음                           |"
      },
      {
        "row": 70,
        "rowsha": "Yn/SC6KvpJowP/UIDwDycsjBUT1tgTTHioTuTkfWH/w=",
        "originContent": "| 🛠 Developer Tooling            | ✅ DevTools planned, Inspector soon  | ❌ None yet                       |",
        "translatedContent": "| 🛠 개발자 도구              | ✅ DevTools 예정, 곧 Inspector 출시  | ❌ 아직 없음                      |"
      },
      {
        "row": 71,
        "rowsha": "eK5kf4C2tHj6fKVQJ/tHlRlJItglQA+3fn5GlnWdcIQ=",
        "originContent": "| 📱 Mobile Support               | ❌ Not yet                           | ❌ Not supported                  |",
        "translatedContent": "| 📱 모바일 지원              | ❌ 아직 지원 안 함                 | ❌ 지원 안 함                     |"
      },
      {
        "row": 72,
        "rowsha": "dwPGNJCWl1qXtWIB6dHOYOwZYoAT7LMs6xKRGANTRxY=",
        "originContent": "| 🧠 Learning Curve               | ✅ Easy for Python+React users       | ✅ Easy but less tooling          |",
        "translatedContent": "| 🧠 학습 곡선                | ✅ Python+React 사용자에 쉬움       | ✅ 쉬우나 도구는 적음              |"
      },
      {
        "row": 73,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 74,
        "rowsha": "mRV4ub1XI5Eqol31D3OSdTGBeQLOfKj6FoyCPMqnWc8=",
        "originContent": "> ✅ = Built-in or robust  ",
        "translatedContent": "> ✅ = 내장 또는 견고함  "
      },
      {
        "row": 75,
        "rowsha": "W3h3uh0SbNo4MF5M70KRM7tnYPgr39lh752UcIL5Vv0=",
        "originContent": "> ⚠️ = Partial or limited  ",
        "translatedContent": "> ⚠️ = 부분적 또는 제한적  "
      },
      {
        "row": 76,
        "rowsha": "XR0LBPBfnnZ9hD8JSh1QClR316lh3GZDOhrDgi3zHpg=",
        "originContent": "> ❌ = Missing entirely",
        "translatedContent": "> ❌ = 전혀 없음"
      },
      {
        "row": 77,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": "---"
      },
      {
        "row": 78,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 79,
        "rowsha": "WVf4b7oPiloMhGfUEdpGDGrt4Gysb1sXIrUavFTl+N0=",
        "originContent": "## Core Features",
        "translatedContent": "## 핵심 기능"
      },
      {
        "row": 80,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 81,
        "rowsha": "l96kHwTz7uQP5X56m+cumlanH96PYRFA4kvtrqhN+PI=",
        "originContent": "*   **Declarative & Pythonic UI:** Build complex layouts with simple `Row` and `Column` objects instead of clunky box layouts.",
        "translatedContent": "*   **선언적이고 파이써닉한 UI:** 복잡한 레이아웃을 어색한 박스 레이아웃 대신 간단한 `Row`와 `Column` 객체로 구축하세요."
      },
      {
        "row": 82,
        "rowsha": "hXNul/zZwwuzyvi0AS2SCYS5jfhTYkK42S80gGFDMn0=",
        "originContent": "*   **Component-Based Architecture:** Use the `@component` decorator to create modular and reusable UI widgets from simple functions.",
        "translatedContent": "*   **컴포넌트 기반 아키텍처:** `@component` 데코레이터로 간단한 함수에서 모듈식 재사용 UI 위젯을 만드세요."
      },
      {
        "row": 83,
        "rowsha": "7+6N5HYJ0Ir7wiTxjzwPoSaVqTYzjvZSQvV/X/VkL6g=",
        "originContent": "*   **Powerful Styling System:** Style your widgets with simple Python dictionaries using `props`. Create global \"CSS-like\" classes with `style.add_style_dict`.",
        "translatedContent": "*   **강력한 스타일링 시스템:** `props`로 간단한 파이썬 딕셔너리를 사용해 위젯을 스타일링하세요. `style.add_style_dict`로 전역 \"CSS 같은\" 클래스도 만드세요."
      },
      {
        "row": 84,
        "rowsha": "vdyHUR1QhX3Rb6aWjU3Rgz4RocsSlELufHRwMH2Q5kM=",
        "originContent": "*   **Full Application Shell:** Build professional applications with a declarative API for `MenuBar`, `ToolBar`, `StatusBar`, and `SystemTrayIcon`.",
        "translatedContent": "*   **완전한 애플리케이션 셸:** `MenuBar`, `ToolBar`, `StatusBar`, `SystemTrayIcon`을 위한 선언적 API로 전문적인 애플리케이션을 빌드하세요."
      },
      {
        "row": 85,
        "rowsha": "P9ky3fCTnjt0fJ677fQB0hngHYLK996/2PBEir9OHes=",
        "originContent": "*   **Asynchronous Task Runner:** Run long-running operations in the background without freezing your UI using the simple `@tasks.run` decorator.",
        "translatedContent": "*   **비동기 작업 실행기:** 간단한 `@tasks.run` 데코레이터로 UI를 멈추지 않고 백그라운드에서 장시간 작업을 실행하세요."
      },
      {
        "row": 86,
        "rowsha": "xQneFtzr4WAaX2eMejiuiLI7koEPz2bBXKPNdoG9jcE=",
        "originContent": "*   **Performance by Default:** Includes an opt-in `@memo` decorator to cache component renders and prevent needless re-computation.",
        "translatedContent": "*   **기본 제공 성능 최적화:** 컴포넌트 렌더링을 캐시하고 불필요한 재계산을 방지하는 선택적 `@memo` 데코레이터 포함."
      },
      {
        "row": 87,
        "rowsha": "/BJBVf9mLmDjGXKmicF2e+VuP2HDUUbb5SWNcZL7bCM=",
        "originContent": "*   **Advanced Extensibility:**",
        "translatedContent": "*   **고급 확장성:**"
      },
      {
        "row": 88,
        "rowsha": "BeNRIceq96WPHcKCkKfvBIy0Kpi4UPIbzSkFO4/86Sg=",
        "originContent": "    *   **Widget Factory:** Replace any default widget with your own custom implementation (e.g., C++ based) using `ui.register_widget()`.",
        "translatedContent": "    *   **위젯 팩토리:** `ui.register_widget()`로 기본 위젯을 사용자 정의 구현(예: C++ 기반)으로 교체 가능."
      },
      {
        "row": 89,
        "rowsha": "hW/uYblYyAbUBAN6NHHM1sK+QygbTG3xpn75dfxNhcE=",
        "originContent": "    *   **Multiple Windows:** Create and manage multiple independent windows for complex applications like tool palettes or music players.",
        "translatedContent": "    *   **다중 창:** 툴 팔레트나 음악 플레이어 같은 복잡한 애플리케이션을 위해 독립 창 여러 개 생성 및 관리 가능."
      },
      {
        "row": 90,
        "rowsha": "fQigFrYs2RypN1GpspYoXlsftwwM8JsibvXRlVKIqgw=",
        "originContent": "*   **Reactive State Management:**",
        "translatedContent": "*   **반응형 상태 관리:**"
      },
      {
        "row": 91,
        "rowsha": "kwNLLac4nl0hXxyvgjTZXNluof19mGlhJelwAFbXrXQ=",
        "originContent": "    *   **One-Way Binding:** Automatically update your UI when your data changes with `state.bind()`.",
        "translatedContent": "    *   **단방향 바인딩:** `state.bind()`으로 데이터 변경 시 UI 자동 업데이트."
      },
      {
        "row": 92,
        "rowsha": "1P2H1GoSdr00nVpsgfM8mREWrUbZNnva3nXZtAaP9Dk=",
        "originContent": "    *   **Two-Way Binding:** Effortlessly sync input widgets with your state using `state.bind_two_way()`.",
        "translatedContent": "    *   **양방향 바인딩:** `state.bind_two_way()`로 입력 위젯과 상태를 손쉽게 동기화."
      },
      {
        "row": 93,
        "rowsha": "3ZSrDYPEoVU77xOxRpTImxCVTueD4YeTbH0BVMhsrBE=",
        "originContent": "    *   **Subscriptions:** Trigger any function in response to state changes with `state.subscribe()`.",
        "translatedContent": "    *   **구독:** `state.subscribe()`로 상태 변경에 따라 함수 트리거."
      },
      {
        "row": 94,
        "rowsha": "fpIYIroVXrgi4jZUQ/1UM/YA1OzAzjTCYmFhdOG2rLk=",
        "originContent": "*   **Developer-Friendly Tooling:**",
        "translatedContent": "*   **개발자 친화적 도구:**"
      },
      {
        "row": 95,
        "rowsha": "1s3vnI/taL3Jo0mmS1/sqW1h0izGG+rrRM35AdtvYDA=",
        "originContent": "    *   **Hot Reloading:** See your UI changes instantly without restarting your app.",
        "translatedContent": "    *   **핫 리로딩:** 앱 재시작 없이 UI 변경 즉시 반영."
      },
      {
        "row": 96,
        "rowsha": "9vVUs4saAL0/6IOL4M2ulYcnKeS09gtqJy0S76Q9w+0=",
        "originContent": "    *   **Profiler:** Easily measure the performance of any function with the `@profiler.measure()` decorator.",
        "translatedContent": "    *   **프로파일러:** `@profiler.measure()` 데코레이터로 함수 성능 측정 용이."
      },
      {
        "row": 97,
        "rowsha": "k4XdMDTui67H8MYCQhqzRVnH6qGgXoCoU4XufjY8/oc=",
        "originContent": "    *   **Window Tools:** Center, flash, or manage your application window with ease.",
        "translatedContent": "    *   **윈도우 도구:** 앱 창 중앙 배치, 깜박임, 관리 간편."
      },
      {
        "row": 98,
        "rowsha": "sZIP/IchmpSAnqTSrZQKfMAgaycmLz04DRIenthilNk=",
        "originContent": "*   **Built-in Routing:** Easily create multi-page applications with an intuitive, state-driven router.",
        "translatedContent": "*   **내장 라우팅:** 직관적이고 상태 기반 라우터로 다중 페이지 앱 쉽게 생성."
      },
      {
        "row": 99,
        "rowsha": "A4oO5GYuC66EQA/e+10YkGjkbQ7qi2JTrLhEVlOoAsQ=",
        "originContent": "*   **Flexible Data Layer:** Includes simple, consistent connectors for SQLite, PostgreSQL, MySQL, MongoDB, and Firebase.",
        "translatedContent": "*   **유연한 데이터 레이어:** SQLite, PostgreSQL, MySQL, MongoDB, Firebase용 간단하고 일관된 커넥터 포함."
      },
      {
        "row": 100,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "---\n\n# Documentation\n\nDive deeper into the features of WinUp:\n\n## Core Concepts\n- [**Component Model & Styling**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/concepts.md)\n- [**State Management**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/state.md)\n- [**Lifecycle Hooks**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/concepts.md#component-lifecycle-hooks-on_mount-and-on_unmount)\n- [**Routing**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/concepts.md#routing)\n- [**Absolute Positioning (Advanced)**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/absolute-layout.md)\n\n## Developer Tools\n- [**Live Hot Reload (LHR)**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/live-hot-reload.md)\n- [**Performance Profiler**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/profiler.md)\n- [**Memoization**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/memoization.md)\n- [**Async Task Runner**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/tasks.md)\n\n## UI Components\n- [**Full Component Library**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/components/README.md)\n\n---\n\n## Contributing\n\nWinUp is an open-source project. Contributions are welcome!\n\n## License\n\nThis project is licensed under the MIT License. See **LICENSE** for more information.",
    "ContentSha": "kSKpEdHDk1q6O2QRlX5PGcfk50/fvOtcoYG3Ndop7H8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "---\n\n# 문서\n\nWinUp의 기능을 더 깊이 탐구하세요:\n\n## 핵심 개념\n- [**컴포넌트 모델 및 스타일링**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/concepts.md)\n- [**상태 관리**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/state.md)\n- [**라이프사이클 훅**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/concepts.md#component-lifecycle-hooks-on_mount-and-on_unmount)\n- [**라우팅**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/concepts.md#routing)\n- [**절대 위치 지정(고급)**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/absolute-layout.md)\n\n## 개발자 도구\n- [**라이브 핫 리로드 (LHR)**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/live-hot-reload.md)\n- [**성능 프로파일러**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/profiler.md)\n- [**메모이제이션**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/memoization.md)\n- [**비동기 작업 실행기**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/tasks.md)\n\n## UI 컴포넌트\n- [**전체 컴포넌트 라이브러리**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/components/README.md)\n\n---\n\n## 기여하기\n\nWinUp은 오픈 소스 프로젝트입니다. 기여를 환영합니다!\n\n## 라이선스\n\n이 프로젝트는 MIT 라이선스 하에 배포됩니다. 자세한 내용은 **LICENSE**를 참조하세요.",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": "---"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "4BSHWD7tzXIyr/Ccbla1RNYTdBtLtVN8mXm+xSFvLpw=",
        "originContent": "# Documentation",
        "translatedContent": "# 문서"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "b/SU332fpXKR5EZ8P9h5/qQs11IriOvompvpeo22s8A=",
        "originContent": "Dive deeper into the features of WinUp:",
        "translatedContent": "WinUp의 기능을 더 깊이 탐구하세요:"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "tfib1pbLxCVkcIkWm1mWR3qBcqoueWNWOQ4573Lul5I=",
        "originContent": "## Core Concepts",
        "translatedContent": "## 핵심 개념"
      },
      {
        "row": 8,
        "rowsha": "Ua61hq4okzYyYoFayq7ahYqh8IdFR1Yu4yI+qJojIRI=",
        "originContent": "- [**Component Model & Styling**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/concepts.md)",
        "translatedContent": "- [**컴포넌트 모델 및 스타일링**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/concepts.md)"
      },
      {
        "row": 9,
        "rowsha": "clczlcGtWe/mKrizal1NymNlzgF1Qv1tgisqbwuU2rw=",
        "originContent": "- [**State Management**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/state.md)",
        "translatedContent": "- [**상태 관리**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/state.md)"
      },
      {
        "row": 10,
        "rowsha": "C+d3tXqG/qvwygMBdBb04emgZZFziGgk+k7lI13tJrI=",
        "originContent": "- [**Lifecycle Hooks**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/concepts.md#component-lifecycle-hooks-on_mount-and-on_unmount)",
        "translatedContent": "- [**라이프사이클 훅**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/concepts.md#component-lifecycle-hooks-on_mount-and-on_unmount)"
      },
      {
        "row": 11,
        "rowsha": "l7hfq/5wQ3QT/RZai0609RFwhrNgAJUUTw3dyanHkF0=",
        "originContent": "- [**Routing**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/concepts.md#routing)",
        "translatedContent": "- [**라우팅**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/concepts.md#routing)"
      },
      {
        "row": 12,
        "rowsha": "q70F0ypSo/j75supwvXRYPViXJO40qQMc8NeP4WtIcs=",
        "originContent": "- [**Absolute Positioning (Advanced)**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/absolute-layout.md)",
        "translatedContent": "- [**절대 위치 지정(고급)**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/absolute-layout.md)"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "Mr0RmzHz4URkrgYNvK49CC3C1mEwX3iwXSHIXmSVdcE=",
        "originContent": "## Developer Tools",
        "translatedContent": "## 개발자 도구"
      },
      {
        "row": 15,
        "rowsha": "Qng5zxZf8AAzPBG1s/giu8VH1pf8rv/jS4pHeJ/UAFU=",
        "originContent": "- [**Live Hot Reload (LHR)**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/live-hot-reload.md)",
        "translatedContent": "- [**라이브 핫 리로드 (LHR)**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/live-hot-reload.md)"
      },
      {
        "row": 16,
        "rowsha": "ZHoIT/HxtvAPTTIawkiTHbXV2ITt7h4nRiVSP9gUY7A=",
        "originContent": "- [**Performance Profiler**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/profiler.md)",
        "translatedContent": "- [**성능 프로파일러**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/profiler.md)"
      },
      {
        "row": 17,
        "rowsha": "2UexQlEIcmWSOfIGLV5GY53jixTqjyeKgJtQ83QhzKs=",
        "originContent": "- [**Memoization**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/memoization.md)",
        "translatedContent": "- [**메모이제이션**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/memoization.md)"
      },
      {
        "row": 18,
        "rowsha": "vgFsPu4HOpkSAo2m5d7WiR1wKncRSXvF5Y4xZIWGfMQ=",
        "originContent": "- [**Async Task Runner**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/tasks.md)",
        "translatedContent": "- [**비동기 작업 실행기**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/tasks.md)"
      },
      {
        "row": 19,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 20,
        "rowsha": "myLS6oUXaJS6tYlEk6OUww6lKMf9iMk1zN7HJlIizLY=",
        "originContent": "## UI Components",
        "translatedContent": "## UI 컴포넌트"
      },
      {
        "row": 21,
        "rowsha": "aQRVOL8o/5XVjfDCspeq88W5T0dsaw0IayaSgex5XEI=",
        "originContent": "- [**Full Component Library**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/components/README.md)",
        "translatedContent": "- [**전체 컴포넌트 라이브러리**](https://raw.githubusercontent.com/mebaadwaheed/winup/main/docs/components/README.md)"
      },
      {
        "row": 22,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 23,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": "---"
      },
      {
        "row": 24,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 25,
        "rowsha": "R5ZPLZ4vkE9tjX5qe8QB7AkTfWZsuNTGFLFKMp2KUzM=",
        "originContent": "## Contributing",
        "translatedContent": "## 기여하기"
      },
      {
        "row": 26,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 27,
        "rowsha": "mHwOe7u5d7isZLkXI2hg5riWH7YQ9W9AiYEQGuXcWO4=",
        "originContent": "WinUp is an open-source project. Contributions are welcome!",
        "translatedContent": "WinUp은 오픈 소스 프로젝트입니다. 기여를 환영합니다!"
      },
      {
        "row": 28,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 29,
        "rowsha": "bFSaVtsB4CHySNjaeCiaMZfT24b+DTbTM4HQ38cR6Lw=",
        "originContent": "## License",
        "translatedContent": "## 라이선스"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "LcmY4PN/F9w8RnHFHnT4ZFGDVLr9smu31opvlXsDTe0=",
        "originContent": "This project is licensed under the MIT License. See **LICENSE** for more information.",
        "translatedContent": "이 프로젝트는 MIT 라이선스 하에 배포됩니다. 자세한 내용은 **LICENSE**를 참조하세요."
      }
    ],
    "IsCodeBlock": false
  }
]