[
  {
    "Id": 1,
    "Content": "# python-makefun\n\n*Small library to dynamically create python functions.*\n\n[![Python versions](https://img.shields.io/pypi/pyversions/makefun.svg)](https://pypi.python.org/pypi/makefun/) [![Build Status](https://github.com/smarie/python-makefun/actions/workflows/base.yml/badge.svg)](https://github.com/smarie/python-makefun/actions/workflows/base.yml) [![Tests Status](https://smarie.github.io/python-makefun/reports/junit/junit-badge.svg?dummy=8484744)](https://smarie.github.io/python-makefun/reports/junit/report.html) [![Coverage Status](https://smarie.github.io/python-makefun/reports/coverage/coverage-badge.svg?dummy=8484744)](https://smarie.github.io/python-makefun/reports/coverage/index.html) [![codecov](https://codecov.io/gh/smarie/python-makefun/branch/main/graph/badge.svg)](https://codecov.io/gh/smarie/python-makefun) [![Flake8 Status](https://smarie.github.io/python-makefun/reports/flake8/flake8-badge.svg?dummy=8484744)](https://smarie.github.io/python-makefun/reports/flake8/index.html)\n\n[![Documentation](https://img.shields.io/badge/doc-latest-blue.svg)](https://smarie.github.io/python-makefun/) [![PyPI](https://img.shields.io/pypi/v/makefun.svg)](https://pypi.python.org/pypi/makefun/) [![Downloads](https://pepy.tech/badge/makefun)](https://pepy.tech/project/makefun) [![Downloads per week](https://pepy.tech/badge/makefun/week)](https://pepy.tech/project/makefun) [![GitHub stars](https://img.shields.io/github/stars/smarie/python-makefun.svg)](https://github.com/smarie/python-makefun/stargazers)\n\n**This is the readme for developers.** The documentation for users is available here: [https://smarie.github.io/python-makefun/](https://smarie.github.io/python-makefun/)\n\n## Want to contribute ?\n\nContributions are welcome ! Simply fork this project on github, commit your contributions, and create pull requests.\n\nHere is a non-exhaustive list of interesting open topics: [https://github.com/smarie/python-makefun/issues](https://github.com/smarie/python-makefun/issues)\n\n## `nox` setup\n\nThis project uses `nox` to define all lifecycle tasks. In order to be able to run those tasks, you should create python 3.7 environment and install the requirements:\n",
    "ContentSha": "xsbFsNd/mFrFwYcQVxxuzPPfaUO+h4eZ03RBwnVfJWI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<translate-content># python-makefun\n\n*一个用于动态创建 Python 函数的小型库。*\n\n[![Python 版本](https://img.shields.io/pypi/pyversions/makefun.svg)](https://pypi.python.org/pypi/makefun/) [![构建状态](https://github.com/smarie/python-makefun/actions/workflows/base.yml/badge.svg)](https://github.com/smarie/python-makefun/actions/workflows/base.yml) [![测试状态](https://smarie.github.io/python-makefun/reports/junit/junit-badge.svg?dummy=8484744)](https://smarie.github.io/python-makefun/reports/junit/report.html) [![覆盖率状态](https://smarie.github.io/python-makefun/reports/coverage/coverage-badge.svg?dummy=8484744)](https://smarie.github.io/python-makefun/reports/coverage/index.html) [![codecov](https://codecov.io/gh/smarie/python-makefun/branch/main/graph/badge.svg)](https://codecov.io/gh/smarie/python-makefun) [![Flake8 状态](https://smarie.github.io/python-makefun/reports/flake8/flake8-badge.svg?dummy=8484744)](https://smarie.github.io/python-makefun/reports/flake8/index.html)\n\n[![文档](https://img.shields.io/badge/doc-latest-blue.svg)](https://smarie.github.io/python-makefun/) [![PyPI](https://img.shields.io/pypi/v/makefun.svg)](https://pypi.python.org/pypi/makefun/) [![下载量](https://pepy.tech/badge/makefun)](https://pepy.tech/project/makefun) [![每周下载量](https://pepy.tech/badge/makefun/week)](https://pepy.tech/project/makefun) [![GitHub 星标](https://img.shields.io/github/stars/smarie/python-makefun.svg)](https://github.com/smarie/python-makefun/stargazers)\n\n**这是面向开发者的自述文件。** 用户文档请见这里：[https://smarie.github.io/python-makefun/](https://smarie.github.io/python-makefun/)\n\n## 想要贡献代码？\n\n欢迎贡献！只需在 GitHub 上 fork 本项目，提交你的贡献，并创建拉取请求。\n\n以下是不完全的有趣开放话题列表：[https://github.com/smarie/python-makefun/issues](https://github.com/smarie/python-makefun/issues)\n\n## `nox` 配置\n\n本项目使用 `nox` 来定义所有生命周期任务。为了能够运行这些任务，你应该创建 Python 3.7 环境并安装依赖：\n</translate-content>",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "A5M+xgd7OIjGF1OOwIbihrh6bcaHuoAi0eEL1b3SluQ=",
        "originContent": "# python-makefun",
        "translatedContent": "<translate-content># python-makefun"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "LpQVefE7OzvJchhJmw9JBfN7s6UjOwACS8TcTwnTM9M=",
        "originContent": "*Small library to dynamically create python functions.*",
        "translatedContent": "*一个用于动态创建 Python 函数的小型库。*"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "9pTgGRhrc+9963LZkCwe4hqNokT37gVTSOOZxL7G5I0=",
        "originContent": "[![Python versions](https://img.shields.io/pypi/pyversions/makefun.svg)](https://pypi.python.org/pypi/makefun/) [![Build Status](https://github.com/smarie/python-makefun/actions/workflows/base.yml/badge.svg)](https://github.com/smarie/python-makefun/actions/workflows/base.yml) [![Tests Status](https://smarie.github.io/python-makefun/reports/junit/junit-badge.svg?dummy=8484744)](https://smarie.github.io/python-makefun/reports/junit/report.html) [![Coverage Status](https://smarie.github.io/python-makefun/reports/coverage/coverage-badge.svg?dummy=8484744)](https://smarie.github.io/python-makefun/reports/coverage/index.html) [![codecov](https://codecov.io/gh/smarie/python-makefun/branch/main/graph/badge.svg)](https://codecov.io/gh/smarie/python-makefun) [![Flake8 Status](https://smarie.github.io/python-makefun/reports/flake8/flake8-badge.svg?dummy=8484744)](https://smarie.github.io/python-makefun/reports/flake8/index.html)",
        "translatedContent": "[![Python 版本](https://img.shields.io/pypi/pyversions/makefun.svg)](https://pypi.python.org/pypi/makefun/) [![构建状态](https://github.com/smarie/python-makefun/actions/workflows/base.yml/badge.svg)](https://github.com/smarie/python-makefun/actions/workflows/base.yml) [![测试状态](https://smarie.github.io/python-makefun/reports/junit/junit-badge.svg?dummy=8484744)](https://smarie.github.io/python-makefun/reports/junit/report.html) [![覆盖率状态](https://smarie.github.io/python-makefun/reports/coverage/coverage-badge.svg?dummy=8484744)](https://smarie.github.io/python-makefun/reports/coverage/index.html) [![codecov](https://codecov.io/gh/smarie/python-makefun/branch/main/graph/badge.svg)](https://codecov.io/gh/smarie/python-makefun) [![Flake8 状态](https://smarie.github.io/python-makefun/reports/flake8/flake8-badge.svg?dummy=8484744)](https://smarie.github.io/python-makefun/reports/flake8/index.html)"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "LVTEG/XWVQXNusca3Ox/h0dK+z9ueVUYgh91PxJFpmc=",
        "originContent": "[![Documentation](https://img.shields.io/badge/doc-latest-blue.svg)](https://smarie.github.io/python-makefun/) [![PyPI](https://img.shields.io/pypi/v/makefun.svg)](https://pypi.python.org/pypi/makefun/) [![Downloads](https://pepy.tech/badge/makefun)](https://pepy.tech/project/makefun) [![Downloads per week](https://pepy.tech/badge/makefun/week)](https://pepy.tech/project/makefun) [![GitHub stars](https://img.shields.io/github/stars/smarie/python-makefun.svg)](https://github.com/smarie/python-makefun/stargazers)",
        "translatedContent": "[![文档](https://img.shields.io/badge/doc-latest-blue.svg)](https://smarie.github.io/python-makefun/) [![PyPI](https://img.shields.io/pypi/v/makefun.svg)](https://pypi.python.org/pypi/makefun/) [![下载量](https://pepy.tech/badge/makefun)](https://pepy.tech/project/makefun) [![每周下载量](https://pepy.tech/badge/makefun/week)](https://pepy.tech/project/makefun) [![GitHub 星标](https://img.shields.io/github/stars/smarie/python-makefun.svg)](https://github.com/smarie/python-makefun/stargazers)"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "kOxW+DT4RzH+wsqjVGhwVvFNo50bd0IF70M0D+vqlxQ=",
        "originContent": "**This is the readme for developers.** The documentation for users is available here: [https://smarie.github.io/python-makefun/](https://smarie.github.io/python-makefun/)",
        "translatedContent": "**这是面向开发者的自述文件。** 用户文档请见这里：[https://smarie.github.io/python-makefun/](https://smarie.github.io/python-makefun/)"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "bcUI9cjqif7UBUtUN+Kx2UgcuCowKSGCt7G3fV6np8g=",
        "originContent": "## Want to contribute ?",
        "translatedContent": "## 想要贡献代码？"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "aGG92ITotQHNTwt8cnXd5+2b4E/9NWQSUWuW69/PUhM=",
        "originContent": "Contributions are welcome ! Simply fork this project on github, commit your contributions, and create pull requests.",
        "translatedContent": "欢迎贡献！只需在 GitHub 上 fork 本项目，提交你的贡献，并创建拉取请求。"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "UPLABPYtFbQvh9FnURJErK8FoMO0ZiWlyuVN7aZlWHw=",
        "originContent": "Here is a non-exhaustive list of interesting open topics: [https://github.com/smarie/python-makefun/issues](https://github.com/smarie/python-makefun/issues)",
        "translatedContent": "以下是不完全的有趣开放话题列表：[https://github.com/smarie/python-makefun/issues](https://github.com/smarie/python-makefun/issues)"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "sFLhi08nCsvcMA9hv1m9sB9RHyt5jiWSSDvB8AfIfyw=",
        "originContent": "## `nox` setup",
        "translatedContent": "## `nox` 配置"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 19,
        "rowsha": "0iAb169tr17GTB8ZNKT7Ew2jMu4q+D+UiBms+6pI4y8=",
        "originContent": "This project uses `nox` to define all lifecycle tasks. In order to be able to run those tasks, you should create python 3.7 environment and install the requirements:",
        "translatedContent": "本项目使用 `nox` 来定义所有生命周期任务。为了能够运行这些任务，你应该创建 Python 3.7 环境并安装依赖："
      },
      {
        "row": 20,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "</translate-content>"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "```bash\n>>> conda create -n noxenv python=\"3.7\"\n>>> activate noxenv\n(noxenv) >>> pip install -r noxfile-requirements.txt\n```",
    "ContentSha": "XX0zdU4ADeCgxOamNUv9rxL4U9leEOVsK5GA+uERvxk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n>>> conda create -n noxenv python=\"3.7\"\n>>> activate noxenv\n(noxenv) >>> pip install -r noxfile-requirements.txt\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "RyOEv6eq9rdifW7A8CJQ8t+7zvIZm5u+hrdu1rBo6BI=",
        "originContent": ">>> conda create -n noxenv python=\"3.7\"",
        "translatedContent": ">>> conda create -n noxenv python=\"3.7\""
      },
      {
        "row": 3,
        "rowsha": "fndnWM247bvFRoUuO+SjbnK7PnMFj1u2QnGXJoiXfiw=",
        "originContent": ">>> activate noxenv",
        "translatedContent": ">>> activate noxenv"
      },
      {
        "row": 4,
        "rowsha": "RIG34aBL6/uGHB1jaFhZXneA1leVTQwmvojLE0r09NE=",
        "originContent": "(noxenv) >>> pip install -r noxfile-requirements.txt",
        "translatedContent": "(noxenv) >>> pip install -r noxfile-requirements.txt"
      },
      {
        "row": 5,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 3,
    "Content": "\nYou should then be able to list all available tasks using:\n",
    "ContentSha": "o84Cfi3Wl5h681ONT/kobZMHvpubL6dYNR4BalyCesw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "你应该能够使用以下命令列出所有可用的任务：\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "你应该能够使用以下命令列出所有可用的任务："
      },
      {
        "row": 2,
        "rowsha": "7kjzBl6moxw2xRklckzKpc0WGcbpmUYUa8JeaR20obM=",
        "originContent": "You should then be able to list all available tasks using:",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "```\n>>> nox --list\nSessions defined in <path>\\noxfile.py:\n\n* tests-2.7 -> Run the test suite, including test reports generation and coverage reports.\n* tests-3.5 -> Run the test suite, including test reports generation and coverage reports.\n* tests-3.6 -> Run the test suite, including test reports generation and coverage reports.\n* tests-3.8 -> Run the test suite, including test reports generation and coverage reports.\n* tests-3.7 -> Run the test suite, including test reports generation and coverage reports.\n- docs-3.7 -> Generates the doc and serves it on a local http server. Pass '-- build' to build statically instead.\n- publish-3.7 -> Deploy the docs+reports on github pages. Note: this rebuilds the docs\n- release-3.7 -> Create a release on github corresponding to the latest tag\n```",
    "ContentSha": "iUXcUawK4ybPSksPSFBnff8nXqCcpaiiqvITT7EKW9Y=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\n>>> nox --list\nSessions defined in <path>\\noxfile.py:\n\n* tests-2.7 -> Run the test suite, including test reports generation and coverage reports.\n* tests-3.5 -> Run the test suite, including test reports generation and coverage reports.\n* tests-3.6 -> Run the test suite, including test reports generation and coverage reports.\n* tests-3.8 -> Run the test suite, including test reports generation and coverage reports.\n* tests-3.7 -> Run the test suite, including test reports generation and coverage reports.\n- docs-3.7 -> Generates the doc and serves it on a local http server. Pass '-- build' to build statically instead.\n- publish-3.7 -> Deploy the docs+reports on github pages. Note: this rebuilds the docs\n- release-3.7 -> Create a release on github corresponding to the latest tag\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "kEEdELEx015PHlvxm8f+7SsA0aE0/viRMGzqVCqqWYM=",
        "originContent": ">>> nox --list",
        "translatedContent": ">>> nox --list"
      },
      {
        "row": 3,
        "rowsha": "YweKT5Wo1csb97aBblXyzXXX+vlGwQzyBlsvi8e8uRU=",
        "originContent": "Sessions defined in <path>\\noxfile.py:",
        "translatedContent": "Sessions defined in <path>\\noxfile.py:"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "nDR9NjJPGCqkKO9sZ6IXamrqFDxMjcgHd2IkXYxHkRw=",
        "originContent": "* tests-2.7 -> Run the test suite, including test reports generation and coverage reports.",
        "translatedContent": "* tests-2.7 -> Run the test suite, including test reports generation and coverage reports."
      },
      {
        "row": 6,
        "rowsha": "ea4n3Ts7aEvcZvSCTfdeVdEFyhraOgWo1gYVzeMWPmg=",
        "originContent": "* tests-3.5 -> Run the test suite, including test reports generation and coverage reports.",
        "translatedContent": "* tests-3.5 -> Run the test suite, including test reports generation and coverage reports."
      },
      {
        "row": 7,
        "rowsha": "UWZxZGr8mbMn8A8JjpAbO12K225KGrxHGW000gwf3Bs=",
        "originContent": "* tests-3.6 -> Run the test suite, including test reports generation and coverage reports.",
        "translatedContent": "* tests-3.6 -> Run the test suite, including test reports generation and coverage reports."
      },
      {
        "row": 8,
        "rowsha": "WNLkMp7ntOnhaf0R0kAqwzc8mOEbLeJJ59P5JLhDFUI=",
        "originContent": "* tests-3.8 -> Run the test suite, including test reports generation and coverage reports.",
        "translatedContent": "* tests-3.8 -> Run the test suite, including test reports generation and coverage reports."
      },
      {
        "row": 9,
        "rowsha": "uvOYhPGaI8sbWp87OpaUmF60qtiZ7Ienxmk06pSR/Vc=",
        "originContent": "* tests-3.7 -> Run the test suite, including test reports generation and coverage reports.",
        "translatedContent": "* tests-3.7 -> Run the test suite, including test reports generation and coverage reports."
      },
      {
        "row": 10,
        "rowsha": "WApDHOAgX/1HDgjFs/72v1ExucCjVNxjMiElcKRomvA=",
        "originContent": "- docs-3.7 -> Generates the doc and serves it on a local http server. Pass '-- build' to build statically instead.",
        "translatedContent": "- docs-3.7 -> Generates the doc and serves it on a local http server. Pass '-- build' to build statically instead."
      },
      {
        "row": 11,
        "rowsha": "Ylt5fkpM2qXRCpXKrW/0FGCXqRBkfJn7hipI/TZTzrM=",
        "originContent": "- publish-3.7 -> Deploy the docs+reports on github pages. Note: this rebuilds the docs",
        "translatedContent": "- publish-3.7 -> Deploy the docs+reports on github pages. Note: this rebuilds the docs"
      },
      {
        "row": 12,
        "rowsha": "jXsjeL6Wl2XmNljNgQLRyuADcua4C4KMCtCyV5liWo0=",
        "originContent": "- release-3.7 -> Create a release on github corresponding to the latest tag",
        "translatedContent": "- release-3.7 -> Create a release on github corresponding to the latest tag"
      },
      {
        "row": 13,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 5,
    "Content": "\n## Running the tests and generating the reports\n\nThis project uses `pytest` so running `pytest` at the root folder will execute all tests on current environment. However it is a bit cumbersome to manage all requirements by hand ; it is easier to use `nox` to run `pytest` on all supported python environments with the correct package requirements:\n",
    "ContentSha": "ySZJQ2U0a8LLuzC+pI2XbLips643zw9FRpsEmpEw2Gc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## 运行测试和生成报告\n\n该项目使用 `pytest`，因此在根目录运行 `pytest` 会在当前环境下执行所有测试。  \n然而，手动管理所有依赖有些繁琐；使用 `nox` 在所有支持的 Python 环境中运行带有正确包依赖的 `pytest` 会更简单：\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## 运行测试和生成报告"
      },
      {
        "row": 2,
        "rowsha": "Z/tMrid/67gnrf/b3N8IKUCCfwyf/ajhTsl3awBvCS8=",
        "originContent": "## Running the tests and generating the reports",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "该项目使用 `pytest`，因此在根目录运行 `pytest` 会在当前环境下执行所有测试。  "
      },
      {
        "row": 4,
        "rowsha": "MKpI/Tb6tKm6XdI97bHhQLSaiCpS27Z3DyAUUyhWNkg=",
        "originContent": "This project uses `pytest` so running `pytest` at the root folder will execute all tests on current environment. However it is a bit cumbersome to manage all requirements by hand ; it is easier to use `nox` to run `pytest` on all supported python environments with the correct package requirements:",
        "translatedContent": "然而，手动管理所有依赖有些繁琐；使用 `nox` 在所有支持的 Python 环境中运行带有正确包依赖的 `pytest` 会更简单："
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 6,
    "Content": "```bash\nnox\n```",
    "ContentSha": "CceD3gmdenZBT3pw5qS+j5yfClkaqzi04HkfRpACUBs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\nnox\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "sHbQZD2ClOkR2OPmfGvfKnZo3K+oVYpNNrdEJ4PUsFU=",
        "originContent": "nox",
        "translatedContent": "nox"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 7,
    "Content": "\nTests and coverage reports are automatically generated under `./docs/reports` for one of the sessions (`tests-3.7`). \n\nIf you wish to execute tests on a specific environment, use explicit session names, e.g. `nox -s tests-3.6`.\n\n\n## Editing the documentation\n\nThis project uses `mkdocs` to generate its documentation page. Therefore building a local copy of the doc page may be done using `mkdocs build -f docs/mkdocs.yml`. However once again things are easier with `nox`. You can easily build and serve locally a version of the documentation site using:\n",
    "ContentSha": "pSetT+KEn2zPIjGhJtgR0uKc0+VjybYXoe9K9oOvcYs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<translate-content>\n测试和覆盖率报告会自动生成在 `./docs/reports` 目录下，针对某个会话（`tests-3.7`）。\n\n如果您希望在特定环境下执行测试，请使用明确的会话名称，例如 `nox -s tests-3.6`。\n\n\n## 编辑文档\n\n本项目使用 `mkdocs` 来生成文档页面。因此，可以使用 `mkdocs build -f docs/mkdocs.yml` 来构建本地文档副本。但同样，使用 `nox` 会更简单。您可以轻松地构建并本地启动一个文档站点版本，使用：\n</translate-content>",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<translate-content>"
      },
      {
        "row": 2,
        "rowsha": "CYUkBj2BPJeAlRyDGPZPJxx5nalglZTjphKONs8UN20=",
        "originContent": "Tests and coverage reports are automatically generated under `./docs/reports` for one of the sessions (`tests-3.7`). ",
        "translatedContent": "测试和覆盖率报告会自动生成在 `./docs/reports` 目录下，针对某个会话（`tests-3.7`）。"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "Ew/Mc1vnmwCpZGdkuONfK8mMR3pjT0F944HxN7xHYqg=",
        "originContent": "If you wish to execute tests on a specific environment, use explicit session names, e.g. `nox -s tests-3.6`.",
        "translatedContent": "如果您希望在特定环境下执行测试，请使用明确的会话名称，例如 `nox -s tests-3.6`。"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "8wgP0ud3mhcs/vC7iHbKzdHKaj4B3azKFkOVp0Dccsw=",
        "originContent": "## Editing the documentation",
        "translatedContent": "## 编辑文档"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "v/t5FVMQdQEnZXTyol4KebhkiZV861rGU8CpIPebwlw=",
        "originContent": "This project uses `mkdocs` to generate its documentation page. Therefore building a local copy of the doc page may be done using `mkdocs build -f docs/mkdocs.yml`. However once again things are easier with `nox`. You can easily build and serve locally a version of the documentation site using:",
        "translatedContent": "本项目使用 `mkdocs` 来生成文档页面。因此，可以使用 `mkdocs build -f docs/mkdocs.yml` 来构建本地文档副本。但同样，使用 `nox` 会更简单。您可以轻松地构建并本地启动一个文档站点版本，使用："
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "</translate-content>"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 8,
    "Content": "```bash\n>>> nox -s docs\nnox > Running session docs-3.7\nnox > Creating conda env in .nox\\docs-3-7 with python=3.7\nnox > [docs] Installing requirements with pip: ['mkdocs-material', 'mkdocs', 'pymdown-extensions', 'pygments']\nnox > python -m pip install mkdocs-material mkdocs pymdown-extensions pygments\nnox > mkdocs serve -f ./docs/mkdocs.yml\nINFO    -  Building documentation...\nINFO    -  Cleaning site directory\nINFO    -  The following pages exist in the docs directory, but are not included in the \"nav\" configuration:\n  - long_description.md\nINFO    -  Documentation built in 1.07 seconds\nINFO    -  Serving on http://127.0.0.1:8000\nINFO    -  Start watching changes\n...\n```",
    "ContentSha": "5UZRd7KWLsMUEsxCy24+pr7IEc3h//JdKIw8RvW3iiU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\n>>> nox -s docs\nnox > Running session docs-3.7\nnox > Creating conda env in .nox\\docs-3-7 with python=3.7\nnox > [docs] Installing requirements with pip: ['mkdocs-material', 'mkdocs', 'pymdown-extensions', 'pygments']\nnox > python -m pip install mkdocs-material mkdocs pymdown-extensions pygments\nnox > mkdocs serve -f ./docs/mkdocs.yml\nINFO    -  Building documentation...\nINFO    -  Cleaning site directory\nINFO    -  The following pages exist in the docs directory, but are not included in the \"nav\" configuration:\n  - long_description.md\nINFO    -  Documentation built in 1.07 seconds\nINFO    -  Serving on http://127.0.0.1:8000\nINFO    -  Start watching changes\n...\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "kUkLDOO7T2vc0juOBKwuJODF6BHp/lFlopWY4jETkiQ=",
        "originContent": ">>> nox -s docs",
        "translatedContent": ">>> nox -s docs"
      },
      {
        "row": 3,
        "rowsha": "iDCymZIU50uqf0eaG2EQsNWdGpKH0cclJkepG6wmN9I=",
        "originContent": "nox > Running session docs-3.7",
        "translatedContent": "nox > Running session docs-3.7"
      },
      {
        "row": 4,
        "rowsha": "ckyiT8HKpaxtdvZHexYWaSGyAGdQ3+1BVFVwSDsEekc=",
        "originContent": "nox > Creating conda env in .nox\\docs-3-7 with python=3.7",
        "translatedContent": "nox > Creating conda env in .nox\\docs-3-7 with python=3.7"
      },
      {
        "row": 5,
        "rowsha": "s469cQDhU1sYRGi+JfKvIHiKwNGgCQhtJDBK/wdC1Lo=",
        "originContent": "nox > [docs] Installing requirements with pip: ['mkdocs-material', 'mkdocs', 'pymdown-extensions', 'pygments']",
        "translatedContent": "nox > [docs] Installing requirements with pip: ['mkdocs-material', 'mkdocs', 'pymdown-extensions', 'pygments']"
      },
      {
        "row": 6,
        "rowsha": "lYZUX6b3z/VMSn1QPfmLGyt1bL1u4H084DI2q9e4wmQ=",
        "originContent": "nox > python -m pip install mkdocs-material mkdocs pymdown-extensions pygments",
        "translatedContent": "nox > python -m pip install mkdocs-material mkdocs pymdown-extensions pygments"
      },
      {
        "row": 7,
        "rowsha": "46snAma1MhAOJlHex9aXKH/vteVTo+XUnrC9N+UdKZY=",
        "originContent": "nox > mkdocs serve -f ./docs/mkdocs.yml",
        "translatedContent": "nox > mkdocs serve -f ./docs/mkdocs.yml"
      },
      {
        "row": 8,
        "rowsha": "zxQFtbDYaa2AbQ8KQ8G5Ah1uzDzSrThicNRrvdCsc88=",
        "originContent": "INFO    -  Building documentation...",
        "translatedContent": "INFO    -  Building documentation..."
      },
      {
        "row": 9,
        "rowsha": "IwL2xw5QKJQTS/hq4YRmT8JySk+9dCoInlIprDy96eI=",
        "originContent": "INFO    -  Cleaning site directory",
        "translatedContent": "INFO    -  Cleaning site directory"
      },
      {
        "row": 10,
        "rowsha": "xUNaur5RFh5RVute4pWfMRZM56gN8ODrK0g5etAlgZA=",
        "originContent": "INFO    -  The following pages exist in the docs directory, but are not included in the \"nav\" configuration:",
        "translatedContent": "INFO    -  The following pages exist in the docs directory, but are not included in the \"nav\" configuration:"
      },
      {
        "row": 11,
        "rowsha": "nMPq9szPxEh/QfAmNYGgg+nK5FCADZ7Z/t85E7r13a4=",
        "originContent": "  - long_description.md",
        "translatedContent": "  - long_description.md"
      },
      {
        "row": 12,
        "rowsha": "MPuWuUwuLm3MYaNMbqO362BNRbb2yR9P8koSb6SKRBw=",
        "originContent": "INFO    -  Documentation built in 1.07 seconds",
        "translatedContent": "INFO    -  Documentation built in 1.07 seconds"
      },
      {
        "row": 13,
        "rowsha": "Z8CJ2i6Q5l7Ax5mul0iTwy82Od5+4DxU+JBpL1onEqc=",
        "originContent": "INFO    -  Serving on http://127.0.0.1:8000",
        "translatedContent": "INFO    -  Serving on http://127.0.0.1:8000"
      },
      {
        "row": 14,
        "rowsha": "50N3VSWZNeQFdsXgP0/yzAdfBWdCkFBJZP3g9+uUr6o=",
        "originContent": "INFO    -  Start watching changes",
        "translatedContent": "INFO    -  Start watching changes"
      },
      {
        "row": 15,
        "rowsha": "q132Jbx229ThY77S3YiN+Cj5AVm7k1VlJcMYIbZUHUY=",
        "originContent": "...",
        "translatedContent": "..."
      },
      {
        "row": 16,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 9,
    "Content": "\nWhile this is running, you can edit the files under `./docs/` and browse the automatically refreshed documentation at the local [http://127.0.0.1:8000](http://127.0.0.1:8000) page.\n\nOnce you are done, simply hit `<CTRL+C>` to stop the session.\n\nPublishing the documentation (including tests and coverage reports) is done automatically by [the continuous integration engine](https://github.com/smarie/python-makefun/actions), using the `nox -s publish` session, this is not needed for local development.\n\n## Packaging\n\nThis project uses `setuptools_scm` to synchronise the version number. Therefore the following command should be used for development snapshots as well as official releases: `python setup.py sdist bdist_wheel`. However this is not generally needed since [the continuous integration engine](https://github.com/smarie/python-makefun/actions) does it automatically for us on git tags. For reference, this is done in the `nox -s release` session.\n\n### Merging pull requests with edits - memo\n\nAx explained in github ('get commandline instructions'):\n",
    "ContentSha": "sbVVH3HTmQBZpFk4tm6v2y2HsrTDvz5h1M/COYmJFnQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "<translate-content>\n在运行时，您可以编辑 `./docs/` 目录下的文件，并在本地 [http://127.0.0.1:8000](http://127.0.0.1:8000) 页面浏览自动刷新的文档。\n\n完成后，只需按 `<CTRL+C>` 停止会话。\n\n文档发布（包括测试和覆盖率报告）由[持续集成引擎](https://github.com/smarie/python-makefun/actions)自动完成，使用 `nox -s publish` 会话，本地开发不需要此操作。\n\n## 打包\n\n本项目使用 `setuptools_scm` 同步版本号。因此，开发快照和正式发布都应使用以下命令：`python setup.py sdist bdist_wheel`。但通常不需要手动执行，[持续集成引擎](https://github.com/smarie/python-makefun/actions)会在 git 标签上自动完成。作为参考，这在 `nox -s release` 会话中执行。\n\n### 合并带有编辑的拉取请求 - 备忘\n\nAx 在 GitHub 中解释（“获取命令行指令”）：\n</translate-content>",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "<translate-content>"
      },
      {
        "row": 2,
        "rowsha": "G0bx8GO+xi0o0ctkYCGJABd0wYAEyVu1BMr1fzguqzU=",
        "originContent": "While this is running, you can edit the files under `./docs/` and browse the automatically refreshed documentation at the local [http://127.0.0.1:8000](http://127.0.0.1:8000) page.",
        "translatedContent": "在运行时，您可以编辑 `./docs/` 目录下的文件，并在本地 [http://127.0.0.1:8000](http://127.0.0.1:8000) 页面浏览自动刷新的文档。"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "0KnhqQwFEoz5/5DlhWRakTKbZ1+roXK5FWbZfJMQpLE=",
        "originContent": "Once you are done, simply hit `<CTRL+C>` to stop the session.",
        "translatedContent": "完成后，只需按 `<CTRL+C>` 停止会话。"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "HHFeteMM3JUqTIfmihwztlbxYYdRvT+YWjofByB7Duc=",
        "originContent": "Publishing the documentation (including tests and coverage reports) is done automatically by [the continuous integration engine](https://github.com/smarie/python-makefun/actions), using the `nox -s publish` session, this is not needed for local development.",
        "translatedContent": "文档发布（包括测试和覆盖率报告）由[持续集成引擎](https://github.com/smarie/python-makefun/actions)自动完成，使用 `nox -s publish` 会话，本地开发不需要此操作。"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 8,
        "rowsha": "2NbSFzZ5Ape+suQVcI8yH8q6lm9FzDv3VvO1lad51uY=",
        "originContent": "## Packaging",
        "translatedContent": "## 打包"
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 10,
        "rowsha": "UisyjkS3VQ7fGZgDH9MarKd4CvGQI+CaoT2hc+b6l0Y=",
        "originContent": "This project uses `setuptools_scm` to synchronise the version number. Therefore the following command should be used for development snapshots as well as official releases: `python setup.py sdist bdist_wheel`. However this is not generally needed since [the continuous integration engine](https://github.com/smarie/python-makefun/actions) does it automatically for us on git tags. For reference, this is done in the `nox -s release` session.",
        "translatedContent": "本项目使用 `setuptools_scm` 同步版本号。因此，开发快照和正式发布都应使用以下命令：`python setup.py sdist bdist_wheel`。但通常不需要手动执行，[持续集成引擎](https://github.com/smarie/python-makefun/actions)会在 git 标签上自动完成。作为参考，这在 `nox -s release` 会话中执行。"
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 12,
        "rowsha": "rcfVeU6f7psR1pvNaXLFPTicldS2ek5Nmzvxa5Xd1Ms=",
        "originContent": "### Merging pull requests with edits - memo",
        "translatedContent": "### 合并带有编辑的拉取请求 - 备忘"
      },
      {
        "row": 13,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 14,
        "rowsha": "PNSsBxXqlsV1TvGeriU+2xGbDED3p4OFZ8otmFdiyqw=",
        "originContent": "Ax explained in github ('get commandline instructions'):",
        "translatedContent": "Ax 在 GitHub 中解释（“获取命令行指令”）："
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "</translate-content>"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 10,
    "Content": "```bash\ngit checkout -b <git_name>-<feature_branch> main\ngit pull https://github.com/<git_name>/python-makefun.git <feature_branch> --no-commit --ff-only\n```",
    "ContentSha": "l9uLc+dwd+HBYtYv0nuuEj7ZVZrOp+Mk2ZS3O4RIGGk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ngit checkout -b <git_name>-<feature_branch> main\ngit pull https://github.com/<git_name>/python-makefun.git <feature_branch> --no-commit --ff-only\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "/AHlsrkYIH45sqEw9ECR6uk8NPyBxPis58IE0vyA1uM=",
        "originContent": "git checkout -b <git_name>-<feature_branch> main",
        "translatedContent": "git checkout -b <git_name>-<feature_branch> main"
      },
      {
        "row": 3,
        "rowsha": "Uq0gaEZHPnSuUfnv465+/CY0hLS4teKUkuzT8NNVCX0=",
        "originContent": "git pull https://github.com/<git_name>/python-makefun.git <feature_branch> --no-commit --ff-only",
        "translatedContent": "git pull https://github.com/<git_name>/python-makefun.git <feature_branch> --no-commit --ff-only"
      },
      {
        "row": 4,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 11,
    "Content": "\nif the second step does not work, do a normal auto-merge (do not use **rebase**!):\n",
    "ContentSha": "Tb5TH+iHdvJR5bZ9lYPddGgV4HcpOQhIWfkt+koPH30=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "if the second step does not work, do a normal auto-merge (do not use **rebase**!):\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "if the second step does not work, do a normal auto-merge (do not use **rebase**!):"
      },
      {
        "row": 2,
        "rowsha": "XJUdr3nEiglUN24Xk9YbVOOjjbYPpJ+xpbM3jyqB3eQ=",
        "originContent": "if the second step does not work, do a normal auto-merge (do not use **rebase**!):",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 12,
    "Content": "```bash\ngit pull https://github.com/<git_name>/python-makefun.git <feature_branch> --no-commit\n```",
    "ContentSha": "oVSA+esNv7yaF6ZydVLKy0pwKjQnr2AF+pv4PPCfAwA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```bash\ngit pull https://github.com/<git_name>/python-makefun.git <feature_branch> --no-commit\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "rTMjNc+qNIxb1xXDR5hEYiJw1fc4muBwuBsTXVIaIho=",
        "originContent": "```bash",
        "translatedContent": "```bash"
      },
      {
        "row": 2,
        "rowsha": "3QKFUGzv7xgpo6Ct112CXYZum4Yvq4qttc3SI7eXTBw=",
        "originContent": "git pull https://github.com/<git_name>/python-makefun.git <feature_branch> --no-commit",
        "translatedContent": "git pull https://github.com/<git_name>/python-makefun.git <feature_branch> --no-commit"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 13,
    "Content": "\nFinally review the changes, possibly perform some modifications, and commit.\n",
    "ContentSha": "SvPJshpp9kcGnIxBDVGK5NzFpSLc5CU9mraqxjaZgEQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "最后审查更改，可能进行一些修改，然后提交。\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "最后审查更改，可能进行一些修改，然后提交。"
      },
      {
        "row": 2,
        "rowsha": "kyHmWQw4nrPG0aCnDm60Z3NuFTGn1R99Z2XpDVyTrEc=",
        "originContent": "Finally review the changes, possibly perform some modifications, and commit.",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]