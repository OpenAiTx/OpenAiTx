{
  "id": 1,
  "origin": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/aadya940/autoresume/main/main_app/frontend/public/autoresume-logo.png\" alt=\"autoResume Logo\" title=\"autoResume Logo\" width=\"180\"/>\n</p>\n\n<h1 align=\"center\">autoResume</h1>\n\n<p align=\"center\">\n  <b>Open‑source resume builder, paste your links, edit manually, and let AI lend a hand with polishing, updating, and tailoring your resume.</b>\n</p>\n\n---\n\n### How to use this?\n\n[Medium Blog Link](https://medium.com/@aadyachinubhai/autoresume-copy-and-paste-links-its-that-simple-8e50e6d155a1)\n\nThe Blog is outdated with respect to the User Interface and Template used.\n\n## Features\n\n- <b>Easy Link Import:</b> Paste links from websites, and quickly build a PDF resume.\n- <b>Manual Editor Included:</b> Fine‑tune or build your resume from scratch with an embedded code editor.\n- <b>Smart Suggestions:</b>  Share feedback or new links, and smartedits will help refine and update your resume.\n- <b>Tailored for Jobs:</b> Paste a job description, and get recommendations for aligning your resume.\n- <b>LaTeX Quality:</b> All resumes are generated using LaTeX for a clean, professional layout.\n- <b>Instant Preview:</b> See your resume as a PDF in real time.\n- <b>Easy Reset:</b> Clear and restart your resume in a click.\n- <b>Local:</b> Runs fully on your machine using Docker.\n\n---\n\n## Getting Started\n\n### Prerequisites\n- [Docker](https://www.docker.com/get-started)\n- [Docker Compose](https://docs.docker.com/compose/)\n\n### Setup\n\n1. Clone the repository:\n   ```bash\n   git clone https://github.com/aadya940/autoresume.git\n   cd autoresume\n   ```\n2. Build and start the app:\n   ```bash\n   docker compose up --build\n   ```\n3. Access the apps:\n   \n   [_http://localhost:5173_](http://localhost:5173)\n---\n\n## Usage\n\n1. Open autoResume in your browser.\n2. Click on the :gear: icon, paste in your [GOOGLE API KEY](https://aistudio.google.com/) and your Email. \n3. Paste links to your professional information (e.g., Github, Personal Website, etc.).\n4. Optionally, add feedback or a job posting link for further customization.\n5. Click <b>Generate Resume</b> and let the AI do the rest!\n\n---\n\n## License\n\nThis project is licensed under the Apache 2.0 License.\n\n## Contributing Guide\n\n### Frontend\n- Implement React components in the `frontend/src/components/` folder\n- We use Chakra UI to implement components.\n- Import and use your components in `frontend/src/App.jsx`\n\n### Backend\n- Implement API routes in the `backend/src/routes/` directory\n- Add AI functionality in the `backend/src/ai/` directory\n- We use the `black` code formatter for Python code\n- Keep route handlers clean and logic separate\n\n### General Guidelines\n- Create a new branch for your feature/fix: `git checkout -b your-branch-name`\n- Write clear commit messages\n- Test your changes before submitting a PR\n\n### Submitting Changes\n1. Create a Pull Request\n2. In your PR description, include:\n   - What changes you made\n   - Why you made them\n   - Any relevant screenshots or test results\n   - Any breaking changes or migration steps needed\n\nWe appreciate your contributions and will review your PR as soon as possible!\n",
  "origin_sha": "IjOclQFoW3mNU54k5XHQ76J407UZ/Cmuv0xYFlylToY=",
  "translate": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/aadya940/autoresume/main/main_app/frontend/public/autoresume-logo.png\" alt=\"autoResume Logo\" title=\"autoResume Logo\" width=\"180\"/>\n</p>\n\n<h1 align=\"center\">autoResume</h1>\n\n<p align=\"center\">\n  <b>Open-Source-Lebenslauf-Generator: Fügen Sie Ihre Links ein, bearbeiten Sie manuell und lassen Sie KI beim Polieren, Aktualisieren und Anpassen Ihres Lebenslaufs helfen.</b>\n</p>\n\n---\n\n### Wie benutzt man das?\n\n[Medium Blog Link](https://medium.com/@aadyachinubhai/autoresume-copy-and-paste-links-its-that-simple-8e50e6d155a1)\n\nDer Blog ist veraltet in Bezug auf die Benutzeroberfläche und das verwendete Template.\n\n## Funktionen\n\n- <b>Einfache Link-Importfunktion:</b> Fügen Sie Links von Webseiten ein und erstellen Sie schnell einen PDF-Lebenslauf.\n- <b>Manueller Editor inklusive:</b> Verfeinern oder erstellen Sie Ihren Lebenslauf von Grund auf mit einem eingebetteten Code-Editor.\n- <b>Intelligente Vorschläge:</b> Geben Sie Feedback oder neue Links an, und Smartedits helfen dabei, Ihren Lebenslauf zu verfeinern und zu aktualisieren.\n- <b>Joborientierte Anpassung:</b> Fügen Sie eine Stellenbeschreibung ein und erhalten Sie Empfehlungen zur Ausrichtung Ihres Lebenslaufs.\n- <b>LaTeX-Qualität:</b> Alle Lebensläufe werden mit LaTeX für ein sauberes, professionelles Layout generiert.\n- <b>Sofortige Vorschau:</b> Sehen Sie Ihren Lebenslauf in Echtzeit als PDF.\n- <b>Einfache Rücksetzung:</b> Löschen und starten Sie Ihren Lebenslauf mit einem Klick neu.\n- <b>Lokal:</b> Läuft vollständig auf Ihrem Rechner mit Docker.\n\n---\n\n## Erste Schritte\n\n### Voraussetzungen\n- [Docker](https://www.docker.com/get-started)\n- [Docker Compose](https://docs.docker.com/compose/)\n\n### Einrichtung\n\n1. Repository klonen:\n   ```bash\n   git clone https://github.com/aadya940/autoresume.git\n   cd autoresume\n   ```\n2. App bauen und starten:\n   ```bash\n   docker compose up --build\n   ```\n3. Auf die Apps zugreifen:\n   \n   [_http://localhost:5173_](http://localhost:5173)\n---\n\n## Verwendung\n\n1. Öffnen Sie autoResume in Ihrem Browser.\n2. Klicken Sie auf das :gear: Symbol, fügen Sie Ihren [GOOGLE API KEY](https://aistudio.google.com/) und Ihre E-Mail-Adresse ein.\n3. Fügen Sie Links zu Ihren beruflichen Informationen ein (z.B. Github, persönliche Webseite usw.).\n4. Optional: Geben Sie Feedback oder einen Link zu einer Stellenanzeige für weitere Anpassungen ein.\n5. Klicken Sie auf <b>Generate Resume</b> und lassen Sie die KI den Rest erledigen!\n\n---\n\n## Lizenz\n\nDieses Projekt ist unter der Apache 2.0 Lizenz lizenziert.\n\n## Beitragshinweise\n\n### Frontend\n- Implementieren Sie React-Komponenten im Ordner `frontend/src/components/`\n- Wir verwenden Chakra UI zur Umsetzung der Komponenten.\n- Importieren und nutzen Sie Ihre Komponenten in `frontend/src/App.jsx`\n\n### Backend\n- Implementieren Sie API-Routen im Verzeichnis `backend/src/routes/`\n- Fügen Sie KI-Funktionalität im Verzeichnis `backend/src/ai/` hinzu\n- Wir verwenden den Code-Formatter `black` für Python-Code\n- Halten Sie die Routen-Handler sauber und trennen Sie die Logik\n\n### Allgemeine Richtlinien\n- Erstellen Sie einen neuen Branch für Ihr Feature/Fix: `git checkout -b ihr-branch-name`\n- Schreiben Sie klare Commit-Nachrichten\n- Testen Sie Ihre Änderungen, bevor Sie einen PR einreichen\n\n### Änderungen einreichen\n1. Erstellen Sie eine Pull Request\n2. Fügen Sie in Ihrer PR-Beschreibung Folgendes hinzu:\n   - Welche Änderungen Sie vorgenommen haben\n   - Warum Sie diese vorgenommen haben\n   - Relevante Screenshots oder Testergebnisse\n   - Eventuelle Breaking Changes oder notwendige Migrationsschritte\n\nWir schätzen Ihre Beiträge und werden Ihre PR so schnell wie möglich prüfen!",
  "status": "ok"
}