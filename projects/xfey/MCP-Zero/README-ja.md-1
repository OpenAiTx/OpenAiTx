{
  "id": 1,
  "origin": "## MCP-Zero: Active Tool Discovery for Autonomous LLM Agents\n\n<div style=\"display: flex; align-items: center; gap: 10px; margin-bottom: 10px;\">\n  <!-- <img src=\"https://raw.githubusercontent.com/xfey/MCP-Zero/master/assets/robot.png\" alt=\"MCP-Zero Robot\" width=\"24\" height=\"24\"> -->\n  <a href=\"https://arxiv.org/abs/2506.01056\">\n    <img src=\"https://img.shields.io/badge/Paper-arXiv-red\">\n  </a>\n  <a href=\"https://arxiv.org/abs/2506.01056\">\n    https://arxiv.org/abs/2506.01056\n  </a>\n</div>\n\n\nThanks for your attention for MCP-Zero! 🤗\n\nWe have now open-sourced the code involved in the paper. We will continue to update our work, explore its application in the industry, and continue to expand this project.\n\n\n<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/xfey/MCP-Zero/master/assets/fig1.png\" alt=\"MCP-Zero workflow\">\n  <p> Using MCP-Zero to proactively construct toolchains for \"Making a great meal\"</p>\n</div>\n\n\n### Method: MCP-Zero\n\n```\nMCP-zero/\n├── experiment_apibank.py       # experiments: APIBank\n├── experiment_mcptools.py      # experiments: mcp_tools (needle test)\n├── matcher.py                  # code for similarity matching\n├── prompt_guide/               # prompts for our method\n├── reformatter.py              # json formatter for tool description\n├── sampler.py                  # sampler for selecting target tool\n├── test_cases.jsonl            # testcase for the matcher\n├── test_matcher.py             # unit test for the matcher\n└── utils.py                    # utils: grid_search\n```\n\nWe have now released our code for the paper. The code in the paper implements retrieval capabilities and achieves concrete results in experiments.\n\nIn our future work, we are committed to applying MCP-zero to the industry, so other modules still need to be involved, such as the dynamic deployment of MCP servers, the environment deployment for GAIA test, etc. We will continue to improve our work, and thank you all for your attention to this work. Leave a star🌟 to let me know you are staying updated :D\n\n\n\n### Dataset: MCP-tools\n\n- **Google Drive**: [Download Link](https://drive.google.com/file/d/1RjBGU-AGdHdhUABoeYSztbfQlD0hjUBn/view?usp=sharing)\n- **Huggingface Link**: Coming soon\n- **Put the file at**: `./MCP-tools/mcp_tools_with_embedding.json`\n\n\n**Introduction**: A dataset containing all filtered tools (308 servers and 2,797 tools in total) from the MCP official repo.\n\n**Data structure**:\n```\n{\n  \"server_name\": string, // The name of the MCP server, extracted or inferred from the README\n  \"server_summary\": string, // A summary of the server's purpose and capabilities, based on all relevant parts of the README.\n  \"server_description\": string, // Description from metadata. \n  \"description_embedding\": float[3072], // The embedding of the server description from text-embedding-3-large\n  \"summary_embedding\": float[3072], // The embedding of the server summary from text-embedding-3-large\n  \"tools\": [\n    {\n      \"name\": string, // The function/tool name\n      \"description\": string, // A concise description of what the tool does\n      \"description_embedding\": float[3072], // The embedding of the tool description from text-embedding-3-large\n      \"parameter\": { // A dictionary of input parameters, being included if explicitly defined\n        \"param1\": \"(type) description1\",\n        \"param2\": \"(Optional, type) description2\"\n      }\n    }\n  ]\n}\n```\n\n**Build dataset on your own**: If you want to build custom dataset for MCP servers, you may follow the code under the `MCP-tools/build_data` folder.\n\n```\nMCP-tools/\n├── build_data\n│   ├── get_server_summary.py       # code to extract structural data for MCP server's ReadMe file\n│   ├── run_vllm.sh                 # deploy the Qwen2.5-72B-Instruct model with VLLM\n│   └── server_summary.prompt       # the prompt for extracting dataset\n└── download_data.md\n```\n\n\n### Citation\n\n> Citation makes me happy.\n> \n>   --Shakespeare\n>   ~~(just for fun :D)~~\n\n```bibtex\n@article{fei2025mcp,\n  title={MCP-Zero: Active Tool Discovery for Autonomous LLM Agents},\n  author={Fei, Xiang and Zheng, Xiawu and Feng, Hao},\n  journal={arXiv preprint arXiv:2506.01056},",
  "origin_sha": "et8q7QWbvxPeyCvG0HhtET5U03TzIiVaUmeyefJHbvc=",
  "translate": "## MCP-Zero: 自律型LLMエージェントのための能動的ツール探索\n\n<div style=\"display: flex; align-items: center; gap: 10px; margin-bottom: 10px;\">\n  <!-- <img src=\"https://raw.githubusercontent.com/xfey/MCP-Zero/master/assets/robot.png\" alt=\"MCP-Zero Robot\" width=\"24\" height=\"24\"> -->\n  <a href=\"https://arxiv.org/abs/2506.01056\">\n    <img src=\"https://img.shields.io/badge/Paper-arXiv-red\">\n  </a>\n  <a href=\"https://arxiv.org/abs/2506.01056\">\n    https://arxiv.org/abs/2506.01056\n  </a>\n</div>\n\n\nMCP-Zeroへのご関心ありがとうございます！🤗\n\n本論文で使用したコードをオープンソース化しました。今後も本研究を継続的にアップデートし、産業界への応用を模索し、プロジェクトを拡張していきます。\n\n\n<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/xfey/MCP-Zero/master/assets/fig1.png\" alt=\"MCP-Zero workflow\">\n  <p> MCP-Zeroを用いて「素晴らしい食事を作る」ためのツールチェーンを能動的に構築する</p>\n</div>\n\n\n### 手法: MCP-Zero\n\n```\nMCP-zero/\n├── experiment_apibank.py       # 実験: APIBank\n├── experiment_mcptools.py      # 実験: mcp_tools（needleテスト）\n├── matcher.py                  # 類似度マッチング用コード\n├── prompt_guide/               # 本手法用のプロンプト\n├── reformatter.py              # ツール説明用のjsonフォーマッタ\n├── sampler.py                  # ターゲットツール選択用サンプラー\n├── test_cases.jsonl            # matcher用テストケース\n├── test_matcher.py             # matcherのユニットテスト\n└── utils.py                    # ユーティリティ: grid_search\n```\n\n論文で用いたコードを公開しました。論文中のコードは検索機能を実装し、実験で具体的な成果を上げています。\n\n今後の研究では、MCP-zeroを産業界に応用することに注力していきます。そのため、MCPサーバの動的デプロイメントやGAIAテストの環境構築など、他のモジュールも必要となります。今後も本研究を継続的に改善していきますので、ご注目いただきありがとうございます。スター🌟を付けていただけると励みになります :D\n\n\n\n### データセット: MCP-tools\n\n- **Google Drive**: [ダウンロードリンク](https://drive.google.com/file/d/1RjBGU-AGdHdhUABoeYSztbfQlD0hjUBn/view?usp=sharing)\n- **Huggingface Link**: 近日公開\n- **ファイルの配置場所**: `./MCP-tools/mcp_tools_with_embedding.json`\n\n\n**概要**: MCP公式リポジトリから抽出・フィルタリングされた全ツール（308サーバ、2,797ツール収録）を含むデータセットです。\n\n**データ構造**:\n```\n{\n  \"server_name\": string, // MCPサーバ名。READMEから抽出または推定\n  \"server_summary\": string, // サーバの目的・機能の要約。READMEの関連部分より\n  \"server_description\": string, // メタデータからの説明\n  \"description_embedding\": float[3072], // server_descriptionのtext-embedding-3-largeによる埋め込み\n  \"summary_embedding\": float[3072], // server_summaryのtext-embedding-3-largeによる埋め込み\n  \"tools\": [\n    {\n      \"name\": string, // 関数・ツール名\n      \"description\": string, // ツールの簡潔な説明\n      \"description_embedding\": float[3072], // ツール説明のtext-embedding-3-largeによる埋め込み\n      \"parameter\": { // 入力パラメータの辞書。明示的に定義されていれば含む\n        \"param1\": \"(type) description1\",\n        \"param2\": \"(Optional, type) description2\"\n      }\n    }\n  ]\n}\n```\n\n**独自データセットの構築方法**: MCPサーバ向けのカスタムデータセットを作りたい場合は、`MCP-tools/build_data`ディレクトリ内のコードを参考にしてください。\n\n```\nMCP-tools/\n├── build_data\n│   ├── get_server_summary.py       # MCPサーバのReadMeから構造化データを抽出するコード\n│   ├── run_vllm.sh                 # Qwen2.5-72B-InstructモデルをVLLMでデプロイ\n│   └── server_summary.prompt       # データセット抽出用プロンプト\n└── download_data.md\n```\n\n\n### 引用\n\n> Citation makes me happy.\n> \n>   --Shakespeare\n>   ~~(just for fun :D)~~\n\n```bibtex\n@article{fei2025mcp,\n  title={MCP-Zero: Active Tool Discovery for Autonomous LLM Agents},\n  author={Fei, Xiang and Zheng, Xiawu and Feng, Hao},\n  journal={arXiv preprint arXiv:2506.01056},",
  "status": "ok"
}