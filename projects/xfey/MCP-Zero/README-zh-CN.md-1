{
  "id": 1,
  "origin": "## MCP-Zero: Active Tool Discovery for Autonomous LLM Agents\n\n<div style=\"display: flex; align-items: center; gap: 10px; margin-bottom: 10px;\">\n  <!-- <img src=\"https://raw.githubusercontent.com/xfey/MCP-Zero/master/assets/robot.png\" alt=\"MCP-Zero Robot\" width=\"24\" height=\"24\"> -->\n  <a href=\"https://arxiv.org/abs/2506.01056\">\n    <img src=\"https://img.shields.io/badge/Paper-arXiv-red\">\n  </a>\n  <a href=\"https://arxiv.org/abs/2506.01056\">\n    https://arxiv.org/abs/2506.01056\n  </a>\n</div>\n\n\nThanks for your attention for MCP-Zero! 🤗\n\nWe have now open-sourced the code involved in the paper. We will continue to update our work, explore its application in the industry, and continue to expand this project.\n\n\n<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/xfey/MCP-Zero/master/assets/fig1.png\" alt=\"MCP-Zero workflow\">\n  <p> Using MCP-Zero to proactively construct toolchains for \"Making a great meal\"</p>\n</div>\n\n\n### Method: MCP-Zero\n\n```\nMCP-zero/\n├── experiment_apibank.py       # experiments: APIBank\n├── experiment_mcptools.py      # experiments: mcp_tools (needle test)\n├── matcher.py                  # code for similarity matching\n├── prompt_guide/               # prompts for our method\n├── reformatter.py              # json formatter for tool description\n├── sampler.py                  # sampler for selecting target tool\n├── test_cases.jsonl            # testcase for the matcher\n├── test_matcher.py             # unit test for the matcher\n└── utils.py                    # utils: grid_search\n```\n\nWe have now released our code for the paper. The code in the paper implements retrieval capabilities and achieves concrete results in experiments.\n\nIn our future work, we are committed to applying MCP-zero to the industry, so other modules still need to be involved, such as the dynamic deployment of MCP servers, the environment deployment for GAIA test, etc. We will continue to improve our work, and thank you all for your attention to this work. Leave a star🌟 to let me know you are staying updated :D\n\n\n\n### Dataset: MCP-tools\n\n- **Google Drive**: [Download Link](https://drive.google.com/file/d/1RjBGU-AGdHdhUABoeYSztbfQlD0hjUBn/view?usp=sharing)\n- **Huggingface Link**: Coming soon\n- **Put the file at**: `./MCP-tools/mcp_tools_with_embedding.json`\n\n\n**Introduction**: A dataset containing all filtered tools (308 servers and 2,797 tools in total) from the MCP official repo.\n\n**Data structure**:\n```\n{\n  \"server_name\": string, // The name of the MCP server, extracted or inferred from the README\n  \"server_summary\": string, // A summary of the server's purpose and capabilities, based on all relevant parts of the README.\n  \"server_description\": string, // Description from metadata. \n  \"description_embedding\": float[3072], // The embedding of the server description from text-embedding-3-large\n  \"summary_embedding\": float[3072], // The embedding of the server summary from text-embedding-3-large\n  \"tools\": [\n    {\n      \"name\": string, // The function/tool name\n      \"description\": string, // A concise description of what the tool does\n      \"description_embedding\": float[3072], // The embedding of the tool description from text-embedding-3-large\n      \"parameter\": { // A dictionary of input parameters, being included if explicitly defined\n        \"param1\": \"(type) description1\",\n        \"param2\": \"(Optional, type) description2\"\n      }\n    }\n  ]\n}\n```\n\n**Build dataset on your own**: If you want to build custom dataset for MCP servers, you may follow the code under the `MCP-tools/build_data` folder.\n\n```\nMCP-tools/\n├── build_data\n│   ├── get_server_summary.py       # code to extract structural data for MCP server's ReadMe file\n│   ├── run_vllm.sh                 # deploy the Qwen2.5-72B-Instruct model with VLLM\n│   └── server_summary.prompt       # the prompt for extracting dataset\n└── download_data.md\n```\n\n\n### Citation\n\n> Citation makes me happy.\n> \n>   --Shakespeare\n>   ~~(just for fun :D)~~\n\n```bibtex\n@article{fei2025mcp,\n  title={MCP-Zero: Active Tool Discovery for Autonomous LLM Agents},\n  author={Fei, Xiang and Zheng, Xiawu and Feng, Hao},\n  journal={arXiv preprint arXiv:2506.01056},",
  "origin_sha": "et8q7QWbvxPeyCvG0HhtET5U03TzIiVaUmeyefJHbvc=",
  "translate": "## MCP-Zero：面向自主LLM智能体的主动工具发现\n\n<div style=\"display: flex; align-items: center; gap: 10px; margin-bottom: 10px;\">\n  <!-- <img src=\"https://raw.githubusercontent.com/xfey/MCP-Zero/master/assets/robot.png\" alt=\"MCP-Zero Robot\" width=\"24\" height=\"24\"> -->\n  <a href=\"https://arxiv.org/abs/2506.01056\">\n    <img src=\"https://img.shields.io/badge/Paper-arXiv-red\">\n  </a>\n  <a href=\"https://arxiv.org/abs/2506.01056\">\n    https://arxiv.org/abs/2506.01056\n  </a>\n</div>\n\n\n感谢您关注 MCP-Zero！🤗\n\n我们现已开源论文中涉及的代码。我们将持续更新我们的工作，探索其在工业界的应用，并不断扩展该项目。\n\n\n<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/xfey/MCP-Zero/master/assets/fig1.png\" alt=\"MCP-Zero workflow\">\n  <p> 使用 MCP-Zero 主动构建“做一顿美餐”的工具链</p>\n</div>\n\n\n### 方法：MCP-Zero\n\n```\nMCP-zero/\n├── experiment_apibank.py       # 实验：APIBank\n├── experiment_mcptools.py      # 实验：mcp_tools（needle test）\n├── matcher.py                  # 相似度匹配代码\n├── prompt_guide/               # 方法相关提示词\n├── reformatter.py              # 工具描述的json格式化器\n├── sampler.py                  # 选择目标工具的采样器\n├── test_cases.jsonl            # 匹配器的测试用例\n├── test_matcher.py             # 匹配器的单元测试\n└── utils.py                    # 工具函数：grid_search\n```\n\n我们现已发布论文所用的代码。论文中的代码实现了检索能力，并在实验中取得了具体成果。\n\n在后续工作中，我们致力于将 MCP-zero 应用于工业界，因此还需要涉及其他模块，比如 MCP 服务器的动态部署、GAIA 测试的环境部署等。我们会持续完善本工作，感谢大家的关注。欢迎点亮 star🌟，让我知道你在关注 :D\n\n\n\n### 数据集：MCP-tools\n\n- **Google Drive**: [下载链接](https://drive.google.com/file/d/1RjBGU-AGdHdhUABoeYSztbfQlD0hjUBn/view?usp=sharing)\n- **Huggingface 链接**: 敬请期待\n- **请将文件放置于**: `./MCP-tools/mcp_tools_with_embedding.json`\n\n\n**简介**：本数据集包含 MCP 官方仓库中所有筛选过的工具（共 308 个服务器和 2,797 个工具）。\n\n**数据结构**：\n```\n{\n  \"server_name\": string, // MCP服务器名称，从README中提取或推断\n  \"server_summary\": string, // 服务器用途和能力的摘要，基于README的相关部分\n  \"server_description\": string, // 元数据中的描述 \n  \"description_embedding\": float[3072], // 服务器描述的embedding，来自text-embedding-3-large\n  \"summary_embedding\": float[3072], // 服务器摘要的embedding，来自text-embedding-3-large\n  \"tools\": [\n    {\n      \"name\": string, // 函数/工具名\n      \"description\": string, // 工具功能的简要描述\n      \"description_embedding\": float[3072], // 工具描述的embedding，来自text-embedding-3-large\n      \"parameter\": { // 输入参数字典，如有明确定义则包含\n        \"param1\": \"(类型) 描述1\",\n        \"param2\": \"(可选, 类型) 描述2\"\n      }\n    }\n  ]\n}\n```\n\n**自定义构建数据集**：如需为 MCP 服务器构建自定义数据集，可参考 `MCP-tools/build_data` 文件夹下的代码。\n\n```\nMCP-tools/\n├── build_data\n│   ├── get_server_summary.py       # 提取 MCP 服务器 ReadMe 结构化数据的代码\n│   ├── run_vllm.sh                 # 使用 VLLM 部署 Qwen2.5-72B-Instruct 模型\n│   └── server_summary.prompt       # 数据集抽取用 prompt\n└── download_data.md\n```\n\n\n### 引用\n\n> 被引用会让我很开心。\n> \n>   ——莎士比亚\n>   ~~（纯属娱乐 :D）~~\n\n```bibtex\n@article{fei2025mcp,\n  title={MCP-Zero: Active Tool Discovery for Autonomous LLM Agents},\n  author={Fei, Xiang and Zheng, Xiawu and Feng, Hao},\n  journal={arXiv preprint arXiv:2506.01056},",
  "status": "ok"
}