{
  "id": 2,
  "origin": "   - `knowledge_ambiguity`: The ambiguities created by masked external knowledges. \n   - `sol_sql`: The ground truth SQL solution.  \n   - `preprocess_sql`: SQL queries to run before executing the solution or prediction.  \n   - `clean_up_sql`: SQL queries to run after the test cases to revert any changes made to the database.  \n   - `test_cases`: A set of test cases to validate the predicted corrected SQL.\n   - `follow_up`: The labeled follow up questions.\n   - `external_knowledge`: The external knowledge related to the specific task.\n\n- **evaluation:** The evaluation code is available in the [`./evaluation`](./evaluation) directory.\n- **Curated by:** BIRD Team & Google Cloud\n- **License:** [cc-by-sa-4.0](https://creativecommons.org/licenses/by-sa/4.0/)\n- **HuggingFace Dataset Card:** [bird-interact-lite](https://huggingface.co/datasets/birdsql/bird-interact-lite)\n\n### Dataset Uses\n\nTo avoid data leakage by auto-crawling, we do not include GT solution sqls and test cases along with data.\nplease email [bird.bench25@gmail.com](https://raw.githubusercontent.com/bird-bench/BIRD-Interact/main/mailto:bird.bench25@gmail.com) with the tag `[bird-interact-lite GT&Test Cases]` in title for full set, which will be sent automatically.\n\n\n<!-- ### Use the Dataset from HuggingFace\n\nYou can download the dataset from HuggingFace using the following command:\n```bash\nfrom datasets import load_dataset\n# Load the flash version of the dataset\ndataset = load_dataset(\"birdsql/bird-interact-lite\")\nprint(dataset[\"lite\"][0])\n\n# Load the full version of the dataset (coming soon)\ndataset = load_dataset(\"birdsql/bird-interact-full\")\nprint(dataset[\"full\"][0])\n```\n\nOr you can use the provided script to download the full version of the dataset and split it into different dialects.\n```bash\ncd baseline/data\npython pull_data.py \\\n  --schema_path path/to/full_schema.jsonl \\\n  --input_path path/to/input.jsonl \\ # Path to the input JSONL file (may be empty if you want to download the dataset from HuggingFace)\n  --output_folder path/to/output_dir # output folder of the split files\n``` -->\n\n## Folder Structure\n```ultree\n.\n├── LICENSE\n├── README.md\n├── bird_interact_conv\n│   ├── ...\n│   └── README.md\n├── bird_interact_agent\n│   ├── ...\n│   └── README.md\n├── evaluation\n│   ├── docker-compose.yml\n│   ├── env\n│   ├── postgre_table_dumps\n│   ├── run\n│   └── src\n├── materials\n│   ├── ...\n└── requirements.txt\n```\nThe details about running **a-interact** can be found in `./bird_interact_agent/README.md`; and **c-interact** can be found in `./bird_interact_conv/README.md`.\n\n\n## 📋 Todo Lists\n\n- [x] Release lite version, bird-interact-lite (270).\n- [x] Release conversational version, bird-interact-conv.\n- [x] Release agent version, bird-interact-agent.\n- [ ] Release Full bird-interact-full (600).\n- [ ] SFT / RL an User Simulator\n\n## Created By:\nBIRD Team & Google Cloud\n",
  "origin_sha": "OeAPpswFAcUHYpSuSS0nOr1JOlsmz7YNB1bMFaSIECg=",
  "translate": "- `knowledge_ambiguity`：由被屏蔽的外部知识引起的歧义。\n- `sol_sql`：标准答案SQL解决方案。\n- `preprocess_sql`：在执行解决方案或预测前运行的SQL查询。\n- `clean_up_sql`：在测试用例后运行的SQL查询，用于还原对数据库所做的更改。\n- `test_cases`：用于验证预测修正SQL的一组测试用例。\n- `follow_up`：标注的后续问题。\n- `external_knowledge`：与特定任务相关的外部知识。\n\n- **评估：** 评估代码位于[`./evaluation`](./evaluation)目录下。\n- **策划团队：** BIRD 团队 & Google Cloud\n- **许可证：** [cc-by-sa-4.0](https://creativecommons.org/licenses/by-sa/4.0/)\n- **HuggingFace 数据集卡片：** [bird-interact-lite](https://huggingface.co/datasets/birdsql/bird-interact-lite)\n\n### 数据集用途\n\n为避免自动爬取造成的数据泄露，我们未随数据一同提供GT解决方案SQL及测试用例。\n如需完整数据集，请发送邮件至[bird.bench25@gmail.com](https://raw.githubusercontent.com/bird-bench/BIRD-Interact/main/mailto:bird.bench25@gmail.com)，邮件标题中包含标签`[bird-interact-lite GT&Test Cases]`，数据集将自动发送。\n\n\n<!-- ### 从 HuggingFace 使用数据集\n\n你可以使用以下命令从 HuggingFace 下载数据集：\n```bash\nfrom datasets import load_dataset\n# 加载数据集的精简版\ndataset = load_dataset(\"birdsql/bird-interact-lite\")\nprint(dataset[\"lite\"][0])\n\n# 加载数据集的完整版（即将上线）\ndataset = load_dataset(\"birdsql/bird-interact-full\")\nprint(dataset[\"full\"][0])\n```\n\n或者你可以使用提供的脚本下载数据集完整版，并按不同方言拆分数据集。\n```bash\ncd baseline/data\npython pull_data.py \\\n  --schema_path path/to/full_schema.jsonl \\\n  --input_path path/to/input.jsonl \\ # 输入JSONL文件路径（如需从HuggingFace下载数据集，可为空）\n  --output_folder path/to/output_dir # 拆分文件的输出文件夹\n``` -->\n\n## 文件夹结构\n```ultree\n.\n├── LICENSE\n├── README.md\n├── bird_interact_conv\n│   ├── ...\n│   └── README.md\n├── bird_interact_agent\n│   ├── ...\n│   └── README.md\n├── evaluation\n│   ├── docker-compose.yml\n│   ├── env\n│   ├── postgre_table_dumps\n│   ├── run\n│   └── src\n├── materials\n│   ├── ...\n└── requirements.txt\n```\n关于**a-interact**的运行细节可参考`./bird_interact_agent/README.md`；**c-interact**的运行细节可参考`./bird_interact_conv/README.md`。\n\n\n## 📋 待办事项清单\n\n- [x] 发布精简版，bird-interact-lite（270）。\n- [x] 发布对话版，bird-interact-conv。\n- [x] 发布代理版，bird-interact-agent。\n- [ ] 发布完整版，bird-interact-full（600）。\n- [ ] SFT / RL 用户模拟器\n\n## 创建团队：\nBIRD 团队 & Google Cloud",
  "status": "ok"
}