{
  "id": 2,
  "origin": "   - `knowledge_ambiguity`: The ambiguities created by masked external knowledges. \n   - `sol_sql`: The ground truth SQL solution.  \n   - `preprocess_sql`: SQL queries to run before executing the solution or prediction.  \n   - `clean_up_sql`: SQL queries to run after the test cases to revert any changes made to the database.  \n   - `test_cases`: A set of test cases to validate the predicted corrected SQL.\n   - `follow_up`: The labeled follow up questions.\n   - `external_knowledge`: The external knowledge related to the specific task.\n\n- **evaluation:** The evaluation code is available in the [`./evaluation`](./evaluation) directory.\n- **Curated by:** BIRD Team & Google Cloud\n- **License:** [cc-by-sa-4.0](https://creativecommons.org/licenses/by-sa/4.0/)\n- **HuggingFace Dataset Card:** [bird-interact-lite](https://huggingface.co/datasets/birdsql/bird-interact-lite)\n\n### Dataset Uses\n\nTo avoid data leakage by auto-crawling, we do not include GT solution sqls and test cases along with data.\nplease email [bird.bench25@gmail.com](https://raw.githubusercontent.com/bird-bench/BIRD-Interact/main/mailto:bird.bench25@gmail.com) with the tag `[bird-interact-lite GT&Test Cases]` in title for full set, which will be sent automatically.\n\n\n<!-- ### Use the Dataset from HuggingFace\n\nYou can download the dataset from HuggingFace using the following command:\n```bash\nfrom datasets import load_dataset\n# Load the flash version of the dataset\ndataset = load_dataset(\"birdsql/bird-interact-lite\")\nprint(dataset[\"lite\"][0])\n\n# Load the full version of the dataset (coming soon)\ndataset = load_dataset(\"birdsql/bird-interact-full\")\nprint(dataset[\"full\"][0])\n```\n\nOr you can use the provided script to download the full version of the dataset and split it into different dialects.\n```bash\ncd baseline/data\npython pull_data.py \\\n  --schema_path path/to/full_schema.jsonl \\\n  --input_path path/to/input.jsonl \\ # Path to the input JSONL file (may be empty if you want to download the dataset from HuggingFace)\n  --output_folder path/to/output_dir # output folder of the split files\n``` -->\n\n## Folder Structure\n```ultree\n.\n├── LICENSE\n├── README.md\n├── bird_interact_conv\n│   ├── ...\n│   └── README.md\n├── bird_interact_agent\n│   ├── ...\n│   └── README.md\n├── evaluation\n│   ├── docker-compose.yml\n│   ├── env\n│   ├── postgre_table_dumps\n│   ├── run\n│   └── src\n├── materials\n│   ├── ...\n└── requirements.txt\n```\nThe details about running **a-interact** can be found in `./bird_interact_agent/README.md`; and **c-interact** can be found in `./bird_interact_conv/README.md`.\n\n\n## 📋 Todo Lists\n\n- [x] Release lite version, bird-interact-lite (270).\n- [x] Release conversational version, bird-interact-conv.\n- [x] Release agent version, bird-interact-agent.\n- [ ] Release Full bird-interact-full (600).\n- [ ] SFT / RL an User Simulator\n\n## Created By:\nBIRD Team & Google Cloud\n",
  "origin_sha": "OeAPpswFAcUHYpSuSS0nOr1JOlsmz7YNB1bMFaSIECg=",
  "translate": "- `knowledge_ambiguity`: 마스킹된 외부 지식에 의해 생성된 모호성입니다.\n- `sol_sql`: 정답 SQL 솔루션입니다.\n- `preprocess_sql`: 솔루션이나 예측을 실행하기 전에 실행할 SQL 쿼리입니다.\n- `clean_up_sql`: 테스트 케이스 후 데이터베이스에 가해진 변경을 되돌리기 위해 실행하는 SQL 쿼리입니다.\n- `test_cases`: 예측된 수정 SQL을 검증하기 위한 일련의 테스트 케이스입니다.\n- `follow_up`: 라벨링된 후속 질문입니다.\n- `external_knowledge`: 특정 작업과 관련된 외부 지식입니다.\n\n- **evaluation:** 평가 코드는 [`./evaluation`](./evaluation) 디렉토리에서 확인할 수 있습니다.\n- **Curated by:** BIRD 팀 & Google Cloud\n- **License:** [cc-by-sa-4.0](https://creativecommons.org/licenses/by-sa/4.0/)\n- **HuggingFace Dataset Card:** [bird-interact-lite](https://huggingface.co/datasets/birdsql/bird-interact-lite)\n\n### 데이터셋 사용법\n\n자동 크롤링에 의한 데이터 누수를 방지하기 위해, GT 솔루션 SQL과 테스트 케이스는 데이터와 함께 제공하지 않습니다.\n전체 세트가 필요하신 경우 제목에 `[bird-interact-lite GT&Test Cases]` 태그를 포함하여 [bird.bench25@gmail.com](https://raw.githubusercontent.com/bird-bench/BIRD-Interact/main/mailto:bird.bench25@gmail.com) 으로 이메일을 보내주시면 자동으로 발송됩니다.\n\n\n<!-- ### HuggingFace에서 데이터셋 사용하기\n\n다음 명령어로 HuggingFace에서 데이터셋을 다운로드할 수 있습니다:\n```bash\nfrom datasets import load_dataset\n# 데이터셋의 flash 버전 불러오기\ndataset = load_dataset(\"birdsql/bird-interact-lite\")\nprint(dataset[\"lite\"][0])\n\n# 데이터셋의 전체 버전 불러오기 (곧 제공 예정)\ndataset = load_dataset(\"birdsql/bird-interact-full\")\nprint(dataset[\"full\"][0])\n```\n\n또는 제공된 스크립트를 사용하여 전체 버전의 데이터셋을 다운로드하고 여러 방언으로 분할할 수 있습니다.\n```bash\ncd baseline/data\npython pull_data.py \\\n  --schema_path path/to/full_schema.jsonl \\\n  --input_path path/to/input.jsonl \\ # 입력 JSONL 파일의 경로 (HuggingFace에서 데이터셋을 다운로드하려면 비워둘 수 있습니다)\n  --output_folder path/to/output_dir # 분할 파일의 출력 폴더\n``` -->\n\n## 폴더 구조\n```ultree\n.\n├── LICENSE\n├── README.md\n├── bird_interact_conv\n│   ├── ...\n│   └── README.md\n├── bird_interact_agent\n│   ├── ...\n│   └── README.md\n├── evaluation\n│   ├── docker-compose.yml\n│   ├── env\n│   ├── postgre_table_dumps\n│   ├── run\n│   └── src\n├── materials\n│   ├── ...\n└── requirements.txt\n```\n**a-interact** 실행에 관한 자세한 내용은 `./bird_interact_agent/README.md`에서 확인할 수 있으며, **c-interact**는 `./bird_interact_conv/README.md`에서 확인할 수 있습니다.\n\n\n## 📋 할 일 목록\n\n- [x] 라이트 버전 공개, bird-interact-lite (270).\n- [x] 대화형 버전 공개, bird-interact-conv.\n- [x] 에이전트 버전 공개, bird-interact-agent.\n- [ ] 전체 버전 공개 예정, bird-interact-full (600).\n- [ ] SFT / RL 기반 사용자 시뮬레이터\n\n## 제작:\nBIRD 팀 & Google Cloud",
  "status": "ok"
}