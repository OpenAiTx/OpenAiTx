{
  "id": 5,
  "origin": "    {\n        return new ContentResult\n        {\n            ContentType = \"text/html\",\n            StatusCode = (int)HttpStatusCode.OK,\n            Content = @\"<html><body>\n<a href='api/DownloadWordFromTemplatePath'>DownloadWordFromTemplatePath</a><br>\n<a href='api/DownloadWordFromTemplateBytes'>DownloadWordFromTemplateBytes</a><br>\n</body></html>\"\n        };\n    }\n\n    static Dictionary<string, object> defaultValue = new Dictionary<string, object>()\n    {\n        [\"title\"] = \"FooCompany\",\n        [\"managers\"] = new List<Dictionary<string, object>> {\n            new Dictionary<string, object>{{\"name\",\"Jack\"},{ \"department\", \"HR\" } },\n            new Dictionary<string, object> {{ \"name\", \"Loan\"},{ \"department\", \"IT\" } }\n        },\n        [\"employees\"] = new List<Dictionary<string, object>> {\n            new Dictionary<string, object>{{ \"name\", \"Wade\" },{ \"department\", \"HR\" } },\n            new Dictionary<string, object> {{ \"name\", \"Felix\" },{ \"department\", \"HR\" } },\n            new Dictionary<string, object>{{ \"name\", \"Eric\" },{ \"department\", \"IT\" } },\n            new Dictionary<string, object> {{ \"name\", \"Keaton\" },{ \"department\", \"IT\" } }\n        }\n    };\n\n    public IActionResult DownloadWordFromTemplatePath()\n    {\n        string templatePath = \"TestTemplateComplex.docx\";\n\n        Dictionary<string, object> value = defaultValue;\n\n        MemoryStream memoryStream = new MemoryStream();\n        MiniWord.SaveAsByTemplate(memoryStream, templatePath, value);\n        memoryStream.Seek(0, SeekOrigin.Begin);\n        return new FileStreamResult(memoryStream, \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\")\n        {\n            FileDownloadName = \"demo.docx\"\n        };\n    }\n\n    private static Dictionary<string, Byte[]> TemplateBytesCache = new Dictionary<string, byte[]>();\n\n    static ApiController()\n    {\n        string templatePath = \"TestTemplateComplex.docx\";\n        byte[] bytes = System.IO.File.ReadAllBytes(templatePath);\n        TemplateBytesCache.Add(templatePath, bytes);\n    }\n\n    public IActionResult DownloadWordFromTemplateBytes()\n    {\n        byte[] bytes = TemplateBytesCache[\"TestTemplateComplex.docx\"];\n\n        Dictionary<string, object> value = defaultValue;\n\n        MemoryStream memoryStream = new MemoryStream();\n        MiniWord.SaveAsByTemplate(memoryStream, bytes, value);\n        memoryStream.Seek(0, SeekOrigin.Begin);\n        return new FileStreamResult(memoryStream, \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\")\n        {\n            FileDownloadName = \"demo.docx\"\n        };\n    }\n}\n```\n\n\n\n\n\n\n## Support : [Donate Link](https://miniexcel.github.io/)\n",
  "origin_sha": "6ISqKKwXYgk3j1HRqlllZ+cANzRQQwVpyb1v64CR9L0=",
  "translate": "```csharp\n{\n    return new ContentResult\n    {\n        ContentType = \"text/html\",\n        StatusCode = (int)HttpStatusCode.OK,\n        Content = @\"<html><body>\n<a href='api/DownloadWordFromTemplatePath'>DownloadWordFromTemplatePath</a><br>\n<a href='api/DownloadWordFromTemplateBytes'>DownloadWordFromTemplateBytes</a><br>\n</body></html>\"\n    };\n}\n\nstatic Dictionary<string, object> defaultValue = new Dictionary<string, object>()\n{\n    [\"title\"] = \"FooCompany\",\n    [\"managers\"] = new List<Dictionary<string, object>> {\n        new Dictionary<string, object>{{\"name\",\"Jack\"},{ \"department\", \"HR\" } },\n        new Dictionary<string, object> {{ \"name\", \"Loan\"},{ \"department\", \"IT\" } }\n    },\n    [\"employees\"] = new List<Dictionary<string, object>> {\n        new Dictionary<string, object>{{ \"name\", \"Wade\" },{ \"department\", \"HR\" } },\n        new Dictionary<string, object> {{ \"name\", \"Felix\" },{ \"department\", \"HR\" } },\n        new Dictionary<string, object>{{ \"name\", \"Eric\" },{ \"department\", \"IT\" } },\n        new Dictionary<string, object> {{ \"name\", \"Keaton\" },{ \"department\", \"IT\" } }\n    }\n};\n\npublic IActionResult DownloadWordFromTemplatePath()\n{\n    string templatePath = \"TestTemplateComplex.docx\";\n\n    Dictionary<string, object> value = defaultValue;\n\n    MemoryStream memoryStream = new MemoryStream();\n    MiniWord.SaveAsByTemplate(memoryStream, templatePath, value);\n    memoryStream.Seek(0, SeekOrigin.Begin);\n    return new FileStreamResult(memoryStream, \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\")\n    {\n        FileDownloadName = \"demo.docx\"\n    };\n}\n\nprivate static Dictionary<string, Byte[]> TemplateBytesCache = new Dictionary<string, byte[]>();\n\nstatic ApiController()\n{\n    string templatePath = \"TestTemplateComplex.docx\";\n    byte[] bytes = System.IO.File.ReadAllBytes(templatePath);\n    TemplateBytesCache.Add(templatePath, bytes);\n}\n\npublic IActionResult DownloadWordFromTemplateBytes()\n{\n    byte[] bytes = TemplateBytesCache[\"TestTemplateComplex.docx\"];\n\n    Dictionary<string, object> value = defaultValue;\n\n    MemoryStream memoryStream = new MemoryStream();\n    MiniWord.SaveAsByTemplate(memoryStream, bytes, value);\n    memoryStream.Seek(0, SeekOrigin.Begin);\n    return new FileStreamResult(memoryStream, \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\")\n    {\n        FileDownloadName = \"demo.docx\"\n    };\n}\n```\n\n## 支援 : [捐贈連結](https://miniexcel.github.io/)\n",
  "status": "ok"
}