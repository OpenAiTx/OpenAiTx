{
  "id": 2,
  "origin": "```C#\npublic class ModelClassWithDisplayAttr\n{\n    [TableColumn(DisplayName = \"Column1\")] //MyProperty1 property will render thead-td's innertext : \"Column1\"\n    public string MyProperty1 { get; set; }\n    [TableColumn(DisplayName = \"Column2\")] //MyProperty2 property will render thead-td's innertext : \"Column2\"\n    public string MyProperty2 { get; set; }\n}\n```\n\n###### 2. Skip : \n```C#\npublic class ModelClassWithSkipAttr\n{\n    [TableColumn( Skip = true)]\n    public string MyProperty1 { get; set; } //MyProperty1 will not render html\n    public string MyProperty2 { get; set; }\n}\n```\n\n##### HTMLTableBuilder\n\n###### HtmlCaption\n```C#\nvar soucreData = new []{ new {MyProperty1=\"test\",MyProperty2=123} };\nvar html = soucreData.CreateBuilder()\n    .SetCaption(\"This is Caption\", new { id = \"CaptionId\" })\n    .ToHtmlTable();\n//Result : <table><caption id=\\\"CaptionId\\\" >This is Caption</caption><thead><tr><th>MyProperty1</th><th>MyProperty2</th></tr></thead><tbody><tr><td>test</td><td>123</td></tr></tbody></table>\n```\n\n##### HTMLTableSetting\n\nConfigurable InnerHtml Encoding (Recommended not to do so without a specific reason,because XSS Attack)\n```C#\nvar sourceData = new[] { new { Name = \"<b>ITWeiHan</b>\" } };\n\n//Default Encoding\nvar encodinghtml = sourceData.ToHtmlTable();\n//Result: <table>..&lt;b&gt;ITWeiHan&lt;/b&gt;..</table>\n\nvar htmltablesetting = new HTMLTableSetting()\n{\n    IsHtmlEncodeMode = false\n};\nvar notEncodinghtml = sourceData.ToHtmlTable(HTMLTableSetting: htmltablesetting);\n//Result: <table>..<b>ITWeiHan</b>..</table>\n```\n\n### Extension\n**ASP.NET Core MVC:**  \nCreate a IHtmlHelperExtension.cs\n```C#\nusing System.Collections.Generic;\nusing HtmlTableHelper;\nusing Microsoft.AspNetCore.Mvc.Rendering;\nusing Microsoft.AspNetCore.Html;\n\npublic static class IHtmlHelperExtension\n{\n    public static HtmlString ToHtmlTable<T>(this IHtmlHelper htmlHelper, IEnumerable<T> enums\n        , object tableAttributes = null, object trAttributes = null, object tdAttributes = null\n        , HtmlTableSetting HTMLTableSetting = null)\n    {\n        var html = enums.ToHtmlTable(tableAttributes, trAttributes, tdAttributes, HTMLTableSetting);\n        return new HtmlString(html);\n    }\n\n    public static HtmlString ToHtmlTable<T>(this IHtmlHelper htmlHelper, System.Data.DataTable datatable\n        , object tableAttributes = null, object trAttributes = null, object tdAttributes = null\n        , HtmlTableSetting HTMLTableSetting = null)\n    {\n        var html = datatable.ToHtmlTable(tableAttributes, trAttributes, tdAttributes, HTMLTableSetting);\n        return new HtmlString(html);\n    }\n}\n```\n\nrazor.cshtml \n```C#\n@Html.ToHtmlTable(new[] { new { Name = \"ITWeiHan\", Age = \"25\", Gender = \"M\" } })\n/*\nResult:<table><thead><tr><th>Name</th><th>Age</th><th>Gender</th></tr></thead><tbody><tr><td>ITWeiHan</td><td>25</td><td>M</td></tr></tbody></table>\n*/\n```\n\n**ASP.NET MVC 5:**   \nCreate a HtmlHelperExtension.cs\n```C#\nusing System.Collections.Generic;\nusing HtmlTableHelper;\nusing System.Web;\nusing System.Web.Mvc;\n\npublic static class HtmlHelperExtension\n{\n    public static HtmlString ToHtmlTable<T>(this HtmlHelper htmlHelper, IEnumerable<T> enums\n        , object tableAttributes = null, object trAttributes = null, object tdAttributes = null\n        , HtmlTableSetting HTMLTableSetting = null)\n    {",
  "origin_sha": "m4AWP1Qzrs3q0wGAWjxR9ef/l/7QaGcfZTflmqGpQVA=",
  "translate": "```C#\npublic class ModelClassWithDisplayAttr\n{\n    [TableColumn(DisplayName = \"Column1\")] //Thuộc tính MyProperty1 sẽ hiển thị innertext của thead-td: \"Column1\"\n    public string MyProperty1 { get; set; }\n    [TableColumn(DisplayName = \"Column2\")] //Thuộc tính MyProperty2 sẽ hiển thị innertext của thead-td: \"Column2\"\n    public string MyProperty2 { get; set; }\n}\n```\n\n###### 2. Bỏ qua : \n```C#\npublic class ModelClassWithSkipAttr\n{\n    [TableColumn( Skip = true)]\n    public string MyProperty1 { get; set; } //MyProperty1 sẽ không render html\n    public string MyProperty2 { get; set; }\n}\n```\n\n##### HTMLTableBuilder\n\n###### HtmlCaption\n```C#\nvar soucreData = new []{ new {MyProperty1=\"test\",MyProperty2=123} };\nvar html = soucreData.CreateBuilder()\n    .SetCaption(\"This is Caption\", new { id = \"CaptionId\" })\n    .ToHtmlTable();\n//Kết quả : <table><caption id=\\\"CaptionId\\\" >This is Caption</caption><thead><tr><th>MyProperty1</th><th>MyProperty2</th></tr></thead><tbody><tr><td>test</td><td>123</td></tr></tbody></table>\n```\n\n##### HTMLTableSetting\n\nCấu hình mã hóa InnerHtml (Khuyến nghị không nên tắt nếu không có lý do cụ thể, vì có thể bị tấn công XSS)\n```C#\nvar sourceData = new[] { new { Name = \"<b>ITWeiHan</b>\" } };\n\n//Mặc định sẽ mã hóa\nvar encodinghtml = sourceData.ToHtmlTable();\n//Kết quả: <table>..&lt;b&gt;ITWeiHan&lt;/b&gt;..</table>\n\nvar htmltablesetting = new HTMLTableSetting()\n{\n    IsHtmlEncodeMode = false\n};\nvar notEncodinghtml = sourceData.ToHtmlTable(HTMLTableSetting: htmltablesetting);\n//Kết quả: <table>..<b>ITWeiHan</b>..</table>\n```\n\n### Extension\n**ASP.NET Core MVC:**  \nTạo một file IHtmlHelperExtension.cs\n```C#\nusing System.Collections.Generic;\nusing HtmlTableHelper;\nusing Microsoft.AspNetCore.Mvc.Rendering;\nusing Microsoft.AspNetCore.Html;\n\npublic static class IHtmlHelperExtension\n{\n    public static HtmlString ToHtmlTable<T>(this IHtmlHelper htmlHelper, IEnumerable<T> enums\n        , object tableAttributes = null, object trAttributes = null, object tdAttributes = null\n        , HtmlTableSetting HTMLTableSetting = null)\n    {\n        var html = enums.ToHtmlTable(tableAttributes, trAttributes, tdAttributes, HTMLTableSetting);\n        return new HtmlString(html);\n    }\n\n    public static HtmlString ToHtmlTable<T>(this IHtmlHelper htmlHelper, System.Data.DataTable datatable\n        , object tableAttributes = null, object trAttributes = null, object tdAttributes = null\n        , HtmlTableSetting HTMLTableSetting = null)\n    {\n        var html = datatable.ToHtmlTable(tableAttributes, trAttributes, tdAttributes, HTMLTableSetting);\n        return new HtmlString(html);\n    }\n}\n```\n\nrazor.cshtml \n```C#\n@Html.ToHtmlTable(new[] { new { Name = \"ITWeiHan\", Age = \"25\", Gender = \"M\" } })\n/*\nKết quả:<table><thead><tr><th>Name</th><th>Age</th><th>Gender</th></tr></thead><tbody><tr><td>ITWeiHan</td><td>25</td><td>M</td></tr></tbody></table>\n*/\n```\n\n**ASP.NET MVC 5:**   \nTạo một file HtmlHelperExtension.cs\n```C#\nusing System.Collections.Generic;\nusing HtmlTableHelper;\nusing System.Web;\nusing System.Web.Mvc;\n\npublic static class HtmlHelperExtension\n{\n    public static HtmlString ToHtmlTable<T>(this HtmlHelper htmlHelper, IEnumerable<T> enums\n        , object tableAttributes = null, object trAttributes = null, object tdAttributes = null\n        , HtmlTableSetting HTMLTableSetting = null)\n    {",
  "status": "ok"
}