{
  "id": 10,
  "origin": "\n#### 8. If/ElseIf/Else Statements inside cell\n\nRules:\n1. Supports DateTime, Double, Int with ==, !=, >, >=, <, <= operators.\n2. Supports String with ==, != operators.\n3. Each statement should be new line.\n4. Single space should be added before and after operators.\n5. There shouldn't be new line inside of statements.\n6. Cell should be in exact format as below.\n\n```csharp\n@if(name == Jack)\n{{employees.name}}\n@elseif(name == Neo)\nTest {{employees.name}}\n@else\n{{employees.department}}\n@endif\n```\n\nBefore\n\n![if_before](https://user-images.githubusercontent.com/38832863/235360606-ca654769-ff55-4f5b-98d2-d2ec0edb8173.PNG)\n\nAfter\n\n![if_after](https://user-images.githubusercontent.com/38832863/235360609-869bb960-d63d-45ae-8d64-9e8b0d0ab658.PNG)\n\n#### 9. DataTable as parameter\n\n```csharp\nvar managers = new DataTable();\n{\n    managers.Columns.Add(\"name\");\n    managers.Columns.Add(\"department\");\n    managers.Rows.Add(\"Jack\", \"HR\");\n    managers.Rows.Add(\"Loan\", \"IT\");\n}\nvar value = new Dictionary<string, object>()\n{\n    [\"title\"] = \"FooCompany\",\n    [\"managers\"] = managers,\n};\nMiniExcel.SaveAsByTemplate(path, templatePath, value);\n```\n#### 10. Formulas\n\n##### 1. Example\nPrefix your formula with `$` and use `$enumrowstart` and `$enumrowend` to mark references to the enumerable start and end rows:\n\n![image](https://raw.githubusercontent.com/mini-software/MiniExcel/master/docs/images/template-formulas-1.png)\n\nWhen the template is rendered, the `$` prefix will be removed and `$enumrowstart` and `$enumrowend` will be replaced with the start and end row numbers of the enumerable:\n\n![image](https://raw.githubusercontent.com/mini-software/MiniExcel/master/docs/images/template-formulas-2.png)\n\n##### 2. Other Example Formulas:\n\n|              |                                                                                           |\n|--------------|-------------------------------------------------------------------------------------------|\n| Sum          | `$=SUM(C{{$enumrowstart}}:C{{$enumrowend}})`                                              |\n| Alt. Average | `$=SUM(C{{$enumrowstart}}:C{{$enumrowend}}) / COUNT(C{{$enumrowstart}}:C{{$enumrowend}})` |\n| Range        | `$=MAX(C{{$enumrowstart}}:C{{$enumrowend}}) - MIN(C{{$enumrowstart}}:C{{$enumrowend}})`   |\n\n\n#### 11. Other\n\n##### 1. Checking template parameter key\n\nSince V1.24.0 , default ignore template missing parameter key and replace it with empty string, `IgnoreTemplateParameterMissing` can control throwing exception or not.\n\n```csharp\nvar config = new OpenXmlConfiguration()\n{\n    IgnoreTemplateParameterMissing = false,\n};\nMiniExcel.SaveAsByTemplate(path, templatePath, value, config)\n```\n\n![image](https://user-images.githubusercontent.com/12729184/157464332-e316f829-54aa-4c84-a5aa-9aef337b668d.png)\n\n\n\n### Excel Column Name/Index/Ignore Attribute <a name=\"getstart4\"></a>\n\n\n\n#### 1. Specify the column name, column index, column ignore\n\nExcel Example\n\n![image](https://user-images.githubusercontent.com/12729184/114230869-3e163700-99ac-11eb-9a90-2039d4b4b313.png)\n\nCode\n\n```csharp\npublic class ExcelAttributeDemo\n{\n    [ExcelColumnName(\"Column1\")]",
  "origin_sha": "ql2Of06bpPexmaqJVCztpE6A7eNrD+hmuBWBAABy77w=",
  "translate": "#### 8. If/ElseIf/Else-instructies in een cel\n\nRegels:\n1. Ondersteunt DateTime, Double, Int met de operatoren ==, !=, >, >=, <, <=.\n2. Ondersteunt String met de operatoren ==, !=.\n3. Elke instructie moet op een nieuwe regel staan.\n4. Er moet een enkele spatie vóór en na de operatoren staan.\n5. Er mag geen nieuwe regel binnen de instructies staan.\n6. De cel moet exact hetzelfde formaat hebben als hieronder.\n\n```csharp\n@if(name == Jack)\n{{employees.name}}\n@elseif(name == Neo)\nTest {{employees.name}}\n@else\n{{employees.department}}\n@endif\n```\n\nVoor\n\n![if_before](https://user-images.githubusercontent.com/38832863/235360606-ca654769-ff55-4f5b-98d2-d2ec0edb8173.PNG)\n\nNa\n\n![if_after](https://user-images.githubusercontent.com/38832863/235360609-869bb960-d63d-45ae-8d64-9e8b0d0ab658.PNG)\n\n#### 9. DataTable als parameter\n\n```csharp\nvar managers = new DataTable();\n{\n    managers.Columns.Add(\"name\");\n    managers.Columns.Add(\"department\");\n    managers.Rows.Add(\"Jack\", \"HR\");\n    managers.Rows.Add(\"Loan\", \"IT\");\n}\nvar value = new Dictionary<string, object>()\n{\n    [\"title\"] = \"FooCompany\",\n    [\"managers\"] = managers,\n};\nMiniExcel.SaveAsByTemplate(path, templatePath, value);\n```\n#### 10. Formules\n\n##### 1. Voorbeeld\nVoeg een `$` toe aan het begin van je formule en gebruik `$enumrowstart` en `$enumrowend` om verwijzingen naar het begin- en eindrij van de enumerable aan te geven:\n\n![image](https://raw.githubusercontent.com/mini-software/MiniExcel/master/docs/images/template-formulas-1.png)\n\nWanneer de template wordt gerenderd, wordt het `$`-voorvoegsel verwijderd en worden `$enumrowstart` en `$enumrowend` vervangen door de begin- en eindrijnummers van de enumerable:\n\n![image](https://raw.githubusercontent.com/mini-software/MiniExcel/master/docs/images/template-formulas-2.png)\n\n##### 2. Andere Voorbeeldformules:\n\n|              |                                                                                           |\n|--------------|-------------------------------------------------------------------------------------------|\n| Som          | `$=SUM(C{{$enumrowstart}}:C{{$enumrowend}})`                                              |\n| Alt. Gemiddelde | `$=SUM(C{{$enumrowstart}}:C{{$enumrowend}}) / COUNT(C{{$enumrowstart}}:C{{$enumrowend}})` |\n| Bereik       | `$=MAX(C{{$enumrowstart}}:C{{$enumrowend}}) - MIN(C{{$enumrowstart}}:C{{$enumrowend}})`   |\n\n\n#### 11. Overig\n\n##### 1. Controleren van template parameter key\n\nSinds V1.24.0 wordt standaard het ontbreken van een template parameter key genegeerd en vervangen door een lege string. `IgnoreTemplateParameterMissing` kan bepalen of er een uitzondering wordt gegooid of niet.\n\n```csharp\nvar config = new OpenXmlConfiguration()\n{\n    IgnoreTemplateParameterMissing = false,\n};\nMiniExcel.SaveAsByTemplate(path, templatePath, value, config)\n```\n\n![image](https://user-images.githubusercontent.com/12729184/157464332-e316f829-54aa-4c84-a5aa-9aef337b668d.png)\n\n\n\n### Excel Kolomnaam/Index/Ignore Attribuut <a name=\"getstart4\"></a>\n\n\n\n#### 1. Specificeer de kolomnaam, kolomindex, kolom negeren\n\nExcel Voorbeeld\n\n![image](https://user-images.githubusercontent.com/12729184/114230869-3e163700-99ac-11eb-9a90-2039d4b4b313.png)\n\nCode\n\n```csharp\npublic class ExcelAttributeDemo\n{\n    [ExcelColumnName(\"Column1\")]",
  "status": "ok"
}