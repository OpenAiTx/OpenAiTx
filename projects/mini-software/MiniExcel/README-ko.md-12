{
  "id": 12,
  "origin": "```\n\n\n\n#### 6. ExcelColumnAttribute\n\nSince V1.26.0, multiple attributes can be simplified like :\n```csharp\n        public class TestIssueI4ZYUUDto\n        {\n            [ExcelColumn(Name = \"ID\",Index =0)]\n            public string MyProperty { get; set; }\n            [ExcelColumn(Name = \"CreateDate\", Index = 1,Format =\"yyyy-MM\",Width =100)]\n            public DateTime MyProperty2 { get; set; }\n        }\n```\n\n\n\n#### 7. DynamicColumnAttribute\n\nSince V1.26.0, we can set the attributes of Column dynamically\n```csharp\n            var config = new OpenXmlConfiguration\n            {\n                DynamicColumns = new DynamicExcelColumn[] {\n                    new DynamicExcelColumn(\"id\"){Ignore=true},\n                    new DynamicExcelColumn(\"name\"){Index=1,Width=10},\n                    new DynamicExcelColumn(\"createdate\"){Index=0,Format=\"yyyy-MM-dd\",Width=15},\n                    new DynamicExcelColumn(\"point\"){Index=2,Name=\"Account Point\"},\n                }\n            };\n            var path = PathHelper.GetTempPath();\n            var value = new[] { new { id = 1, name = \"Jack\", createdate = new DateTime(2022, 04, 12) ,point = 123.456} };\n            MiniExcel.SaveAs(path, value, configuration: config);\n```\n![image](https://user-images.githubusercontent.com/12729184/164510353-5aecbc4e-c3ce-41e8-b6cf-afd55eb23b68.png)\n\n#### 8. DynamicSheetAttribute\n\nSince V1.31.4 we can set the attributes of Sheet dynamically. We can set sheet name and state (visibility).\n```csharp\n            var configuration = new OpenXmlConfiguration\n            {\n                DynamicSheets = new DynamicExcelSheet[] {\n                    new DynamicExcelSheet(\"usersSheet\") { Name = \"Users\", State = SheetState.Visible },\n                    new DynamicExcelSheet(\"departmentSheet\") { Name = \"Departments\", State = SheetState.Hidden }\n                }\n            };\n\n            var users = new[] { new { Name = \"Jack\", Age = 25 }, new { Name = \"Mike\", Age = 44 } };\n            var department = new[] { new { ID = \"01\", Name = \"HR\" }, new { ID = \"02\", Name = \"IT\" } };\n            var sheets = new Dictionary<string, object>\n            {\n                [\"usersSheet\"] = users,\n                [\"departmentSheet\"] = department\n            };\n\n            var path = PathHelper.GetTempPath();\n            MiniExcel.SaveAs(path, sheets, configuration: configuration);\n```\n\nWe can also use new attribute ExcelSheetAttribute:\n\n```C#\n   [ExcelSheet(Name = \"Departments\", State = SheetState.Hidden)]\n   private class DepartmentDto\n   {\n      [ExcelColumn(Name = \"ID\",Index = 0)]\n      public string ID { get; set; }\n      [ExcelColumn(Name = \"Name\",Index = 1)]\n      public string Name { get; set; }\n   }\n```\n\n### Add, Delete, Update\n\n#### Add\n\nv1.28.0 support CSV insert N rows data after last row\n\n```csharp\n// Origin\n{\n    var value = new[] {\n          new { ID=1,Name =\"Jack\",InDate=new DateTime(2021,01,03)},\n          new { ID=2,Name =\"Henry\",InDate=new DateTime(2020,05,03)},\n    };\n    MiniExcel.SaveAs(path, value);\n}\n// Insert 1 rows after last\n{\n    var value = new { ID=3,Name = \"Mike\", InDate = new DateTime(2021, 04, 23) };\n    MiniExcel.Insert(path, value);\n}\n// Insert N rows after last\n{\n    var value = new[] {\n          new { ID=4,Name =\"Frank\",InDate=new DateTime(2021,06,07)},\n          new { ID=5,Name =\"Gloria\",InDate=new DateTime(2022,05,03)},",
  "origin_sha": "FSWuocDAi1k6gt6fiza5FW+ar/qmnXq9b01zG1Fp7kY=",
  "translate": "```\n\n\n\n#### 6. ExcelColumnAttribute\n\nV1.26.0부터 여러 속성을 다음과 같이 간소화할 수 있습니다:\n```csharp\n        public class TestIssueI4ZYUUDto\n        {\n            [ExcelColumn(Name = \"ID\",Index =0)]\n            public string MyProperty { get; set; }\n            [ExcelColumn(Name = \"CreateDate\", Index = 1,Format =\"yyyy-MM\",Width =100)]\n            public DateTime MyProperty2 { get; set; }\n        }\n```\n\n\n\n#### 7. DynamicColumnAttribute\n\nV1.26.0부터는 열의 속성을 동적으로 설정할 수 있습니다.\n```csharp\n            var config = new OpenXmlConfiguration\n            {\n                DynamicColumns = new DynamicExcelColumn[] {\n                    new DynamicExcelColumn(\"id\"){Ignore=true},\n                    new DynamicExcelColumn(\"name\"){Index=1,Width=10},\n                    new DynamicExcelColumn(\"createdate\"){Index=0,Format=\"yyyy-MM-dd\",Width=15},\n                    new DynamicExcelColumn(\"point\"){Index=2,Name=\"Account Point\"},\n                }\n            };\n            var path = PathHelper.GetTempPath();\n            var value = new[] { new { id = 1, name = \"Jack\", createdate = new DateTime(2022, 04, 12) ,point = 123.456} };\n            MiniExcel.SaveAs(path, value, configuration: config);\n```\n![image](https://user-images.githubusercontent.com/12729184/164510353-5aecbc4e-c3ce-41e8-b6cf-afd55eb23b68.png)\n\n#### 8. DynamicSheetAttribute\n\nV1.31.4부터 시트의 속성을 동적으로 설정할 수 있습니다. 시트 이름과 상태(가시성)를 설정할 수 있습니다.\n```csharp\n            var configuration = new OpenXmlConfiguration\n            {\n                DynamicSheets = new DynamicExcelSheet[] {\n                    new DynamicExcelSheet(\"usersSheet\") { Name = \"Users\", State = SheetState.Visible },\n                    new DynamicExcelSheet(\"departmentSheet\") { Name = \"Departments\", State = SheetState.Hidden }\n                }\n            };\n\n            var users = new[] { new { Name = \"Jack\", Age = 25 }, new { Name = \"Mike\", Age = 44 } };\n            var department = new[] { new { ID = \"01\", Name = \"HR\" }, new { ID = \"02\", Name = \"IT\" } };\n            var sheets = new Dictionary<string, object>\n            {\n                [\"usersSheet\"] = users,\n                [\"departmentSheet\"] = department\n            };\n\n            var path = PathHelper.GetTempPath();\n            MiniExcel.SaveAs(path, sheets, configuration: configuration);\n```\n\n새로운 속성 ExcelSheetAttribute도 사용할 수 있습니다:\n\n```C#\n   [ExcelSheet(Name = \"Departments\", State = SheetState.Hidden)]\n   private class DepartmentDto\n   {\n      [ExcelColumn(Name = \"ID\",Index = 0)]\n      public string ID { get; set; }\n      [ExcelColumn(Name = \"Name\",Index = 1)]\n      public string Name { get; set; }\n   }\n```\n\n### 추가, 삭제, 업데이트\n\n#### 추가\n\nv1.28.0부터 CSV에서 마지막 행 다음에 N개의 데이터를 삽입할 수 있습니다.\n\n```csharp\n// 원본\n{\n    var value = new[] {\n          new { ID=1,Name =\"Jack\",InDate=new DateTime(2021,01,03)},\n          new { ID=2,Name =\"Henry\",InDate=new DateTime(2020,05,03)},\n    };\n    MiniExcel.SaveAs(path, value);\n}\n// 마지막 행 뒤에 1개 행 삽입\n{\n    var value = new { ID=3,Name = \"Mike\", InDate = new DateTime(2021, 04, 23) };\n    MiniExcel.Insert(path, value);\n}\n// 마지막 행 뒤에 N개 행 삽입\n{\n    var value = new[] {\n          new { ID=4,Name =\"Frank\",InDate=new DateTime(2021,06,07)},\n          new { ID=5,Name =\"Gloria\",InDate=new DateTime(2022,05,03)},\n```",
  "status": "ok"
}