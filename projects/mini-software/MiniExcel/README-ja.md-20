{
  "id": 20,
  "origin": "                dt.Columns.Add(column);\n            }\n\n            dt.BeginLoadData();\n            first = false;\n        }\n\n        var newRow = dt.NewRow();\n        var isNull=true;\n        foreach (var key in row.Keys)\n        {\n            var _v = row[key];\n            if(_v!=null)\n                isNull = false;\n            newRow[key] = _v;\n        }\n\n        if(!isNull)\n            dt.Rows.Add(newRow);\n    }\n\n    dt.EndLoadData();\n    return dt;\n}\n```\n\n\n\n#### Q. How SaveAs(path,value) to replace exists file and without throwing \"The file ...xlsx already exists error\"\n\n\nPlease use Stream class to custom file creating logic, e.g:\n\n```C#\n    using (var stream = File.Create(\"Demo.xlsx\"))\n        MiniExcel.SaveAs(stream,value);\n```\n\n\n\nor, since V1.25.0, SaveAs support overwriteFile parameter for enable/unable overwriting exist file\n\n```csharp\n    MiniExcel.SaveAs(path, value, overwriteFile: true);\n```\n\n\n\n\n### Limitations and caveats\n\n- Not support xls and encrypted file now\n- xlsm only support Query\n\n\n\n### Reference\n\n[ExcelDataReader](https://github.com/ExcelDataReader/ExcelDataReader)  / [ClosedXML](https://github.com/ClosedXML/ClosedXML) / [Dapper](https://github.com/DapperLib/Dapper) / [ExcelNumberFormat](https://github.com/andersnm/ExcelNumberFormat)\n\n\n\n### Thanks\n\n####  [Jetbrains](https://www.jetbrains.com/)\n\n![jetbrains-variant-2](https://user-images.githubusercontent.com/12729184/123997015-8456c180-da02-11eb-829a-aec476fe8e94.png)\n\nThanks for providing a free All product IDE for this project ([License](https://user-images.githubusercontent.com/12729184/123988233-6ab17c00-d9fa-11eb-8739-2a08c6a4a263.png))\n\n\n\n### Contribution sharing donate\nLink https://github.com/orgs/mini-software/discussions/754\n\n### Contributors\n\n![](https://contrib.rocks/image?repo=mini-software/MiniExcel)\n",
  "origin_sha": "tiD+lKAQT0HFFhEzX9Dj1heREBOnbnSxh8T1DdsVQBU=",
  "translate": "```csharp\n                dt.Columns.Add(column);\n            }\n\n            dt.BeginLoadData();\n            first = false;\n        }\n\n        var newRow = dt.NewRow();\n        var isNull=true;\n        foreach (var key in row.Keys)\n        {\n            var _v = row[key];\n            if(_v!=null)\n                isNull = false;\n            newRow[key] = _v;\n        }\n\n        if(!isNull)\n            dt.Rows.Add(newRow);\n    }\n\n    dt.EndLoadData();\n    return dt;\n}\n```\n\n\n\n#### Q. SaveAs(path,value)で既存ファイルを置き換え、「The file ...xlsx already exists error（ファイル ...xlsx はすでに存在します エラー）」をスローしない方法\n\n\nカスタムファイル作成ロジックには Stream クラスを使用してください。例：\n\n```C#\n    using (var stream = File.Create(\"Demo.xlsx\"))\n        MiniExcel.SaveAs(stream,value);\n```\n\n\n\nまたは、V1.25.0 以降では、SaveAs に overwriteFile パラメータが追加され、既存ファイルの上書き有効/無効を設定できます\n\n```csharp\n    MiniExcel.SaveAs(path, value, overwriteFile: true);\n```\n\n\n\n\n### 制限事項および注意点\n\n- 現時点では xls および暗号化ファイルはサポートしていません\n- xlsm はクエリのみサポート\n\n\n\n### 参考文献\n\n[ExcelDataReader](https://github.com/ExcelDataReader/ExcelDataReader)  / [ClosedXML](https://github.com/ClosedXML/ClosedXML) / [Dapper](https://github.com/DapperLib/Dapper) / [ExcelNumberFormat](https://github.com/andersnm/ExcelNumberFormat)\n\n\n\n### 謝辞\n\n####  [Jetbrains](https://www.jetbrains.com/)\n\n![jetbrains-variant-2](https://user-images.githubusercontent.com/12729184/123997015-8456c180-da02-11eb-829a-aec476fe8e94.png)\n\n本プロジェクトのために無償のAll product IDEをご提供いただき、ありがとうございます（[ライセンス](https://user-images.githubusercontent.com/12729184/123988233-6ab17c00-d9fa-11eb-8739-2a08c6a4a263.png)）\n\n\n\n### 貢献・寄付のご案内\nリンク https://github.com/orgs/mini-software/discussions/754\n\n### コントリビューター\n\n![](https://contrib.rocks/image?repo=mini-software/MiniExcel)\n```",
  "status": "ok"
}