{
  "id": 2,
  "origin": "    public Guid ID { get; set; }\n    public string Name { get; set; }\n    public DateTime BoD { get; set; }\n    public int Age { get; set; }\n    public bool VIP { get; set; }\n    public decimal Points { get; set; }\n}\n\nvar rows = MiniExcel.Query<UserAccount>(path);\n\n// or\n\nusing (var stream = File.OpenRead(path))\n    var rows = stream.Query<UserAccount>();\n```\n\n![image](https://user-images.githubusercontent.com/12729184/111107423-c8c46b80-8591-11eb-982f-c97a2dafb379.png)\n\n#### 2. Execute a query and map it to a list of dynamic objects without using head [[Try it]](https://dotnetfiddle.net/w5WD1J)\n\n* dynamic key is `A.B.C.D..`\n\n| MiniExcel | 1 |\n|-----------|---|\n| Github    | 2 |\n\n```csharp\n\nvar rows = MiniExcel.Query(path).ToList();\n\n// or\nusing (var stream = File.OpenRead(path))\n{\n    var rows = stream.Query().ToList();\n\n    Assert.Equal(\"MiniExcel\", rows[0].A);\n    Assert.Equal(1, rows[0].B);\n    Assert.Equal(\"Github\", rows[1].A);\n    Assert.Equal(2, rows[1].B);\n}\n```\n\n#### 3. Execute a query with first header row [[Try it]](https://dotnetfiddle.net/w5WD1J)\n\nnote : same column name use last right one\n\nInput Excel :\n\n| Column1   | Column2 |\n|-----------|---------|\n| MiniExcel | 1       |\n| Github    | 2       |\n\n\n```csharp\n\nvar rows = MiniExcel.Query(useHeaderRow:true).ToList();\n\n// or\n\nusing (var stream = File.OpenRead(path))\n{\n    var rows = stream.Query(useHeaderRow:true).ToList();\n\n    Assert.Equal(\"MiniExcel\", rows[0].Column1);\n    Assert.Equal(1, rows[0].Column2);\n    Assert.Equal(\"Github\", rows[1].Column1);\n    Assert.Equal(2, rows[1].Column2);\n}\n```\n\n#### 4. Query Support LINQ Extension First/Take/Skip ...etc\n\nQuery First\n```csharp\nvar row = MiniExcel.Query(path).First();\nAssert.Equal(\"HelloWorld\", row.A);\n\n// or\n\nusing (var stream = File.OpenRead(path))\n{\n    var row = stream.Query().First();\n    Assert.Equal(\"HelloWorld\", row.A);\n}\n```\n\nPerformance between MiniExcel/ExcelDataReader/ClosedXML/EPPlus\n![queryfirst](https://user-images.githubusercontent.com/12729184/111072392-6037a900-8515-11eb-9693-5ce2dad1e460.gif)\n\n#### 5. Query by sheet name\n\n```csharp\nMiniExcel.Query(path, sheetName: \"SheetName\");\n//or\nstream.Query(sheetName: \"SheetName\");\n```\n\n#### 6. Query all sheet name and rows\n",
  "origin_sha": "MKfM4p9++yV2OX5NpvV3MA4kGVxLWVbpsi4qaWOSQYs=",
  "translate": "```csharp\npublic Guid ID { get; set; }\npublic string Name { get; set; }\npublic DateTime BoD { get; set; }\npublic int Age { get; set; }\npublic bool VIP { get; set; }\npublic decimal Points { get; set; }\n}\n\nvar rows = MiniExcel.Query<UserAccount>(path);\n\n// या\n\nusing (var stream = File.OpenRead(path))\n    var rows = stream.Query<UserAccount>();\n```\n\n![image](https://user-images.githubusercontent.com/12729184/111107423-c8c46b80-8591-11eb-982f-c97a2dafb379.png)\n\n#### 2. हेड का उपयोग किए बिना एक क्वेरी निष्पादित करें और इसे डायनेमिक ऑब्जेक्ट्स की सूची में मैप करें [[Try it]](https://dotnetfiddle.net/w5WD1J)\n\n* डायनेमिक कुंजी है `A.B.C.D..`\n\n| MiniExcel | 1 |\n|-----------|---|\n| Github    | 2 |\n\n```csharp\n\nvar rows = MiniExcel.Query(path).ToList();\n\n// या\nusing (var stream = File.OpenRead(path))\n{\n    var rows = stream.Query().ToList();\n\n    Assert.Equal(\"MiniExcel\", rows[0].A);\n    Assert.Equal(1, rows[0].B);\n    Assert.Equal(\"Github\", rows[1].A);\n    Assert.Equal(2, rows[1].B);\n}\n```\n\n#### 3. पहले हेडर रो के साथ क्वेरी निष्पादित करें [[Try it]](https://dotnetfiddle.net/w5WD1J)\n\nनोट : एक ही कॉलम नाम के लिए अंतिम दाहिना नाम उपयोग होगा\n\nइनपुट एक्सेल :\n\n| Column1   | Column2 |\n|-----------|---------|\n| MiniExcel | 1       |\n| Github    | 2       |\n\n\n```csharp\n\nvar rows = MiniExcel.Query(useHeaderRow:true).ToList();\n\n// या\n\nusing (var stream = File.OpenRead(path))\n{\n    var rows = stream.Query(useHeaderRow:true).ToList();\n\n    Assert.Equal(\"MiniExcel\", rows[0].Column1);\n    Assert.Equal(1, rows[0].Column2);\n    Assert.Equal(\"Github\", rows[1].Column1);\n    Assert.Equal(2, rows[1].Column2);\n}\n```\n\n#### 4. क्वेरी सपोर्ट LINQ एक्सटेंशन First/Take/Skip ...आदि\n\nQuery First\n```csharp\nvar row = MiniExcel.Query(path).First();\nAssert.Equal(\"HelloWorld\", row.A);\n\n// या\n\nusing (var stream = File.OpenRead(path))\n{\n    var row = stream.Query().First();\n    Assert.Equal(\"HelloWorld\", row.A);\n}\n```\n\nMiniExcel/ExcelDataReader/ClosedXML/EPPlus के बीच प्रदर्शन\n![queryfirst](https://user-images.githubusercontent.com/12729184/111072392-6037a900-8515-11eb-9693-5ce2dad1e460.gif)\n\n#### 5. शीट नाम द्वारा क्वेरी करें\n\n```csharp\nMiniExcel.Query(path, sheetName: \"SheetName\");\n//या\nstream.Query(sheetName: \"SheetName\");\n```\n\n#### 6. सभी शीट नाम और रो क्वेरी करें\n```",
  "status": "ok"
}