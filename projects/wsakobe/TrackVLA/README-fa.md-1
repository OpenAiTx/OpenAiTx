{
  "id": 1,
  "origin": "<p align=\"center\">\n<h1 align=\"center\"><strong>TrackVLA: Embodied Visual Tracking in the Wild</strong></h1>\n  <p align=\"center\">\n    <!--   \t<strong>CoRL 2025</strong><br> -->\n    <a href='https://wsakobe.github.io/' target='_blank'>Shaoan Wang</a>&emsp;\n\t<a href='https://jzhzhang.github.io/' target='_blank'>Jiazhao Zhang</a>&emsp;\n    Minghan Li&emsp;\n    Jiahang Liu&emsp;\n    Anqi Li&emsp; <br>\n    Kui Wu&emsp;\n    <a href='https://fangweizhong.xyz/' target='_blank'>Fangwei Zhong</a>&emsp;\n    <a href='https://www.coe.pku.edu.cn/teaching/manufacturing/9993.html' target='_blank'>Junzhi Yu</a>&emsp;\n\t<a href='https://scholar.google.com/citations?user=X7M0I8kAAAAJ&hl=zh-CN' target='_blank'>Zhizheng Zhang</a>&emsp;\n  <a href='https://hughw19.github.io/' target='_blank'>He Wang</a>&emsp;\n    <br>\n    Peking University&emsp; \n    Galbot&emsp; <br>\n    Beihang University&emsp;\n    Beijing Normal University&emsp;\n    Beijing Academy of Artificial Intelligence&emsp;\n    <br>\n  </p>\n</p>\n\n<div id=\"top\" align=\"center\">\n\n[![Project](https://img.shields.io/badge/Project-%239c403d?style=flat&logoColor=%23FA7F6F\n)](https://pku-epic.github.io/TrackVLA-web/)\n[![arXiv](https://img.shields.io/badge/Arxiv-%233b6291?style=flat&logoColor=%23FA7F6F\n)](http://arxiv.org/abs/2505.23189)\n[![Video](https://img.shields.io/badge/Video-%23c97937?style=flat&logoColor=%23FA7F6F\n)](https://youtu.be/v51U3Nk-SK4?si=foz3zbYD8hLHSybC)\n\n</div>\n\n## 🏡 About\n<strong><em>TrackVLA</em></strong> is a vision-language-action model capable of simultaneous object recognition and visual tracking, trained on a dataset of 1.7 million samples. It demonstrates robust tracking, long-horizon tracking, and cross-domain generalization across diverse challenging environments.\n<div style=\"text-align: center;\">\n    <img src=\"https://raw.githubusercontent.com/wsakobe/TrackVLA/main/assets/teaser.png\" alt=\"Dialogue_Teaser\" width=100% >\n</div>\n\n## 📢 News\n\n* [25/07/02]: The EVT-Bench is now available.\n\n## 💡 Installation\n1. **Preparing conda env**\n\n   First, you need to install [conda](https://docs.conda.io/projects/conda/en/latest/user-guide/install/). Once conda installed, create a new env:\n   ```bash\n   conda create -n evt_bench python=3.9 cmake=3.14.0\n   conda activate evt_bench\n   ```\n\n2. **Conda install habitat-sim**\n   \n   You need to install habitat-sim v0.3.1\n      ```\n      conda install habitat-sim==0.3.1 withbullet -c conda-forge -c aihabitat\n      ```\n\n3. **Install habitat-lab from source**\n      ```\n      cd habitat-lab\n      pip install -e habitat-lab\n      ```\n\n4. **Prepare datasets**\n\n    Download Habitat Matterport 3D (HM3D) dataset from [here](https://github.com/facebookresearch/habitat-sim/blob/main/DATASETS.md#habitat-matterport-3d-research-dataset-hm3d) and Matterport3D (MP3D) from [here](https://github.com/facebookresearch/habitat-sim/blob/main/DATASETS.md#matterport3d-mp3d-dataset).\n\n    Then move the dataset to `data/scene_datasets`. The structure of the dataset is outlined as follows:\n    ```\n    data/\n     └── scene_datasets/\n        ├── hm3d/\n        │ ├── train/\n        │ │   └── ...\n        │ ├── val/\n        │ │   └── ...\n        │ └── minival\n        │     └── ...\n        └── mp3d/\n          ├── 1LXtFkjw3qL\n          │   └── ...\n          └── ...\n    ```\n\n    Next, run the following code to obtain data for the humanoid avatars:\n      ```\n      python download_humanoid_data.py\n      ```\n\n\n## 🧪 Evaluation\n  Run the script with:\n\n    bash eval.sh\n\n  Results will be saved in the specified SAVE_PATH, which will include a log directory and a video directory. To monitor the results during the evaluation process, run:",
  "origin_sha": "chO/Ywe8xISNVTZxxh2xcDW/cZFvAWrpfNAJZKmMzTw=",
  "translate": "<p align=\"center\">\n<h1 align=\"center\"><strong>TrackVLA: ردیابی بصری تجسم‌یافته در محیط‌های واقعی</strong></h1>\n  <p align=\"center\">\n    <!--   \t<strong>CoRL 2025</strong><br> -->\n    <a href='https://wsakobe.github.io/' target='_blank'>شائوان وانگ</a>&emsp;\n\t<a href='https://jzhzhang.github.io/' target='_blank'>جیاژائو ژانگ</a>&emsp;\n    مینگهان لی&emsp;\n    جیاهانگ لیو&emsp;\n    آن‌چی لی&emsp; <br>\n    کوی وو&emsp;\n    <a href='https://fangweizhong.xyz/' target='_blank'>فانگ‌وی ژونگ</a>&emsp;\n    <a href='https://www.coe.pku.edu.cn/teaching/manufacturing/9993.html' target='_blank'>جونژی یو</a>&emsp;\n\t<a href='https://scholar.google.com/citations?user=X7M0I8kAAAAJ&hl=zh-CN' target='_blank'>ژیزژنگ ژانگ</a>&emsp;\n  <a href='https://hughw19.github.io/' target='_blank'>هه وانگ</a>&emsp;\n    <br>\n    دانشگاه پکن&emsp; \n    گالبوت&emsp; <br>\n    دانشگاه بیهانگ&emsp;\n    دانشگاه نرمال پکن&emsp;\n    آکادمی هوش مصنوعی پکن&emsp;\n    <br>\n  </p>\n</p>\n\n<div id=\"top\" align=\"center\">\n\n[![پروژه](https://img.shields.io/badge/Project-%239c403d?style=flat&logoColor=%23FA7F6F\n)](https://pku-epic.github.io/TrackVLA-web/)\n[![arXiv](https://img.shields.io/badge/Arxiv-%233b6291?style=flat&logoColor=%23FA7F6F\n)](http://arxiv.org/abs/2505.23189)\n[![ویدیو](https://img.shields.io/badge/Video-%23c97937?style=flat&logoColor=%23FA7F6F\n)](https://youtu.be/v51U3Nk-SK4?si=foz3zbYD8hLHSybC)\n\n</div>\n\n## 🏡 درباره\n<strong><em>TrackVLA</em></strong> یک مدل بینایی-زبان-عمل است که قادر به شناسایی همزمان اشیا و ردیابی بصری بوده و بر روی دیتاستی شامل ۱.۷ میلیون نمونه آموزش دیده است. این مدل ردیابی مقاوم، ردیابی بلندمدت و تعمیم میان حوزه‌ای را در محیط‌های متنوع و چالش‌برانگیز نشان می‌دهد.\n<div style=\"text-align: center;\">\n    <img src=\"https://raw.githubusercontent.com/wsakobe/TrackVLA/main/assets/teaser.png\" alt=\"Dialogue_Teaser\" width=100% >\n</div>\n\n## 📢 اخبار\n\n* [25/07/02]: EVT-Bench اکنون در دسترس است.\n\n## 💡 نصب\n1. **آماده‌سازی محیط Conda**\n\n   ابتدا باید [conda](https://docs.conda.io/projects/conda/en/latest/user-guide/install/) را نصب کنید. پس از نصب conda، یک محیط جدید ایجاد کنید:\n   ```bash\n   conda create -n evt_bench python=3.9 cmake=3.14.0\n   conda activate evt_bench\n   ```\n\n2. **نصب habitat-sim با conda**\n   \n   باید habitat-sim نسخه 0.3.1 را نصب کنید.\n      ```\n      conda install habitat-sim==0.3.1 withbullet -c conda-forge -c aihabitat\n      ```\n\n3. **نصب habitat-lab از سورس**\n      ```\n      cd habitat-lab\n      pip install -e habitat-lab\n      ```\n\n4. **آماده‌سازی دیتاست‌ها**\n\n    دیتاست Habitat Matterport 3D (HM3D) را از [اینجا](https://github.com/facebookresearch/habitat-sim/blob/main/DATASETS.md#habitat-matterport-3d-research-dataset-hm3d) و Matterport3D (MP3D) را از [اینجا](https://github.com/facebookresearch/habitat-sim/blob/main/DATASETS.md#matterport3d-mp3d-dataset) دانلود کنید.\n\n    سپس دیتاست را به پوشه `data/scene_datasets` منتقل کنید. ساختار دیتاست به صورت زیر خواهد بود:\n    ```\n    data/\n     └── scene_datasets/\n        ├── hm3d/\n        │ ├── train/\n        │ │   └── ...\n        │ ├── val/\n        │ │   └── ...\n        │ └── minival\n        │     └── ...\n        └── mp3d/\n          ├── 1LXtFkjw3qL\n          │   └── ...\n          └── ...\n    ```\n\n    سپس، کد زیر را برای دریافت داده‌های آواتارهای انسان‌نما اجرا کنید:\n      ```\n      python download_humanoid_data.py\n      ```\n\n\n## 🧪 ارزیابی\n  اسکریپت را با دستور زیر اجرا کنید:\n\n    bash eval.sh\n\n  نتایج در مسیر مشخص شده SAVE_PATH ذخیره خواهند شد که شامل پوشه log و پوشه ویدیو خواهد بود. برای پایش نتایج در طول فرآیند ارزیابی، اجرا کنید:",
  "status": "ok"
}