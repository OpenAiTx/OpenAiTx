[
  {
    "Id": 1,
    "Content": "Now includes cloudflared. Configure on cloudflare.com and paste your token in the .env file.  \n\nfor step by step instructions follow this guide: https://www.reddit.com/r/n8n/comments/1l9mi6k/major_update_to_n8nautoscaling_build_step_by_step/\n\noriginal version without cloudflared is saved in the branches for those who don't want to use it. \n\n# n8n Autoscaling System\n\nA Docker-based autoscaling solution for n8n workflow automation platform. Dynamically scales worker containers based on Redis queue length.  No need to deal with k8s or any other container scaling provider, a simple script runs it all and is easily configurable.\n\nTested with hundreds of simultaneous executions running on a 8 core 16gb ram VPS.  \n\nIncludes Puppeteer and Chrome built-in for pro level scraping from the n8n code node, works better than the community nodes.  \n\nSimple install, just clone the files + docker compose up\n\n## Architecture Overview\n",
    "ContentSha": "C8S590hvpfWqedKovTpRX877eb5ePxhDnJG2X1CCVYY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "現在cloudflaredを含んでいます。cloudflare.comで設定し、トークンを.envファイルに貼り付けてください。\n\nステップバイステップの手順についてはこのガイドを参照してください：https://www.reddit.com/r/n8n/comments/1l9mi6k/major_update_to_n8nautoscaling_build_step_by_step/\n\ncloudflaredを使用したくない方のために、cloudflaredなしの元のバージョンはブランチに保存されています。\n\n# n8n オートスケーリングシステム\n\nn8nワークフロー自動化プラットフォーム向けのDockerベースのオートスケーリングソリューション。Redisキューの長さに基づいてワーカーコンテナを動的にスケールします。k8sや他のコンテナスケーリングプロバイダを扱う必要はなく、シンプルなスクリプトが全てを実行し、簡単に設定可能です。\n\n8コア16GBメモリのVPS上で数百の同時実行をテスト済みです。\n\nn8nコードノードからのプロレベルのスクレイピング用にPuppeteerとChromeが組み込まれており、コミュニティノードよりも優れた動作をします。\n\nインストールは簡単で、ファイルをクローンしdocker compose upを実行するだけです。\n\n## アーキテクチャ概要\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "H+3n8IUUa4Arb0ALUmdOkeobCIKLL3ZJ8LHxF6s227Y=",
        "originContent": "Now includes cloudflared. Configure on cloudflare.com and paste your token in the .env file.  ",
        "translatedContent": "現在cloudflaredを含んでいます。cloudflare.comで設定し、トークンを.envファイルに貼り付けてください。"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "IrXVsGZkFgzNTxoi8+7tC/n0OPWPDIOer2rHdq9/wVE=",
        "originContent": "for step by step instructions follow this guide: https://www.reddit.com/r/n8n/comments/1l9mi6k/major_update_to_n8nautoscaling_build_step_by_step/",
        "translatedContent": "ステップバイステップの手順についてはこのガイドを参照してください：https://www.reddit.com/r/n8n/comments/1l9mi6k/major_update_to_n8nautoscaling_build_step_by_step/"
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "vM03mzQS+4w2Xliok4dOmzuHFy9w+xd6jnSPQIGbBlY=",
        "originContent": "original version without cloudflared is saved in the branches for those who don't want to use it. ",
        "translatedContent": "cloudflaredを使用したくない方のために、cloudflaredなしの元のバージョンはブランチに保存されています。"
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "FdH03SoSDKgTPU5lWy/w6IHP/wg6LORfyGGEsQR75r0=",
        "originContent": "# n8n Autoscaling System",
        "translatedContent": "# n8n オートスケーリングシステム"
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "H0eS79sAVSlb1hGMeGNd9/7zdXJxfRxNQDGnhQ2H9JQ=",
        "originContent": "A Docker-based autoscaling solution for n8n workflow automation platform. Dynamically scales worker containers based on Redis queue length.  No need to deal with k8s or any other container scaling provider, a simple script runs it all and is easily configurable.",
        "translatedContent": "n8nワークフロー自動化プラットフォーム向けのDockerベースのオートスケーリングソリューション。Redisキューの長さに基づいてワーカーコンテナを動的にスケールします。k8sや他のコンテナスケーリングプロバイダを扱う必要はなく、シンプルなスクリプトが全てを実行し、簡単に設定可能です。"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "fYu2drJwVq+8jBAHyH5hS/0hNet0aBVaLTmi2TDmlwA=",
        "originContent": "Tested with hundreds of simultaneous executions running on a 8 core 16gb ram VPS.  ",
        "translatedContent": "8コア16GBメモリのVPS上で数百の同時実行をテスト済みです。"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "fyXTVPdFNLvM59oFAibAfbaJYrFyBWFGAf2XxmPENoM=",
        "originContent": "Includes Puppeteer and Chrome built-in for pro level scraping from the n8n code node, works better than the community nodes.  ",
        "translatedContent": "n8nコードノードからのプロレベルのスクレイピング用にPuppeteerとChromeが組み込まれており、コミュニティノードよりも優れた動作をします。"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "YhSRiEPMS6sgYA2HnPXUUU2YZnP5qJc7nolQdR2ClH0=",
        "originContent": "Simple install, just clone the files + docker compose up",
        "translatedContent": "インストールは簡単で、ファイルをクローンしdocker compose upを実行するだけです。"
      },
      {
        "row": 16,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "fxV+qJk43/CmRYwG5cyvrLMZ023bypgIha4+3wwqPB4=",
        "originContent": "## Architecture Overview",
        "translatedContent": "## アーキテクチャ概要"
      },
      {
        "row": 18,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "```mermaid\ngraph TD\n    A[n8n Main] -->|Queues jobs| B[Redis]\n    B -->|Monitors queue| C[Autoscaler]\n    C -->|Scales| D[n8n Workers]\n    B -->|Monitors queue| E[Redis Monitor]\n    F[PostgreSQL] -->|Stores data| A\n    A -->|Webhooks| G[n8n Webhook]\n```",
    "ContentSha": "ACqL6EqYk0p62vlnVGXkrMTAQqpAwN4wEmiJ/jeGKc4=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```mermaid\ngraph TD\n    A[n8n Main] -->|Queues jobs| B[Redis]\n    B -->|Monitors queue| C[Autoscaler]\n    C -->|Scales| D[n8n Workers]\n    B -->|Monitors queue| E[Redis Monitor]\n    F[PostgreSQL] -->|Stores data| A\n    A -->|Webhooks| G[n8n Webhook]\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "RtlHQpG+V59KLQkk05f8+fLlxsq4KdWUwAAs6jH0zbs=",
        "originContent": "```mermaid",
        "translatedContent": "```mermaid"
      },
      {
        "row": 2,
        "rowsha": "rWWG8xDYdGHVf9XBvr5U7TTcoTADLi0czN3iTC1oIQ4=",
        "originContent": "graph TD",
        "translatedContent": "graph TD"
      },
      {
        "row": 3,
        "rowsha": "mS5aq5jhzYSPlXUvt9T87axLZRImCQxO0u7FTblUsA8=",
        "originContent": "    A[n8n Main] -->|Queues jobs| B[Redis]",
        "translatedContent": "    A[n8n Main] -->|Queues jobs| B[Redis]"
      },
      {
        "row": 4,
        "rowsha": "70XMf8mI0dNZi83tfv35sMRFrp+DYfTHvcYyYvJsLJg=",
        "originContent": "    B -->|Monitors queue| C[Autoscaler]",
        "translatedContent": "    B -->|Monitors queue| C[Autoscaler]"
      },
      {
        "row": 5,
        "rowsha": "am1Q8uBflnlhHxpbkkKPj+wal915Ic3aE0qXdMJCraQ=",
        "originContent": "    C -->|Scales| D[n8n Workers]",
        "translatedContent": "    C -->|Scales| D[n8n Workers]"
      },
      {
        "row": 6,
        "rowsha": "nomVXO6DbBUpvnUNTMHuEVJm2K4CQnRfAJJGRrGu0WE=",
        "originContent": "    B -->|Monitors queue| E[Redis Monitor]",
        "translatedContent": "    B -->|Monitors queue| E[Redis Monitor]"
      },
      {
        "row": 7,
        "rowsha": "yajmwuLnNCuU16In72/yvHdUxlM0tiz6cn9upgFebx4=",
        "originContent": "    F[PostgreSQL] -->|Stores data| A",
        "translatedContent": "    F[PostgreSQL] -->|Stores data| A"
      },
      {
        "row": 8,
        "rowsha": "1wIMMhsaoiQtwgc4JtUASqXQYIzIgamCKql6Ra9NOz8=",
        "originContent": "    A -->|Webhooks| G[n8n Webhook]",
        "translatedContent": "    A -->|Webhooks| G[n8n Webhook]"
      },
      {
        "row": 9,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 3,
    "Content": "\n## Features\n\n- Dynamic scaling of n8n worker containers based on queue length\n- Configurable scaling thresholds and limits\n- Redis queue monitoring\n- Docker Compose-based deployment\n- Health checks for all services\n\n## Prerequisites\n\n- Docker and Docker Compose.\n- If you are a new user, I recommend either docker desktop or using the docker convenience script for ubuntu.  \n- Set up your cloudflare domain and subdomains.\n\n## Quick Start\n\n1. Copy or Clone this repository to a folder of your choice\n2. Rename .env.example to .env\n3. Configure your environment variables in the .env file - defaults are good to go, but set new passwords and tokens.\n4. Run:",
    "ContentSha": "JL0wl1lLCgokZVfpOxrC7LxLHPc0OrJmsA+v9Q7SCEI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "## 特徴\n\n- キューの長さに基づくn8nワーカーコンテナの動的スケーリング\n- 設定可能なスケーリングの閾値と制限\n- Redisキューの監視\n- Docker Composeを使ったデプロイメント\n- すべてのサービスのヘルスチェック\n\n## 前提条件\n\n- DockerおよびDocker Compose。\n- 新規ユーザーの場合、docker desktopまたはUbuntu向けのdocker便利スクリプトの使用を推奨します。  \n- Cloudflareのドメインとサブドメインを設定してください。\n\n## クイックスタート\n\n1. このリポジトリを任意のフォルダにコピーまたはクローンします\n2. .env.exampleを.envにリネームします\n3. .envファイル内の環境変数を設定します - デフォルトで動作しますが、新しいパスワードとトークンを設定してください。\n4. 実行してください：\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## 特徴"
      },
      {
        "row": 2,
        "rowsha": "nrVeE3oDH0tNFm9CX5stkYPKAaCrnePTkJZtrLHmoDg=",
        "originContent": "## Features",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "- キューの長さに基づくn8nワーカーコンテナの動的スケーリング"
      },
      {
        "row": 4,
        "rowsha": "W8oyR7CkYO49FAz5s7QhDDSH1J2rzOIm2EjIjtqSZMg=",
        "originContent": "- Dynamic scaling of n8n worker containers based on queue length",
        "translatedContent": "- 設定可能なスケーリングの閾値と制限"
      },
      {
        "row": 5,
        "rowsha": "4k0Vhx7MmZMu6a4paKeXEhjbs1NDIUvhJVzdb71y8r4=",
        "originContent": "- Configurable scaling thresholds and limits",
        "translatedContent": "- Redisキューの監視"
      },
      {
        "row": 6,
        "rowsha": "eG354wnsVTcdSwKrx0ORulxiGWSl46cZq81Z8IObH7U=",
        "originContent": "- Redis queue monitoring",
        "translatedContent": "- Docker Composeを使ったデプロイメント"
      },
      {
        "row": 7,
        "rowsha": "fUVAePF5SXew0hAEGuZih6QuqeH2EFTtEiutK/ZukW0=",
        "originContent": "- Docker Compose-based deployment",
        "translatedContent": "- すべてのサービスのヘルスチェック"
      },
      {
        "row": 8,
        "rowsha": "kLGMIX8oR7ykwc5vuWHiUyerCPr1EtIf8lJ5DKplPlo=",
        "originContent": "- Health checks for all services",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## 前提条件"
      },
      {
        "row": 10,
        "rowsha": "u9PUlJpvI379jU/1x8XzDZaOepia0S89fc72nJgFORI=",
        "originContent": "## Prerequisites",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "- DockerおよびDocker Compose。"
      },
      {
        "row": 12,
        "rowsha": "dB0StodFr53G0PNIBK3NOvVkM78ZCOUfJzrgL6i4N1I=",
        "originContent": "- Docker and Docker Compose.",
        "translatedContent": "- 新規ユーザーの場合、docker desktopまたはUbuntu向けのdocker便利スクリプトの使用を推奨します。  "
      },
      {
        "row": 13,
        "rowsha": "YGDo0Tb9IPf69hyK6f8bJ7B7B4fYQy4rr2xiQvMRDsQ=",
        "originContent": "- If you are a new user, I recommend either docker desktop or using the docker convenience script for ubuntu.  ",
        "translatedContent": "- Cloudflareのドメインとサブドメインを設定してください。"
      },
      {
        "row": 14,
        "rowsha": "utrt0vRNKn7n+3OreZZn9heplRE6yjug+2vZHVCfCKY=",
        "originContent": "- Set up your cloudflare domain and subdomains.",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## クイックスタート"
      },
      {
        "row": 16,
        "rowsha": "GYXdIjDxn3gFPf/dh+IWvA3hUoHtZx8D7kUCccNTdZA=",
        "originContent": "## Quick Start",
        "translatedContent": ""
      },
      {
        "row": 17,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "1. このリポジトリを任意のフォルダにコピーまたはクローンします"
      },
      {
        "row": 18,
        "rowsha": "aB10qaKWlJZmqP0ga3YvnG154o1NJC6b+6dSmS9xWqc=",
        "originContent": "1. Copy or Clone this repository to a folder of your choice",
        "translatedContent": "2. .env.exampleを.envにリネームします"
      },
      {
        "row": 19,
        "rowsha": "4/c29vVURPZS9i2kbAg/pTC2KaOFLGuNIxIa7NDDz0U=",
        "originContent": "2. Rename .env.example to .env",
        "translatedContent": "3. .envファイル内の環境変数を設定します - デフォルトで動作しますが、新しいパスワードとトークンを設定してください。"
      },
      {
        "row": 20,
        "rowsha": "R/phDBUDlfVnNbmdEmLDTx12DR6BfFhCUfDowpbctNs=",
        "originContent": "3. Configure your environment variables in the .env file - defaults are good to go, but set new passwords and tokens.",
        "translatedContent": "4. 実行してください："
      },
      {
        "row": 21,
        "rowsha": "0S3oo4vbhJ+P0Puac+MgzHHMEhcwbQFe+NwUbGacG40=",
        "originContent": "4. Run:",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 4,
    "Content": "   ```bash\n   docker network create shark\n   ```",
    "ContentSha": "N86VPXfmvNR8yDYP8L6sj6jeqKzD0oNna6IguejyLgk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "   ```bash\n   docker network create shark\n   ```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "RRH6MrA4etNIHujwLv0rliGxya+NbpNSoC32JfHakN0=",
        "originContent": "   ```bash",
        "translatedContent": "   ```bash"
      },
      {
        "row": 2,
        "rowsha": "jhb7TgjtNYzULxnq/yjF/qfm+8zgN3ZvwAQbl/xKEcY=",
        "originContent": "   docker network create shark",
        "translatedContent": "   docker network create shark"
      },
      {
        "row": 3,
        "rowsha": "pniO7zO20d6j53uWENxB+nzjyONEkzuZMphNESaf8OM=",
        "originContent": "   ```",
        "translatedContent": "   ```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 5,
    "Content": "5. Run:",
    "ContentSha": "Kcd6o3v0eRKQ+7LRiIZSRXPu0xIb2uPEAgrGnjoodgY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "5. 実行:",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "Kcd6o3v0eRKQ+7LRiIZSRXPu0xIb2uPEAgrGnjoodgY=",
        "originContent": "5. Run:",
        "translatedContent": "5. 実行:"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 6,
    "Content": "   ```bash\n   docker compose up -d\n   ```",
    "ContentSha": "5mnEwxVvCach3zhLMFCjReQ+g6l0s6CpZCQgeH+V3Fo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "   ```bash\n   docker compose up -d\n   ```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "RRH6MrA4etNIHujwLv0rliGxya+NbpNSoC32JfHakN0=",
        "originContent": "   ```bash",
        "translatedContent": "   ```bash"
      },
      {
        "row": 2,
        "rowsha": "9f7Bg6s7+R8vc+jX0UtoCdNeymWtgTPNHduPQ0XKIAY=",
        "originContent": "   docker compose up -d",
        "translatedContent": "   docker compose up -d"
      },
      {
        "row": 3,
        "rowsha": "pniO7zO20d6j53uWENxB+nzjyONEkzuZMphNESaf8OM=",
        "originContent": "   ```",
        "translatedContent": "   ```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 7,
    "Content": "\nWe create the shark external network in step 4 to make it easier to plug in other containers later.  If you don't want to do this, you can comment out the shark network in the docker compose file.  \n\n## Configuration\n\n- Make sure you set your own passwords and encryption keys in the .env file!!!\n- By default each worker handles 10 tasks at a time, you can modify this in the docker-compose under:      \n   - N8N_CONCURRENCY_PRODUCTION_LIMIT=10\n- Adjust these to be greater than your longest expected workflow execution time measured in seconds:\n   - N8N_QUEUE_BULL_GRACEFULSHUTDOWNTIMEOUT=300\n   - N8N_GRACEFUL_SHUTDOWN_TIMEOUT=300\n\n### Key Environment Variables\n\n| Variable | Description | Default |\n|----------|-------------|---------|\n| `MIN_REPLICAS` | Minimum number of worker containers | 1 |\n| `MAX_REPLICAS` | Maximum number of worker containers | 5 |\n| `SCALE_UP_QUEUE_THRESHOLD` | Queue length to trigger scale up | 5 |\n| `SCALE_DOWN_QUEUE_THRESHOLD` | Queue length to trigger scale down | 2 |\n| `POLLING_INTERVAL_SECONDS` | How often to check queue length | 30 |\n| `COOLDOWN_PERIOD_SECONDS` | Time between scaling actions | 180 |\n| `QUEUE_NAME_PREFIX` | Redis queue prefix | `bull` |\n| `QUEUE_NAME` | Redis queue name | `jobs` |\n\n### n8n Configuration\n\nEnsure these n8n environment variables are set:\n- `EXECUTIONS_MODE=queue`\n- `QUEUE_BULL_REDIS_HOST=redis`\n- `QUEUE_HEALTH_CHECK_ACTIVE=true`\n\n## Scaling Behavior\n\nThe autoscaler:\n1. Monitors Redis queue length every `POLLING_INTERVAL_SECONDS`\n2. Scales up when:\n   - Queue length > `SCALE_UP_QUEUE_THRESHOLD`\n   - Current replicas < `MAX_REPLICAS`\n3. Scales down when:\n   - Queue length < `SCALE_DOWN_QUEUE_THRESHOLD`\n   - Current replicas > `MIN_REPLICAS`\n4. Respects cooldown period between scaling actions\n\n## Monitoring\n\nThe system includes:\n- Redis queue monitor service (`redis-monitor`)\n- Docker health checks for all services\n- Detailed logging from autoscaler\n\n## Troubleshooting\n\n- Check container logs: `docker-compose logs [service]`\n- Verify Redis connection: `docker-compose exec redis redis-cli ping`\n- Check queue length manually: `docker-compose exec redis redis-cli LLEN bull:jobs:wait`\n\nWebhook URL example:\nWebhooks use your cloudflare subdomain name not local host, example:\nhttp://webhook.domain.com/webhook/d7e73b77-6cfb-4add-b454-41e4c91461d8\n\n\n\n## License\n\nMIT License - See [LICENSE](LICENSE) for details.\n",
    "ContentSha": "/1njgC0YcHDRlBf6QbRLXGZJepRVu4RHIF0RYnnyjQw=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "私たちはステップ4でshark外部ネットワークを作成し、後で他のコンテナを簡単に接続できるようにしています。  \nこれを行いたくない場合は、docker composeファイル内のsharkネットワークをコメントアウトしてください。  \n\n## 設定\n\n- .envファイルに自分自身のパスワードや暗号化キーを必ず設定してください!!!\n- デフォルトでは各ワーカーが同時に10タスクを処理します。docker-compose内で以下を変更可能です：  \n   - N8N_CONCURRENCY_PRODUCTION_LIMIT=10\n- これらは秒単位で予想される最長のワークフロー実行時間より長く設定してください：  \n   - N8N_QUEUE_BULL_GRACEFULSHUTDOWNTIMEOUT=300\n   - N8N_GRACEFUL_SHUTDOWN_TIMEOUT=300\n\n### 主要環境変数\n\n| 変数 | 説明 | デフォルト |\n|----------|-------------|---------|\n| `MIN_REPLICAS` | ワーカーコンテナの最小数 | 1 |\n| `MAX_REPLICAS` | ワーカーコンテナの最大数 | 5 |\n| `SCALE_UP_QUEUE_THRESHOLD` | スケールアップをトリガーするキュー長 | 5 |\n| `SCALE_DOWN_QUEUE_THRESHOLD` | スケールダウンをトリガーするキュー長 | 2 |\n| `POLLING_INTERVAL_SECONDS` | キュー長をチェックする頻度（秒） | 30 |\n| `COOLDOWN_PERIOD_SECONDS` | スケール操作間の待機時間（秒） | 180 |\n| `QUEUE_NAME_PREFIX` | Redisキュープレフィックス | `bull` |\n| `QUEUE_NAME` | Redisキュー名 | `jobs` |\n\n### n8n設定\n\nこれらのn8n環境変数が設定されていることを確認してください：\n- `EXECUTIONS_MODE=queue`\n- `QUEUE_BULL_REDIS_HOST=redis`\n- `QUEUE_HEALTH_CHECK_ACTIVE=true`\n\n## スケーリング動作\n\nオートスケーラーは：\n1. `POLLING_INTERVAL_SECONDS`ごとにRedisキュー長を監視\n2. スケールアップ条件：  \n   - キュー長 > `SCALE_UP_QUEUE_THRESHOLD`  \n   - 現在のレプリカ数 < `MAX_REPLICAS`\n3. スケールダウン条件：  \n   - キュー長 < `SCALE_DOWN_QUEUE_THRESHOLD`  \n   - 現在のレプリカ数 > `MIN_REPLICAS`\n4. スケール操作間のクールダウン期間を遵守\n\n## 監視\n\nシステムには以下が含まれます：\n- Redisキューモニターサービス（`redis-monitor`）\n- すべてのサービスのDockerヘルスチェック\n- オートスケーラーによる詳細ログ\n\n## トラブルシューティング\n\n- コンテナログの確認：`docker-compose logs [service]`\n- Redis接続の確認：`docker-compose exec redis redis-cli ping`\n- 手動でキュー長を確認：`docker-compose exec redis redis-cli LLEN bull:jobs:wait`\n\nWebhook URL例：  \nWebhookはローカルホストではなくCloudflareのサブドメイン名を使用します。例：  \nhttp://webhook.domain.com/webhook/d7e73b77-6cfb-4add-b454-41e4c91461d8\n\n## ライセンス\n\nMITライセンス - 詳細は[LICENSE](LICENSE)をご覧ください。\n\n\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "私たちはステップ4でshark外部ネットワークを作成し、後で他のコンテナを簡単に接続できるようにしています。  "
      },
      {
        "row": 2,
        "rowsha": "3ykbN6e8yEND3sYgQBIA5AHnwv24XHXute6/tp0QGj0=",
        "originContent": "We create the shark external network in step 4 to make it easier to plug in other containers later.  If you don't want to do this, you can comment out the shark network in the docker compose file.  ",
        "translatedContent": "これを行いたくない場合は、docker composeファイル内のsharkネットワークをコメントアウトしてください。  "
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "N/IQtGqpATBQ6qPXpDmWWGfXOn9jLN/OIAH4ZbUllG4=",
        "originContent": "## Configuration",
        "translatedContent": "## 設定"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "HFuLidRM1O5//Cq8enBZ5kLw3f9ibZtCH4q6OLfE1qM=",
        "originContent": "- Make sure you set your own passwords and encryption keys in the .env file!!!",
        "translatedContent": "- .envファイルに自分自身のパスワードや暗号化キーを必ず設定してください!!!"
      },
      {
        "row": 7,
        "rowsha": "T1ZvYclrwZr+KatatZA8J1rUCW9ZJj1jVWS2Ot8neP4=",
        "originContent": "- By default each worker handles 10 tasks at a time, you can modify this in the docker-compose under:      ",
        "translatedContent": "- デフォルトでは各ワーカーが同時に10タスクを処理します。docker-compose内で以下を変更可能です：  "
      },
      {
        "row": 8,
        "rowsha": "SGPu10+5/i1nNlmSRCdWhOH1ASFhU2RwPWAXri/FtQw=",
        "originContent": "   - N8N_CONCURRENCY_PRODUCTION_LIMIT=10",
        "translatedContent": "   - N8N_CONCURRENCY_PRODUCTION_LIMIT=10"
      },
      {
        "row": 9,
        "rowsha": "k0kkFEYbgqXOIrFVhzUvJMwqc267Bapi6ryfFpHMuv4=",
        "originContent": "- Adjust these to be greater than your longest expected workflow execution time measured in seconds:",
        "translatedContent": "- これらは秒単位で予想される最長のワークフロー実行時間より長く設定してください：  "
      },
      {
        "row": 10,
        "rowsha": "Lhwf0lEvp4F0CBxGFPYDUaQ4qnvbZyg1LYuQsu3+s04=",
        "originContent": "   - N8N_QUEUE_BULL_GRACEFULSHUTDOWNTIMEOUT=300",
        "translatedContent": "   - N8N_QUEUE_BULL_GRACEFULSHUTDOWNTIMEOUT=300"
      },
      {
        "row": 11,
        "rowsha": "Ng3lM26x4ucUVJqpNGxREGB2TWXyhGBZJAqzsR5wPe4=",
        "originContent": "   - N8N_GRACEFUL_SHUTDOWN_TIMEOUT=300",
        "translatedContent": "   - N8N_GRACEFUL_SHUTDOWN_TIMEOUT=300"
      },
      {
        "row": 12,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 13,
        "rowsha": "0ffE2J2Pn6zuBofRKMp6cjesibUnvp0oDpcsuPtjQw0=",
        "originContent": "### Key Environment Variables",
        "translatedContent": "### 主要環境変数"
      },
      {
        "row": 14,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 15,
        "rowsha": "39V4rhGMfb9epDMCWiSUXMY/40p3aaRXkMmW9OfYG7M=",
        "originContent": "| Variable | Description | Default |",
        "translatedContent": "| 変数 | 説明 | デフォルト |"
      },
      {
        "row": 16,
        "rowsha": "DVr/Dm1EyBfNVX8hj0lOlp3ivmaKGBnRdp7HSMQMDM8=",
        "originContent": "|----------|-------------|---------|",
        "translatedContent": "|----------|-------------|---------|"
      },
      {
        "row": 17,
        "rowsha": "dLKmsVjyvllMq4xcMv9ltuW2o1kr5rReO+FXNh9Y0nI=",
        "originContent": "| `MIN_REPLICAS` | Minimum number of worker containers | 1 |",
        "translatedContent": "| `MIN_REPLICAS` | ワーカーコンテナの最小数 | 1 |"
      },
      {
        "row": 18,
        "rowsha": "jIjFOc9ikthJMBrwM1Dc1MW1O2n2yZ8aJNFJoUICWNU=",
        "originContent": "| `MAX_REPLICAS` | Maximum number of worker containers | 5 |",
        "translatedContent": "| `MAX_REPLICAS` | ワーカーコンテナの最大数 | 5 |"
      },
      {
        "row": 19,
        "rowsha": "tao2SccWostugZUExkXX7KVCgoRmG4zwj9+0+BRPH4A=",
        "originContent": "| `SCALE_UP_QUEUE_THRESHOLD` | Queue length to trigger scale up | 5 |",
        "translatedContent": "| `SCALE_UP_QUEUE_THRESHOLD` | スケールアップをトリガーするキュー長 | 5 |"
      },
      {
        "row": 20,
        "rowsha": "h3c0VreAXkSn4vgo8jRLS8E+KEXC37Tqal6AHg4Khk4=",
        "originContent": "| `SCALE_DOWN_QUEUE_THRESHOLD` | Queue length to trigger scale down | 2 |",
        "translatedContent": "| `SCALE_DOWN_QUEUE_THRESHOLD` | スケールダウンをトリガーするキュー長 | 2 |"
      },
      {
        "row": 21,
        "rowsha": "uvQIhcKf7ueA5uvMNL7lf9Xb07TE1ESqCggT3Xw1NIw=",
        "originContent": "| `POLLING_INTERVAL_SECONDS` | How often to check queue length | 30 |",
        "translatedContent": "| `POLLING_INTERVAL_SECONDS` | キュー長をチェックする頻度（秒） | 30 |"
      },
      {
        "row": 22,
        "rowsha": "CuEBY+JS79034D56YRxoov+Nae9rUNYHRgtmgDJRxe4=",
        "originContent": "| `COOLDOWN_PERIOD_SECONDS` | Time between scaling actions | 180 |",
        "translatedContent": "| `COOLDOWN_PERIOD_SECONDS` | スケール操作間の待機時間（秒） | 180 |"
      },
      {
        "row": 23,
        "rowsha": "ZEWxHTxqb3xr8W2OtSZRq2gM7a3Xub52GUIckTn+//0=",
        "originContent": "| `QUEUE_NAME_PREFIX` | Redis queue prefix | `bull` |",
        "translatedContent": "| `QUEUE_NAME_PREFIX` | Redisキュープレフィックス | `bull` |"
      },
      {
        "row": 24,
        "rowsha": "0YWdPpXbNUA7ZgIlc7VhchmkvfH1HNjZOtsMmRTJltk=",
        "originContent": "| `QUEUE_NAME` | Redis queue name | `jobs` |",
        "translatedContent": "| `QUEUE_NAME` | Redisキュー名 | `jobs` |"
      },
      {
        "row": 25,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 26,
        "rowsha": "1nmCM1rR46XZiDLVJmCrDFQPPh3LpGnRGzqMPb2i0Gs=",
        "originContent": "### n8n Configuration",
        "translatedContent": "### n8n設定"
      },
      {
        "row": 27,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 28,
        "rowsha": "XucZkIPSG1kGtUSOI2FDsgoOevDT3W/t4ME2+YxHmxk=",
        "originContent": "Ensure these n8n environment variables are set:",
        "translatedContent": "これらのn8n環境変数が設定されていることを確認してください："
      },
      {
        "row": 29,
        "rowsha": "Kg1W0JxPfm7gOtzcqICeHpoaZhf6zq36K+m3gPXC8iU=",
        "originContent": "- `EXECUTIONS_MODE=queue`",
        "translatedContent": "- `EXECUTIONS_MODE=queue`"
      },
      {
        "row": 30,
        "rowsha": "7ASbimp20EzF2f9dfnSdvVhOhlyDi5FzTBH90veiIY4=",
        "originContent": "- `QUEUE_BULL_REDIS_HOST=redis`",
        "translatedContent": "- `QUEUE_BULL_REDIS_HOST=redis`"
      },
      {
        "row": 31,
        "rowsha": "UZkgyeOCJ2j6Z6BwAiQYoka9NERzfL9kFHgPPXIJi/8=",
        "originContent": "- `QUEUE_HEALTH_CHECK_ACTIVE=true`",
        "translatedContent": "- `QUEUE_HEALTH_CHECK_ACTIVE=true`"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "4DGsK1bNISb8HxIlMlBjEGvJN+lHB/Sj3+P/7haH8n0=",
        "originContent": "## Scaling Behavior",
        "translatedContent": "## スケーリング動作"
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "EzlIFxGkFozyt57W/mFyW33nbD2DPvNUVcNkDWxyUZM=",
        "originContent": "The autoscaler:",
        "translatedContent": "オートスケーラーは："
      },
      {
        "row": 36,
        "rowsha": "LY98GVXxtYNFt3+rX4PzZXtvDk07usW297X+db/3M84=",
        "originContent": "1. Monitors Redis queue length every `POLLING_INTERVAL_SECONDS`",
        "translatedContent": "1. `POLLING_INTERVAL_SECONDS`ごとにRedisキュー長を監視"
      },
      {
        "row": 37,
        "rowsha": "KiDzYoKrOFXP8tlD+hhacL4SSqfe0xCikbOE1SygfQI=",
        "originContent": "2. Scales up when:",
        "translatedContent": "2. スケールアップ条件：  "
      },
      {
        "row": 38,
        "rowsha": "2y7biF5qvX/yMNtZ95rhgXxJuUHiDhs7te5n2uhApcc=",
        "originContent": "   - Queue length > `SCALE_UP_QUEUE_THRESHOLD`",
        "translatedContent": "   - キュー長 > `SCALE_UP_QUEUE_THRESHOLD`  "
      },
      {
        "row": 39,
        "rowsha": "osIdc91oDqqEEsH2U5v57r755/3J0b8nDqS3Jy04JYY=",
        "originContent": "   - Current replicas < `MAX_REPLICAS`",
        "translatedContent": "   - 現在のレプリカ数 < `MAX_REPLICAS`"
      },
      {
        "row": 40,
        "rowsha": "URiHDKjkvVQgLtGPCAZsOfw3H07Np7VAm6Kk23vuqww=",
        "originContent": "3. Scales down when:",
        "translatedContent": "3. スケールダウン条件：  "
      },
      {
        "row": 41,
        "rowsha": "apVcP77YAMvZOimbMHM2szrJlzedLmDFJgQl9Vn90mc=",
        "originContent": "   - Queue length < `SCALE_DOWN_QUEUE_THRESHOLD`",
        "translatedContent": "   - キュー長 < `SCALE_DOWN_QUEUE_THRESHOLD`  "
      },
      {
        "row": 42,
        "rowsha": "bBC4L9+fhT9BN9BnQ6h1BtBejqz9v4NvdJe69MuUh2k=",
        "originContent": "   - Current replicas > `MIN_REPLICAS`",
        "translatedContent": "   - 現在のレプリカ数 > `MIN_REPLICAS`"
      },
      {
        "row": 43,
        "rowsha": "xf1hdDi8lVJoVEoMbvhkjEgOJzHgAE+0p9E41MS8R44=",
        "originContent": "4. Respects cooldown period between scaling actions",
        "translatedContent": "4. スケール操作間のクールダウン期間を遵守"
      },
      {
        "row": 44,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 45,
        "rowsha": "ZyW2c7zH8x3/f7G8mR8+l3up7r6WueywzooSrpOxJbw=",
        "originContent": "## Monitoring",
        "translatedContent": "## 監視"
      },
      {
        "row": 46,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 47,
        "rowsha": "P5t/cVJ0l3RKlykjhvGsoCaPGIDRFAc+7slwg/jS970=",
        "originContent": "The system includes:",
        "translatedContent": "システムには以下が含まれます："
      },
      {
        "row": 48,
        "rowsha": "QYR+3WNaBhTe5HGg/I+mM0xfS1tSwomX+kvZQ6Kb/q0=",
        "originContent": "- Redis queue monitor service (`redis-monitor`)",
        "translatedContent": "- Redisキューモニターサービス（`redis-monitor`）"
      },
      {
        "row": 49,
        "rowsha": "ecIDl9olvKDLu/3IPr/ez/0xIklzWWdlJONHfBVXPzE=",
        "originContent": "- Docker health checks for all services",
        "translatedContent": "- すべてのサービスのDockerヘルスチェック"
      },
      {
        "row": 50,
        "rowsha": "a92yzGxfKkkMvKjzfkIHOq3NJFrbE/BBPQIbarz1/2w=",
        "originContent": "- Detailed logging from autoscaler",
        "translatedContent": "- オートスケーラーによる詳細ログ"
      },
      {
        "row": 51,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 52,
        "rowsha": "ZZoYizb5wyYqKFOeJMNF307cllf1mxFrCh2Yh88uKOA=",
        "originContent": "## Troubleshooting",
        "translatedContent": "## トラブルシューティング"
      },
      {
        "row": 53,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 54,
        "rowsha": "ZKblV/iY1o/q+jt7KpbmLS9kHzWOuzVvUXRyY/OGflA=",
        "originContent": "- Check container logs: `docker-compose logs [service]`",
        "translatedContent": "- コンテナログの確認：`docker-compose logs [service]`"
      },
      {
        "row": 55,
        "rowsha": "2SYmfC67S3YUm8pXCayjgN36zr8Ygon1AP7wbTwWT+o=",
        "originContent": "- Verify Redis connection: `docker-compose exec redis redis-cli ping`",
        "translatedContent": "- Redis接続の確認：`docker-compose exec redis redis-cli ping`"
      },
      {
        "row": 56,
        "rowsha": "un9bkhFaAY7p1czKjDwkVOHe0U5pHNviSZzicFD46EA=",
        "originContent": "- Check queue length manually: `docker-compose exec redis redis-cli LLEN bull:jobs:wait`",
        "translatedContent": "- 手動でキュー長を確認：`docker-compose exec redis redis-cli LLEN bull:jobs:wait`"
      },
      {
        "row": 57,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 58,
        "rowsha": "8a3+DlxABygZ2so3/mAUn5hlmwnbRMz+LL4H57F9QAk=",
        "originContent": "Webhook URL example:",
        "translatedContent": "Webhook URL例：  "
      },
      {
        "row": 59,
        "rowsha": "bAQiTuX5Av9WpeghBJztzcRQ4g/olllbx/dZ9EtpsRc=",
        "originContent": "Webhooks use your cloudflare subdomain name not local host, example:",
        "translatedContent": "WebhookはローカルホストではなくCloudflareのサブドメイン名を使用します。例：  "
      },
      {
        "row": 60,
        "rowsha": "8OzsFR9amYF4RA0Y8Nu9G+1QCmhPYcWwC7/pGDoQBUI=",
        "originContent": "http://webhook.domain.com/webhook/d7e73b77-6cfb-4add-b454-41e4c91461d8",
        "translatedContent": "http://webhook.domain.com/webhook/d7e73b77-6cfb-4add-b454-41e4c91461d8"
      },
      {
        "row": 61,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 62,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": "## ライセンス"
      },
      {
        "row": 63,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 64,
        "rowsha": "bFSaVtsB4CHySNjaeCiaMZfT24b+DTbTM4HQ38cR6Lw=",
        "originContent": "## License",
        "translatedContent": "MITライセンス - 詳細は[LICENSE](LICENSE)をご覧ください。"
      },
      {
        "row": 65,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 66,
        "rowsha": "By/N+w9KrosUGMpNW9mPHh9ybwrQot7uPEDH4V4N8E8=",
        "originContent": "MIT License - See [LICENSE](LICENSE) for details.",
        "translatedContent": ""
      },
      {
        "row": 67,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]