[
  {
    "Id": 1,
    "Content": "# üéØ Project Setup Guide\n\nWelcome to the project! This guide will help you quickly get started by installing the required tools and configuring your local environment.\n\n---\n\n## üõ†Ô∏è Prerequisites\n\nEnsure the following tools are installed on your system:\n\n- [Rust](https://www.rust-lang.org/tools/install)\n- [Solana CLI](https://docs.solana.com/cli/install-solana-cli-tools)\n- [Anchor](https://anchor-lang.com/docs/installation)\n\n> ‚ÑπÔ∏è **Recommended Anchor version:** `0.30.1`\n\n---\n\n## ‚úÖ Check Versions & Set Config\n\nVerify that everything is properly installed and configured:\n\n```bash\nrustc --version             # Check Rust version\nsolana --version            # Check Solana CLI version\nanchor --version            # Check Anchor version\n\nsolana config get           # View current Solana config\nsolana config set --url devnet  # Set network to devnet\n```",
    "ContentSha": "58ta/Lha5uNOixFhEsqgq1z+nAth/qcs+uizeDFN9jg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# üéØ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø—Ä–æ–µ–∫—Ç–∞\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç! –≠—Ç–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, —É—Å—Ç–∞–Ω–æ–≤–∏–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–∏–≤ –ª–æ–∫–∞–ª—å–Ω—É—é —Å—Ä–µ–¥—É.\n\n---\n\n## üõ†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —É—Å–ª–æ–≤–∏—è\n\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:\n\n- [Rust](https://www.rust-lang.org/tools/install)\n- [Solana CLI](https://docs.solana.com/cli/install-solana-cli-tools)\n- [Anchor](https://anchor-lang.com/docs/installation)\n\n> ‚ÑπÔ∏è **–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –≤–µ—Ä—Å–∏—è Anchor:** `0.30.1`\n\n---\n\n## ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏\n\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å—ë —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ:\n\n```bash\nrustc --version             # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é Rust\nsolana --version            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é Solana CLI\nanchor --version            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é Anchor\n\nsolana config get           # –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Solana\nsolana config set --url devnet  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ç—å –Ω–∞ devnet\n```",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "\n---\n\n## üîê Wallet Setup\n\nGenerate and manage your wallet keys:\n\n```bash\nsolana-keygen new -o ./keys/admin.json     # Generate a new keypair\nsolana-keygen pubkey ./keys/admin.json     # Get public key\nsolana balance ./keys/admin.json           # Check wallet balance\nsolana airdrop 5 YOUR_WALLET_ADDRESS -u devnet   # Airdrop 5 SOL to your wallet\n```\n\n---\n\n## üì¶ Project Installation\n\nClone the project and install dependencies:\n\n```bash\ngit clone https://github.com/project-repo.git\ncd project-folder\nyarn\n```",
    "ContentSha": "kA8XdCQ9aLeDTUWEre5qFPWY7mq6/IE5d4zShtwU7Uk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "---\n\n## üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—à–µ–ª—å–∫–∞\n\n–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞–º–∏ –∫–æ—à–µ–ª—å–∫–∞:\n\n```bash\nsolana-keygen new -o ./keys/admin.json     # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—É—é –ø–∞—Ä—É –∫–ª—é—á–µ–π\nsolana-keygen pubkey ./keys/admin.json     # –ü–æ–ª—É—á–∏—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á\nsolana balance ./keys/admin.json           # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞\nsolana airdrop 5 YOUR_WALLET_ADDRESS -u devnet   # –û—Ç–ø—Ä–∞–≤–∏—Ç—å 5 SOL –Ω–∞ –≤–∞—à –∫–æ—à–µ–ª–µ–∫\n```\n\n---\n\n## üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞\n\n–ö–ª–æ–Ω–∏—Ä—É–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:\n\n```bash\ngit clone https://github.com/project-repo.git\ncd project-folder\nyarn\n```",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "\n---\n\n## ‚ö° Quick Start\n\n### üèóÔ∏è Build the Program\n\nCompile the Anchor smart contract:\n\n```bash\n# Build the Anchor program using nightly toolchain\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n\n# Sync all program public keys\nanchor keys sync\n\n# Rebuild if the program address in lib.rs has changed\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n```\n\n---\n",
    "ContentSha": "0dTJUmBRGC2V7BLFhnqYfnEgogW3ZL32JyELDDStRKo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "---\n\n## ‚ö° –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç\n\n### üèóÔ∏è –°–±–æ—Ä–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã\n\n–°–∫–æ–º–ø–∏–ª–∏—Ä—É–π—Ç–µ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç Anchor:\n\n```bash\n# –°–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É Anchor —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º nightly toolchain\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n\n# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ –≤—Å–µ –ø—É–±–ª–∏—á–Ω—ã–µ –∫–ª—é—á–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã\nanchor keys sync\n\n# –ü–µ—Ä–µ—Å–æ–±–µ—Ä–∏—Ç–µ, –µ—Å–ª–∏ –∞–¥—Ä–µ—Å –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ lib.rs –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n```\n\n---",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "### üß™ Test on Devnet\n\nEnsure your `Anchor.toml` uses Devnet:\n\n```toml\n[provider]\ncluster = \"https://api.devnet.solana.com\"\n```\n\n---\n\n### üöÄ Deploy the Program\n\n```bash\nanchor deploy\n```\n\n---\n\n## üß™ Use CLI to Interact with the Program",
    "ContentSha": "4moA26Cidh+x8FPfiKAAqGuzFu1lZqi9qzY5TEqWnUM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Devnet\n\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –≤–∞—à–µ–º —Ñ–∞–π–ª–µ `Anchor.toml` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Devnet:\n\n```toml\n[provider]\ncluster = \"https://api.devnet.solana.com\"\n```\n\n---\n\n### üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã\n\n```bash\nanchor deploy\n```\n\n---\n\n## üß™ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CLI –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "\nUse these CLI scripts to interact with your smart contract locally.\n\n---\n\n### üîπ Initialize the Program\n\n```bash\nyarn script config\n```\n\nInitializes the contract configuration.\n\n---\n\n### üîπ Create a Round\n\n```bash\nyarn script create -t <ROUND_TIME> -d <MIN_DEPOSIT_AMOUNT> -j <MAX_JOINER_COUNT>\n",
    "ContentSha": "cJxU2seDI3kJdfOxGDERf3TQe+8hfEv5NKNfPzUvTCg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ CLI-—Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –≤–∞—à–∏–º —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º –ª–æ–∫–∞–ª—å–Ω–æ.\n\n---\n\n### üîπ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã\n\n```bash\nyarn script config\n```\n\n–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞.\n\n---\n\n### üîπ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—É–Ω–¥–∞\n\n```bash\nyarn script create -t <ROUND_TIME> -d <MIN_DEPOSIT_AMOUNT> -j <MAX_JOINER_COUNT>\n```",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "# Example:\nyarn script create -t 60 -d 100000000 -j 100\n```\n\n**Parameters:**\n\n- `<ROUND_TIME>`: Duration of the round in seconds (e.g., `60` = 60s).\n- `<MIN_DEPOSIT_AMOUNT>`: Minimum deposit in lamports (1 SOL = 1_000_000_000). Must be greater than `config.TEST_INITIAL_MIN_DEPOSIT_AMOUNT`.\n- `<MAX_JOINER_COUNT>`: Maximum number of participants. Must be less than `config.TEST_INITIAL_MAX_JOINER_COUNT`.\n\n---\n\n### üîπ Join a Round\n\n```bash\nyarn script join -a <DEPOSIT_SOL_AMOUNT> -g <ROUND_NUMBER>\n\n# Example:\nyarn script join -a 100000000 -g 2\n```",
    "ContentSha": "XY8SJE7JMOJAsdl48nMNMbL7M8okb0Hlj6Jj/5NRFPI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# –ü—Ä–∏–º–µ—Ä:\nyarn script create -t 60 -d 100000000 -j 100\n```\n\n**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**\n\n- `<ROUND_TIME>`: –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞—É–Ω–¥–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, `60` = 60 —Å–µ–∫).\n- `<MIN_DEPOSIT_AMOUNT>`: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç –≤ –ª–∞–º–ø–æ—Ä—Ç–∞—Ö (1 SOL = 1_000_000_000). –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ, —á–µ–º `config.TEST_INITIAL_MIN_DEPOSIT_AMOUNT`.\n- `<MAX_JOINER_COUNT>`: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ, —á–µ–º `config.TEST_INITIAL_MAX_JOINER_COUNT`.\n\n---\n\n### üîπ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Ä–∞—É–Ω–¥—É\n\n```bash\nyarn script join -a <DEPOSIT_SOL_AMOUNT> -g <ROUND_NUMBER>\n\n# –ü—Ä–∏–º–µ—Ä:\nyarn script join -a 100000000 -g 2\n```",
    "Status": "ok"
  },
  {
    "Id": 7,
    "Content": "\n**Parameters:**\n\n- `<DEPOSIT_SOL_AMOUNT>`: Deposit amount in lamports (e.g., 0.1 SOL = 100_000_000).\n- `<ROUND_NUMBER>`: Index of the round to join. Starts from `0`. Must be less than `total_round`.\n\n> üïí Note: The countdown for the round starts when the second participant joins.\n\n---\n\n### üîπ Select Winner\n\n```bash\nyarn script winner -g <ROUND_NUMBER>\n\n# Example:\nyarn script winner -g 2\n```\n\n**Note:** Only call this after the round time has fully elapsed.\n\n---\n",
    "ContentSha": "tphZWsjhzY7LTk7u2SLeSqvFnxJ6zCG9RfbbUa8EWQs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**\n\n- `<DEPOSIT_SOL_AMOUNT>`: –°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–∞ –≤ –ª–∞–º–ø–æ—Ä—Ç–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.1 SOL = 100_000_000).\n- `<ROUND_NUMBER>`: –ò–Ω–¥–µ–∫—Å —Ä–∞—É–Ω–¥–∞ –¥–ª—è —É—á–∞—Å—Ç–∏—è. –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å `0`. –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–Ω—å—à–µ, —á–µ–º `total_round`.\n\n> üïí –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –û—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Ä–∞—É–Ω–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –≤—Ç–æ—Ä–æ–π —É—á–∞—Å—Ç–Ω–∏–∫.\n\n---\n\n### üîπ –í—ã–±–æ—Ä –ø–æ–±–µ–¥–∏—Ç–µ–ª—è\n\n```bash\nyarn script winner -g <ROUND_NUMBER>\n\n# –ü—Ä–∏–º–µ—Ä:\nyarn script winner -g 2\n```\n\n**–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** –í—ã–∑—ã–≤–∞–π—Ç–µ —ç—Ç–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—Ä–µ–º—è —Ä–∞—É–Ω–¥–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å—Ç–µ—á–µ—Ç.\n\n---",
    "Status": "ok"
  },
  {
    "Id": 8,
    "Content": "### üîπ Claim Winnings\n\n```bash\nyarn script claim -g <ROUND_NUMBER>\n\n# Example:\nyarn script claim -g 2\n```\n\n**Note:** This must be run by the winning wallet after the winner has been selected.\n\n---\n\n## Contact\n\nFor questions or inquiries about Solana smart contract development, DeFi implementation, or DEX integration, please reach out to the project maintainers.\n\n**Telegram**: [@Tru3B1iss](https://t.me/Tru3B1iss)\n**X (Twitter)**: [@XTruebliss](https://x.com/XTruebliss)\n**Discord**: [@trueb1iss](https://discord.com/users/1274339638668038187)\n",
    "ContentSha": "m5BE4dljADXL5fJUyLeVqKZCGWdj40xQnNCbGYmJ4oE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–∏–≥—Ä—ã—à–∞\n\n```bash\nyarn script claim -g <ROUND_NUMBER>\n\n# –ü—Ä–∏–º–µ—Ä:\nyarn script claim -g 2\n```\n\n**–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** –≠—Ç—É –∫–æ–º–∞–Ω–¥—É –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—ã–∏–≥—Ä–∞–≤—à–∏–π –∫–æ—à–µ–ª—ë–∫ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.\n\n---\n\n## –ö–æ–Ω—Ç–∞–∫—Ç—ã\n\n–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ Solana, –≤–Ω–µ–¥—Ä–µ–Ω–∏—è DeFi –∏–ª–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ DEX, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—â–∏–º –ø—Ä–æ–µ–∫—Ç.\n\n**Telegram**: [@Tru3B1iss](https://t.me/Tru3B1iss)\n**X (Twitter)**: [@XTruebliss](https://x.com/XTruebliss)\n**Discord**: [@trueb1iss](https://discord.com/users/1274339638668038187)",
    "Status": "ok"
  }
]