[
  {
    "Id": 1,
    "Content": "# 🎯 Project Setup Guide\n\nWelcome to the project! This guide will help you quickly get started by installing the required tools and configuring your local environment.\n\n---\n\n## 🛠️ Prerequisites\n\nEnsure the following tools are installed on your system:\n\n- [Rust](https://www.rust-lang.org/tools/install)\n- [Solana CLI](https://docs.solana.com/cli/install-solana-cli-tools)\n- [Anchor](https://anchor-lang.com/docs/installation)\n\n> ℹ️ **Recommended Anchor version:** `0.30.1`\n\n---\n\n## ✅ Check Versions & Set Config\n\nVerify that everything is properly installed and configured:\n\n```bash\nrustc --version             # Check Rust version\nsolana --version            # Check Solana CLI version\nanchor --version            # Check Anchor version\n\nsolana config get           # View current Solana config\nsolana config set --url devnet  # Set network to devnet\n```",
    "ContentSha": "58ta/Lha5uNOixFhEsqgq1z+nAth/qcs+uizeDFN9jg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# 🎯 プロジェクトセットアップガイド\n\nプロジェクトへようこそ！このガイドでは、必要なツールのインストールとローカル環境の設定方法を素早くご案内します。\n\n---\n\n## 🛠️ 前提条件\n\n以下のツールがシステムにインストールされていることを確認してください：\n\n- [Rust](https://www.rust-lang.org/tools/install)\n- [Solana CLI](https://docs.solana.com/cli/install-solana-cli-tools)\n- [Anchor](https://anchor-lang.com/docs/installation)\n\n> ℹ️ **推奨Anchorバージョン:** `0.30.1`\n\n---\n\n## ✅ バージョン確認と設定\n\nすべてが正しくインストールおよび設定されていることを確認してください：\n\n```bash\nrustc --version             # Rustのバージョンを確認\nsolana --version            # Solana CLIのバージョンを確認\nanchor --version            # Anchorのバージョンを確認\n\nsolana config get           # 現在のSolana設定を表示\nsolana config set --url devnet  # ネットワークをdevnetに設定\n```",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "\n---\n\n## 🔐 Wallet Setup\n\nGenerate and manage your wallet keys:\n\n```bash\nsolana-keygen new -o ./keys/admin.json     # Generate a new keypair\nsolana-keygen pubkey ./keys/admin.json     # Get public key\nsolana balance ./keys/admin.json           # Check wallet balance\nsolana airdrop 5 YOUR_WALLET_ADDRESS -u devnet   # Airdrop 5 SOL to your wallet\n```\n\n---\n\n## 📦 Project Installation\n\nClone the project and install dependencies:\n\n```bash\ngit clone https://github.com/project-repo.git\ncd project-folder\nyarn\n```",
    "ContentSha": "kA8XdCQ9aLeDTUWEre5qFPWY7mq6/IE5d4zShtwU7Uk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "",
    "Status": "error"
  },
  {
    "Id": 3,
    "Content": "\n---\n\n## ⚡ Quick Start\n\n### 🏗️ Build the Program\n\nCompile the Anchor smart contract:\n\n```bash\n# Build the Anchor program using nightly toolchain\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n\n# Sync all program public keys\nanchor keys sync\n\n# Rebuild if the program address in lib.rs has changed\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n```\n\n---\n",
    "ContentSha": "0dTJUmBRGC2V7BLFhnqYfnEgogW3ZL32JyELDDStRKo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "---\n\n## ⚡ クイックスタート\n\n### 🏗️ プログラムのビルド\n\nAnchor スマートコントラクトをコンパイルします：\n\n```bash\n# nightly ツールチェーンを使用して Anchor プログラムをビルド\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n\n# すべてのプログラム公開鍵を同期\nanchor keys sync\n\n# lib.rs 内のプログラムアドレスが変更された場合は再ビルド\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n```\n\n---",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "### 🧪 Test on Devnet\n\nEnsure your `Anchor.toml` uses Devnet:\n\n```toml\n[provider]\ncluster = \"https://api.devnet.solana.com\"\n```\n\n---\n\n### 🚀 Deploy the Program\n\n```bash\nanchor deploy\n```\n\n---\n\n## 🧪 Use CLI to Interact with the Program",
    "ContentSha": "4moA26Cidh+x8FPfiKAAqGuzFu1lZqi9qzY5TEqWnUM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 🧪 Devnetでのテスト\n\n`Anchor.toml`がDevnetを使用していることを確認してください:\n\n```toml\n[provider]\ncluster = \"https://api.devnet.solana.com\"\n```\n\n---\n\n### 🚀 プログラムのデプロイ\n\n```bash\nanchor deploy\n```\n\n---\n\n## 🧪 CLIを使用してプログラムと対話する",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "\nUse these CLI scripts to interact with your smart contract locally.\n\n---\n\n### 🔹 Initialize the Program\n\n```bash\nyarn script config\n```\n\nInitializes the contract configuration.\n\n---\n\n### 🔹 Create a Round\n\n```bash\nyarn script create -t <ROUND_TIME> -d <MIN_DEPOSIT_AMOUNT> -j <MAX_JOINER_COUNT>\n",
    "ContentSha": "cJxU2seDI3kJdfOxGDERf3TQe+8hfEv5NKNfPzUvTCg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "これらのCLIスクリプトを使用して、ローカルでスマートコントラクトと対話します。\n\n---\n\n### 🔹 プログラムの初期化\n\n```bash\nyarn script config\n```\n\nコントラクトの設定を初期化します。\n\n---\n\n### 🔹 ラウンドの作成\n\n```bash\nyarn script create -t <ROUND_TIME> -d <MIN_DEPOSIT_AMOUNT> -j <MAX_JOINER_COUNT>\n```",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "# Example:\nyarn script create -t 60 -d 100000000 -j 100\n```\n\n**Parameters:**\n\n- `<ROUND_TIME>`: Duration of the round in seconds (e.g., `60` = 60s).\n- `<MIN_DEPOSIT_AMOUNT>`: Minimum deposit in lamports (1 SOL = 1_000_000_000). Must be greater than `config.TEST_INITIAL_MIN_DEPOSIT_AMOUNT`.\n- `<MAX_JOINER_COUNT>`: Maximum number of participants. Must be less than `config.TEST_INITIAL_MAX_JOINER_COUNT`.\n\n---\n\n### 🔹 Join a Round\n\n```bash\nyarn script join -a <DEPOSIT_SOL_AMOUNT> -g <ROUND_NUMBER>\n\n# Example:\nyarn script join -a 100000000 -g 2\n```",
    "ContentSha": "XY8SJE7JMOJAsdl48nMNMbL7M8okb0Hlj6Jj/5NRFPI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# 例:\nyarn script create -t 60 -d 100000000 -j 100\n```\n\n**パラメータ:**\n\n- `<ROUND_TIME>`: ラウンドの継続時間（秒単位）（例: `60` = 60秒）。\n- `<MIN_DEPOSIT_AMOUNT>`: 最小デポジット額（lamports単位、1 SOL = 1_000_000_000）。`config.TEST_INITIAL_MIN_DEPOSIT_AMOUNT`より大きい必要があります。\n- `<MAX_JOINER_COUNT>`: 参加者の最大数。`config.TEST_INITIAL_MAX_JOINER_COUNT`より小さい必要があります。\n\n---\n\n### 🔹 ラウンドに参加する\n\n```bash\nyarn script join -a <DEPOSIT_SOL_AMOUNT> -g <ROUND_NUMBER>\n\n# 例:\nyarn script join -a 100000000 -g 2\n```",
    "Status": "ok"
  },
  {
    "Id": 7,
    "Content": "\n**Parameters:**\n\n- `<DEPOSIT_SOL_AMOUNT>`: Deposit amount in lamports (e.g., 0.1 SOL = 100_000_000).\n- `<ROUND_NUMBER>`: Index of the round to join. Starts from `0`. Must be less than `total_round`.\n\n> 🕒 Note: The countdown for the round starts when the second participant joins.\n\n---\n\n### 🔹 Select Winner\n\n```bash\nyarn script winner -g <ROUND_NUMBER>\n\n# Example:\nyarn script winner -g 2\n```\n\n**Note:** Only call this after the round time has fully elapsed.\n\n---\n",
    "ContentSha": "tphZWsjhzY7LTk7u2SLeSqvFnxJ6zCG9RfbbUa8EWQs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "**パラメータ:**\n\n- `<DEPOSIT_SOL_AMOUNT>`: 入金額（lamports単位、例: 0.1 SOL = 100_000_000）。\n- `<ROUND_NUMBER>`: 参加するラウンドのインデックス。`0`から始まる。`total_round`未満である必要がある。\n\n> 🕒 注: ラウンドのカウントダウンは、2人目の参加者が参加した時点で開始されます。\n\n---\n\n### 🔹 勝者の選択\n\n```bash\nyarn script winner -g <ROUND_NUMBER>\n\n# 例:\nyarn script winner -g 2\n```\n\n**注:** ラウンドの時間が完全に経過した後にのみ実行してください。\n\n---",
    "Status": "ok"
  },
  {
    "Id": 8,
    "Content": "### 🔹 Claim Winnings\n\n```bash\nyarn script claim -g <ROUND_NUMBER>\n\n# Example:\nyarn script claim -g 2\n```\n\n**Note:** This must be run by the winning wallet after the winner has been selected.\n\n---\n\n## Contact\n\nFor questions or inquiries about Solana smart contract development, DeFi implementation, or DEX integration, please reach out to the project maintainers.\n\n**Telegram**: [@Tru3B1iss](https://t.me/Tru3B1iss)\n**X (Twitter)**: [@XTruebliss](https://x.com/XTruebliss)\n**Discord**: [@trueb1iss](https://discord.com/users/1274339638668038187)\n",
    "ContentSha": "m5BE4dljADXL5fJUyLeVqKZCGWdj40xQnNCbGYmJ4oE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 🔹 勝利金の請求\n\n```bash\nyarn script claim -g <ROUND_NUMBER>\n\n# 例:\nyarn script claim -g 2\n```\n\n**注意:** 勝者が選出された後、勝利ウォレットによってこのコマンドを実行する必要があります。\n\n---\n\n## お問い合わせ\n\nSolanaスマートコントラクト開発、DeFi実装、またはDEX統合に関するご質問やお問い合わせは、プロジェクト管理者までご連絡ください。\n\n**Telegram**: [@Tru3B1iss](https://t.me/Tru3B1iss)\n**X (Twitter)**: [@XTruebliss](https://x.com/XTruebliss)\n**Discord**: [@trueb1iss](https://discord.com/users/1274339638668038187)",
    "Status": "ok"
  }
]