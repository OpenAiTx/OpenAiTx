[
  {
    "Id": 1,
    "Content": "# 🎯 Project Setup Guide\n\nWelcome to the project! This guide will help you quickly get started by installing the required tools and configuring your local environment.\n\n---\n\n## 🛠️ Prerequisites\n\nEnsure the following tools are installed on your system:\n\n- [Rust](https://www.rust-lang.org/tools/install)\n- [Solana CLI](https://docs.solana.com/cli/install-solana-cli-tools)\n- [Anchor](https://anchor-lang.com/docs/installation)\n\n> ℹ️ **Recommended Anchor version:** `0.30.1`\n\n---\n\n## ✅ Check Versions & Set Config\n\nVerify that everything is properly installed and configured:\n\n```bash\nrustc --version             # Check Rust version\nsolana --version            # Check Solana CLI version\nanchor --version            # Check Anchor version\n\nsolana config get           # View current Solana config\nsolana config set --url devnet  # Set network to devnet\n```",
    "ContentSha": "58ta/Lha5uNOixFhEsqgq1z+nAth/qcs+uizeDFN9jg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# 🎯 项目搭建指南\n\n欢迎加入本项目！本指南将帮助你快速入门，安装所需工具并配置本地环境。\n\n---\n\n## 🛠️ 前置条件\n\n请确保你的系统已安装以下工具：\n\n- [Rust](https://www.rust-lang.org/tools/install)\n- [Solana CLI](https://docs.solana.com/cli/install-solana-cli-tools)\n- [Anchor](https://anchor-lang.com/docs/installation)\n\n> ℹ️ **推荐 Anchor 版本：** `0.30.1`\n\n---\n\n## ✅ 检查版本并设置配置\n\n请验证所有工具是否已正确安装和配置：\n\n```bash\nrustc --version             # 检查 Rust 版本\nsolana --version            # 检查 Solana CLI 版本\nanchor --version            # 检查 Anchor 版本\n\nsolana config get           # 查看当前 Solana 配置\nsolana config set --url devnet  # 设置网络为 devnet\n```",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "\n---\n\n## 🔐 Wallet Setup\n\nGenerate and manage your wallet keys:\n\n```bash\nsolana-keygen new -o ./keys/admin.json     # Generate a new keypair\nsolana-keygen pubkey ./keys/admin.json     # Get public key\nsolana balance ./keys/admin.json           # Check wallet balance\nsolana airdrop 5 YOUR_WALLET_ADDRESS -u devnet   # Airdrop 5 SOL to your wallet\n```\n\n---\n\n## 📦 Project Installation\n\nClone the project and install dependencies:\n\n```bash\ngit clone https://github.com/project-repo.git\ncd project-folder\nyarn\n```",
    "ContentSha": "kA8XdCQ9aLeDTUWEre5qFPWY7mq6/IE5d4zShtwU7Uk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "---\n\n## 🔐 钱包设置\n\n生成并管理你的钱包密钥：\n\n```bash\nsolana-keygen new -o ./keys/admin.json     # 生成新的密钥对\nsolana-keygen pubkey ./keys/admin.json     # 获取公钥\nsolana balance ./keys/admin.json           # 检查钱包余额\nsolana airdrop 5 YOUR_WALLET_ADDRESS -u devnet   # 给你的钱包空投 5 SOL\n```\n\n---\n\n## 📦 项目安装\n\n克隆项目并安装依赖：\n\n```bash\ngit clone https://github.com/project-repo.git\ncd project-folder\nyarn\n```",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "\n---\n\n## ⚡ Quick Start\n\n### 🏗️ Build the Program\n\nCompile the Anchor smart contract:\n\n```bash\n# Build the Anchor program using nightly toolchain\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n\n# Sync all program public keys\nanchor keys sync\n\n# Rebuild if the program address in lib.rs has changed\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n```\n\n---\n",
    "ContentSha": "0dTJUmBRGC2V7BLFhnqYfnEgogW3ZL32JyELDDStRKo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "---\n\n## ⚡ 快速开始\n\n### 🏗️ 构建程序\n\n编译 Anchor 智能合约：\n\n```bash\n# 使用 nightly 工具链构建 Anchor 程序\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n\n# 同步所有程序公钥\nanchor keys sync\n\n# 如果 lib.rs 中的程序地址发生变化则重新构建\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n```\n\n---",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "### 🧪 Test on Devnet\n\nEnsure your `Anchor.toml` uses Devnet:\n\n```toml\n[provider]\ncluster = \"https://api.devnet.solana.com\"\n```\n\n---\n\n### 🚀 Deploy the Program\n\n```bash\nanchor deploy\n```\n\n---\n\n## 🧪 Use CLI to Interact with the Program",
    "ContentSha": "4moA26Cidh+x8FPfiKAAqGuzFu1lZqi9qzY5TEqWnUM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 🧪 在 Devnet 上测试\n\n确保你的 `Anchor.toml` 使用的是 Devnet：\n\n```toml\n[provider]\ncluster = \"https://api.devnet.solana.com\"\n```\n\n---\n\n### 🚀 部署程序\n\n```bash\nanchor deploy\n```\n\n---\n\n## 🧪 使用 CLI 与程序交互",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "\nUse these CLI scripts to interact with your smart contract locally.\n\n---\n\n### 🔹 Initialize the Program\n\n```bash\nyarn script config\n```\n\nInitializes the contract configuration.\n\n---\n\n### 🔹 Create a Round\n\n```bash\nyarn script create -t <ROUND_TIME> -d <MIN_DEPOSIT_AMOUNT> -j <MAX_JOINER_COUNT>\n",
    "ContentSha": "cJxU2seDI3kJdfOxGDERf3TQe+8hfEv5NKNfPzUvTCg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "使用这些 CLI 脚本在本地与您的智能合约进行交互。\n\n---\n\n### 🔹 初始化程序\n\n```bash\nyarn script config\n```\n\n初始化合约配置。\n\n---\n\n### 🔹 创建一轮\n\n```bash\nyarn script create -t <ROUND_TIME> -d <MIN_DEPOSIT_AMOUNT> -j <MAX_JOINER_COUNT>\n",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "# Example:\nyarn script create -t 60 -d 100000000 -j 100\n```\n\n**Parameters:**\n\n- `<ROUND_TIME>`: Duration of the round in seconds (e.g., `60` = 60s).\n- `<MIN_DEPOSIT_AMOUNT>`: Minimum deposit in lamports (1 SOL = 1_000_000_000). Must be greater than `config.TEST_INITIAL_MIN_DEPOSIT_AMOUNT`.\n- `<MAX_JOINER_COUNT>`: Maximum number of participants. Must be less than `config.TEST_INITIAL_MAX_JOINER_COUNT`.\n\n---\n\n### 🔹 Join a Round\n\n```bash\nyarn script join -a <DEPOSIT_SOL_AMOUNT> -g <ROUND_NUMBER>\n\n# Example:\nyarn script join -a 100000000 -g 2\n```",
    "ContentSha": "XY8SJE7JMOJAsdl48nMNMbL7M8okb0Hlj6Jj/5NRFPI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# 示例:\nyarn script create -t 60 -d 100000000 -j 100\n```\n\n**参数说明：**\n\n- `<ROUND_TIME>`：每轮持续时间，单位为秒（例如，`60` = 60秒）。\n- `<MIN_DEPOSIT_AMOUNT>`：最小存款额，单位为 lamports（1 SOL = 1_000_000_000）。必须大于 `config.TEST_INITIAL_MIN_DEPOSIT_AMOUNT`。\n- `<MAX_JOINER_COUNT>`：参与者最大数量。必须小于 `config.TEST_INITIAL_MAX_JOINER_COUNT`。\n\n---\n\n### 🔹 参与一轮\n\n```bash\nyarn script join -a <DEPOSIT_SOL_AMOUNT> -g <ROUND_NUMBER>\n\n# 示例:\nyarn script join -a 100000000 -g 2\n```",
    "Status": "ok"
  },
  {
    "Id": 7,
    "Content": "\n**Parameters:**\n\n- `<DEPOSIT_SOL_AMOUNT>`: Deposit amount in lamports (e.g., 0.1 SOL = 100_000_000).\n- `<ROUND_NUMBER>`: Index of the round to join. Starts from `0`. Must be less than `total_round`.\n\n> 🕒 Note: The countdown for the round starts when the second participant joins.\n\n---\n\n### 🔹 Select Winner\n\n```bash\nyarn script winner -g <ROUND_NUMBER>\n\n# Example:\nyarn script winner -g 2\n```\n\n**Note:** Only call this after the round time has fully elapsed.\n\n---\n",
    "ContentSha": "tphZWsjhzY7LTk7u2SLeSqvFnxJ6zCG9RfbbUa8EWQs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "**参数：**\n\n- `<DEPOSIT_SOL_AMOUNT>`：存款金额，以 lamports 为单位（例如，0.1 SOL = 100_000_000）。\n- `<ROUND_NUMBER>`：要加入的轮次索引。从 `0` 开始。必须小于 `total_round`。\n\n> 🕒 注意：该轮的倒计时在第二位参与者加入时开始。\n\n---\n\n### 🔹 选择获胜者\n\n```bash\nyarn script winner -g <ROUND_NUMBER>\n\n# 示例：\nyarn script winner -g 2\n```\n\n**注意：** 仅在该轮时间完全结束后调用此命令。\n\n---",
    "Status": "ok"
  },
  {
    "Id": 8,
    "Content": "### 🔹 Claim Winnings\n\n```bash\nyarn script claim -g <ROUND_NUMBER>\n\n# Example:\nyarn script claim -g 2\n```\n\n**Note:** This must be run by the winning wallet after the winner has been selected.\n\n---\n\n## Contact\n\nFor questions or inquiries about Solana smart contract development, DeFi implementation, or DEX integration, please reach out to the project maintainers.\n\n**Telegram**: [@Tru3B1iss](https://t.me/Tru3B1iss)\n**X (Twitter)**: [@XTruebliss](https://x.com/XTruebliss)\n**Discord**: [@trueb1iss](https://discord.com/users/1274339638668038187)\n",
    "ContentSha": "m5BE4dljADXL5fJUyLeVqKZCGWdj40xQnNCbGYmJ4oE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### 🔹 领取奖金\n\n```bash\nyarn script claim -g <ROUND_NUMBER>\n\n# 示例：\nyarn script claim -g 2\n```\n\n**注意：** 这一步必须由获胜钱包在选出获胜者后执行。\n\n---\n\n## 联系方式\n\n如有关于 Solana 智能合约开发、DeFi 实现或 DEX 集成的疑问或咨询，请联系项目维护者。\n\n**Telegram**：[ @Tru3B1iss ](https://t.me/Tru3B1iss)\n**X (推特)**：[ @XTruebliss ](https://x.com/XTruebliss)\n**Discord**：[ @trueb1iss ](https://discord.com/users/1274339638668038187)\n",
    "Status": "ok"
  }
]