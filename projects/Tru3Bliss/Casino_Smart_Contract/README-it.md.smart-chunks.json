[
  {
    "Id": 1,
    "Content": "# üéØ Project Setup Guide\n\nWelcome to the project! This guide will help you quickly get started by installing the required tools and configuring your local environment.\n\n---\n\n## üõ†Ô∏è Prerequisites\n\nEnsure the following tools are installed on your system:\n\n- [Rust](https://www.rust-lang.org/tools/install)\n- [Solana CLI](https://docs.solana.com/cli/install-solana-cli-tools)\n- [Anchor](https://anchor-lang.com/docs/installation)\n\n> ‚ÑπÔ∏è **Recommended Anchor version:** `0.30.1`\n\n---\n\n## ‚úÖ Check Versions & Set Config\n\nVerify that everything is properly installed and configured:\n\n```bash\nrustc --version             # Check Rust version\nsolana --version            # Check Solana CLI version\nanchor --version            # Check Anchor version\n\nsolana config get           # View current Solana config\nsolana config set --url devnet  # Set network to devnet\n```",
    "ContentSha": "58ta/Lha5uNOixFhEsqgq1z+nAth/qcs+uizeDFN9jg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# üéØ Guida all'Installazione del Progetto\n\nBenvenuto nel progetto! Questa guida ti aiuter√† a iniziare rapidamente installando gli strumenti necessari e configurando il tuo ambiente locale.\n\n---\n\n## üõ†Ô∏è Prerequisiti\n\nAssicurati che i seguenti strumenti siano installati sul tuo sistema:\n\n- [Rust](https://www.rust-lang.org/tools/install)\n- [Solana CLI](https://docs.solana.com/cli/install-solana-cli-tools)\n- [Anchor](https://anchor-lang.com/docs/installation)\n\n> ‚ÑπÔ∏è **Versione Anchor consigliata:** `0.30.1`\n\n---\n\n## ‚úÖ Verifica Versioni & Configurazione\n\nVerifica che tutto sia correttamente installato e configurato:\n\n```bash\nrustc --version             # Controlla la versione di Rust\nsolana --version            # Controlla la versione di Solana CLI\nanchor --version            # Controlla la versione di Anchor\n\nsolana config get           # Visualizza la configurazione attuale di Solana\nsolana config set --url devnet  # Imposta la rete su devnet\n```",
    "Status": "ok"
  },
  {
    "Id": 2,
    "Content": "\n---\n\n## üîê Wallet Setup\n\nGenerate and manage your wallet keys:\n\n```bash\nsolana-keygen new -o ./keys/admin.json     # Generate a new keypair\nsolana-keygen pubkey ./keys/admin.json     # Get public key\nsolana balance ./keys/admin.json           # Check wallet balance\nsolana airdrop 5 YOUR_WALLET_ADDRESS -u devnet   # Airdrop 5 SOL to your wallet\n```\n\n---\n\n## üì¶ Project Installation\n\nClone the project and install dependencies:\n\n```bash\ngit clone https://github.com/project-repo.git\ncd project-folder\nyarn\n```",
    "ContentSha": "kA8XdCQ9aLeDTUWEre5qFPWY7mq6/IE5d4zShtwU7Uk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "---\n\n## üîê Configurazione del Wallet\n\nGenera e gestisci le chiavi del tuo wallet:\n\n```bash\nsolana-keygen new -o ./keys/admin.json     # Genera una nuova coppia di chiavi\nsolana-keygen pubkey ./keys/admin.json     # Ottieni la chiave pubblica\nsolana balance ./keys/admin.json           # Controlla il saldo del wallet\nsolana airdrop 5 YOUR_WALLET_ADDRESS -u devnet   # Ricevi un airdrop di 5 SOL nel tuo wallet\n```\n\n---\n\n## üì¶ Installazione del Progetto\n\nClona il progetto e installa le dipendenze:\n\n```bash\ngit clone https://github.com/project-repo.git\ncd project-folder\nyarn\n```",
    "Status": "ok"
  },
  {
    "Id": 3,
    "Content": "\n---\n\n## ‚ö° Quick Start\n\n### üèóÔ∏è Build the Program\n\nCompile the Anchor smart contract:\n\n```bash\n# Build the Anchor program using nightly toolchain\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n\n# Sync all program public keys\nanchor keys sync\n\n# Rebuild if the program address in lib.rs has changed\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n```\n\n---\n",
    "ContentSha": "0dTJUmBRGC2V7BLFhnqYfnEgogW3ZL32JyELDDStRKo=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "---\n\n## ‚ö° Avvio Rapido\n\n### üèóÔ∏è Compilare il Programma\n\nCompila lo smart contract Anchor:\n\n```bash\n# Compila il programma Anchor utilizzando il toolchain nightly\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n\n# Sincronizza tutte le chiavi pubbliche del programma\nanchor keys sync\n\n# Ricompila se l'indirizzo del programma in lib.rs √® cambiato\nRUSTUP_TOOLCHAIN=\"nightly-2024-11-19\" anchor build\n```\n\n---",
    "Status": "ok"
  },
  {
    "Id": 4,
    "Content": "### üß™ Test on Devnet\n\nEnsure your `Anchor.toml` uses Devnet:\n\n```toml\n[provider]\ncluster = \"https://api.devnet.solana.com\"\n```\n\n---\n\n### üöÄ Deploy the Program\n\n```bash\nanchor deploy\n```\n\n---\n\n## üß™ Use CLI to Interact with the Program",
    "ContentSha": "4moA26Cidh+x8FPfiKAAqGuzFu1lZqi9qzY5TEqWnUM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "### üß™ Test su Devnet\n\nAssicurati che il tuo `Anchor.toml` utilizzi Devnet:\n\n```toml\n[provider]\ncluster = \"https://api.devnet.solana.com\"\n```\n\n---\n\n### üöÄ Effettua il Deploy del Programma\n\n```bash\nanchor deploy\n```\n\n---\n\n## üß™ Usa la CLI per Interagire con il Programma",
    "Status": "ok"
  },
  {
    "Id": 5,
    "Content": "\nUse these CLI scripts to interact with your smart contract locally.\n\n---\n\n### üîπ Initialize the Program\n\n```bash\nyarn script config\n```\n\nInitializes the contract configuration.\n\n---\n\n### üîπ Create a Round\n\n```bash\nyarn script create -t <ROUND_TIME> -d <MIN_DEPOSIT_AMOUNT> -j <MAX_JOINER_COUNT>\n",
    "ContentSha": "cJxU2seDI3kJdfOxGDERf3TQe+8hfEv5NKNfPzUvTCg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "Usa questi script CLI per interagire localmente con il tuo smart contract.\n\n---\n\n### üîπ Inizializza il Programma\n\n```bash\nyarn script config\n```\n\nInizializza la configurazione del contratto.\n\n---\n\n### üîπ Crea un Round\n\n```bash\nyarn script create -t <ROUND_TIME> -d <MIN_DEPOSIT_AMOUNT> -j <MAX_JOINER_COUNT>\n",
    "Status": "ok"
  },
  {
    "Id": 6,
    "Content": "# Example:\nyarn script create -t 60 -d 100000000 -j 100\n```\n\n**Parameters:**\n\n- `<ROUND_TIME>`: Duration of the round in seconds (e.g., `60` = 60s).\n- `<MIN_DEPOSIT_AMOUNT>`: Minimum deposit in lamports (1 SOL = 1_000_000_000). Must be greater than `config.TEST_INITIAL_MIN_DEPOSIT_AMOUNT`.\n- `<MAX_JOINER_COUNT>`: Maximum number of participants. Must be less than `config.TEST_INITIAL_MAX_JOINER_COUNT`.\n\n---\n\n### üîπ Join a Round\n\n```bash\nyarn script join -a <DEPOSIT_SOL_AMOUNT> -g <ROUND_NUMBER>\n\n# Example:\nyarn script join -a 100000000 -g 2\n```",
    "ContentSha": "XY8SJE7JMOJAsdl48nMNMbL7M8okb0Hlj6Jj/5NRFPI=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Esempio:\nyarn script create -t 60 -d 100000000 -j 100\n```\n\n**Parametri:**\n\n- `<ROUND_TIME>`: Durata del round in secondi (ad es., `60` = 60s).\n- `<MIN_DEPOSIT_AMOUNT>`: Deposito minimo in lamport (1 SOL = 1_000_000_000). Deve essere maggiore di `config.TEST_INITIAL_MIN_DEPOSIT_AMOUNT`.\n- `<MAX_JOINER_COUNT>`: Numero massimo di partecipanti. Deve essere inferiore a `config.TEST_INITIAL_MAX_JOINER_COUNT`.\n\n---\n\n### üîπ Unirsi a un Round\n\n```bash\nyarn script join -a <DEPOSIT_SOL_AMOUNT> -g <ROUND_NUMBER>\n\n# Esempio:\nyarn script join -a 100000000 -g 2\n```",
    "Status": "ok"
  },
  {
    "Id": 7,
    "Content": "\n**Parameters:**\n\n- `<DEPOSIT_SOL_AMOUNT>`: Deposit amount in lamports (e.g., 0.1 SOL = 100_000_000).\n- `<ROUND_NUMBER>`: Index of the round to join. Starts from `0`. Must be less than `total_round`.\n\n> üïí Note: The countdown for the round starts when the second participant joins.\n\n---\n\n### üîπ Select Winner\n\n```bash\nyarn script winner -g <ROUND_NUMBER>\n\n# Example:\nyarn script winner -g 2\n```\n\n**Note:** Only call this after the round time has fully elapsed.\n\n---\n",
    "ContentSha": "tphZWsjhzY7LTk7u2SLeSqvFnxJ6zCG9RfbbUa8EWQs=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "**Parametri:**\n\n- `<DEPOSIT_SOL_AMOUNT>`: Importo del deposito in lamport (ad esempio, 0.1 SOL = 100_000_000).\n- `<ROUND_NUMBER>`: Indice del round a cui partecipare. Parte da `0`. Deve essere inferiore a `total_round`.\n\n> üïí Nota: Il conto alla rovescia per il round inizia quando si unisce il secondo partecipante.\n\n---\n\n### üîπ Seleziona Vincitore\n\n```bash\nyarn script winner -g <ROUND_NUMBER>\n\n# Esempio:\nyarn script winner -g 2\n```\n\n**Nota:** Eseguire questa chiamata solo dopo che il tempo del round √® completamente trascorso.\n\n---",
    "Status": "ok"
  },
  {
    "Id": 8,
    "Content": "### üîπ Claim Winnings\n\n```bash\nyarn script claim -g <ROUND_NUMBER>\n\n# Example:\nyarn script claim -g 2\n```\n\n**Note:** This must be run by the winning wallet after the winner has been selected.\n\n---\n\n## Contact\n\nFor questions or inquiries about Solana smart contract development, DeFi implementation, or DEX integration, please reach out to the project maintainers.\n\n**Telegram**: [@Tru3B1iss](https://t.me/Tru3B1iss)\n**X (Twitter)**: [@XTruebliss](https://x.com/XTruebliss)\n**Discord**: [@trueb1iss](https://discord.com/users/1274339638668038187)\n",
    "ContentSha": "m5BE4dljADXL5fJUyLeVqKZCGWdj40xQnNCbGYmJ4oE=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "",
    "Status": "error"
  }
]