[
  {
    "row": 1,
    "rowsha": "WrgVZZZ5cXwufWD2gsNF4FO140rE/TYewVWQV2Tr0bM=",
    "originContent": "# Node Monkey",
    "translatedContent": "# Node Monkey"
  },
  {
    "row": 2,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 3,
    "rowsha": "cij9aa0ih6bcNlRWRdxAB3L+jGTl+zOcoU3UDaFNPGc=",
    "originContent": "A tool for inspecting, debugging and commanding Node.js applications through a web browser or SSH interface into your app (with your own custom commands).",
    "translatedContent": "웹 브라우저 또는 SSH 인터페이스를 통해 Node.js 애플리케이션을 검사, 디버깅 및 명령할 수 있는 도구 (사용자 정의 명령 포함)."
  },
  {
    "row": 4,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 5,
    "rowsha": "ZC7naBkWw7tJP6MuF3pt9iDbI+Xd/R8jViLCmthQEII=",
    "originContent": "Node Monkey runs a simple server (or attaches to your existing server) and uses [Socket.IO](https://github.com/LearnBoost/socket.io) to create a websocket connection between the browser and server. Its primary feature captures anything that would normally be logged to the terminal and passes it to the browser for inspection.",
    "translatedContent": "Node Monkey는 간단한 서버를 실행하거나 기존 서버에 연결하며, [Socket.IO](https://github.com/LearnBoost/socket.io)를 사용해 브라우저와 서버 간에 웹소켓 연결을 생성합니다. 주요 기능은 터미널에 일반적으로 기록되는 모든 내용을 캡처하여 브라우저에서 검사할 수 있도록 전달하는 것입니다."
  },
  {
    "row": 6,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 7,
    "rowsha": "Ts2M5PDDdKY6hwrcrRgxOC4zPrxXYhdeXaydNU9GyWA=",
    "originContent": "It is incredibly easy to get started (see [Quick Usage](#quick-usage) below) but Node Monkey also provides additional features and significant flexibility for more advanced usage. You can actually SSH into your app where Node Monkey will provide a command line interface to execute your own custom commands. This can be very useful for debugging, monitoring or otherwise controlling your application while it is running. It provides authentication for security in production applications.",
    "translatedContent": "시작하기 매우 쉽습니다 (아래 [빠른 사용법](#quick-usage) 참고) 하지만 Node Monkey는 추가 기능과 고급 사용을 위한 상당한 유연성을 제공합니다. 실제로 Node Monkey가 명령줄 인터페이스를 제공하는 SSH를 통해 앱에 접속하여 사용자 정의 명령을 실행할 수 있습니다. 이는 디버깅, 모니터링 또는 실행 중인 애플리케이션을 제어하는 데 매우 유용할 수 있습니다. 프로덕션 애플리케이션에서 보안을 위한 인증을 제공합니다."
  },
  {
    "row": 8,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 9,
    "rowsha": "Yk5cZ3S6lnsBfRjsT/4ud8HP+iWBYqbxG0YlzTcI+ew=",
    "originContent": "## Contents",
    "translatedContent": "## 목차"
  },
  {
    "row": 10,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 11,
    "rowsha": "koJPNwQV0763RVUH5Xo8MXGtao27l/0qDrHd6wToFbc=",
    "originContent": "- [Motivation](#motivation)",
    "translatedContent": "- [동기](#motivation)"
  },
  {
    "row": 12,
    "rowsha": "BI+Zz2NbZ0AX7YgD9EjinH4VCYulypQnBww5RTqTSDI=",
    "originContent": "- [Features](#features)",
    "translatedContent": "- [기능](#features)"
  },
  {
    "row": 13,
    "rowsha": "Wl12oCRmfvQwHCfuvjGuhBK05j+rCEJcS20CJyqXCVA=",
    "originContent": "- [Installation](#installation)",
    "translatedContent": "- [설치](#installation)"
  },
  {
    "row": 14,
    "rowsha": "AiL7eT82E0SJNMvcB8N+s31V9LDapUnUmmqELQ/uUys=",
    "originContent": "- [Quick Usage](#quick-usage)",
    "translatedContent": "- [빠른 사용법](#quick-usage)"
  },
  {
    "row": 15,
    "rowsha": "v+fixfONf/ZrQcMj8MX7bOu+z6w7B9z6Z5oLq1VGbQo=",
    "originContent": "- [Server](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md)",
    "translatedContent": "- [서버](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md)"
  },
  {
    "row": 16,
    "rowsha": "hy4U3QxBqcwvtrK7fUSf1vG/5CygV6qHpDeqFRERLhY=",
    "originContent": "  - [Provide your own](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#provide-your-own)",
    "translatedContent": "  - [직접 제공하기](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#provide-your-own)"
  },
  {
    "row": 17,
    "rowsha": "hW1tvWM26kyT+Rn4d/s3H4oIYHKd9ay5wOJpicDCmOM=",
    "originContent": "  - [Options](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#options)",
    "translatedContent": "  - [옵션](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#options)"
  },
  {
    "row": 18,
    "rowsha": "2Y7lmUPVmKziUZNwTN26qBiHaaNNnYoeQAp8hAi6WtQ=",
    "originContent": "  - [Properties](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#properties)",
    "translatedContent": "  - [속성](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#properties)"
  },
  {
    "row": 19,
    "rowsha": "r41X7VDtNYZ8iXber7yeqx0tmGTBbjOdXsVbK3rxhGQ=",
    "originContent": "  - [Methods](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#methods)",
    "translatedContent": "  - [메서드](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#methods)"
  },
  {
    "row": 20,
    "rowsha": "RldAWjKvLcRlWEi0Zehqn8ILPEIHAYDbIkBnHtPbl8k=",
    "originContent": "- [Client (browser)](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md)",
    "translatedContent": "- [클라이언트 (브라우저)](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md)"
  },
  {
    "row": 21,
    "rowsha": "7TT95IUKMYTusS11KMukxQ2hNXRrhpi1FshjkrHwkuA=",
    "originContent": "  - [Properties](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md#properties)",
    "translatedContent": "  - [속성](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md#properties)"
  },
  {
    "row": 22,
    "rowsha": "Q4o52bH5oRZcuUq+Rx8PHto7f9H931bWkxE7RQmeWF8=",
    "originContent": "  - [Methods](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md#methods)",
    "translatedContent": "  - [메서드](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md#methods)"
  },
  {
    "row": 23,
    "rowsha": "OuyfwZLBpN1lzRLhfTrm2szbG37XYnqVfQSj+HSB9gA=",
    "originContent": "- [SSH](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md)",
    "translatedContent": "- [SSH](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md)"
  },
  {
    "row": 24,
    "rowsha": "KgAqvh434VrR30mxYNmKM6Pf1iTxhPDwKFchjzspZu8=",
    "originContent": "  - [Setup](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md#setup)",
    "translatedContent": "  - [설정](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md#setup)"
  },
  {
    "row": 25,
    "rowsha": "M1hJSlvpx85l4aBR90vyWmoIUwRP5o8eVxrB14wVO4s=",
    "originContent": "  - [Usage](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md#usage)",
    "translatedContent": "  - [사용법](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md#usage)"
  },
  {
    "row": 26,
    "rowsha": "CCBSFPS0pammPFaIrfAwcsxZHYdNLxYEaYYA8d43a+Y=",
    "originContent": "- [User Management](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/user-management.md)",
    "translatedContent": "- [사용자 관리](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/user-management.md)"
  },
  {
    "row": 27,
    "rowsha": "LN4vYh0XwH27FcFQfJNC+NL4B4eRGz2i5zXqfc2XmSE=",
    "originContent": "- [Contributing](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/contributing.md)",
    "translatedContent": "- [기여하기](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/contributing.md)"
  },
  {
    "row": 28,
    "rowsha": "DwbQUreTERUXzlksX1yv/MQ/hws2dBI0IHca5N5iARA=",
    "originContent": "- [Changelog](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/CHANGELOG.md)",
    "translatedContent": "- [변경 로그](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/CHANGELOG.md)"
  },
  {
    "row": 29,
    "rowsha": "tYHG8yiD8vGl+kaUTaoYd3fRIZV31BiQlFpAfV1P8Wg=",
    "originContent": "- [MIT License](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/LICENSE.md)",
    "translatedContent": "- [MIT 라이선스](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/LICENSE.md)"
  },
  {
    "row": 30,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 31,
    "rowsha": "XkjmO8GZw+NPlqtsKIz94hXoCCSSximfmFKrLHYsZ2I=",
    "originContent": "## Motivation",
    "translatedContent": "## 동기"
  },
  {
    "row": 32,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 33,
    "rowsha": "smUU14CTa3lFvLxBIyho/eEPQnU46LTbc+JPp6zRHZI=",
    "originContent": "The motivation for this project came from trying to debug a Node.js server I wrote that used websockets. I found it problematic trying to inspect objects with the terminal because the output was too large and not browsable. I tried using the built-in debugging that works with the [Chrome Developer Tools plugin](https://github.com/joyent/node/wiki/using-eclipse-as-node-applications-debugger) for Eclipse. Unfortunately, I ran into a problem where setting breakpoints to inspect objects would cause the server to stop responding to heartbeats thus causing the client to disconnect. This would entirely mess up my debugging efforts. All I really needed to do was have a good way to inspect objects.",
    "translatedContent": "이 프로젝트의 동기는 내가 작성한 웹소켓을 사용하는 Node.js 서버를 디버깅하려고 시도하면서 나왔습니다. 터미널에서 객체를 검사하는 것이 너무 크고 탐색하기 어려워 문제를 겪었습니다. Eclipse에서 [Chrome 개발자 도구 플러그인](https://github.com/joyent/node/wiki/using-eclipse-as-node-applications-debugger)과 함께 작동하는 내장 디버깅을 사용해 보았지만, 객체를 검사하기 위해 중단점을 설정하면 서버가 하트비트에 응답하지 않아 클라이언트가 연결이 끊기는 문제가 발생했습니다. 이는 디버깅 작업을 완전히 망쳤습니다. 내가 진정으로 필요했던 것은 객체를 잘 검사할 수 있는 방법이었습니다."
  },
  {
    "row": 34,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 35,
    "rowsha": "SJ2DhRpJZXaBfHPjCSEefAjnVLtMec5BH1LtEBb4bDA=",
    "originContent": "I searched Google and found projects like [node-inspector](https://github.com/dannycoates/node-inspector), which didn't work with the latest versions of Node, and [node-codein](http://thomashunter.name/blog/nodejs-console-object-debug-inspector/) which had many bugs. And neither worked with Firefox. So, Node Monkey was born!",
    "translatedContent": "구글을 검색해보니 [node-inspector](https://github.com/dannycoates/node-inspector) 같은 프로젝트가 있었지만 최신 Node 버전과 호환되지 않았고, [node-codein](http://thomashunter.name/blog/nodejs-console-object-debug-inspector/)은 많은 버그가 있었습니다. 게다가 둘 다 Firefox와 호환되지 않았습니다. 그래서 Node Monkey가 탄생했습니다!"
  },
  {
    "row": 36,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 37,
    "rowsha": "nrVeE3oDH0tNFm9CX5stkYPKAaCrnePTkJZtrLHmoDg=",
    "originContent": "## Features",
    "translatedContent": "## 기능"
  },
  {
    "row": 38,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 39,
    "rowsha": "Ssau9cB04jImPKzA4hqhqag7MZ8JNVydeV9Ss/cjD54=",
    "originContent": "- Log console output from your app to a browser console for easier inspection",
    "translatedContent": "- 앱의 콘솔 출력을 브라우저 콘솔로 전송하여 쉽게 검사 가능"
  },
  {
    "row": 40,
    "rowsha": "+8qk7vPjDSMQ/c1LeKdGhOUr7O26KX+iRrXGl6rGcGY=",
    "originContent": "  - Provides a stream for those using Bunyan (see [here](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#nodemonkeybunyan_stream))",
    "translatedContent": "  - Bunyan 사용자용 스트림 제공 (자세한 내용은 [여기](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#nodemonkeybunyan_stream) 참고)"
  },
  {
    "row": 41,
    "rowsha": "ckj9ucqoesT0jdIGn93uK/NyUgUG4zg0a0+ORoIJkSg=",
    "originContent": "- Provides SSH capability so you can get a shell into your app for inspection, debugging or controlling your app",
    "translatedContent": "- SSH 기능을 제공하여 앱에 셸로 접속하여 검사, 디버깅 또는 앱 제어가 가능합니다."
  },
  {
    "row": 42,
    "rowsha": "kyh6rLqgoySImC91u7DJ5ddFs4e8PMIL7whEinJptHI=",
    "originContent": "- Register commands for your application that can be executed from the browser console or the SSH interface",
    "translatedContent": "- 브라우저 콘솔 또는 SSH 인터페이스에서 실행할 수 있는 애플리케이션 명령어를 등록합니다."
  },
  {
    "row": 43,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 44,
    "rowsha": "oV0SUDvwD2VN8Gi9nlr2JZ2xcDrASmE2W5kc5SVX5eo=",
    "originContent": "## Installation",
    "translatedContent": "## 설치"
  },
  {
    "row": 45,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 46,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 47,
    "rowsha": "4n7awNIMgtQawV3nEpc0T5k+pl0Q/gG5lxeiDAngjcY=",
    "originContent": "npm install --save node-monkey",
    "translatedContent": "npm install --save node-monkey"
  },
  {
    "row": 48,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 49,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 50,
    "rowsha": "B1Uqf+ZoeuledTlWF4+ai2+T308TG5rrUaamcE4GshU=",
    "originContent": "If you're interested in testing experimental and upcoming features, run this instead:",
    "translatedContent": "실험적이고 다가오는 기능을 테스트해보고 싶다면, 대신 다음을 실행하세요:"
  },
  {
    "row": 51,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 52,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 53,
    "rowsha": "TuKP279PfbsgspVPxmfbP1ONK7ZdpfQidP/U5vZmZ3E=",
    "originContent": "npm install --save node-monkey@next",
    "translatedContent": "npm install --save node-monkey@next"
  },
  {
    "row": 54,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 55,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "## 빠른 사용법"
  },
  {
    "row": 56,
    "rowsha": "Ql0HOBoba8xpLHzuJb+aW8698vPKVJ13/HT4itPoSxU=",
    "originContent": "## Quick Usage",
    "translatedContent": ""
  },
  {
    "row": 57,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "Node Monkey는 많은 기능을 지원하지만, 시작하기는 매우 간단하도록 설계되었습니다. 애플리케이션에 한두 줄을 포함하기만 하면 됩니다. 이 후 콘솔에 기록되는 모든 내용은 연결되면 브라우저 콘솔에 표시됩니다. 대부분의 `console.*` 함수 호출에 대한 출력을 캡처하여 브라우저로 전달해 검사할 수 있습니다."
  },
  {
    "row": 58,
    "rowsha": "+XhJRHbjXHlE+KPBGBe4EGjpIbmiQDlgnyTZmj7KTuU=",
    "originContent": "Although Node Monkey supports many features, getting started is designed to be extremely easy. All you have to do is include a line or two in your application. Anything that is logged to the console after this will show up in the browser console once connected. It captures the output to most `console.*` function calls and forwards the output to the browser for inspection.",
    "translatedContent": ""
  },
  {
    "row": 59,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "가장 간단한 사용법은 다음과 같습니다:"
  },
  {
    "row": 60,
    "rowsha": "F7ouJTHCmLfUydRWk1bomE52/VJFtEf8yvrimLNR8Fs=",
    "originContent": "The simplest usage looks like this:",
    "translatedContent": ""
  },
  {
    "row": 61,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 62,
    "rowsha": "6IXHjyAaUImYsJ5BaklYyXzUO0AADdWSuW9x1J7wxDQ=",
    "originContent": "```js",
    "translatedContent": "```js"
  },
  {
    "row": 63,
    "rowsha": "dgioIE4bXndi9YUvy9aeBBPM7TDlOSxnbLSaq7qeu2I=",
    "originContent": "const NodeMonkey = require(\"node-monkey\")",
    "translatedContent": "const NodeMonkey = require(\"node-monkey\")"
  },
  {
    "row": 64,
    "rowsha": "sAEPRIa3O9yHiogn73DPLlQfjwkHGy7W9OxmevSkw1I=",
    "originContent": "NodeMonkey()",
    "translatedContent": "NodeMonkey()"
  },
  {
    "row": 65,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 66,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "Node Monkey는 또한 많은 구성 [옵션](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#options)과 명명된 인스턴스를 지원합니다. 호출 형식은 `NodeMonkey([options[, name])`입니다. 예를 들어, 로컬 콘솔 출력을 억제하고 연결된 브라우저나 터미널에서만 출력을 보려면 다음과 같이 할 수 있습니다:"
  },
  {
    "row": 67,
    "rowsha": "tKb5janilhezLjvce530lgeluvE8gwMcKTCF1lTt2fs=",
    "originContent": "Node Monkey also supports many configuration [options](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#options) and named instances. The call takes the form `NodeMonkey([options[, name])`. So, for example, to suppress local console output and only see output in your connected browser or terminal you might do something like this:",
    "translatedContent": ""
  },
  {
    "row": 68,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 69,
    "rowsha": "6IXHjyAaUImYsJ5BaklYyXzUO0AADdWSuW9x1J7wxDQ=",
    "originContent": "```js",
    "translatedContent": "```js"
  },
  {
    "row": 70,
    "rowsha": "dgioIE4bXndi9YUvy9aeBBPM7TDlOSxnbLSaq7qeu2I=",
    "originContent": "const NodeMonkey = require(\"node-monkey\")",
    "translatedContent": "const NodeMonkey = require(\"node-monkey\")"
  },
  {
    "row": 71,
    "rowsha": "qd/1lanr12SJwnjKB7UMPCE6CFkw8umdgFz3Zbw2EEc=",
    "originContent": "const monkey = NodeMonkey({",
    "translatedContent": "const monkey = NodeMonkey({"
  },
  {
    "row": 72,
    "rowsha": "7RDs6beNl7dvmNxdvctWd5vDJL9T+v2Q8brtwGSKK8k=",
    "originContent": "  server: {",
    "translatedContent": "  server: {"
  },
  {
    "row": 73,
    "rowsha": "T/cRWSOSWb6dcN/F6e1BVUWcZV0LedhHU7gvQk8mnlo=",
    "originContent": "    disableLocalOutput: true,",
    "translatedContent": "    disableLocalOutput: true,"
  },
  {
    "row": 74,
    "rowsha": "MoihNso+fIVk/t0zIqMIstBF8nPbUFXi4q6h+C0WIY4=",
    "originContent": "  },",
    "translatedContent": "  },"
  },
  {
    "row": 75,
    "rowsha": "LFiw8rCUlE0o8e0h4XBR/CGSFswMoMsS6UMdQ0STe2s=",
    "originContent": "})",
    "translatedContent": "})"
  },
  {
    "row": 76,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 77,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 78,
    "rowsha": "q7t/BA0PmgvzEhhqSJx/fUpP7OJS1u+uPMxu+05E3b8=",
    "originContent": "You can include Node Monkey in all the files within your app that you want and if used like the examples above, each call to `NodeMonkey()` will always return the same instance you first constructed, ignoring any options passed on subsequent calls. However, you may want to construct new instances with different options. To do so, give your instance a name:",
    "translatedContent": "앱 내에서 원하는 모든 파일에 Node Monkey를 포함할 수 있으며, 위의 예제처럼 사용하면 `NodeMonkey()`를 호출할 때마다 처음 생성한 동일한 인스턴스를 반환하며 이후 호출 시 전달된 옵션은 무시됩니다. 하지만, 다른 옵션으로 새 인스턴스를 생성하고 싶을 수 있습니다. 이렇게 하려면 인스턴스에 이름을 지정하세요:"
  },
  {
    "row": 79,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 80,
    "rowsha": "6IXHjyAaUImYsJ5BaklYyXzUO0AADdWSuW9x1J7wxDQ=",
    "originContent": "```js",
    "translatedContent": "```js"
  },
  {
    "row": 81,
    "rowsha": "dgioIE4bXndi9YUvy9aeBBPM7TDlOSxnbLSaq7qeu2I=",
    "originContent": "const NodeMonkey = require(\"node-monkey\")",
    "translatedContent": "const NodeMonkey = require(\"node-monkey\")"
  },
  {
    "row": 82,
    "rowsha": "yYek7ruil4Aph+7bnXZoa6zkMfYVykmvnL3NPOpCcPk=",
    "originContent": "const monkey1 = NodeMonkey() // Creates an instance named 'default'",
    "translatedContent": "const monkey1 = NodeMonkey() // Creates an instance named 'default'"
  },
  {
    "row": 83,
    "rowsha": "GxNU8+AjgZDspX4aQxFV7FVobv2bgpf5620o6bYOPHw=",
    "originContent": "const monkey2 = NodeMonkey(\"george\") // Creates a new instance with default options",
    "translatedContent": "const monkey2 = NodeMonkey(\"george\") // Creates a new instance with default options"
  },
  {
    "row": 84,
    "rowsha": "BD0HBNaJyDIyrnKIvPwNygifz/Lzl2Bcuw0ZJk+XA94=",
    "originContent": "const monkey3 = NodeMonkey(",
    "translatedContent": "const monkey3 = NodeMonkey("
  },
  {
    "row": 85,
    "rowsha": "gJrwwURMWBKq4xdicV4fIJo66iI0Fo+HuK4hhGzuZFI=",
    "originContent": "  {",
    "translatedContent": "  {"
  },
  {
    "row": 86,
    "rowsha": "1cu++QHeqF6WWmyXB/gJmNqsKMvhK4tbXYaThYnFj4E=",
    "originContent": "    // Creates a new instance with custom options named 'ninja'",
    "translatedContent": "    // Creates a new instance with custom options named 'ninja'"
  },
  {
    "row": 87,
    "rowsha": "arr8EyWtGMKwxEOR50jdafLw6HaxjMxrJldlccrNm+Y=",
    "originContent": "    server: {",
    "translatedContent": "    server: {"
  },
  {
    "row": 88,
    "rowsha": "rfBDzVtjYhvQQG2wkbhN1T25PWGr26ux7+HXddebS24=",
    "originContent": "      silent: true,",
    "translatedContent": "      silent: true,"
  },
  {
    "row": 89,
    "rowsha": "WGNt2RaDM5CS9wC/Od2XzvCKt+GnXlriS9x94uzxbUA=",
    "originContent": "    },",
    "translatedContent": "    },"
  },
  {
    "row": 90,
    "rowsha": "MoihNso+fIVk/t0zIqMIstBF8nPbUFXi4q6h+C0WIY4=",
    "originContent": "  },",
    "translatedContent": "  },"
  },
  {
    "row": 91,
    "rowsha": "E4tZNIQ1C78Zo/N4OsYlpclNsqdQnbIIfUF1s4Zw3Iw=",
    "originContent": "  \"ninja\",",
    "translatedContent": "  \"ninja\","
  },
  {
    "row": 92,
    "rowsha": "ul7FHQekrA6VFghwRDHVmgKyGk6VGswQUFqNxAfFAe4=",
    "originContent": ")",
    "translatedContent": ")"
  },
  {
    "row": 93,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 94,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 95,
    "rowsha": "Fp2enOwsaEz2O5IC1e4bmFMb55xWbHvgUPZ56c8JFNE=",
    "originContent": "If you don't specify a port for additional instances it will automatically be set for you and will just increment from the default (e.g. 50502, 50504 for the websocket server and 50503, 50505 for the SSH server).",
    "translatedContent": "추가 인스턴스에 대해 포트를 지정하지 않으면 자동으로 설정되며 기본값에서 증가합니다(예: 웹소켓 서버는 50502, 50504, SSH 서버는 50503, 50505)."
  },
  {
    "row": 96,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 97,
    "rowsha": "N6JhDqnyvbKcfbRgYFPb0rB74bQ/Ogx72QQ8LnxyqoY=",
    "originContent": "To get an already constructed instance in another file just call it with the name again:",
    "translatedContent": "다른 파일에서 이미 생성된 인스턴스를 가져오려면 이름으로 다시 호출하면 됩니다:"
  },
  {
    "row": 98,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 99,
    "rowsha": "6IXHjyAaUImYsJ5BaklYyXzUO0AADdWSuW9x1J7wxDQ=",
    "originContent": "```js",
    "translatedContent": "```js"
  },
  {
    "row": 100,
    "rowsha": "dgioIE4bXndi9YUvy9aeBBPM7TDlOSxnbLSaq7qeu2I=",
    "originContent": "const NodeMonkey = require(\"node-monkey\")",
    "translatedContent": "const NodeMonkey = require(\"node-monkey\")"
  },
  {
    "row": 101,
    "rowsha": "bXYglG77XOi9YxYEZeqjrBkdZjpkRSHJYGTsMzx4It4=",
    "originContent": "const monkey3 = NodeMonkey(\"ninja\")",
    "translatedContent": "const monkey3 = NodeMonkey(\"ninja\")"
  },
  {
    "row": 102,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 103,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 104,
    "rowsha": "rV+lzbApasX440V5jQzqU3QL0+35/ohrMb7DWHmCAIU=",
    "originContent": "When you start your app you will see the following output:",
    "translatedContent": "앱을 시작하면 다음과 같은 출력이 표시됩니다:"
  },
  {
    "row": 105,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 106,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 107,
    "rowsha": "3d/hKj81+2qxxNyTUy4b9Pse03N3U5zoXwfiXCPUdHA=",
    "originContent": "Node Monkey listening at http://0.0.0.0:50500",
    "translatedContent": "Node Monkey listening at http://0.0.0.0:50500"
  },
  {
    "row": 108,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 109,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "브라우저에 연결하려면 웹 브라우저에 표시된 주소(`http://0.0.0.0:50500` 이 경우)를 입력하세요. 기본 `host`와 `port` 바인딩을 변경하거나 자체 서버를 사용하는 경우 URL을 적절히 조정해야 합니다. 사용자 이름과 비밀번호를 입력하라는 메시지가 표시됩니다. 사용자를 설정하기 전까지 기본값은 `guest`와 `guest`입니다."
  },
  {
    "row": 110,
    "rowsha": "/GpdZTTrL6Gu1zvVKXV/cyC9+pwICiUKfHK2GY+aJFU=",
    "originContent": "To connect your browser simply go to the address it shows in your web browser (`http://0.0.0.0:50500` in this case). If you change the default `host` and `port` bindings or pass in your own server be sure to adjust your URL accordingly. It will prompt you for a username and password. Until you setup a user the default is `guest` and `guest`.",
    "translatedContent": ""
  },
  {
    "row": 111,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": "자체 서버를 제공하는 경우 웹 애플리케이션 콘솔에서 출력을 볼 수 있습니다. 자체 서버 제공 방법은 [문서](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#provide-your-own)를 참조하세요. Node Monkey 출력을 앱과 통합하려면 HTML 소스에 다음 `<script>` 태그를 포함해야 합니다:"
  },
  {
    "row": 112,
    "rowsha": "HZuT+emgwSWbMqoNrNB9eZvVXKOAr27yndgqgYAHVFo=",
    "originContent": "If you provide your own server you can view output in the console of your own web application instead. To see how to provide your own server check out the [documentation](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#provide-your-own). You will need to include the following `<script>` tag in your HTML source to integrate Node Monkey output with your app:",
    "translatedContent": ""
  },
  {
    "row": 113,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 114,
    "rowsha": "Uc5+AjuMoqnnDSvMf+9u+CTVledsHCbqDg0MxKvxsYw=",
    "originContent": "```html",
    "translatedContent": "```html"
  },
  {
    "row": 115,
    "rowsha": "j/tPNI9fiXsaUh50btJIrVLFOrtyQEBwRwUkQhUQXYY=",
    "originContent": "<script type=\"text/javascript\" src=\"http://0.0.0.0:50500/monkey.js\"></script>",
    "translatedContent": "<script type=\"text/javascript\" src=\"http://0.0.0.0:50500/monkey.js\"></script>"
  },
  {
    "row": 116,
    "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
    "originContent": "```",
    "translatedContent": "```"
  },
  {
    "row": 117,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 118,
    "rowsha": "HwP2XwH6rqXx6voAm2o+lIs2f3Bo64HyMvxG6cKxrUo=",
    "originContent": "**NOTE**: You do NOT have to refresh the page when you restart your Node.js application to continue to receive output. Node Monkey will automatically reconnect.",
    "translatedContent": "**NOTE**: You do NOT have to refresh the page when you restart your Node.js application to continue to receive output. Node Monkey will automatically reconnect."
  },
  {
    "row": 119,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 120,
    "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
    "originContent": "---",
    "translatedContent": "---"
  },
  {
    "row": 121,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  },
  {
    "row": 122,
    "rowsha": "yoLCRYoHasKanrNGnZWXF51vTpqjTxWpcf9rmGoZdlc=",
    "originContent": "### LICENSE: [MIT](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/LICENSE.md)",
    "translatedContent": "### LICENSE: [MIT](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/LICENSE.md)"
  },
  {
    "row": 123,
    "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
    "originContent": "",
    "translatedContent": ""
  }
]