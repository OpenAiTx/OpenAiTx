[
  {
    "Id": 1,
    "Content": "# Node Monkey\n\nA tool for inspecting, debugging and commanding Node.js applications through a web browser or SSH interface into your app (with your own custom commands).\n\nNode Monkey runs a simple server (or attaches to your existing server) and uses [Socket.IO](https://github.com/LearnBoost/socket.io) to create a websocket connection between the browser and server. Its primary feature captures anything that would normally be logged to the terminal and passes it to the browser for inspection.\n\nIt is incredibly easy to get started (see [Quick Usage](#quick-usage) below) but Node Monkey also provides additional features and significant flexibility for more advanced usage. You can actually SSH into your app where Node Monkey will provide a command line interface to execute your own custom commands. This can be very useful for debugging, monitoring or otherwise controlling your application while it is running. It provides authentication for security in production applications.\n\n## Contents\n\n- [Motivation](#motivation)\n- [Features](#features)\n- [Installation](#installation)\n- [Quick Usage](#quick-usage)\n- [Server](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md)\n  - [Provide your own](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#provide-your-own)\n  - [Options](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#options)\n  - [Properties](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#properties)\n  - [Methods](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#methods)\n- [Client (browser)](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md)\n  - [Properties](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md#properties)\n  - [Methods](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md#methods)\n- [SSH](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md)\n  - [Setup](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md#setup)\n  - [Usage](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md#usage)\n- [User Management](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/user-management.md)\n- [Contributing](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/contributing.md)\n- [Changelog](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/CHANGELOG.md)\n- [MIT License](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/LICENSE.md)\n\n## Motivation\n\nThe motivation for this project came from trying to debug a Node.js server I wrote that used websockets. I found it problematic trying to inspect objects with the terminal because the output was too large and not browsable. I tried using the built-in debugging that works with the [Chrome Developer Tools plugin](https://github.com/joyent/node/wiki/using-eclipse-as-node-applications-debugger) for Eclipse. Unfortunately, I ran into a problem where setting breakpoints to inspect objects would cause the server to stop responding to heartbeats thus causing the client to disconnect. This would entirely mess up my debugging efforts. All I really needed to do was have a good way to inspect objects.\n\nI searched Google and found projects like [node-inspector](https://github.com/dannycoates/node-inspector), which didn't work with the latest versions of Node, and [node-codein](http://thomashunter.name/blog/nodejs-console-object-debug-inspector/) which had many bugs. And neither worked with Firefox. So, Node Monkey was born!\n\n## Features\n\n- Log console output from your app to a browser console for easier inspection\n  - Provides a stream for those using Bunyan (see [here](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#nodemonkeybunyan_stream))",
    "ContentSha": "aSwodneWsCU90VNdZEyKD95GtzcyUieuO2jduYf6bMA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "# Node Monkey\n\nUn outil pour inspecter, déboguer et commander des applications Node.js via un navigateur web ou une interface SSH dans votre application (avec vos propres commandes personnalisées).\n\nNode Monkey exécute un serveur simple (ou se connecte à votre serveur existant) et utilise [Socket.IO](https://github.com/LearnBoost/socket.io) pour créer une connexion websocket entre le navigateur et le serveur. Sa fonctionnalité principale capture tout ce qui serait normalement enregistré dans le terminal et le transmet au navigateur pour inspection.\n\nIl est incroyablement facile de commencer (voir [Utilisation rapide](#quick-usage) ci-dessous) mais Node Monkey offre également des fonctionnalités supplémentaires et une flexibilité importante pour un usage plus avancé. Vous pouvez en fait vous connecter en SSH à votre application où Node Monkey fournira une interface en ligne de commande pour exécuter vos propres commandes personnalisées. Cela peut être très utile pour déboguer, surveiller ou contrôler autrement votre application pendant qu’elle fonctionne. Il fournit une authentification pour la sécurité dans les applications en production.\n\n## Contenu\n\n- [Motivation](#motivation)\n- [Fonctionnalités](#features)\n- [Installation](#installation)\n- [Utilisation rapide](#quick-usage)\n- [Serveur](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md)\n  - [Fournir le vôtre](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#provide-your-own)\n  - [Options](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#options)\n  - [Propriétés](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#properties)\n  - [Méthodes](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#methods)\n- [Client (navigateur)](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md)\n  - [Propriétés](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md#properties)\n  - [Méthodes](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md#methods)\n- [SSH](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md)\n  - [Configuration](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md#setup)\n  - [Utilisation](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md#usage)\n- [Gestion des utilisateurs](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/user-management.md)\n- [Contribuer](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/contributing.md)\n- [Journal des modifications](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/CHANGELOG.md)\n- [Licence MIT](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/LICENSE.md)\n\n## Motivation\n\nLa motivation pour ce projet est venue en essayant de déboguer un serveur Node.js que j’avais écrit et qui utilisait des websockets. J’ai trouvé problématique d’essayer d’inspecter des objets via le terminal car la sortie était trop volumineuse et non navigable. J’ai essayé d’utiliser le débogage intégré qui fonctionne avec le [plugin Chrome Developer Tools](https://github.com/joyent/node/wiki/using-eclipse-as-node-applications-debugger) pour Eclipse. Malheureusement, j’ai rencontré un problème où la mise en place de points d’arrêt pour inspecter des objets faisait que le serveur arrêtait de répondre aux heartbeats, provoquant ainsi la déconnexion du client. Cela sabotait complètement mes efforts de débogage. Tout ce dont j’avais vraiment besoin était un bon moyen d’inspecter les objets.\n\nJ’ai cherché sur Google et trouvé des projets comme [node-inspector](https://github.com/dannycoates/node-inspector), qui ne fonctionnait pas avec les dernières versions de Node, et [node-codein](http://thomashunter.name/blog/nodejs-console-object-debug-inspector/) qui avait beaucoup de bugs. Et aucun ne fonctionnait avec Firefox. Donc, Node Monkey est né !\n\n## Fonctionnalités\n\n- Journaliser la sortie console de votre application vers une console navigateur pour une inspection plus facile\n  - Fournit un flux pour ceux utilisant Bunyan (voir [ici](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#nodemonkeybunyan_stream))",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "WrgVZZZ5cXwufWD2gsNF4FO140rE/TYewVWQV2Tr0bM=",
        "originContent": "# Node Monkey",
        "translatedContent": "# Node Monkey"
      },
      {
        "row": 2,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 3,
        "rowsha": "cij9aa0ih6bcNlRWRdxAB3L+jGTl+zOcoU3UDaFNPGc=",
        "originContent": "A tool for inspecting, debugging and commanding Node.js applications through a web browser or SSH interface into your app (with your own custom commands).",
        "translatedContent": "Un outil pour inspecter, déboguer et commander des applications Node.js via un navigateur web ou une interface SSH dans votre application (avec vos propres commandes personnalisées)."
      },
      {
        "row": 4,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 5,
        "rowsha": "ZC7naBkWw7tJP6MuF3pt9iDbI+Xd/R8jViLCmthQEII=",
        "originContent": "Node Monkey runs a simple server (or attaches to your existing server) and uses [Socket.IO](https://github.com/LearnBoost/socket.io) to create a websocket connection between the browser and server. Its primary feature captures anything that would normally be logged to the terminal and passes it to the browser for inspection.",
        "translatedContent": "Node Monkey exécute un serveur simple (ou se connecte à votre serveur existant) et utilise [Socket.IO](https://github.com/LearnBoost/socket.io) pour créer une connexion websocket entre le navigateur et le serveur. Sa fonctionnalité principale capture tout ce qui serait normalement enregistré dans le terminal et le transmet au navigateur pour inspection."
      },
      {
        "row": 6,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 7,
        "rowsha": "Ts2M5PDDdKY6hwrcrRgxOC4zPrxXYhdeXaydNU9GyWA=",
        "originContent": "It is incredibly easy to get started (see [Quick Usage](#quick-usage) below) but Node Monkey also provides additional features and significant flexibility for more advanced usage. You can actually SSH into your app where Node Monkey will provide a command line interface to execute your own custom commands. This can be very useful for debugging, monitoring or otherwise controlling your application while it is running. It provides authentication for security in production applications.",
        "translatedContent": "Il est incroyablement facile de commencer (voir [Utilisation rapide](#quick-usage) ci-dessous) mais Node Monkey offre également des fonctionnalités supplémentaires et une flexibilité importante pour un usage plus avancé. Vous pouvez en fait vous connecter en SSH à votre application où Node Monkey fournira une interface en ligne de commande pour exécuter vos propres commandes personnalisées. Cela peut être très utile pour déboguer, surveiller ou contrôler autrement votre application pendant qu’elle fonctionne. Il fournit une authentification pour la sécurité dans les applications en production."
      },
      {
        "row": 8,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 9,
        "rowsha": "Yk5cZ3S6lnsBfRjsT/4ud8HP+iWBYqbxG0YlzTcI+ew=",
        "originContent": "## Contents",
        "translatedContent": "## Contenu"
      },
      {
        "row": 10,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 11,
        "rowsha": "koJPNwQV0763RVUH5Xo8MXGtao27l/0qDrHd6wToFbc=",
        "originContent": "- [Motivation](#motivation)",
        "translatedContent": "- [Motivation](#motivation)"
      },
      {
        "row": 12,
        "rowsha": "BI+Zz2NbZ0AX7YgD9EjinH4VCYulypQnBww5RTqTSDI=",
        "originContent": "- [Features](#features)",
        "translatedContent": "- [Fonctionnalités](#features)"
      },
      {
        "row": 13,
        "rowsha": "Wl12oCRmfvQwHCfuvjGuhBK05j+rCEJcS20CJyqXCVA=",
        "originContent": "- [Installation](#installation)",
        "translatedContent": "- [Installation](#installation)"
      },
      {
        "row": 14,
        "rowsha": "AiL7eT82E0SJNMvcB8N+s31V9LDapUnUmmqELQ/uUys=",
        "originContent": "- [Quick Usage](#quick-usage)",
        "translatedContent": "- [Utilisation rapide](#quick-usage)"
      },
      {
        "row": 15,
        "rowsha": "v+fixfONf/ZrQcMj8MX7bOu+z6w7B9z6Z5oLq1VGbQo=",
        "originContent": "- [Server](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md)",
        "translatedContent": "- [Serveur](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md)"
      },
      {
        "row": 16,
        "rowsha": "hy4U3QxBqcwvtrK7fUSf1vG/5CygV6qHpDeqFRERLhY=",
        "originContent": "  - [Provide your own](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#provide-your-own)",
        "translatedContent": "  - [Fournir le vôtre](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#provide-your-own)"
      },
      {
        "row": 17,
        "rowsha": "hW1tvWM26kyT+Rn4d/s3H4oIYHKd9ay5wOJpicDCmOM=",
        "originContent": "  - [Options](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#options)",
        "translatedContent": "  - [Options](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#options)"
      },
      {
        "row": 18,
        "rowsha": "2Y7lmUPVmKziUZNwTN26qBiHaaNNnYoeQAp8hAi6WtQ=",
        "originContent": "  - [Properties](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#properties)",
        "translatedContent": "  - [Propriétés](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#properties)"
      },
      {
        "row": 19,
        "rowsha": "r41X7VDtNYZ8iXber7yeqx0tmGTBbjOdXsVbK3rxhGQ=",
        "originContent": "  - [Methods](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#methods)",
        "translatedContent": "  - [Méthodes](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#methods)"
      },
      {
        "row": 20,
        "rowsha": "RldAWjKvLcRlWEi0Zehqn8ILPEIHAYDbIkBnHtPbl8k=",
        "originContent": "- [Client (browser)](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md)",
        "translatedContent": "- [Client (navigateur)](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md)"
      },
      {
        "row": 21,
        "rowsha": "7TT95IUKMYTusS11KMukxQ2hNXRrhpi1FshjkrHwkuA=",
        "originContent": "  - [Properties](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md#properties)",
        "translatedContent": "  - [Propriétés](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md#properties)"
      },
      {
        "row": 22,
        "rowsha": "Q4o52bH5oRZcuUq+Rx8PHto7f9H931bWkxE7RQmeWF8=",
        "originContent": "  - [Methods](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md#methods)",
        "translatedContent": "  - [Méthodes](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/client.md#methods)"
      },
      {
        "row": 23,
        "rowsha": "OuyfwZLBpN1lzRLhfTrm2szbG37XYnqVfQSj+HSB9gA=",
        "originContent": "- [SSH](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md)",
        "translatedContent": "- [SSH](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md)"
      },
      {
        "row": 24,
        "rowsha": "KgAqvh434VrR30mxYNmKM6Pf1iTxhPDwKFchjzspZu8=",
        "originContent": "  - [Setup](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md#setup)",
        "translatedContent": "  - [Configuration](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md#setup)"
      },
      {
        "row": 25,
        "rowsha": "M1hJSlvpx85l4aBR90vyWmoIUwRP5o8eVxrB14wVO4s=",
        "originContent": "  - [Usage](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md#usage)",
        "translatedContent": "  - [Utilisation](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/ssh.md#usage)"
      },
      {
        "row": 26,
        "rowsha": "CCBSFPS0pammPFaIrfAwcsxZHYdNLxYEaYYA8d43a+Y=",
        "originContent": "- [User Management](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/user-management.md)",
        "translatedContent": "- [Gestion des utilisateurs](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/user-management.md)"
      },
      {
        "row": 27,
        "rowsha": "LN4vYh0XwH27FcFQfJNC+NL4B4eRGz2i5zXqfc2XmSE=",
        "originContent": "- [Contributing](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/contributing.md)",
        "translatedContent": "- [Contribuer](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/contributing.md)"
      },
      {
        "row": 28,
        "rowsha": "DwbQUreTERUXzlksX1yv/MQ/hws2dBI0IHca5N5iARA=",
        "originContent": "- [Changelog](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/CHANGELOG.md)",
        "translatedContent": "- [Journal des modifications](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/CHANGELOG.md)"
      },
      {
        "row": 29,
        "rowsha": "tYHG8yiD8vGl+kaUTaoYd3fRIZV31BiQlFpAfV1P8Wg=",
        "originContent": "- [MIT License](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/LICENSE.md)",
        "translatedContent": "- [Licence MIT](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/LICENSE.md)"
      },
      {
        "row": 30,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 31,
        "rowsha": "XkjmO8GZw+NPlqtsKIz94hXoCCSSximfmFKrLHYsZ2I=",
        "originContent": "## Motivation",
        "translatedContent": "## Motivation"
      },
      {
        "row": 32,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 33,
        "rowsha": "smUU14CTa3lFvLxBIyho/eEPQnU46LTbc+JPp6zRHZI=",
        "originContent": "The motivation for this project came from trying to debug a Node.js server I wrote that used websockets. I found it problematic trying to inspect objects with the terminal because the output was too large and not browsable. I tried using the built-in debugging that works with the [Chrome Developer Tools plugin](https://github.com/joyent/node/wiki/using-eclipse-as-node-applications-debugger) for Eclipse. Unfortunately, I ran into a problem where setting breakpoints to inspect objects would cause the server to stop responding to heartbeats thus causing the client to disconnect. This would entirely mess up my debugging efforts. All I really needed to do was have a good way to inspect objects.",
        "translatedContent": "La motivation pour ce projet est venue en essayant de déboguer un serveur Node.js que j’avais écrit et qui utilisait des websockets. J’ai trouvé problématique d’essayer d’inspecter des objets via le terminal car la sortie était trop volumineuse et non navigable. J’ai essayé d’utiliser le débogage intégré qui fonctionne avec le [plugin Chrome Developer Tools](https://github.com/joyent/node/wiki/using-eclipse-as-node-applications-debugger) pour Eclipse. Malheureusement, j’ai rencontré un problème où la mise en place de points d’arrêt pour inspecter des objets faisait que le serveur arrêtait de répondre aux heartbeats, provoquant ainsi la déconnexion du client. Cela sabotait complètement mes efforts de débogage. Tout ce dont j’avais vraiment besoin était un bon moyen d’inspecter les objets."
      },
      {
        "row": 34,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 35,
        "rowsha": "SJ2DhRpJZXaBfHPjCSEefAjnVLtMec5BH1LtEBb4bDA=",
        "originContent": "I searched Google and found projects like [node-inspector](https://github.com/dannycoates/node-inspector), which didn't work with the latest versions of Node, and [node-codein](http://thomashunter.name/blog/nodejs-console-object-debug-inspector/) which had many bugs. And neither worked with Firefox. So, Node Monkey was born!",
        "translatedContent": "J’ai cherché sur Google et trouvé des projets comme [node-inspector](https://github.com/dannycoates/node-inspector), qui ne fonctionnait pas avec les dernières versions de Node, et [node-codein](http://thomashunter.name/blog/nodejs-console-object-debug-inspector/) qui avait beaucoup de bugs. Et aucun ne fonctionnait avec Firefox. Donc, Node Monkey est né !"
      },
      {
        "row": 36,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 37,
        "rowsha": "nrVeE3oDH0tNFm9CX5stkYPKAaCrnePTkJZtrLHmoDg=",
        "originContent": "## Features",
        "translatedContent": "## Fonctionnalités"
      },
      {
        "row": 38,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 39,
        "rowsha": "Ssau9cB04jImPKzA4hqhqag7MZ8JNVydeV9Ss/cjD54=",
        "originContent": "- Log console output from your app to a browser console for easier inspection",
        "translatedContent": "- Journaliser la sortie console de votre application vers une console navigateur pour une inspection plus facile"
      },
      {
        "row": 40,
        "rowsha": "+8qk7vPjDSMQ/c1LeKdGhOUr7O26KX+iRrXGl6rGcGY=",
        "originContent": "  - Provides a stream for those using Bunyan (see [here](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#nodemonkeybunyan_stream))",
        "translatedContent": "  - Fournit un flux pour ceux utilisant Bunyan (voir [ici](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#nodemonkeybunyan_stream))"
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 2,
    "Content": "- Provides SSH capability so you can get a shell into your app for inspection, debugging or controlling your app\n- Register commands for your application that can be executed from the browser console or the SSH interface\n\n## Installation\n",
    "ContentSha": "AvJxUeegmsgIF/x7eeoDfZw5GyVw3gFFlqp0XPq0+Tk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "- Fournit une capacité SSH afin que vous puissiez accéder à un shell dans votre application pour inspection, débogage ou contrôle de votre application  \n- Enregistrez des commandes pour votre application qui peuvent être exécutées depuis la console du navigateur ou l'interface SSH  \n\n## Installation\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "ckj9ucqoesT0jdIGn93uK/NyUgUG4zg0a0+ORoIJkSg=",
        "originContent": "- Provides SSH capability so you can get a shell into your app for inspection, debugging or controlling your app",
        "translatedContent": "- Fournit une capacité SSH afin que vous puissiez accéder à un shell dans votre application pour inspection, débogage ou contrôle de votre application  "
      },
      {
        "row": 2,
        "rowsha": "kyh6rLqgoySImC91u7DJ5ddFs4e8PMIL7whEinJptHI=",
        "originContent": "- Register commands for your application that can be executed from the browser console or the SSH interface",
        "translatedContent": "- Enregistrez des commandes pour votre application qui peuvent être exécutées depuis la console du navigateur ou l'interface SSH  "
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "oV0SUDvwD2VN8Gi9nlr2JZ2xcDrASmE2W5kc5SVX5eo=",
        "originContent": "## Installation",
        "translatedContent": "## Installation"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 3,
    "Content": "```\nnpm install --save node-monkey\n```",
    "ContentSha": "mhWSqXGTprqrAnpKtQ/QNFwD7r6rWSUPcVSCVBVD5r8=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nnpm install --save node-monkey\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "4n7awNIMgtQawV3nEpc0T5k+pl0Q/gG5lxeiDAngjcY=",
        "originContent": "npm install --save node-monkey",
        "translatedContent": "npm install --save node-monkey"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 4,
    "Content": "\nIf you're interested in testing experimental and upcoming features, run this instead:\n",
    "ContentSha": "2SbtyfubQC1twf7yDNMLAeHGuOmSporu4VO1jnzpyyg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nSi vous souhaitez tester des fonctionnalités expérimentales et à venir, exécutez ceci à la place :\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "B1Uqf+ZoeuledTlWF4+ai2+T308TG5rrUaamcE4GshU=",
        "originContent": "If you're interested in testing experimental and upcoming features, run this instead:",
        "translatedContent": "Si vous souhaitez tester des fonctionnalités expérimentales et à venir, exécutez ceci à la place :"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 5,
    "Content": "```\nnpm install --save node-monkey@next\n```",
    "ContentSha": "mviG88HPHbmaVcVKFHRCtA8k0x4F4Q3bmPMqslBThpY=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nnpm install --save node-monkey@next\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "TuKP279PfbsgspVPxmfbP1ONK7ZdpfQidP/U5vZmZ3E=",
        "originContent": "npm install --save node-monkey@next",
        "translatedContent": "npm install --save node-monkey@next"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 6,
    "Content": "\n## Quick Usage\n\nAlthough Node Monkey supports many features, getting started is designed to be extremely easy. All you have to do is include a line or two in your application. Anything that is logged to the console after this will show up in the browser console once connected. It captures the output to most `console.*` function calls and forwards the output to the browser for inspection.\n\nThe simplest usage looks like this:\n",
    "ContentSha": "ggrGfMbmVlVON4DC1YfqH3CH+haC4e3Bop2Is+cCB2U=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n## Utilisation rapide\n\nBien que Node Monkey prenne en charge de nombreuses fonctionnalités, la prise en main est conçue pour être extrêmement facile. Il vous suffit d’inclure une ou deux lignes dans votre application. Tout ce qui est enregistré dans la console après cela apparaîtra dans la console du navigateur une fois connecté. Il capture la sortie de la plupart des appels de fonction `console.*` et transmet la sortie au navigateur pour inspection.\n\nL’utilisation la plus simple ressemble à ceci :\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "Ql0HOBoba8xpLHzuJb+aW8698vPKVJ13/HT4itPoSxU=",
        "originContent": "## Quick Usage",
        "translatedContent": "## Utilisation rapide"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "+XhJRHbjXHlE+KPBGBe4EGjpIbmiQDlgnyTZmj7KTuU=",
        "originContent": "Although Node Monkey supports many features, getting started is designed to be extremely easy. All you have to do is include a line or two in your application. Anything that is logged to the console after this will show up in the browser console once connected. It captures the output to most `console.*` function calls and forwards the output to the browser for inspection.",
        "translatedContent": "Bien que Node Monkey prenne en charge de nombreuses fonctionnalités, la prise en main est conçue pour être extrêmement facile. Il vous suffit d’inclure une ou deux lignes dans votre application. Tout ce qui est enregistré dans la console après cela apparaîtra dans la console du navigateur une fois connecté. Il capture la sortie de la plupart des appels de fonction `console.*` et transmet la sortie au navigateur pour inspection."
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "F7ouJTHCmLfUydRWk1bomE52/VJFtEf8yvrimLNR8Fs=",
        "originContent": "The simplest usage looks like this:",
        "translatedContent": "L’utilisation la plus simple ressemble à ceci :"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 7,
    "Content": "```js\nconst NodeMonkey = require(\"node-monkey\")\nNodeMonkey()\n```",
    "ContentSha": "ZuZhRHP+woEKcUhC7GtBmS77IXgryQxtnfAM4tuP5rg=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```js\nconst NodeMonkey = require(\"node-monkey\")\nNodeMonkey()\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "6IXHjyAaUImYsJ5BaklYyXzUO0AADdWSuW9x1J7wxDQ=",
        "originContent": "```js",
        "translatedContent": "```js"
      },
      {
        "row": 2,
        "rowsha": "dgioIE4bXndi9YUvy9aeBBPM7TDlOSxnbLSaq7qeu2I=",
        "originContent": "const NodeMonkey = require(\"node-monkey\")",
        "translatedContent": "const NodeMonkey = require(\"node-monkey\")"
      },
      {
        "row": 3,
        "rowsha": "sAEPRIa3O9yHiogn73DPLlQfjwkHGy7W9OxmevSkw1I=",
        "originContent": "NodeMonkey()",
        "translatedContent": "NodeMonkey()"
      },
      {
        "row": 4,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 8,
    "Content": "\nNode Monkey also supports many configuration [options](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#options) and named instances. The call takes the form `NodeMonkey([options[, name])`. So, for example, to suppress local console output and only see output in your connected browser or terminal you might do something like this:\n",
    "ContentSha": "e+w62nMLVUTZ+hl1q/lGy1FeSCE1YVTkFKSdsT9TQFU=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nNode Monkey prend également en charge de nombreuses [options](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#options) de configuration et des instances nommées. L'appel prend la forme `NodeMonkey([options[, name])`. Par exemple, pour supprimer la sortie locale de la console et ne voir la sortie que dans votre navigateur ou terminal connecté, vous pourriez faire quelque chose comme ceci :\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "tKb5janilhezLjvce530lgeluvE8gwMcKTCF1lTt2fs=",
        "originContent": "Node Monkey also supports many configuration [options](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#options) and named instances. The call takes the form `NodeMonkey([options[, name])`. So, for example, to suppress local console output and only see output in your connected browser or terminal you might do something like this:",
        "translatedContent": "Node Monkey prend également en charge de nombreuses [options](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#options) de configuration et des instances nommées. L'appel prend la forme `NodeMonkey([options[, name])`. Par exemple, pour supprimer la sortie locale de la console et ne voir la sortie que dans votre navigateur ou terminal connecté, vous pourriez faire quelque chose comme ceci :"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 9,
    "Content": "```js\nconst NodeMonkey = require(\"node-monkey\")\nconst monkey = NodeMonkey({\n  server: {\n    disableLocalOutput: true,\n  },\n})\n```",
    "ContentSha": "w0wV8DuPhB5PGixFSDmf4/b+qXGsyDPQh7dqSeBLQmQ=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```js\nconst NodeMonkey = require(\"node-monkey\")\nconst monkey = NodeMonkey({\n  server: {\n    disableLocalOutput: true,\n  },\n})\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "6IXHjyAaUImYsJ5BaklYyXzUO0AADdWSuW9x1J7wxDQ=",
        "originContent": "```js",
        "translatedContent": "```js"
      },
      {
        "row": 2,
        "rowsha": "dgioIE4bXndi9YUvy9aeBBPM7TDlOSxnbLSaq7qeu2I=",
        "originContent": "const NodeMonkey = require(\"node-monkey\")",
        "translatedContent": "const NodeMonkey = require(\"node-monkey\")"
      },
      {
        "row": 3,
        "rowsha": "qd/1lanr12SJwnjKB7UMPCE6CFkw8umdgFz3Zbw2EEc=",
        "originContent": "const monkey = NodeMonkey({",
        "translatedContent": "const monkey = NodeMonkey({"
      },
      {
        "row": 4,
        "rowsha": "7RDs6beNl7dvmNxdvctWd5vDJL9T+v2Q8brtwGSKK8k=",
        "originContent": "  server: {",
        "translatedContent": "  server: {"
      },
      {
        "row": 5,
        "rowsha": "T/cRWSOSWb6dcN/F6e1BVUWcZV0LedhHU7gvQk8mnlo=",
        "originContent": "    disableLocalOutput: true,",
        "translatedContent": "    disableLocalOutput: true,"
      },
      {
        "row": 6,
        "rowsha": "MoihNso+fIVk/t0zIqMIstBF8nPbUFXi4q6h+C0WIY4=",
        "originContent": "  },",
        "translatedContent": "  },"
      },
      {
        "row": 7,
        "rowsha": "LFiw8rCUlE0o8e0h4XBR/CGSFswMoMsS6UMdQ0STe2s=",
        "originContent": "})",
        "translatedContent": "})"
      },
      {
        "row": 8,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 10,
    "Content": "\nYou can include Node Monkey in all the files within your app that you want and if used like the examples above, each call to `NodeMonkey()` will always return the same instance you first constructed, ignoring any options passed on subsequent calls. However, you may want to construct new instances with different options. To do so, give your instance a name:\n",
    "ContentSha": "VDnjVKF2H67Pwt5rTO3HQ/PA8maZFsXtCLsIGlHNuNM=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nVous pouvez inclure Node Monkey dans tous les fichiers de votre application que vous souhaitez et si vous l’utilisez comme dans les exemples ci-dessus, chaque appel à `NodeMonkey()` renverra toujours la même instance que celle que vous avez construite en premier, en ignorant les options passées lors des appels ultérieurs. Cependant, vous pouvez souhaiter créer de nouvelles instances avec des options différentes. Pour ce faire, donnez un nom à votre instance :\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "q7t/BA0PmgvzEhhqSJx/fUpP7OJS1u+uPMxu+05E3b8=",
        "originContent": "You can include Node Monkey in all the files within your app that you want and if used like the examples above, each call to `NodeMonkey()` will always return the same instance you first constructed, ignoring any options passed on subsequent calls. However, you may want to construct new instances with different options. To do so, give your instance a name:",
        "translatedContent": "Vous pouvez inclure Node Monkey dans tous les fichiers de votre application que vous souhaitez et si vous l’utilisez comme dans les exemples ci-dessus, chaque appel à `NodeMonkey()` renverra toujours la même instance que celle que vous avez construite en premier, en ignorant les options passées lors des appels ultérieurs. Cependant, vous pouvez souhaiter créer de nouvelles instances avec des options différentes. Pour ce faire, donnez un nom à votre instance :"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 11,
    "Content": "```js\nconst NodeMonkey = require(\"node-monkey\")\nconst monkey1 = NodeMonkey() // Creates an instance named 'default'\nconst monkey2 = NodeMonkey(\"george\") // Creates a new instance with default options\nconst monkey3 = NodeMonkey(\n  {\n    // Creates a new instance with custom options named 'ninja'\n    server: {\n      silent: true,\n    },\n  },\n  \"ninja\",\n)\n```",
    "ContentSha": "jG3kC8fHF6shhcmDbj51suCafmVpc3sJEtuwCOFifuk=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```js\nconst NodeMonkey = require(\"node-monkey\")\nconst monkey1 = NodeMonkey() // Creates an instance named 'default'\nconst monkey2 = NodeMonkey(\"george\") // Creates a new instance with default options\nconst monkey3 = NodeMonkey(\n  {\n    // Creates a new instance with custom options named 'ninja'\n    server: {\n      silent: true,\n    },\n  },\n  \"ninja\",\n)\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "6IXHjyAaUImYsJ5BaklYyXzUO0AADdWSuW9x1J7wxDQ=",
        "originContent": "```js",
        "translatedContent": "```js"
      },
      {
        "row": 2,
        "rowsha": "dgioIE4bXndi9YUvy9aeBBPM7TDlOSxnbLSaq7qeu2I=",
        "originContent": "const NodeMonkey = require(\"node-monkey\")",
        "translatedContent": "const NodeMonkey = require(\"node-monkey\")"
      },
      {
        "row": 3,
        "rowsha": "yYek7ruil4Aph+7bnXZoa6zkMfYVykmvnL3NPOpCcPk=",
        "originContent": "const monkey1 = NodeMonkey() // Creates an instance named 'default'",
        "translatedContent": "const monkey1 = NodeMonkey() // Creates an instance named 'default'"
      },
      {
        "row": 4,
        "rowsha": "GxNU8+AjgZDspX4aQxFV7FVobv2bgpf5620o6bYOPHw=",
        "originContent": "const monkey2 = NodeMonkey(\"george\") // Creates a new instance with default options",
        "translatedContent": "const monkey2 = NodeMonkey(\"george\") // Creates a new instance with default options"
      },
      {
        "row": 5,
        "rowsha": "BD0HBNaJyDIyrnKIvPwNygifz/Lzl2Bcuw0ZJk+XA94=",
        "originContent": "const monkey3 = NodeMonkey(",
        "translatedContent": "const monkey3 = NodeMonkey("
      },
      {
        "row": 6,
        "rowsha": "gJrwwURMWBKq4xdicV4fIJo66iI0Fo+HuK4hhGzuZFI=",
        "originContent": "  {",
        "translatedContent": "  {"
      },
      {
        "row": 7,
        "rowsha": "1cu++QHeqF6WWmyXB/gJmNqsKMvhK4tbXYaThYnFj4E=",
        "originContent": "    // Creates a new instance with custom options named 'ninja'",
        "translatedContent": "    // Creates a new instance with custom options named 'ninja'"
      },
      {
        "row": 8,
        "rowsha": "arr8EyWtGMKwxEOR50jdafLw6HaxjMxrJldlccrNm+Y=",
        "originContent": "    server: {",
        "translatedContent": "    server: {"
      },
      {
        "row": 9,
        "rowsha": "rfBDzVtjYhvQQG2wkbhN1T25PWGr26ux7+HXddebS24=",
        "originContent": "      silent: true,",
        "translatedContent": "      silent: true,"
      },
      {
        "row": 10,
        "rowsha": "WGNt2RaDM5CS9wC/Od2XzvCKt+GnXlriS9x94uzxbUA=",
        "originContent": "    },",
        "translatedContent": "    },"
      },
      {
        "row": 11,
        "rowsha": "MoihNso+fIVk/t0zIqMIstBF8nPbUFXi4q6h+C0WIY4=",
        "originContent": "  },",
        "translatedContent": "  },"
      },
      {
        "row": 12,
        "rowsha": "E4tZNIQ1C78Zo/N4OsYlpclNsqdQnbIIfUF1s4Zw3Iw=",
        "originContent": "  \"ninja\",",
        "translatedContent": "  \"ninja\","
      },
      {
        "row": 13,
        "rowsha": "ul7FHQekrA6VFghwRDHVmgKyGk6VGswQUFqNxAfFAe4=",
        "originContent": ")",
        "translatedContent": ")"
      },
      {
        "row": 14,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 12,
    "Content": "\nIf you don't specify a port for additional instances it will automatically be set for you and will just increment from the default (e.g. 50502, 50504 for the websocket server and 50503, 50505 for the SSH server).\n\nTo get an already constructed instance in another file just call it with the name again:\n",
    "ContentSha": "QZXzU54GGlVQF45VdJyQOz21n+asbHFXsm1m9k+7goc=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nSi vous ne spécifiez pas de port pour les instances supplémentaires, il sera automatiquement défini pour vous et s'incrémentera simplement à partir de la valeur par défaut (par exemple 50502, 50504 pour le serveur websocket et 50503, 50505 pour le serveur SSH).\n\nPour obtenir une instance déjà construite dans un autre fichier, il suffit de l'appeler à nouveau par son nom :\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "Fp2enOwsaEz2O5IC1e4bmFMb55xWbHvgUPZ56c8JFNE=",
        "originContent": "If you don't specify a port for additional instances it will automatically be set for you and will just increment from the default (e.g. 50502, 50504 for the websocket server and 50503, 50505 for the SSH server).",
        "translatedContent": "Si vous ne spécifiez pas de port pour les instances supplémentaires, il sera automatiquement défini pour vous et s'incrémentera simplement à partir de la valeur par défaut (par exemple 50502, 50504 pour le serveur websocket et 50503, 50505 pour le serveur SSH)."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "N6JhDqnyvbKcfbRgYFPb0rB74bQ/Ogx72QQ8LnxyqoY=",
        "originContent": "To get an already constructed instance in another file just call it with the name again:",
        "translatedContent": "Pour obtenir une instance déjà construite dans un autre fichier, il suffit de l'appeler à nouveau par son nom :"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 13,
    "Content": "```js\nconst NodeMonkey = require(\"node-monkey\")\nconst monkey3 = NodeMonkey(\"ninja\")\n```",
    "ContentSha": "xxxliyUASDc4jggjcTRHxPcp8u1blGzUzNvMxMFnWJA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```js\nconst NodeMonkey = require(\"node-monkey\")\nconst monkey3 = NodeMonkey(\"ninja\")\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "6IXHjyAaUImYsJ5BaklYyXzUO0AADdWSuW9x1J7wxDQ=",
        "originContent": "```js",
        "translatedContent": "```js"
      },
      {
        "row": 2,
        "rowsha": "dgioIE4bXndi9YUvy9aeBBPM7TDlOSxnbLSaq7qeu2I=",
        "originContent": "const NodeMonkey = require(\"node-monkey\")",
        "translatedContent": "const NodeMonkey = require(\"node-monkey\")"
      },
      {
        "row": 3,
        "rowsha": "bXYglG77XOi9YxYEZeqjrBkdZjpkRSHJYGTsMzx4It4=",
        "originContent": "const monkey3 = NodeMonkey(\"ninja\")",
        "translatedContent": "const monkey3 = NodeMonkey(\"ninja\")"
      },
      {
        "row": 4,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 14,
    "Content": "\nWhen you start your app you will see the following output:\n",
    "ContentSha": "5j1KGuqGvdJ3LX/WP3+xYmh4fVlS5a5i9R0xOzPRYbA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nLorsque vous démarrez votre application, vous verrez la sortie suivante :\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "rV+lzbApasX440V5jQzqU3QL0+35/ohrMb7DWHmCAIU=",
        "originContent": "When you start your app you will see the following output:",
        "translatedContent": "Lorsque vous démarrez votre application, vous verrez la sortie suivante :"
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 15,
    "Content": "```\nNode Monkey listening at http://0.0.0.0:50500\n```",
    "ContentSha": "LWNyAgyVtCHhAmpdkOfI6S0Jygp2xwjUUUR0nppn0O0=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```\nNode Monkey listening at http://0.0.0.0:50500\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      },
      {
        "row": 2,
        "rowsha": "3d/hKj81+2qxxNyTUy4b9Pse03N3U5zoXwfiXCPUdHA=",
        "originContent": "Node Monkey listening at http://0.0.0.0:50500",
        "translatedContent": "Node Monkey listening at http://0.0.0.0:50500"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 16,
    "Content": "\nTo connect your browser simply go to the address it shows in your web browser (`http://0.0.0.0:50500` in this case). If you change the default `host` and `port` bindings or pass in your own server be sure to adjust your URL accordingly. It will prompt you for a username and password. Until you setup a user the default is `guest` and `guest`.\n\nIf you provide your own server you can view output in the console of your own web application instead. To see how to provide your own server check out the [documentation](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#provide-your-own). You will need to include the following `<script>` tag in your HTML source to integrate Node Monkey output with your app:\n",
    "ContentSha": "LvffI6dMmZvyvJRCH8un/yWM8GvCJP5xIX03Uqa0m1Y=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\nPour connecter votre navigateur, allez simplement à l'adresse affichée dans votre navigateur web (`http://0.0.0.0:50500` dans ce cas). Si vous modifiez les liaisons `host` et `port` par défaut ou utilisez votre propre serveur, assurez-vous d'ajuster l'URL en conséquence. Il vous demandera un nom d'utilisateur et un mot de passe. Jusqu'à ce que vous configuriez un utilisateur, les identifiants par défaut sont `guest` et `guest`.\n\nSi vous fournissez votre propre serveur, vous pouvez voir la sortie dans la console de votre propre application web. Pour savoir comment fournir votre propre serveur, consultez la [documentation](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#provide-your-own). Vous devrez inclure la balise `<script>` suivante dans le code source HTML pour intégrer la sortie de Node Monkey à votre application :\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "/GpdZTTrL6Gu1zvVKXV/cyC9+pwICiUKfHK2GY+aJFU=",
        "originContent": "To connect your browser simply go to the address it shows in your web browser (`http://0.0.0.0:50500` in this case). If you change the default `host` and `port` bindings or pass in your own server be sure to adjust your URL accordingly. It will prompt you for a username and password. Until you setup a user the default is `guest` and `guest`.",
        "translatedContent": "Pour connecter votre navigateur, allez simplement à l'adresse affichée dans votre navigateur web (`http://0.0.0.0:50500` dans ce cas). Si vous modifiez les liaisons `host` et `port` par défaut ou utilisez votre propre serveur, assurez-vous d'ajuster l'URL en conséquence. Il vous demandera un nom d'utilisateur et un mot de passe. Jusqu'à ce que vous configuriez un utilisateur, les identifiants par défaut sont `guest` et `guest`."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "HZuT+emgwSWbMqoNrNB9eZvVXKOAr27yndgqgYAHVFo=",
        "originContent": "If you provide your own server you can view output in the console of your own web application instead. To see how to provide your own server check out the [documentation](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#provide-your-own). You will need to include the following `<script>` tag in your HTML source to integrate Node Monkey output with your app:",
        "translatedContent": "Si vous fournissez votre propre serveur, vous pouvez voir la sortie dans la console de votre propre application web. Pour savoir comment fournir votre propre serveur, consultez la [documentation](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/doc/usage/server.md#provide-your-own). Vous devrez inclure la balise `<script>` suivante dans le code source HTML pour intégrer la sortie de Node Monkey à votre application :"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  },
  {
    "Id": 17,
    "Content": "```html\n<script type=\"text/javascript\" src=\"http://0.0.0.0:50500/monkey.js\"></script>\n```",
    "ContentSha": "32NZ/G7MYREIp7Y4wLmMefG0ch1h8LUMJNUKGKGmtXA=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "```html\n<script type=\"text/javascript\" src=\"http://0.0.0.0:50500/monkey.js\"></script>\n```",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "Uc5+AjuMoqnnDSvMf+9u+CTVledsHCbqDg0MxKvxsYw=",
        "originContent": "```html",
        "translatedContent": "```html"
      },
      {
        "row": 2,
        "rowsha": "j/tPNI9fiXsaUh50btJIrVLFOrtyQEBwRwUkQhUQXYY=",
        "originContent": "<script type=\"text/javascript\" src=\"http://0.0.0.0:50500/monkey.js\"></script>",
        "translatedContent": "<script type=\"text/javascript\" src=\"http://0.0.0.0:50500/monkey.js\"></script>"
      },
      {
        "row": 3,
        "rowsha": "8bkBhHOQsO1+N058HkZOwXtGpCfEh6WtbL0pBkBQg9U=",
        "originContent": "```",
        "translatedContent": "```"
      }
    ],
    "IsCodeBlock": true
  },
  {
    "Id": 18,
    "Content": "\n**NOTE**: You do NOT have to refresh the page when you restart your Node.js application to continue to receive output. Node Monkey will automatically reconnect.\n\n---\n\n### LICENSE: [MIT](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/LICENSE.md)\n",
    "ContentSha": "lmLeG/JzNtwm2Bzl6+SehRfo/vm/psCCMXOL0wVrz5E=",
    "SectionType": "",
    "StartLine": 0,
    "EndLine": 0,
    "Translation": "\n**NOTE**: You do NOT have to refresh the page when you restart your Node.js application to continue to receive output. Node Monkey will automatically reconnect.\n\n---\n\n### LICENSE: [MIT](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/LICENSE.md)\n",
    "Status": "ok",
    "RowTranslations": [
      {
        "row": 1,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 2,
        "rowsha": "HwP2XwH6rqXx6voAm2o+lIs2f3Bo64HyMvxG6cKxrUo=",
        "originContent": "**NOTE**: You do NOT have to refresh the page when you restart your Node.js application to continue to receive output. Node Monkey will automatically reconnect.",
        "translatedContent": "**NOTE**: You do NOT have to refresh the page when you restart your Node.js application to continue to receive output. Node Monkey will automatically reconnect."
      },
      {
        "row": 3,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 4,
        "rowsha": "yz+R1U7uMOU+NbK5mQX3Dxae1Un9eJCdPawt78ntjTs=",
        "originContent": "---",
        "translatedContent": "---"
      },
      {
        "row": 5,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      },
      {
        "row": 6,
        "rowsha": "yoLCRYoHasKanrNGnZWXF51vTpqjTxWpcf9rmGoZdlc=",
        "originContent": "### LICENSE: [MIT](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/LICENSE.md)",
        "translatedContent": "### LICENSE: [MIT](https://raw.githubusercontent.com/jwarkentin/node-monkey/master/LICENSE.md)"
      },
      {
        "row": 7,
        "rowsha": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",
        "originContent": "",
        "translatedContent": ""
      }
    ],
    "IsCodeBlock": false
  }
]